
tsk6_hello_world.elf:     file format elf32-littlenios2
tsk6_hello_world.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x008001c0

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x0000fb30 memsz 0x0000fb30 flags r-x
    LOAD off    0x00010b50 vaddr 0x0080fb50 paddr 0x0081163c align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00013128 vaddr 0x00813128 paddr 0x00813128 align 2**12
         filesz 0x00000000 memsz 0x0000015c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   000001a0  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f63c  008001c0  008001c0  000011c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000354  0080f7fc  0080f7fc  000107fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0080fb50  0081163c  00010b50  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000015c  00813128  00813128  00013128  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00813284  00813284  0001263c  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  0001263c  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000ed0  00000000  00000000  00012660  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00023840  00000000  00000000  00013530  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00009120  00000000  00000000  00036d70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b48c  00000000  00000000  0003fe90  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000020a8  00000000  00000000  0004b31c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003455  00000000  00000000  0004d3c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00018215  00000000  00000000  00050819  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00068a30  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001958  00000000  00000000  00068a60  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006d47a  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  0006d47d  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006d480  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006d481  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0006d482  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0006d486  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0006d48a  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  0006d48e  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0006d497  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  0006d4a0  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  0006d4a9  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000043  00000000  00000000  0006d4bb  2**0
                  CONTENTS, READONLY
 29 .jdi          00004f66  00000000  00000000  0006d4fe  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0003a75e  00000000  00000000  00072464  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
008001c0 l    d  .text	00000000 .text
0080f7fc l    d  .rodata	00000000 .rodata
0080fb50 l    d  .rwdata	00000000 .rwdata
00813128 l    d  .bss	00000000 .bss
00813284 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../tsk6_hello_world_bsp//obj/HAL/src/crt0.o
00800208 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
00800094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0080f99e l     O .rodata	00000010 zeroes.4404
00802c18 l     F .text	000000bc __sbprintf
0080f9ae l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00802e28 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00804958 l     F .text	00000008 __fp_unlock
0080496c l     F .text	0000019c __sinit.part.1
00804b08 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0080fb50 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0080ff94 l     O .rwdata	00000020 lc_ctype_charset
0080ff74 l     O .rwdata	00000020 lc_message_charset
0080ffb4 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0080f9e0 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00807f04 l     F .text	000000fc __sprint_r.part.0
0080fb14 l     O .rodata	00000010 blanks.4348
0080fb04 l     O .rodata	00000010 zeroes.4349
00809490 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_close.c
0080d0e8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080d1f4 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080d220 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0080d30c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080d3ec l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080d4d8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0080d6ac l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0081162c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0080d8f8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0080da2c l     F .text	00000034 alt_dev_reg
0081059c l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0080dd20 l     F .text	0000020c altera_avalon_jtag_uart_irq
0080df2c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0080e564 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0080e7cc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0080ec40 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0080ed80 l     F .text	0000003c alt_get_errno
0080edbc l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00807548 g     F .text	00000074 _mprec_log10
00807634 g     F .text	0000008c __any_on
00809a2c g     F .text	00000054 _isatty_r
0080f9ec g     O .rodata	00000028 __mprec_tinytens
0080d5e8 g     F .text	0000007c alt_main
00800898 g     F .text	000000c0 _puts_r
00813184 g     O .bss	00000100 alt_irq
00809a80 g     F .text	00000060 _lseek_r
0081163c g       *ABS*	00000000 __flash_rwdata_start
0080bc78 g     F .text	00000088 .hidden __eqdf2
00813284 g       *ABS*	00000000 __alt_heap_start
0080085c g     F .text	0000003c printf
00809c98 g     F .text	0000009c _wcrtomb_r
00807dc4 g     F .text	0000005c __sseek
00804ca8 g     F .text	00000010 __sinit
00809b40 g     F .text	00000140 __swbuf_r
00805770 g     F .text	0000007c _setlocale_r
00804b10 g     F .text	00000068 __sfmoreglue
0080d688 g     F .text	00000024 __malloc_unlock
00806440 g     F .text	0000015c memmove
00804c90 g     F .text	00000018 _cleanup
008066c4 g     F .text	000000a8 _Balloc
0080bd00 g     F .text	000000dc .hidden __gtdf2
00800000 g     F .entry	0000001c __reset
00800020 g       *ABS*	00000000 __flash_exceptions_start
008099d0 g     F .text	0000005c _fstat_r
00813140 g     O .bss	00000004 errno
00807d40 g     F .text	00000008 __seofread
00813148 g     O .bss	00000004 alt_argv
008195fc g       *ABS*	00000000 _gp
0081041c g     O .rwdata	00000180 alt_fd_list
0080f19c g     F .text	00000090 alt_find_dev
008062f8 g     F .text	00000148 memcpy
00804960 g     F .text	0000000c _cleanup_r
0080cf64 g     F .text	000000dc .hidden __floatsidf
0080ed04 g     F .text	0000007c alt_io_redirect
0080bddc g     F .text	000000f4 .hidden __ltdf2
0080f7fc g       *ABS*	00000000 __DTOR_END__
00800958 g     F .text	00000014 puts
00807c24 g     F .text	00000074 __fpclassifyd
008074a4 g     F .text	000000a4 __ratio
00809474 g     F .text	0000001c __vfiprintf_internal
0080e124 g     F .text	0000021c altera_avalon_jtag_uart_read
0080082c g     F .text	00000030 _printf_r
0080aa28 g     F .text	00000064 .hidden __udivsi3
0080d348 g     F .text	000000a4 isatty
0080fa3c g     O .rodata	000000c8 __mprec_tens
008057ec g     F .text	0000000c __locale_charset
0080f3d8 g     F .text	00000090 alt_icache_flush
0081313c g     O .bss	00000004 __malloc_top_pad
00811604 g     O .rwdata	00000004 __mb_cur_max
0080581c g     F .text	0000000c _localeconv_r
00806ad0 g     F .text	0000003c __i2b
0080512c g     F .text	000004bc __sfvwrite_r
00807c98 g     F .text	00000054 _sbrk_r
00809ae0 g     F .text	00000060 _read_r
00811624 g     O .rwdata	00000004 alt_max_fd
008096c4 g     F .text	000000f0 _fclose_r
00804928 g     F .text	00000030 fflush
00813138 g     O .bss	00000004 __malloc_max_sbrked_mem
008006b8 g     F .text	00000110 .hidden __extendsfdf2
0080aae4 g     F .text	000008ac .hidden __adddf3
0080724c g     F .text	0000010c __b2d
0080a3f8 g     F .text	00000538 .hidden __umoddi3
0080d514 g     F .text	000000d4 lseek
008115fc g     O .rwdata	00000004 _global_impure_ptr
008076c0 g     F .text	00000564 _realloc_r
00813284 g       *ABS*	00000000 __bss_end
0080eb50 g     F .text	000000f0 alt_iic_isr_register
0080f070 g     F .text	00000108 alt_tick
00809e80 g     F .text	00000578 .hidden __udivdi3
0080992c g     F .text	00000024 _fputwc_r
0080fa14 g     O .rodata	00000028 __mprec_bigtens
008068b4 g     F .text	00000104 __s2b
0080d040 g     F .text	000000a8 .hidden __floatunsidf
00806f8c g     F .text	00000060 __mcmp
00804cc8 g     F .text	00000018 __fp_lock_all
0080eb04 g     F .text	0000004c alt_ic_irq_enabled
0080efd4 g     F .text	0000009c alt_alarm_stop
00813150 g     O .bss	00000004 alt_irq_active
008000ec g     F .exceptions	000000d4 alt_irq_handler
008103f4 g     O .rwdata	00000028 alt_dev_null
0080e784 g     F .text	00000048 alt_dcache_flush_all
008069b8 g     F .text	00000068 __hi0bits
0080cee4 g     F .text	00000080 .hidden __fixdfsi
0081163c g       *ABS*	00000000 __ram_rwdata_end
0081161c g     O .rwdata	00000008 alt_dev_list
0080d934 g     F .text	000000f8 write
0080fb50 g       *ABS*	00000000 __ram_rodata_end
0080d25c g     F .text	000000b0 fstat
0080bddc g     F .text	000000f4 .hidden __ledf2
00806d04 g     F .text	00000140 __pow5mult
00808018 g     F .text	0000145c ___vfiprintf_internal_r
00813130 g     O .bss	00000004 __nlocale_changed
0080aa8c g     F .text	00000058 .hidden __umodsi3
00813284 g       *ABS*	00000000 end
0080dc60 g     F .text	000000c0 altera_avalon_jtag_uart_init
0080f7fc g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
0080e5dc g     F .text	0000007c alt_avalon_timer_sc_init
008007c8 g     F .text	00000064 .hidden __clzsi2
0080e340 g     F .text	00000224 altera_avalon_jtag_uart_write
00804cb8 g     F .text	00000004 __sfp_lock_acquire
00806214 g     F .text	000000e4 memchr
00800a04 g     F .text	000021f8 ___vfprintf_internal_r
00804e1c g     F .text	00000310 _free_r
008057f8 g     F .text	00000010 __locale_mb_cur_max
0080f648 g     F .text	00000180 __call_exitprocs
0081312c g     O .bss	00000004 __mlocale_changed
00811608 g     O .rwdata	00000004 __malloc_sbrk_base
008001c0 g     F .text	0000004c _start
00813154 g     O .bss	00000004 _alt_tick_rate
00806e44 g     F .text	00000148 __lshift
00813158 g     O .bss	00000004 _alt_nticks
0080d6e8 g     F .text	000000fc read
0080da98 g     F .text	00000064 alt_sys_init
0080f530 g     F .text	00000118 __register_exitproc
00806b0c g     F .text	000001f8 __multiply
0080dfcc g     F .text	00000068 altera_avalon_jtag_uart_close
0080fb50 g       *ABS*	00000000 __ram_rwdata_start
0080f7fc g       *ABS*	00000000 __ram_rodata_start
0081315c g     O .bss	00000028 __malloc_current_mallinfo
00807358 g     F .text	0000014c __d2b
0080dafc g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0080f334 g     F .text	000000a4 alt_get_fd
008095ac g     F .text	00000054 _close_r
0080f4b4 g     F .text	0000007c memcmp
0080dbbc g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00813284 g       *ABS*	00000000 __alt_stack_base
0080dc0c g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00802cd4 g     F .text	00000154 __swsetup_r
0080b390 g     F .text	000008e8 .hidden __divdf3
00804b78 g     F .text	00000118 __sfp
008075bc g     F .text	00000078 __copybits
0080ffec g     O .rwdata	00000408 __malloc_av_
00804cc4 g     F .text	00000004 __sinit_lock_release
0080bed0 g     F .text	00000718 .hidden __muldf3
00807cec g     F .text	00000054 __sread
0080f22c g     F .text	00000108 alt_find_file
0080e808 g     F .text	000000a4 alt_dev_llist_insert
0080d664 g     F .text	00000024 __malloc_lock
0080d848 g     F .text	000000b0 sbrk
008048cc g     F .text	0000005c _fflush_r
00809600 g     F .text	000000c4 _calloc_r
00813128 g       *ABS*	00000000 __bss_start
0080659c g     F .text	00000128 memset
0080020c g     F .text	000000b0 main
0081314c g     O .bss	00000004 alt_envp
00813134 g     O .bss	00000004 __malloc_max_total_mem
0080db5c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00809c80 g     F .text	00000018 __swbuf
00807e20 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
008097b4 g     F .text	00000014 fclose
00803028 g     F .text	00001688 _dtoa_r
00805a08 g     F .text	0000080c _malloc_r
00809df4 g     F .text	00000030 __ascii_wctomb
00811628 g     O .rwdata	00000004 alt_errno
008055e8 g     F .text	000000c4 _fwalk
0080a930 g     F .text	00000084 .hidden __divsi3
00804cf8 g     F .text	00000124 _malloc_trim_r
0080f7fc g       *ABS*	00000000 __CTOR_END__
008002bc g     F .text	000003fc .hidden __mulsf3
00807e28 g     F .text	000000dc strcmp
0080f7fc g       *ABS*	00000000 __flash_rodata_start
0080f7fc g       *ABS*	00000000 __DTOR_LIST__
0080bc78 g     F .text	00000088 .hidden __nedf2
0080da60 g     F .text	00000038 alt_irq_init
0080d7e4 g     F .text	00000064 alt_release_fd
0080f858 g     O .rodata	00000100 .hidden __clz_tab
00813128 g     O .bss	00000004 _PathLocale
0080f468 g     F .text	00000014 atexit
0080954c g     F .text	00000060 _write_r
00805828 g     F .text	00000018 setlocale
00811600 g     O .rwdata	00000004 _impure_ptr
00813144 g     O .bss	00000004 alt_argc
008046b0 g     F .text	0000021c __sflush_r
0080e90c g     F .text	00000060 _do_dtors
00805814 g     F .text	00000008 __locale_cjk_lang
00800020 g       .exceptions	00000000 alt_irq_entry
008071e8 g     F .text	00000064 __ulp
00804ce0 g     F .text	00000018 __fp_unlock_all
00811614 g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
00805840 g     F .text	0000000c localeconv
0080e9a0 g     F .text	00000050 alt_ic_isr_register
0081163c g       *ABS*	00000000 _edata
00813284 g       *ABS*	00000000 _end
008097c8 g     F .text	00000164 __fputwc
008001c0 g       *ABS*	00000000 __ram_exceptions_end
0080e034 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0080ea78 g     F .text	0000008c alt_ic_irq_disable
00807d48 g     F .text	0000007c __swrite
0081160c g     O .rwdata	00000004 __malloc_trim_threshold
0080f178 g     F .text	00000024 altera_nios2_qsys_irq_init
00805808 g     F .text	0000000c __locale_msgcharset
0080f47c g     F .text	00000038 exit
008056ac g     F .text	000000c4 _fwalk_reent
00806fec g     F .text	000001fc __mdiff
0080a9b4 g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
00804cbc g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
0080f7c8 g     F .text	00000034 _exit
0080e658 g     F .text	0000012c alt_alarm_start
0080584c g     F .text	000001bc __smakebuf_r
0080096c g     F .text	00000098 strlen
0080ee80 g     F .text	00000154 open
0080bd00 g     F .text	000000dc .hidden __gedf2
00811610 g     O .rwdata	00000004 __wctomb
00808000 g     F .text	00000018 __sprint_r
0080e96c g     F .text	00000034 alt_icache_flush_all
00811630 g     O .rwdata	00000004 alt_priority_mask
0080e9f0 g     F .text	00000088 alt_ic_irq_enable
00802bfc g     F .text	0000001c __vfprintf_internal
00809e24 g     F .text	0000005c _wctomb_r
0080c5e8 g     F .text	000008fc .hidden __subdf3
00806a20 g     F .text	000000b0 __lo0bits
00811634 g     O .rwdata	00000008 alt_alarm_list
0080e8ac g     F .text	00000060 _do_ctors
00809d34 g     F .text	000000c0 wcrtomb
0080d124 g     F .text	000000d0 close
0080d454 g     F .text	00000084 alt_load
00809950 g     F .text	00000080 fputwc
00804cc0 g     F .text	00000004 __sinit_lock_acquire
00806794 g     F .text	00000120 __multadd
0080676c g     F .text	00000028 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00820014 	movui	r2,2048
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__alt_data_end+0xff800004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08407014 	ori	at,at,448
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__reset-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000ec0 	call	8000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000306 	br	800098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  80008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)

00800094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
  800094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  800098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  80009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000e8:	ef80083a 	eret

008000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000ec:	defff904 	addi	sp,sp,-28
  8000f0:	dfc00615 	stw	ra,24(sp)
  8000f4:	df000515 	stw	fp,20(sp)
  8000f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  8000fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800100:	0005313a 	rdctl	r2,ipending
  800104:	e0bffe15 	stw	r2,-8(fp)

  return active;
  800108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  800110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800114:	00800044 	movi	r2,1
  800118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80011c:	e0fffb17 	ldw	r3,-20(fp)
  800120:	e0bffc17 	ldw	r2,-16(fp)
  800124:	1884703a 	and	r2,r3,r2
  800128:	10001426 	beq	r2,zero,80017c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80012c:	00802074 	movhi	r2,129
  800130:	108c6104 	addi	r2,r2,12676
  800134:	e0fffd17 	ldw	r3,-12(fp)
  800138:	180690fa 	slli	r3,r3,3
  80013c:	10c5883a 	add	r2,r2,r3
  800140:	10c00017 	ldw	r3,0(r2)
  800144:	00802074 	movhi	r2,129
  800148:	108c6104 	addi	r2,r2,12676
  80014c:	e13ffd17 	ldw	r4,-12(fp)
  800150:	200890fa 	slli	r4,r4,3
  800154:	1105883a 	add	r2,r2,r4
  800158:	10800104 	addi	r2,r2,4
  80015c:	10800017 	ldw	r2,0(r2)
  800160:	1009883a 	mov	r4,r2
  800164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  800168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  80016c:	0005313a 	rdctl	r2,ipending
  800170:	e0bfff15 	stw	r2,-4(fp)

  return active;
  800174:	e0bfff17 	ldw	r2,-4(fp)
  800178:	00000706 	br	800198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
  80017c:	e0bffc17 	ldw	r2,-16(fp)
  800180:	1085883a 	add	r2,r2,r2
  800184:	e0bffc15 	stw	r2,-16(fp)
      i++;
  800188:	e0bffd17 	ldw	r2,-12(fp)
  80018c:	10800044 	addi	r2,r2,1
  800190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  800194:	003fe106 	br	80011c <__alt_data_end+0xff80011c>

    active = alt_irq_pending ();
  800198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  80019c:	e0bffb17 	ldw	r2,-20(fp)
  8001a0:	103fdb1e 	bne	r2,zero,800110 <__alt_data_end+0xff800110>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001a4:	0001883a 	nop
}
  8001a8:	0001883a 	nop
  8001ac:	e037883a 	mov	sp,fp
  8001b0:	dfc00117 	ldw	ra,4(sp)
  8001b4:	df000017 	ldw	fp,0(sp)
  8001b8:	dec00204 	addi	sp,sp,8
  8001bc:	f800283a 	ret

Disassembly of section .text:

008001c0 <_start>:

#if NIOS2_DCACHE_SIZE > 0 && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
  8001c0:	00800074 	movhi	r2,1
#else
    movui r2, NIOS2_DCACHE_SIZE
#endif

0:
    initd 0(r2)
  8001c4:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  8001c8:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  8001cc:	00bffd16 	blt	zero,r2,8001c4 <__alt_data_end+0xff8001c4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  8001d0:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  8001d4:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  8001d8:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  8001dc:	d6a57f14 	ori	gp,gp,38396
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  8001e0:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  8001e4:	108c4a14 	ori	r2,r2,12584

    movhi r3, %hi(__bss_end)
  8001e8:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  8001ec:	18cca114 	ori	r3,r3,12932

    beq r2, r3, 1f
  8001f0:	10c00326 	beq	r2,r3,800200 <_start+0x40>

0:
    stw zero, (r2)
  8001f4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  8001f8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  8001fc:	10fffd36 	bltu	r2,r3,8001f4 <__alt_data_end+0xff8001f4>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800200:	080d4540 	call	80d454 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  800204:	080d5e80 	call	80d5e8 <alt_main>

00800208 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  800208:	003fff06 	br	800208 <__alt_data_end+0xff800208>

0080020c <main>:
#include <stdio.h>

#define ALT_CI_FP32MULT_0(A,B) __builtin_custom_fnff(ALT_CI_FP32MULT_0_N,(A),(B))

int main()
{
  80020c:	defffa04 	addi	sp,sp,-24
  800210:	dfc00515 	stw	ra,20(sp)
  800214:	df000415 	stw	fp,16(sp)
  800218:	df000404 	addi	fp,sp,16
	 printf("Hello from Nios II!\n");
  80021c:	01002074 	movhi	r4,129
  800220:	213dff04 	addi	r4,r4,-2052
  800224:	08009580 	call	800958 <puts>
	 float a, b, c, d;
	 a = 2.5;
  800228:	00900834 	movhi	r2,16416
  80022c:	e0bffc15 	stw	r2,-16(fp)
	 b = 4.5;
  800230:	00902434 	movhi	r2,16528
  800234:	e0bffd15 	stw	r2,-12(fp)
	 c = a*b;
  800238:	e17ffd17 	ldw	r5,-12(fp)
  80023c:	e13ffc17 	ldw	r4,-16(fp)
  800240:	08002bc0 	call	8002bc <__mulsf3>
  800244:	1007883a 	mov	r3,r2
  800248:	e0fffe15 	stw	r3,-8(fp)
	 printf("Multiplication result: %f\n", c);
  80024c:	e13ffe17 	ldw	r4,-8(fp)
  800250:	08006b80 	call	8006b8 <__extendsfdf2>
  800254:	100d883a 	mov	r6,r2
  800258:	180f883a 	mov	r7,r3
  80025c:	300b883a 	mov	r5,r6
  800260:	380d883a 	mov	r6,r7
  800264:	01002074 	movhi	r4,129
  800268:	213e0404 	addi	r4,r4,-2032
  80026c:	080085c0 	call	80085c <printf>
	 d = ALT_CI_FP32MULT_0(a,b);
  800270:	e0bffc17 	ldw	r2,-16(fp)
  800274:	e0fffd17 	ldw	r3,-12(fp)
  800278:	10c5c032 	custom	0,r2,r2,r3
  80027c:	e0bfff15 	stw	r2,-4(fp)
	 printf("Multiplication result from custom instr: %f", d);
  800280:	e13fff17 	ldw	r4,-4(fp)
  800284:	08006b80 	call	8006b8 <__extendsfdf2>
  800288:	100d883a 	mov	r6,r2
  80028c:	180f883a 	mov	r7,r3
  800290:	300b883a 	mov	r5,r6
  800294:	380d883a 	mov	r6,r7
  800298:	01002074 	movhi	r4,129
  80029c:	213e0b04 	addi	r4,r4,-2004
  8002a0:	080085c0 	call	80085c <printf>
	 return 0;
  8002a4:	0005883a 	mov	r2,zero
}
  8002a8:	e037883a 	mov	sp,fp
  8002ac:	dfc00117 	ldw	ra,4(sp)
  8002b0:	df000017 	ldw	fp,0(sp)
  8002b4:	dec00204 	addi	sp,sp,8
  8002b8:	f800283a 	ret

008002bc <__mulsf3>:
  8002bc:	defff504 	addi	sp,sp,-44
  8002c0:	dc000115 	stw	r16,4(sp)
  8002c4:	2020d5fa 	srli	r16,r4,23
  8002c8:	dd400615 	stw	r21,24(sp)
  8002cc:	202ad7fa 	srli	r21,r4,31
  8002d0:	dc800315 	stw	r18,12(sp)
  8002d4:	04802034 	movhi	r18,128
  8002d8:	df000915 	stw	fp,36(sp)
  8002dc:	dd000515 	stw	r20,20(sp)
  8002e0:	94bfffc4 	addi	r18,r18,-1
  8002e4:	dfc00a15 	stw	ra,40(sp)
  8002e8:	ddc00815 	stw	r23,32(sp)
  8002ec:	dd800715 	stw	r22,28(sp)
  8002f0:	dcc00415 	stw	r19,16(sp)
  8002f4:	dc400215 	stw	r17,8(sp)
  8002f8:	84003fcc 	andi	r16,r16,255
  8002fc:	9124703a 	and	r18,r18,r4
  800300:	a829883a 	mov	r20,r21
  800304:	af003fcc 	andi	fp,r21,255
  800308:	80005426 	beq	r16,zero,80045c <__mulsf3+0x1a0>
  80030c:	00803fc4 	movi	r2,255
  800310:	80802f26 	beq	r16,r2,8003d0 <__mulsf3+0x114>
  800314:	91002034 	orhi	r4,r18,128
  800318:	202490fa 	slli	r18,r4,3
  80031c:	843fe044 	addi	r16,r16,-127
  800320:	0023883a 	mov	r17,zero
  800324:	002f883a 	mov	r23,zero
  800328:	2804d5fa 	srli	r2,r5,23
  80032c:	282cd7fa 	srli	r22,r5,31
  800330:	01002034 	movhi	r4,128
  800334:	213fffc4 	addi	r4,r4,-1
  800338:	10803fcc 	andi	r2,r2,255
  80033c:	2166703a 	and	r19,r4,r5
  800340:	b1803fcc 	andi	r6,r22,255
  800344:	10004c26 	beq	r2,zero,800478 <__mulsf3+0x1bc>
  800348:	00c03fc4 	movi	r3,255
  80034c:	10c04726 	beq	r2,r3,80046c <__mulsf3+0x1b0>
  800350:	99002034 	orhi	r4,r19,128
  800354:	202690fa 	slli	r19,r4,3
  800358:	10bfe044 	addi	r2,r2,-127
  80035c:	0007883a 	mov	r3,zero
  800360:	80a1883a 	add	r16,r16,r2
  800364:	010003c4 	movi	r4,15
  800368:	1c44b03a 	or	r2,r3,r17
  80036c:	b56af03a 	xor	r21,r22,r21
  800370:	81c00044 	addi	r7,r16,1
  800374:	20806b36 	bltu	r4,r2,800524 <__mulsf3+0x268>
  800378:	100490ba 	slli	r2,r2,2
  80037c:	01002034 	movhi	r4,128
  800380:	2100e404 	addi	r4,r4,912
  800384:	1105883a 	add	r2,r2,r4
  800388:	10800017 	ldw	r2,0(r2)
  80038c:	1000683a 	jmp	r2
  800390:	00800524 	muli	r2,zero,20
  800394:	008003e4 	muli	r2,zero,15
  800398:	008003e4 	muli	r2,zero,15
  80039c:	008003e0 	cmpeqi	r2,zero,15
  8003a0:	00800508 	cmpgei	r2,zero,20
  8003a4:	00800508 	cmpgei	r2,zero,20
  8003a8:	008004f4 	movhi	r2,19
  8003ac:	008003e0 	cmpeqi	r2,zero,15
  8003b0:	00800508 	cmpgei	r2,zero,20
  8003b4:	008004f4 	movhi	r2,19
  8003b8:	00800508 	cmpgei	r2,zero,20
  8003bc:	008003e0 	cmpeqi	r2,zero,15
  8003c0:	00800514 	movui	r2,20
  8003c4:	00800514 	movui	r2,20
  8003c8:	00800514 	movui	r2,20
  8003cc:	008005f0 	cmpltui	r2,zero,23
  8003d0:	90003b1e 	bne	r18,zero,8004c0 <__mulsf3+0x204>
  8003d4:	04400204 	movi	r17,8
  8003d8:	05c00084 	movi	r23,2
  8003dc:	003fd206 	br	800328 <__alt_data_end+0xff800328>
  8003e0:	302b883a 	mov	r21,r6
  8003e4:	00800084 	movi	r2,2
  8003e8:	18802626 	beq	r3,r2,800484 <__mulsf3+0x1c8>
  8003ec:	008000c4 	movi	r2,3
  8003f0:	1880ab26 	beq	r3,r2,8006a0 <__mulsf3+0x3e4>
  8003f4:	00800044 	movi	r2,1
  8003f8:	1880a21e 	bne	r3,r2,800684 <__mulsf3+0x3c8>
  8003fc:	a829883a 	mov	r20,r21
  800400:	0007883a 	mov	r3,zero
  800404:	0009883a 	mov	r4,zero
  800408:	18803fcc 	andi	r2,r3,255
  80040c:	100695fa 	slli	r3,r2,23
  800410:	a0803fcc 	andi	r2,r20,255
  800414:	100a97fa 	slli	r5,r2,31
  800418:	00802034 	movhi	r2,128
  80041c:	10bfffc4 	addi	r2,r2,-1
  800420:	2084703a 	and	r2,r4,r2
  800424:	10c4b03a 	or	r2,r2,r3
  800428:	1144b03a 	or	r2,r2,r5
  80042c:	dfc00a17 	ldw	ra,40(sp)
  800430:	df000917 	ldw	fp,36(sp)
  800434:	ddc00817 	ldw	r23,32(sp)
  800438:	dd800717 	ldw	r22,28(sp)
  80043c:	dd400617 	ldw	r21,24(sp)
  800440:	dd000517 	ldw	r20,20(sp)
  800444:	dcc00417 	ldw	r19,16(sp)
  800448:	dc800317 	ldw	r18,12(sp)
  80044c:	dc400217 	ldw	r17,8(sp)
  800450:	dc000117 	ldw	r16,4(sp)
  800454:	dec00b04 	addi	sp,sp,44
  800458:	f800283a 	ret
  80045c:	90000d1e 	bne	r18,zero,800494 <__mulsf3+0x1d8>
  800460:	04400104 	movi	r17,4
  800464:	05c00044 	movi	r23,1
  800468:	003faf06 	br	800328 <__alt_data_end+0xff800328>
  80046c:	9806c03a 	cmpne	r3,r19,zero
  800470:	18c00084 	addi	r3,r3,2
  800474:	003fba06 	br	800360 <__alt_data_end+0xff800360>
  800478:	9800141e 	bne	r19,zero,8004cc <__mulsf3+0x210>
  80047c:	00c00044 	movi	r3,1
  800480:	003fb706 	br	800360 <__alt_data_end+0xff800360>
  800484:	a829883a 	mov	r20,r21
  800488:	00ffffc4 	movi	r3,-1
  80048c:	0009883a 	mov	r4,zero
  800490:	003fdd06 	br	800408 <__alt_data_end+0xff800408>
  800494:	9009883a 	mov	r4,r18
  800498:	d9400015 	stw	r5,0(sp)
  80049c:	08007c80 	call	8007c8 <__clzsi2>
  8004a0:	10fffec4 	addi	r3,r2,-5
  8004a4:	10801d84 	addi	r2,r2,118
  8004a8:	90e4983a 	sll	r18,r18,r3
  8004ac:	00a1c83a 	sub	r16,zero,r2
  8004b0:	0023883a 	mov	r17,zero
  8004b4:	002f883a 	mov	r23,zero
  8004b8:	d9400017 	ldw	r5,0(sp)
  8004bc:	003f9a06 	br	800328 <__alt_data_end+0xff800328>
  8004c0:	04400304 	movi	r17,12
  8004c4:	05c000c4 	movi	r23,3
  8004c8:	003f9706 	br	800328 <__alt_data_end+0xff800328>
  8004cc:	9809883a 	mov	r4,r19
  8004d0:	d9800015 	stw	r6,0(sp)
  8004d4:	08007c80 	call	8007c8 <__clzsi2>
  8004d8:	10fffec4 	addi	r3,r2,-5
  8004dc:	10801d84 	addi	r2,r2,118
  8004e0:	98e6983a 	sll	r19,r19,r3
  8004e4:	0085c83a 	sub	r2,zero,r2
  8004e8:	0007883a 	mov	r3,zero
  8004ec:	d9800017 	ldw	r6,0(sp)
  8004f0:	003f9b06 	br	800360 <__alt_data_end+0xff800360>
  8004f4:	01002034 	movhi	r4,128
  8004f8:	0029883a 	mov	r20,zero
  8004fc:	213fffc4 	addi	r4,r4,-1
  800500:	00ffffc4 	movi	r3,-1
  800504:	003fc006 	br	800408 <__alt_data_end+0xff800408>
  800508:	9027883a 	mov	r19,r18
  80050c:	b807883a 	mov	r3,r23
  800510:	003fb406 	br	8003e4 <__alt_data_end+0xff8003e4>
  800514:	9027883a 	mov	r19,r18
  800518:	e02b883a 	mov	r21,fp
  80051c:	b807883a 	mov	r3,r23
  800520:	003fb006 	br	8003e4 <__alt_data_end+0xff8003e4>
  800524:	9004d43a 	srli	r2,r18,16
  800528:	9810d43a 	srli	r8,r19,16
  80052c:	94bfffcc 	andi	r18,r18,65535
  800530:	993fffcc 	andi	r4,r19,65535
  800534:	910d383a 	mul	r6,r18,r4
  800538:	20a7383a 	mul	r19,r4,r2
  80053c:	9225383a 	mul	r18,r18,r8
  800540:	3006d43a 	srli	r3,r6,16
  800544:	1211383a 	mul	r8,r2,r8
  800548:	94e5883a 	add	r18,r18,r19
  80054c:	1c87883a 	add	r3,r3,r18
  800550:	1cc0022e 	bgeu	r3,r19,80055c <__mulsf3+0x2a0>
  800554:	00800074 	movhi	r2,1
  800558:	4091883a 	add	r8,r8,r2
  80055c:	1804943a 	slli	r2,r3,16
  800560:	31bfffcc 	andi	r6,r6,65535
  800564:	1806d43a 	srli	r3,r3,16
  800568:	1185883a 	add	r2,r2,r6
  80056c:	102691ba 	slli	r19,r2,6
  800570:	1a07883a 	add	r3,r3,r8
  800574:	1004d6ba 	srli	r2,r2,26
  800578:	180891ba 	slli	r4,r3,6
  80057c:	9826c03a 	cmpne	r19,r19,zero
  800580:	9884b03a 	or	r2,r19,r2
  800584:	1126b03a 	or	r19,r2,r4
  800588:	9882002c 	andhi	r2,r19,2048
  80058c:	10000426 	beq	r2,zero,8005a0 <__mulsf3+0x2e4>
  800590:	9804d07a 	srli	r2,r19,1
  800594:	9900004c 	andi	r4,r19,1
  800598:	3821883a 	mov	r16,r7
  80059c:	1126b03a 	or	r19,r2,r4
  8005a0:	80c01fc4 	addi	r3,r16,127
  8005a4:	00c0210e 	bge	zero,r3,80062c <__mulsf3+0x370>
  8005a8:	988001cc 	andi	r2,r19,7
  8005ac:	10000426 	beq	r2,zero,8005c0 <__mulsf3+0x304>
  8005b0:	988003cc 	andi	r2,r19,15
  8005b4:	01000104 	movi	r4,4
  8005b8:	11000126 	beq	r2,r4,8005c0 <__mulsf3+0x304>
  8005bc:	9927883a 	add	r19,r19,r4
  8005c0:	9882002c 	andhi	r2,r19,2048
  8005c4:	10000426 	beq	r2,zero,8005d8 <__mulsf3+0x31c>
  8005c8:	00be0034 	movhi	r2,63488
  8005cc:	10bfffc4 	addi	r2,r2,-1
  8005d0:	80c02004 	addi	r3,r16,128
  8005d4:	98a6703a 	and	r19,r19,r2
  8005d8:	00803f84 	movi	r2,254
  8005dc:	10ffa916 	blt	r2,r3,800484 <__alt_data_end+0xff800484>
  8005e0:	980891ba 	slli	r4,r19,6
  8005e4:	a829883a 	mov	r20,r21
  8005e8:	2008d27a 	srli	r4,r4,9
  8005ec:	003f8606 	br	800408 <__alt_data_end+0xff800408>
  8005f0:	9080102c 	andhi	r2,r18,64
  8005f4:	10000826 	beq	r2,zero,800618 <__mulsf3+0x35c>
  8005f8:	9880102c 	andhi	r2,r19,64
  8005fc:	1000061e 	bne	r2,zero,800618 <__mulsf3+0x35c>
  800600:	00802034 	movhi	r2,128
  800604:	99001034 	orhi	r4,r19,64
  800608:	10bfffc4 	addi	r2,r2,-1
  80060c:	b029883a 	mov	r20,r22
  800610:	2088703a 	and	r4,r4,r2
  800614:	003fba06 	br	800500 <__alt_data_end+0xff800500>
  800618:	00802034 	movhi	r2,128
  80061c:	91001034 	orhi	r4,r18,64
  800620:	10bfffc4 	addi	r2,r2,-1
  800624:	2088703a 	and	r4,r4,r2
  800628:	003fb506 	br	800500 <__alt_data_end+0xff800500>
  80062c:	00800044 	movi	r2,1
  800630:	10c7c83a 	sub	r3,r2,r3
  800634:	008006c4 	movi	r2,27
  800638:	10ff7016 	blt	r2,r3,8003fc <__alt_data_end+0xff8003fc>
  80063c:	00800804 	movi	r2,32
  800640:	10c5c83a 	sub	r2,r2,r3
  800644:	9884983a 	sll	r2,r19,r2
  800648:	98c6d83a 	srl	r3,r19,r3
  80064c:	1004c03a 	cmpne	r2,r2,zero
  800650:	1884b03a 	or	r2,r3,r2
  800654:	10c001cc 	andi	r3,r2,7
  800658:	18000426 	beq	r3,zero,80066c <__mulsf3+0x3b0>
  80065c:	10c003cc 	andi	r3,r2,15
  800660:	01000104 	movi	r4,4
  800664:	19000126 	beq	r3,r4,80066c <__mulsf3+0x3b0>
  800668:	1105883a 	add	r2,r2,r4
  80066c:	10c1002c 	andhi	r3,r2,1024
  800670:	18000626 	beq	r3,zero,80068c <__mulsf3+0x3d0>
  800674:	a829883a 	mov	r20,r21
  800678:	00c00044 	movi	r3,1
  80067c:	0009883a 	mov	r4,zero
  800680:	003f6106 	br	800408 <__alt_data_end+0xff800408>
  800684:	3821883a 	mov	r16,r7
  800688:	003fc506 	br	8005a0 <__alt_data_end+0xff8005a0>
  80068c:	100491ba 	slli	r2,r2,6
  800690:	a829883a 	mov	r20,r21
  800694:	0007883a 	mov	r3,zero
  800698:	1008d27a 	srli	r4,r2,9
  80069c:	003f5a06 	br	800408 <__alt_data_end+0xff800408>
  8006a0:	00802034 	movhi	r2,128
  8006a4:	99001034 	orhi	r4,r19,64
  8006a8:	10bfffc4 	addi	r2,r2,-1
  8006ac:	a829883a 	mov	r20,r21
  8006b0:	2088703a 	and	r4,r4,r2
  8006b4:	003f9206 	br	800500 <__alt_data_end+0xff800500>

008006b8 <__extendsfdf2>:
  8006b8:	200ad5fa 	srli	r5,r4,23
  8006bc:	defffd04 	addi	sp,sp,-12
  8006c0:	dc400115 	stw	r17,4(sp)
  8006c4:	29403fcc 	andi	r5,r5,255
  8006c8:	29800044 	addi	r6,r5,1
  8006cc:	04402034 	movhi	r17,128
  8006d0:	dc000015 	stw	r16,0(sp)
  8006d4:	8c7fffc4 	addi	r17,r17,-1
  8006d8:	dfc00215 	stw	ra,8(sp)
  8006dc:	31803fcc 	andi	r6,r6,255
  8006e0:	00800044 	movi	r2,1
  8006e4:	8922703a 	and	r17,r17,r4
  8006e8:	2020d7fa 	srli	r16,r4,31
  8006ec:	1180110e 	bge	r2,r6,800734 <__extendsfdf2+0x7c>
  8006f0:	880cd0fa 	srli	r6,r17,3
  8006f4:	8822977a 	slli	r17,r17,29
  8006f8:	2940e004 	addi	r5,r5,896
  8006fc:	2941ffcc 	andi	r5,r5,2047
  800700:	2804953a 	slli	r2,r5,20
  800704:	01400434 	movhi	r5,16
  800708:	800697fa 	slli	r3,r16,31
  80070c:	297fffc4 	addi	r5,r5,-1
  800710:	314a703a 	and	r5,r6,r5
  800714:	288ab03a 	or	r5,r5,r2
  800718:	28c6b03a 	or	r3,r5,r3
  80071c:	8805883a 	mov	r2,r17
  800720:	dfc00217 	ldw	ra,8(sp)
  800724:	dc400117 	ldw	r17,4(sp)
  800728:	dc000017 	ldw	r16,0(sp)
  80072c:	dec00304 	addi	sp,sp,12
  800730:	f800283a 	ret
  800734:	2800111e 	bne	r5,zero,80077c <__extendsfdf2+0xc4>
  800738:	88001c26 	beq	r17,zero,8007ac <__extendsfdf2+0xf4>
  80073c:	8809883a 	mov	r4,r17
  800740:	08007c80 	call	8007c8 <__clzsi2>
  800744:	00c00284 	movi	r3,10
  800748:	18801b16 	blt	r3,r2,8007b8 <__extendsfdf2+0x100>
  80074c:	018002c4 	movi	r6,11
  800750:	308dc83a 	sub	r6,r6,r2
  800754:	11000544 	addi	r4,r2,21
  800758:	8986d83a 	srl	r3,r17,r6
  80075c:	8922983a 	sll	r17,r17,r4
  800760:	0180e244 	movi	r6,905
  800764:	01400434 	movhi	r5,16
  800768:	3085c83a 	sub	r2,r6,r2
  80076c:	297fffc4 	addi	r5,r5,-1
  800770:	194c703a 	and	r6,r3,r5
  800774:	1141ffcc 	andi	r5,r2,2047
  800778:	003fe006 	br	8006fc <__alt_data_end+0xff8006fc>
  80077c:	88000826 	beq	r17,zero,8007a0 <__extendsfdf2+0xe8>
  800780:	880cd0fa 	srli	r6,r17,3
  800784:	00800434 	movhi	r2,16
  800788:	10bfffc4 	addi	r2,r2,-1
  80078c:	31800234 	orhi	r6,r6,8
  800790:	8822977a 	slli	r17,r17,29
  800794:	308c703a 	and	r6,r6,r2
  800798:	0141ffc4 	movi	r5,2047
  80079c:	003fd706 	br	8006fc <__alt_data_end+0xff8006fc>
  8007a0:	0141ffc4 	movi	r5,2047
  8007a4:	000d883a 	mov	r6,zero
  8007a8:	003fd406 	br	8006fc <__alt_data_end+0xff8006fc>
  8007ac:	000b883a 	mov	r5,zero
  8007b0:	000d883a 	mov	r6,zero
  8007b4:	003fd106 	br	8006fc <__alt_data_end+0xff8006fc>
  8007b8:	11bffd44 	addi	r6,r2,-11
  8007bc:	8986983a 	sll	r3,r17,r6
  8007c0:	0023883a 	mov	r17,zero
  8007c4:	003fe606 	br	800760 <__alt_data_end+0xff800760>

008007c8 <__clzsi2>:
  8007c8:	00bfffd4 	movui	r2,65535
  8007cc:	11000536 	bltu	r2,r4,8007e4 <__clzsi2+0x1c>
  8007d0:	00803fc4 	movi	r2,255
  8007d4:	11000f36 	bltu	r2,r4,800814 <__clzsi2+0x4c>
  8007d8:	00800804 	movi	r2,32
  8007dc:	0007883a 	mov	r3,zero
  8007e0:	00000506 	br	8007f8 <__clzsi2+0x30>
  8007e4:	00804034 	movhi	r2,256
  8007e8:	10bfffc4 	addi	r2,r2,-1
  8007ec:	11000c2e 	bgeu	r2,r4,800820 <__clzsi2+0x58>
  8007f0:	00800204 	movi	r2,8
  8007f4:	00c00604 	movi	r3,24
  8007f8:	20c8d83a 	srl	r4,r4,r3
  8007fc:	00c02074 	movhi	r3,129
  800800:	18fe1604 	addi	r3,r3,-1960
  800804:	1909883a 	add	r4,r3,r4
  800808:	20c00003 	ldbu	r3,0(r4)
  80080c:	10c5c83a 	sub	r2,r2,r3
  800810:	f800283a 	ret
  800814:	00800604 	movi	r2,24
  800818:	00c00204 	movi	r3,8
  80081c:	003ff606 	br	8007f8 <__alt_data_end+0xff8007f8>
  800820:	00800404 	movi	r2,16
  800824:	1007883a 	mov	r3,r2
  800828:	003ff306 	br	8007f8 <__alt_data_end+0xff8007f8>

0080082c <_printf_r>:
  80082c:	defffd04 	addi	sp,sp,-12
  800830:	2805883a 	mov	r2,r5
  800834:	dfc00015 	stw	ra,0(sp)
  800838:	d9800115 	stw	r6,4(sp)
  80083c:	d9c00215 	stw	r7,8(sp)
  800840:	21400217 	ldw	r5,8(r4)
  800844:	d9c00104 	addi	r7,sp,4
  800848:	100d883a 	mov	r6,r2
  80084c:	0800a040 	call	800a04 <___vfprintf_internal_r>
  800850:	dfc00017 	ldw	ra,0(sp)
  800854:	dec00304 	addi	sp,sp,12
  800858:	f800283a 	ret

0080085c <printf>:
  80085c:	defffc04 	addi	sp,sp,-16
  800860:	dfc00015 	stw	ra,0(sp)
  800864:	d9400115 	stw	r5,4(sp)
  800868:	d9800215 	stw	r6,8(sp)
  80086c:	d9c00315 	stw	r7,12(sp)
  800870:	00802074 	movhi	r2,129
  800874:	10858004 	addi	r2,r2,5632
  800878:	10800017 	ldw	r2,0(r2)
  80087c:	200b883a 	mov	r5,r4
  800880:	d9800104 	addi	r6,sp,4
  800884:	11000217 	ldw	r4,8(r2)
  800888:	0802bfc0 	call	802bfc <__vfprintf_internal>
  80088c:	dfc00017 	ldw	ra,0(sp)
  800890:	dec00404 	addi	sp,sp,16
  800894:	f800283a 	ret

00800898 <_puts_r>:
  800898:	defff604 	addi	sp,sp,-40
  80089c:	dc000715 	stw	r16,28(sp)
  8008a0:	2021883a 	mov	r16,r4
  8008a4:	2809883a 	mov	r4,r5
  8008a8:	dc400815 	stw	r17,32(sp)
  8008ac:	dfc00915 	stw	ra,36(sp)
  8008b0:	2823883a 	mov	r17,r5
  8008b4:	080096c0 	call	80096c <strlen>
  8008b8:	10c00044 	addi	r3,r2,1
  8008bc:	d8800115 	stw	r2,4(sp)
  8008c0:	00802074 	movhi	r2,129
  8008c4:	10be5604 	addi	r2,r2,-1704
  8008c8:	d8800215 	stw	r2,8(sp)
  8008cc:	00800044 	movi	r2,1
  8008d0:	d8800315 	stw	r2,12(sp)
  8008d4:	00800084 	movi	r2,2
  8008d8:	dc400015 	stw	r17,0(sp)
  8008dc:	d8c00615 	stw	r3,24(sp)
  8008e0:	dec00415 	stw	sp,16(sp)
  8008e4:	d8800515 	stw	r2,20(sp)
  8008e8:	80000226 	beq	r16,zero,8008f4 <_puts_r+0x5c>
  8008ec:	80800e17 	ldw	r2,56(r16)
  8008f0:	10001426 	beq	r2,zero,800944 <_puts_r+0xac>
  8008f4:	81400217 	ldw	r5,8(r16)
  8008f8:	2880030b 	ldhu	r2,12(r5)
  8008fc:	10c8000c 	andi	r3,r2,8192
  800900:	1800061e 	bne	r3,zero,80091c <_puts_r+0x84>
  800904:	29001917 	ldw	r4,100(r5)
  800908:	00f7ffc4 	movi	r3,-8193
  80090c:	10880014 	ori	r2,r2,8192
  800910:	20c6703a 	and	r3,r4,r3
  800914:	2880030d 	sth	r2,12(r5)
  800918:	28c01915 	stw	r3,100(r5)
  80091c:	d9800404 	addi	r6,sp,16
  800920:	8009883a 	mov	r4,r16
  800924:	080512c0 	call	80512c <__sfvwrite_r>
  800928:	1000091e 	bne	r2,zero,800950 <_puts_r+0xb8>
  80092c:	00800284 	movi	r2,10
  800930:	dfc00917 	ldw	ra,36(sp)
  800934:	dc400817 	ldw	r17,32(sp)
  800938:	dc000717 	ldw	r16,28(sp)
  80093c:	dec00a04 	addi	sp,sp,40
  800940:	f800283a 	ret
  800944:	8009883a 	mov	r4,r16
  800948:	0804ca80 	call	804ca8 <__sinit>
  80094c:	003fe906 	br	8008f4 <__alt_data_end+0xff8008f4>
  800950:	00bfffc4 	movi	r2,-1
  800954:	003ff606 	br	800930 <__alt_data_end+0xff800930>

00800958 <puts>:
  800958:	00802074 	movhi	r2,129
  80095c:	10858004 	addi	r2,r2,5632
  800960:	200b883a 	mov	r5,r4
  800964:	11000017 	ldw	r4,0(r2)
  800968:	08008981 	jmpi	800898 <_puts_r>

0080096c <strlen>:
  80096c:	208000cc 	andi	r2,r4,3
  800970:	10002026 	beq	r2,zero,8009f4 <strlen+0x88>
  800974:	20800007 	ldb	r2,0(r4)
  800978:	10002026 	beq	r2,zero,8009fc <strlen+0x90>
  80097c:	2005883a 	mov	r2,r4
  800980:	00000206 	br	80098c <strlen+0x20>
  800984:	10c00007 	ldb	r3,0(r2)
  800988:	18001826 	beq	r3,zero,8009ec <strlen+0x80>
  80098c:	10800044 	addi	r2,r2,1
  800990:	10c000cc 	andi	r3,r2,3
  800994:	183ffb1e 	bne	r3,zero,800984 <__alt_data_end+0xff800984>
  800998:	10c00017 	ldw	r3,0(r2)
  80099c:	01ffbff4 	movhi	r7,65279
  8009a0:	39ffbfc4 	addi	r7,r7,-257
  8009a4:	00ca303a 	nor	r5,zero,r3
  8009a8:	01a02074 	movhi	r6,32897
  8009ac:	19c7883a 	add	r3,r3,r7
  8009b0:	31a02004 	addi	r6,r6,-32640
  8009b4:	1946703a 	and	r3,r3,r5
  8009b8:	1986703a 	and	r3,r3,r6
  8009bc:	1800091e 	bne	r3,zero,8009e4 <strlen+0x78>
  8009c0:	10800104 	addi	r2,r2,4
  8009c4:	10c00017 	ldw	r3,0(r2)
  8009c8:	19cb883a 	add	r5,r3,r7
  8009cc:	00c6303a 	nor	r3,zero,r3
  8009d0:	28c6703a 	and	r3,r5,r3
  8009d4:	1986703a 	and	r3,r3,r6
  8009d8:	183ff926 	beq	r3,zero,8009c0 <__alt_data_end+0xff8009c0>
  8009dc:	00000106 	br	8009e4 <strlen+0x78>
  8009e0:	10800044 	addi	r2,r2,1
  8009e4:	10c00007 	ldb	r3,0(r2)
  8009e8:	183ffd1e 	bne	r3,zero,8009e0 <__alt_data_end+0xff8009e0>
  8009ec:	1105c83a 	sub	r2,r2,r4
  8009f0:	f800283a 	ret
  8009f4:	2005883a 	mov	r2,r4
  8009f8:	003fe706 	br	800998 <__alt_data_end+0xff800998>
  8009fc:	0005883a 	mov	r2,zero
  800a00:	f800283a 	ret

00800a04 <___vfprintf_internal_r>:
  800a04:	deffb804 	addi	sp,sp,-288
  800a08:	dfc04715 	stw	ra,284(sp)
  800a0c:	ddc04515 	stw	r23,276(sp)
  800a10:	dd404315 	stw	r21,268(sp)
  800a14:	d9002c15 	stw	r4,176(sp)
  800a18:	282f883a 	mov	r23,r5
  800a1c:	302b883a 	mov	r21,r6
  800a20:	d9c02d15 	stw	r7,180(sp)
  800a24:	df004615 	stw	fp,280(sp)
  800a28:	dd804415 	stw	r22,272(sp)
  800a2c:	dd004215 	stw	r20,264(sp)
  800a30:	dcc04115 	stw	r19,260(sp)
  800a34:	dc804015 	stw	r18,256(sp)
  800a38:	dc403f15 	stw	r17,252(sp)
  800a3c:	dc003e15 	stw	r16,248(sp)
  800a40:	080581c0 	call	80581c <_localeconv_r>
  800a44:	10800017 	ldw	r2,0(r2)
  800a48:	1009883a 	mov	r4,r2
  800a4c:	d8803415 	stw	r2,208(sp)
  800a50:	080096c0 	call	80096c <strlen>
  800a54:	d8803715 	stw	r2,220(sp)
  800a58:	d8802c17 	ldw	r2,176(sp)
  800a5c:	10000226 	beq	r2,zero,800a68 <___vfprintf_internal_r+0x64>
  800a60:	10800e17 	ldw	r2,56(r2)
  800a64:	1000f926 	beq	r2,zero,800e4c <___vfprintf_internal_r+0x448>
  800a68:	b880030b 	ldhu	r2,12(r23)
  800a6c:	10c8000c 	andi	r3,r2,8192
  800a70:	1800061e 	bne	r3,zero,800a8c <___vfprintf_internal_r+0x88>
  800a74:	b9001917 	ldw	r4,100(r23)
  800a78:	00f7ffc4 	movi	r3,-8193
  800a7c:	10880014 	ori	r2,r2,8192
  800a80:	20c6703a 	and	r3,r4,r3
  800a84:	b880030d 	sth	r2,12(r23)
  800a88:	b8c01915 	stw	r3,100(r23)
  800a8c:	10c0020c 	andi	r3,r2,8
  800a90:	1800c126 	beq	r3,zero,800d98 <___vfprintf_internal_r+0x394>
  800a94:	b8c00417 	ldw	r3,16(r23)
  800a98:	1800bf26 	beq	r3,zero,800d98 <___vfprintf_internal_r+0x394>
  800a9c:	1080068c 	andi	r2,r2,26
  800aa0:	00c00284 	movi	r3,10
  800aa4:	10c0c426 	beq	r2,r3,800db8 <___vfprintf_internal_r+0x3b4>
  800aa8:	d8c00404 	addi	r3,sp,16
  800aac:	05002074 	movhi	r20,129
  800ab0:	d9001e04 	addi	r4,sp,120
  800ab4:	a53e6784 	addi	r20,r20,-1634
  800ab8:	d8c01e15 	stw	r3,120(sp)
  800abc:	d8002015 	stw	zero,128(sp)
  800ac0:	d8001f15 	stw	zero,124(sp)
  800ac4:	d8003315 	stw	zero,204(sp)
  800ac8:	d8003615 	stw	zero,216(sp)
  800acc:	d8003815 	stw	zero,224(sp)
  800ad0:	1811883a 	mov	r8,r3
  800ad4:	d8003915 	stw	zero,228(sp)
  800ad8:	d8003a15 	stw	zero,232(sp)
  800adc:	d8002f15 	stw	zero,188(sp)
  800ae0:	d9002815 	stw	r4,160(sp)
  800ae4:	a8800007 	ldb	r2,0(r21)
  800ae8:	10027b26 	beq	r2,zero,8014d8 <___vfprintf_internal_r+0xad4>
  800aec:	00c00944 	movi	r3,37
  800af0:	a821883a 	mov	r16,r21
  800af4:	10c0021e 	bne	r2,r3,800b00 <___vfprintf_internal_r+0xfc>
  800af8:	00001406 	br	800b4c <___vfprintf_internal_r+0x148>
  800afc:	10c00326 	beq	r2,r3,800b0c <___vfprintf_internal_r+0x108>
  800b00:	84000044 	addi	r16,r16,1
  800b04:	80800007 	ldb	r2,0(r16)
  800b08:	103ffc1e 	bne	r2,zero,800afc <__alt_data_end+0xff800afc>
  800b0c:	8563c83a 	sub	r17,r16,r21
  800b10:	88000e26 	beq	r17,zero,800b4c <___vfprintf_internal_r+0x148>
  800b14:	d8c02017 	ldw	r3,128(sp)
  800b18:	d8801f17 	ldw	r2,124(sp)
  800b1c:	45400015 	stw	r21,0(r8)
  800b20:	1c47883a 	add	r3,r3,r17
  800b24:	10800044 	addi	r2,r2,1
  800b28:	d8c02015 	stw	r3,128(sp)
  800b2c:	44400115 	stw	r17,4(r8)
  800b30:	d8801f15 	stw	r2,124(sp)
  800b34:	00c001c4 	movi	r3,7
  800b38:	1880a716 	blt	r3,r2,800dd8 <___vfprintf_internal_r+0x3d4>
  800b3c:	42000204 	addi	r8,r8,8
  800b40:	d9402f17 	ldw	r5,188(sp)
  800b44:	2c4b883a 	add	r5,r5,r17
  800b48:	d9402f15 	stw	r5,188(sp)
  800b4c:	80800007 	ldb	r2,0(r16)
  800b50:	1000a826 	beq	r2,zero,800df4 <___vfprintf_internal_r+0x3f0>
  800b54:	84400047 	ldb	r17,1(r16)
  800b58:	00bfffc4 	movi	r2,-1
  800b5c:	85400044 	addi	r21,r16,1
  800b60:	d8002785 	stb	zero,158(sp)
  800b64:	0007883a 	mov	r3,zero
  800b68:	000f883a 	mov	r7,zero
  800b6c:	d8802915 	stw	r2,164(sp)
  800b70:	d8003115 	stw	zero,196(sp)
  800b74:	0025883a 	mov	r18,zero
  800b78:	01401604 	movi	r5,88
  800b7c:	01800244 	movi	r6,9
  800b80:	02800a84 	movi	r10,42
  800b84:	02401b04 	movi	r9,108
  800b88:	ad400044 	addi	r21,r21,1
  800b8c:	88bff804 	addi	r2,r17,-32
  800b90:	28830436 	bltu	r5,r2,8017a4 <___vfprintf_internal_r+0xda0>
  800b94:	100490ba 	slli	r2,r2,2
  800b98:	01002034 	movhi	r4,128
  800b9c:	2102eb04 	addi	r4,r4,2988
  800ba0:	1105883a 	add	r2,r2,r4
  800ba4:	10800017 	ldw	r2,0(r2)
  800ba8:	1000683a 	jmp	r2
  800bac:	008016c4 	movi	r2,91
  800bb0:	008017a4 	muli	r2,zero,94
  800bb4:	008017a4 	muli	r2,zero,94
  800bb8:	008016e4 	muli	r2,zero,91
  800bbc:	008017a4 	muli	r2,zero,94
  800bc0:	008017a4 	muli	r2,zero,94
  800bc4:	008017a4 	muli	r2,zero,94
  800bc8:	008017a4 	muli	r2,zero,94
  800bcc:	008017a4 	muli	r2,zero,94
  800bd0:	008017a4 	muli	r2,zero,94
  800bd4:	00800e58 	cmpnei	r2,zero,57
  800bd8:	00801600 	call	80160 <__reset-0x77fea0>
  800bdc:	008017a4 	muli	r2,zero,94
  800be0:	00800d20 	cmpeqi	r2,zero,52
  800be4:	00800e80 	call	800e8 <__reset-0x77ff18>
  800be8:	008017a4 	muli	r2,zero,94
  800bec:	00800ec0 	call	800ec <__reset-0x77ff14>
  800bf0:	00800ecc 	andi	r2,zero,59
  800bf4:	00800ecc 	andi	r2,zero,59
  800bf8:	00800ecc 	andi	r2,zero,59
  800bfc:	00800ecc 	andi	r2,zero,59
  800c00:	00800ecc 	andi	r2,zero,59
  800c04:	00800ecc 	andi	r2,zero,59
  800c08:	00800ecc 	andi	r2,zero,59
  800c0c:	00800ecc 	andi	r2,zero,59
  800c10:	00800ecc 	andi	r2,zero,59
  800c14:	008017a4 	muli	r2,zero,94
  800c18:	008017a4 	muli	r2,zero,94
  800c1c:	008017a4 	muli	r2,zero,94
  800c20:	008017a4 	muli	r2,zero,94
  800c24:	008017a4 	muli	r2,zero,94
  800c28:	008017a4 	muli	r2,zero,94
  800c2c:	008017a4 	muli	r2,zero,94
  800c30:	008017a4 	muli	r2,zero,94
  800c34:	008017a4 	muli	r2,zero,94
  800c38:	008017a4 	muli	r2,zero,94
  800c3c:	00800f00 	call	800f0 <__reset-0x77ff10>
  800c40:	00800fbc 	xorhi	r2,zero,62
  800c44:	008017a4 	muli	r2,zero,94
  800c48:	00800fbc 	xorhi	r2,zero,62
  800c4c:	008017a4 	muli	r2,zero,94
  800c50:	008017a4 	muli	r2,zero,94
  800c54:	008017a4 	muli	r2,zero,94
  800c58:	008017a4 	muli	r2,zero,94
  800c5c:	0080105c 	xori	r2,zero,65
  800c60:	008017a4 	muli	r2,zero,94
  800c64:	008017a4 	muli	r2,zero,94
  800c68:	00801068 	cmpgeui	r2,zero,65
  800c6c:	008017a4 	muli	r2,zero,94
  800c70:	008017a4 	muli	r2,zero,94
  800c74:	008017a4 	muli	r2,zero,94
  800c78:	008017a4 	muli	r2,zero,94
  800c7c:	008017a4 	muli	r2,zero,94
  800c80:	008014e0 	cmpeqi	r2,zero,83
  800c84:	008017a4 	muli	r2,zero,94
  800c88:	008017a4 	muli	r2,zero,94
  800c8c:	00801540 	call	80154 <__reset-0x77feac>
  800c90:	008017a4 	muli	r2,zero,94
  800c94:	008017a4 	muli	r2,zero,94
  800c98:	008017a4 	muli	r2,zero,94
  800c9c:	008017a4 	muli	r2,zero,94
  800ca0:	008017a4 	muli	r2,zero,94
  800ca4:	008017a4 	muli	r2,zero,94
  800ca8:	008017a4 	muli	r2,zero,94
  800cac:	008017a4 	muli	r2,zero,94
  800cb0:	008017a4 	muli	r2,zero,94
  800cb4:	008017a4 	muli	r2,zero,94
  800cb8:	00801750 	cmplti	r2,zero,93
  800cbc:	008016f0 	cmpltui	r2,zero,91
  800cc0:	00800fbc 	xorhi	r2,zero,62
  800cc4:	00800fbc 	xorhi	r2,zero,62
  800cc8:	00800fbc 	xorhi	r2,zero,62
  800ccc:	00801700 	call	80170 <__reset-0x77fe90>
  800cd0:	008016f0 	cmpltui	r2,zero,91
  800cd4:	008017a4 	muli	r2,zero,94
  800cd8:	008017a4 	muli	r2,zero,94
  800cdc:	0080170c 	andi	r2,zero,92
  800ce0:	008017a4 	muli	r2,zero,94
  800ce4:	0080171c 	xori	r2,zero,92
  800ce8:	008015f0 	cmpltui	r2,zero,87
  800cec:	00800d2c 	andhi	r2,zero,52
  800cf0:	00801610 	cmplti	r2,zero,88
  800cf4:	008017a4 	muli	r2,zero,94
  800cf8:	0080161c 	xori	r2,zero,88
  800cfc:	008017a4 	muli	r2,zero,94
  800d00:	00801678 	rdprs	r2,zero,89
  800d04:	008017a4 	muli	r2,zero,94
  800d08:	008017a4 	muli	r2,zero,94
  800d0c:	00801688 	cmpgei	r2,zero,90
  800d10:	d9003117 	ldw	r4,196(sp)
  800d14:	d8802d15 	stw	r2,180(sp)
  800d18:	0109c83a 	sub	r4,zero,r4
  800d1c:	d9003115 	stw	r4,196(sp)
  800d20:	94800114 	ori	r18,r18,4
  800d24:	ac400007 	ldb	r17,0(r21)
  800d28:	003f9706 	br	800b88 <__alt_data_end+0xff800b88>
  800d2c:	00800c04 	movi	r2,48
  800d30:	d9002d17 	ldw	r4,180(sp)
  800d34:	d9402917 	ldw	r5,164(sp)
  800d38:	d8802705 	stb	r2,156(sp)
  800d3c:	00801e04 	movi	r2,120
  800d40:	d8802745 	stb	r2,157(sp)
  800d44:	d8002785 	stb	zero,158(sp)
  800d48:	20c00104 	addi	r3,r4,4
  800d4c:	24c00017 	ldw	r19,0(r4)
  800d50:	002d883a 	mov	r22,zero
  800d54:	90800094 	ori	r2,r18,2
  800d58:	28029a16 	blt	r5,zero,8017c4 <___vfprintf_internal_r+0xdc0>
  800d5c:	00bfdfc4 	movi	r2,-129
  800d60:	90a4703a 	and	r18,r18,r2
  800d64:	d8c02d15 	stw	r3,180(sp)
  800d68:	94800094 	ori	r18,r18,2
  800d6c:	9802871e 	bne	r19,zero,80178c <___vfprintf_internal_r+0xd88>
  800d70:	00802074 	movhi	r2,129
  800d74:	10be6004 	addi	r2,r2,-1664
  800d78:	d8803915 	stw	r2,228(sp)
  800d7c:	04401e04 	movi	r17,120
  800d80:	d8802917 	ldw	r2,164(sp)
  800d84:	0039883a 	mov	fp,zero
  800d88:	1001e926 	beq	r2,zero,801530 <___vfprintf_internal_r+0xb2c>
  800d8c:	0027883a 	mov	r19,zero
  800d90:	002d883a 	mov	r22,zero
  800d94:	00020506 	br	8015ac <___vfprintf_internal_r+0xba8>
  800d98:	d9002c17 	ldw	r4,176(sp)
  800d9c:	b80b883a 	mov	r5,r23
  800da0:	0802cd40 	call	802cd4 <__swsetup_r>
  800da4:	1005ac1e 	bne	r2,zero,802458 <___vfprintf_internal_r+0x1a54>
  800da8:	b880030b 	ldhu	r2,12(r23)
  800dac:	00c00284 	movi	r3,10
  800db0:	1080068c 	andi	r2,r2,26
  800db4:	10ff3c1e 	bne	r2,r3,800aa8 <__alt_data_end+0xff800aa8>
  800db8:	b880038f 	ldh	r2,14(r23)
  800dbc:	103f3a16 	blt	r2,zero,800aa8 <__alt_data_end+0xff800aa8>
  800dc0:	d9c02d17 	ldw	r7,180(sp)
  800dc4:	d9002c17 	ldw	r4,176(sp)
  800dc8:	a80d883a 	mov	r6,r21
  800dcc:	b80b883a 	mov	r5,r23
  800dd0:	0802c180 	call	802c18 <__sbprintf>
  800dd4:	00001106 	br	800e1c <___vfprintf_internal_r+0x418>
  800dd8:	d9002c17 	ldw	r4,176(sp)
  800ddc:	d9801e04 	addi	r6,sp,120
  800de0:	b80b883a 	mov	r5,r23
  800de4:	08080000 	call	808000 <__sprint_r>
  800de8:	1000081e 	bne	r2,zero,800e0c <___vfprintf_internal_r+0x408>
  800dec:	da000404 	addi	r8,sp,16
  800df0:	003f5306 	br	800b40 <__alt_data_end+0xff800b40>
  800df4:	d8802017 	ldw	r2,128(sp)
  800df8:	10000426 	beq	r2,zero,800e0c <___vfprintf_internal_r+0x408>
  800dfc:	d9002c17 	ldw	r4,176(sp)
  800e00:	d9801e04 	addi	r6,sp,120
  800e04:	b80b883a 	mov	r5,r23
  800e08:	08080000 	call	808000 <__sprint_r>
  800e0c:	b880030b 	ldhu	r2,12(r23)
  800e10:	1080100c 	andi	r2,r2,64
  800e14:	1005901e 	bne	r2,zero,802458 <___vfprintf_internal_r+0x1a54>
  800e18:	d8802f17 	ldw	r2,188(sp)
  800e1c:	dfc04717 	ldw	ra,284(sp)
  800e20:	df004617 	ldw	fp,280(sp)
  800e24:	ddc04517 	ldw	r23,276(sp)
  800e28:	dd804417 	ldw	r22,272(sp)
  800e2c:	dd404317 	ldw	r21,268(sp)
  800e30:	dd004217 	ldw	r20,264(sp)
  800e34:	dcc04117 	ldw	r19,260(sp)
  800e38:	dc804017 	ldw	r18,256(sp)
  800e3c:	dc403f17 	ldw	r17,252(sp)
  800e40:	dc003e17 	ldw	r16,248(sp)
  800e44:	dec04804 	addi	sp,sp,288
  800e48:	f800283a 	ret
  800e4c:	d9002c17 	ldw	r4,176(sp)
  800e50:	0804ca80 	call	804ca8 <__sinit>
  800e54:	003f0406 	br	800a68 <__alt_data_end+0xff800a68>
  800e58:	d8802d17 	ldw	r2,180(sp)
  800e5c:	d9002d17 	ldw	r4,180(sp)
  800e60:	10800017 	ldw	r2,0(r2)
  800e64:	d8803115 	stw	r2,196(sp)
  800e68:	20800104 	addi	r2,r4,4
  800e6c:	d9003117 	ldw	r4,196(sp)
  800e70:	203fa716 	blt	r4,zero,800d10 <__alt_data_end+0xff800d10>
  800e74:	d8802d15 	stw	r2,180(sp)
  800e78:	ac400007 	ldb	r17,0(r21)
  800e7c:	003f4206 	br	800b88 <__alt_data_end+0xff800b88>
  800e80:	ac400007 	ldb	r17,0(r21)
  800e84:	aac00044 	addi	r11,r21,1
  800e88:	8a872826 	beq	r17,r10,802b2c <___vfprintf_internal_r+0x2128>
  800e8c:	88bff404 	addi	r2,r17,-48
  800e90:	0009883a 	mov	r4,zero
  800e94:	30867d36 	bltu	r6,r2,80288c <___vfprintf_internal_r+0x1e88>
  800e98:	5c400007 	ldb	r17,0(r11)
  800e9c:	210002a4 	muli	r4,r4,10
  800ea0:	5d400044 	addi	r21,r11,1
  800ea4:	a817883a 	mov	r11,r21
  800ea8:	2089883a 	add	r4,r4,r2
  800eac:	88bff404 	addi	r2,r17,-48
  800eb0:	30bff92e 	bgeu	r6,r2,800e98 <__alt_data_end+0xff800e98>
  800eb4:	2005c916 	blt	r4,zero,8025dc <___vfprintf_internal_r+0x1bd8>
  800eb8:	d9002915 	stw	r4,164(sp)
  800ebc:	003f3306 	br	800b8c <__alt_data_end+0xff800b8c>
  800ec0:	94802014 	ori	r18,r18,128
  800ec4:	ac400007 	ldb	r17,0(r21)
  800ec8:	003f2f06 	br	800b88 <__alt_data_end+0xff800b88>
  800ecc:	a809883a 	mov	r4,r21
  800ed0:	d8003115 	stw	zero,196(sp)
  800ed4:	88bff404 	addi	r2,r17,-48
  800ed8:	0017883a 	mov	r11,zero
  800edc:	24400007 	ldb	r17,0(r4)
  800ee0:	5ac002a4 	muli	r11,r11,10
  800ee4:	ad400044 	addi	r21,r21,1
  800ee8:	a809883a 	mov	r4,r21
  800eec:	12d7883a 	add	r11,r2,r11
  800ef0:	88bff404 	addi	r2,r17,-48
  800ef4:	30bff92e 	bgeu	r6,r2,800edc <__alt_data_end+0xff800edc>
  800ef8:	dac03115 	stw	r11,196(sp)
  800efc:	003f2306 	br	800b8c <__alt_data_end+0xff800b8c>
  800f00:	18c03fcc 	andi	r3,r3,255
  800f04:	18072b1e 	bne	r3,zero,802bb4 <___vfprintf_internal_r+0x21b0>
  800f08:	94800414 	ori	r18,r18,16
  800f0c:	9080080c 	andi	r2,r18,32
  800f10:	10037b26 	beq	r2,zero,801d00 <___vfprintf_internal_r+0x12fc>
  800f14:	d9402d17 	ldw	r5,180(sp)
  800f18:	28800117 	ldw	r2,4(r5)
  800f1c:	2cc00017 	ldw	r19,0(r5)
  800f20:	29400204 	addi	r5,r5,8
  800f24:	d9402d15 	stw	r5,180(sp)
  800f28:	102d883a 	mov	r22,r2
  800f2c:	10044b16 	blt	r2,zero,80205c <___vfprintf_internal_r+0x1658>
  800f30:	d9402917 	ldw	r5,164(sp)
  800f34:	df002783 	ldbu	fp,158(sp)
  800f38:	2803bc16 	blt	r5,zero,801e2c <___vfprintf_internal_r+0x1428>
  800f3c:	00ffdfc4 	movi	r3,-129
  800f40:	9d84b03a 	or	r2,r19,r22
  800f44:	90e4703a 	and	r18,r18,r3
  800f48:	10017726 	beq	r2,zero,801528 <___vfprintf_internal_r+0xb24>
  800f4c:	b0038326 	beq	r22,zero,801d5c <___vfprintf_internal_r+0x1358>
  800f50:	dc402a15 	stw	r17,168(sp)
  800f54:	dc001e04 	addi	r16,sp,120
  800f58:	b023883a 	mov	r17,r22
  800f5c:	402d883a 	mov	r22,r8
  800f60:	9809883a 	mov	r4,r19
  800f64:	880b883a 	mov	r5,r17
  800f68:	01800284 	movi	r6,10
  800f6c:	000f883a 	mov	r7,zero
  800f70:	080a3f80 	call	80a3f8 <__umoddi3>
  800f74:	10800c04 	addi	r2,r2,48
  800f78:	843fffc4 	addi	r16,r16,-1
  800f7c:	9809883a 	mov	r4,r19
  800f80:	880b883a 	mov	r5,r17
  800f84:	80800005 	stb	r2,0(r16)
  800f88:	01800284 	movi	r6,10
  800f8c:	000f883a 	mov	r7,zero
  800f90:	0809e800 	call	809e80 <__udivdi3>
  800f94:	1027883a 	mov	r19,r2
  800f98:	10c4b03a 	or	r2,r2,r3
  800f9c:	1823883a 	mov	r17,r3
  800fa0:	103fef1e 	bne	r2,zero,800f60 <__alt_data_end+0xff800f60>
  800fa4:	d8c02817 	ldw	r3,160(sp)
  800fa8:	dc402a17 	ldw	r17,168(sp)
  800fac:	b011883a 	mov	r8,r22
  800fb0:	1c07c83a 	sub	r3,r3,r16
  800fb4:	d8c02e15 	stw	r3,184(sp)
  800fb8:	00005906 	br	801120 <___vfprintf_internal_r+0x71c>
  800fbc:	18c03fcc 	andi	r3,r3,255
  800fc0:	1806fa1e 	bne	r3,zero,802bac <___vfprintf_internal_r+0x21a8>
  800fc4:	9080020c 	andi	r2,r18,8
  800fc8:	10048a26 	beq	r2,zero,8021f4 <___vfprintf_internal_r+0x17f0>
  800fcc:	d8c02d17 	ldw	r3,180(sp)
  800fd0:	d9002d17 	ldw	r4,180(sp)
  800fd4:	d9402d17 	ldw	r5,180(sp)
  800fd8:	18c00017 	ldw	r3,0(r3)
  800fdc:	21000117 	ldw	r4,4(r4)
  800fe0:	29400204 	addi	r5,r5,8
  800fe4:	d8c03615 	stw	r3,216(sp)
  800fe8:	d9003815 	stw	r4,224(sp)
  800fec:	d9402d15 	stw	r5,180(sp)
  800ff0:	d9003617 	ldw	r4,216(sp)
  800ff4:	d9403817 	ldw	r5,224(sp)
  800ff8:	da003d15 	stw	r8,244(sp)
  800ffc:	04000044 	movi	r16,1
  801000:	0807c240 	call	807c24 <__fpclassifyd>
  801004:	da003d17 	ldw	r8,244(sp)
  801008:	14041f1e 	bne	r2,r16,802088 <___vfprintf_internal_r+0x1684>
  80100c:	d9003617 	ldw	r4,216(sp)
  801010:	d9403817 	ldw	r5,224(sp)
  801014:	000d883a 	mov	r6,zero
  801018:	000f883a 	mov	r7,zero
  80101c:	080bddc0 	call	80bddc <__ledf2>
  801020:	da003d17 	ldw	r8,244(sp)
  801024:	1005be16 	blt	r2,zero,802720 <___vfprintf_internal_r+0x1d1c>
  801028:	df002783 	ldbu	fp,158(sp)
  80102c:	008011c4 	movi	r2,71
  801030:	1445330e 	bge	r2,r17,802500 <___vfprintf_internal_r+0x1afc>
  801034:	04002074 	movhi	r16,129
  801038:	843e5804 	addi	r16,r16,-1696
  80103c:	00c000c4 	movi	r3,3
  801040:	00bfdfc4 	movi	r2,-129
  801044:	d8c02a15 	stw	r3,168(sp)
  801048:	90a4703a 	and	r18,r18,r2
  80104c:	d8c02e15 	stw	r3,184(sp)
  801050:	d8002915 	stw	zero,164(sp)
  801054:	d8003215 	stw	zero,200(sp)
  801058:	00003706 	br	801138 <___vfprintf_internal_r+0x734>
  80105c:	94800214 	ori	r18,r18,8
  801060:	ac400007 	ldb	r17,0(r21)
  801064:	003ec806 	br	800b88 <__alt_data_end+0xff800b88>
  801068:	18c03fcc 	andi	r3,r3,255
  80106c:	1806db1e 	bne	r3,zero,802bdc <___vfprintf_internal_r+0x21d8>
  801070:	94800414 	ori	r18,r18,16
  801074:	9080080c 	andi	r2,r18,32
  801078:	1002d826 	beq	r2,zero,801bdc <___vfprintf_internal_r+0x11d8>
  80107c:	d9402d17 	ldw	r5,180(sp)
  801080:	d8c02917 	ldw	r3,164(sp)
  801084:	d8002785 	stb	zero,158(sp)
  801088:	28800204 	addi	r2,r5,8
  80108c:	2cc00017 	ldw	r19,0(r5)
  801090:	2d800117 	ldw	r22,4(r5)
  801094:	18048f16 	blt	r3,zero,8022d4 <___vfprintf_internal_r+0x18d0>
  801098:	013fdfc4 	movi	r4,-129
  80109c:	9d86b03a 	or	r3,r19,r22
  8010a0:	d8802d15 	stw	r2,180(sp)
  8010a4:	9124703a 	and	r18,r18,r4
  8010a8:	1802d91e 	bne	r3,zero,801c10 <___vfprintf_internal_r+0x120c>
  8010ac:	d8c02917 	ldw	r3,164(sp)
  8010b0:	0039883a 	mov	fp,zero
  8010b4:	1805c326 	beq	r3,zero,8027c4 <___vfprintf_internal_r+0x1dc0>
  8010b8:	0027883a 	mov	r19,zero
  8010bc:	002d883a 	mov	r22,zero
  8010c0:	dc001e04 	addi	r16,sp,120
  8010c4:	9806d0fa 	srli	r3,r19,3
  8010c8:	b008977a 	slli	r4,r22,29
  8010cc:	b02cd0fa 	srli	r22,r22,3
  8010d0:	9cc001cc 	andi	r19,r19,7
  8010d4:	98800c04 	addi	r2,r19,48
  8010d8:	843fffc4 	addi	r16,r16,-1
  8010dc:	20e6b03a 	or	r19,r4,r3
  8010e0:	80800005 	stb	r2,0(r16)
  8010e4:	9d86b03a 	or	r3,r19,r22
  8010e8:	183ff61e 	bne	r3,zero,8010c4 <__alt_data_end+0xff8010c4>
  8010ec:	90c0004c 	andi	r3,r18,1
  8010f0:	18013b26 	beq	r3,zero,8015e0 <___vfprintf_internal_r+0xbdc>
  8010f4:	10803fcc 	andi	r2,r2,255
  8010f8:	1080201c 	xori	r2,r2,128
  8010fc:	10bfe004 	addi	r2,r2,-128
  801100:	00c00c04 	movi	r3,48
  801104:	10c13626 	beq	r2,r3,8015e0 <___vfprintf_internal_r+0xbdc>
  801108:	80ffffc5 	stb	r3,-1(r16)
  80110c:	d8c02817 	ldw	r3,160(sp)
  801110:	80bfffc4 	addi	r2,r16,-1
  801114:	1021883a 	mov	r16,r2
  801118:	1887c83a 	sub	r3,r3,r2
  80111c:	d8c02e15 	stw	r3,184(sp)
  801120:	d8802e17 	ldw	r2,184(sp)
  801124:	d9002917 	ldw	r4,164(sp)
  801128:	1100010e 	bge	r2,r4,801130 <___vfprintf_internal_r+0x72c>
  80112c:	2005883a 	mov	r2,r4
  801130:	d8802a15 	stw	r2,168(sp)
  801134:	d8003215 	stw	zero,200(sp)
  801138:	e7003fcc 	andi	fp,fp,255
  80113c:	e700201c 	xori	fp,fp,128
  801140:	e73fe004 	addi	fp,fp,-128
  801144:	e0000326 	beq	fp,zero,801154 <___vfprintf_internal_r+0x750>
  801148:	d8c02a17 	ldw	r3,168(sp)
  80114c:	18c00044 	addi	r3,r3,1
  801150:	d8c02a15 	stw	r3,168(sp)
  801154:	90c0008c 	andi	r3,r18,2
  801158:	d8c02b15 	stw	r3,172(sp)
  80115c:	18000326 	beq	r3,zero,80116c <___vfprintf_internal_r+0x768>
  801160:	d8c02a17 	ldw	r3,168(sp)
  801164:	18c00084 	addi	r3,r3,2
  801168:	d8c02a15 	stw	r3,168(sp)
  80116c:	90c0210c 	andi	r3,r18,132
  801170:	d8c03015 	stw	r3,192(sp)
  801174:	1801a31e 	bne	r3,zero,801804 <___vfprintf_internal_r+0xe00>
  801178:	d9003117 	ldw	r4,196(sp)
  80117c:	d8c02a17 	ldw	r3,168(sp)
  801180:	20e7c83a 	sub	r19,r4,r3
  801184:	04c19f0e 	bge	zero,r19,801804 <___vfprintf_internal_r+0xe00>
  801188:	02400404 	movi	r9,16
  80118c:	d8c02017 	ldw	r3,128(sp)
  801190:	d8801f17 	ldw	r2,124(sp)
  801194:	4cc50d0e 	bge	r9,r19,8025cc <___vfprintf_internal_r+0x1bc8>
  801198:	01402074 	movhi	r5,129
  80119c:	297e6b84 	addi	r5,r5,-1618
  8011a0:	dc403b15 	stw	r17,236(sp)
  8011a4:	d9403515 	stw	r5,212(sp)
  8011a8:	9823883a 	mov	r17,r19
  8011ac:	482d883a 	mov	r22,r9
  8011b0:	9027883a 	mov	r19,r18
  8011b4:	070001c4 	movi	fp,7
  8011b8:	8025883a 	mov	r18,r16
  8011bc:	dc002c17 	ldw	r16,176(sp)
  8011c0:	00000306 	br	8011d0 <___vfprintf_internal_r+0x7cc>
  8011c4:	8c7ffc04 	addi	r17,r17,-16
  8011c8:	42000204 	addi	r8,r8,8
  8011cc:	b440130e 	bge	r22,r17,80121c <___vfprintf_internal_r+0x818>
  8011d0:	01002074 	movhi	r4,129
  8011d4:	18c00404 	addi	r3,r3,16
  8011d8:	10800044 	addi	r2,r2,1
  8011dc:	213e6b84 	addi	r4,r4,-1618
  8011e0:	41000015 	stw	r4,0(r8)
  8011e4:	45800115 	stw	r22,4(r8)
  8011e8:	d8c02015 	stw	r3,128(sp)
  8011ec:	d8801f15 	stw	r2,124(sp)
  8011f0:	e0bff40e 	bge	fp,r2,8011c4 <__alt_data_end+0xff8011c4>
  8011f4:	d9801e04 	addi	r6,sp,120
  8011f8:	b80b883a 	mov	r5,r23
  8011fc:	8009883a 	mov	r4,r16
  801200:	08080000 	call	808000 <__sprint_r>
  801204:	103f011e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  801208:	8c7ffc04 	addi	r17,r17,-16
  80120c:	d8c02017 	ldw	r3,128(sp)
  801210:	d8801f17 	ldw	r2,124(sp)
  801214:	da000404 	addi	r8,sp,16
  801218:	b47fed16 	blt	r22,r17,8011d0 <__alt_data_end+0xff8011d0>
  80121c:	9021883a 	mov	r16,r18
  801220:	9825883a 	mov	r18,r19
  801224:	8827883a 	mov	r19,r17
  801228:	dc403b17 	ldw	r17,236(sp)
  80122c:	d9403517 	ldw	r5,212(sp)
  801230:	98c7883a 	add	r3,r19,r3
  801234:	10800044 	addi	r2,r2,1
  801238:	41400015 	stw	r5,0(r8)
  80123c:	44c00115 	stw	r19,4(r8)
  801240:	d8c02015 	stw	r3,128(sp)
  801244:	d8801f15 	stw	r2,124(sp)
  801248:	010001c4 	movi	r4,7
  80124c:	2082a316 	blt	r4,r2,801cdc <___vfprintf_internal_r+0x12d8>
  801250:	df002787 	ldb	fp,158(sp)
  801254:	42000204 	addi	r8,r8,8
  801258:	e0000c26 	beq	fp,zero,80128c <___vfprintf_internal_r+0x888>
  80125c:	d8801f17 	ldw	r2,124(sp)
  801260:	d9002784 	addi	r4,sp,158
  801264:	18c00044 	addi	r3,r3,1
  801268:	10800044 	addi	r2,r2,1
  80126c:	41000015 	stw	r4,0(r8)
  801270:	01000044 	movi	r4,1
  801274:	41000115 	stw	r4,4(r8)
  801278:	d8c02015 	stw	r3,128(sp)
  80127c:	d8801f15 	stw	r2,124(sp)
  801280:	010001c4 	movi	r4,7
  801284:	20823c16 	blt	r4,r2,801b78 <___vfprintf_internal_r+0x1174>
  801288:	42000204 	addi	r8,r8,8
  80128c:	d8802b17 	ldw	r2,172(sp)
  801290:	10000c26 	beq	r2,zero,8012c4 <___vfprintf_internal_r+0x8c0>
  801294:	d8801f17 	ldw	r2,124(sp)
  801298:	d9002704 	addi	r4,sp,156
  80129c:	18c00084 	addi	r3,r3,2
  8012a0:	10800044 	addi	r2,r2,1
  8012a4:	41000015 	stw	r4,0(r8)
  8012a8:	01000084 	movi	r4,2
  8012ac:	41000115 	stw	r4,4(r8)
  8012b0:	d8c02015 	stw	r3,128(sp)
  8012b4:	d8801f15 	stw	r2,124(sp)
  8012b8:	010001c4 	movi	r4,7
  8012bc:	20823616 	blt	r4,r2,801b98 <___vfprintf_internal_r+0x1194>
  8012c0:	42000204 	addi	r8,r8,8
  8012c4:	d9003017 	ldw	r4,192(sp)
  8012c8:	00802004 	movi	r2,128
  8012cc:	20819926 	beq	r4,r2,801934 <___vfprintf_internal_r+0xf30>
  8012d0:	d9402917 	ldw	r5,164(sp)
  8012d4:	d8802e17 	ldw	r2,184(sp)
  8012d8:	28adc83a 	sub	r22,r5,r2
  8012dc:	0580310e 	bge	zero,r22,8013a4 <___vfprintf_internal_r+0x9a0>
  8012e0:	07000404 	movi	fp,16
  8012e4:	d8801f17 	ldw	r2,124(sp)
  8012e8:	e584140e 	bge	fp,r22,80233c <___vfprintf_internal_r+0x1938>
  8012ec:	01402074 	movhi	r5,129
  8012f0:	297e6784 	addi	r5,r5,-1634
  8012f4:	dc402915 	stw	r17,164(sp)
  8012f8:	d9402b15 	stw	r5,172(sp)
  8012fc:	b023883a 	mov	r17,r22
  801300:	04c001c4 	movi	r19,7
  801304:	a82d883a 	mov	r22,r21
  801308:	902b883a 	mov	r21,r18
  80130c:	8025883a 	mov	r18,r16
  801310:	dc002c17 	ldw	r16,176(sp)
  801314:	00000306 	br	801324 <___vfprintf_internal_r+0x920>
  801318:	8c7ffc04 	addi	r17,r17,-16
  80131c:	42000204 	addi	r8,r8,8
  801320:	e440110e 	bge	fp,r17,801368 <___vfprintf_internal_r+0x964>
  801324:	18c00404 	addi	r3,r3,16
  801328:	10800044 	addi	r2,r2,1
  80132c:	45000015 	stw	r20,0(r8)
  801330:	47000115 	stw	fp,4(r8)
  801334:	d8c02015 	stw	r3,128(sp)
  801338:	d8801f15 	stw	r2,124(sp)
  80133c:	98bff60e 	bge	r19,r2,801318 <__alt_data_end+0xff801318>
  801340:	d9801e04 	addi	r6,sp,120
  801344:	b80b883a 	mov	r5,r23
  801348:	8009883a 	mov	r4,r16
  80134c:	08080000 	call	808000 <__sprint_r>
  801350:	103eae1e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  801354:	8c7ffc04 	addi	r17,r17,-16
  801358:	d8c02017 	ldw	r3,128(sp)
  80135c:	d8801f17 	ldw	r2,124(sp)
  801360:	da000404 	addi	r8,sp,16
  801364:	e47fef16 	blt	fp,r17,801324 <__alt_data_end+0xff801324>
  801368:	9021883a 	mov	r16,r18
  80136c:	a825883a 	mov	r18,r21
  801370:	b02b883a 	mov	r21,r22
  801374:	882d883a 	mov	r22,r17
  801378:	dc402917 	ldw	r17,164(sp)
  80137c:	d9002b17 	ldw	r4,172(sp)
  801380:	1d87883a 	add	r3,r3,r22
  801384:	10800044 	addi	r2,r2,1
  801388:	41000015 	stw	r4,0(r8)
  80138c:	45800115 	stw	r22,4(r8)
  801390:	d8c02015 	stw	r3,128(sp)
  801394:	d8801f15 	stw	r2,124(sp)
  801398:	010001c4 	movi	r4,7
  80139c:	2081ee16 	blt	r4,r2,801b58 <___vfprintf_internal_r+0x1154>
  8013a0:	42000204 	addi	r8,r8,8
  8013a4:	9080400c 	andi	r2,r18,256
  8013a8:	1001181e 	bne	r2,zero,80180c <___vfprintf_internal_r+0xe08>
  8013ac:	d9402e17 	ldw	r5,184(sp)
  8013b0:	d8801f17 	ldw	r2,124(sp)
  8013b4:	44000015 	stw	r16,0(r8)
  8013b8:	1947883a 	add	r3,r3,r5
  8013bc:	10800044 	addi	r2,r2,1
  8013c0:	41400115 	stw	r5,4(r8)
  8013c4:	d8c02015 	stw	r3,128(sp)
  8013c8:	d8801f15 	stw	r2,124(sp)
  8013cc:	010001c4 	movi	r4,7
  8013d0:	2081d316 	blt	r4,r2,801b20 <___vfprintf_internal_r+0x111c>
  8013d4:	42000204 	addi	r8,r8,8
  8013d8:	9480010c 	andi	r18,r18,4
  8013dc:	90003226 	beq	r18,zero,8014a8 <___vfprintf_internal_r+0xaa4>
  8013e0:	d9403117 	ldw	r5,196(sp)
  8013e4:	d8802a17 	ldw	r2,168(sp)
  8013e8:	28a1c83a 	sub	r16,r5,r2
  8013ec:	04002e0e 	bge	zero,r16,8014a8 <___vfprintf_internal_r+0xaa4>
  8013f0:	04400404 	movi	r17,16
  8013f4:	d8801f17 	ldw	r2,124(sp)
  8013f8:	8c04a20e 	bge	r17,r16,802684 <___vfprintf_internal_r+0x1c80>
  8013fc:	01402074 	movhi	r5,129
  801400:	297e6b84 	addi	r5,r5,-1618
  801404:	d9403515 	stw	r5,212(sp)
  801408:	048001c4 	movi	r18,7
  80140c:	dcc02c17 	ldw	r19,176(sp)
  801410:	00000306 	br	801420 <___vfprintf_internal_r+0xa1c>
  801414:	843ffc04 	addi	r16,r16,-16
  801418:	42000204 	addi	r8,r8,8
  80141c:	8c00130e 	bge	r17,r16,80146c <___vfprintf_internal_r+0xa68>
  801420:	01002074 	movhi	r4,129
  801424:	18c00404 	addi	r3,r3,16
  801428:	10800044 	addi	r2,r2,1
  80142c:	213e6b84 	addi	r4,r4,-1618
  801430:	41000015 	stw	r4,0(r8)
  801434:	44400115 	stw	r17,4(r8)
  801438:	d8c02015 	stw	r3,128(sp)
  80143c:	d8801f15 	stw	r2,124(sp)
  801440:	90bff40e 	bge	r18,r2,801414 <__alt_data_end+0xff801414>
  801444:	d9801e04 	addi	r6,sp,120
  801448:	b80b883a 	mov	r5,r23
  80144c:	9809883a 	mov	r4,r19
  801450:	08080000 	call	808000 <__sprint_r>
  801454:	103e6d1e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  801458:	843ffc04 	addi	r16,r16,-16
  80145c:	d8c02017 	ldw	r3,128(sp)
  801460:	d8801f17 	ldw	r2,124(sp)
  801464:	da000404 	addi	r8,sp,16
  801468:	8c3fed16 	blt	r17,r16,801420 <__alt_data_end+0xff801420>
  80146c:	d9403517 	ldw	r5,212(sp)
  801470:	1c07883a 	add	r3,r3,r16
  801474:	10800044 	addi	r2,r2,1
  801478:	41400015 	stw	r5,0(r8)
  80147c:	44000115 	stw	r16,4(r8)
  801480:	d8c02015 	stw	r3,128(sp)
  801484:	d8801f15 	stw	r2,124(sp)
  801488:	010001c4 	movi	r4,7
  80148c:	2080060e 	bge	r4,r2,8014a8 <___vfprintf_internal_r+0xaa4>
  801490:	d9002c17 	ldw	r4,176(sp)
  801494:	d9801e04 	addi	r6,sp,120
  801498:	b80b883a 	mov	r5,r23
  80149c:	08080000 	call	808000 <__sprint_r>
  8014a0:	103e5a1e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  8014a4:	d8c02017 	ldw	r3,128(sp)
  8014a8:	d8803117 	ldw	r2,196(sp)
  8014ac:	d9002a17 	ldw	r4,168(sp)
  8014b0:	1100010e 	bge	r2,r4,8014b8 <___vfprintf_internal_r+0xab4>
  8014b4:	2005883a 	mov	r2,r4
  8014b8:	d9402f17 	ldw	r5,188(sp)
  8014bc:	288b883a 	add	r5,r5,r2
  8014c0:	d9402f15 	stw	r5,188(sp)
  8014c4:	18019e1e 	bne	r3,zero,801b40 <___vfprintf_internal_r+0x113c>
  8014c8:	a8800007 	ldb	r2,0(r21)
  8014cc:	d8001f15 	stw	zero,124(sp)
  8014d0:	da000404 	addi	r8,sp,16
  8014d4:	103d851e 	bne	r2,zero,800aec <__alt_data_end+0xff800aec>
  8014d8:	a821883a 	mov	r16,r21
  8014dc:	003d9b06 	br	800b4c <__alt_data_end+0xff800b4c>
  8014e0:	18c03fcc 	andi	r3,r3,255
  8014e4:	1805c11e 	bne	r3,zero,802bec <___vfprintf_internal_r+0x21e8>
  8014e8:	94800414 	ori	r18,r18,16
  8014ec:	9080080c 	andi	r2,r18,32
  8014f0:	10020c26 	beq	r2,zero,801d24 <___vfprintf_internal_r+0x1320>
  8014f4:	d8802d17 	ldw	r2,180(sp)
  8014f8:	d9002917 	ldw	r4,164(sp)
  8014fc:	d8002785 	stb	zero,158(sp)
  801500:	10c00204 	addi	r3,r2,8
  801504:	14c00017 	ldw	r19,0(r2)
  801508:	15800117 	ldw	r22,4(r2)
  80150c:	20040f16 	blt	r4,zero,80254c <___vfprintf_internal_r+0x1b48>
  801510:	013fdfc4 	movi	r4,-129
  801514:	9d84b03a 	or	r2,r19,r22
  801518:	d8c02d15 	stw	r3,180(sp)
  80151c:	9124703a 	and	r18,r18,r4
  801520:	0039883a 	mov	fp,zero
  801524:	103e891e 	bne	r2,zero,800f4c <__alt_data_end+0xff800f4c>
  801528:	d9002917 	ldw	r4,164(sp)
  80152c:	2002c11e 	bne	r4,zero,802034 <___vfprintf_internal_r+0x1630>
  801530:	d8002915 	stw	zero,164(sp)
  801534:	d8002e15 	stw	zero,184(sp)
  801538:	dc001e04 	addi	r16,sp,120
  80153c:	003ef806 	br	801120 <__alt_data_end+0xff801120>
  801540:	18c03fcc 	andi	r3,r3,255
  801544:	18059d1e 	bne	r3,zero,802bbc <___vfprintf_internal_r+0x21b8>
  801548:	01402074 	movhi	r5,129
  80154c:	297e5b04 	addi	r5,r5,-1684
  801550:	d9403915 	stw	r5,228(sp)
  801554:	9080080c 	andi	r2,r18,32
  801558:	10005226 	beq	r2,zero,8016a4 <___vfprintf_internal_r+0xca0>
  80155c:	d8802d17 	ldw	r2,180(sp)
  801560:	14c00017 	ldw	r19,0(r2)
  801564:	15800117 	ldw	r22,4(r2)
  801568:	10800204 	addi	r2,r2,8
  80156c:	d8802d15 	stw	r2,180(sp)
  801570:	9080004c 	andi	r2,r18,1
  801574:	10019026 	beq	r2,zero,801bb8 <___vfprintf_internal_r+0x11b4>
  801578:	9d84b03a 	or	r2,r19,r22
  80157c:	10036926 	beq	r2,zero,802324 <___vfprintf_internal_r+0x1920>
  801580:	d8c02917 	ldw	r3,164(sp)
  801584:	00800c04 	movi	r2,48
  801588:	d8802705 	stb	r2,156(sp)
  80158c:	dc402745 	stb	r17,157(sp)
  801590:	d8002785 	stb	zero,158(sp)
  801594:	90800094 	ori	r2,r18,2
  801598:	18045d16 	blt	r3,zero,802710 <___vfprintf_internal_r+0x1d0c>
  80159c:	00bfdfc4 	movi	r2,-129
  8015a0:	90a4703a 	and	r18,r18,r2
  8015a4:	94800094 	ori	r18,r18,2
  8015a8:	0039883a 	mov	fp,zero
  8015ac:	d9003917 	ldw	r4,228(sp)
  8015b0:	dc001e04 	addi	r16,sp,120
  8015b4:	988003cc 	andi	r2,r19,15
  8015b8:	b006973a 	slli	r3,r22,28
  8015bc:	2085883a 	add	r2,r4,r2
  8015c0:	9826d13a 	srli	r19,r19,4
  8015c4:	10800003 	ldbu	r2,0(r2)
  8015c8:	b02cd13a 	srli	r22,r22,4
  8015cc:	843fffc4 	addi	r16,r16,-1
  8015d0:	1ce6b03a 	or	r19,r3,r19
  8015d4:	80800005 	stb	r2,0(r16)
  8015d8:	9d84b03a 	or	r2,r19,r22
  8015dc:	103ff51e 	bne	r2,zero,8015b4 <__alt_data_end+0xff8015b4>
  8015e0:	d8c02817 	ldw	r3,160(sp)
  8015e4:	1c07c83a 	sub	r3,r3,r16
  8015e8:	d8c02e15 	stw	r3,184(sp)
  8015ec:	003ecc06 	br	801120 <__alt_data_end+0xff801120>
  8015f0:	18c03fcc 	andi	r3,r3,255
  8015f4:	183e9f26 	beq	r3,zero,801074 <__alt_data_end+0xff801074>
  8015f8:	d9c02785 	stb	r7,158(sp)
  8015fc:	003e9d06 	br	801074 <__alt_data_end+0xff801074>
  801600:	00c00044 	movi	r3,1
  801604:	01c00ac4 	movi	r7,43
  801608:	ac400007 	ldb	r17,0(r21)
  80160c:	003d5e06 	br	800b88 <__alt_data_end+0xff800b88>
  801610:	94800814 	ori	r18,r18,32
  801614:	ac400007 	ldb	r17,0(r21)
  801618:	003d5b06 	br	800b88 <__alt_data_end+0xff800b88>
  80161c:	d8c02d17 	ldw	r3,180(sp)
  801620:	d8002785 	stb	zero,158(sp)
  801624:	1c000017 	ldw	r16,0(r3)
  801628:	1cc00104 	addi	r19,r3,4
  80162c:	80041926 	beq	r16,zero,802694 <___vfprintf_internal_r+0x1c90>
  801630:	d9002917 	ldw	r4,164(sp)
  801634:	2003d016 	blt	r4,zero,802578 <___vfprintf_internal_r+0x1b74>
  801638:	200d883a 	mov	r6,r4
  80163c:	000b883a 	mov	r5,zero
  801640:	8009883a 	mov	r4,r16
  801644:	da003d15 	stw	r8,244(sp)
  801648:	08062140 	call	806214 <memchr>
  80164c:	da003d17 	ldw	r8,244(sp)
  801650:	10045426 	beq	r2,zero,8027a4 <___vfprintf_internal_r+0x1da0>
  801654:	1405c83a 	sub	r2,r2,r16
  801658:	d8802e15 	stw	r2,184(sp)
  80165c:	1003cc16 	blt	r2,zero,802590 <___vfprintf_internal_r+0x1b8c>
  801660:	df002783 	ldbu	fp,158(sp)
  801664:	d8802a15 	stw	r2,168(sp)
  801668:	dcc02d15 	stw	r19,180(sp)
  80166c:	d8002915 	stw	zero,164(sp)
  801670:	d8003215 	stw	zero,200(sp)
  801674:	003eb006 	br	801138 <__alt_data_end+0xff801138>
  801678:	18c03fcc 	andi	r3,r3,255
  80167c:	183f9b26 	beq	r3,zero,8014ec <__alt_data_end+0xff8014ec>
  801680:	d9c02785 	stb	r7,158(sp)
  801684:	003f9906 	br	8014ec <__alt_data_end+0xff8014ec>
  801688:	18c03fcc 	andi	r3,r3,255
  80168c:	1805551e 	bne	r3,zero,802be4 <___vfprintf_internal_r+0x21e0>
  801690:	01402074 	movhi	r5,129
  801694:	297e6004 	addi	r5,r5,-1664
  801698:	d9403915 	stw	r5,228(sp)
  80169c:	9080080c 	andi	r2,r18,32
  8016a0:	103fae1e 	bne	r2,zero,80155c <__alt_data_end+0xff80155c>
  8016a4:	9080040c 	andi	r2,r18,16
  8016a8:	1002de26 	beq	r2,zero,802224 <___vfprintf_internal_r+0x1820>
  8016ac:	d8c02d17 	ldw	r3,180(sp)
  8016b0:	002d883a 	mov	r22,zero
  8016b4:	1cc00017 	ldw	r19,0(r3)
  8016b8:	18c00104 	addi	r3,r3,4
  8016bc:	d8c02d15 	stw	r3,180(sp)
  8016c0:	003fab06 	br	801570 <__alt_data_end+0xff801570>
  8016c4:	38803fcc 	andi	r2,r7,255
  8016c8:	1080201c 	xori	r2,r2,128
  8016cc:	10bfe004 	addi	r2,r2,-128
  8016d0:	1002d21e 	bne	r2,zero,80221c <___vfprintf_internal_r+0x1818>
  8016d4:	00c00044 	movi	r3,1
  8016d8:	01c00804 	movi	r7,32
  8016dc:	ac400007 	ldb	r17,0(r21)
  8016e0:	003d2906 	br	800b88 <__alt_data_end+0xff800b88>
  8016e4:	94800054 	ori	r18,r18,1
  8016e8:	ac400007 	ldb	r17,0(r21)
  8016ec:	003d2606 	br	800b88 <__alt_data_end+0xff800b88>
  8016f0:	18c03fcc 	andi	r3,r3,255
  8016f4:	183e0526 	beq	r3,zero,800f0c <__alt_data_end+0xff800f0c>
  8016f8:	d9c02785 	stb	r7,158(sp)
  8016fc:	003e0306 	br	800f0c <__alt_data_end+0xff800f0c>
  801700:	94801014 	ori	r18,r18,64
  801704:	ac400007 	ldb	r17,0(r21)
  801708:	003d1f06 	br	800b88 <__alt_data_end+0xff800b88>
  80170c:	ac400007 	ldb	r17,0(r21)
  801710:	8a438726 	beq	r17,r9,802530 <___vfprintf_internal_r+0x1b2c>
  801714:	94800414 	ori	r18,r18,16
  801718:	003d1b06 	br	800b88 <__alt_data_end+0xff800b88>
  80171c:	18c03fcc 	andi	r3,r3,255
  801720:	1805341e 	bne	r3,zero,802bf4 <___vfprintf_internal_r+0x21f0>
  801724:	9080080c 	andi	r2,r18,32
  801728:	1002cd26 	beq	r2,zero,802260 <___vfprintf_internal_r+0x185c>
  80172c:	d9402d17 	ldw	r5,180(sp)
  801730:	d9002f17 	ldw	r4,188(sp)
  801734:	28800017 	ldw	r2,0(r5)
  801738:	2007d7fa 	srai	r3,r4,31
  80173c:	29400104 	addi	r5,r5,4
  801740:	d9402d15 	stw	r5,180(sp)
  801744:	11000015 	stw	r4,0(r2)
  801748:	10c00115 	stw	r3,4(r2)
  80174c:	003ce506 	br	800ae4 <__alt_data_end+0xff800ae4>
  801750:	d8c02d17 	ldw	r3,180(sp)
  801754:	d9002d17 	ldw	r4,180(sp)
  801758:	d8002785 	stb	zero,158(sp)
  80175c:	18800017 	ldw	r2,0(r3)
  801760:	21000104 	addi	r4,r4,4
  801764:	00c00044 	movi	r3,1
  801768:	d8c02a15 	stw	r3,168(sp)
  80176c:	d8801405 	stb	r2,80(sp)
  801770:	d9002d15 	stw	r4,180(sp)
  801774:	d8c02e15 	stw	r3,184(sp)
  801778:	d8002915 	stw	zero,164(sp)
  80177c:	d8003215 	stw	zero,200(sp)
  801780:	dc001404 	addi	r16,sp,80
  801784:	0039883a 	mov	fp,zero
  801788:	003e7206 	br	801154 <__alt_data_end+0xff801154>
  80178c:	01002074 	movhi	r4,129
  801790:	213e6004 	addi	r4,r4,-1664
  801794:	0039883a 	mov	fp,zero
  801798:	d9003915 	stw	r4,228(sp)
  80179c:	04401e04 	movi	r17,120
  8017a0:	003f8206 	br	8015ac <__alt_data_end+0xff8015ac>
  8017a4:	18c03fcc 	andi	r3,r3,255
  8017a8:	1805061e 	bne	r3,zero,802bc4 <___vfprintf_internal_r+0x21c0>
  8017ac:	883d9126 	beq	r17,zero,800df4 <__alt_data_end+0xff800df4>
  8017b0:	00c00044 	movi	r3,1
  8017b4:	d8c02a15 	stw	r3,168(sp)
  8017b8:	dc401405 	stb	r17,80(sp)
  8017bc:	d8002785 	stb	zero,158(sp)
  8017c0:	003fec06 	br	801774 <__alt_data_end+0xff801774>
  8017c4:	01402074 	movhi	r5,129
  8017c8:	297e6004 	addi	r5,r5,-1664
  8017cc:	d9403915 	stw	r5,228(sp)
  8017d0:	d8c02d15 	stw	r3,180(sp)
  8017d4:	1025883a 	mov	r18,r2
  8017d8:	04401e04 	movi	r17,120
  8017dc:	9d84b03a 	or	r2,r19,r22
  8017e0:	1000fc1e 	bne	r2,zero,801bd4 <___vfprintf_internal_r+0x11d0>
  8017e4:	0039883a 	mov	fp,zero
  8017e8:	00800084 	movi	r2,2
  8017ec:	10803fcc 	andi	r2,r2,255
  8017f0:	00c00044 	movi	r3,1
  8017f4:	10c20f26 	beq	r2,r3,802034 <___vfprintf_internal_r+0x1630>
  8017f8:	00c00084 	movi	r3,2
  8017fc:	10fd6326 	beq	r2,r3,800d8c <__alt_data_end+0xff800d8c>
  801800:	003e2d06 	br	8010b8 <__alt_data_end+0xff8010b8>
  801804:	d8c02017 	ldw	r3,128(sp)
  801808:	003e9306 	br	801258 <__alt_data_end+0xff801258>
  80180c:	00801944 	movi	r2,101
  801810:	14407e0e 	bge	r2,r17,801a0c <___vfprintf_internal_r+0x1008>
  801814:	d9003617 	ldw	r4,216(sp)
  801818:	d9403817 	ldw	r5,224(sp)
  80181c:	000d883a 	mov	r6,zero
  801820:	000f883a 	mov	r7,zero
  801824:	d8c03c15 	stw	r3,240(sp)
  801828:	da003d15 	stw	r8,244(sp)
  80182c:	080bc780 	call	80bc78 <__eqdf2>
  801830:	d8c03c17 	ldw	r3,240(sp)
  801834:	da003d17 	ldw	r8,244(sp)
  801838:	1000f71e 	bne	r2,zero,801c18 <___vfprintf_internal_r+0x1214>
  80183c:	d8801f17 	ldw	r2,124(sp)
  801840:	01002074 	movhi	r4,129
  801844:	213e6704 	addi	r4,r4,-1636
  801848:	18c00044 	addi	r3,r3,1
  80184c:	10800044 	addi	r2,r2,1
  801850:	41000015 	stw	r4,0(r8)
  801854:	01000044 	movi	r4,1
  801858:	41000115 	stw	r4,4(r8)
  80185c:	d8c02015 	stw	r3,128(sp)
  801860:	d8801f15 	stw	r2,124(sp)
  801864:	010001c4 	movi	r4,7
  801868:	2082b816 	blt	r4,r2,80234c <___vfprintf_internal_r+0x1948>
  80186c:	42000204 	addi	r8,r8,8
  801870:	d8802617 	ldw	r2,152(sp)
  801874:	d9403317 	ldw	r5,204(sp)
  801878:	11400216 	blt	r2,r5,801884 <___vfprintf_internal_r+0xe80>
  80187c:	9080004c 	andi	r2,r18,1
  801880:	103ed526 	beq	r2,zero,8013d8 <__alt_data_end+0xff8013d8>
  801884:	d8803717 	ldw	r2,220(sp)
  801888:	d9003417 	ldw	r4,208(sp)
  80188c:	d9403717 	ldw	r5,220(sp)
  801890:	1887883a 	add	r3,r3,r2
  801894:	d8801f17 	ldw	r2,124(sp)
  801898:	41000015 	stw	r4,0(r8)
  80189c:	41400115 	stw	r5,4(r8)
  8018a0:	10800044 	addi	r2,r2,1
  8018a4:	d8c02015 	stw	r3,128(sp)
  8018a8:	d8801f15 	stw	r2,124(sp)
  8018ac:	010001c4 	movi	r4,7
  8018b0:	20832916 	blt	r4,r2,802558 <___vfprintf_internal_r+0x1b54>
  8018b4:	42000204 	addi	r8,r8,8
  8018b8:	d8803317 	ldw	r2,204(sp)
  8018bc:	143fffc4 	addi	r16,r2,-1
  8018c0:	043ec50e 	bge	zero,r16,8013d8 <__alt_data_end+0xff8013d8>
  8018c4:	04400404 	movi	r17,16
  8018c8:	d8801f17 	ldw	r2,124(sp)
  8018cc:	8c00880e 	bge	r17,r16,801af0 <___vfprintf_internal_r+0x10ec>
  8018d0:	01402074 	movhi	r5,129
  8018d4:	297e6784 	addi	r5,r5,-1634
  8018d8:	d9402b15 	stw	r5,172(sp)
  8018dc:	058001c4 	movi	r22,7
  8018e0:	dcc02c17 	ldw	r19,176(sp)
  8018e4:	00000306 	br	8018f4 <___vfprintf_internal_r+0xef0>
  8018e8:	42000204 	addi	r8,r8,8
  8018ec:	843ffc04 	addi	r16,r16,-16
  8018f0:	8c00820e 	bge	r17,r16,801afc <___vfprintf_internal_r+0x10f8>
  8018f4:	18c00404 	addi	r3,r3,16
  8018f8:	10800044 	addi	r2,r2,1
  8018fc:	45000015 	stw	r20,0(r8)
  801900:	44400115 	stw	r17,4(r8)
  801904:	d8c02015 	stw	r3,128(sp)
  801908:	d8801f15 	stw	r2,124(sp)
  80190c:	b0bff60e 	bge	r22,r2,8018e8 <__alt_data_end+0xff8018e8>
  801910:	d9801e04 	addi	r6,sp,120
  801914:	b80b883a 	mov	r5,r23
  801918:	9809883a 	mov	r4,r19
  80191c:	08080000 	call	808000 <__sprint_r>
  801920:	103d3a1e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  801924:	d8c02017 	ldw	r3,128(sp)
  801928:	d8801f17 	ldw	r2,124(sp)
  80192c:	da000404 	addi	r8,sp,16
  801930:	003fee06 	br	8018ec <__alt_data_end+0xff8018ec>
  801934:	d9403117 	ldw	r5,196(sp)
  801938:	d8802a17 	ldw	r2,168(sp)
  80193c:	28adc83a 	sub	r22,r5,r2
  801940:	05be630e 	bge	zero,r22,8012d0 <__alt_data_end+0xff8012d0>
  801944:	07000404 	movi	fp,16
  801948:	d8801f17 	ldw	r2,124(sp)
  80194c:	e5838f0e 	bge	fp,r22,80278c <___vfprintf_internal_r+0x1d88>
  801950:	01402074 	movhi	r5,129
  801954:	297e6784 	addi	r5,r5,-1634
  801958:	dc403015 	stw	r17,192(sp)
  80195c:	d9402b15 	stw	r5,172(sp)
  801960:	b023883a 	mov	r17,r22
  801964:	04c001c4 	movi	r19,7
  801968:	a82d883a 	mov	r22,r21
  80196c:	902b883a 	mov	r21,r18
  801970:	8025883a 	mov	r18,r16
  801974:	dc002c17 	ldw	r16,176(sp)
  801978:	00000306 	br	801988 <___vfprintf_internal_r+0xf84>
  80197c:	8c7ffc04 	addi	r17,r17,-16
  801980:	42000204 	addi	r8,r8,8
  801984:	e440110e 	bge	fp,r17,8019cc <___vfprintf_internal_r+0xfc8>
  801988:	18c00404 	addi	r3,r3,16
  80198c:	10800044 	addi	r2,r2,1
  801990:	45000015 	stw	r20,0(r8)
  801994:	47000115 	stw	fp,4(r8)
  801998:	d8c02015 	stw	r3,128(sp)
  80199c:	d8801f15 	stw	r2,124(sp)
  8019a0:	98bff60e 	bge	r19,r2,80197c <__alt_data_end+0xff80197c>
  8019a4:	d9801e04 	addi	r6,sp,120
  8019a8:	b80b883a 	mov	r5,r23
  8019ac:	8009883a 	mov	r4,r16
  8019b0:	08080000 	call	808000 <__sprint_r>
  8019b4:	103d151e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  8019b8:	8c7ffc04 	addi	r17,r17,-16
  8019bc:	d8c02017 	ldw	r3,128(sp)
  8019c0:	d8801f17 	ldw	r2,124(sp)
  8019c4:	da000404 	addi	r8,sp,16
  8019c8:	e47fef16 	blt	fp,r17,801988 <__alt_data_end+0xff801988>
  8019cc:	9021883a 	mov	r16,r18
  8019d0:	a825883a 	mov	r18,r21
  8019d4:	b02b883a 	mov	r21,r22
  8019d8:	882d883a 	mov	r22,r17
  8019dc:	dc403017 	ldw	r17,192(sp)
  8019e0:	d9002b17 	ldw	r4,172(sp)
  8019e4:	1d87883a 	add	r3,r3,r22
  8019e8:	10800044 	addi	r2,r2,1
  8019ec:	41000015 	stw	r4,0(r8)
  8019f0:	45800115 	stw	r22,4(r8)
  8019f4:	d8c02015 	stw	r3,128(sp)
  8019f8:	d8801f15 	stw	r2,124(sp)
  8019fc:	010001c4 	movi	r4,7
  801a00:	20818e16 	blt	r4,r2,80203c <___vfprintf_internal_r+0x1638>
  801a04:	42000204 	addi	r8,r8,8
  801a08:	003e3106 	br	8012d0 <__alt_data_end+0xff8012d0>
  801a0c:	d9403317 	ldw	r5,204(sp)
  801a10:	00800044 	movi	r2,1
  801a14:	18c00044 	addi	r3,r3,1
  801a18:	1141530e 	bge	r2,r5,801f68 <___vfprintf_internal_r+0x1564>
  801a1c:	dc401f17 	ldw	r17,124(sp)
  801a20:	00800044 	movi	r2,1
  801a24:	40800115 	stw	r2,4(r8)
  801a28:	8c400044 	addi	r17,r17,1
  801a2c:	44000015 	stw	r16,0(r8)
  801a30:	d8c02015 	stw	r3,128(sp)
  801a34:	dc401f15 	stw	r17,124(sp)
  801a38:	008001c4 	movi	r2,7
  801a3c:	14416b16 	blt	r2,r17,801fec <___vfprintf_internal_r+0x15e8>
  801a40:	42000204 	addi	r8,r8,8
  801a44:	d8803717 	ldw	r2,220(sp)
  801a48:	d9003417 	ldw	r4,208(sp)
  801a4c:	8c400044 	addi	r17,r17,1
  801a50:	10c7883a 	add	r3,r2,r3
  801a54:	40800115 	stw	r2,4(r8)
  801a58:	41000015 	stw	r4,0(r8)
  801a5c:	d8c02015 	stw	r3,128(sp)
  801a60:	dc401f15 	stw	r17,124(sp)
  801a64:	008001c4 	movi	r2,7
  801a68:	14416916 	blt	r2,r17,802010 <___vfprintf_internal_r+0x160c>
  801a6c:	45800204 	addi	r22,r8,8
  801a70:	d9003617 	ldw	r4,216(sp)
  801a74:	d9403817 	ldw	r5,224(sp)
  801a78:	000d883a 	mov	r6,zero
  801a7c:	000f883a 	mov	r7,zero
  801a80:	d8c03c15 	stw	r3,240(sp)
  801a84:	080bc780 	call	80bc78 <__eqdf2>
  801a88:	d8c03c17 	ldw	r3,240(sp)
  801a8c:	1000bc26 	beq	r2,zero,801d80 <___vfprintf_internal_r+0x137c>
  801a90:	d9403317 	ldw	r5,204(sp)
  801a94:	84000044 	addi	r16,r16,1
  801a98:	8c400044 	addi	r17,r17,1
  801a9c:	28bfffc4 	addi	r2,r5,-1
  801aa0:	1887883a 	add	r3,r3,r2
  801aa4:	b0800115 	stw	r2,4(r22)
  801aa8:	b4000015 	stw	r16,0(r22)
  801aac:	d8c02015 	stw	r3,128(sp)
  801ab0:	dc401f15 	stw	r17,124(sp)
  801ab4:	008001c4 	movi	r2,7
  801ab8:	14414316 	blt	r2,r17,801fc8 <___vfprintf_internal_r+0x15c4>
  801abc:	b5800204 	addi	r22,r22,8
  801ac0:	d9003a17 	ldw	r4,232(sp)
  801ac4:	df0022c4 	addi	fp,sp,139
  801ac8:	8c400044 	addi	r17,r17,1
  801acc:	20c7883a 	add	r3,r4,r3
  801ad0:	b7000015 	stw	fp,0(r22)
  801ad4:	b1000115 	stw	r4,4(r22)
  801ad8:	d8c02015 	stw	r3,128(sp)
  801adc:	dc401f15 	stw	r17,124(sp)
  801ae0:	008001c4 	movi	r2,7
  801ae4:	14400e16 	blt	r2,r17,801b20 <___vfprintf_internal_r+0x111c>
  801ae8:	b2000204 	addi	r8,r22,8
  801aec:	003e3a06 	br	8013d8 <__alt_data_end+0xff8013d8>
  801af0:	01002074 	movhi	r4,129
  801af4:	213e6784 	addi	r4,r4,-1634
  801af8:	d9002b15 	stw	r4,172(sp)
  801afc:	d9002b17 	ldw	r4,172(sp)
  801b00:	1c07883a 	add	r3,r3,r16
  801b04:	44000115 	stw	r16,4(r8)
  801b08:	41000015 	stw	r4,0(r8)
  801b0c:	10800044 	addi	r2,r2,1
  801b10:	d8c02015 	stw	r3,128(sp)
  801b14:	d8801f15 	stw	r2,124(sp)
  801b18:	010001c4 	movi	r4,7
  801b1c:	20be2d0e 	bge	r4,r2,8013d4 <__alt_data_end+0xff8013d4>
  801b20:	d9002c17 	ldw	r4,176(sp)
  801b24:	d9801e04 	addi	r6,sp,120
  801b28:	b80b883a 	mov	r5,r23
  801b2c:	08080000 	call	808000 <__sprint_r>
  801b30:	103cb61e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  801b34:	d8c02017 	ldw	r3,128(sp)
  801b38:	da000404 	addi	r8,sp,16
  801b3c:	003e2606 	br	8013d8 <__alt_data_end+0xff8013d8>
  801b40:	d9002c17 	ldw	r4,176(sp)
  801b44:	d9801e04 	addi	r6,sp,120
  801b48:	b80b883a 	mov	r5,r23
  801b4c:	08080000 	call	808000 <__sprint_r>
  801b50:	103e5d26 	beq	r2,zero,8014c8 <__alt_data_end+0xff8014c8>
  801b54:	003cad06 	br	800e0c <__alt_data_end+0xff800e0c>
  801b58:	d9002c17 	ldw	r4,176(sp)
  801b5c:	d9801e04 	addi	r6,sp,120
  801b60:	b80b883a 	mov	r5,r23
  801b64:	08080000 	call	808000 <__sprint_r>
  801b68:	103ca81e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  801b6c:	d8c02017 	ldw	r3,128(sp)
  801b70:	da000404 	addi	r8,sp,16
  801b74:	003e0b06 	br	8013a4 <__alt_data_end+0xff8013a4>
  801b78:	d9002c17 	ldw	r4,176(sp)
  801b7c:	d9801e04 	addi	r6,sp,120
  801b80:	b80b883a 	mov	r5,r23
  801b84:	08080000 	call	808000 <__sprint_r>
  801b88:	103ca01e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  801b8c:	d8c02017 	ldw	r3,128(sp)
  801b90:	da000404 	addi	r8,sp,16
  801b94:	003dbd06 	br	80128c <__alt_data_end+0xff80128c>
  801b98:	d9002c17 	ldw	r4,176(sp)
  801b9c:	d9801e04 	addi	r6,sp,120
  801ba0:	b80b883a 	mov	r5,r23
  801ba4:	08080000 	call	808000 <__sprint_r>
  801ba8:	103c981e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  801bac:	d8c02017 	ldw	r3,128(sp)
  801bb0:	da000404 	addi	r8,sp,16
  801bb4:	003dc306 	br	8012c4 <__alt_data_end+0xff8012c4>
  801bb8:	d8802917 	ldw	r2,164(sp)
  801bbc:	d8002785 	stb	zero,158(sp)
  801bc0:	103f0616 	blt	r2,zero,8017dc <__alt_data_end+0xff8017dc>
  801bc4:	00ffdfc4 	movi	r3,-129
  801bc8:	9d84b03a 	or	r2,r19,r22
  801bcc:	90e4703a 	and	r18,r18,r3
  801bd0:	103c6b26 	beq	r2,zero,800d80 <__alt_data_end+0xff800d80>
  801bd4:	0039883a 	mov	fp,zero
  801bd8:	003e7406 	br	8015ac <__alt_data_end+0xff8015ac>
  801bdc:	9080040c 	andi	r2,r18,16
  801be0:	1001b326 	beq	r2,zero,8022b0 <___vfprintf_internal_r+0x18ac>
  801be4:	d9002d17 	ldw	r4,180(sp)
  801be8:	d9402917 	ldw	r5,164(sp)
  801bec:	d8002785 	stb	zero,158(sp)
  801bf0:	20800104 	addi	r2,r4,4
  801bf4:	24c00017 	ldw	r19,0(r4)
  801bf8:	002d883a 	mov	r22,zero
  801bfc:	2801b516 	blt	r5,zero,8022d4 <___vfprintf_internal_r+0x18d0>
  801c00:	00ffdfc4 	movi	r3,-129
  801c04:	d8802d15 	stw	r2,180(sp)
  801c08:	90e4703a 	and	r18,r18,r3
  801c0c:	983d2726 	beq	r19,zero,8010ac <__alt_data_end+0xff8010ac>
  801c10:	0039883a 	mov	fp,zero
  801c14:	003d2a06 	br	8010c0 <__alt_data_end+0xff8010c0>
  801c18:	dc402617 	ldw	r17,152(sp)
  801c1c:	0441d30e 	bge	zero,r17,80236c <___vfprintf_internal_r+0x1968>
  801c20:	dc403217 	ldw	r17,200(sp)
  801c24:	d8803317 	ldw	r2,204(sp)
  801c28:	1440010e 	bge	r2,r17,801c30 <___vfprintf_internal_r+0x122c>
  801c2c:	1023883a 	mov	r17,r2
  801c30:	04400a0e 	bge	zero,r17,801c5c <___vfprintf_internal_r+0x1258>
  801c34:	d8801f17 	ldw	r2,124(sp)
  801c38:	1c47883a 	add	r3,r3,r17
  801c3c:	44000015 	stw	r16,0(r8)
  801c40:	10800044 	addi	r2,r2,1
  801c44:	44400115 	stw	r17,4(r8)
  801c48:	d8c02015 	stw	r3,128(sp)
  801c4c:	d8801f15 	stw	r2,124(sp)
  801c50:	010001c4 	movi	r4,7
  801c54:	20826516 	blt	r4,r2,8025ec <___vfprintf_internal_r+0x1be8>
  801c58:	42000204 	addi	r8,r8,8
  801c5c:	88026116 	blt	r17,zero,8025e4 <___vfprintf_internal_r+0x1be0>
  801c60:	d9003217 	ldw	r4,200(sp)
  801c64:	2463c83a 	sub	r17,r4,r17
  801c68:	04407b0e 	bge	zero,r17,801e58 <___vfprintf_internal_r+0x1454>
  801c6c:	05800404 	movi	r22,16
  801c70:	d8801f17 	ldw	r2,124(sp)
  801c74:	b4419d0e 	bge	r22,r17,8022ec <___vfprintf_internal_r+0x18e8>
  801c78:	01002074 	movhi	r4,129
  801c7c:	213e6784 	addi	r4,r4,-1634
  801c80:	d9002b15 	stw	r4,172(sp)
  801c84:	070001c4 	movi	fp,7
  801c88:	dcc02c17 	ldw	r19,176(sp)
  801c8c:	00000306 	br	801c9c <___vfprintf_internal_r+0x1298>
  801c90:	42000204 	addi	r8,r8,8
  801c94:	8c7ffc04 	addi	r17,r17,-16
  801c98:	b441970e 	bge	r22,r17,8022f8 <___vfprintf_internal_r+0x18f4>
  801c9c:	18c00404 	addi	r3,r3,16
  801ca0:	10800044 	addi	r2,r2,1
  801ca4:	45000015 	stw	r20,0(r8)
  801ca8:	45800115 	stw	r22,4(r8)
  801cac:	d8c02015 	stw	r3,128(sp)
  801cb0:	d8801f15 	stw	r2,124(sp)
  801cb4:	e0bff60e 	bge	fp,r2,801c90 <__alt_data_end+0xff801c90>
  801cb8:	d9801e04 	addi	r6,sp,120
  801cbc:	b80b883a 	mov	r5,r23
  801cc0:	9809883a 	mov	r4,r19
  801cc4:	08080000 	call	808000 <__sprint_r>
  801cc8:	103c501e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  801ccc:	d8c02017 	ldw	r3,128(sp)
  801cd0:	d8801f17 	ldw	r2,124(sp)
  801cd4:	da000404 	addi	r8,sp,16
  801cd8:	003fee06 	br	801c94 <__alt_data_end+0xff801c94>
  801cdc:	d9002c17 	ldw	r4,176(sp)
  801ce0:	d9801e04 	addi	r6,sp,120
  801ce4:	b80b883a 	mov	r5,r23
  801ce8:	08080000 	call	808000 <__sprint_r>
  801cec:	103c471e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  801cf0:	d8c02017 	ldw	r3,128(sp)
  801cf4:	df002787 	ldb	fp,158(sp)
  801cf8:	da000404 	addi	r8,sp,16
  801cfc:	003d5606 	br	801258 <__alt_data_end+0xff801258>
  801d00:	9080040c 	andi	r2,r18,16
  801d04:	10016126 	beq	r2,zero,80228c <___vfprintf_internal_r+0x1888>
  801d08:	d8802d17 	ldw	r2,180(sp)
  801d0c:	14c00017 	ldw	r19,0(r2)
  801d10:	10800104 	addi	r2,r2,4
  801d14:	d8802d15 	stw	r2,180(sp)
  801d18:	982dd7fa 	srai	r22,r19,31
  801d1c:	b005883a 	mov	r2,r22
  801d20:	003c8206 	br	800f2c <__alt_data_end+0xff800f2c>
  801d24:	9080040c 	andi	r2,r18,16
  801d28:	10003526 	beq	r2,zero,801e00 <___vfprintf_internal_r+0x13fc>
  801d2c:	d9402d17 	ldw	r5,180(sp)
  801d30:	d8c02917 	ldw	r3,164(sp)
  801d34:	d8002785 	stb	zero,158(sp)
  801d38:	28800104 	addi	r2,r5,4
  801d3c:	2cc00017 	ldw	r19,0(r5)
  801d40:	002d883a 	mov	r22,zero
  801d44:	18003716 	blt	r3,zero,801e24 <___vfprintf_internal_r+0x1420>
  801d48:	00ffdfc4 	movi	r3,-129
  801d4c:	d8802d15 	stw	r2,180(sp)
  801d50:	90e4703a 	and	r18,r18,r3
  801d54:	0039883a 	mov	fp,zero
  801d58:	983df326 	beq	r19,zero,801528 <__alt_data_end+0xff801528>
  801d5c:	00800244 	movi	r2,9
  801d60:	14fc7b36 	bltu	r2,r19,800f50 <__alt_data_end+0xff800f50>
  801d64:	d8c02817 	ldw	r3,160(sp)
  801d68:	dc001dc4 	addi	r16,sp,119
  801d6c:	9cc00c04 	addi	r19,r19,48
  801d70:	1c07c83a 	sub	r3,r3,r16
  801d74:	dcc01dc5 	stb	r19,119(sp)
  801d78:	d8c02e15 	stw	r3,184(sp)
  801d7c:	003ce806 	br	801120 <__alt_data_end+0xff801120>
  801d80:	d8803317 	ldw	r2,204(sp)
  801d84:	143fffc4 	addi	r16,r2,-1
  801d88:	043f4d0e 	bge	zero,r16,801ac0 <__alt_data_end+0xff801ac0>
  801d8c:	07000404 	movi	fp,16
  801d90:	e400810e 	bge	fp,r16,801f98 <___vfprintf_internal_r+0x1594>
  801d94:	01402074 	movhi	r5,129
  801d98:	297e6784 	addi	r5,r5,-1634
  801d9c:	d9402b15 	stw	r5,172(sp)
  801da0:	01c001c4 	movi	r7,7
  801da4:	dcc02c17 	ldw	r19,176(sp)
  801da8:	00000306 	br	801db8 <___vfprintf_internal_r+0x13b4>
  801dac:	b5800204 	addi	r22,r22,8
  801db0:	843ffc04 	addi	r16,r16,-16
  801db4:	e4007b0e 	bge	fp,r16,801fa4 <___vfprintf_internal_r+0x15a0>
  801db8:	18c00404 	addi	r3,r3,16
  801dbc:	8c400044 	addi	r17,r17,1
  801dc0:	b5000015 	stw	r20,0(r22)
  801dc4:	b7000115 	stw	fp,4(r22)
  801dc8:	d8c02015 	stw	r3,128(sp)
  801dcc:	dc401f15 	stw	r17,124(sp)
  801dd0:	3c7ff60e 	bge	r7,r17,801dac <__alt_data_end+0xff801dac>
  801dd4:	d9801e04 	addi	r6,sp,120
  801dd8:	b80b883a 	mov	r5,r23
  801ddc:	9809883a 	mov	r4,r19
  801de0:	d9c03c15 	stw	r7,240(sp)
  801de4:	08080000 	call	808000 <__sprint_r>
  801de8:	d9c03c17 	ldw	r7,240(sp)
  801dec:	103c071e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  801df0:	d8c02017 	ldw	r3,128(sp)
  801df4:	dc401f17 	ldw	r17,124(sp)
  801df8:	dd800404 	addi	r22,sp,16
  801dfc:	003fec06 	br	801db0 <__alt_data_end+0xff801db0>
  801e00:	9080100c 	andi	r2,r18,64
  801e04:	d8002785 	stb	zero,158(sp)
  801e08:	10010e26 	beq	r2,zero,802244 <___vfprintf_internal_r+0x1840>
  801e0c:	d9002d17 	ldw	r4,180(sp)
  801e10:	d9402917 	ldw	r5,164(sp)
  801e14:	002d883a 	mov	r22,zero
  801e18:	20800104 	addi	r2,r4,4
  801e1c:	24c0000b 	ldhu	r19,0(r4)
  801e20:	283fc90e 	bge	r5,zero,801d48 <__alt_data_end+0xff801d48>
  801e24:	d8802d15 	stw	r2,180(sp)
  801e28:	0039883a 	mov	fp,zero
  801e2c:	9d84b03a 	or	r2,r19,r22
  801e30:	103c461e 	bne	r2,zero,800f4c <__alt_data_end+0xff800f4c>
  801e34:	00800044 	movi	r2,1
  801e38:	003e6c06 	br	8017ec <__alt_data_end+0xff8017ec>
  801e3c:	d9002c17 	ldw	r4,176(sp)
  801e40:	d9801e04 	addi	r6,sp,120
  801e44:	b80b883a 	mov	r5,r23
  801e48:	08080000 	call	808000 <__sprint_r>
  801e4c:	103bef1e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  801e50:	d8c02017 	ldw	r3,128(sp)
  801e54:	da000404 	addi	r8,sp,16
  801e58:	d9003217 	ldw	r4,200(sp)
  801e5c:	d8802617 	ldw	r2,152(sp)
  801e60:	d9403317 	ldw	r5,204(sp)
  801e64:	8123883a 	add	r17,r16,r4
  801e68:	11400216 	blt	r2,r5,801e74 <___vfprintf_internal_r+0x1470>
  801e6c:	9100004c 	andi	r4,r18,1
  801e70:	20000d26 	beq	r4,zero,801ea8 <___vfprintf_internal_r+0x14a4>
  801e74:	d9003717 	ldw	r4,220(sp)
  801e78:	d9403417 	ldw	r5,208(sp)
  801e7c:	1907883a 	add	r3,r3,r4
  801e80:	d9001f17 	ldw	r4,124(sp)
  801e84:	41400015 	stw	r5,0(r8)
  801e88:	d9403717 	ldw	r5,220(sp)
  801e8c:	21000044 	addi	r4,r4,1
  801e90:	d8c02015 	stw	r3,128(sp)
  801e94:	41400115 	stw	r5,4(r8)
  801e98:	d9001f15 	stw	r4,124(sp)
  801e9c:	014001c4 	movi	r5,7
  801ea0:	2901e816 	blt	r5,r4,802644 <___vfprintf_internal_r+0x1c40>
  801ea4:	42000204 	addi	r8,r8,8
  801ea8:	d9003317 	ldw	r4,204(sp)
  801eac:	8121883a 	add	r16,r16,r4
  801eb0:	2085c83a 	sub	r2,r4,r2
  801eb4:	8461c83a 	sub	r16,r16,r17
  801eb8:	1400010e 	bge	r2,r16,801ec0 <___vfprintf_internal_r+0x14bc>
  801ebc:	1021883a 	mov	r16,r2
  801ec0:	04000a0e 	bge	zero,r16,801eec <___vfprintf_internal_r+0x14e8>
  801ec4:	d9001f17 	ldw	r4,124(sp)
  801ec8:	1c07883a 	add	r3,r3,r16
  801ecc:	44400015 	stw	r17,0(r8)
  801ed0:	21000044 	addi	r4,r4,1
  801ed4:	44000115 	stw	r16,4(r8)
  801ed8:	d8c02015 	stw	r3,128(sp)
  801edc:	d9001f15 	stw	r4,124(sp)
  801ee0:	014001c4 	movi	r5,7
  801ee4:	2901fb16 	blt	r5,r4,8026d4 <___vfprintf_internal_r+0x1cd0>
  801ee8:	42000204 	addi	r8,r8,8
  801eec:	8001f716 	blt	r16,zero,8026cc <___vfprintf_internal_r+0x1cc8>
  801ef0:	1421c83a 	sub	r16,r2,r16
  801ef4:	043d380e 	bge	zero,r16,8013d8 <__alt_data_end+0xff8013d8>
  801ef8:	04400404 	movi	r17,16
  801efc:	d8801f17 	ldw	r2,124(sp)
  801f00:	8c3efb0e 	bge	r17,r16,801af0 <__alt_data_end+0xff801af0>
  801f04:	01402074 	movhi	r5,129
  801f08:	297e6784 	addi	r5,r5,-1634
  801f0c:	d9402b15 	stw	r5,172(sp)
  801f10:	058001c4 	movi	r22,7
  801f14:	dcc02c17 	ldw	r19,176(sp)
  801f18:	00000306 	br	801f28 <___vfprintf_internal_r+0x1524>
  801f1c:	42000204 	addi	r8,r8,8
  801f20:	843ffc04 	addi	r16,r16,-16
  801f24:	8c3ef50e 	bge	r17,r16,801afc <__alt_data_end+0xff801afc>
  801f28:	18c00404 	addi	r3,r3,16
  801f2c:	10800044 	addi	r2,r2,1
  801f30:	45000015 	stw	r20,0(r8)
  801f34:	44400115 	stw	r17,4(r8)
  801f38:	d8c02015 	stw	r3,128(sp)
  801f3c:	d8801f15 	stw	r2,124(sp)
  801f40:	b0bff60e 	bge	r22,r2,801f1c <__alt_data_end+0xff801f1c>
  801f44:	d9801e04 	addi	r6,sp,120
  801f48:	b80b883a 	mov	r5,r23
  801f4c:	9809883a 	mov	r4,r19
  801f50:	08080000 	call	808000 <__sprint_r>
  801f54:	103bad1e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  801f58:	d8c02017 	ldw	r3,128(sp)
  801f5c:	d8801f17 	ldw	r2,124(sp)
  801f60:	da000404 	addi	r8,sp,16
  801f64:	003fee06 	br	801f20 <__alt_data_end+0xff801f20>
  801f68:	9088703a 	and	r4,r18,r2
  801f6c:	203eab1e 	bne	r4,zero,801a1c <__alt_data_end+0xff801a1c>
  801f70:	dc401f17 	ldw	r17,124(sp)
  801f74:	40800115 	stw	r2,4(r8)
  801f78:	44000015 	stw	r16,0(r8)
  801f7c:	8c400044 	addi	r17,r17,1
  801f80:	d8c02015 	stw	r3,128(sp)
  801f84:	dc401f15 	stw	r17,124(sp)
  801f88:	008001c4 	movi	r2,7
  801f8c:	14400e16 	blt	r2,r17,801fc8 <___vfprintf_internal_r+0x15c4>
  801f90:	45800204 	addi	r22,r8,8
  801f94:	003eca06 	br	801ac0 <__alt_data_end+0xff801ac0>
  801f98:	01002074 	movhi	r4,129
  801f9c:	213e6784 	addi	r4,r4,-1634
  801fa0:	d9002b15 	stw	r4,172(sp)
  801fa4:	d8802b17 	ldw	r2,172(sp)
  801fa8:	1c07883a 	add	r3,r3,r16
  801fac:	8c400044 	addi	r17,r17,1
  801fb0:	b0800015 	stw	r2,0(r22)
  801fb4:	b4000115 	stw	r16,4(r22)
  801fb8:	d8c02015 	stw	r3,128(sp)
  801fbc:	dc401f15 	stw	r17,124(sp)
  801fc0:	008001c4 	movi	r2,7
  801fc4:	147ebd0e 	bge	r2,r17,801abc <__alt_data_end+0xff801abc>
  801fc8:	d9002c17 	ldw	r4,176(sp)
  801fcc:	d9801e04 	addi	r6,sp,120
  801fd0:	b80b883a 	mov	r5,r23
  801fd4:	08080000 	call	808000 <__sprint_r>
  801fd8:	103b8c1e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  801fdc:	d8c02017 	ldw	r3,128(sp)
  801fe0:	dc401f17 	ldw	r17,124(sp)
  801fe4:	dd800404 	addi	r22,sp,16
  801fe8:	003eb506 	br	801ac0 <__alt_data_end+0xff801ac0>
  801fec:	d9002c17 	ldw	r4,176(sp)
  801ff0:	d9801e04 	addi	r6,sp,120
  801ff4:	b80b883a 	mov	r5,r23
  801ff8:	08080000 	call	808000 <__sprint_r>
  801ffc:	103b831e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  802000:	d8c02017 	ldw	r3,128(sp)
  802004:	dc401f17 	ldw	r17,124(sp)
  802008:	da000404 	addi	r8,sp,16
  80200c:	003e8d06 	br	801a44 <__alt_data_end+0xff801a44>
  802010:	d9002c17 	ldw	r4,176(sp)
  802014:	d9801e04 	addi	r6,sp,120
  802018:	b80b883a 	mov	r5,r23
  80201c:	08080000 	call	808000 <__sprint_r>
  802020:	103b7a1e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  802024:	d8c02017 	ldw	r3,128(sp)
  802028:	dc401f17 	ldw	r17,124(sp)
  80202c:	dd800404 	addi	r22,sp,16
  802030:	003e8f06 	br	801a70 <__alt_data_end+0xff801a70>
  802034:	0027883a 	mov	r19,zero
  802038:	003f4a06 	br	801d64 <__alt_data_end+0xff801d64>
  80203c:	d9002c17 	ldw	r4,176(sp)
  802040:	d9801e04 	addi	r6,sp,120
  802044:	b80b883a 	mov	r5,r23
  802048:	08080000 	call	808000 <__sprint_r>
  80204c:	103b6f1e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  802050:	d8c02017 	ldw	r3,128(sp)
  802054:	da000404 	addi	r8,sp,16
  802058:	003c9d06 	br	8012d0 <__alt_data_end+0xff8012d0>
  80205c:	04e7c83a 	sub	r19,zero,r19
  802060:	9804c03a 	cmpne	r2,r19,zero
  802064:	05adc83a 	sub	r22,zero,r22
  802068:	b0adc83a 	sub	r22,r22,r2
  80206c:	d8802917 	ldw	r2,164(sp)
  802070:	07000b44 	movi	fp,45
  802074:	df002785 	stb	fp,158(sp)
  802078:	10017b16 	blt	r2,zero,802668 <___vfprintf_internal_r+0x1c64>
  80207c:	00bfdfc4 	movi	r2,-129
  802080:	90a4703a 	and	r18,r18,r2
  802084:	003bb106 	br	800f4c <__alt_data_end+0xff800f4c>
  802088:	d9003617 	ldw	r4,216(sp)
  80208c:	d9403817 	ldw	r5,224(sp)
  802090:	da003d15 	stw	r8,244(sp)
  802094:	0807c240 	call	807c24 <__fpclassifyd>
  802098:	da003d17 	ldw	r8,244(sp)
  80209c:	1000f026 	beq	r2,zero,802460 <___vfprintf_internal_r+0x1a5c>
  8020a0:	d9002917 	ldw	r4,164(sp)
  8020a4:	05bff7c4 	movi	r22,-33
  8020a8:	00bfffc4 	movi	r2,-1
  8020ac:	8dac703a 	and	r22,r17,r22
  8020b0:	20820026 	beq	r4,r2,8028b4 <___vfprintf_internal_r+0x1eb0>
  8020b4:	008011c4 	movi	r2,71
  8020b8:	b081f726 	beq	r22,r2,802898 <___vfprintf_internal_r+0x1e94>
  8020bc:	d9003817 	ldw	r4,224(sp)
  8020c0:	90c04014 	ori	r3,r18,256
  8020c4:	d8c02b15 	stw	r3,172(sp)
  8020c8:	20021516 	blt	r4,zero,802920 <___vfprintf_internal_r+0x1f1c>
  8020cc:	dcc03817 	ldw	r19,224(sp)
  8020d0:	d8002a05 	stb	zero,168(sp)
  8020d4:	00801984 	movi	r2,102
  8020d8:	8881f926 	beq	r17,r2,8028c0 <___vfprintf_internal_r+0x1ebc>
  8020dc:	00801184 	movi	r2,70
  8020e0:	88821c26 	beq	r17,r2,802954 <___vfprintf_internal_r+0x1f50>
  8020e4:	00801144 	movi	r2,69
  8020e8:	b081ef26 	beq	r22,r2,8028a8 <___vfprintf_internal_r+0x1ea4>
  8020ec:	d8c02917 	ldw	r3,164(sp)
  8020f0:	d8802104 	addi	r2,sp,132
  8020f4:	d8800315 	stw	r2,12(sp)
  8020f8:	d9403617 	ldw	r5,216(sp)
  8020fc:	d8802504 	addi	r2,sp,148
  802100:	d9002c17 	ldw	r4,176(sp)
  802104:	d8800215 	stw	r2,8(sp)
  802108:	d8802604 	addi	r2,sp,152
  80210c:	d8c00015 	stw	r3,0(sp)
  802110:	d8800115 	stw	r2,4(sp)
  802114:	01c00084 	movi	r7,2
  802118:	980d883a 	mov	r6,r19
  80211c:	d8c03c15 	stw	r3,240(sp)
  802120:	da003d15 	stw	r8,244(sp)
  802124:	08030280 	call	803028 <_dtoa_r>
  802128:	1021883a 	mov	r16,r2
  80212c:	008019c4 	movi	r2,103
  802130:	d8c03c17 	ldw	r3,240(sp)
  802134:	da003d17 	ldw	r8,244(sp)
  802138:	88817126 	beq	r17,r2,802700 <___vfprintf_internal_r+0x1cfc>
  80213c:	008011c4 	movi	r2,71
  802140:	88829226 	beq	r17,r2,802b8c <___vfprintf_internal_r+0x2188>
  802144:	80f9883a 	add	fp,r16,r3
  802148:	d9003617 	ldw	r4,216(sp)
  80214c:	000d883a 	mov	r6,zero
  802150:	000f883a 	mov	r7,zero
  802154:	980b883a 	mov	r5,r19
  802158:	da003d15 	stw	r8,244(sp)
  80215c:	080bc780 	call	80bc78 <__eqdf2>
  802160:	da003d17 	ldw	r8,244(sp)
  802164:	10018d26 	beq	r2,zero,80279c <___vfprintf_internal_r+0x1d98>
  802168:	d8802117 	ldw	r2,132(sp)
  80216c:	1700062e 	bgeu	r2,fp,802188 <___vfprintf_internal_r+0x1784>
  802170:	01000c04 	movi	r4,48
  802174:	10c00044 	addi	r3,r2,1
  802178:	d8c02115 	stw	r3,132(sp)
  80217c:	11000005 	stb	r4,0(r2)
  802180:	d8802117 	ldw	r2,132(sp)
  802184:	173ffb36 	bltu	r2,fp,802174 <__alt_data_end+0xff802174>
  802188:	1405c83a 	sub	r2,r2,r16
  80218c:	d8803315 	stw	r2,204(sp)
  802190:	008011c4 	movi	r2,71
  802194:	b0817626 	beq	r22,r2,802770 <___vfprintf_internal_r+0x1d6c>
  802198:	00801944 	movi	r2,101
  80219c:	1442810e 	bge	r2,r17,802ba4 <___vfprintf_internal_r+0x21a0>
  8021a0:	d8c02617 	ldw	r3,152(sp)
  8021a4:	00801984 	movi	r2,102
  8021a8:	d8c03215 	stw	r3,200(sp)
  8021ac:	8881fe26 	beq	r17,r2,8029a8 <___vfprintf_internal_r+0x1fa4>
  8021b0:	d8c03217 	ldw	r3,200(sp)
  8021b4:	d9003317 	ldw	r4,204(sp)
  8021b8:	1901dd16 	blt	r3,r4,802930 <___vfprintf_internal_r+0x1f2c>
  8021bc:	9480004c 	andi	r18,r18,1
  8021c0:	90022b1e 	bne	r18,zero,802a70 <___vfprintf_internal_r+0x206c>
  8021c4:	1805883a 	mov	r2,r3
  8021c8:	18028016 	blt	r3,zero,802bcc <___vfprintf_internal_r+0x21c8>
  8021cc:	d8c03217 	ldw	r3,200(sp)
  8021d0:	044019c4 	movi	r17,103
  8021d4:	d8c02e15 	stw	r3,184(sp)
  8021d8:	df002a07 	ldb	fp,168(sp)
  8021dc:	e001531e 	bne	fp,zero,80272c <___vfprintf_internal_r+0x1d28>
  8021e0:	df002783 	ldbu	fp,158(sp)
  8021e4:	d8802a15 	stw	r2,168(sp)
  8021e8:	dc802b17 	ldw	r18,172(sp)
  8021ec:	d8002915 	stw	zero,164(sp)
  8021f0:	003bd106 	br	801138 <__alt_data_end+0xff801138>
  8021f4:	d8802d17 	ldw	r2,180(sp)
  8021f8:	d8c02d17 	ldw	r3,180(sp)
  8021fc:	d9002d17 	ldw	r4,180(sp)
  802200:	10800017 	ldw	r2,0(r2)
  802204:	18c00117 	ldw	r3,4(r3)
  802208:	21000204 	addi	r4,r4,8
  80220c:	d8803615 	stw	r2,216(sp)
  802210:	d8c03815 	stw	r3,224(sp)
  802214:	d9002d15 	stw	r4,180(sp)
  802218:	003b7506 	br	800ff0 <__alt_data_end+0xff800ff0>
  80221c:	ac400007 	ldb	r17,0(r21)
  802220:	003a5906 	br	800b88 <__alt_data_end+0xff800b88>
  802224:	9080100c 	andi	r2,r18,64
  802228:	1000a826 	beq	r2,zero,8024cc <___vfprintf_internal_r+0x1ac8>
  80222c:	d9002d17 	ldw	r4,180(sp)
  802230:	002d883a 	mov	r22,zero
  802234:	24c0000b 	ldhu	r19,0(r4)
  802238:	21000104 	addi	r4,r4,4
  80223c:	d9002d15 	stw	r4,180(sp)
  802240:	003ccb06 	br	801570 <__alt_data_end+0xff801570>
  802244:	d8c02d17 	ldw	r3,180(sp)
  802248:	d9002917 	ldw	r4,164(sp)
  80224c:	002d883a 	mov	r22,zero
  802250:	18800104 	addi	r2,r3,4
  802254:	1cc00017 	ldw	r19,0(r3)
  802258:	203ebb0e 	bge	r4,zero,801d48 <__alt_data_end+0xff801d48>
  80225c:	003ef106 	br	801e24 <__alt_data_end+0xff801e24>
  802260:	9080040c 	andi	r2,r18,16
  802264:	1000921e 	bne	r2,zero,8024b0 <___vfprintf_internal_r+0x1aac>
  802268:	9480100c 	andi	r18,r18,64
  80226c:	90013926 	beq	r18,zero,802754 <___vfprintf_internal_r+0x1d50>
  802270:	d9002d17 	ldw	r4,180(sp)
  802274:	d9402f17 	ldw	r5,188(sp)
  802278:	20800017 	ldw	r2,0(r4)
  80227c:	21000104 	addi	r4,r4,4
  802280:	d9002d15 	stw	r4,180(sp)
  802284:	1140000d 	sth	r5,0(r2)
  802288:	003a1606 	br	800ae4 <__alt_data_end+0xff800ae4>
  80228c:	9080100c 	andi	r2,r18,64
  802290:	10008026 	beq	r2,zero,802494 <___vfprintf_internal_r+0x1a90>
  802294:	d8c02d17 	ldw	r3,180(sp)
  802298:	1cc0000f 	ldh	r19,0(r3)
  80229c:	18c00104 	addi	r3,r3,4
  8022a0:	d8c02d15 	stw	r3,180(sp)
  8022a4:	982dd7fa 	srai	r22,r19,31
  8022a8:	b005883a 	mov	r2,r22
  8022ac:	003b1f06 	br	800f2c <__alt_data_end+0xff800f2c>
  8022b0:	9080100c 	andi	r2,r18,64
  8022b4:	d8002785 	stb	zero,158(sp)
  8022b8:	10008a1e 	bne	r2,zero,8024e4 <___vfprintf_internal_r+0x1ae0>
  8022bc:	d9402d17 	ldw	r5,180(sp)
  8022c0:	d8c02917 	ldw	r3,164(sp)
  8022c4:	002d883a 	mov	r22,zero
  8022c8:	28800104 	addi	r2,r5,4
  8022cc:	2cc00017 	ldw	r19,0(r5)
  8022d0:	183e4b0e 	bge	r3,zero,801c00 <__alt_data_end+0xff801c00>
  8022d4:	9d86b03a 	or	r3,r19,r22
  8022d8:	d8802d15 	stw	r2,180(sp)
  8022dc:	183e4c1e 	bne	r3,zero,801c10 <__alt_data_end+0xff801c10>
  8022e0:	0039883a 	mov	fp,zero
  8022e4:	0005883a 	mov	r2,zero
  8022e8:	003d4006 	br	8017ec <__alt_data_end+0xff8017ec>
  8022ec:	01402074 	movhi	r5,129
  8022f0:	297e6784 	addi	r5,r5,-1634
  8022f4:	d9402b15 	stw	r5,172(sp)
  8022f8:	d9402b17 	ldw	r5,172(sp)
  8022fc:	1c47883a 	add	r3,r3,r17
  802300:	10800044 	addi	r2,r2,1
  802304:	41400015 	stw	r5,0(r8)
  802308:	44400115 	stw	r17,4(r8)
  80230c:	d8c02015 	stw	r3,128(sp)
  802310:	d8801f15 	stw	r2,124(sp)
  802314:	010001c4 	movi	r4,7
  802318:	20bec816 	blt	r4,r2,801e3c <__alt_data_end+0xff801e3c>
  80231c:	42000204 	addi	r8,r8,8
  802320:	003ecd06 	br	801e58 <__alt_data_end+0xff801e58>
  802324:	d9002917 	ldw	r4,164(sp)
  802328:	d8002785 	stb	zero,158(sp)
  80232c:	203d2d16 	blt	r4,zero,8017e4 <__alt_data_end+0xff8017e4>
  802330:	00bfdfc4 	movi	r2,-129
  802334:	90a4703a 	and	r18,r18,r2
  802338:	003a9106 	br	800d80 <__alt_data_end+0xff800d80>
  80233c:	01002074 	movhi	r4,129
  802340:	213e6784 	addi	r4,r4,-1634
  802344:	d9002b15 	stw	r4,172(sp)
  802348:	003c0c06 	br	80137c <__alt_data_end+0xff80137c>
  80234c:	d9002c17 	ldw	r4,176(sp)
  802350:	d9801e04 	addi	r6,sp,120
  802354:	b80b883a 	mov	r5,r23
  802358:	08080000 	call	808000 <__sprint_r>
  80235c:	103aab1e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  802360:	d8c02017 	ldw	r3,128(sp)
  802364:	da000404 	addi	r8,sp,16
  802368:	003d4106 	br	801870 <__alt_data_end+0xff801870>
  80236c:	d8801f17 	ldw	r2,124(sp)
  802370:	01402074 	movhi	r5,129
  802374:	01000044 	movi	r4,1
  802378:	18c00044 	addi	r3,r3,1
  80237c:	10800044 	addi	r2,r2,1
  802380:	297e6704 	addi	r5,r5,-1636
  802384:	41000115 	stw	r4,4(r8)
  802388:	41400015 	stw	r5,0(r8)
  80238c:	d8c02015 	stw	r3,128(sp)
  802390:	d8801f15 	stw	r2,124(sp)
  802394:	010001c4 	movi	r4,7
  802398:	20805c16 	blt	r4,r2,80250c <___vfprintf_internal_r+0x1b08>
  80239c:	42000204 	addi	r8,r8,8
  8023a0:	8800041e 	bne	r17,zero,8023b4 <___vfprintf_internal_r+0x19b0>
  8023a4:	d8803317 	ldw	r2,204(sp)
  8023a8:	1000021e 	bne	r2,zero,8023b4 <___vfprintf_internal_r+0x19b0>
  8023ac:	9080004c 	andi	r2,r18,1
  8023b0:	103c0926 	beq	r2,zero,8013d8 <__alt_data_end+0xff8013d8>
  8023b4:	d9003717 	ldw	r4,220(sp)
  8023b8:	d8801f17 	ldw	r2,124(sp)
  8023bc:	d9403417 	ldw	r5,208(sp)
  8023c0:	20c7883a 	add	r3,r4,r3
  8023c4:	10800044 	addi	r2,r2,1
  8023c8:	41000115 	stw	r4,4(r8)
  8023cc:	41400015 	stw	r5,0(r8)
  8023d0:	d8c02015 	stw	r3,128(sp)
  8023d4:	d8801f15 	stw	r2,124(sp)
  8023d8:	010001c4 	movi	r4,7
  8023dc:	20812116 	blt	r4,r2,802864 <___vfprintf_internal_r+0x1e60>
  8023e0:	42000204 	addi	r8,r8,8
  8023e4:	0463c83a 	sub	r17,zero,r17
  8023e8:	0440730e 	bge	zero,r17,8025b8 <___vfprintf_internal_r+0x1bb4>
  8023ec:	05800404 	movi	r22,16
  8023f0:	b440860e 	bge	r22,r17,80260c <___vfprintf_internal_r+0x1c08>
  8023f4:	01402074 	movhi	r5,129
  8023f8:	297e6784 	addi	r5,r5,-1634
  8023fc:	d9402b15 	stw	r5,172(sp)
  802400:	070001c4 	movi	fp,7
  802404:	dcc02c17 	ldw	r19,176(sp)
  802408:	00000306 	br	802418 <___vfprintf_internal_r+0x1a14>
  80240c:	42000204 	addi	r8,r8,8
  802410:	8c7ffc04 	addi	r17,r17,-16
  802414:	b440800e 	bge	r22,r17,802618 <___vfprintf_internal_r+0x1c14>
  802418:	18c00404 	addi	r3,r3,16
  80241c:	10800044 	addi	r2,r2,1
  802420:	45000015 	stw	r20,0(r8)
  802424:	45800115 	stw	r22,4(r8)
  802428:	d8c02015 	stw	r3,128(sp)
  80242c:	d8801f15 	stw	r2,124(sp)
  802430:	e0bff60e 	bge	fp,r2,80240c <__alt_data_end+0xff80240c>
  802434:	d9801e04 	addi	r6,sp,120
  802438:	b80b883a 	mov	r5,r23
  80243c:	9809883a 	mov	r4,r19
  802440:	08080000 	call	808000 <__sprint_r>
  802444:	103a711e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  802448:	d8c02017 	ldw	r3,128(sp)
  80244c:	d8801f17 	ldw	r2,124(sp)
  802450:	da000404 	addi	r8,sp,16
  802454:	003fee06 	br	802410 <__alt_data_end+0xff802410>
  802458:	00bfffc4 	movi	r2,-1
  80245c:	003a6f06 	br	800e1c <__alt_data_end+0xff800e1c>
  802460:	008011c4 	movi	r2,71
  802464:	1440b816 	blt	r2,r17,802748 <___vfprintf_internal_r+0x1d44>
  802468:	04002074 	movhi	r16,129
  80246c:	843e5904 	addi	r16,r16,-1692
  802470:	00c000c4 	movi	r3,3
  802474:	00bfdfc4 	movi	r2,-129
  802478:	d8c02a15 	stw	r3,168(sp)
  80247c:	90a4703a 	and	r18,r18,r2
  802480:	df002783 	ldbu	fp,158(sp)
  802484:	d8c02e15 	stw	r3,184(sp)
  802488:	d8002915 	stw	zero,164(sp)
  80248c:	d8003215 	stw	zero,200(sp)
  802490:	003b2906 	br	801138 <__alt_data_end+0xff801138>
  802494:	d9002d17 	ldw	r4,180(sp)
  802498:	24c00017 	ldw	r19,0(r4)
  80249c:	21000104 	addi	r4,r4,4
  8024a0:	d9002d15 	stw	r4,180(sp)
  8024a4:	982dd7fa 	srai	r22,r19,31
  8024a8:	b005883a 	mov	r2,r22
  8024ac:	003a9f06 	br	800f2c <__alt_data_end+0xff800f2c>
  8024b0:	d9402d17 	ldw	r5,180(sp)
  8024b4:	d8c02f17 	ldw	r3,188(sp)
  8024b8:	28800017 	ldw	r2,0(r5)
  8024bc:	29400104 	addi	r5,r5,4
  8024c0:	d9402d15 	stw	r5,180(sp)
  8024c4:	10c00015 	stw	r3,0(r2)
  8024c8:	00398606 	br	800ae4 <__alt_data_end+0xff800ae4>
  8024cc:	d9402d17 	ldw	r5,180(sp)
  8024d0:	002d883a 	mov	r22,zero
  8024d4:	2cc00017 	ldw	r19,0(r5)
  8024d8:	29400104 	addi	r5,r5,4
  8024dc:	d9402d15 	stw	r5,180(sp)
  8024e0:	003c2306 	br	801570 <__alt_data_end+0xff801570>
  8024e4:	d8c02d17 	ldw	r3,180(sp)
  8024e8:	d9002917 	ldw	r4,164(sp)
  8024ec:	002d883a 	mov	r22,zero
  8024f0:	18800104 	addi	r2,r3,4
  8024f4:	1cc0000b 	ldhu	r19,0(r3)
  8024f8:	203dc10e 	bge	r4,zero,801c00 <__alt_data_end+0xff801c00>
  8024fc:	003f7506 	br	8022d4 <__alt_data_end+0xff8022d4>
  802500:	04002074 	movhi	r16,129
  802504:	843e5704 	addi	r16,r16,-1700
  802508:	003acc06 	br	80103c <__alt_data_end+0xff80103c>
  80250c:	d9002c17 	ldw	r4,176(sp)
  802510:	d9801e04 	addi	r6,sp,120
  802514:	b80b883a 	mov	r5,r23
  802518:	08080000 	call	808000 <__sprint_r>
  80251c:	103a3b1e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  802520:	dc402617 	ldw	r17,152(sp)
  802524:	d8c02017 	ldw	r3,128(sp)
  802528:	da000404 	addi	r8,sp,16
  80252c:	003f9c06 	br	8023a0 <__alt_data_end+0xff8023a0>
  802530:	ac400043 	ldbu	r17,1(r21)
  802534:	94800814 	ori	r18,r18,32
  802538:	ad400044 	addi	r21,r21,1
  80253c:	8c403fcc 	andi	r17,r17,255
  802540:	8c40201c 	xori	r17,r17,128
  802544:	8c7fe004 	addi	r17,r17,-128
  802548:	00398f06 	br	800b88 <__alt_data_end+0xff800b88>
  80254c:	d8c02d15 	stw	r3,180(sp)
  802550:	0039883a 	mov	fp,zero
  802554:	003e3506 	br	801e2c <__alt_data_end+0xff801e2c>
  802558:	d9002c17 	ldw	r4,176(sp)
  80255c:	d9801e04 	addi	r6,sp,120
  802560:	b80b883a 	mov	r5,r23
  802564:	08080000 	call	808000 <__sprint_r>
  802568:	103a281e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  80256c:	d8c02017 	ldw	r3,128(sp)
  802570:	da000404 	addi	r8,sp,16
  802574:	003cd006 	br	8018b8 <__alt_data_end+0xff8018b8>
  802578:	8009883a 	mov	r4,r16
  80257c:	da003d15 	stw	r8,244(sp)
  802580:	080096c0 	call	80096c <strlen>
  802584:	d8802e15 	stw	r2,184(sp)
  802588:	da003d17 	ldw	r8,244(sp)
  80258c:	103c340e 	bge	r2,zero,801660 <__alt_data_end+0xff801660>
  802590:	0005883a 	mov	r2,zero
  802594:	003c3206 	br	801660 <__alt_data_end+0xff801660>
  802598:	d9002c17 	ldw	r4,176(sp)
  80259c:	d9801e04 	addi	r6,sp,120
  8025a0:	b80b883a 	mov	r5,r23
  8025a4:	08080000 	call	808000 <__sprint_r>
  8025a8:	103a181e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  8025ac:	d8c02017 	ldw	r3,128(sp)
  8025b0:	d8801f17 	ldw	r2,124(sp)
  8025b4:	da000404 	addi	r8,sp,16
  8025b8:	d9403317 	ldw	r5,204(sp)
  8025bc:	10800044 	addi	r2,r2,1
  8025c0:	44000015 	stw	r16,0(r8)
  8025c4:	28c7883a 	add	r3,r5,r3
  8025c8:	003b7d06 	br	8013c0 <__alt_data_end+0xff8013c0>
  8025cc:	01002074 	movhi	r4,129
  8025d0:	213e6b84 	addi	r4,r4,-1618
  8025d4:	d9003515 	stw	r4,212(sp)
  8025d8:	003b1406 	br	80122c <__alt_data_end+0xff80122c>
  8025dc:	013fffc4 	movi	r4,-1
  8025e0:	003a3506 	br	800eb8 <__alt_data_end+0xff800eb8>
  8025e4:	0023883a 	mov	r17,zero
  8025e8:	003d9d06 	br	801c60 <__alt_data_end+0xff801c60>
  8025ec:	d9002c17 	ldw	r4,176(sp)
  8025f0:	d9801e04 	addi	r6,sp,120
  8025f4:	b80b883a 	mov	r5,r23
  8025f8:	08080000 	call	808000 <__sprint_r>
  8025fc:	103a031e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  802600:	d8c02017 	ldw	r3,128(sp)
  802604:	da000404 	addi	r8,sp,16
  802608:	003d9406 	br	801c5c <__alt_data_end+0xff801c5c>
  80260c:	01002074 	movhi	r4,129
  802610:	213e6784 	addi	r4,r4,-1634
  802614:	d9002b15 	stw	r4,172(sp)
  802618:	d9002b17 	ldw	r4,172(sp)
  80261c:	1c47883a 	add	r3,r3,r17
  802620:	10800044 	addi	r2,r2,1
  802624:	41000015 	stw	r4,0(r8)
  802628:	44400115 	stw	r17,4(r8)
  80262c:	d8c02015 	stw	r3,128(sp)
  802630:	d8801f15 	stw	r2,124(sp)
  802634:	010001c4 	movi	r4,7
  802638:	20bfd716 	blt	r4,r2,802598 <__alt_data_end+0xff802598>
  80263c:	42000204 	addi	r8,r8,8
  802640:	003fdd06 	br	8025b8 <__alt_data_end+0xff8025b8>
  802644:	d9002c17 	ldw	r4,176(sp)
  802648:	d9801e04 	addi	r6,sp,120
  80264c:	b80b883a 	mov	r5,r23
  802650:	08080000 	call	808000 <__sprint_r>
  802654:	1039ed1e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  802658:	d8802617 	ldw	r2,152(sp)
  80265c:	d8c02017 	ldw	r3,128(sp)
  802660:	da000404 	addi	r8,sp,16
  802664:	003e1006 	br	801ea8 <__alt_data_end+0xff801ea8>
  802668:	00800044 	movi	r2,1
  80266c:	10803fcc 	andi	r2,r2,255
  802670:	00c00044 	movi	r3,1
  802674:	10fa3526 	beq	r2,r3,800f4c <__alt_data_end+0xff800f4c>
  802678:	00c00084 	movi	r3,2
  80267c:	10fbcb26 	beq	r2,r3,8015ac <__alt_data_end+0xff8015ac>
  802680:	003a8f06 	br	8010c0 <__alt_data_end+0xff8010c0>
  802684:	01002074 	movhi	r4,129
  802688:	213e6b84 	addi	r4,r4,-1618
  80268c:	d9003515 	stw	r4,212(sp)
  802690:	003b7606 	br	80146c <__alt_data_end+0xff80146c>
  802694:	d8802917 	ldw	r2,164(sp)
  802698:	00c00184 	movi	r3,6
  80269c:	1880012e 	bgeu	r3,r2,8026a4 <___vfprintf_internal_r+0x1ca0>
  8026a0:	1805883a 	mov	r2,r3
  8026a4:	d8802e15 	stw	r2,184(sp)
  8026a8:	1000ef16 	blt	r2,zero,802a68 <___vfprintf_internal_r+0x2064>
  8026ac:	04002074 	movhi	r16,129
  8026b0:	d8802a15 	stw	r2,168(sp)
  8026b4:	dcc02d15 	stw	r19,180(sp)
  8026b8:	d8002915 	stw	zero,164(sp)
  8026bc:	d8003215 	stw	zero,200(sp)
  8026c0:	843e6504 	addi	r16,r16,-1644
  8026c4:	0039883a 	mov	fp,zero
  8026c8:	003aa206 	br	801154 <__alt_data_end+0xff801154>
  8026cc:	0021883a 	mov	r16,zero
  8026d0:	003e0706 	br	801ef0 <__alt_data_end+0xff801ef0>
  8026d4:	d9002c17 	ldw	r4,176(sp)
  8026d8:	d9801e04 	addi	r6,sp,120
  8026dc:	b80b883a 	mov	r5,r23
  8026e0:	08080000 	call	808000 <__sprint_r>
  8026e4:	1039c91e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  8026e8:	d8802617 	ldw	r2,152(sp)
  8026ec:	d9403317 	ldw	r5,204(sp)
  8026f0:	d8c02017 	ldw	r3,128(sp)
  8026f4:	da000404 	addi	r8,sp,16
  8026f8:	2885c83a 	sub	r2,r5,r2
  8026fc:	003dfb06 	br	801eec <__alt_data_end+0xff801eec>
  802700:	9080004c 	andi	r2,r18,1
  802704:	103e8f1e 	bne	r2,zero,802144 <__alt_data_end+0xff802144>
  802708:	d8802117 	ldw	r2,132(sp)
  80270c:	003e9e06 	br	802188 <__alt_data_end+0xff802188>
  802710:	1025883a 	mov	r18,r2
  802714:	0039883a 	mov	fp,zero
  802718:	00800084 	movi	r2,2
  80271c:	003fd306 	br	80266c <__alt_data_end+0xff80266c>
  802720:	07000b44 	movi	fp,45
  802724:	df002785 	stb	fp,158(sp)
  802728:	003a4006 	br	80102c <__alt_data_end+0xff80102c>
  80272c:	00c00b44 	movi	r3,45
  802730:	d8c02785 	stb	r3,158(sp)
  802734:	d8802a15 	stw	r2,168(sp)
  802738:	dc802b17 	ldw	r18,172(sp)
  80273c:	d8002915 	stw	zero,164(sp)
  802740:	07000b44 	movi	fp,45
  802744:	003a8006 	br	801148 <__alt_data_end+0xff801148>
  802748:	04002074 	movhi	r16,129
  80274c:	843e5a04 	addi	r16,r16,-1688
  802750:	003f4706 	br	802470 <__alt_data_end+0xff802470>
  802754:	d8c02d17 	ldw	r3,180(sp)
  802758:	d9002f17 	ldw	r4,188(sp)
  80275c:	18800017 	ldw	r2,0(r3)
  802760:	18c00104 	addi	r3,r3,4
  802764:	d8c02d15 	stw	r3,180(sp)
  802768:	11000015 	stw	r4,0(r2)
  80276c:	0038dd06 	br	800ae4 <__alt_data_end+0xff800ae4>
  802770:	dd802617 	ldw	r22,152(sp)
  802774:	00bfff44 	movi	r2,-3
  802778:	b0801c16 	blt	r22,r2,8027ec <___vfprintf_internal_r+0x1de8>
  80277c:	d9402917 	ldw	r5,164(sp)
  802780:	2d801a16 	blt	r5,r22,8027ec <___vfprintf_internal_r+0x1de8>
  802784:	dd803215 	stw	r22,200(sp)
  802788:	003e8906 	br	8021b0 <__alt_data_end+0xff8021b0>
  80278c:	01002074 	movhi	r4,129
  802790:	213e6784 	addi	r4,r4,-1634
  802794:	d9002b15 	stw	r4,172(sp)
  802798:	003c9106 	br	8019e0 <__alt_data_end+0xff8019e0>
  80279c:	e005883a 	mov	r2,fp
  8027a0:	003e7906 	br	802188 <__alt_data_end+0xff802188>
  8027a4:	d9402917 	ldw	r5,164(sp)
  8027a8:	df002783 	ldbu	fp,158(sp)
  8027ac:	dcc02d15 	stw	r19,180(sp)
  8027b0:	d9402a15 	stw	r5,168(sp)
  8027b4:	d9402e15 	stw	r5,184(sp)
  8027b8:	d8002915 	stw	zero,164(sp)
  8027bc:	d8003215 	stw	zero,200(sp)
  8027c0:	003a5d06 	br	801138 <__alt_data_end+0xff801138>
  8027c4:	9080004c 	andi	r2,r18,1
  8027c8:	0039883a 	mov	fp,zero
  8027cc:	10000426 	beq	r2,zero,8027e0 <___vfprintf_internal_r+0x1ddc>
  8027d0:	00800c04 	movi	r2,48
  8027d4:	dc001dc4 	addi	r16,sp,119
  8027d8:	d8801dc5 	stb	r2,119(sp)
  8027dc:	003b8006 	br	8015e0 <__alt_data_end+0xff8015e0>
  8027e0:	d8002e15 	stw	zero,184(sp)
  8027e4:	dc001e04 	addi	r16,sp,120
  8027e8:	003a4d06 	br	801120 <__alt_data_end+0xff801120>
  8027ec:	8c7fff84 	addi	r17,r17,-2
  8027f0:	b5bfffc4 	addi	r22,r22,-1
  8027f4:	dd802615 	stw	r22,152(sp)
  8027f8:	dc4022c5 	stb	r17,139(sp)
  8027fc:	b000bf16 	blt	r22,zero,802afc <___vfprintf_internal_r+0x20f8>
  802800:	00800ac4 	movi	r2,43
  802804:	d8802305 	stb	r2,140(sp)
  802808:	00800244 	movi	r2,9
  80280c:	15807016 	blt	r2,r22,8029d0 <___vfprintf_internal_r+0x1fcc>
  802810:	00800c04 	movi	r2,48
  802814:	b5800c04 	addi	r22,r22,48
  802818:	d8802345 	stb	r2,141(sp)
  80281c:	dd802385 	stb	r22,142(sp)
  802820:	d88023c4 	addi	r2,sp,143
  802824:	df0022c4 	addi	fp,sp,139
  802828:	d8c03317 	ldw	r3,204(sp)
  80282c:	1739c83a 	sub	fp,r2,fp
  802830:	d9003317 	ldw	r4,204(sp)
  802834:	e0c7883a 	add	r3,fp,r3
  802838:	df003a15 	stw	fp,232(sp)
  80283c:	d8c02e15 	stw	r3,184(sp)
  802840:	00800044 	movi	r2,1
  802844:	1100b30e 	bge	r2,r4,802b14 <___vfprintf_internal_r+0x2110>
  802848:	d8c02e17 	ldw	r3,184(sp)
  80284c:	18c00044 	addi	r3,r3,1
  802850:	d8c02e15 	stw	r3,184(sp)
  802854:	1805883a 	mov	r2,r3
  802858:	1800ac16 	blt	r3,zero,802b0c <___vfprintf_internal_r+0x2108>
  80285c:	d8003215 	stw	zero,200(sp)
  802860:	003e5d06 	br	8021d8 <__alt_data_end+0xff8021d8>
  802864:	d9002c17 	ldw	r4,176(sp)
  802868:	d9801e04 	addi	r6,sp,120
  80286c:	b80b883a 	mov	r5,r23
  802870:	08080000 	call	808000 <__sprint_r>
  802874:	1039651e 	bne	r2,zero,800e0c <__alt_data_end+0xff800e0c>
  802878:	dc402617 	ldw	r17,152(sp)
  80287c:	d8c02017 	ldw	r3,128(sp)
  802880:	d8801f17 	ldw	r2,124(sp)
  802884:	da000404 	addi	r8,sp,16
  802888:	003ed606 	br	8023e4 <__alt_data_end+0xff8023e4>
  80288c:	582b883a 	mov	r21,r11
  802890:	d8002915 	stw	zero,164(sp)
  802894:	0038bd06 	br	800b8c <__alt_data_end+0xff800b8c>
  802898:	d8802917 	ldw	r2,164(sp)
  80289c:	103e071e 	bne	r2,zero,8020bc <__alt_data_end+0xff8020bc>
  8028a0:	dc002915 	stw	r16,164(sp)
  8028a4:	003e0506 	br	8020bc <__alt_data_end+0xff8020bc>
  8028a8:	d9002917 	ldw	r4,164(sp)
  8028ac:	20c00044 	addi	r3,r4,1
  8028b0:	003e0f06 	br	8020f0 <__alt_data_end+0xff8020f0>
  8028b4:	01400184 	movi	r5,6
  8028b8:	d9402915 	stw	r5,164(sp)
  8028bc:	003dff06 	br	8020bc <__alt_data_end+0xff8020bc>
  8028c0:	d8802104 	addi	r2,sp,132
  8028c4:	d8800315 	stw	r2,12(sp)
  8028c8:	d8802504 	addi	r2,sp,148
  8028cc:	d8800215 	stw	r2,8(sp)
  8028d0:	d8802604 	addi	r2,sp,152
  8028d4:	d8800115 	stw	r2,4(sp)
  8028d8:	d8802917 	ldw	r2,164(sp)
  8028dc:	d9403617 	ldw	r5,216(sp)
  8028e0:	d9002c17 	ldw	r4,176(sp)
  8028e4:	d8800015 	stw	r2,0(sp)
  8028e8:	01c000c4 	movi	r7,3
  8028ec:	980d883a 	mov	r6,r19
  8028f0:	da003d15 	stw	r8,244(sp)
  8028f4:	08030280 	call	803028 <_dtoa_r>
  8028f8:	d8c02917 	ldw	r3,164(sp)
  8028fc:	da003d17 	ldw	r8,244(sp)
  802900:	1021883a 	mov	r16,r2
  802904:	10f9883a 	add	fp,r2,r3
  802908:	81000007 	ldb	r4,0(r16)
  80290c:	00800c04 	movi	r2,48
  802910:	20805e26 	beq	r4,r2,802a8c <___vfprintf_internal_r+0x2088>
  802914:	d8c02617 	ldw	r3,152(sp)
  802918:	e0f9883a 	add	fp,fp,r3
  80291c:	003e0a06 	br	802148 <__alt_data_end+0xff802148>
  802920:	00c00b44 	movi	r3,45
  802924:	24e0003c 	xorhi	r19,r4,32768
  802928:	d8c02a05 	stb	r3,168(sp)
  80292c:	003de906 	br	8020d4 <__alt_data_end+0xff8020d4>
  802930:	d8c03217 	ldw	r3,200(sp)
  802934:	00c07a0e 	bge	zero,r3,802b20 <___vfprintf_internal_r+0x211c>
  802938:	00800044 	movi	r2,1
  80293c:	d9003317 	ldw	r4,204(sp)
  802940:	1105883a 	add	r2,r2,r4
  802944:	d8802e15 	stw	r2,184(sp)
  802948:	10004e16 	blt	r2,zero,802a84 <___vfprintf_internal_r+0x2080>
  80294c:	044019c4 	movi	r17,103
  802950:	003e2106 	br	8021d8 <__alt_data_end+0xff8021d8>
  802954:	d9002917 	ldw	r4,164(sp)
  802958:	d8802104 	addi	r2,sp,132
  80295c:	d8800315 	stw	r2,12(sp)
  802960:	d9000015 	stw	r4,0(sp)
  802964:	d8802504 	addi	r2,sp,148
  802968:	d9403617 	ldw	r5,216(sp)
  80296c:	d9002c17 	ldw	r4,176(sp)
  802970:	d8800215 	stw	r2,8(sp)
  802974:	d8802604 	addi	r2,sp,152
  802978:	d8800115 	stw	r2,4(sp)
  80297c:	01c000c4 	movi	r7,3
  802980:	980d883a 	mov	r6,r19
  802984:	da003d15 	stw	r8,244(sp)
  802988:	08030280 	call	803028 <_dtoa_r>
  80298c:	d8c02917 	ldw	r3,164(sp)
  802990:	da003d17 	ldw	r8,244(sp)
  802994:	1021883a 	mov	r16,r2
  802998:	00801184 	movi	r2,70
  80299c:	80f9883a 	add	fp,r16,r3
  8029a0:	88bfd926 	beq	r17,r2,802908 <__alt_data_end+0xff802908>
  8029a4:	003de806 	br	802148 <__alt_data_end+0xff802148>
  8029a8:	d9002917 	ldw	r4,164(sp)
  8029ac:	00c04d0e 	bge	zero,r3,802ae4 <___vfprintf_internal_r+0x20e0>
  8029b0:	2000441e 	bne	r4,zero,802ac4 <___vfprintf_internal_r+0x20c0>
  8029b4:	9480004c 	andi	r18,r18,1
  8029b8:	9000421e 	bne	r18,zero,802ac4 <___vfprintf_internal_r+0x20c0>
  8029bc:	1805883a 	mov	r2,r3
  8029c0:	18007016 	blt	r3,zero,802b84 <___vfprintf_internal_r+0x2180>
  8029c4:	d8c03217 	ldw	r3,200(sp)
  8029c8:	d8c02e15 	stw	r3,184(sp)
  8029cc:	003e0206 	br	8021d8 <__alt_data_end+0xff8021d8>
  8029d0:	df0022c4 	addi	fp,sp,139
  8029d4:	dc002915 	stw	r16,164(sp)
  8029d8:	4027883a 	mov	r19,r8
  8029dc:	e021883a 	mov	r16,fp
  8029e0:	b009883a 	mov	r4,r22
  8029e4:	01400284 	movi	r5,10
  8029e8:	080a9b40 	call	80a9b4 <__modsi3>
  8029ec:	10800c04 	addi	r2,r2,48
  8029f0:	843fffc4 	addi	r16,r16,-1
  8029f4:	b009883a 	mov	r4,r22
  8029f8:	01400284 	movi	r5,10
  8029fc:	80800005 	stb	r2,0(r16)
  802a00:	080a9300 	call	80a930 <__divsi3>
  802a04:	102d883a 	mov	r22,r2
  802a08:	00800244 	movi	r2,9
  802a0c:	15bff416 	blt	r2,r22,8029e0 <__alt_data_end+0xff8029e0>
  802a10:	9811883a 	mov	r8,r19
  802a14:	b0800c04 	addi	r2,r22,48
  802a18:	8027883a 	mov	r19,r16
  802a1c:	997fffc4 	addi	r5,r19,-1
  802a20:	98bfffc5 	stb	r2,-1(r19)
  802a24:	dc002917 	ldw	r16,164(sp)
  802a28:	2f006a2e 	bgeu	r5,fp,802bd4 <___vfprintf_internal_r+0x21d0>
  802a2c:	d9c02384 	addi	r7,sp,142
  802a30:	3ccfc83a 	sub	r7,r7,r19
  802a34:	d9002344 	addi	r4,sp,141
  802a38:	e1cf883a 	add	r7,fp,r7
  802a3c:	00000106 	br	802a44 <___vfprintf_internal_r+0x2040>
  802a40:	28800003 	ldbu	r2,0(r5)
  802a44:	20800005 	stb	r2,0(r4)
  802a48:	21000044 	addi	r4,r4,1
  802a4c:	29400044 	addi	r5,r5,1
  802a50:	393ffb1e 	bne	r7,r4,802a40 <__alt_data_end+0xff802a40>
  802a54:	d8802304 	addi	r2,sp,140
  802a58:	14c5c83a 	sub	r2,r2,r19
  802a5c:	d8c02344 	addi	r3,sp,141
  802a60:	1885883a 	add	r2,r3,r2
  802a64:	003f7006 	br	802828 <__alt_data_end+0xff802828>
  802a68:	0005883a 	mov	r2,zero
  802a6c:	003f0f06 	br	8026ac <__alt_data_end+0xff8026ac>
  802a70:	d8c03217 	ldw	r3,200(sp)
  802a74:	18c00044 	addi	r3,r3,1
  802a78:	d8c02e15 	stw	r3,184(sp)
  802a7c:	1805883a 	mov	r2,r3
  802a80:	183fb20e 	bge	r3,zero,80294c <__alt_data_end+0xff80294c>
  802a84:	0005883a 	mov	r2,zero
  802a88:	003fb006 	br	80294c <__alt_data_end+0xff80294c>
  802a8c:	d9003617 	ldw	r4,216(sp)
  802a90:	000d883a 	mov	r6,zero
  802a94:	000f883a 	mov	r7,zero
  802a98:	980b883a 	mov	r5,r19
  802a9c:	d8c03c15 	stw	r3,240(sp)
  802aa0:	da003d15 	stw	r8,244(sp)
  802aa4:	080bc780 	call	80bc78 <__eqdf2>
  802aa8:	d8c03c17 	ldw	r3,240(sp)
  802aac:	da003d17 	ldw	r8,244(sp)
  802ab0:	103f9826 	beq	r2,zero,802914 <__alt_data_end+0xff802914>
  802ab4:	00800044 	movi	r2,1
  802ab8:	10c7c83a 	sub	r3,r2,r3
  802abc:	d8c02615 	stw	r3,152(sp)
  802ac0:	003f9506 	br	802918 <__alt_data_end+0xff802918>
  802ac4:	d9002917 	ldw	r4,164(sp)
  802ac8:	d8c03217 	ldw	r3,200(sp)
  802acc:	20800044 	addi	r2,r4,1
  802ad0:	1885883a 	add	r2,r3,r2
  802ad4:	d8802e15 	stw	r2,184(sp)
  802ad8:	103dbf0e 	bge	r2,zero,8021d8 <__alt_data_end+0xff8021d8>
  802adc:	0005883a 	mov	r2,zero
  802ae0:	003dbd06 	br	8021d8 <__alt_data_end+0xff8021d8>
  802ae4:	2000211e 	bne	r4,zero,802b6c <___vfprintf_internal_r+0x2168>
  802ae8:	9480004c 	andi	r18,r18,1
  802aec:	90001f1e 	bne	r18,zero,802b6c <___vfprintf_internal_r+0x2168>
  802af0:	00800044 	movi	r2,1
  802af4:	d8802e15 	stw	r2,184(sp)
  802af8:	003db706 	br	8021d8 <__alt_data_end+0xff8021d8>
  802afc:	00800b44 	movi	r2,45
  802b00:	05adc83a 	sub	r22,zero,r22
  802b04:	d8802305 	stb	r2,140(sp)
  802b08:	003f3f06 	br	802808 <__alt_data_end+0xff802808>
  802b0c:	0005883a 	mov	r2,zero
  802b10:	003f5206 	br	80285c <__alt_data_end+0xff80285c>
  802b14:	90a4703a 	and	r18,r18,r2
  802b18:	903f4e26 	beq	r18,zero,802854 <__alt_data_end+0xff802854>
  802b1c:	003f4a06 	br	802848 <__alt_data_end+0xff802848>
  802b20:	00800084 	movi	r2,2
  802b24:	10c5c83a 	sub	r2,r2,r3
  802b28:	003f8406 	br	80293c <__alt_data_end+0xff80293c>
  802b2c:	d8802d17 	ldw	r2,180(sp)
  802b30:	d9002d17 	ldw	r4,180(sp)
  802b34:	ac400043 	ldbu	r17,1(r21)
  802b38:	10800017 	ldw	r2,0(r2)
  802b3c:	582b883a 	mov	r21,r11
  802b40:	d8802915 	stw	r2,164(sp)
  802b44:	20800104 	addi	r2,r4,4
  802b48:	d9002917 	ldw	r4,164(sp)
  802b4c:	d8802d15 	stw	r2,180(sp)
  802b50:	203e7a0e 	bge	r4,zero,80253c <__alt_data_end+0xff80253c>
  802b54:	8c403fcc 	andi	r17,r17,255
  802b58:	00bfffc4 	movi	r2,-1
  802b5c:	8c40201c 	xori	r17,r17,128
  802b60:	d8802915 	stw	r2,164(sp)
  802b64:	8c7fe004 	addi	r17,r17,-128
  802b68:	00380706 	br	800b88 <__alt_data_end+0xff800b88>
  802b6c:	d8c02917 	ldw	r3,164(sp)
  802b70:	18c00084 	addi	r3,r3,2
  802b74:	d8c02e15 	stw	r3,184(sp)
  802b78:	1805883a 	mov	r2,r3
  802b7c:	183d960e 	bge	r3,zero,8021d8 <__alt_data_end+0xff8021d8>
  802b80:	003fd606 	br	802adc <__alt_data_end+0xff802adc>
  802b84:	0005883a 	mov	r2,zero
  802b88:	003f8e06 	br	8029c4 <__alt_data_end+0xff8029c4>
  802b8c:	9080004c 	andi	r2,r18,1
  802b90:	103f811e 	bne	r2,zero,802998 <__alt_data_end+0xff802998>
  802b94:	d8802117 	ldw	r2,132(sp)
  802b98:	1405c83a 	sub	r2,r2,r16
  802b9c:	d8803315 	stw	r2,204(sp)
  802ba0:	b47ef326 	beq	r22,r17,802770 <__alt_data_end+0xff802770>
  802ba4:	dd802617 	ldw	r22,152(sp)
  802ba8:	003f1106 	br	8027f0 <__alt_data_end+0xff8027f0>
  802bac:	d9c02785 	stb	r7,158(sp)
  802bb0:	00390406 	br	800fc4 <__alt_data_end+0xff800fc4>
  802bb4:	d9c02785 	stb	r7,158(sp)
  802bb8:	0038d306 	br	800f08 <__alt_data_end+0xff800f08>
  802bbc:	d9c02785 	stb	r7,158(sp)
  802bc0:	003a6106 	br	801548 <__alt_data_end+0xff801548>
  802bc4:	d9c02785 	stb	r7,158(sp)
  802bc8:	003af806 	br	8017ac <__alt_data_end+0xff8017ac>
  802bcc:	0005883a 	mov	r2,zero
  802bd0:	003d7e06 	br	8021cc <__alt_data_end+0xff8021cc>
  802bd4:	d8802344 	addi	r2,sp,141
  802bd8:	003f1306 	br	802828 <__alt_data_end+0xff802828>
  802bdc:	d9c02785 	stb	r7,158(sp)
  802be0:	00392306 	br	801070 <__alt_data_end+0xff801070>
  802be4:	d9c02785 	stb	r7,158(sp)
  802be8:	003aa906 	br	801690 <__alt_data_end+0xff801690>
  802bec:	d9c02785 	stb	r7,158(sp)
  802bf0:	003a3d06 	br	8014e8 <__alt_data_end+0xff8014e8>
  802bf4:	d9c02785 	stb	r7,158(sp)
  802bf8:	003aca06 	br	801724 <__alt_data_end+0xff801724>

00802bfc <__vfprintf_internal>:
  802bfc:	00802074 	movhi	r2,129
  802c00:	10858004 	addi	r2,r2,5632
  802c04:	300f883a 	mov	r7,r6
  802c08:	280d883a 	mov	r6,r5
  802c0c:	200b883a 	mov	r5,r4
  802c10:	11000017 	ldw	r4,0(r2)
  802c14:	0800a041 	jmpi	800a04 <___vfprintf_internal_r>

00802c18 <__sbprintf>:
  802c18:	2880030b 	ldhu	r2,12(r5)
  802c1c:	2ac01917 	ldw	r11,100(r5)
  802c20:	2a80038b 	ldhu	r10,14(r5)
  802c24:	2a400717 	ldw	r9,28(r5)
  802c28:	2a000917 	ldw	r8,36(r5)
  802c2c:	defee204 	addi	sp,sp,-1144
  802c30:	00c10004 	movi	r3,1024
  802c34:	dc011a15 	stw	r16,1128(sp)
  802c38:	10bfff4c 	andi	r2,r2,65533
  802c3c:	2821883a 	mov	r16,r5
  802c40:	d8cb883a 	add	r5,sp,r3
  802c44:	dc811c15 	stw	r18,1136(sp)
  802c48:	dc411b15 	stw	r17,1132(sp)
  802c4c:	dfc11d15 	stw	ra,1140(sp)
  802c50:	2025883a 	mov	r18,r4
  802c54:	d881030d 	sth	r2,1036(sp)
  802c58:	dac11915 	stw	r11,1124(sp)
  802c5c:	da81038d 	sth	r10,1038(sp)
  802c60:	da410715 	stw	r9,1052(sp)
  802c64:	da010915 	stw	r8,1060(sp)
  802c68:	dec10015 	stw	sp,1024(sp)
  802c6c:	dec10415 	stw	sp,1040(sp)
  802c70:	d8c10215 	stw	r3,1032(sp)
  802c74:	d8c10515 	stw	r3,1044(sp)
  802c78:	d8010615 	stw	zero,1048(sp)
  802c7c:	0800a040 	call	800a04 <___vfprintf_internal_r>
  802c80:	1023883a 	mov	r17,r2
  802c84:	10000416 	blt	r2,zero,802c98 <__sbprintf+0x80>
  802c88:	d9410004 	addi	r5,sp,1024
  802c8c:	9009883a 	mov	r4,r18
  802c90:	08048cc0 	call	8048cc <_fflush_r>
  802c94:	10000d1e 	bne	r2,zero,802ccc <__sbprintf+0xb4>
  802c98:	d881030b 	ldhu	r2,1036(sp)
  802c9c:	1080100c 	andi	r2,r2,64
  802ca0:	10000326 	beq	r2,zero,802cb0 <__sbprintf+0x98>
  802ca4:	8080030b 	ldhu	r2,12(r16)
  802ca8:	10801014 	ori	r2,r2,64
  802cac:	8080030d 	sth	r2,12(r16)
  802cb0:	8805883a 	mov	r2,r17
  802cb4:	dfc11d17 	ldw	ra,1140(sp)
  802cb8:	dc811c17 	ldw	r18,1136(sp)
  802cbc:	dc411b17 	ldw	r17,1132(sp)
  802cc0:	dc011a17 	ldw	r16,1128(sp)
  802cc4:	dec11e04 	addi	sp,sp,1144
  802cc8:	f800283a 	ret
  802ccc:	047fffc4 	movi	r17,-1
  802cd0:	003ff106 	br	802c98 <__alt_data_end+0xff802c98>

00802cd4 <__swsetup_r>:
  802cd4:	00802074 	movhi	r2,129
  802cd8:	defffd04 	addi	sp,sp,-12
  802cdc:	10858004 	addi	r2,r2,5632
  802ce0:	dc400115 	stw	r17,4(sp)
  802ce4:	2023883a 	mov	r17,r4
  802ce8:	11000017 	ldw	r4,0(r2)
  802cec:	dc000015 	stw	r16,0(sp)
  802cf0:	dfc00215 	stw	ra,8(sp)
  802cf4:	2821883a 	mov	r16,r5
  802cf8:	20000226 	beq	r4,zero,802d04 <__swsetup_r+0x30>
  802cfc:	20800e17 	ldw	r2,56(r4)
  802d00:	10003126 	beq	r2,zero,802dc8 <__swsetup_r+0xf4>
  802d04:	8080030b 	ldhu	r2,12(r16)
  802d08:	10c0020c 	andi	r3,r2,8
  802d0c:	1009883a 	mov	r4,r2
  802d10:	18000f26 	beq	r3,zero,802d50 <__swsetup_r+0x7c>
  802d14:	80c00417 	ldw	r3,16(r16)
  802d18:	18001526 	beq	r3,zero,802d70 <__swsetup_r+0x9c>
  802d1c:	1100004c 	andi	r4,r2,1
  802d20:	20001c1e 	bne	r4,zero,802d94 <__swsetup_r+0xc0>
  802d24:	1080008c 	andi	r2,r2,2
  802d28:	1000291e 	bne	r2,zero,802dd0 <__swsetup_r+0xfc>
  802d2c:	80800517 	ldw	r2,20(r16)
  802d30:	80800215 	stw	r2,8(r16)
  802d34:	18001c26 	beq	r3,zero,802da8 <__swsetup_r+0xd4>
  802d38:	0005883a 	mov	r2,zero
  802d3c:	dfc00217 	ldw	ra,8(sp)
  802d40:	dc400117 	ldw	r17,4(sp)
  802d44:	dc000017 	ldw	r16,0(sp)
  802d48:	dec00304 	addi	sp,sp,12
  802d4c:	f800283a 	ret
  802d50:	2080040c 	andi	r2,r4,16
  802d54:	10002e26 	beq	r2,zero,802e10 <__swsetup_r+0x13c>
  802d58:	2080010c 	andi	r2,r4,4
  802d5c:	10001e1e 	bne	r2,zero,802dd8 <__swsetup_r+0x104>
  802d60:	80c00417 	ldw	r3,16(r16)
  802d64:	20800214 	ori	r2,r4,8
  802d68:	8080030d 	sth	r2,12(r16)
  802d6c:	183feb1e 	bne	r3,zero,802d1c <__alt_data_end+0xff802d1c>
  802d70:	1100a00c 	andi	r4,r2,640
  802d74:	01408004 	movi	r5,512
  802d78:	217fe826 	beq	r4,r5,802d1c <__alt_data_end+0xff802d1c>
  802d7c:	800b883a 	mov	r5,r16
  802d80:	8809883a 	mov	r4,r17
  802d84:	080584c0 	call	80584c <__smakebuf_r>
  802d88:	8080030b 	ldhu	r2,12(r16)
  802d8c:	80c00417 	ldw	r3,16(r16)
  802d90:	003fe206 	br	802d1c <__alt_data_end+0xff802d1c>
  802d94:	80800517 	ldw	r2,20(r16)
  802d98:	80000215 	stw	zero,8(r16)
  802d9c:	0085c83a 	sub	r2,zero,r2
  802da0:	80800615 	stw	r2,24(r16)
  802da4:	183fe41e 	bne	r3,zero,802d38 <__alt_data_end+0xff802d38>
  802da8:	80c0030b 	ldhu	r3,12(r16)
  802dac:	0005883a 	mov	r2,zero
  802db0:	1900200c 	andi	r4,r3,128
  802db4:	203fe126 	beq	r4,zero,802d3c <__alt_data_end+0xff802d3c>
  802db8:	18c01014 	ori	r3,r3,64
  802dbc:	80c0030d 	sth	r3,12(r16)
  802dc0:	00bfffc4 	movi	r2,-1
  802dc4:	003fdd06 	br	802d3c <__alt_data_end+0xff802d3c>
  802dc8:	0804ca80 	call	804ca8 <__sinit>
  802dcc:	003fcd06 	br	802d04 <__alt_data_end+0xff802d04>
  802dd0:	0005883a 	mov	r2,zero
  802dd4:	003fd606 	br	802d30 <__alt_data_end+0xff802d30>
  802dd8:	81400c17 	ldw	r5,48(r16)
  802ddc:	28000626 	beq	r5,zero,802df8 <__swsetup_r+0x124>
  802de0:	80801004 	addi	r2,r16,64
  802de4:	28800326 	beq	r5,r2,802df4 <__swsetup_r+0x120>
  802de8:	8809883a 	mov	r4,r17
  802dec:	0804e1c0 	call	804e1c <_free_r>
  802df0:	8100030b 	ldhu	r4,12(r16)
  802df4:	80000c15 	stw	zero,48(r16)
  802df8:	80c00417 	ldw	r3,16(r16)
  802dfc:	00bff6c4 	movi	r2,-37
  802e00:	1108703a 	and	r4,r2,r4
  802e04:	80000115 	stw	zero,4(r16)
  802e08:	80c00015 	stw	r3,0(r16)
  802e0c:	003fd506 	br	802d64 <__alt_data_end+0xff802d64>
  802e10:	00800244 	movi	r2,9
  802e14:	88800015 	stw	r2,0(r17)
  802e18:	20801014 	ori	r2,r4,64
  802e1c:	8080030d 	sth	r2,12(r16)
  802e20:	00bfffc4 	movi	r2,-1
  802e24:	003fc506 	br	802d3c <__alt_data_end+0xff802d3c>

00802e28 <quorem>:
  802e28:	defff704 	addi	sp,sp,-36
  802e2c:	dc800215 	stw	r18,8(sp)
  802e30:	20800417 	ldw	r2,16(r4)
  802e34:	2c800417 	ldw	r18,16(r5)
  802e38:	dfc00815 	stw	ra,32(sp)
  802e3c:	ddc00715 	stw	r23,28(sp)
  802e40:	dd800615 	stw	r22,24(sp)
  802e44:	dd400515 	stw	r21,20(sp)
  802e48:	dd000415 	stw	r20,16(sp)
  802e4c:	dcc00315 	stw	r19,12(sp)
  802e50:	dc400115 	stw	r17,4(sp)
  802e54:	dc000015 	stw	r16,0(sp)
  802e58:	14807116 	blt	r2,r18,803020 <quorem+0x1f8>
  802e5c:	94bfffc4 	addi	r18,r18,-1
  802e60:	94ad883a 	add	r22,r18,r18
  802e64:	b5ad883a 	add	r22,r22,r22
  802e68:	2c400504 	addi	r17,r5,20
  802e6c:	8da9883a 	add	r20,r17,r22
  802e70:	25400504 	addi	r21,r4,20
  802e74:	282f883a 	mov	r23,r5
  802e78:	adad883a 	add	r22,r21,r22
  802e7c:	a1400017 	ldw	r5,0(r20)
  802e80:	2021883a 	mov	r16,r4
  802e84:	b1000017 	ldw	r4,0(r22)
  802e88:	29400044 	addi	r5,r5,1
  802e8c:	080aa280 	call	80aa28 <__udivsi3>
  802e90:	1027883a 	mov	r19,r2
  802e94:	10002c26 	beq	r2,zero,802f48 <quorem+0x120>
  802e98:	a813883a 	mov	r9,r21
  802e9c:	880b883a 	mov	r5,r17
  802ea0:	0009883a 	mov	r4,zero
  802ea4:	000d883a 	mov	r6,zero
  802ea8:	2a000017 	ldw	r8,0(r5)
  802eac:	49c00017 	ldw	r7,0(r9)
  802eb0:	29400104 	addi	r5,r5,4
  802eb4:	40bfffcc 	andi	r2,r8,65535
  802eb8:	14c5383a 	mul	r2,r2,r19
  802ebc:	4010d43a 	srli	r8,r8,16
  802ec0:	38ffffcc 	andi	r3,r7,65535
  802ec4:	1105883a 	add	r2,r2,r4
  802ec8:	1008d43a 	srli	r4,r2,16
  802ecc:	44d1383a 	mul	r8,r8,r19
  802ed0:	198d883a 	add	r6,r3,r6
  802ed4:	10ffffcc 	andi	r3,r2,65535
  802ed8:	30c7c83a 	sub	r3,r6,r3
  802edc:	380ed43a 	srli	r7,r7,16
  802ee0:	4105883a 	add	r2,r8,r4
  802ee4:	180dd43a 	srai	r6,r3,16
  802ee8:	113fffcc 	andi	r4,r2,65535
  802eec:	390fc83a 	sub	r7,r7,r4
  802ef0:	398d883a 	add	r6,r7,r6
  802ef4:	300e943a 	slli	r7,r6,16
  802ef8:	18ffffcc 	andi	r3,r3,65535
  802efc:	1008d43a 	srli	r4,r2,16
  802f00:	38ceb03a 	or	r7,r7,r3
  802f04:	49c00015 	stw	r7,0(r9)
  802f08:	300dd43a 	srai	r6,r6,16
  802f0c:	4a400104 	addi	r9,r9,4
  802f10:	a17fe52e 	bgeu	r20,r5,802ea8 <__alt_data_end+0xff802ea8>
  802f14:	b0800017 	ldw	r2,0(r22)
  802f18:	10000b1e 	bne	r2,zero,802f48 <quorem+0x120>
  802f1c:	b0bfff04 	addi	r2,r22,-4
  802f20:	a880082e 	bgeu	r21,r2,802f44 <quorem+0x11c>
  802f24:	b0ffff17 	ldw	r3,-4(r22)
  802f28:	18000326 	beq	r3,zero,802f38 <quorem+0x110>
  802f2c:	00000506 	br	802f44 <quorem+0x11c>
  802f30:	10c00017 	ldw	r3,0(r2)
  802f34:	1800031e 	bne	r3,zero,802f44 <quorem+0x11c>
  802f38:	10bfff04 	addi	r2,r2,-4
  802f3c:	94bfffc4 	addi	r18,r18,-1
  802f40:	a8bffb36 	bltu	r21,r2,802f30 <__alt_data_end+0xff802f30>
  802f44:	84800415 	stw	r18,16(r16)
  802f48:	b80b883a 	mov	r5,r23
  802f4c:	8009883a 	mov	r4,r16
  802f50:	0806f8c0 	call	806f8c <__mcmp>
  802f54:	10002616 	blt	r2,zero,802ff0 <quorem+0x1c8>
  802f58:	9cc00044 	addi	r19,r19,1
  802f5c:	a805883a 	mov	r2,r21
  802f60:	000b883a 	mov	r5,zero
  802f64:	11000017 	ldw	r4,0(r2)
  802f68:	89800017 	ldw	r6,0(r17)
  802f6c:	10800104 	addi	r2,r2,4
  802f70:	20ffffcc 	andi	r3,r4,65535
  802f74:	194b883a 	add	r5,r3,r5
  802f78:	30ffffcc 	andi	r3,r6,65535
  802f7c:	28c7c83a 	sub	r3,r5,r3
  802f80:	300cd43a 	srli	r6,r6,16
  802f84:	2008d43a 	srli	r4,r4,16
  802f88:	180bd43a 	srai	r5,r3,16
  802f8c:	18ffffcc 	andi	r3,r3,65535
  802f90:	2189c83a 	sub	r4,r4,r6
  802f94:	2149883a 	add	r4,r4,r5
  802f98:	200c943a 	slli	r6,r4,16
  802f9c:	8c400104 	addi	r17,r17,4
  802fa0:	200bd43a 	srai	r5,r4,16
  802fa4:	30c6b03a 	or	r3,r6,r3
  802fa8:	10ffff15 	stw	r3,-4(r2)
  802fac:	a47fed2e 	bgeu	r20,r17,802f64 <__alt_data_end+0xff802f64>
  802fb0:	9485883a 	add	r2,r18,r18
  802fb4:	1085883a 	add	r2,r2,r2
  802fb8:	a887883a 	add	r3,r21,r2
  802fbc:	18800017 	ldw	r2,0(r3)
  802fc0:	10000b1e 	bne	r2,zero,802ff0 <quorem+0x1c8>
  802fc4:	18bfff04 	addi	r2,r3,-4
  802fc8:	a880082e 	bgeu	r21,r2,802fec <quorem+0x1c4>
  802fcc:	18ffff17 	ldw	r3,-4(r3)
  802fd0:	18000326 	beq	r3,zero,802fe0 <quorem+0x1b8>
  802fd4:	00000506 	br	802fec <quorem+0x1c4>
  802fd8:	10c00017 	ldw	r3,0(r2)
  802fdc:	1800031e 	bne	r3,zero,802fec <quorem+0x1c4>
  802fe0:	10bfff04 	addi	r2,r2,-4
  802fe4:	94bfffc4 	addi	r18,r18,-1
  802fe8:	a8bffb36 	bltu	r21,r2,802fd8 <__alt_data_end+0xff802fd8>
  802fec:	84800415 	stw	r18,16(r16)
  802ff0:	9805883a 	mov	r2,r19
  802ff4:	dfc00817 	ldw	ra,32(sp)
  802ff8:	ddc00717 	ldw	r23,28(sp)
  802ffc:	dd800617 	ldw	r22,24(sp)
  803000:	dd400517 	ldw	r21,20(sp)
  803004:	dd000417 	ldw	r20,16(sp)
  803008:	dcc00317 	ldw	r19,12(sp)
  80300c:	dc800217 	ldw	r18,8(sp)
  803010:	dc400117 	ldw	r17,4(sp)
  803014:	dc000017 	ldw	r16,0(sp)
  803018:	dec00904 	addi	sp,sp,36
  80301c:	f800283a 	ret
  803020:	0005883a 	mov	r2,zero
  803024:	003ff306 	br	802ff4 <__alt_data_end+0xff802ff4>

00803028 <_dtoa_r>:
  803028:	20801017 	ldw	r2,64(r4)
  80302c:	deffde04 	addi	sp,sp,-136
  803030:	df002015 	stw	fp,128(sp)
  803034:	dcc01b15 	stw	r19,108(sp)
  803038:	dc801a15 	stw	r18,104(sp)
  80303c:	dc401915 	stw	r17,100(sp)
  803040:	dc001815 	stw	r16,96(sp)
  803044:	dfc02115 	stw	ra,132(sp)
  803048:	ddc01f15 	stw	r23,124(sp)
  80304c:	dd801e15 	stw	r22,120(sp)
  803050:	dd401d15 	stw	r21,116(sp)
  803054:	dd001c15 	stw	r20,112(sp)
  803058:	d9c00315 	stw	r7,12(sp)
  80305c:	2039883a 	mov	fp,r4
  803060:	3023883a 	mov	r17,r6
  803064:	2825883a 	mov	r18,r5
  803068:	dc002417 	ldw	r16,144(sp)
  80306c:	3027883a 	mov	r19,r6
  803070:	10000826 	beq	r2,zero,803094 <_dtoa_r+0x6c>
  803074:	21801117 	ldw	r6,68(r4)
  803078:	00c00044 	movi	r3,1
  80307c:	100b883a 	mov	r5,r2
  803080:	1986983a 	sll	r3,r3,r6
  803084:	11800115 	stw	r6,4(r2)
  803088:	10c00215 	stw	r3,8(r2)
  80308c:	080676c0 	call	80676c <_Bfree>
  803090:	e0001015 	stw	zero,64(fp)
  803094:	88002e16 	blt	r17,zero,803150 <_dtoa_r+0x128>
  803098:	80000015 	stw	zero,0(r16)
  80309c:	889ffc2c 	andhi	r2,r17,32752
  8030a0:	00dffc34 	movhi	r3,32752
  8030a4:	10c01c26 	beq	r2,r3,803118 <_dtoa_r+0xf0>
  8030a8:	000d883a 	mov	r6,zero
  8030ac:	000f883a 	mov	r7,zero
  8030b0:	9009883a 	mov	r4,r18
  8030b4:	980b883a 	mov	r5,r19
  8030b8:	080bc780 	call	80bc78 <__eqdf2>
  8030bc:	10002b1e 	bne	r2,zero,80316c <_dtoa_r+0x144>
  8030c0:	d9c02317 	ldw	r7,140(sp)
  8030c4:	00800044 	movi	r2,1
  8030c8:	38800015 	stw	r2,0(r7)
  8030cc:	d8802517 	ldw	r2,148(sp)
  8030d0:	10019e26 	beq	r2,zero,80374c <_dtoa_r+0x724>
  8030d4:	d8c02517 	ldw	r3,148(sp)
  8030d8:	00802074 	movhi	r2,129
  8030dc:	10be6744 	addi	r2,r2,-1635
  8030e0:	18800015 	stw	r2,0(r3)
  8030e4:	10bfffc4 	addi	r2,r2,-1
  8030e8:	dfc02117 	ldw	ra,132(sp)
  8030ec:	df002017 	ldw	fp,128(sp)
  8030f0:	ddc01f17 	ldw	r23,124(sp)
  8030f4:	dd801e17 	ldw	r22,120(sp)
  8030f8:	dd401d17 	ldw	r21,116(sp)
  8030fc:	dd001c17 	ldw	r20,112(sp)
  803100:	dcc01b17 	ldw	r19,108(sp)
  803104:	dc801a17 	ldw	r18,104(sp)
  803108:	dc401917 	ldw	r17,100(sp)
  80310c:	dc001817 	ldw	r16,96(sp)
  803110:	dec02204 	addi	sp,sp,136
  803114:	f800283a 	ret
  803118:	d8c02317 	ldw	r3,140(sp)
  80311c:	0089c3c4 	movi	r2,9999
  803120:	18800015 	stw	r2,0(r3)
  803124:	90017726 	beq	r18,zero,803704 <_dtoa_r+0x6dc>
  803128:	00802074 	movhi	r2,129
  80312c:	10be7304 	addi	r2,r2,-1588
  803130:	d9002517 	ldw	r4,148(sp)
  803134:	203fec26 	beq	r4,zero,8030e8 <__alt_data_end+0xff8030e8>
  803138:	10c000c7 	ldb	r3,3(r2)
  80313c:	1801781e 	bne	r3,zero,803720 <_dtoa_r+0x6f8>
  803140:	10c000c4 	addi	r3,r2,3
  803144:	d9802517 	ldw	r6,148(sp)
  803148:	30c00015 	stw	r3,0(r6)
  80314c:	003fe606 	br	8030e8 <__alt_data_end+0xff8030e8>
  803150:	04e00034 	movhi	r19,32768
  803154:	9cffffc4 	addi	r19,r19,-1
  803158:	00800044 	movi	r2,1
  80315c:	8ce6703a 	and	r19,r17,r19
  803160:	80800015 	stw	r2,0(r16)
  803164:	9823883a 	mov	r17,r19
  803168:	003fcc06 	br	80309c <__alt_data_end+0xff80309c>
  80316c:	d8800204 	addi	r2,sp,8
  803170:	d8800015 	stw	r2,0(sp)
  803174:	d9c00104 	addi	r7,sp,4
  803178:	900b883a 	mov	r5,r18
  80317c:	980d883a 	mov	r6,r19
  803180:	e009883a 	mov	r4,fp
  803184:	8820d53a 	srli	r16,r17,20
  803188:	08073580 	call	807358 <__d2b>
  80318c:	d8800915 	stw	r2,36(sp)
  803190:	8001651e 	bne	r16,zero,803728 <_dtoa_r+0x700>
  803194:	dd800217 	ldw	r22,8(sp)
  803198:	dc000117 	ldw	r16,4(sp)
  80319c:	00800804 	movi	r2,32
  8031a0:	b421883a 	add	r16,r22,r16
  8031a4:	80c10c84 	addi	r3,r16,1074
  8031a8:	10c2d10e 	bge	r2,r3,803cf0 <_dtoa_r+0xcc8>
  8031ac:	00801004 	movi	r2,64
  8031b0:	81010484 	addi	r4,r16,1042
  8031b4:	10c7c83a 	sub	r3,r2,r3
  8031b8:	9108d83a 	srl	r4,r18,r4
  8031bc:	88e2983a 	sll	r17,r17,r3
  8031c0:	2448b03a 	or	r4,r4,r17
  8031c4:	080d0400 	call	80d040 <__floatunsidf>
  8031c8:	017f8434 	movhi	r5,65040
  8031cc:	01800044 	movi	r6,1
  8031d0:	1009883a 	mov	r4,r2
  8031d4:	194b883a 	add	r5,r3,r5
  8031d8:	843fffc4 	addi	r16,r16,-1
  8031dc:	d9801115 	stw	r6,68(sp)
  8031e0:	000d883a 	mov	r6,zero
  8031e4:	01cffe34 	movhi	r7,16376
  8031e8:	080c5e80 	call	80c5e8 <__subdf3>
  8031ec:	0198dbf4 	movhi	r6,25455
  8031f0:	01cff4f4 	movhi	r7,16339
  8031f4:	3190d844 	addi	r6,r6,17249
  8031f8:	39e1e9c4 	addi	r7,r7,-30809
  8031fc:	1009883a 	mov	r4,r2
  803200:	180b883a 	mov	r5,r3
  803204:	080bed00 	call	80bed0 <__muldf3>
  803208:	01a2d874 	movhi	r6,35681
  80320c:	01cff1f4 	movhi	r7,16327
  803210:	31b22cc4 	addi	r6,r6,-14157
  803214:	39e28a04 	addi	r7,r7,-30168
  803218:	180b883a 	mov	r5,r3
  80321c:	1009883a 	mov	r4,r2
  803220:	080aae40 	call	80aae4 <__adddf3>
  803224:	8009883a 	mov	r4,r16
  803228:	1029883a 	mov	r20,r2
  80322c:	1823883a 	mov	r17,r3
  803230:	080cf640 	call	80cf64 <__floatsidf>
  803234:	019427f4 	movhi	r6,20639
  803238:	01cff4f4 	movhi	r7,16339
  80323c:	319e7ec4 	addi	r6,r6,31227
  803240:	39d104c4 	addi	r7,r7,17427
  803244:	1009883a 	mov	r4,r2
  803248:	180b883a 	mov	r5,r3
  80324c:	080bed00 	call	80bed0 <__muldf3>
  803250:	100d883a 	mov	r6,r2
  803254:	180f883a 	mov	r7,r3
  803258:	a009883a 	mov	r4,r20
  80325c:	880b883a 	mov	r5,r17
  803260:	080aae40 	call	80aae4 <__adddf3>
  803264:	1009883a 	mov	r4,r2
  803268:	180b883a 	mov	r5,r3
  80326c:	1029883a 	mov	r20,r2
  803270:	1823883a 	mov	r17,r3
  803274:	080cee40 	call	80cee4 <__fixdfsi>
  803278:	000d883a 	mov	r6,zero
  80327c:	000f883a 	mov	r7,zero
  803280:	a009883a 	mov	r4,r20
  803284:	880b883a 	mov	r5,r17
  803288:	d8800515 	stw	r2,20(sp)
  80328c:	080bddc0 	call	80bddc <__ledf2>
  803290:	10028716 	blt	r2,zero,803cb0 <_dtoa_r+0xc88>
  803294:	d8c00517 	ldw	r3,20(sp)
  803298:	00800584 	movi	r2,22
  80329c:	10c27536 	bltu	r2,r3,803c74 <_dtoa_r+0xc4c>
  8032a0:	180490fa 	slli	r2,r3,3
  8032a4:	00c02074 	movhi	r3,129
  8032a8:	18fe8f04 	addi	r3,r3,-1476
  8032ac:	1885883a 	add	r2,r3,r2
  8032b0:	11000017 	ldw	r4,0(r2)
  8032b4:	11400117 	ldw	r5,4(r2)
  8032b8:	900d883a 	mov	r6,r18
  8032bc:	980f883a 	mov	r7,r19
  8032c0:	080bd000 	call	80bd00 <__gedf2>
  8032c4:	00828d0e 	bge	zero,r2,803cfc <_dtoa_r+0xcd4>
  8032c8:	d9000517 	ldw	r4,20(sp)
  8032cc:	d8000e15 	stw	zero,56(sp)
  8032d0:	213fffc4 	addi	r4,r4,-1
  8032d4:	d9000515 	stw	r4,20(sp)
  8032d8:	b42dc83a 	sub	r22,r22,r16
  8032dc:	b5bfffc4 	addi	r22,r22,-1
  8032e0:	b0026f16 	blt	r22,zero,803ca0 <_dtoa_r+0xc78>
  8032e4:	d8000815 	stw	zero,32(sp)
  8032e8:	d9c00517 	ldw	r7,20(sp)
  8032ec:	38026416 	blt	r7,zero,803c80 <_dtoa_r+0xc58>
  8032f0:	b1ed883a 	add	r22,r22,r7
  8032f4:	d9c00d15 	stw	r7,52(sp)
  8032f8:	d8000a15 	stw	zero,40(sp)
  8032fc:	d9800317 	ldw	r6,12(sp)
  803300:	00800244 	movi	r2,9
  803304:	11811436 	bltu	r2,r6,803758 <_dtoa_r+0x730>
  803308:	00800144 	movi	r2,5
  80330c:	1184e10e 	bge	r2,r6,804694 <_dtoa_r+0x166c>
  803310:	31bfff04 	addi	r6,r6,-4
  803314:	d9800315 	stw	r6,12(sp)
  803318:	0023883a 	mov	r17,zero
  80331c:	d9800317 	ldw	r6,12(sp)
  803320:	008000c4 	movi	r2,3
  803324:	30836726 	beq	r6,r2,8040c4 <_dtoa_r+0x109c>
  803328:	1183410e 	bge	r2,r6,804030 <_dtoa_r+0x1008>
  80332c:	d9c00317 	ldw	r7,12(sp)
  803330:	00800104 	movi	r2,4
  803334:	38827c26 	beq	r7,r2,803d28 <_dtoa_r+0xd00>
  803338:	00800144 	movi	r2,5
  80333c:	3884c41e 	bne	r7,r2,804650 <_dtoa_r+0x1628>
  803340:	00800044 	movi	r2,1
  803344:	d8800b15 	stw	r2,44(sp)
  803348:	d8c00517 	ldw	r3,20(sp)
  80334c:	d9002217 	ldw	r4,136(sp)
  803350:	1907883a 	add	r3,r3,r4
  803354:	19800044 	addi	r6,r3,1
  803358:	d8c00c15 	stw	r3,48(sp)
  80335c:	d9800615 	stw	r6,24(sp)
  803360:	0183a40e 	bge	zero,r6,8041f4 <_dtoa_r+0x11cc>
  803364:	d9800617 	ldw	r6,24(sp)
  803368:	3021883a 	mov	r16,r6
  80336c:	e0001115 	stw	zero,68(fp)
  803370:	008005c4 	movi	r2,23
  803374:	1184c92e 	bgeu	r2,r6,80469c <_dtoa_r+0x1674>
  803378:	00c00044 	movi	r3,1
  80337c:	00800104 	movi	r2,4
  803380:	1085883a 	add	r2,r2,r2
  803384:	11000504 	addi	r4,r2,20
  803388:	180b883a 	mov	r5,r3
  80338c:	18c00044 	addi	r3,r3,1
  803390:	313ffb2e 	bgeu	r6,r4,803380 <__alt_data_end+0xff803380>
  803394:	e1401115 	stw	r5,68(fp)
  803398:	e009883a 	mov	r4,fp
  80339c:	08066c40 	call	8066c4 <_Balloc>
  8033a0:	d8800715 	stw	r2,28(sp)
  8033a4:	e0801015 	stw	r2,64(fp)
  8033a8:	00800384 	movi	r2,14
  8033ac:	1400f736 	bltu	r2,r16,80378c <_dtoa_r+0x764>
  8033b0:	8800f626 	beq	r17,zero,80378c <_dtoa_r+0x764>
  8033b4:	d9c00517 	ldw	r7,20(sp)
  8033b8:	01c39a0e 	bge	zero,r7,804224 <_dtoa_r+0x11fc>
  8033bc:	388003cc 	andi	r2,r7,15
  8033c0:	100490fa 	slli	r2,r2,3
  8033c4:	382bd13a 	srai	r21,r7,4
  8033c8:	00c02074 	movhi	r3,129
  8033cc:	18fe8f04 	addi	r3,r3,-1476
  8033d0:	1885883a 	add	r2,r3,r2
  8033d4:	a8c0040c 	andi	r3,r21,16
  8033d8:	12400017 	ldw	r9,0(r2)
  8033dc:	12000117 	ldw	r8,4(r2)
  8033e0:	18037926 	beq	r3,zero,8041c8 <_dtoa_r+0x11a0>
  8033e4:	00802074 	movhi	r2,129
  8033e8:	10be8504 	addi	r2,r2,-1516
  8033ec:	11800817 	ldw	r6,32(r2)
  8033f0:	11c00917 	ldw	r7,36(r2)
  8033f4:	9009883a 	mov	r4,r18
  8033f8:	980b883a 	mov	r5,r19
  8033fc:	da001715 	stw	r8,92(sp)
  803400:	da401615 	stw	r9,88(sp)
  803404:	080b3900 	call	80b390 <__divdf3>
  803408:	da001717 	ldw	r8,92(sp)
  80340c:	da401617 	ldw	r9,88(sp)
  803410:	ad4003cc 	andi	r21,r21,15
  803414:	040000c4 	movi	r16,3
  803418:	1023883a 	mov	r17,r2
  80341c:	1829883a 	mov	r20,r3
  803420:	a8001126 	beq	r21,zero,803468 <_dtoa_r+0x440>
  803424:	05c02074 	movhi	r23,129
  803428:	bdfe8504 	addi	r23,r23,-1516
  80342c:	4805883a 	mov	r2,r9
  803430:	4007883a 	mov	r3,r8
  803434:	a980004c 	andi	r6,r21,1
  803438:	1009883a 	mov	r4,r2
  80343c:	a82bd07a 	srai	r21,r21,1
  803440:	180b883a 	mov	r5,r3
  803444:	30000426 	beq	r6,zero,803458 <_dtoa_r+0x430>
  803448:	b9800017 	ldw	r6,0(r23)
  80344c:	b9c00117 	ldw	r7,4(r23)
  803450:	84000044 	addi	r16,r16,1
  803454:	080bed00 	call	80bed0 <__muldf3>
  803458:	bdc00204 	addi	r23,r23,8
  80345c:	a83ff51e 	bne	r21,zero,803434 <__alt_data_end+0xff803434>
  803460:	1013883a 	mov	r9,r2
  803464:	1811883a 	mov	r8,r3
  803468:	480d883a 	mov	r6,r9
  80346c:	400f883a 	mov	r7,r8
  803470:	8809883a 	mov	r4,r17
  803474:	a00b883a 	mov	r5,r20
  803478:	080b3900 	call	80b390 <__divdf3>
  80347c:	d8800f15 	stw	r2,60(sp)
  803480:	d8c01015 	stw	r3,64(sp)
  803484:	d8c00e17 	ldw	r3,56(sp)
  803488:	18000626 	beq	r3,zero,8034a4 <_dtoa_r+0x47c>
  80348c:	d9000f17 	ldw	r4,60(sp)
  803490:	d9401017 	ldw	r5,64(sp)
  803494:	000d883a 	mov	r6,zero
  803498:	01cffc34 	movhi	r7,16368
  80349c:	080bddc0 	call	80bddc <__ledf2>
  8034a0:	10040b16 	blt	r2,zero,8044d0 <_dtoa_r+0x14a8>
  8034a4:	8009883a 	mov	r4,r16
  8034a8:	080cf640 	call	80cf64 <__floatsidf>
  8034ac:	d9800f17 	ldw	r6,60(sp)
  8034b0:	d9c01017 	ldw	r7,64(sp)
  8034b4:	1009883a 	mov	r4,r2
  8034b8:	180b883a 	mov	r5,r3
  8034bc:	080bed00 	call	80bed0 <__muldf3>
  8034c0:	000d883a 	mov	r6,zero
  8034c4:	01d00734 	movhi	r7,16412
  8034c8:	1009883a 	mov	r4,r2
  8034cc:	180b883a 	mov	r5,r3
  8034d0:	080aae40 	call	80aae4 <__adddf3>
  8034d4:	1021883a 	mov	r16,r2
  8034d8:	d8800617 	ldw	r2,24(sp)
  8034dc:	047f3034 	movhi	r17,64704
  8034e0:	1c63883a 	add	r17,r3,r17
  8034e4:	10031826 	beq	r2,zero,804148 <_dtoa_r+0x1120>
  8034e8:	d8c00517 	ldw	r3,20(sp)
  8034ec:	db000617 	ldw	r12,24(sp)
  8034f0:	d8c01315 	stw	r3,76(sp)
  8034f4:	d9000b17 	ldw	r4,44(sp)
  8034f8:	20038f26 	beq	r4,zero,804338 <_dtoa_r+0x1310>
  8034fc:	60bfffc4 	addi	r2,r12,-1
  803500:	100490fa 	slli	r2,r2,3
  803504:	00c02074 	movhi	r3,129
  803508:	18fe8f04 	addi	r3,r3,-1476
  80350c:	1885883a 	add	r2,r3,r2
  803510:	11800017 	ldw	r6,0(r2)
  803514:	11c00117 	ldw	r7,4(r2)
  803518:	d8800717 	ldw	r2,28(sp)
  80351c:	0009883a 	mov	r4,zero
  803520:	014ff834 	movhi	r5,16352
  803524:	db001615 	stw	r12,88(sp)
  803528:	15c00044 	addi	r23,r2,1
  80352c:	080b3900 	call	80b390 <__divdf3>
  803530:	800d883a 	mov	r6,r16
  803534:	880f883a 	mov	r7,r17
  803538:	1009883a 	mov	r4,r2
  80353c:	180b883a 	mov	r5,r3
  803540:	080c5e80 	call	80c5e8 <__subdf3>
  803544:	d9401017 	ldw	r5,64(sp)
  803548:	d9000f17 	ldw	r4,60(sp)
  80354c:	102b883a 	mov	r21,r2
  803550:	d8c01215 	stw	r3,72(sp)
  803554:	080cee40 	call	80cee4 <__fixdfsi>
  803558:	1009883a 	mov	r4,r2
  80355c:	1029883a 	mov	r20,r2
  803560:	080cf640 	call	80cf64 <__floatsidf>
  803564:	d9000f17 	ldw	r4,60(sp)
  803568:	d9401017 	ldw	r5,64(sp)
  80356c:	100d883a 	mov	r6,r2
  803570:	180f883a 	mov	r7,r3
  803574:	080c5e80 	call	80c5e8 <__subdf3>
  803578:	1823883a 	mov	r17,r3
  80357c:	d8c00717 	ldw	r3,28(sp)
  803580:	d9401217 	ldw	r5,72(sp)
  803584:	a2000c04 	addi	r8,r20,48
  803588:	1021883a 	mov	r16,r2
  80358c:	1a000005 	stb	r8,0(r3)
  803590:	800d883a 	mov	r6,r16
  803594:	880f883a 	mov	r7,r17
  803598:	a809883a 	mov	r4,r21
  80359c:	4029883a 	mov	r20,r8
  8035a0:	080bd000 	call	80bd00 <__gedf2>
  8035a4:	00841d16 	blt	zero,r2,80461c <_dtoa_r+0x15f4>
  8035a8:	800d883a 	mov	r6,r16
  8035ac:	880f883a 	mov	r7,r17
  8035b0:	0009883a 	mov	r4,zero
  8035b4:	014ffc34 	movhi	r5,16368
  8035b8:	080c5e80 	call	80c5e8 <__subdf3>
  8035bc:	d9401217 	ldw	r5,72(sp)
  8035c0:	100d883a 	mov	r6,r2
  8035c4:	180f883a 	mov	r7,r3
  8035c8:	a809883a 	mov	r4,r21
  8035cc:	080bd000 	call	80bd00 <__gedf2>
  8035d0:	db001617 	ldw	r12,88(sp)
  8035d4:	00840e16 	blt	zero,r2,804610 <_dtoa_r+0x15e8>
  8035d8:	00800044 	movi	r2,1
  8035dc:	13006b0e 	bge	r2,r12,80378c <_dtoa_r+0x764>
  8035e0:	d9000717 	ldw	r4,28(sp)
  8035e4:	dd800f15 	stw	r22,60(sp)
  8035e8:	dcc01015 	stw	r19,64(sp)
  8035ec:	2319883a 	add	r12,r4,r12
  8035f0:	dcc01217 	ldw	r19,72(sp)
  8035f4:	602d883a 	mov	r22,r12
  8035f8:	dc801215 	stw	r18,72(sp)
  8035fc:	b825883a 	mov	r18,r23
  803600:	00000906 	br	803628 <_dtoa_r+0x600>
  803604:	080c5e80 	call	80c5e8 <__subdf3>
  803608:	a80d883a 	mov	r6,r21
  80360c:	980f883a 	mov	r7,r19
  803610:	1009883a 	mov	r4,r2
  803614:	180b883a 	mov	r5,r3
  803618:	080bddc0 	call	80bddc <__ledf2>
  80361c:	1003e816 	blt	r2,zero,8045c0 <_dtoa_r+0x1598>
  803620:	b825883a 	mov	r18,r23
  803624:	bd83e926 	beq	r23,r22,8045cc <_dtoa_r+0x15a4>
  803628:	a809883a 	mov	r4,r21
  80362c:	980b883a 	mov	r5,r19
  803630:	000d883a 	mov	r6,zero
  803634:	01d00934 	movhi	r7,16420
  803638:	080bed00 	call	80bed0 <__muldf3>
  80363c:	000d883a 	mov	r6,zero
  803640:	01d00934 	movhi	r7,16420
  803644:	8009883a 	mov	r4,r16
  803648:	880b883a 	mov	r5,r17
  80364c:	102b883a 	mov	r21,r2
  803650:	1827883a 	mov	r19,r3
  803654:	080bed00 	call	80bed0 <__muldf3>
  803658:	180b883a 	mov	r5,r3
  80365c:	1009883a 	mov	r4,r2
  803660:	1821883a 	mov	r16,r3
  803664:	1023883a 	mov	r17,r2
  803668:	080cee40 	call	80cee4 <__fixdfsi>
  80366c:	1009883a 	mov	r4,r2
  803670:	1029883a 	mov	r20,r2
  803674:	080cf640 	call	80cf64 <__floatsidf>
  803678:	8809883a 	mov	r4,r17
  80367c:	800b883a 	mov	r5,r16
  803680:	100d883a 	mov	r6,r2
  803684:	180f883a 	mov	r7,r3
  803688:	080c5e80 	call	80c5e8 <__subdf3>
  80368c:	a5000c04 	addi	r20,r20,48
  803690:	a80d883a 	mov	r6,r21
  803694:	980f883a 	mov	r7,r19
  803698:	1009883a 	mov	r4,r2
  80369c:	180b883a 	mov	r5,r3
  8036a0:	95000005 	stb	r20,0(r18)
  8036a4:	1021883a 	mov	r16,r2
  8036a8:	1823883a 	mov	r17,r3
  8036ac:	080bddc0 	call	80bddc <__ledf2>
  8036b0:	bdc00044 	addi	r23,r23,1
  8036b4:	800d883a 	mov	r6,r16
  8036b8:	880f883a 	mov	r7,r17
  8036bc:	0009883a 	mov	r4,zero
  8036c0:	014ffc34 	movhi	r5,16368
  8036c4:	103fcf0e 	bge	r2,zero,803604 <__alt_data_end+0xff803604>
  8036c8:	d8c01317 	ldw	r3,76(sp)
  8036cc:	d8c00515 	stw	r3,20(sp)
  8036d0:	d9400917 	ldw	r5,36(sp)
  8036d4:	e009883a 	mov	r4,fp
  8036d8:	080676c0 	call	80676c <_Bfree>
  8036dc:	d9000517 	ldw	r4,20(sp)
  8036e0:	d9802317 	ldw	r6,140(sp)
  8036e4:	d9c02517 	ldw	r7,148(sp)
  8036e8:	b8000005 	stb	zero,0(r23)
  8036ec:	20800044 	addi	r2,r4,1
  8036f0:	30800015 	stw	r2,0(r6)
  8036f4:	3802aa26 	beq	r7,zero,8041a0 <_dtoa_r+0x1178>
  8036f8:	3dc00015 	stw	r23,0(r7)
  8036fc:	d8800717 	ldw	r2,28(sp)
  803700:	003e7906 	br	8030e8 <__alt_data_end+0xff8030e8>
  803704:	00800434 	movhi	r2,16
  803708:	10bfffc4 	addi	r2,r2,-1
  80370c:	88a2703a 	and	r17,r17,r2
  803710:	883e851e 	bne	r17,zero,803128 <__alt_data_end+0xff803128>
  803714:	00802074 	movhi	r2,129
  803718:	10be7004 	addi	r2,r2,-1600
  80371c:	003e8406 	br	803130 <__alt_data_end+0xff803130>
  803720:	10c00204 	addi	r3,r2,8
  803724:	003e8706 	br	803144 <__alt_data_end+0xff803144>
  803728:	01400434 	movhi	r5,16
  80372c:	297fffc4 	addi	r5,r5,-1
  803730:	994a703a 	and	r5,r19,r5
  803734:	9009883a 	mov	r4,r18
  803738:	843f0044 	addi	r16,r16,-1023
  80373c:	294ffc34 	orhi	r5,r5,16368
  803740:	dd800217 	ldw	r22,8(sp)
  803744:	d8001115 	stw	zero,68(sp)
  803748:	003ea506 	br	8031e0 <__alt_data_end+0xff8031e0>
  80374c:	00802074 	movhi	r2,129
  803750:	10be6704 	addi	r2,r2,-1636
  803754:	003e6406 	br	8030e8 <__alt_data_end+0xff8030e8>
  803758:	e0001115 	stw	zero,68(fp)
  80375c:	000b883a 	mov	r5,zero
  803760:	e009883a 	mov	r4,fp
  803764:	08066c40 	call	8066c4 <_Balloc>
  803768:	01bfffc4 	movi	r6,-1
  80376c:	01c00044 	movi	r7,1
  803770:	d8800715 	stw	r2,28(sp)
  803774:	d9800c15 	stw	r6,48(sp)
  803778:	e0801015 	stw	r2,64(fp)
  80377c:	d8000315 	stw	zero,12(sp)
  803780:	d9c00b15 	stw	r7,44(sp)
  803784:	d9800615 	stw	r6,24(sp)
  803788:	d8002215 	stw	zero,136(sp)
  80378c:	d8800117 	ldw	r2,4(sp)
  803790:	10008916 	blt	r2,zero,8039b8 <_dtoa_r+0x990>
  803794:	d9000517 	ldw	r4,20(sp)
  803798:	00c00384 	movi	r3,14
  80379c:	19008616 	blt	r3,r4,8039b8 <_dtoa_r+0x990>
  8037a0:	200490fa 	slli	r2,r4,3
  8037a4:	00c02074 	movhi	r3,129
  8037a8:	d9802217 	ldw	r6,136(sp)
  8037ac:	18fe8f04 	addi	r3,r3,-1476
  8037b0:	1885883a 	add	r2,r3,r2
  8037b4:	14000017 	ldw	r16,0(r2)
  8037b8:	14400117 	ldw	r17,4(r2)
  8037bc:	30016316 	blt	r6,zero,803d4c <_dtoa_r+0xd24>
  8037c0:	800d883a 	mov	r6,r16
  8037c4:	880f883a 	mov	r7,r17
  8037c8:	9009883a 	mov	r4,r18
  8037cc:	980b883a 	mov	r5,r19
  8037d0:	080b3900 	call	80b390 <__divdf3>
  8037d4:	180b883a 	mov	r5,r3
  8037d8:	1009883a 	mov	r4,r2
  8037dc:	080cee40 	call	80cee4 <__fixdfsi>
  8037e0:	1009883a 	mov	r4,r2
  8037e4:	102b883a 	mov	r21,r2
  8037e8:	080cf640 	call	80cf64 <__floatsidf>
  8037ec:	800d883a 	mov	r6,r16
  8037f0:	880f883a 	mov	r7,r17
  8037f4:	1009883a 	mov	r4,r2
  8037f8:	180b883a 	mov	r5,r3
  8037fc:	080bed00 	call	80bed0 <__muldf3>
  803800:	100d883a 	mov	r6,r2
  803804:	180f883a 	mov	r7,r3
  803808:	9009883a 	mov	r4,r18
  80380c:	980b883a 	mov	r5,r19
  803810:	080c5e80 	call	80c5e8 <__subdf3>
  803814:	d9c00717 	ldw	r7,28(sp)
  803818:	1009883a 	mov	r4,r2
  80381c:	a8800c04 	addi	r2,r21,48
  803820:	38800005 	stb	r2,0(r7)
  803824:	3dc00044 	addi	r23,r7,1
  803828:	d9c00617 	ldw	r7,24(sp)
  80382c:	01800044 	movi	r6,1
  803830:	180b883a 	mov	r5,r3
  803834:	2005883a 	mov	r2,r4
  803838:	39803826 	beq	r7,r6,80391c <_dtoa_r+0x8f4>
  80383c:	000d883a 	mov	r6,zero
  803840:	01d00934 	movhi	r7,16420
  803844:	080bed00 	call	80bed0 <__muldf3>
  803848:	000d883a 	mov	r6,zero
  80384c:	000f883a 	mov	r7,zero
  803850:	1009883a 	mov	r4,r2
  803854:	180b883a 	mov	r5,r3
  803858:	1025883a 	mov	r18,r2
  80385c:	1827883a 	mov	r19,r3
  803860:	080bc780 	call	80bc78 <__eqdf2>
  803864:	103f9a26 	beq	r2,zero,8036d0 <__alt_data_end+0xff8036d0>
  803868:	d9c00617 	ldw	r7,24(sp)
  80386c:	d8c00717 	ldw	r3,28(sp)
  803870:	b829883a 	mov	r20,r23
  803874:	38bfffc4 	addi	r2,r7,-1
  803878:	18ad883a 	add	r22,r3,r2
  80387c:	00000a06 	br	8038a8 <_dtoa_r+0x880>
  803880:	080bed00 	call	80bed0 <__muldf3>
  803884:	000d883a 	mov	r6,zero
  803888:	000f883a 	mov	r7,zero
  80388c:	1009883a 	mov	r4,r2
  803890:	180b883a 	mov	r5,r3
  803894:	1025883a 	mov	r18,r2
  803898:	1827883a 	mov	r19,r3
  80389c:	b829883a 	mov	r20,r23
  8038a0:	080bc780 	call	80bc78 <__eqdf2>
  8038a4:	103f8a26 	beq	r2,zero,8036d0 <__alt_data_end+0xff8036d0>
  8038a8:	800d883a 	mov	r6,r16
  8038ac:	880f883a 	mov	r7,r17
  8038b0:	9009883a 	mov	r4,r18
  8038b4:	980b883a 	mov	r5,r19
  8038b8:	080b3900 	call	80b390 <__divdf3>
  8038bc:	180b883a 	mov	r5,r3
  8038c0:	1009883a 	mov	r4,r2
  8038c4:	080cee40 	call	80cee4 <__fixdfsi>
  8038c8:	1009883a 	mov	r4,r2
  8038cc:	102b883a 	mov	r21,r2
  8038d0:	080cf640 	call	80cf64 <__floatsidf>
  8038d4:	800d883a 	mov	r6,r16
  8038d8:	880f883a 	mov	r7,r17
  8038dc:	1009883a 	mov	r4,r2
  8038e0:	180b883a 	mov	r5,r3
  8038e4:	080bed00 	call	80bed0 <__muldf3>
  8038e8:	100d883a 	mov	r6,r2
  8038ec:	180f883a 	mov	r7,r3
  8038f0:	9009883a 	mov	r4,r18
  8038f4:	980b883a 	mov	r5,r19
  8038f8:	080c5e80 	call	80c5e8 <__subdf3>
  8038fc:	aa000c04 	addi	r8,r21,48
  803900:	a2000005 	stb	r8,0(r20)
  803904:	000d883a 	mov	r6,zero
  803908:	01d00934 	movhi	r7,16420
  80390c:	1009883a 	mov	r4,r2
  803910:	180b883a 	mov	r5,r3
  803914:	a5c00044 	addi	r23,r20,1
  803918:	b53fd91e 	bne	r22,r20,803880 <__alt_data_end+0xff803880>
  80391c:	100d883a 	mov	r6,r2
  803920:	180f883a 	mov	r7,r3
  803924:	1009883a 	mov	r4,r2
  803928:	180b883a 	mov	r5,r3
  80392c:	080aae40 	call	80aae4 <__adddf3>
  803930:	100d883a 	mov	r6,r2
  803934:	180f883a 	mov	r7,r3
  803938:	8009883a 	mov	r4,r16
  80393c:	880b883a 	mov	r5,r17
  803940:	1027883a 	mov	r19,r2
  803944:	1825883a 	mov	r18,r3
  803948:	080bddc0 	call	80bddc <__ledf2>
  80394c:	10000816 	blt	r2,zero,803970 <_dtoa_r+0x948>
  803950:	980d883a 	mov	r6,r19
  803954:	900f883a 	mov	r7,r18
  803958:	8009883a 	mov	r4,r16
  80395c:	880b883a 	mov	r5,r17
  803960:	080bc780 	call	80bc78 <__eqdf2>
  803964:	103f5a1e 	bne	r2,zero,8036d0 <__alt_data_end+0xff8036d0>
  803968:	ad40004c 	andi	r21,r21,1
  80396c:	a83f5826 	beq	r21,zero,8036d0 <__alt_data_end+0xff8036d0>
  803970:	bd3fffc3 	ldbu	r20,-1(r23)
  803974:	b8bfffc4 	addi	r2,r23,-1
  803978:	1007883a 	mov	r3,r2
  80397c:	01400e44 	movi	r5,57
  803980:	d9800717 	ldw	r6,28(sp)
  803984:	00000506 	br	80399c <_dtoa_r+0x974>
  803988:	18ffffc4 	addi	r3,r3,-1
  80398c:	11824726 	beq	r2,r6,8042ac <_dtoa_r+0x1284>
  803990:	1d000003 	ldbu	r20,0(r3)
  803994:	102f883a 	mov	r23,r2
  803998:	10bfffc4 	addi	r2,r2,-1
  80399c:	a1003fcc 	andi	r4,r20,255
  8039a0:	2100201c 	xori	r4,r4,128
  8039a4:	213fe004 	addi	r4,r4,-128
  8039a8:	217ff726 	beq	r4,r5,803988 <__alt_data_end+0xff803988>
  8039ac:	a2000044 	addi	r8,r20,1
  8039b0:	12000005 	stb	r8,0(r2)
  8039b4:	003f4606 	br	8036d0 <__alt_data_end+0xff8036d0>
  8039b8:	d9000b17 	ldw	r4,44(sp)
  8039bc:	2000c826 	beq	r4,zero,803ce0 <_dtoa_r+0xcb8>
  8039c0:	d9800317 	ldw	r6,12(sp)
  8039c4:	00c00044 	movi	r3,1
  8039c8:	1980f90e 	bge	r3,r6,803db0 <_dtoa_r+0xd88>
  8039cc:	d8800617 	ldw	r2,24(sp)
  8039d0:	d8c00a17 	ldw	r3,40(sp)
  8039d4:	157fffc4 	addi	r21,r2,-1
  8039d8:	1d41f316 	blt	r3,r21,8041a8 <_dtoa_r+0x1180>
  8039dc:	1d6bc83a 	sub	r21,r3,r21
  8039e0:	d9c00617 	ldw	r7,24(sp)
  8039e4:	3802aa16 	blt	r7,zero,804490 <_dtoa_r+0x1468>
  8039e8:	dd000817 	ldw	r20,32(sp)
  8039ec:	d8800617 	ldw	r2,24(sp)
  8039f0:	d8c00817 	ldw	r3,32(sp)
  8039f4:	01400044 	movi	r5,1
  8039f8:	e009883a 	mov	r4,fp
  8039fc:	1887883a 	add	r3,r3,r2
  803a00:	d8c00815 	stw	r3,32(sp)
  803a04:	b0ad883a 	add	r22,r22,r2
  803a08:	0806ad00 	call	806ad0 <__i2b>
  803a0c:	1023883a 	mov	r17,r2
  803a10:	a0000826 	beq	r20,zero,803a34 <_dtoa_r+0xa0c>
  803a14:	0580070e 	bge	zero,r22,803a34 <_dtoa_r+0xa0c>
  803a18:	a005883a 	mov	r2,r20
  803a1c:	b500b916 	blt	r22,r20,803d04 <_dtoa_r+0xcdc>
  803a20:	d9000817 	ldw	r4,32(sp)
  803a24:	a0a9c83a 	sub	r20,r20,r2
  803a28:	b0adc83a 	sub	r22,r22,r2
  803a2c:	2089c83a 	sub	r4,r4,r2
  803a30:	d9000815 	stw	r4,32(sp)
  803a34:	d9800a17 	ldw	r6,40(sp)
  803a38:	0181810e 	bge	zero,r6,804040 <_dtoa_r+0x1018>
  803a3c:	d9c00b17 	ldw	r7,44(sp)
  803a40:	3800b326 	beq	r7,zero,803d10 <_dtoa_r+0xce8>
  803a44:	a800b226 	beq	r21,zero,803d10 <_dtoa_r+0xce8>
  803a48:	880b883a 	mov	r5,r17
  803a4c:	a80d883a 	mov	r6,r21
  803a50:	e009883a 	mov	r4,fp
  803a54:	0806d040 	call	806d04 <__pow5mult>
  803a58:	d9800917 	ldw	r6,36(sp)
  803a5c:	100b883a 	mov	r5,r2
  803a60:	e009883a 	mov	r4,fp
  803a64:	1023883a 	mov	r17,r2
  803a68:	0806b0c0 	call	806b0c <__multiply>
  803a6c:	1021883a 	mov	r16,r2
  803a70:	d8800a17 	ldw	r2,40(sp)
  803a74:	d9400917 	ldw	r5,36(sp)
  803a78:	e009883a 	mov	r4,fp
  803a7c:	1545c83a 	sub	r2,r2,r21
  803a80:	d8800a15 	stw	r2,40(sp)
  803a84:	080676c0 	call	80676c <_Bfree>
  803a88:	d8c00a17 	ldw	r3,40(sp)
  803a8c:	18009f1e 	bne	r3,zero,803d0c <_dtoa_r+0xce4>
  803a90:	05c00044 	movi	r23,1
  803a94:	e009883a 	mov	r4,fp
  803a98:	b80b883a 	mov	r5,r23
  803a9c:	0806ad00 	call	806ad0 <__i2b>
  803aa0:	d9000d17 	ldw	r4,52(sp)
  803aa4:	102b883a 	mov	r21,r2
  803aa8:	2000ce26 	beq	r4,zero,803de4 <_dtoa_r+0xdbc>
  803aac:	200d883a 	mov	r6,r4
  803ab0:	100b883a 	mov	r5,r2
  803ab4:	e009883a 	mov	r4,fp
  803ab8:	0806d040 	call	806d04 <__pow5mult>
  803abc:	d9800317 	ldw	r6,12(sp)
  803ac0:	102b883a 	mov	r21,r2
  803ac4:	b981810e 	bge	r23,r6,8040cc <_dtoa_r+0x10a4>
  803ac8:	0027883a 	mov	r19,zero
  803acc:	a8800417 	ldw	r2,16(r21)
  803ad0:	05c00804 	movi	r23,32
  803ad4:	10800104 	addi	r2,r2,4
  803ad8:	1085883a 	add	r2,r2,r2
  803adc:	1085883a 	add	r2,r2,r2
  803ae0:	a885883a 	add	r2,r21,r2
  803ae4:	11000017 	ldw	r4,0(r2)
  803ae8:	08069b80 	call	8069b8 <__hi0bits>
  803aec:	b885c83a 	sub	r2,r23,r2
  803af0:	1585883a 	add	r2,r2,r22
  803af4:	108007cc 	andi	r2,r2,31
  803af8:	1000b326 	beq	r2,zero,803dc8 <_dtoa_r+0xda0>
  803afc:	00c00804 	movi	r3,32
  803b00:	1887c83a 	sub	r3,r3,r2
  803b04:	01000104 	movi	r4,4
  803b08:	20c2cd0e 	bge	r4,r3,804640 <_dtoa_r+0x1618>
  803b0c:	00c00704 	movi	r3,28
  803b10:	1885c83a 	sub	r2,r3,r2
  803b14:	d8c00817 	ldw	r3,32(sp)
  803b18:	a0a9883a 	add	r20,r20,r2
  803b1c:	b0ad883a 	add	r22,r22,r2
  803b20:	1887883a 	add	r3,r3,r2
  803b24:	d8c00815 	stw	r3,32(sp)
  803b28:	d9800817 	ldw	r6,32(sp)
  803b2c:	0180040e 	bge	zero,r6,803b40 <_dtoa_r+0xb18>
  803b30:	800b883a 	mov	r5,r16
  803b34:	e009883a 	mov	r4,fp
  803b38:	0806e440 	call	806e44 <__lshift>
  803b3c:	1021883a 	mov	r16,r2
  803b40:	0580050e 	bge	zero,r22,803b58 <_dtoa_r+0xb30>
  803b44:	a80b883a 	mov	r5,r21
  803b48:	b00d883a 	mov	r6,r22
  803b4c:	e009883a 	mov	r4,fp
  803b50:	0806e440 	call	806e44 <__lshift>
  803b54:	102b883a 	mov	r21,r2
  803b58:	d9c00e17 	ldw	r7,56(sp)
  803b5c:	3801211e 	bne	r7,zero,803fe4 <_dtoa_r+0xfbc>
  803b60:	d9800617 	ldw	r6,24(sp)
  803b64:	0181380e 	bge	zero,r6,804048 <_dtoa_r+0x1020>
  803b68:	d8c00b17 	ldw	r3,44(sp)
  803b6c:	1800ab1e 	bne	r3,zero,803e1c <_dtoa_r+0xdf4>
  803b70:	dc800717 	ldw	r18,28(sp)
  803b74:	dcc00617 	ldw	r19,24(sp)
  803b78:	9029883a 	mov	r20,r18
  803b7c:	00000206 	br	803b88 <_dtoa_r+0xb60>
  803b80:	08067940 	call	806794 <__multadd>
  803b84:	1021883a 	mov	r16,r2
  803b88:	a80b883a 	mov	r5,r21
  803b8c:	8009883a 	mov	r4,r16
  803b90:	0802e280 	call	802e28 <quorem>
  803b94:	10800c04 	addi	r2,r2,48
  803b98:	90800005 	stb	r2,0(r18)
  803b9c:	94800044 	addi	r18,r18,1
  803ba0:	9507c83a 	sub	r3,r18,r20
  803ba4:	000f883a 	mov	r7,zero
  803ba8:	01800284 	movi	r6,10
  803bac:	800b883a 	mov	r5,r16
  803bb0:	e009883a 	mov	r4,fp
  803bb4:	1cfff216 	blt	r3,r19,803b80 <__alt_data_end+0xff803b80>
  803bb8:	1011883a 	mov	r8,r2
  803bbc:	d8800617 	ldw	r2,24(sp)
  803bc0:	0082370e 	bge	zero,r2,8044a0 <_dtoa_r+0x1478>
  803bc4:	d9000717 	ldw	r4,28(sp)
  803bc8:	0025883a 	mov	r18,zero
  803bcc:	20af883a 	add	r23,r4,r2
  803bd0:	01800044 	movi	r6,1
  803bd4:	800b883a 	mov	r5,r16
  803bd8:	e009883a 	mov	r4,fp
  803bdc:	da001715 	stw	r8,92(sp)
  803be0:	0806e440 	call	806e44 <__lshift>
  803be4:	a80b883a 	mov	r5,r21
  803be8:	1009883a 	mov	r4,r2
  803bec:	d8800915 	stw	r2,36(sp)
  803bf0:	0806f8c0 	call	806f8c <__mcmp>
  803bf4:	da001717 	ldw	r8,92(sp)
  803bf8:	0081800e 	bge	zero,r2,8041fc <_dtoa_r+0x11d4>
  803bfc:	b93fffc3 	ldbu	r4,-1(r23)
  803c00:	b8bfffc4 	addi	r2,r23,-1
  803c04:	1007883a 	mov	r3,r2
  803c08:	01800e44 	movi	r6,57
  803c0c:	d9c00717 	ldw	r7,28(sp)
  803c10:	00000506 	br	803c28 <_dtoa_r+0xc00>
  803c14:	18ffffc4 	addi	r3,r3,-1
  803c18:	11c12326 	beq	r2,r7,8040a8 <_dtoa_r+0x1080>
  803c1c:	19000003 	ldbu	r4,0(r3)
  803c20:	102f883a 	mov	r23,r2
  803c24:	10bfffc4 	addi	r2,r2,-1
  803c28:	21403fcc 	andi	r5,r4,255
  803c2c:	2940201c 	xori	r5,r5,128
  803c30:	297fe004 	addi	r5,r5,-128
  803c34:	29bff726 	beq	r5,r6,803c14 <__alt_data_end+0xff803c14>
  803c38:	21000044 	addi	r4,r4,1
  803c3c:	11000005 	stb	r4,0(r2)
  803c40:	a80b883a 	mov	r5,r21
  803c44:	e009883a 	mov	r4,fp
  803c48:	080676c0 	call	80676c <_Bfree>
  803c4c:	883ea026 	beq	r17,zero,8036d0 <__alt_data_end+0xff8036d0>
  803c50:	90000426 	beq	r18,zero,803c64 <_dtoa_r+0xc3c>
  803c54:	94400326 	beq	r18,r17,803c64 <_dtoa_r+0xc3c>
  803c58:	900b883a 	mov	r5,r18
  803c5c:	e009883a 	mov	r4,fp
  803c60:	080676c0 	call	80676c <_Bfree>
  803c64:	880b883a 	mov	r5,r17
  803c68:	e009883a 	mov	r4,fp
  803c6c:	080676c0 	call	80676c <_Bfree>
  803c70:	003e9706 	br	8036d0 <__alt_data_end+0xff8036d0>
  803c74:	01800044 	movi	r6,1
  803c78:	d9800e15 	stw	r6,56(sp)
  803c7c:	003d9606 	br	8032d8 <__alt_data_end+0xff8032d8>
  803c80:	d8800817 	ldw	r2,32(sp)
  803c84:	d8c00517 	ldw	r3,20(sp)
  803c88:	d8000d15 	stw	zero,52(sp)
  803c8c:	10c5c83a 	sub	r2,r2,r3
  803c90:	00c9c83a 	sub	r4,zero,r3
  803c94:	d8800815 	stw	r2,32(sp)
  803c98:	d9000a15 	stw	r4,40(sp)
  803c9c:	003d9706 	br	8032fc <__alt_data_end+0xff8032fc>
  803ca0:	05adc83a 	sub	r22,zero,r22
  803ca4:	dd800815 	stw	r22,32(sp)
  803ca8:	002d883a 	mov	r22,zero
  803cac:	003d8e06 	br	8032e8 <__alt_data_end+0xff8032e8>
  803cb0:	d9000517 	ldw	r4,20(sp)
  803cb4:	080cf640 	call	80cf64 <__floatsidf>
  803cb8:	100d883a 	mov	r6,r2
  803cbc:	180f883a 	mov	r7,r3
  803cc0:	a009883a 	mov	r4,r20
  803cc4:	880b883a 	mov	r5,r17
  803cc8:	080bc780 	call	80bc78 <__eqdf2>
  803ccc:	103d7126 	beq	r2,zero,803294 <__alt_data_end+0xff803294>
  803cd0:	d9c00517 	ldw	r7,20(sp)
  803cd4:	39ffffc4 	addi	r7,r7,-1
  803cd8:	d9c00515 	stw	r7,20(sp)
  803cdc:	003d6d06 	br	803294 <__alt_data_end+0xff803294>
  803ce0:	dd400a17 	ldw	r21,40(sp)
  803ce4:	dd000817 	ldw	r20,32(sp)
  803ce8:	0023883a 	mov	r17,zero
  803cec:	003f4806 	br	803a10 <__alt_data_end+0xff803a10>
  803cf0:	10e3c83a 	sub	r17,r2,r3
  803cf4:	9448983a 	sll	r4,r18,r17
  803cf8:	003d3206 	br	8031c4 <__alt_data_end+0xff8031c4>
  803cfc:	d8000e15 	stw	zero,56(sp)
  803d00:	003d7506 	br	8032d8 <__alt_data_end+0xff8032d8>
  803d04:	b005883a 	mov	r2,r22
  803d08:	003f4506 	br	803a20 <__alt_data_end+0xff803a20>
  803d0c:	dc000915 	stw	r16,36(sp)
  803d10:	d9800a17 	ldw	r6,40(sp)
  803d14:	d9400917 	ldw	r5,36(sp)
  803d18:	e009883a 	mov	r4,fp
  803d1c:	0806d040 	call	806d04 <__pow5mult>
  803d20:	1021883a 	mov	r16,r2
  803d24:	003f5a06 	br	803a90 <__alt_data_end+0xff803a90>
  803d28:	01c00044 	movi	r7,1
  803d2c:	d9c00b15 	stw	r7,44(sp)
  803d30:	d8802217 	ldw	r2,136(sp)
  803d34:	0081280e 	bge	zero,r2,8041d8 <_dtoa_r+0x11b0>
  803d38:	100d883a 	mov	r6,r2
  803d3c:	1021883a 	mov	r16,r2
  803d40:	d8800c15 	stw	r2,48(sp)
  803d44:	d8800615 	stw	r2,24(sp)
  803d48:	003d8806 	br	80336c <__alt_data_end+0xff80336c>
  803d4c:	d8800617 	ldw	r2,24(sp)
  803d50:	00be9b16 	blt	zero,r2,8037c0 <__alt_data_end+0xff8037c0>
  803d54:	10010f1e 	bne	r2,zero,804194 <_dtoa_r+0x116c>
  803d58:	880b883a 	mov	r5,r17
  803d5c:	000d883a 	mov	r6,zero
  803d60:	01d00534 	movhi	r7,16404
  803d64:	8009883a 	mov	r4,r16
  803d68:	080bed00 	call	80bed0 <__muldf3>
  803d6c:	900d883a 	mov	r6,r18
  803d70:	980f883a 	mov	r7,r19
  803d74:	1009883a 	mov	r4,r2
  803d78:	180b883a 	mov	r5,r3
  803d7c:	080bd000 	call	80bd00 <__gedf2>
  803d80:	002b883a 	mov	r21,zero
  803d84:	0023883a 	mov	r17,zero
  803d88:	1000bf16 	blt	r2,zero,804088 <_dtoa_r+0x1060>
  803d8c:	d9802217 	ldw	r6,136(sp)
  803d90:	ddc00717 	ldw	r23,28(sp)
  803d94:	018c303a 	nor	r6,zero,r6
  803d98:	d9800515 	stw	r6,20(sp)
  803d9c:	a80b883a 	mov	r5,r21
  803da0:	e009883a 	mov	r4,fp
  803da4:	080676c0 	call	80676c <_Bfree>
  803da8:	883e4926 	beq	r17,zero,8036d0 <__alt_data_end+0xff8036d0>
  803dac:	003fad06 	br	803c64 <__alt_data_end+0xff803c64>
  803db0:	d9c01117 	ldw	r7,68(sp)
  803db4:	3801bc26 	beq	r7,zero,8044a8 <_dtoa_r+0x1480>
  803db8:	10810cc4 	addi	r2,r2,1075
  803dbc:	dd400a17 	ldw	r21,40(sp)
  803dc0:	dd000817 	ldw	r20,32(sp)
  803dc4:	003f0a06 	br	8039f0 <__alt_data_end+0xff8039f0>
  803dc8:	00800704 	movi	r2,28
  803dcc:	d9000817 	ldw	r4,32(sp)
  803dd0:	a0a9883a 	add	r20,r20,r2
  803dd4:	b0ad883a 	add	r22,r22,r2
  803dd8:	2089883a 	add	r4,r4,r2
  803ddc:	d9000815 	stw	r4,32(sp)
  803de0:	003f5106 	br	803b28 <__alt_data_end+0xff803b28>
  803de4:	d8c00317 	ldw	r3,12(sp)
  803de8:	b8c1fc0e 	bge	r23,r3,8045dc <_dtoa_r+0x15b4>
  803dec:	0027883a 	mov	r19,zero
  803df0:	b805883a 	mov	r2,r23
  803df4:	003f3e06 	br	803af0 <__alt_data_end+0xff803af0>
  803df8:	880b883a 	mov	r5,r17
  803dfc:	e009883a 	mov	r4,fp
  803e00:	000f883a 	mov	r7,zero
  803e04:	01800284 	movi	r6,10
  803e08:	08067940 	call	806794 <__multadd>
  803e0c:	d9000c17 	ldw	r4,48(sp)
  803e10:	1023883a 	mov	r17,r2
  803e14:	0102040e 	bge	zero,r4,804628 <_dtoa_r+0x1600>
  803e18:	d9000615 	stw	r4,24(sp)
  803e1c:	0500050e 	bge	zero,r20,803e34 <_dtoa_r+0xe0c>
  803e20:	880b883a 	mov	r5,r17
  803e24:	a00d883a 	mov	r6,r20
  803e28:	e009883a 	mov	r4,fp
  803e2c:	0806e440 	call	806e44 <__lshift>
  803e30:	1023883a 	mov	r17,r2
  803e34:	9801241e 	bne	r19,zero,8042c8 <_dtoa_r+0x12a0>
  803e38:	8829883a 	mov	r20,r17
  803e3c:	d9000617 	ldw	r4,24(sp)
  803e40:	dcc00717 	ldw	r19,28(sp)
  803e44:	9480004c 	andi	r18,r18,1
  803e48:	20bfffc4 	addi	r2,r4,-1
  803e4c:	9885883a 	add	r2,r19,r2
  803e50:	d8800415 	stw	r2,16(sp)
  803e54:	dc800615 	stw	r18,24(sp)
  803e58:	a80b883a 	mov	r5,r21
  803e5c:	8009883a 	mov	r4,r16
  803e60:	0802e280 	call	802e28 <quorem>
  803e64:	880b883a 	mov	r5,r17
  803e68:	8009883a 	mov	r4,r16
  803e6c:	102f883a 	mov	r23,r2
  803e70:	0806f8c0 	call	806f8c <__mcmp>
  803e74:	a80b883a 	mov	r5,r21
  803e78:	a00d883a 	mov	r6,r20
  803e7c:	e009883a 	mov	r4,fp
  803e80:	102d883a 	mov	r22,r2
  803e84:	0806fec0 	call	806fec <__mdiff>
  803e88:	1007883a 	mov	r3,r2
  803e8c:	10800317 	ldw	r2,12(r2)
  803e90:	bc800c04 	addi	r18,r23,48
  803e94:	180b883a 	mov	r5,r3
  803e98:	10004e1e 	bne	r2,zero,803fd4 <_dtoa_r+0xfac>
  803e9c:	8009883a 	mov	r4,r16
  803ea0:	d8c01615 	stw	r3,88(sp)
  803ea4:	0806f8c0 	call	806f8c <__mcmp>
  803ea8:	d8c01617 	ldw	r3,88(sp)
  803eac:	e009883a 	mov	r4,fp
  803eb0:	d8801615 	stw	r2,88(sp)
  803eb4:	180b883a 	mov	r5,r3
  803eb8:	080676c0 	call	80676c <_Bfree>
  803ebc:	d8801617 	ldw	r2,88(sp)
  803ec0:	1000041e 	bne	r2,zero,803ed4 <_dtoa_r+0xeac>
  803ec4:	d9800317 	ldw	r6,12(sp)
  803ec8:	3000021e 	bne	r6,zero,803ed4 <_dtoa_r+0xeac>
  803ecc:	d8c00617 	ldw	r3,24(sp)
  803ed0:	18003726 	beq	r3,zero,803fb0 <_dtoa_r+0xf88>
  803ed4:	b0002016 	blt	r22,zero,803f58 <_dtoa_r+0xf30>
  803ed8:	b000041e 	bne	r22,zero,803eec <_dtoa_r+0xec4>
  803edc:	d9000317 	ldw	r4,12(sp)
  803ee0:	2000021e 	bne	r4,zero,803eec <_dtoa_r+0xec4>
  803ee4:	d8c00617 	ldw	r3,24(sp)
  803ee8:	18001b26 	beq	r3,zero,803f58 <_dtoa_r+0xf30>
  803eec:	00810716 	blt	zero,r2,80430c <_dtoa_r+0x12e4>
  803ef0:	d8c00417 	ldw	r3,16(sp)
  803ef4:	9d800044 	addi	r22,r19,1
  803ef8:	9c800005 	stb	r18,0(r19)
  803efc:	b02f883a 	mov	r23,r22
  803f00:	98c10626 	beq	r19,r3,80431c <_dtoa_r+0x12f4>
  803f04:	800b883a 	mov	r5,r16
  803f08:	000f883a 	mov	r7,zero
  803f0c:	01800284 	movi	r6,10
  803f10:	e009883a 	mov	r4,fp
  803f14:	08067940 	call	806794 <__multadd>
  803f18:	1021883a 	mov	r16,r2
  803f1c:	000f883a 	mov	r7,zero
  803f20:	01800284 	movi	r6,10
  803f24:	880b883a 	mov	r5,r17
  803f28:	e009883a 	mov	r4,fp
  803f2c:	8d002526 	beq	r17,r20,803fc4 <_dtoa_r+0xf9c>
  803f30:	08067940 	call	806794 <__multadd>
  803f34:	a00b883a 	mov	r5,r20
  803f38:	000f883a 	mov	r7,zero
  803f3c:	01800284 	movi	r6,10
  803f40:	e009883a 	mov	r4,fp
  803f44:	1023883a 	mov	r17,r2
  803f48:	08067940 	call	806794 <__multadd>
  803f4c:	1029883a 	mov	r20,r2
  803f50:	b027883a 	mov	r19,r22
  803f54:	003fc006 	br	803e58 <__alt_data_end+0xff803e58>
  803f58:	9011883a 	mov	r8,r18
  803f5c:	00800e0e 	bge	zero,r2,803f98 <_dtoa_r+0xf70>
  803f60:	800b883a 	mov	r5,r16
  803f64:	01800044 	movi	r6,1
  803f68:	e009883a 	mov	r4,fp
  803f6c:	da001715 	stw	r8,92(sp)
  803f70:	0806e440 	call	806e44 <__lshift>
  803f74:	a80b883a 	mov	r5,r21
  803f78:	1009883a 	mov	r4,r2
  803f7c:	1021883a 	mov	r16,r2
  803f80:	0806f8c0 	call	806f8c <__mcmp>
  803f84:	da001717 	ldw	r8,92(sp)
  803f88:	0081960e 	bge	zero,r2,8045e4 <_dtoa_r+0x15bc>
  803f8c:	00800e44 	movi	r2,57
  803f90:	40817026 	beq	r8,r2,804554 <_dtoa_r+0x152c>
  803f94:	ba000c44 	addi	r8,r23,49
  803f98:	8825883a 	mov	r18,r17
  803f9c:	9dc00044 	addi	r23,r19,1
  803fa0:	9a000005 	stb	r8,0(r19)
  803fa4:	a023883a 	mov	r17,r20
  803fa8:	dc000915 	stw	r16,36(sp)
  803fac:	003f2406 	br	803c40 <__alt_data_end+0xff803c40>
  803fb0:	00800e44 	movi	r2,57
  803fb4:	9011883a 	mov	r8,r18
  803fb8:	90816626 	beq	r18,r2,804554 <_dtoa_r+0x152c>
  803fbc:	05bff516 	blt	zero,r22,803f94 <__alt_data_end+0xff803f94>
  803fc0:	003ff506 	br	803f98 <__alt_data_end+0xff803f98>
  803fc4:	08067940 	call	806794 <__multadd>
  803fc8:	1023883a 	mov	r17,r2
  803fcc:	1029883a 	mov	r20,r2
  803fd0:	003fdf06 	br	803f50 <__alt_data_end+0xff803f50>
  803fd4:	e009883a 	mov	r4,fp
  803fd8:	080676c0 	call	80676c <_Bfree>
  803fdc:	00800044 	movi	r2,1
  803fe0:	003fbc06 	br	803ed4 <__alt_data_end+0xff803ed4>
  803fe4:	a80b883a 	mov	r5,r21
  803fe8:	8009883a 	mov	r4,r16
  803fec:	0806f8c0 	call	806f8c <__mcmp>
  803ff0:	103edb0e 	bge	r2,zero,803b60 <__alt_data_end+0xff803b60>
  803ff4:	800b883a 	mov	r5,r16
  803ff8:	000f883a 	mov	r7,zero
  803ffc:	01800284 	movi	r6,10
  804000:	e009883a 	mov	r4,fp
  804004:	08067940 	call	806794 <__multadd>
  804008:	1021883a 	mov	r16,r2
  80400c:	d8800517 	ldw	r2,20(sp)
  804010:	d8c00b17 	ldw	r3,44(sp)
  804014:	10bfffc4 	addi	r2,r2,-1
  804018:	d8800515 	stw	r2,20(sp)
  80401c:	183f761e 	bne	r3,zero,803df8 <__alt_data_end+0xff803df8>
  804020:	d9000c17 	ldw	r4,48(sp)
  804024:	0101730e 	bge	zero,r4,8045f4 <_dtoa_r+0x15cc>
  804028:	d9000615 	stw	r4,24(sp)
  80402c:	003ed006 	br	803b70 <__alt_data_end+0xff803b70>
  804030:	00800084 	movi	r2,2
  804034:	3081861e 	bne	r6,r2,804650 <_dtoa_r+0x1628>
  804038:	d8000b15 	stw	zero,44(sp)
  80403c:	003f3c06 	br	803d30 <__alt_data_end+0xff803d30>
  804040:	dc000917 	ldw	r16,36(sp)
  804044:	003e9206 	br	803a90 <__alt_data_end+0xff803a90>
  804048:	d9c00317 	ldw	r7,12(sp)
  80404c:	00800084 	movi	r2,2
  804050:	11fec50e 	bge	r2,r7,803b68 <__alt_data_end+0xff803b68>
  804054:	d9000617 	ldw	r4,24(sp)
  804058:	20013c1e 	bne	r4,zero,80454c <_dtoa_r+0x1524>
  80405c:	a80b883a 	mov	r5,r21
  804060:	000f883a 	mov	r7,zero
  804064:	01800144 	movi	r6,5
  804068:	e009883a 	mov	r4,fp
  80406c:	08067940 	call	806794 <__multadd>
  804070:	100b883a 	mov	r5,r2
  804074:	8009883a 	mov	r4,r16
  804078:	102b883a 	mov	r21,r2
  80407c:	0806f8c0 	call	806f8c <__mcmp>
  804080:	dc000915 	stw	r16,36(sp)
  804084:	00bf410e 	bge	zero,r2,803d8c <__alt_data_end+0xff803d8c>
  804088:	d9c00717 	ldw	r7,28(sp)
  80408c:	00800c44 	movi	r2,49
  804090:	38800005 	stb	r2,0(r7)
  804094:	d8800517 	ldw	r2,20(sp)
  804098:	3dc00044 	addi	r23,r7,1
  80409c:	10800044 	addi	r2,r2,1
  8040a0:	d8800515 	stw	r2,20(sp)
  8040a4:	003f3d06 	br	803d9c <__alt_data_end+0xff803d9c>
  8040a8:	d9800517 	ldw	r6,20(sp)
  8040ac:	d9c00717 	ldw	r7,28(sp)
  8040b0:	00800c44 	movi	r2,49
  8040b4:	31800044 	addi	r6,r6,1
  8040b8:	d9800515 	stw	r6,20(sp)
  8040bc:	38800005 	stb	r2,0(r7)
  8040c0:	003edf06 	br	803c40 <__alt_data_end+0xff803c40>
  8040c4:	d8000b15 	stw	zero,44(sp)
  8040c8:	003c9f06 	br	803348 <__alt_data_end+0xff803348>
  8040cc:	903e7e1e 	bne	r18,zero,803ac8 <__alt_data_end+0xff803ac8>
  8040d0:	00800434 	movhi	r2,16
  8040d4:	10bfffc4 	addi	r2,r2,-1
  8040d8:	9884703a 	and	r2,r19,r2
  8040dc:	1000ea1e 	bne	r2,zero,804488 <_dtoa_r+0x1460>
  8040e0:	9cdffc2c 	andhi	r19,r19,32752
  8040e4:	9800e826 	beq	r19,zero,804488 <_dtoa_r+0x1460>
  8040e8:	d9c00817 	ldw	r7,32(sp)
  8040ec:	b5800044 	addi	r22,r22,1
  8040f0:	04c00044 	movi	r19,1
  8040f4:	39c00044 	addi	r7,r7,1
  8040f8:	d9c00815 	stw	r7,32(sp)
  8040fc:	d8800d17 	ldw	r2,52(sp)
  804100:	103e721e 	bne	r2,zero,803acc <__alt_data_end+0xff803acc>
  804104:	00800044 	movi	r2,1
  804108:	003e7906 	br	803af0 <__alt_data_end+0xff803af0>
  80410c:	8009883a 	mov	r4,r16
  804110:	080cf640 	call	80cf64 <__floatsidf>
  804114:	d9800f17 	ldw	r6,60(sp)
  804118:	d9c01017 	ldw	r7,64(sp)
  80411c:	1009883a 	mov	r4,r2
  804120:	180b883a 	mov	r5,r3
  804124:	080bed00 	call	80bed0 <__muldf3>
  804128:	000d883a 	mov	r6,zero
  80412c:	01d00734 	movhi	r7,16412
  804130:	1009883a 	mov	r4,r2
  804134:	180b883a 	mov	r5,r3
  804138:	080aae40 	call	80aae4 <__adddf3>
  80413c:	047f3034 	movhi	r17,64704
  804140:	1021883a 	mov	r16,r2
  804144:	1c63883a 	add	r17,r3,r17
  804148:	d9000f17 	ldw	r4,60(sp)
  80414c:	d9401017 	ldw	r5,64(sp)
  804150:	000d883a 	mov	r6,zero
  804154:	01d00534 	movhi	r7,16404
  804158:	080c5e80 	call	80c5e8 <__subdf3>
  80415c:	800d883a 	mov	r6,r16
  804160:	880f883a 	mov	r7,r17
  804164:	1009883a 	mov	r4,r2
  804168:	180b883a 	mov	r5,r3
  80416c:	102b883a 	mov	r21,r2
  804170:	1829883a 	mov	r20,r3
  804174:	080bd000 	call	80bd00 <__gedf2>
  804178:	00806c16 	blt	zero,r2,80432c <_dtoa_r+0x1304>
  80417c:	89e0003c 	xorhi	r7,r17,32768
  804180:	800d883a 	mov	r6,r16
  804184:	a809883a 	mov	r4,r21
  804188:	a00b883a 	mov	r5,r20
  80418c:	080bddc0 	call	80bddc <__ledf2>
  804190:	103d7e0e 	bge	r2,zero,80378c <__alt_data_end+0xff80378c>
  804194:	002b883a 	mov	r21,zero
  804198:	0023883a 	mov	r17,zero
  80419c:	003efb06 	br	803d8c <__alt_data_end+0xff803d8c>
  8041a0:	d8800717 	ldw	r2,28(sp)
  8041a4:	003bd006 	br	8030e8 <__alt_data_end+0xff8030e8>
  8041a8:	d9000a17 	ldw	r4,40(sp)
  8041ac:	d9800d17 	ldw	r6,52(sp)
  8041b0:	dd400a15 	stw	r21,40(sp)
  8041b4:	a905c83a 	sub	r2,r21,r4
  8041b8:	308d883a 	add	r6,r6,r2
  8041bc:	d9800d15 	stw	r6,52(sp)
  8041c0:	002b883a 	mov	r21,zero
  8041c4:	003e0606 	br	8039e0 <__alt_data_end+0xff8039e0>
  8041c8:	9023883a 	mov	r17,r18
  8041cc:	9829883a 	mov	r20,r19
  8041d0:	04000084 	movi	r16,2
  8041d4:	003c9206 	br	803420 <__alt_data_end+0xff803420>
  8041d8:	04000044 	movi	r16,1
  8041dc:	dc000c15 	stw	r16,48(sp)
  8041e0:	dc000615 	stw	r16,24(sp)
  8041e4:	dc002215 	stw	r16,136(sp)
  8041e8:	e0001115 	stw	zero,68(fp)
  8041ec:	000b883a 	mov	r5,zero
  8041f0:	003c6906 	br	803398 <__alt_data_end+0xff803398>
  8041f4:	3021883a 	mov	r16,r6
  8041f8:	003ffb06 	br	8041e8 <__alt_data_end+0xff8041e8>
  8041fc:	1000021e 	bne	r2,zero,804208 <_dtoa_r+0x11e0>
  804200:	4200004c 	andi	r8,r8,1
  804204:	403e7d1e 	bne	r8,zero,803bfc <__alt_data_end+0xff803bfc>
  804208:	01000c04 	movi	r4,48
  80420c:	00000106 	br	804214 <_dtoa_r+0x11ec>
  804210:	102f883a 	mov	r23,r2
  804214:	b8bfffc4 	addi	r2,r23,-1
  804218:	10c00007 	ldb	r3,0(r2)
  80421c:	193ffc26 	beq	r3,r4,804210 <__alt_data_end+0xff804210>
  804220:	003e8706 	br	803c40 <__alt_data_end+0xff803c40>
  804224:	d8800517 	ldw	r2,20(sp)
  804228:	00a3c83a 	sub	r17,zero,r2
  80422c:	8800a426 	beq	r17,zero,8044c0 <_dtoa_r+0x1498>
  804230:	888003cc 	andi	r2,r17,15
  804234:	100490fa 	slli	r2,r2,3
  804238:	00c02074 	movhi	r3,129
  80423c:	18fe8f04 	addi	r3,r3,-1476
  804240:	1885883a 	add	r2,r3,r2
  804244:	11800017 	ldw	r6,0(r2)
  804248:	11c00117 	ldw	r7,4(r2)
  80424c:	9009883a 	mov	r4,r18
  804250:	980b883a 	mov	r5,r19
  804254:	8823d13a 	srai	r17,r17,4
  804258:	080bed00 	call	80bed0 <__muldf3>
  80425c:	d8800f15 	stw	r2,60(sp)
  804260:	d8c01015 	stw	r3,64(sp)
  804264:	8800e826 	beq	r17,zero,804608 <_dtoa_r+0x15e0>
  804268:	05002074 	movhi	r20,129
  80426c:	a53e8504 	addi	r20,r20,-1516
  804270:	04000084 	movi	r16,2
  804274:	8980004c 	andi	r6,r17,1
  804278:	1009883a 	mov	r4,r2
  80427c:	8823d07a 	srai	r17,r17,1
  804280:	180b883a 	mov	r5,r3
  804284:	30000426 	beq	r6,zero,804298 <_dtoa_r+0x1270>
  804288:	a1800017 	ldw	r6,0(r20)
  80428c:	a1c00117 	ldw	r7,4(r20)
  804290:	84000044 	addi	r16,r16,1
  804294:	080bed00 	call	80bed0 <__muldf3>
  804298:	a5000204 	addi	r20,r20,8
  80429c:	883ff51e 	bne	r17,zero,804274 <__alt_data_end+0xff804274>
  8042a0:	d8800f15 	stw	r2,60(sp)
  8042a4:	d8c01015 	stw	r3,64(sp)
  8042a8:	003c7606 	br	803484 <__alt_data_end+0xff803484>
  8042ac:	00c00c04 	movi	r3,48
  8042b0:	10c00005 	stb	r3,0(r2)
  8042b4:	d8c00517 	ldw	r3,20(sp)
  8042b8:	bd3fffc3 	ldbu	r20,-1(r23)
  8042bc:	18c00044 	addi	r3,r3,1
  8042c0:	d8c00515 	stw	r3,20(sp)
  8042c4:	003db906 	br	8039ac <__alt_data_end+0xff8039ac>
  8042c8:	89400117 	ldw	r5,4(r17)
  8042cc:	e009883a 	mov	r4,fp
  8042d0:	08066c40 	call	8066c4 <_Balloc>
  8042d4:	89800417 	ldw	r6,16(r17)
  8042d8:	89400304 	addi	r5,r17,12
  8042dc:	11000304 	addi	r4,r2,12
  8042e0:	31800084 	addi	r6,r6,2
  8042e4:	318d883a 	add	r6,r6,r6
  8042e8:	318d883a 	add	r6,r6,r6
  8042ec:	1027883a 	mov	r19,r2
  8042f0:	08062f80 	call	8062f8 <memcpy>
  8042f4:	01800044 	movi	r6,1
  8042f8:	980b883a 	mov	r5,r19
  8042fc:	e009883a 	mov	r4,fp
  804300:	0806e440 	call	806e44 <__lshift>
  804304:	1029883a 	mov	r20,r2
  804308:	003ecc06 	br	803e3c <__alt_data_end+0xff803e3c>
  80430c:	00800e44 	movi	r2,57
  804310:	90809026 	beq	r18,r2,804554 <_dtoa_r+0x152c>
  804314:	92000044 	addi	r8,r18,1
  804318:	003f1f06 	br	803f98 <__alt_data_end+0xff803f98>
  80431c:	9011883a 	mov	r8,r18
  804320:	8825883a 	mov	r18,r17
  804324:	a023883a 	mov	r17,r20
  804328:	003e2906 	br	803bd0 <__alt_data_end+0xff803bd0>
  80432c:	002b883a 	mov	r21,zero
  804330:	0023883a 	mov	r17,zero
  804334:	003f5406 	br	804088 <__alt_data_end+0xff804088>
  804338:	61bfffc4 	addi	r6,r12,-1
  80433c:	300490fa 	slli	r2,r6,3
  804340:	00c02074 	movhi	r3,129
  804344:	18fe8f04 	addi	r3,r3,-1476
  804348:	1885883a 	add	r2,r3,r2
  80434c:	11000017 	ldw	r4,0(r2)
  804350:	11400117 	ldw	r5,4(r2)
  804354:	d8800717 	ldw	r2,28(sp)
  804358:	880f883a 	mov	r7,r17
  80435c:	d9801215 	stw	r6,72(sp)
  804360:	800d883a 	mov	r6,r16
  804364:	db001615 	stw	r12,88(sp)
  804368:	15c00044 	addi	r23,r2,1
  80436c:	080bed00 	call	80bed0 <__muldf3>
  804370:	d9401017 	ldw	r5,64(sp)
  804374:	d9000f17 	ldw	r4,60(sp)
  804378:	d8c01515 	stw	r3,84(sp)
  80437c:	d8801415 	stw	r2,80(sp)
  804380:	080cee40 	call	80cee4 <__fixdfsi>
  804384:	1009883a 	mov	r4,r2
  804388:	1021883a 	mov	r16,r2
  80438c:	080cf640 	call	80cf64 <__floatsidf>
  804390:	d9000f17 	ldw	r4,60(sp)
  804394:	d9401017 	ldw	r5,64(sp)
  804398:	100d883a 	mov	r6,r2
  80439c:	180f883a 	mov	r7,r3
  8043a0:	080c5e80 	call	80c5e8 <__subdf3>
  8043a4:	1829883a 	mov	r20,r3
  8043a8:	d8c00717 	ldw	r3,28(sp)
  8043ac:	84000c04 	addi	r16,r16,48
  8043b0:	1023883a 	mov	r17,r2
  8043b4:	1c000005 	stb	r16,0(r3)
  8043b8:	db001617 	ldw	r12,88(sp)
  8043bc:	00800044 	movi	r2,1
  8043c0:	60802226 	beq	r12,r2,80444c <_dtoa_r+0x1424>
  8043c4:	d9c00717 	ldw	r7,28(sp)
  8043c8:	8805883a 	mov	r2,r17
  8043cc:	b82b883a 	mov	r21,r23
  8043d0:	3b19883a 	add	r12,r7,r12
  8043d4:	6023883a 	mov	r17,r12
  8043d8:	a007883a 	mov	r3,r20
  8043dc:	dc800f15 	stw	r18,60(sp)
  8043e0:	000d883a 	mov	r6,zero
  8043e4:	01d00934 	movhi	r7,16420
  8043e8:	1009883a 	mov	r4,r2
  8043ec:	180b883a 	mov	r5,r3
  8043f0:	080bed00 	call	80bed0 <__muldf3>
  8043f4:	180b883a 	mov	r5,r3
  8043f8:	1009883a 	mov	r4,r2
  8043fc:	1829883a 	mov	r20,r3
  804400:	1025883a 	mov	r18,r2
  804404:	080cee40 	call	80cee4 <__fixdfsi>
  804408:	1009883a 	mov	r4,r2
  80440c:	1021883a 	mov	r16,r2
  804410:	080cf640 	call	80cf64 <__floatsidf>
  804414:	100d883a 	mov	r6,r2
  804418:	180f883a 	mov	r7,r3
  80441c:	9009883a 	mov	r4,r18
  804420:	a00b883a 	mov	r5,r20
  804424:	84000c04 	addi	r16,r16,48
  804428:	080c5e80 	call	80c5e8 <__subdf3>
  80442c:	ad400044 	addi	r21,r21,1
  804430:	ac3fffc5 	stb	r16,-1(r21)
  804434:	ac7fea1e 	bne	r21,r17,8043e0 <__alt_data_end+0xff8043e0>
  804438:	1023883a 	mov	r17,r2
  80443c:	d8801217 	ldw	r2,72(sp)
  804440:	dc800f17 	ldw	r18,60(sp)
  804444:	1829883a 	mov	r20,r3
  804448:	b8af883a 	add	r23,r23,r2
  80444c:	d9001417 	ldw	r4,80(sp)
  804450:	d9401517 	ldw	r5,84(sp)
  804454:	000d883a 	mov	r6,zero
  804458:	01cff834 	movhi	r7,16352
  80445c:	080aae40 	call	80aae4 <__adddf3>
  804460:	880d883a 	mov	r6,r17
  804464:	a00f883a 	mov	r7,r20
  804468:	1009883a 	mov	r4,r2
  80446c:	180b883a 	mov	r5,r3
  804470:	080bddc0 	call	80bddc <__ledf2>
  804474:	10003e0e 	bge	r2,zero,804570 <_dtoa_r+0x1548>
  804478:	d9001317 	ldw	r4,76(sp)
  80447c:	bd3fffc3 	ldbu	r20,-1(r23)
  804480:	d9000515 	stw	r4,20(sp)
  804484:	003d3b06 	br	803974 <__alt_data_end+0xff803974>
  804488:	0027883a 	mov	r19,zero
  80448c:	003f1b06 	br	8040fc <__alt_data_end+0xff8040fc>
  804490:	d8800817 	ldw	r2,32(sp)
  804494:	11e9c83a 	sub	r20,r2,r7
  804498:	0005883a 	mov	r2,zero
  80449c:	003d5406 	br	8039f0 <__alt_data_end+0xff8039f0>
  8044a0:	00800044 	movi	r2,1
  8044a4:	003dc706 	br	803bc4 <__alt_data_end+0xff803bc4>
  8044a8:	d8c00217 	ldw	r3,8(sp)
  8044ac:	00800d84 	movi	r2,54
  8044b0:	dd400a17 	ldw	r21,40(sp)
  8044b4:	10c5c83a 	sub	r2,r2,r3
  8044b8:	dd000817 	ldw	r20,32(sp)
  8044bc:	003d4c06 	br	8039f0 <__alt_data_end+0xff8039f0>
  8044c0:	dc800f15 	stw	r18,60(sp)
  8044c4:	dcc01015 	stw	r19,64(sp)
  8044c8:	04000084 	movi	r16,2
  8044cc:	003bed06 	br	803484 <__alt_data_end+0xff803484>
  8044d0:	d9000617 	ldw	r4,24(sp)
  8044d4:	203f0d26 	beq	r4,zero,80410c <__alt_data_end+0xff80410c>
  8044d8:	d9800c17 	ldw	r6,48(sp)
  8044dc:	01bcab0e 	bge	zero,r6,80378c <__alt_data_end+0xff80378c>
  8044e0:	d9401017 	ldw	r5,64(sp)
  8044e4:	d9000f17 	ldw	r4,60(sp)
  8044e8:	000d883a 	mov	r6,zero
  8044ec:	01d00934 	movhi	r7,16420
  8044f0:	080bed00 	call	80bed0 <__muldf3>
  8044f4:	81000044 	addi	r4,r16,1
  8044f8:	d8800f15 	stw	r2,60(sp)
  8044fc:	d8c01015 	stw	r3,64(sp)
  804500:	080cf640 	call	80cf64 <__floatsidf>
  804504:	d9800f17 	ldw	r6,60(sp)
  804508:	d9c01017 	ldw	r7,64(sp)
  80450c:	1009883a 	mov	r4,r2
  804510:	180b883a 	mov	r5,r3
  804514:	080bed00 	call	80bed0 <__muldf3>
  804518:	01d00734 	movhi	r7,16412
  80451c:	000d883a 	mov	r6,zero
  804520:	1009883a 	mov	r4,r2
  804524:	180b883a 	mov	r5,r3
  804528:	080aae40 	call	80aae4 <__adddf3>
  80452c:	d9c00517 	ldw	r7,20(sp)
  804530:	047f3034 	movhi	r17,64704
  804534:	1021883a 	mov	r16,r2
  804538:	39ffffc4 	addi	r7,r7,-1
  80453c:	d9c01315 	stw	r7,76(sp)
  804540:	1c63883a 	add	r17,r3,r17
  804544:	db000c17 	ldw	r12,48(sp)
  804548:	003bea06 	br	8034f4 <__alt_data_end+0xff8034f4>
  80454c:	dc000915 	stw	r16,36(sp)
  804550:	003e0e06 	br	803d8c <__alt_data_end+0xff803d8c>
  804554:	01000e44 	movi	r4,57
  804558:	8825883a 	mov	r18,r17
  80455c:	9dc00044 	addi	r23,r19,1
  804560:	99000005 	stb	r4,0(r19)
  804564:	a023883a 	mov	r17,r20
  804568:	dc000915 	stw	r16,36(sp)
  80456c:	003da406 	br	803c00 <__alt_data_end+0xff803c00>
  804570:	d9801417 	ldw	r6,80(sp)
  804574:	d9c01517 	ldw	r7,84(sp)
  804578:	0009883a 	mov	r4,zero
  80457c:	014ff834 	movhi	r5,16352
  804580:	080c5e80 	call	80c5e8 <__subdf3>
  804584:	880d883a 	mov	r6,r17
  804588:	a00f883a 	mov	r7,r20
  80458c:	1009883a 	mov	r4,r2
  804590:	180b883a 	mov	r5,r3
  804594:	080bd000 	call	80bd00 <__gedf2>
  804598:	00bc7c0e 	bge	zero,r2,80378c <__alt_data_end+0xff80378c>
  80459c:	01000c04 	movi	r4,48
  8045a0:	00000106 	br	8045a8 <_dtoa_r+0x1580>
  8045a4:	102f883a 	mov	r23,r2
  8045a8:	b8bfffc4 	addi	r2,r23,-1
  8045ac:	10c00007 	ldb	r3,0(r2)
  8045b0:	193ffc26 	beq	r3,r4,8045a4 <__alt_data_end+0xff8045a4>
  8045b4:	d9801317 	ldw	r6,76(sp)
  8045b8:	d9800515 	stw	r6,20(sp)
  8045bc:	003c4406 	br	8036d0 <__alt_data_end+0xff8036d0>
  8045c0:	d9801317 	ldw	r6,76(sp)
  8045c4:	d9800515 	stw	r6,20(sp)
  8045c8:	003cea06 	br	803974 <__alt_data_end+0xff803974>
  8045cc:	dd800f17 	ldw	r22,60(sp)
  8045d0:	dcc01017 	ldw	r19,64(sp)
  8045d4:	dc801217 	ldw	r18,72(sp)
  8045d8:	003c6c06 	br	80378c <__alt_data_end+0xff80378c>
  8045dc:	903e031e 	bne	r18,zero,803dec <__alt_data_end+0xff803dec>
  8045e0:	003ebb06 	br	8040d0 <__alt_data_end+0xff8040d0>
  8045e4:	103e6c1e 	bne	r2,zero,803f98 <__alt_data_end+0xff803f98>
  8045e8:	4080004c 	andi	r2,r8,1
  8045ec:	103e6a26 	beq	r2,zero,803f98 <__alt_data_end+0xff803f98>
  8045f0:	003e6606 	br	803f8c <__alt_data_end+0xff803f8c>
  8045f4:	d8c00317 	ldw	r3,12(sp)
  8045f8:	00800084 	movi	r2,2
  8045fc:	10c02916 	blt	r2,r3,8046a4 <_dtoa_r+0x167c>
  804600:	d9000c17 	ldw	r4,48(sp)
  804604:	003e8806 	br	804028 <__alt_data_end+0xff804028>
  804608:	04000084 	movi	r16,2
  80460c:	003b9d06 	br	803484 <__alt_data_end+0xff803484>
  804610:	d9001317 	ldw	r4,76(sp)
  804614:	d9000515 	stw	r4,20(sp)
  804618:	003cd606 	br	803974 <__alt_data_end+0xff803974>
  80461c:	d8801317 	ldw	r2,76(sp)
  804620:	d8800515 	stw	r2,20(sp)
  804624:	003c2a06 	br	8036d0 <__alt_data_end+0xff8036d0>
  804628:	d9800317 	ldw	r6,12(sp)
  80462c:	00800084 	movi	r2,2
  804630:	11801516 	blt	r2,r6,804688 <_dtoa_r+0x1660>
  804634:	d9c00c17 	ldw	r7,48(sp)
  804638:	d9c00615 	stw	r7,24(sp)
  80463c:	003df706 	br	803e1c <__alt_data_end+0xff803e1c>
  804640:	193d3926 	beq	r3,r4,803b28 <__alt_data_end+0xff803b28>
  804644:	00c00f04 	movi	r3,60
  804648:	1885c83a 	sub	r2,r3,r2
  80464c:	003ddf06 	br	803dcc <__alt_data_end+0xff803dcc>
  804650:	e009883a 	mov	r4,fp
  804654:	e0001115 	stw	zero,68(fp)
  804658:	000b883a 	mov	r5,zero
  80465c:	08066c40 	call	8066c4 <_Balloc>
  804660:	d8800715 	stw	r2,28(sp)
  804664:	d8c00717 	ldw	r3,28(sp)
  804668:	00bfffc4 	movi	r2,-1
  80466c:	01000044 	movi	r4,1
  804670:	d8800c15 	stw	r2,48(sp)
  804674:	e0c01015 	stw	r3,64(fp)
  804678:	d9000b15 	stw	r4,44(sp)
  80467c:	d8800615 	stw	r2,24(sp)
  804680:	d8002215 	stw	zero,136(sp)
  804684:	003c4106 	br	80378c <__alt_data_end+0xff80378c>
  804688:	d8c00c17 	ldw	r3,48(sp)
  80468c:	d8c00615 	stw	r3,24(sp)
  804690:	003e7006 	br	804054 <__alt_data_end+0xff804054>
  804694:	04400044 	movi	r17,1
  804698:	003b2006 	br	80331c <__alt_data_end+0xff80331c>
  80469c:	000b883a 	mov	r5,zero
  8046a0:	003b3d06 	br	803398 <__alt_data_end+0xff803398>
  8046a4:	d8800c17 	ldw	r2,48(sp)
  8046a8:	d8800615 	stw	r2,24(sp)
  8046ac:	003e6906 	br	804054 <__alt_data_end+0xff804054>

008046b0 <__sflush_r>:
  8046b0:	2880030b 	ldhu	r2,12(r5)
  8046b4:	defffb04 	addi	sp,sp,-20
  8046b8:	dcc00315 	stw	r19,12(sp)
  8046bc:	dc400115 	stw	r17,4(sp)
  8046c0:	dfc00415 	stw	ra,16(sp)
  8046c4:	dc800215 	stw	r18,8(sp)
  8046c8:	dc000015 	stw	r16,0(sp)
  8046cc:	10c0020c 	andi	r3,r2,8
  8046d0:	2823883a 	mov	r17,r5
  8046d4:	2027883a 	mov	r19,r4
  8046d8:	1800311e 	bne	r3,zero,8047a0 <__sflush_r+0xf0>
  8046dc:	28c00117 	ldw	r3,4(r5)
  8046e0:	10820014 	ori	r2,r2,2048
  8046e4:	2880030d 	sth	r2,12(r5)
  8046e8:	00c04b0e 	bge	zero,r3,804818 <__sflush_r+0x168>
  8046ec:	8a000a17 	ldw	r8,40(r17)
  8046f0:	40002326 	beq	r8,zero,804780 <__sflush_r+0xd0>
  8046f4:	9c000017 	ldw	r16,0(r19)
  8046f8:	10c4000c 	andi	r3,r2,4096
  8046fc:	98000015 	stw	zero,0(r19)
  804700:	18004826 	beq	r3,zero,804824 <__sflush_r+0x174>
  804704:	89801417 	ldw	r6,80(r17)
  804708:	10c0010c 	andi	r3,r2,4
  80470c:	18000626 	beq	r3,zero,804728 <__sflush_r+0x78>
  804710:	88c00117 	ldw	r3,4(r17)
  804714:	88800c17 	ldw	r2,48(r17)
  804718:	30cdc83a 	sub	r6,r6,r3
  80471c:	10000226 	beq	r2,zero,804728 <__sflush_r+0x78>
  804720:	88800f17 	ldw	r2,60(r17)
  804724:	308dc83a 	sub	r6,r6,r2
  804728:	89400717 	ldw	r5,28(r17)
  80472c:	000f883a 	mov	r7,zero
  804730:	9809883a 	mov	r4,r19
  804734:	403ee83a 	callr	r8
  804738:	00ffffc4 	movi	r3,-1
  80473c:	10c04426 	beq	r2,r3,804850 <__sflush_r+0x1a0>
  804740:	88c0030b 	ldhu	r3,12(r17)
  804744:	89000417 	ldw	r4,16(r17)
  804748:	88000115 	stw	zero,4(r17)
  80474c:	197dffcc 	andi	r5,r3,63487
  804750:	8940030d 	sth	r5,12(r17)
  804754:	89000015 	stw	r4,0(r17)
  804758:	18c4000c 	andi	r3,r3,4096
  80475c:	18002c1e 	bne	r3,zero,804810 <__sflush_r+0x160>
  804760:	89400c17 	ldw	r5,48(r17)
  804764:	9c000015 	stw	r16,0(r19)
  804768:	28000526 	beq	r5,zero,804780 <__sflush_r+0xd0>
  80476c:	88801004 	addi	r2,r17,64
  804770:	28800226 	beq	r5,r2,80477c <__sflush_r+0xcc>
  804774:	9809883a 	mov	r4,r19
  804778:	0804e1c0 	call	804e1c <_free_r>
  80477c:	88000c15 	stw	zero,48(r17)
  804780:	0005883a 	mov	r2,zero
  804784:	dfc00417 	ldw	ra,16(sp)
  804788:	dcc00317 	ldw	r19,12(sp)
  80478c:	dc800217 	ldw	r18,8(sp)
  804790:	dc400117 	ldw	r17,4(sp)
  804794:	dc000017 	ldw	r16,0(sp)
  804798:	dec00504 	addi	sp,sp,20
  80479c:	f800283a 	ret
  8047a0:	2c800417 	ldw	r18,16(r5)
  8047a4:	903ff626 	beq	r18,zero,804780 <__alt_data_end+0xff804780>
  8047a8:	2c000017 	ldw	r16,0(r5)
  8047ac:	108000cc 	andi	r2,r2,3
  8047b0:	2c800015 	stw	r18,0(r5)
  8047b4:	84a1c83a 	sub	r16,r16,r18
  8047b8:	1000131e 	bne	r2,zero,804808 <__sflush_r+0x158>
  8047bc:	28800517 	ldw	r2,20(r5)
  8047c0:	88800215 	stw	r2,8(r17)
  8047c4:	04000316 	blt	zero,r16,8047d4 <__sflush_r+0x124>
  8047c8:	003fed06 	br	804780 <__alt_data_end+0xff804780>
  8047cc:	90a5883a 	add	r18,r18,r2
  8047d0:	043feb0e 	bge	zero,r16,804780 <__alt_data_end+0xff804780>
  8047d4:	88800917 	ldw	r2,36(r17)
  8047d8:	89400717 	ldw	r5,28(r17)
  8047dc:	800f883a 	mov	r7,r16
  8047e0:	900d883a 	mov	r6,r18
  8047e4:	9809883a 	mov	r4,r19
  8047e8:	103ee83a 	callr	r2
  8047ec:	80a1c83a 	sub	r16,r16,r2
  8047f0:	00bff616 	blt	zero,r2,8047cc <__alt_data_end+0xff8047cc>
  8047f4:	88c0030b 	ldhu	r3,12(r17)
  8047f8:	00bfffc4 	movi	r2,-1
  8047fc:	18c01014 	ori	r3,r3,64
  804800:	88c0030d 	sth	r3,12(r17)
  804804:	003fdf06 	br	804784 <__alt_data_end+0xff804784>
  804808:	0005883a 	mov	r2,zero
  80480c:	003fec06 	br	8047c0 <__alt_data_end+0xff8047c0>
  804810:	88801415 	stw	r2,80(r17)
  804814:	003fd206 	br	804760 <__alt_data_end+0xff804760>
  804818:	28c00f17 	ldw	r3,60(r5)
  80481c:	00ffb316 	blt	zero,r3,8046ec <__alt_data_end+0xff8046ec>
  804820:	003fd706 	br	804780 <__alt_data_end+0xff804780>
  804824:	89400717 	ldw	r5,28(r17)
  804828:	000d883a 	mov	r6,zero
  80482c:	01c00044 	movi	r7,1
  804830:	9809883a 	mov	r4,r19
  804834:	403ee83a 	callr	r8
  804838:	100d883a 	mov	r6,r2
  80483c:	00bfffc4 	movi	r2,-1
  804840:	30801426 	beq	r6,r2,804894 <__sflush_r+0x1e4>
  804844:	8880030b 	ldhu	r2,12(r17)
  804848:	8a000a17 	ldw	r8,40(r17)
  80484c:	003fae06 	br	804708 <__alt_data_end+0xff804708>
  804850:	98c00017 	ldw	r3,0(r19)
  804854:	183fba26 	beq	r3,zero,804740 <__alt_data_end+0xff804740>
  804858:	01000744 	movi	r4,29
  80485c:	19000626 	beq	r3,r4,804878 <__sflush_r+0x1c8>
  804860:	01000584 	movi	r4,22
  804864:	19000426 	beq	r3,r4,804878 <__sflush_r+0x1c8>
  804868:	88c0030b 	ldhu	r3,12(r17)
  80486c:	18c01014 	ori	r3,r3,64
  804870:	88c0030d 	sth	r3,12(r17)
  804874:	003fc306 	br	804784 <__alt_data_end+0xff804784>
  804878:	8880030b 	ldhu	r2,12(r17)
  80487c:	88c00417 	ldw	r3,16(r17)
  804880:	88000115 	stw	zero,4(r17)
  804884:	10bdffcc 	andi	r2,r2,63487
  804888:	8880030d 	sth	r2,12(r17)
  80488c:	88c00015 	stw	r3,0(r17)
  804890:	003fb306 	br	804760 <__alt_data_end+0xff804760>
  804894:	98800017 	ldw	r2,0(r19)
  804898:	103fea26 	beq	r2,zero,804844 <__alt_data_end+0xff804844>
  80489c:	00c00744 	movi	r3,29
  8048a0:	10c00226 	beq	r2,r3,8048ac <__sflush_r+0x1fc>
  8048a4:	00c00584 	movi	r3,22
  8048a8:	10c0031e 	bne	r2,r3,8048b8 <__sflush_r+0x208>
  8048ac:	9c000015 	stw	r16,0(r19)
  8048b0:	0005883a 	mov	r2,zero
  8048b4:	003fb306 	br	804784 <__alt_data_end+0xff804784>
  8048b8:	88c0030b 	ldhu	r3,12(r17)
  8048bc:	3005883a 	mov	r2,r6
  8048c0:	18c01014 	ori	r3,r3,64
  8048c4:	88c0030d 	sth	r3,12(r17)
  8048c8:	003fae06 	br	804784 <__alt_data_end+0xff804784>

008048cc <_fflush_r>:
  8048cc:	defffd04 	addi	sp,sp,-12
  8048d0:	dc000115 	stw	r16,4(sp)
  8048d4:	dfc00215 	stw	ra,8(sp)
  8048d8:	2021883a 	mov	r16,r4
  8048dc:	20000226 	beq	r4,zero,8048e8 <_fflush_r+0x1c>
  8048e0:	20800e17 	ldw	r2,56(r4)
  8048e4:	10000c26 	beq	r2,zero,804918 <_fflush_r+0x4c>
  8048e8:	2880030f 	ldh	r2,12(r5)
  8048ec:	1000051e 	bne	r2,zero,804904 <_fflush_r+0x38>
  8048f0:	0005883a 	mov	r2,zero
  8048f4:	dfc00217 	ldw	ra,8(sp)
  8048f8:	dc000117 	ldw	r16,4(sp)
  8048fc:	dec00304 	addi	sp,sp,12
  804900:	f800283a 	ret
  804904:	8009883a 	mov	r4,r16
  804908:	dfc00217 	ldw	ra,8(sp)
  80490c:	dc000117 	ldw	r16,4(sp)
  804910:	dec00304 	addi	sp,sp,12
  804914:	08046b01 	jmpi	8046b0 <__sflush_r>
  804918:	d9400015 	stw	r5,0(sp)
  80491c:	0804ca80 	call	804ca8 <__sinit>
  804920:	d9400017 	ldw	r5,0(sp)
  804924:	003ff006 	br	8048e8 <__alt_data_end+0xff8048e8>

00804928 <fflush>:
  804928:	20000526 	beq	r4,zero,804940 <fflush+0x18>
  80492c:	00802074 	movhi	r2,129
  804930:	10858004 	addi	r2,r2,5632
  804934:	200b883a 	mov	r5,r4
  804938:	11000017 	ldw	r4,0(r2)
  80493c:	08048cc1 	jmpi	8048cc <_fflush_r>
  804940:	00802074 	movhi	r2,129
  804944:	10857f04 	addi	r2,r2,5628
  804948:	11000017 	ldw	r4,0(r2)
  80494c:	01402034 	movhi	r5,128
  804950:	29523304 	addi	r5,r5,18636
  804954:	08056ac1 	jmpi	8056ac <_fwalk_reent>

00804958 <__fp_unlock>:
  804958:	0005883a 	mov	r2,zero
  80495c:	f800283a 	ret

00804960 <_cleanup_r>:
  804960:	01402074 	movhi	r5,129
  804964:	2965b104 	addi	r5,r5,-26940
  804968:	08056ac1 	jmpi	8056ac <_fwalk_reent>

0080496c <__sinit.part.1>:
  80496c:	defff704 	addi	sp,sp,-36
  804970:	00c02034 	movhi	r3,128
  804974:	dfc00815 	stw	ra,32(sp)
  804978:	ddc00715 	stw	r23,28(sp)
  80497c:	dd800615 	stw	r22,24(sp)
  804980:	dd400515 	stw	r21,20(sp)
  804984:	dd000415 	stw	r20,16(sp)
  804988:	dcc00315 	stw	r19,12(sp)
  80498c:	dc800215 	stw	r18,8(sp)
  804990:	dc400115 	stw	r17,4(sp)
  804994:	dc000015 	stw	r16,0(sp)
  804998:	18d25804 	addi	r3,r3,18784
  80499c:	24000117 	ldw	r16,4(r4)
  8049a0:	20c00f15 	stw	r3,60(r4)
  8049a4:	2080bb04 	addi	r2,r4,748
  8049a8:	00c000c4 	movi	r3,3
  8049ac:	20c0b915 	stw	r3,740(r4)
  8049b0:	2080ba15 	stw	r2,744(r4)
  8049b4:	2000b815 	stw	zero,736(r4)
  8049b8:	05c00204 	movi	r23,8
  8049bc:	00800104 	movi	r2,4
  8049c0:	2025883a 	mov	r18,r4
  8049c4:	b80d883a 	mov	r6,r23
  8049c8:	81001704 	addi	r4,r16,92
  8049cc:	000b883a 	mov	r5,zero
  8049d0:	80000015 	stw	zero,0(r16)
  8049d4:	80000115 	stw	zero,4(r16)
  8049d8:	80000215 	stw	zero,8(r16)
  8049dc:	8080030d 	sth	r2,12(r16)
  8049e0:	80001915 	stw	zero,100(r16)
  8049e4:	8000038d 	sth	zero,14(r16)
  8049e8:	80000415 	stw	zero,16(r16)
  8049ec:	80000515 	stw	zero,20(r16)
  8049f0:	80000615 	stw	zero,24(r16)
  8049f4:	080659c0 	call	80659c <memset>
  8049f8:	05802034 	movhi	r22,128
  8049fc:	94400217 	ldw	r17,8(r18)
  804a00:	05402034 	movhi	r21,128
  804a04:	05002034 	movhi	r20,128
  804a08:	04c02034 	movhi	r19,128
  804a0c:	b59f3b04 	addi	r22,r22,31980
  804a10:	ad5f5204 	addi	r21,r21,32072
  804a14:	a51f7104 	addi	r20,r20,32196
  804a18:	9cdf8804 	addi	r19,r19,32288
  804a1c:	85800815 	stw	r22,32(r16)
  804a20:	85400915 	stw	r21,36(r16)
  804a24:	85000a15 	stw	r20,40(r16)
  804a28:	84c00b15 	stw	r19,44(r16)
  804a2c:	84000715 	stw	r16,28(r16)
  804a30:	00800284 	movi	r2,10
  804a34:	8880030d 	sth	r2,12(r17)
  804a38:	00800044 	movi	r2,1
  804a3c:	b80d883a 	mov	r6,r23
  804a40:	89001704 	addi	r4,r17,92
  804a44:	000b883a 	mov	r5,zero
  804a48:	88000015 	stw	zero,0(r17)
  804a4c:	88000115 	stw	zero,4(r17)
  804a50:	88000215 	stw	zero,8(r17)
  804a54:	88001915 	stw	zero,100(r17)
  804a58:	8880038d 	sth	r2,14(r17)
  804a5c:	88000415 	stw	zero,16(r17)
  804a60:	88000515 	stw	zero,20(r17)
  804a64:	88000615 	stw	zero,24(r17)
  804a68:	080659c0 	call	80659c <memset>
  804a6c:	94000317 	ldw	r16,12(r18)
  804a70:	00800484 	movi	r2,18
  804a74:	8c400715 	stw	r17,28(r17)
  804a78:	8d800815 	stw	r22,32(r17)
  804a7c:	8d400915 	stw	r21,36(r17)
  804a80:	8d000a15 	stw	r20,40(r17)
  804a84:	8cc00b15 	stw	r19,44(r17)
  804a88:	8080030d 	sth	r2,12(r16)
  804a8c:	00800084 	movi	r2,2
  804a90:	80000015 	stw	zero,0(r16)
  804a94:	80000115 	stw	zero,4(r16)
  804a98:	80000215 	stw	zero,8(r16)
  804a9c:	80001915 	stw	zero,100(r16)
  804aa0:	8080038d 	sth	r2,14(r16)
  804aa4:	80000415 	stw	zero,16(r16)
  804aa8:	80000515 	stw	zero,20(r16)
  804aac:	80000615 	stw	zero,24(r16)
  804ab0:	b80d883a 	mov	r6,r23
  804ab4:	000b883a 	mov	r5,zero
  804ab8:	81001704 	addi	r4,r16,92
  804abc:	080659c0 	call	80659c <memset>
  804ac0:	00800044 	movi	r2,1
  804ac4:	84000715 	stw	r16,28(r16)
  804ac8:	85800815 	stw	r22,32(r16)
  804acc:	85400915 	stw	r21,36(r16)
  804ad0:	85000a15 	stw	r20,40(r16)
  804ad4:	84c00b15 	stw	r19,44(r16)
  804ad8:	90800e15 	stw	r2,56(r18)
  804adc:	dfc00817 	ldw	ra,32(sp)
  804ae0:	ddc00717 	ldw	r23,28(sp)
  804ae4:	dd800617 	ldw	r22,24(sp)
  804ae8:	dd400517 	ldw	r21,20(sp)
  804aec:	dd000417 	ldw	r20,16(sp)
  804af0:	dcc00317 	ldw	r19,12(sp)
  804af4:	dc800217 	ldw	r18,8(sp)
  804af8:	dc400117 	ldw	r17,4(sp)
  804afc:	dc000017 	ldw	r16,0(sp)
  804b00:	dec00904 	addi	sp,sp,36
  804b04:	f800283a 	ret

00804b08 <__fp_lock>:
  804b08:	0005883a 	mov	r2,zero
  804b0c:	f800283a 	ret

00804b10 <__sfmoreglue>:
  804b10:	defffc04 	addi	sp,sp,-16
  804b14:	dc400115 	stw	r17,4(sp)
  804b18:	2c7fffc4 	addi	r17,r5,-1
  804b1c:	8c401a24 	muli	r17,r17,104
  804b20:	dc800215 	stw	r18,8(sp)
  804b24:	2825883a 	mov	r18,r5
  804b28:	89401d04 	addi	r5,r17,116
  804b2c:	dc000015 	stw	r16,0(sp)
  804b30:	dfc00315 	stw	ra,12(sp)
  804b34:	0805a080 	call	805a08 <_malloc_r>
  804b38:	1021883a 	mov	r16,r2
  804b3c:	10000726 	beq	r2,zero,804b5c <__sfmoreglue+0x4c>
  804b40:	11000304 	addi	r4,r2,12
  804b44:	10000015 	stw	zero,0(r2)
  804b48:	14800115 	stw	r18,4(r2)
  804b4c:	11000215 	stw	r4,8(r2)
  804b50:	89801a04 	addi	r6,r17,104
  804b54:	000b883a 	mov	r5,zero
  804b58:	080659c0 	call	80659c <memset>
  804b5c:	8005883a 	mov	r2,r16
  804b60:	dfc00317 	ldw	ra,12(sp)
  804b64:	dc800217 	ldw	r18,8(sp)
  804b68:	dc400117 	ldw	r17,4(sp)
  804b6c:	dc000017 	ldw	r16,0(sp)
  804b70:	dec00404 	addi	sp,sp,16
  804b74:	f800283a 	ret

00804b78 <__sfp>:
  804b78:	defffb04 	addi	sp,sp,-20
  804b7c:	dc000015 	stw	r16,0(sp)
  804b80:	04002074 	movhi	r16,129
  804b84:	84057f04 	addi	r16,r16,5628
  804b88:	dcc00315 	stw	r19,12(sp)
  804b8c:	2027883a 	mov	r19,r4
  804b90:	81000017 	ldw	r4,0(r16)
  804b94:	dfc00415 	stw	ra,16(sp)
  804b98:	dc800215 	stw	r18,8(sp)
  804b9c:	20800e17 	ldw	r2,56(r4)
  804ba0:	dc400115 	stw	r17,4(sp)
  804ba4:	1000021e 	bne	r2,zero,804bb0 <__sfp+0x38>
  804ba8:	080496c0 	call	80496c <__sinit.part.1>
  804bac:	81000017 	ldw	r4,0(r16)
  804bb0:	2480b804 	addi	r18,r4,736
  804bb4:	047fffc4 	movi	r17,-1
  804bb8:	91000117 	ldw	r4,4(r18)
  804bbc:	94000217 	ldw	r16,8(r18)
  804bc0:	213fffc4 	addi	r4,r4,-1
  804bc4:	20000a16 	blt	r4,zero,804bf0 <__sfp+0x78>
  804bc8:	8080030f 	ldh	r2,12(r16)
  804bcc:	10000c26 	beq	r2,zero,804c00 <__sfp+0x88>
  804bd0:	80c01d04 	addi	r3,r16,116
  804bd4:	00000206 	br	804be0 <__sfp+0x68>
  804bd8:	18bfe60f 	ldh	r2,-104(r3)
  804bdc:	10000826 	beq	r2,zero,804c00 <__sfp+0x88>
  804be0:	213fffc4 	addi	r4,r4,-1
  804be4:	1c3ffd04 	addi	r16,r3,-12
  804be8:	18c01a04 	addi	r3,r3,104
  804bec:	247ffa1e 	bne	r4,r17,804bd8 <__alt_data_end+0xff804bd8>
  804bf0:	90800017 	ldw	r2,0(r18)
  804bf4:	10001d26 	beq	r2,zero,804c6c <__sfp+0xf4>
  804bf8:	1025883a 	mov	r18,r2
  804bfc:	003fee06 	br	804bb8 <__alt_data_end+0xff804bb8>
  804c00:	00bfffc4 	movi	r2,-1
  804c04:	8080038d 	sth	r2,14(r16)
  804c08:	00800044 	movi	r2,1
  804c0c:	8080030d 	sth	r2,12(r16)
  804c10:	80001915 	stw	zero,100(r16)
  804c14:	80000015 	stw	zero,0(r16)
  804c18:	80000215 	stw	zero,8(r16)
  804c1c:	80000115 	stw	zero,4(r16)
  804c20:	80000415 	stw	zero,16(r16)
  804c24:	80000515 	stw	zero,20(r16)
  804c28:	80000615 	stw	zero,24(r16)
  804c2c:	01800204 	movi	r6,8
  804c30:	000b883a 	mov	r5,zero
  804c34:	81001704 	addi	r4,r16,92
  804c38:	080659c0 	call	80659c <memset>
  804c3c:	8005883a 	mov	r2,r16
  804c40:	80000c15 	stw	zero,48(r16)
  804c44:	80000d15 	stw	zero,52(r16)
  804c48:	80001115 	stw	zero,68(r16)
  804c4c:	80001215 	stw	zero,72(r16)
  804c50:	dfc00417 	ldw	ra,16(sp)
  804c54:	dcc00317 	ldw	r19,12(sp)
  804c58:	dc800217 	ldw	r18,8(sp)
  804c5c:	dc400117 	ldw	r17,4(sp)
  804c60:	dc000017 	ldw	r16,0(sp)
  804c64:	dec00504 	addi	sp,sp,20
  804c68:	f800283a 	ret
  804c6c:	01400104 	movi	r5,4
  804c70:	9809883a 	mov	r4,r19
  804c74:	0804b100 	call	804b10 <__sfmoreglue>
  804c78:	90800015 	stw	r2,0(r18)
  804c7c:	103fde1e 	bne	r2,zero,804bf8 <__alt_data_end+0xff804bf8>
  804c80:	00800304 	movi	r2,12
  804c84:	98800015 	stw	r2,0(r19)
  804c88:	0005883a 	mov	r2,zero
  804c8c:	003ff006 	br	804c50 <__alt_data_end+0xff804c50>

00804c90 <_cleanup>:
  804c90:	00802074 	movhi	r2,129
  804c94:	10857f04 	addi	r2,r2,5628
  804c98:	11000017 	ldw	r4,0(r2)
  804c9c:	01402074 	movhi	r5,129
  804ca0:	2965b104 	addi	r5,r5,-26940
  804ca4:	08056ac1 	jmpi	8056ac <_fwalk_reent>

00804ca8 <__sinit>:
  804ca8:	20800e17 	ldw	r2,56(r4)
  804cac:	10000126 	beq	r2,zero,804cb4 <__sinit+0xc>
  804cb0:	f800283a 	ret
  804cb4:	080496c1 	jmpi	80496c <__sinit.part.1>

00804cb8 <__sfp_lock_acquire>:
  804cb8:	f800283a 	ret

00804cbc <__sfp_lock_release>:
  804cbc:	f800283a 	ret

00804cc0 <__sinit_lock_acquire>:
  804cc0:	f800283a 	ret

00804cc4 <__sinit_lock_release>:
  804cc4:	f800283a 	ret

00804cc8 <__fp_lock_all>:
  804cc8:	00802074 	movhi	r2,129
  804ccc:	10858004 	addi	r2,r2,5632
  804cd0:	11000017 	ldw	r4,0(r2)
  804cd4:	01402034 	movhi	r5,128
  804cd8:	2952c204 	addi	r5,r5,19208
  804cdc:	08055e81 	jmpi	8055e8 <_fwalk>

00804ce0 <__fp_unlock_all>:
  804ce0:	00802074 	movhi	r2,129
  804ce4:	10858004 	addi	r2,r2,5632
  804ce8:	11000017 	ldw	r4,0(r2)
  804cec:	01402034 	movhi	r5,128
  804cf0:	29525604 	addi	r5,r5,18776
  804cf4:	08055e81 	jmpi	8055e8 <_fwalk>

00804cf8 <_malloc_trim_r>:
  804cf8:	defffb04 	addi	sp,sp,-20
  804cfc:	dcc00315 	stw	r19,12(sp)
  804d00:	04c02074 	movhi	r19,129
  804d04:	dc800215 	stw	r18,8(sp)
  804d08:	dc400115 	stw	r17,4(sp)
  804d0c:	dc000015 	stw	r16,0(sp)
  804d10:	dfc00415 	stw	ra,16(sp)
  804d14:	2821883a 	mov	r16,r5
  804d18:	9cfffb04 	addi	r19,r19,-20
  804d1c:	2025883a 	mov	r18,r4
  804d20:	080d6640 	call	80d664 <__malloc_lock>
  804d24:	98800217 	ldw	r2,8(r19)
  804d28:	14400117 	ldw	r17,4(r2)
  804d2c:	00bfff04 	movi	r2,-4
  804d30:	88a2703a 	and	r17,r17,r2
  804d34:	8c21c83a 	sub	r16,r17,r16
  804d38:	8403fbc4 	addi	r16,r16,4079
  804d3c:	8020d33a 	srli	r16,r16,12
  804d40:	0083ffc4 	movi	r2,4095
  804d44:	843fffc4 	addi	r16,r16,-1
  804d48:	8020933a 	slli	r16,r16,12
  804d4c:	1400060e 	bge	r2,r16,804d68 <_malloc_trim_r+0x70>
  804d50:	000b883a 	mov	r5,zero
  804d54:	9009883a 	mov	r4,r18
  804d58:	0807c980 	call	807c98 <_sbrk_r>
  804d5c:	98c00217 	ldw	r3,8(r19)
  804d60:	1c47883a 	add	r3,r3,r17
  804d64:	10c00a26 	beq	r2,r3,804d90 <_malloc_trim_r+0x98>
  804d68:	9009883a 	mov	r4,r18
  804d6c:	080d6880 	call	80d688 <__malloc_unlock>
  804d70:	0005883a 	mov	r2,zero
  804d74:	dfc00417 	ldw	ra,16(sp)
  804d78:	dcc00317 	ldw	r19,12(sp)
  804d7c:	dc800217 	ldw	r18,8(sp)
  804d80:	dc400117 	ldw	r17,4(sp)
  804d84:	dc000017 	ldw	r16,0(sp)
  804d88:	dec00504 	addi	sp,sp,20
  804d8c:	f800283a 	ret
  804d90:	040bc83a 	sub	r5,zero,r16
  804d94:	9009883a 	mov	r4,r18
  804d98:	0807c980 	call	807c98 <_sbrk_r>
  804d9c:	00ffffc4 	movi	r3,-1
  804da0:	10c00d26 	beq	r2,r3,804dd8 <_malloc_trim_r+0xe0>
  804da4:	00c02074 	movhi	r3,129
  804da8:	18cc5704 	addi	r3,r3,12636
  804dac:	18800017 	ldw	r2,0(r3)
  804db0:	99000217 	ldw	r4,8(r19)
  804db4:	8c23c83a 	sub	r17,r17,r16
  804db8:	8c400054 	ori	r17,r17,1
  804dbc:	1421c83a 	sub	r16,r2,r16
  804dc0:	24400115 	stw	r17,4(r4)
  804dc4:	9009883a 	mov	r4,r18
  804dc8:	1c000015 	stw	r16,0(r3)
  804dcc:	080d6880 	call	80d688 <__malloc_unlock>
  804dd0:	00800044 	movi	r2,1
  804dd4:	003fe706 	br	804d74 <__alt_data_end+0xff804d74>
  804dd8:	000b883a 	mov	r5,zero
  804ddc:	9009883a 	mov	r4,r18
  804de0:	0807c980 	call	807c98 <_sbrk_r>
  804de4:	99000217 	ldw	r4,8(r19)
  804de8:	014003c4 	movi	r5,15
  804dec:	1107c83a 	sub	r3,r2,r4
  804df0:	28ffdd0e 	bge	r5,r3,804d68 <__alt_data_end+0xff804d68>
  804df4:	01402074 	movhi	r5,129
  804df8:	29458204 	addi	r5,r5,5640
  804dfc:	29400017 	ldw	r5,0(r5)
  804e00:	18c00054 	ori	r3,r3,1
  804e04:	20c00115 	stw	r3,4(r4)
  804e08:	00c02074 	movhi	r3,129
  804e0c:	1145c83a 	sub	r2,r2,r5
  804e10:	18cc5704 	addi	r3,r3,12636
  804e14:	18800015 	stw	r2,0(r3)
  804e18:	003fd306 	br	804d68 <__alt_data_end+0xff804d68>

00804e1c <_free_r>:
  804e1c:	28004126 	beq	r5,zero,804f24 <_free_r+0x108>
  804e20:	defffd04 	addi	sp,sp,-12
  804e24:	dc400115 	stw	r17,4(sp)
  804e28:	dc000015 	stw	r16,0(sp)
  804e2c:	2023883a 	mov	r17,r4
  804e30:	2821883a 	mov	r16,r5
  804e34:	dfc00215 	stw	ra,8(sp)
  804e38:	080d6640 	call	80d664 <__malloc_lock>
  804e3c:	81ffff17 	ldw	r7,-4(r16)
  804e40:	00bfff84 	movi	r2,-2
  804e44:	01002074 	movhi	r4,129
  804e48:	81bffe04 	addi	r6,r16,-8
  804e4c:	3884703a 	and	r2,r7,r2
  804e50:	213ffb04 	addi	r4,r4,-20
  804e54:	308b883a 	add	r5,r6,r2
  804e58:	2a400117 	ldw	r9,4(r5)
  804e5c:	22000217 	ldw	r8,8(r4)
  804e60:	00ffff04 	movi	r3,-4
  804e64:	48c6703a 	and	r3,r9,r3
  804e68:	2a005726 	beq	r5,r8,804fc8 <_free_r+0x1ac>
  804e6c:	28c00115 	stw	r3,4(r5)
  804e70:	39c0004c 	andi	r7,r7,1
  804e74:	3800091e 	bne	r7,zero,804e9c <_free_r+0x80>
  804e78:	823ffe17 	ldw	r8,-8(r16)
  804e7c:	22400204 	addi	r9,r4,8
  804e80:	320dc83a 	sub	r6,r6,r8
  804e84:	31c00217 	ldw	r7,8(r6)
  804e88:	1205883a 	add	r2,r2,r8
  804e8c:	3a406526 	beq	r7,r9,805024 <_free_r+0x208>
  804e90:	32000317 	ldw	r8,12(r6)
  804e94:	3a000315 	stw	r8,12(r7)
  804e98:	41c00215 	stw	r7,8(r8)
  804e9c:	28cf883a 	add	r7,r5,r3
  804ea0:	39c00117 	ldw	r7,4(r7)
  804ea4:	39c0004c 	andi	r7,r7,1
  804ea8:	38003a26 	beq	r7,zero,804f94 <_free_r+0x178>
  804eac:	10c00054 	ori	r3,r2,1
  804eb0:	30c00115 	stw	r3,4(r6)
  804eb4:	3087883a 	add	r3,r6,r2
  804eb8:	18800015 	stw	r2,0(r3)
  804ebc:	00c07fc4 	movi	r3,511
  804ec0:	18801936 	bltu	r3,r2,804f28 <_free_r+0x10c>
  804ec4:	1004d0fa 	srli	r2,r2,3
  804ec8:	01c00044 	movi	r7,1
  804ecc:	21400117 	ldw	r5,4(r4)
  804ed0:	10c00044 	addi	r3,r2,1
  804ed4:	18c7883a 	add	r3,r3,r3
  804ed8:	1005d0ba 	srai	r2,r2,2
  804edc:	18c7883a 	add	r3,r3,r3
  804ee0:	18c7883a 	add	r3,r3,r3
  804ee4:	1907883a 	add	r3,r3,r4
  804ee8:	3884983a 	sll	r2,r7,r2
  804eec:	19c00017 	ldw	r7,0(r3)
  804ef0:	1a3ffe04 	addi	r8,r3,-8
  804ef4:	1144b03a 	or	r2,r2,r5
  804ef8:	32000315 	stw	r8,12(r6)
  804efc:	31c00215 	stw	r7,8(r6)
  804f00:	20800115 	stw	r2,4(r4)
  804f04:	19800015 	stw	r6,0(r3)
  804f08:	39800315 	stw	r6,12(r7)
  804f0c:	8809883a 	mov	r4,r17
  804f10:	dfc00217 	ldw	ra,8(sp)
  804f14:	dc400117 	ldw	r17,4(sp)
  804f18:	dc000017 	ldw	r16,0(sp)
  804f1c:	dec00304 	addi	sp,sp,12
  804f20:	080d6881 	jmpi	80d688 <__malloc_unlock>
  804f24:	f800283a 	ret
  804f28:	100ad27a 	srli	r5,r2,9
  804f2c:	00c00104 	movi	r3,4
  804f30:	19404a36 	bltu	r3,r5,80505c <_free_r+0x240>
  804f34:	100ad1ba 	srli	r5,r2,6
  804f38:	28c00e44 	addi	r3,r5,57
  804f3c:	18c7883a 	add	r3,r3,r3
  804f40:	29400e04 	addi	r5,r5,56
  804f44:	18c7883a 	add	r3,r3,r3
  804f48:	18c7883a 	add	r3,r3,r3
  804f4c:	1909883a 	add	r4,r3,r4
  804f50:	20c00017 	ldw	r3,0(r4)
  804f54:	01c02074 	movhi	r7,129
  804f58:	213ffe04 	addi	r4,r4,-8
  804f5c:	39fffb04 	addi	r7,r7,-20
  804f60:	20c04426 	beq	r4,r3,805074 <_free_r+0x258>
  804f64:	01ffff04 	movi	r7,-4
  804f68:	19400117 	ldw	r5,4(r3)
  804f6c:	29ca703a 	and	r5,r5,r7
  804f70:	1140022e 	bgeu	r2,r5,804f7c <_free_r+0x160>
  804f74:	18c00217 	ldw	r3,8(r3)
  804f78:	20fffb1e 	bne	r4,r3,804f68 <__alt_data_end+0xff804f68>
  804f7c:	19000317 	ldw	r4,12(r3)
  804f80:	31000315 	stw	r4,12(r6)
  804f84:	30c00215 	stw	r3,8(r6)
  804f88:	21800215 	stw	r6,8(r4)
  804f8c:	19800315 	stw	r6,12(r3)
  804f90:	003fde06 	br	804f0c <__alt_data_end+0xff804f0c>
  804f94:	29c00217 	ldw	r7,8(r5)
  804f98:	10c5883a 	add	r2,r2,r3
  804f9c:	00c02074 	movhi	r3,129
  804fa0:	18fffd04 	addi	r3,r3,-12
  804fa4:	38c03b26 	beq	r7,r3,805094 <_free_r+0x278>
  804fa8:	2a000317 	ldw	r8,12(r5)
  804fac:	11400054 	ori	r5,r2,1
  804fb0:	3087883a 	add	r3,r6,r2
  804fb4:	3a000315 	stw	r8,12(r7)
  804fb8:	41c00215 	stw	r7,8(r8)
  804fbc:	31400115 	stw	r5,4(r6)
  804fc0:	18800015 	stw	r2,0(r3)
  804fc4:	003fbd06 	br	804ebc <__alt_data_end+0xff804ebc>
  804fc8:	39c0004c 	andi	r7,r7,1
  804fcc:	10c5883a 	add	r2,r2,r3
  804fd0:	3800071e 	bne	r7,zero,804ff0 <_free_r+0x1d4>
  804fd4:	81fffe17 	ldw	r7,-8(r16)
  804fd8:	31cdc83a 	sub	r6,r6,r7
  804fdc:	30c00317 	ldw	r3,12(r6)
  804fe0:	31400217 	ldw	r5,8(r6)
  804fe4:	11c5883a 	add	r2,r2,r7
  804fe8:	28c00315 	stw	r3,12(r5)
  804fec:	19400215 	stw	r5,8(r3)
  804ff0:	10c00054 	ori	r3,r2,1
  804ff4:	30c00115 	stw	r3,4(r6)
  804ff8:	00c02074 	movhi	r3,129
  804ffc:	18c58304 	addi	r3,r3,5644
  805000:	18c00017 	ldw	r3,0(r3)
  805004:	21800215 	stw	r6,8(r4)
  805008:	10ffc036 	bltu	r2,r3,804f0c <__alt_data_end+0xff804f0c>
  80500c:	00802074 	movhi	r2,129
  805010:	108c4f04 	addi	r2,r2,12604
  805014:	11400017 	ldw	r5,0(r2)
  805018:	8809883a 	mov	r4,r17
  80501c:	0804cf80 	call	804cf8 <_malloc_trim_r>
  805020:	003fba06 	br	804f0c <__alt_data_end+0xff804f0c>
  805024:	28c9883a 	add	r4,r5,r3
  805028:	21000117 	ldw	r4,4(r4)
  80502c:	2100004c 	andi	r4,r4,1
  805030:	2000391e 	bne	r4,zero,805118 <_free_r+0x2fc>
  805034:	29c00217 	ldw	r7,8(r5)
  805038:	29000317 	ldw	r4,12(r5)
  80503c:	1885883a 	add	r2,r3,r2
  805040:	10c00054 	ori	r3,r2,1
  805044:	39000315 	stw	r4,12(r7)
  805048:	21c00215 	stw	r7,8(r4)
  80504c:	30c00115 	stw	r3,4(r6)
  805050:	308d883a 	add	r6,r6,r2
  805054:	30800015 	stw	r2,0(r6)
  805058:	003fac06 	br	804f0c <__alt_data_end+0xff804f0c>
  80505c:	00c00504 	movi	r3,20
  805060:	19401536 	bltu	r3,r5,8050b8 <_free_r+0x29c>
  805064:	28c01704 	addi	r3,r5,92
  805068:	18c7883a 	add	r3,r3,r3
  80506c:	294016c4 	addi	r5,r5,91
  805070:	003fb406 	br	804f44 <__alt_data_end+0xff804f44>
  805074:	280bd0ba 	srai	r5,r5,2
  805078:	00c00044 	movi	r3,1
  80507c:	38800117 	ldw	r2,4(r7)
  805080:	194a983a 	sll	r5,r3,r5
  805084:	2007883a 	mov	r3,r4
  805088:	2884b03a 	or	r2,r5,r2
  80508c:	38800115 	stw	r2,4(r7)
  805090:	003fbb06 	br	804f80 <__alt_data_end+0xff804f80>
  805094:	21800515 	stw	r6,20(r4)
  805098:	21800415 	stw	r6,16(r4)
  80509c:	10c00054 	ori	r3,r2,1
  8050a0:	31c00315 	stw	r7,12(r6)
  8050a4:	31c00215 	stw	r7,8(r6)
  8050a8:	30c00115 	stw	r3,4(r6)
  8050ac:	308d883a 	add	r6,r6,r2
  8050b0:	30800015 	stw	r2,0(r6)
  8050b4:	003f9506 	br	804f0c <__alt_data_end+0xff804f0c>
  8050b8:	00c01504 	movi	r3,84
  8050bc:	19400536 	bltu	r3,r5,8050d4 <_free_r+0x2b8>
  8050c0:	100ad33a 	srli	r5,r2,12
  8050c4:	28c01bc4 	addi	r3,r5,111
  8050c8:	18c7883a 	add	r3,r3,r3
  8050cc:	29401b84 	addi	r5,r5,110
  8050d0:	003f9c06 	br	804f44 <__alt_data_end+0xff804f44>
  8050d4:	00c05504 	movi	r3,340
  8050d8:	19400536 	bltu	r3,r5,8050f0 <_free_r+0x2d4>
  8050dc:	100ad3fa 	srli	r5,r2,15
  8050e0:	28c01e04 	addi	r3,r5,120
  8050e4:	18c7883a 	add	r3,r3,r3
  8050e8:	29401dc4 	addi	r5,r5,119
  8050ec:	003f9506 	br	804f44 <__alt_data_end+0xff804f44>
  8050f0:	00c15504 	movi	r3,1364
  8050f4:	19400536 	bltu	r3,r5,80510c <_free_r+0x2f0>
  8050f8:	100ad4ba 	srli	r5,r2,18
  8050fc:	28c01f44 	addi	r3,r5,125
  805100:	18c7883a 	add	r3,r3,r3
  805104:	29401f04 	addi	r5,r5,124
  805108:	003f8e06 	br	804f44 <__alt_data_end+0xff804f44>
  80510c:	00c03f84 	movi	r3,254
  805110:	01401f84 	movi	r5,126
  805114:	003f8b06 	br	804f44 <__alt_data_end+0xff804f44>
  805118:	10c00054 	ori	r3,r2,1
  80511c:	30c00115 	stw	r3,4(r6)
  805120:	308d883a 	add	r6,r6,r2
  805124:	30800015 	stw	r2,0(r6)
  805128:	003f7806 	br	804f0c <__alt_data_end+0xff804f0c>

0080512c <__sfvwrite_r>:
  80512c:	30800217 	ldw	r2,8(r6)
  805130:	10006726 	beq	r2,zero,8052d0 <__sfvwrite_r+0x1a4>
  805134:	28c0030b 	ldhu	r3,12(r5)
  805138:	defff404 	addi	sp,sp,-48
  80513c:	dd400715 	stw	r21,28(sp)
  805140:	dd000615 	stw	r20,24(sp)
  805144:	dc000215 	stw	r16,8(sp)
  805148:	dfc00b15 	stw	ra,44(sp)
  80514c:	df000a15 	stw	fp,40(sp)
  805150:	ddc00915 	stw	r23,36(sp)
  805154:	dd800815 	stw	r22,32(sp)
  805158:	dcc00515 	stw	r19,20(sp)
  80515c:	dc800415 	stw	r18,16(sp)
  805160:	dc400315 	stw	r17,12(sp)
  805164:	1880020c 	andi	r2,r3,8
  805168:	2821883a 	mov	r16,r5
  80516c:	202b883a 	mov	r21,r4
  805170:	3029883a 	mov	r20,r6
  805174:	10002726 	beq	r2,zero,805214 <__sfvwrite_r+0xe8>
  805178:	28800417 	ldw	r2,16(r5)
  80517c:	10002526 	beq	r2,zero,805214 <__sfvwrite_r+0xe8>
  805180:	1880008c 	andi	r2,r3,2
  805184:	a4400017 	ldw	r17,0(r20)
  805188:	10002a26 	beq	r2,zero,805234 <__sfvwrite_r+0x108>
  80518c:	05a00034 	movhi	r22,32768
  805190:	0027883a 	mov	r19,zero
  805194:	0025883a 	mov	r18,zero
  805198:	b5bf0004 	addi	r22,r22,-1024
  80519c:	980d883a 	mov	r6,r19
  8051a0:	a809883a 	mov	r4,r21
  8051a4:	90004626 	beq	r18,zero,8052c0 <__sfvwrite_r+0x194>
  8051a8:	900f883a 	mov	r7,r18
  8051ac:	b480022e 	bgeu	r22,r18,8051b8 <__sfvwrite_r+0x8c>
  8051b0:	01e00034 	movhi	r7,32768
  8051b4:	39ff0004 	addi	r7,r7,-1024
  8051b8:	80800917 	ldw	r2,36(r16)
  8051bc:	81400717 	ldw	r5,28(r16)
  8051c0:	103ee83a 	callr	r2
  8051c4:	0080570e 	bge	zero,r2,805324 <__sfvwrite_r+0x1f8>
  8051c8:	a0c00217 	ldw	r3,8(r20)
  8051cc:	98a7883a 	add	r19,r19,r2
  8051d0:	90a5c83a 	sub	r18,r18,r2
  8051d4:	1885c83a 	sub	r2,r3,r2
  8051d8:	a0800215 	stw	r2,8(r20)
  8051dc:	103fef1e 	bne	r2,zero,80519c <__alt_data_end+0xff80519c>
  8051e0:	0005883a 	mov	r2,zero
  8051e4:	dfc00b17 	ldw	ra,44(sp)
  8051e8:	df000a17 	ldw	fp,40(sp)
  8051ec:	ddc00917 	ldw	r23,36(sp)
  8051f0:	dd800817 	ldw	r22,32(sp)
  8051f4:	dd400717 	ldw	r21,28(sp)
  8051f8:	dd000617 	ldw	r20,24(sp)
  8051fc:	dcc00517 	ldw	r19,20(sp)
  805200:	dc800417 	ldw	r18,16(sp)
  805204:	dc400317 	ldw	r17,12(sp)
  805208:	dc000217 	ldw	r16,8(sp)
  80520c:	dec00c04 	addi	sp,sp,48
  805210:	f800283a 	ret
  805214:	800b883a 	mov	r5,r16
  805218:	a809883a 	mov	r4,r21
  80521c:	0802cd40 	call	802cd4 <__swsetup_r>
  805220:	1000eb1e 	bne	r2,zero,8055d0 <__sfvwrite_r+0x4a4>
  805224:	80c0030b 	ldhu	r3,12(r16)
  805228:	a4400017 	ldw	r17,0(r20)
  80522c:	1880008c 	andi	r2,r3,2
  805230:	103fd61e 	bne	r2,zero,80518c <__alt_data_end+0xff80518c>
  805234:	1880004c 	andi	r2,r3,1
  805238:	10003f1e 	bne	r2,zero,805338 <__sfvwrite_r+0x20c>
  80523c:	0039883a 	mov	fp,zero
  805240:	0025883a 	mov	r18,zero
  805244:	90001a26 	beq	r18,zero,8052b0 <__sfvwrite_r+0x184>
  805248:	1880800c 	andi	r2,r3,512
  80524c:	84c00217 	ldw	r19,8(r16)
  805250:	10002126 	beq	r2,zero,8052d8 <__sfvwrite_r+0x1ac>
  805254:	982f883a 	mov	r23,r19
  805258:	94c09336 	bltu	r18,r19,8054a8 <__sfvwrite_r+0x37c>
  80525c:	1881200c 	andi	r2,r3,1152
  805260:	10009e1e 	bne	r2,zero,8054dc <__sfvwrite_r+0x3b0>
  805264:	81000017 	ldw	r4,0(r16)
  805268:	b80d883a 	mov	r6,r23
  80526c:	e00b883a 	mov	r5,fp
  805270:	08064400 	call	806440 <memmove>
  805274:	80c00217 	ldw	r3,8(r16)
  805278:	81000017 	ldw	r4,0(r16)
  80527c:	9005883a 	mov	r2,r18
  805280:	1ce7c83a 	sub	r19,r3,r19
  805284:	25cf883a 	add	r7,r4,r23
  805288:	84c00215 	stw	r19,8(r16)
  80528c:	81c00015 	stw	r7,0(r16)
  805290:	a0c00217 	ldw	r3,8(r20)
  805294:	e0b9883a 	add	fp,fp,r2
  805298:	90a5c83a 	sub	r18,r18,r2
  80529c:	18a7c83a 	sub	r19,r3,r2
  8052a0:	a4c00215 	stw	r19,8(r20)
  8052a4:	983fce26 	beq	r19,zero,8051e0 <__alt_data_end+0xff8051e0>
  8052a8:	80c0030b 	ldhu	r3,12(r16)
  8052ac:	903fe61e 	bne	r18,zero,805248 <__alt_data_end+0xff805248>
  8052b0:	8f000017 	ldw	fp,0(r17)
  8052b4:	8c800117 	ldw	r18,4(r17)
  8052b8:	8c400204 	addi	r17,r17,8
  8052bc:	003fe106 	br	805244 <__alt_data_end+0xff805244>
  8052c0:	8cc00017 	ldw	r19,0(r17)
  8052c4:	8c800117 	ldw	r18,4(r17)
  8052c8:	8c400204 	addi	r17,r17,8
  8052cc:	003fb306 	br	80519c <__alt_data_end+0xff80519c>
  8052d0:	0005883a 	mov	r2,zero
  8052d4:	f800283a 	ret
  8052d8:	81000017 	ldw	r4,0(r16)
  8052dc:	80800417 	ldw	r2,16(r16)
  8052e0:	11005736 	bltu	r2,r4,805440 <__sfvwrite_r+0x314>
  8052e4:	85c00517 	ldw	r23,20(r16)
  8052e8:	95c05536 	bltu	r18,r23,805440 <__sfvwrite_r+0x314>
  8052ec:	00a00034 	movhi	r2,32768
  8052f0:	10bfffc4 	addi	r2,r2,-1
  8052f4:	9009883a 	mov	r4,r18
  8052f8:	1480012e 	bgeu	r2,r18,805300 <__sfvwrite_r+0x1d4>
  8052fc:	1009883a 	mov	r4,r2
  805300:	b80b883a 	mov	r5,r23
  805304:	080a9300 	call	80a930 <__divsi3>
  805308:	15cf383a 	mul	r7,r2,r23
  80530c:	81400717 	ldw	r5,28(r16)
  805310:	80800917 	ldw	r2,36(r16)
  805314:	e00d883a 	mov	r6,fp
  805318:	a809883a 	mov	r4,r21
  80531c:	103ee83a 	callr	r2
  805320:	00bfdb16 	blt	zero,r2,805290 <__alt_data_end+0xff805290>
  805324:	8080030b 	ldhu	r2,12(r16)
  805328:	10801014 	ori	r2,r2,64
  80532c:	8080030d 	sth	r2,12(r16)
  805330:	00bfffc4 	movi	r2,-1
  805334:	003fab06 	br	8051e4 <__alt_data_end+0xff8051e4>
  805338:	0027883a 	mov	r19,zero
  80533c:	0011883a 	mov	r8,zero
  805340:	0039883a 	mov	fp,zero
  805344:	0025883a 	mov	r18,zero
  805348:	90001f26 	beq	r18,zero,8053c8 <__sfvwrite_r+0x29c>
  80534c:	40005a26 	beq	r8,zero,8054b8 <__sfvwrite_r+0x38c>
  805350:	982d883a 	mov	r22,r19
  805354:	94c0012e 	bgeu	r18,r19,80535c <__sfvwrite_r+0x230>
  805358:	902d883a 	mov	r22,r18
  80535c:	81000017 	ldw	r4,0(r16)
  805360:	80800417 	ldw	r2,16(r16)
  805364:	b02f883a 	mov	r23,r22
  805368:	81c00517 	ldw	r7,20(r16)
  80536c:	1100032e 	bgeu	r2,r4,80537c <__sfvwrite_r+0x250>
  805370:	80c00217 	ldw	r3,8(r16)
  805374:	38c7883a 	add	r3,r7,r3
  805378:	1d801816 	blt	r3,r22,8053dc <__sfvwrite_r+0x2b0>
  80537c:	b1c03e16 	blt	r22,r7,805478 <__sfvwrite_r+0x34c>
  805380:	80800917 	ldw	r2,36(r16)
  805384:	81400717 	ldw	r5,28(r16)
  805388:	e00d883a 	mov	r6,fp
  80538c:	da000115 	stw	r8,4(sp)
  805390:	a809883a 	mov	r4,r21
  805394:	103ee83a 	callr	r2
  805398:	102f883a 	mov	r23,r2
  80539c:	da000117 	ldw	r8,4(sp)
  8053a0:	00bfe00e 	bge	zero,r2,805324 <__alt_data_end+0xff805324>
  8053a4:	9de7c83a 	sub	r19,r19,r23
  8053a8:	98001f26 	beq	r19,zero,805428 <__sfvwrite_r+0x2fc>
  8053ac:	a0800217 	ldw	r2,8(r20)
  8053b0:	e5f9883a 	add	fp,fp,r23
  8053b4:	95e5c83a 	sub	r18,r18,r23
  8053b8:	15efc83a 	sub	r23,r2,r23
  8053bc:	a5c00215 	stw	r23,8(r20)
  8053c0:	b83f8726 	beq	r23,zero,8051e0 <__alt_data_end+0xff8051e0>
  8053c4:	903fe11e 	bne	r18,zero,80534c <__alt_data_end+0xff80534c>
  8053c8:	8f000017 	ldw	fp,0(r17)
  8053cc:	8c800117 	ldw	r18,4(r17)
  8053d0:	0011883a 	mov	r8,zero
  8053d4:	8c400204 	addi	r17,r17,8
  8053d8:	003fdb06 	br	805348 <__alt_data_end+0xff805348>
  8053dc:	180d883a 	mov	r6,r3
  8053e0:	e00b883a 	mov	r5,fp
  8053e4:	da000115 	stw	r8,4(sp)
  8053e8:	d8c00015 	stw	r3,0(sp)
  8053ec:	08064400 	call	806440 <memmove>
  8053f0:	d8c00017 	ldw	r3,0(sp)
  8053f4:	80800017 	ldw	r2,0(r16)
  8053f8:	800b883a 	mov	r5,r16
  8053fc:	a809883a 	mov	r4,r21
  805400:	10c5883a 	add	r2,r2,r3
  805404:	80800015 	stw	r2,0(r16)
  805408:	d8c00015 	stw	r3,0(sp)
  80540c:	08048cc0 	call	8048cc <_fflush_r>
  805410:	d8c00017 	ldw	r3,0(sp)
  805414:	da000117 	ldw	r8,4(sp)
  805418:	103fc21e 	bne	r2,zero,805324 <__alt_data_end+0xff805324>
  80541c:	182f883a 	mov	r23,r3
  805420:	9de7c83a 	sub	r19,r19,r23
  805424:	983fe11e 	bne	r19,zero,8053ac <__alt_data_end+0xff8053ac>
  805428:	800b883a 	mov	r5,r16
  80542c:	a809883a 	mov	r4,r21
  805430:	08048cc0 	call	8048cc <_fflush_r>
  805434:	103fbb1e 	bne	r2,zero,805324 <__alt_data_end+0xff805324>
  805438:	0011883a 	mov	r8,zero
  80543c:	003fdb06 	br	8053ac <__alt_data_end+0xff8053ac>
  805440:	94c0012e 	bgeu	r18,r19,805448 <__sfvwrite_r+0x31c>
  805444:	9027883a 	mov	r19,r18
  805448:	980d883a 	mov	r6,r19
  80544c:	e00b883a 	mov	r5,fp
  805450:	08064400 	call	806440 <memmove>
  805454:	80800217 	ldw	r2,8(r16)
  805458:	80c00017 	ldw	r3,0(r16)
  80545c:	14c5c83a 	sub	r2,r2,r19
  805460:	1cc7883a 	add	r3,r3,r19
  805464:	80800215 	stw	r2,8(r16)
  805468:	80c00015 	stw	r3,0(r16)
  80546c:	10004326 	beq	r2,zero,80557c <__sfvwrite_r+0x450>
  805470:	9805883a 	mov	r2,r19
  805474:	003f8606 	br	805290 <__alt_data_end+0xff805290>
  805478:	b00d883a 	mov	r6,r22
  80547c:	e00b883a 	mov	r5,fp
  805480:	da000115 	stw	r8,4(sp)
  805484:	08064400 	call	806440 <memmove>
  805488:	80800217 	ldw	r2,8(r16)
  80548c:	80c00017 	ldw	r3,0(r16)
  805490:	da000117 	ldw	r8,4(sp)
  805494:	1585c83a 	sub	r2,r2,r22
  805498:	1dad883a 	add	r22,r3,r22
  80549c:	80800215 	stw	r2,8(r16)
  8054a0:	85800015 	stw	r22,0(r16)
  8054a4:	003fbf06 	br	8053a4 <__alt_data_end+0xff8053a4>
  8054a8:	81000017 	ldw	r4,0(r16)
  8054ac:	9027883a 	mov	r19,r18
  8054b0:	902f883a 	mov	r23,r18
  8054b4:	003f6c06 	br	805268 <__alt_data_end+0xff805268>
  8054b8:	900d883a 	mov	r6,r18
  8054bc:	01400284 	movi	r5,10
  8054c0:	e009883a 	mov	r4,fp
  8054c4:	08062140 	call	806214 <memchr>
  8054c8:	10003e26 	beq	r2,zero,8055c4 <__sfvwrite_r+0x498>
  8054cc:	10800044 	addi	r2,r2,1
  8054d0:	1727c83a 	sub	r19,r2,fp
  8054d4:	02000044 	movi	r8,1
  8054d8:	003f9d06 	br	805350 <__alt_data_end+0xff805350>
  8054dc:	80800517 	ldw	r2,20(r16)
  8054e0:	81400417 	ldw	r5,16(r16)
  8054e4:	81c00017 	ldw	r7,0(r16)
  8054e8:	10a7883a 	add	r19,r2,r2
  8054ec:	9885883a 	add	r2,r19,r2
  8054f0:	1026d7fa 	srli	r19,r2,31
  8054f4:	396dc83a 	sub	r22,r7,r5
  8054f8:	b1000044 	addi	r4,r22,1
  8054fc:	9885883a 	add	r2,r19,r2
  805500:	1027d07a 	srai	r19,r2,1
  805504:	2485883a 	add	r2,r4,r18
  805508:	980d883a 	mov	r6,r19
  80550c:	9880022e 	bgeu	r19,r2,805518 <__sfvwrite_r+0x3ec>
  805510:	1027883a 	mov	r19,r2
  805514:	100d883a 	mov	r6,r2
  805518:	18c1000c 	andi	r3,r3,1024
  80551c:	18001c26 	beq	r3,zero,805590 <__sfvwrite_r+0x464>
  805520:	300b883a 	mov	r5,r6
  805524:	a809883a 	mov	r4,r21
  805528:	0805a080 	call	805a08 <_malloc_r>
  80552c:	102f883a 	mov	r23,r2
  805530:	10002926 	beq	r2,zero,8055d8 <__sfvwrite_r+0x4ac>
  805534:	81400417 	ldw	r5,16(r16)
  805538:	b00d883a 	mov	r6,r22
  80553c:	1009883a 	mov	r4,r2
  805540:	08062f80 	call	8062f8 <memcpy>
  805544:	8080030b 	ldhu	r2,12(r16)
  805548:	00fedfc4 	movi	r3,-1153
  80554c:	10c4703a 	and	r2,r2,r3
  805550:	10802014 	ori	r2,r2,128
  805554:	8080030d 	sth	r2,12(r16)
  805558:	bd89883a 	add	r4,r23,r22
  80555c:	9d8fc83a 	sub	r7,r19,r22
  805560:	85c00415 	stw	r23,16(r16)
  805564:	84c00515 	stw	r19,20(r16)
  805568:	81000015 	stw	r4,0(r16)
  80556c:	9027883a 	mov	r19,r18
  805570:	81c00215 	stw	r7,8(r16)
  805574:	902f883a 	mov	r23,r18
  805578:	003f3b06 	br	805268 <__alt_data_end+0xff805268>
  80557c:	800b883a 	mov	r5,r16
  805580:	a809883a 	mov	r4,r21
  805584:	08048cc0 	call	8048cc <_fflush_r>
  805588:	103fb926 	beq	r2,zero,805470 <__alt_data_end+0xff805470>
  80558c:	003f6506 	br	805324 <__alt_data_end+0xff805324>
  805590:	a809883a 	mov	r4,r21
  805594:	08076c00 	call	8076c0 <_realloc_r>
  805598:	102f883a 	mov	r23,r2
  80559c:	103fee1e 	bne	r2,zero,805558 <__alt_data_end+0xff805558>
  8055a0:	81400417 	ldw	r5,16(r16)
  8055a4:	a809883a 	mov	r4,r21
  8055a8:	0804e1c0 	call	804e1c <_free_r>
  8055ac:	8080030b 	ldhu	r2,12(r16)
  8055b0:	00ffdfc4 	movi	r3,-129
  8055b4:	1884703a 	and	r2,r3,r2
  8055b8:	00c00304 	movi	r3,12
  8055bc:	a8c00015 	stw	r3,0(r21)
  8055c0:	003f5906 	br	805328 <__alt_data_end+0xff805328>
  8055c4:	94c00044 	addi	r19,r18,1
  8055c8:	02000044 	movi	r8,1
  8055cc:	003f6006 	br	805350 <__alt_data_end+0xff805350>
  8055d0:	00bfffc4 	movi	r2,-1
  8055d4:	003f0306 	br	8051e4 <__alt_data_end+0xff8051e4>
  8055d8:	00800304 	movi	r2,12
  8055dc:	a8800015 	stw	r2,0(r21)
  8055e0:	8080030b 	ldhu	r2,12(r16)
  8055e4:	003f5006 	br	805328 <__alt_data_end+0xff805328>

008055e8 <_fwalk>:
  8055e8:	defff704 	addi	sp,sp,-36
  8055ec:	dd000415 	stw	r20,16(sp)
  8055f0:	dfc00815 	stw	ra,32(sp)
  8055f4:	ddc00715 	stw	r23,28(sp)
  8055f8:	dd800615 	stw	r22,24(sp)
  8055fc:	dd400515 	stw	r21,20(sp)
  805600:	dcc00315 	stw	r19,12(sp)
  805604:	dc800215 	stw	r18,8(sp)
  805608:	dc400115 	stw	r17,4(sp)
  80560c:	dc000015 	stw	r16,0(sp)
  805610:	2500b804 	addi	r20,r4,736
  805614:	a0002326 	beq	r20,zero,8056a4 <_fwalk+0xbc>
  805618:	282b883a 	mov	r21,r5
  80561c:	002f883a 	mov	r23,zero
  805620:	05800044 	movi	r22,1
  805624:	04ffffc4 	movi	r19,-1
  805628:	a4400117 	ldw	r17,4(r20)
  80562c:	a4800217 	ldw	r18,8(r20)
  805630:	8c7fffc4 	addi	r17,r17,-1
  805634:	88000d16 	blt	r17,zero,80566c <_fwalk+0x84>
  805638:	94000304 	addi	r16,r18,12
  80563c:	94800384 	addi	r18,r18,14
  805640:	8080000b 	ldhu	r2,0(r16)
  805644:	8c7fffc4 	addi	r17,r17,-1
  805648:	813ffd04 	addi	r4,r16,-12
  80564c:	b080042e 	bgeu	r22,r2,805660 <_fwalk+0x78>
  805650:	9080000f 	ldh	r2,0(r18)
  805654:	14c00226 	beq	r2,r19,805660 <_fwalk+0x78>
  805658:	a83ee83a 	callr	r21
  80565c:	b8aeb03a 	or	r23,r23,r2
  805660:	84001a04 	addi	r16,r16,104
  805664:	94801a04 	addi	r18,r18,104
  805668:	8cfff51e 	bne	r17,r19,805640 <__alt_data_end+0xff805640>
  80566c:	a5000017 	ldw	r20,0(r20)
  805670:	a03fed1e 	bne	r20,zero,805628 <__alt_data_end+0xff805628>
  805674:	b805883a 	mov	r2,r23
  805678:	dfc00817 	ldw	ra,32(sp)
  80567c:	ddc00717 	ldw	r23,28(sp)
  805680:	dd800617 	ldw	r22,24(sp)
  805684:	dd400517 	ldw	r21,20(sp)
  805688:	dd000417 	ldw	r20,16(sp)
  80568c:	dcc00317 	ldw	r19,12(sp)
  805690:	dc800217 	ldw	r18,8(sp)
  805694:	dc400117 	ldw	r17,4(sp)
  805698:	dc000017 	ldw	r16,0(sp)
  80569c:	dec00904 	addi	sp,sp,36
  8056a0:	f800283a 	ret
  8056a4:	002f883a 	mov	r23,zero
  8056a8:	003ff206 	br	805674 <__alt_data_end+0xff805674>

008056ac <_fwalk_reent>:
  8056ac:	defff704 	addi	sp,sp,-36
  8056b0:	dd000415 	stw	r20,16(sp)
  8056b4:	dfc00815 	stw	ra,32(sp)
  8056b8:	ddc00715 	stw	r23,28(sp)
  8056bc:	dd800615 	stw	r22,24(sp)
  8056c0:	dd400515 	stw	r21,20(sp)
  8056c4:	dcc00315 	stw	r19,12(sp)
  8056c8:	dc800215 	stw	r18,8(sp)
  8056cc:	dc400115 	stw	r17,4(sp)
  8056d0:	dc000015 	stw	r16,0(sp)
  8056d4:	2500b804 	addi	r20,r4,736
  8056d8:	a0002326 	beq	r20,zero,805768 <_fwalk_reent+0xbc>
  8056dc:	282b883a 	mov	r21,r5
  8056e0:	2027883a 	mov	r19,r4
  8056e4:	002f883a 	mov	r23,zero
  8056e8:	05800044 	movi	r22,1
  8056ec:	04bfffc4 	movi	r18,-1
  8056f0:	a4400117 	ldw	r17,4(r20)
  8056f4:	a4000217 	ldw	r16,8(r20)
  8056f8:	8c7fffc4 	addi	r17,r17,-1
  8056fc:	88000c16 	blt	r17,zero,805730 <_fwalk_reent+0x84>
  805700:	84000304 	addi	r16,r16,12
  805704:	8080000b 	ldhu	r2,0(r16)
  805708:	8c7fffc4 	addi	r17,r17,-1
  80570c:	817ffd04 	addi	r5,r16,-12
  805710:	b080052e 	bgeu	r22,r2,805728 <_fwalk_reent+0x7c>
  805714:	8080008f 	ldh	r2,2(r16)
  805718:	9809883a 	mov	r4,r19
  80571c:	14800226 	beq	r2,r18,805728 <_fwalk_reent+0x7c>
  805720:	a83ee83a 	callr	r21
  805724:	b8aeb03a 	or	r23,r23,r2
  805728:	84001a04 	addi	r16,r16,104
  80572c:	8cbff51e 	bne	r17,r18,805704 <__alt_data_end+0xff805704>
  805730:	a5000017 	ldw	r20,0(r20)
  805734:	a03fee1e 	bne	r20,zero,8056f0 <__alt_data_end+0xff8056f0>
  805738:	b805883a 	mov	r2,r23
  80573c:	dfc00817 	ldw	ra,32(sp)
  805740:	ddc00717 	ldw	r23,28(sp)
  805744:	dd800617 	ldw	r22,24(sp)
  805748:	dd400517 	ldw	r21,20(sp)
  80574c:	dd000417 	ldw	r20,16(sp)
  805750:	dcc00317 	ldw	r19,12(sp)
  805754:	dc800217 	ldw	r18,8(sp)
  805758:	dc400117 	ldw	r17,4(sp)
  80575c:	dc000017 	ldw	r16,0(sp)
  805760:	dec00904 	addi	sp,sp,36
  805764:	f800283a 	ret
  805768:	002f883a 	mov	r23,zero
  80576c:	003ff206 	br	805738 <__alt_data_end+0xff805738>

00805770 <_setlocale_r>:
  805770:	30001b26 	beq	r6,zero,8057e0 <_setlocale_r+0x70>
  805774:	01402074 	movhi	r5,129
  805778:	defffe04 	addi	sp,sp,-8
  80577c:	297e7504 	addi	r5,r5,-1580
  805780:	3009883a 	mov	r4,r6
  805784:	dc000015 	stw	r16,0(sp)
  805788:	dfc00115 	stw	ra,4(sp)
  80578c:	3021883a 	mov	r16,r6
  805790:	0807e280 	call	807e28 <strcmp>
  805794:	1000061e 	bne	r2,zero,8057b0 <_setlocale_r+0x40>
  805798:	00802074 	movhi	r2,129
  80579c:	10be7404 	addi	r2,r2,-1584
  8057a0:	dfc00117 	ldw	ra,4(sp)
  8057a4:	dc000017 	ldw	r16,0(sp)
  8057a8:	dec00204 	addi	sp,sp,8
  8057ac:	f800283a 	ret
  8057b0:	01402074 	movhi	r5,129
  8057b4:	297e7404 	addi	r5,r5,-1584
  8057b8:	8009883a 	mov	r4,r16
  8057bc:	0807e280 	call	807e28 <strcmp>
  8057c0:	103ff526 	beq	r2,zero,805798 <__alt_data_end+0xff805798>
  8057c4:	01402074 	movhi	r5,129
  8057c8:	297e5f04 	addi	r5,r5,-1668
  8057cc:	8009883a 	mov	r4,r16
  8057d0:	0807e280 	call	807e28 <strcmp>
  8057d4:	103ff026 	beq	r2,zero,805798 <__alt_data_end+0xff805798>
  8057d8:	0005883a 	mov	r2,zero
  8057dc:	003ff006 	br	8057a0 <__alt_data_end+0xff8057a0>
  8057e0:	00802074 	movhi	r2,129
  8057e4:	10be7404 	addi	r2,r2,-1584
  8057e8:	f800283a 	ret

008057ec <__locale_charset>:
  8057ec:	00802074 	movhi	r2,129
  8057f0:	10bfe504 	addi	r2,r2,-108
  8057f4:	f800283a 	ret

008057f8 <__locale_mb_cur_max>:
  8057f8:	00802074 	movhi	r2,129
  8057fc:	10858104 	addi	r2,r2,5636
  805800:	10800017 	ldw	r2,0(r2)
  805804:	f800283a 	ret

00805808 <__locale_msgcharset>:
  805808:	00802074 	movhi	r2,129
  80580c:	10bfdd04 	addi	r2,r2,-140
  805810:	f800283a 	ret

00805814 <__locale_cjk_lang>:
  805814:	0005883a 	mov	r2,zero
  805818:	f800283a 	ret

0080581c <_localeconv_r>:
  80581c:	00802074 	movhi	r2,129
  805820:	10bfed04 	addi	r2,r2,-76
  805824:	f800283a 	ret

00805828 <setlocale>:
  805828:	00802074 	movhi	r2,129
  80582c:	10858004 	addi	r2,r2,5632
  805830:	280d883a 	mov	r6,r5
  805834:	200b883a 	mov	r5,r4
  805838:	11000017 	ldw	r4,0(r2)
  80583c:	08057701 	jmpi	805770 <_setlocale_r>

00805840 <localeconv>:
  805840:	00802074 	movhi	r2,129
  805844:	10bfed04 	addi	r2,r2,-76
  805848:	f800283a 	ret

0080584c <__smakebuf_r>:
  80584c:	2880030b 	ldhu	r2,12(r5)
  805850:	10c0008c 	andi	r3,r2,2
  805854:	1800411e 	bne	r3,zero,80595c <__smakebuf_r+0x110>
  805858:	deffec04 	addi	sp,sp,-80
  80585c:	dc000f15 	stw	r16,60(sp)
  805860:	2821883a 	mov	r16,r5
  805864:	2940038f 	ldh	r5,14(r5)
  805868:	dc401015 	stw	r17,64(sp)
  80586c:	dfc01315 	stw	ra,76(sp)
  805870:	dcc01215 	stw	r19,72(sp)
  805874:	dc801115 	stw	r18,68(sp)
  805878:	2023883a 	mov	r17,r4
  80587c:	28001c16 	blt	r5,zero,8058f0 <__smakebuf_r+0xa4>
  805880:	d80d883a 	mov	r6,sp
  805884:	08099d00 	call	8099d0 <_fstat_r>
  805888:	10001816 	blt	r2,zero,8058ec <__smakebuf_r+0xa0>
  80588c:	d8800117 	ldw	r2,4(sp)
  805890:	00e00014 	movui	r3,32768
  805894:	10bc000c 	andi	r2,r2,61440
  805898:	14c80020 	cmpeqi	r19,r2,8192
  80589c:	10c03726 	beq	r2,r3,80597c <__smakebuf_r+0x130>
  8058a0:	80c0030b 	ldhu	r3,12(r16)
  8058a4:	18c20014 	ori	r3,r3,2048
  8058a8:	80c0030d 	sth	r3,12(r16)
  8058ac:	00c80004 	movi	r3,8192
  8058b0:	10c0521e 	bne	r2,r3,8059fc <__smakebuf_r+0x1b0>
  8058b4:	8140038f 	ldh	r5,14(r16)
  8058b8:	8809883a 	mov	r4,r17
  8058bc:	0809a2c0 	call	809a2c <_isatty_r>
  8058c0:	10004c26 	beq	r2,zero,8059f4 <__smakebuf_r+0x1a8>
  8058c4:	8080030b 	ldhu	r2,12(r16)
  8058c8:	80c010c4 	addi	r3,r16,67
  8058cc:	80c00015 	stw	r3,0(r16)
  8058d0:	10800054 	ori	r2,r2,1
  8058d4:	8080030d 	sth	r2,12(r16)
  8058d8:	00800044 	movi	r2,1
  8058dc:	80c00415 	stw	r3,16(r16)
  8058e0:	80800515 	stw	r2,20(r16)
  8058e4:	04810004 	movi	r18,1024
  8058e8:	00000706 	br	805908 <__smakebuf_r+0xbc>
  8058ec:	8080030b 	ldhu	r2,12(r16)
  8058f0:	10c0200c 	andi	r3,r2,128
  8058f4:	18001f1e 	bne	r3,zero,805974 <__smakebuf_r+0x128>
  8058f8:	04810004 	movi	r18,1024
  8058fc:	10820014 	ori	r2,r2,2048
  805900:	8080030d 	sth	r2,12(r16)
  805904:	0027883a 	mov	r19,zero
  805908:	900b883a 	mov	r5,r18
  80590c:	8809883a 	mov	r4,r17
  805910:	0805a080 	call	805a08 <_malloc_r>
  805914:	10002c26 	beq	r2,zero,8059c8 <__smakebuf_r+0x17c>
  805918:	80c0030b 	ldhu	r3,12(r16)
  80591c:	01002034 	movhi	r4,128
  805920:	21125804 	addi	r4,r4,18784
  805924:	89000f15 	stw	r4,60(r17)
  805928:	18c02014 	ori	r3,r3,128
  80592c:	80c0030d 	sth	r3,12(r16)
  805930:	80800015 	stw	r2,0(r16)
  805934:	80800415 	stw	r2,16(r16)
  805938:	84800515 	stw	r18,20(r16)
  80593c:	98001a1e 	bne	r19,zero,8059a8 <__smakebuf_r+0x15c>
  805940:	dfc01317 	ldw	ra,76(sp)
  805944:	dcc01217 	ldw	r19,72(sp)
  805948:	dc801117 	ldw	r18,68(sp)
  80594c:	dc401017 	ldw	r17,64(sp)
  805950:	dc000f17 	ldw	r16,60(sp)
  805954:	dec01404 	addi	sp,sp,80
  805958:	f800283a 	ret
  80595c:	288010c4 	addi	r2,r5,67
  805960:	28800015 	stw	r2,0(r5)
  805964:	28800415 	stw	r2,16(r5)
  805968:	00800044 	movi	r2,1
  80596c:	28800515 	stw	r2,20(r5)
  805970:	f800283a 	ret
  805974:	04801004 	movi	r18,64
  805978:	003fe006 	br	8058fc <__alt_data_end+0xff8058fc>
  80597c:	81000a17 	ldw	r4,40(r16)
  805980:	00c02034 	movhi	r3,128
  805984:	18df7104 	addi	r3,r3,32196
  805988:	20ffc51e 	bne	r4,r3,8058a0 <__alt_data_end+0xff8058a0>
  80598c:	8080030b 	ldhu	r2,12(r16)
  805990:	04810004 	movi	r18,1024
  805994:	84801315 	stw	r18,76(r16)
  805998:	1484b03a 	or	r2,r2,r18
  80599c:	8080030d 	sth	r2,12(r16)
  8059a0:	0027883a 	mov	r19,zero
  8059a4:	003fd806 	br	805908 <__alt_data_end+0xff805908>
  8059a8:	8140038f 	ldh	r5,14(r16)
  8059ac:	8809883a 	mov	r4,r17
  8059b0:	0809a2c0 	call	809a2c <_isatty_r>
  8059b4:	103fe226 	beq	r2,zero,805940 <__alt_data_end+0xff805940>
  8059b8:	8080030b 	ldhu	r2,12(r16)
  8059bc:	10800054 	ori	r2,r2,1
  8059c0:	8080030d 	sth	r2,12(r16)
  8059c4:	003fde06 	br	805940 <__alt_data_end+0xff805940>
  8059c8:	8080030b 	ldhu	r2,12(r16)
  8059cc:	10c0800c 	andi	r3,r2,512
  8059d0:	183fdb1e 	bne	r3,zero,805940 <__alt_data_end+0xff805940>
  8059d4:	10800094 	ori	r2,r2,2
  8059d8:	80c010c4 	addi	r3,r16,67
  8059dc:	8080030d 	sth	r2,12(r16)
  8059e0:	00800044 	movi	r2,1
  8059e4:	80c00015 	stw	r3,0(r16)
  8059e8:	80c00415 	stw	r3,16(r16)
  8059ec:	80800515 	stw	r2,20(r16)
  8059f0:	003fd306 	br	805940 <__alt_data_end+0xff805940>
  8059f4:	04810004 	movi	r18,1024
  8059f8:	003fc306 	br	805908 <__alt_data_end+0xff805908>
  8059fc:	0027883a 	mov	r19,zero
  805a00:	04810004 	movi	r18,1024
  805a04:	003fc006 	br	805908 <__alt_data_end+0xff805908>

00805a08 <_malloc_r>:
  805a08:	defff504 	addi	sp,sp,-44
  805a0c:	dc800315 	stw	r18,12(sp)
  805a10:	dfc00a15 	stw	ra,40(sp)
  805a14:	df000915 	stw	fp,36(sp)
  805a18:	ddc00815 	stw	r23,32(sp)
  805a1c:	dd800715 	stw	r22,28(sp)
  805a20:	dd400615 	stw	r21,24(sp)
  805a24:	dd000515 	stw	r20,20(sp)
  805a28:	dcc00415 	stw	r19,16(sp)
  805a2c:	dc400215 	stw	r17,8(sp)
  805a30:	dc000115 	stw	r16,4(sp)
  805a34:	288002c4 	addi	r2,r5,11
  805a38:	00c00584 	movi	r3,22
  805a3c:	2025883a 	mov	r18,r4
  805a40:	18807f2e 	bgeu	r3,r2,805c40 <_malloc_r+0x238>
  805a44:	047ffe04 	movi	r17,-8
  805a48:	1462703a 	and	r17,r2,r17
  805a4c:	8800a316 	blt	r17,zero,805cdc <_malloc_r+0x2d4>
  805a50:	8940a236 	bltu	r17,r5,805cdc <_malloc_r+0x2d4>
  805a54:	080d6640 	call	80d664 <__malloc_lock>
  805a58:	00807dc4 	movi	r2,503
  805a5c:	1441e92e 	bgeu	r2,r17,806204 <_malloc_r+0x7fc>
  805a60:	8804d27a 	srli	r2,r17,9
  805a64:	1000a126 	beq	r2,zero,805cec <_malloc_r+0x2e4>
  805a68:	00c00104 	movi	r3,4
  805a6c:	18811e36 	bltu	r3,r2,805ee8 <_malloc_r+0x4e0>
  805a70:	8804d1ba 	srli	r2,r17,6
  805a74:	12000e44 	addi	r8,r2,57
  805a78:	11c00e04 	addi	r7,r2,56
  805a7c:	4209883a 	add	r4,r8,r8
  805a80:	04c02074 	movhi	r19,129
  805a84:	2109883a 	add	r4,r4,r4
  805a88:	9cfffb04 	addi	r19,r19,-20
  805a8c:	2109883a 	add	r4,r4,r4
  805a90:	9909883a 	add	r4,r19,r4
  805a94:	24000117 	ldw	r16,4(r4)
  805a98:	213ffe04 	addi	r4,r4,-8
  805a9c:	24009726 	beq	r4,r16,805cfc <_malloc_r+0x2f4>
  805aa0:	80800117 	ldw	r2,4(r16)
  805aa4:	01bfff04 	movi	r6,-4
  805aa8:	014003c4 	movi	r5,15
  805aac:	1184703a 	and	r2,r2,r6
  805ab0:	1447c83a 	sub	r3,r2,r17
  805ab4:	28c00716 	blt	r5,r3,805ad4 <_malloc_r+0xcc>
  805ab8:	1800920e 	bge	r3,zero,805d04 <_malloc_r+0x2fc>
  805abc:	84000317 	ldw	r16,12(r16)
  805ac0:	24008e26 	beq	r4,r16,805cfc <_malloc_r+0x2f4>
  805ac4:	80800117 	ldw	r2,4(r16)
  805ac8:	1184703a 	and	r2,r2,r6
  805acc:	1447c83a 	sub	r3,r2,r17
  805ad0:	28fff90e 	bge	r5,r3,805ab8 <__alt_data_end+0xff805ab8>
  805ad4:	3809883a 	mov	r4,r7
  805ad8:	01802074 	movhi	r6,129
  805adc:	9c000417 	ldw	r16,16(r19)
  805ae0:	31bffb04 	addi	r6,r6,-20
  805ae4:	32000204 	addi	r8,r6,8
  805ae8:	82013426 	beq	r16,r8,805fbc <_malloc_r+0x5b4>
  805aec:	80c00117 	ldw	r3,4(r16)
  805af0:	00bfff04 	movi	r2,-4
  805af4:	188e703a 	and	r7,r3,r2
  805af8:	3c45c83a 	sub	r2,r7,r17
  805afc:	00c003c4 	movi	r3,15
  805b00:	18811f16 	blt	r3,r2,805f80 <_malloc_r+0x578>
  805b04:	32000515 	stw	r8,20(r6)
  805b08:	32000415 	stw	r8,16(r6)
  805b0c:	10007f0e 	bge	r2,zero,805d0c <_malloc_r+0x304>
  805b10:	00807fc4 	movi	r2,511
  805b14:	11c0fd36 	bltu	r2,r7,805f0c <_malloc_r+0x504>
  805b18:	3806d0fa 	srli	r3,r7,3
  805b1c:	01c00044 	movi	r7,1
  805b20:	30800117 	ldw	r2,4(r6)
  805b24:	19400044 	addi	r5,r3,1
  805b28:	294b883a 	add	r5,r5,r5
  805b2c:	1807d0ba 	srai	r3,r3,2
  805b30:	294b883a 	add	r5,r5,r5
  805b34:	294b883a 	add	r5,r5,r5
  805b38:	298b883a 	add	r5,r5,r6
  805b3c:	38c6983a 	sll	r3,r7,r3
  805b40:	29c00017 	ldw	r7,0(r5)
  805b44:	2a7ffe04 	addi	r9,r5,-8
  805b48:	1886b03a 	or	r3,r3,r2
  805b4c:	82400315 	stw	r9,12(r16)
  805b50:	81c00215 	stw	r7,8(r16)
  805b54:	30c00115 	stw	r3,4(r6)
  805b58:	2c000015 	stw	r16,0(r5)
  805b5c:	3c000315 	stw	r16,12(r7)
  805b60:	2005d0ba 	srai	r2,r4,2
  805b64:	01400044 	movi	r5,1
  805b68:	288a983a 	sll	r5,r5,r2
  805b6c:	19406f36 	bltu	r3,r5,805d2c <_malloc_r+0x324>
  805b70:	28c4703a 	and	r2,r5,r3
  805b74:	10000a1e 	bne	r2,zero,805ba0 <_malloc_r+0x198>
  805b78:	00bfff04 	movi	r2,-4
  805b7c:	294b883a 	add	r5,r5,r5
  805b80:	2088703a 	and	r4,r4,r2
  805b84:	28c4703a 	and	r2,r5,r3
  805b88:	21000104 	addi	r4,r4,4
  805b8c:	1000041e 	bne	r2,zero,805ba0 <_malloc_r+0x198>
  805b90:	294b883a 	add	r5,r5,r5
  805b94:	28c4703a 	and	r2,r5,r3
  805b98:	21000104 	addi	r4,r4,4
  805b9c:	103ffc26 	beq	r2,zero,805b90 <__alt_data_end+0xff805b90>
  805ba0:	02bfff04 	movi	r10,-4
  805ba4:	024003c4 	movi	r9,15
  805ba8:	21800044 	addi	r6,r4,1
  805bac:	318d883a 	add	r6,r6,r6
  805bb0:	318d883a 	add	r6,r6,r6
  805bb4:	318d883a 	add	r6,r6,r6
  805bb8:	998d883a 	add	r6,r19,r6
  805bbc:	333ffe04 	addi	r12,r6,-8
  805bc0:	2017883a 	mov	r11,r4
  805bc4:	31800104 	addi	r6,r6,4
  805bc8:	34000017 	ldw	r16,0(r6)
  805bcc:	31fffd04 	addi	r7,r6,-12
  805bd0:	81c0041e 	bne	r16,r7,805be4 <_malloc_r+0x1dc>
  805bd4:	0000fb06 	br	805fc4 <_malloc_r+0x5bc>
  805bd8:	1801030e 	bge	r3,zero,805fe8 <_malloc_r+0x5e0>
  805bdc:	84000317 	ldw	r16,12(r16)
  805be0:	81c0f826 	beq	r16,r7,805fc4 <_malloc_r+0x5bc>
  805be4:	80800117 	ldw	r2,4(r16)
  805be8:	1284703a 	and	r2,r2,r10
  805bec:	1447c83a 	sub	r3,r2,r17
  805bf0:	48fff90e 	bge	r9,r3,805bd8 <__alt_data_end+0xff805bd8>
  805bf4:	80800317 	ldw	r2,12(r16)
  805bf8:	81000217 	ldw	r4,8(r16)
  805bfc:	89400054 	ori	r5,r17,1
  805c00:	81400115 	stw	r5,4(r16)
  805c04:	20800315 	stw	r2,12(r4)
  805c08:	11000215 	stw	r4,8(r2)
  805c0c:	8463883a 	add	r17,r16,r17
  805c10:	9c400515 	stw	r17,20(r19)
  805c14:	9c400415 	stw	r17,16(r19)
  805c18:	18800054 	ori	r2,r3,1
  805c1c:	88800115 	stw	r2,4(r17)
  805c20:	8a000315 	stw	r8,12(r17)
  805c24:	8a000215 	stw	r8,8(r17)
  805c28:	88e3883a 	add	r17,r17,r3
  805c2c:	88c00015 	stw	r3,0(r17)
  805c30:	9009883a 	mov	r4,r18
  805c34:	080d6880 	call	80d688 <__malloc_unlock>
  805c38:	80800204 	addi	r2,r16,8
  805c3c:	00001b06 	br	805cac <_malloc_r+0x2a4>
  805c40:	04400404 	movi	r17,16
  805c44:	89402536 	bltu	r17,r5,805cdc <_malloc_r+0x2d4>
  805c48:	080d6640 	call	80d664 <__malloc_lock>
  805c4c:	00800184 	movi	r2,6
  805c50:	01000084 	movi	r4,2
  805c54:	04c02074 	movhi	r19,129
  805c58:	1085883a 	add	r2,r2,r2
  805c5c:	9cfffb04 	addi	r19,r19,-20
  805c60:	1085883a 	add	r2,r2,r2
  805c64:	9885883a 	add	r2,r19,r2
  805c68:	14000117 	ldw	r16,4(r2)
  805c6c:	10fffe04 	addi	r3,r2,-8
  805c70:	80c0d926 	beq	r16,r3,805fd8 <_malloc_r+0x5d0>
  805c74:	80c00117 	ldw	r3,4(r16)
  805c78:	81000317 	ldw	r4,12(r16)
  805c7c:	00bfff04 	movi	r2,-4
  805c80:	1884703a 	and	r2,r3,r2
  805c84:	81400217 	ldw	r5,8(r16)
  805c88:	8085883a 	add	r2,r16,r2
  805c8c:	10c00117 	ldw	r3,4(r2)
  805c90:	29000315 	stw	r4,12(r5)
  805c94:	21400215 	stw	r5,8(r4)
  805c98:	18c00054 	ori	r3,r3,1
  805c9c:	10c00115 	stw	r3,4(r2)
  805ca0:	9009883a 	mov	r4,r18
  805ca4:	080d6880 	call	80d688 <__malloc_unlock>
  805ca8:	80800204 	addi	r2,r16,8
  805cac:	dfc00a17 	ldw	ra,40(sp)
  805cb0:	df000917 	ldw	fp,36(sp)
  805cb4:	ddc00817 	ldw	r23,32(sp)
  805cb8:	dd800717 	ldw	r22,28(sp)
  805cbc:	dd400617 	ldw	r21,24(sp)
  805cc0:	dd000517 	ldw	r20,20(sp)
  805cc4:	dcc00417 	ldw	r19,16(sp)
  805cc8:	dc800317 	ldw	r18,12(sp)
  805ccc:	dc400217 	ldw	r17,8(sp)
  805cd0:	dc000117 	ldw	r16,4(sp)
  805cd4:	dec00b04 	addi	sp,sp,44
  805cd8:	f800283a 	ret
  805cdc:	00800304 	movi	r2,12
  805ce0:	90800015 	stw	r2,0(r18)
  805ce4:	0005883a 	mov	r2,zero
  805ce8:	003ff006 	br	805cac <__alt_data_end+0xff805cac>
  805cec:	01002004 	movi	r4,128
  805cf0:	02001004 	movi	r8,64
  805cf4:	01c00fc4 	movi	r7,63
  805cf8:	003f6106 	br	805a80 <__alt_data_end+0xff805a80>
  805cfc:	4009883a 	mov	r4,r8
  805d00:	003f7506 	br	805ad8 <__alt_data_end+0xff805ad8>
  805d04:	81000317 	ldw	r4,12(r16)
  805d08:	003fde06 	br	805c84 <__alt_data_end+0xff805c84>
  805d0c:	81c5883a 	add	r2,r16,r7
  805d10:	11400117 	ldw	r5,4(r2)
  805d14:	9009883a 	mov	r4,r18
  805d18:	29400054 	ori	r5,r5,1
  805d1c:	11400115 	stw	r5,4(r2)
  805d20:	080d6880 	call	80d688 <__malloc_unlock>
  805d24:	80800204 	addi	r2,r16,8
  805d28:	003fe006 	br	805cac <__alt_data_end+0xff805cac>
  805d2c:	9c000217 	ldw	r16,8(r19)
  805d30:	00bfff04 	movi	r2,-4
  805d34:	85800117 	ldw	r22,4(r16)
  805d38:	b0ac703a 	and	r22,r22,r2
  805d3c:	b4400336 	bltu	r22,r17,805d4c <_malloc_r+0x344>
  805d40:	b445c83a 	sub	r2,r22,r17
  805d44:	00c003c4 	movi	r3,15
  805d48:	18805d16 	blt	r3,r2,805ec0 <_malloc_r+0x4b8>
  805d4c:	05c02074 	movhi	r23,129
  805d50:	00802074 	movhi	r2,129
  805d54:	108c4f04 	addi	r2,r2,12604
  805d58:	bdc58204 	addi	r23,r23,5640
  805d5c:	15400017 	ldw	r21,0(r2)
  805d60:	b8c00017 	ldw	r3,0(r23)
  805d64:	00bfffc4 	movi	r2,-1
  805d68:	858d883a 	add	r6,r16,r22
  805d6c:	8d6b883a 	add	r21,r17,r21
  805d70:	1880ea26 	beq	r3,r2,80611c <_malloc_r+0x714>
  805d74:	ad4403c4 	addi	r21,r21,4111
  805d78:	00bc0004 	movi	r2,-4096
  805d7c:	a8aa703a 	and	r21,r21,r2
  805d80:	a80b883a 	mov	r5,r21
  805d84:	9009883a 	mov	r4,r18
  805d88:	d9800015 	stw	r6,0(sp)
  805d8c:	0807c980 	call	807c98 <_sbrk_r>
  805d90:	1029883a 	mov	r20,r2
  805d94:	00bfffc4 	movi	r2,-1
  805d98:	d9800017 	ldw	r6,0(sp)
  805d9c:	a080e826 	beq	r20,r2,806140 <_malloc_r+0x738>
  805da0:	a180a636 	bltu	r20,r6,80603c <_malloc_r+0x634>
  805da4:	07002074 	movhi	fp,129
  805da8:	e70c5704 	addi	fp,fp,12636
  805dac:	e0800017 	ldw	r2,0(fp)
  805db0:	a887883a 	add	r3,r21,r2
  805db4:	e0c00015 	stw	r3,0(fp)
  805db8:	3500e626 	beq	r6,r20,806154 <_malloc_r+0x74c>
  805dbc:	b9000017 	ldw	r4,0(r23)
  805dc0:	00bfffc4 	movi	r2,-1
  805dc4:	2080ee26 	beq	r4,r2,806180 <_malloc_r+0x778>
  805dc8:	a185c83a 	sub	r2,r20,r6
  805dcc:	10c5883a 	add	r2,r2,r3
  805dd0:	e0800015 	stw	r2,0(fp)
  805dd4:	a0c001cc 	andi	r3,r20,7
  805dd8:	1800bc26 	beq	r3,zero,8060cc <_malloc_r+0x6c4>
  805ddc:	a0e9c83a 	sub	r20,r20,r3
  805de0:	00840204 	movi	r2,4104
  805de4:	a5000204 	addi	r20,r20,8
  805de8:	10c7c83a 	sub	r3,r2,r3
  805dec:	a545883a 	add	r2,r20,r21
  805df0:	1083ffcc 	andi	r2,r2,4095
  805df4:	18abc83a 	sub	r21,r3,r2
  805df8:	a80b883a 	mov	r5,r21
  805dfc:	9009883a 	mov	r4,r18
  805e00:	0807c980 	call	807c98 <_sbrk_r>
  805e04:	00ffffc4 	movi	r3,-1
  805e08:	10c0e126 	beq	r2,r3,806190 <_malloc_r+0x788>
  805e0c:	1505c83a 	sub	r2,r2,r20
  805e10:	1545883a 	add	r2,r2,r21
  805e14:	10800054 	ori	r2,r2,1
  805e18:	e0c00017 	ldw	r3,0(fp)
  805e1c:	9d000215 	stw	r20,8(r19)
  805e20:	a0800115 	stw	r2,4(r20)
  805e24:	a8c7883a 	add	r3,r21,r3
  805e28:	e0c00015 	stw	r3,0(fp)
  805e2c:	84c00e26 	beq	r16,r19,805e68 <_malloc_r+0x460>
  805e30:	018003c4 	movi	r6,15
  805e34:	3580a72e 	bgeu	r6,r22,8060d4 <_malloc_r+0x6cc>
  805e38:	81400117 	ldw	r5,4(r16)
  805e3c:	013ffe04 	movi	r4,-8
  805e40:	b0bffd04 	addi	r2,r22,-12
  805e44:	1104703a 	and	r2,r2,r4
  805e48:	2900004c 	andi	r4,r5,1
  805e4c:	2088b03a 	or	r4,r4,r2
  805e50:	81000115 	stw	r4,4(r16)
  805e54:	01400144 	movi	r5,5
  805e58:	8089883a 	add	r4,r16,r2
  805e5c:	21400115 	stw	r5,4(r4)
  805e60:	21400215 	stw	r5,8(r4)
  805e64:	3080cd36 	bltu	r6,r2,80619c <_malloc_r+0x794>
  805e68:	00802074 	movhi	r2,129
  805e6c:	108c4e04 	addi	r2,r2,12600
  805e70:	11000017 	ldw	r4,0(r2)
  805e74:	20c0012e 	bgeu	r4,r3,805e7c <_malloc_r+0x474>
  805e78:	10c00015 	stw	r3,0(r2)
  805e7c:	00802074 	movhi	r2,129
  805e80:	108c4d04 	addi	r2,r2,12596
  805e84:	11000017 	ldw	r4,0(r2)
  805e88:	9c000217 	ldw	r16,8(r19)
  805e8c:	20c0012e 	bgeu	r4,r3,805e94 <_malloc_r+0x48c>
  805e90:	10c00015 	stw	r3,0(r2)
  805e94:	80c00117 	ldw	r3,4(r16)
  805e98:	00bfff04 	movi	r2,-4
  805e9c:	1886703a 	and	r3,r3,r2
  805ea0:	1c45c83a 	sub	r2,r3,r17
  805ea4:	1c400236 	bltu	r3,r17,805eb0 <_malloc_r+0x4a8>
  805ea8:	00c003c4 	movi	r3,15
  805eac:	18800416 	blt	r3,r2,805ec0 <_malloc_r+0x4b8>
  805eb0:	9009883a 	mov	r4,r18
  805eb4:	080d6880 	call	80d688 <__malloc_unlock>
  805eb8:	0005883a 	mov	r2,zero
  805ebc:	003f7b06 	br	805cac <__alt_data_end+0xff805cac>
  805ec0:	88c00054 	ori	r3,r17,1
  805ec4:	80c00115 	stw	r3,4(r16)
  805ec8:	8463883a 	add	r17,r16,r17
  805ecc:	10800054 	ori	r2,r2,1
  805ed0:	9c400215 	stw	r17,8(r19)
  805ed4:	88800115 	stw	r2,4(r17)
  805ed8:	9009883a 	mov	r4,r18
  805edc:	080d6880 	call	80d688 <__malloc_unlock>
  805ee0:	80800204 	addi	r2,r16,8
  805ee4:	003f7106 	br	805cac <__alt_data_end+0xff805cac>
  805ee8:	00c00504 	movi	r3,20
  805eec:	18804a2e 	bgeu	r3,r2,806018 <_malloc_r+0x610>
  805ef0:	00c01504 	movi	r3,84
  805ef4:	18806e36 	bltu	r3,r2,8060b0 <_malloc_r+0x6a8>
  805ef8:	8804d33a 	srli	r2,r17,12
  805efc:	12001bc4 	addi	r8,r2,111
  805f00:	11c01b84 	addi	r7,r2,110
  805f04:	4209883a 	add	r4,r8,r8
  805f08:	003edd06 	br	805a80 <__alt_data_end+0xff805a80>
  805f0c:	3804d27a 	srli	r2,r7,9
  805f10:	00c00104 	movi	r3,4
  805f14:	1880442e 	bgeu	r3,r2,806028 <_malloc_r+0x620>
  805f18:	00c00504 	movi	r3,20
  805f1c:	18808136 	bltu	r3,r2,806124 <_malloc_r+0x71c>
  805f20:	11401704 	addi	r5,r2,92
  805f24:	10c016c4 	addi	r3,r2,91
  805f28:	294b883a 	add	r5,r5,r5
  805f2c:	294b883a 	add	r5,r5,r5
  805f30:	294b883a 	add	r5,r5,r5
  805f34:	994b883a 	add	r5,r19,r5
  805f38:	28800017 	ldw	r2,0(r5)
  805f3c:	01802074 	movhi	r6,129
  805f40:	297ffe04 	addi	r5,r5,-8
  805f44:	31bffb04 	addi	r6,r6,-20
  805f48:	28806526 	beq	r5,r2,8060e0 <_malloc_r+0x6d8>
  805f4c:	01bfff04 	movi	r6,-4
  805f50:	10c00117 	ldw	r3,4(r2)
  805f54:	1986703a 	and	r3,r3,r6
  805f58:	38c0022e 	bgeu	r7,r3,805f64 <_malloc_r+0x55c>
  805f5c:	10800217 	ldw	r2,8(r2)
  805f60:	28bffb1e 	bne	r5,r2,805f50 <__alt_data_end+0xff805f50>
  805f64:	11400317 	ldw	r5,12(r2)
  805f68:	98c00117 	ldw	r3,4(r19)
  805f6c:	81400315 	stw	r5,12(r16)
  805f70:	80800215 	stw	r2,8(r16)
  805f74:	2c000215 	stw	r16,8(r5)
  805f78:	14000315 	stw	r16,12(r2)
  805f7c:	003ef806 	br	805b60 <__alt_data_end+0xff805b60>
  805f80:	88c00054 	ori	r3,r17,1
  805f84:	80c00115 	stw	r3,4(r16)
  805f88:	8463883a 	add	r17,r16,r17
  805f8c:	34400515 	stw	r17,20(r6)
  805f90:	34400415 	stw	r17,16(r6)
  805f94:	10c00054 	ori	r3,r2,1
  805f98:	8a000315 	stw	r8,12(r17)
  805f9c:	8a000215 	stw	r8,8(r17)
  805fa0:	88c00115 	stw	r3,4(r17)
  805fa4:	88a3883a 	add	r17,r17,r2
  805fa8:	88800015 	stw	r2,0(r17)
  805fac:	9009883a 	mov	r4,r18
  805fb0:	080d6880 	call	80d688 <__malloc_unlock>
  805fb4:	80800204 	addi	r2,r16,8
  805fb8:	003f3c06 	br	805cac <__alt_data_end+0xff805cac>
  805fbc:	30c00117 	ldw	r3,4(r6)
  805fc0:	003ee706 	br	805b60 <__alt_data_end+0xff805b60>
  805fc4:	5ac00044 	addi	r11,r11,1
  805fc8:	588000cc 	andi	r2,r11,3
  805fcc:	31800204 	addi	r6,r6,8
  805fd0:	103efd1e 	bne	r2,zero,805bc8 <__alt_data_end+0xff805bc8>
  805fd4:	00002406 	br	806068 <_malloc_r+0x660>
  805fd8:	14000317 	ldw	r16,12(r2)
  805fdc:	143f251e 	bne	r2,r16,805c74 <__alt_data_end+0xff805c74>
  805fe0:	21000084 	addi	r4,r4,2
  805fe4:	003ebc06 	br	805ad8 <__alt_data_end+0xff805ad8>
  805fe8:	8085883a 	add	r2,r16,r2
  805fec:	10c00117 	ldw	r3,4(r2)
  805ff0:	81000317 	ldw	r4,12(r16)
  805ff4:	81400217 	ldw	r5,8(r16)
  805ff8:	18c00054 	ori	r3,r3,1
  805ffc:	10c00115 	stw	r3,4(r2)
  806000:	29000315 	stw	r4,12(r5)
  806004:	21400215 	stw	r5,8(r4)
  806008:	9009883a 	mov	r4,r18
  80600c:	080d6880 	call	80d688 <__malloc_unlock>
  806010:	80800204 	addi	r2,r16,8
  806014:	003f2506 	br	805cac <__alt_data_end+0xff805cac>
  806018:	12001704 	addi	r8,r2,92
  80601c:	11c016c4 	addi	r7,r2,91
  806020:	4209883a 	add	r4,r8,r8
  806024:	003e9606 	br	805a80 <__alt_data_end+0xff805a80>
  806028:	3804d1ba 	srli	r2,r7,6
  80602c:	11400e44 	addi	r5,r2,57
  806030:	10c00e04 	addi	r3,r2,56
  806034:	294b883a 	add	r5,r5,r5
  806038:	003fbc06 	br	805f2c <__alt_data_end+0xff805f2c>
  80603c:	84ff5926 	beq	r16,r19,805da4 <__alt_data_end+0xff805da4>
  806040:	00802074 	movhi	r2,129
  806044:	10bffb04 	addi	r2,r2,-20
  806048:	14000217 	ldw	r16,8(r2)
  80604c:	00bfff04 	movi	r2,-4
  806050:	80c00117 	ldw	r3,4(r16)
  806054:	1886703a 	and	r3,r3,r2
  806058:	003f9106 	br	805ea0 <__alt_data_end+0xff805ea0>
  80605c:	60800217 	ldw	r2,8(r12)
  806060:	213fffc4 	addi	r4,r4,-1
  806064:	1300651e 	bne	r2,r12,8061fc <_malloc_r+0x7f4>
  806068:	208000cc 	andi	r2,r4,3
  80606c:	633ffe04 	addi	r12,r12,-8
  806070:	103ffa1e 	bne	r2,zero,80605c <__alt_data_end+0xff80605c>
  806074:	98800117 	ldw	r2,4(r19)
  806078:	0146303a 	nor	r3,zero,r5
  80607c:	1884703a 	and	r2,r3,r2
  806080:	98800115 	stw	r2,4(r19)
  806084:	294b883a 	add	r5,r5,r5
  806088:	117f2836 	bltu	r2,r5,805d2c <__alt_data_end+0xff805d2c>
  80608c:	283f2726 	beq	r5,zero,805d2c <__alt_data_end+0xff805d2c>
  806090:	2886703a 	and	r3,r5,r2
  806094:	5809883a 	mov	r4,r11
  806098:	183ec31e 	bne	r3,zero,805ba8 <__alt_data_end+0xff805ba8>
  80609c:	294b883a 	add	r5,r5,r5
  8060a0:	2886703a 	and	r3,r5,r2
  8060a4:	21000104 	addi	r4,r4,4
  8060a8:	183ffc26 	beq	r3,zero,80609c <__alt_data_end+0xff80609c>
  8060ac:	003ebe06 	br	805ba8 <__alt_data_end+0xff805ba8>
  8060b0:	00c05504 	movi	r3,340
  8060b4:	18801236 	bltu	r3,r2,806100 <_malloc_r+0x6f8>
  8060b8:	8804d3fa 	srli	r2,r17,15
  8060bc:	12001e04 	addi	r8,r2,120
  8060c0:	11c01dc4 	addi	r7,r2,119
  8060c4:	4209883a 	add	r4,r8,r8
  8060c8:	003e6d06 	br	805a80 <__alt_data_end+0xff805a80>
  8060cc:	00c40004 	movi	r3,4096
  8060d0:	003f4606 	br	805dec <__alt_data_end+0xff805dec>
  8060d4:	00800044 	movi	r2,1
  8060d8:	a0800115 	stw	r2,4(r20)
  8060dc:	003f7406 	br	805eb0 <__alt_data_end+0xff805eb0>
  8060e0:	1805d0ba 	srai	r2,r3,2
  8060e4:	01c00044 	movi	r7,1
  8060e8:	30c00117 	ldw	r3,4(r6)
  8060ec:	388e983a 	sll	r7,r7,r2
  8060f0:	2805883a 	mov	r2,r5
  8060f4:	38c6b03a 	or	r3,r7,r3
  8060f8:	30c00115 	stw	r3,4(r6)
  8060fc:	003f9b06 	br	805f6c <__alt_data_end+0xff805f6c>
  806100:	00c15504 	movi	r3,1364
  806104:	18801a36 	bltu	r3,r2,806170 <_malloc_r+0x768>
  806108:	8804d4ba 	srli	r2,r17,18
  80610c:	12001f44 	addi	r8,r2,125
  806110:	11c01f04 	addi	r7,r2,124
  806114:	4209883a 	add	r4,r8,r8
  806118:	003e5906 	br	805a80 <__alt_data_end+0xff805a80>
  80611c:	ad400404 	addi	r21,r21,16
  806120:	003f1706 	br	805d80 <__alt_data_end+0xff805d80>
  806124:	00c01504 	movi	r3,84
  806128:	18802336 	bltu	r3,r2,8061b8 <_malloc_r+0x7b0>
  80612c:	3804d33a 	srli	r2,r7,12
  806130:	11401bc4 	addi	r5,r2,111
  806134:	10c01b84 	addi	r3,r2,110
  806138:	294b883a 	add	r5,r5,r5
  80613c:	003f7b06 	br	805f2c <__alt_data_end+0xff805f2c>
  806140:	9c000217 	ldw	r16,8(r19)
  806144:	00bfff04 	movi	r2,-4
  806148:	80c00117 	ldw	r3,4(r16)
  80614c:	1886703a 	and	r3,r3,r2
  806150:	003f5306 	br	805ea0 <__alt_data_end+0xff805ea0>
  806154:	3083ffcc 	andi	r2,r6,4095
  806158:	103f181e 	bne	r2,zero,805dbc <__alt_data_end+0xff805dbc>
  80615c:	99000217 	ldw	r4,8(r19)
  806160:	b545883a 	add	r2,r22,r21
  806164:	10800054 	ori	r2,r2,1
  806168:	20800115 	stw	r2,4(r4)
  80616c:	003f3e06 	br	805e68 <__alt_data_end+0xff805e68>
  806170:	01003f84 	movi	r4,254
  806174:	02001fc4 	movi	r8,127
  806178:	01c01f84 	movi	r7,126
  80617c:	003e4006 	br	805a80 <__alt_data_end+0xff805a80>
  806180:	00802074 	movhi	r2,129
  806184:	10858204 	addi	r2,r2,5640
  806188:	15000015 	stw	r20,0(r2)
  80618c:	003f1106 	br	805dd4 <__alt_data_end+0xff805dd4>
  806190:	00800044 	movi	r2,1
  806194:	002b883a 	mov	r21,zero
  806198:	003f1f06 	br	805e18 <__alt_data_end+0xff805e18>
  80619c:	81400204 	addi	r5,r16,8
  8061a0:	9009883a 	mov	r4,r18
  8061a4:	0804e1c0 	call	804e1c <_free_r>
  8061a8:	00802074 	movhi	r2,129
  8061ac:	108c5704 	addi	r2,r2,12636
  8061b0:	10c00017 	ldw	r3,0(r2)
  8061b4:	003f2c06 	br	805e68 <__alt_data_end+0xff805e68>
  8061b8:	00c05504 	movi	r3,340
  8061bc:	18800536 	bltu	r3,r2,8061d4 <_malloc_r+0x7cc>
  8061c0:	3804d3fa 	srli	r2,r7,15
  8061c4:	11401e04 	addi	r5,r2,120
  8061c8:	10c01dc4 	addi	r3,r2,119
  8061cc:	294b883a 	add	r5,r5,r5
  8061d0:	003f5606 	br	805f2c <__alt_data_end+0xff805f2c>
  8061d4:	00c15504 	movi	r3,1364
  8061d8:	18800536 	bltu	r3,r2,8061f0 <_malloc_r+0x7e8>
  8061dc:	3804d4ba 	srli	r2,r7,18
  8061e0:	11401f44 	addi	r5,r2,125
  8061e4:	10c01f04 	addi	r3,r2,124
  8061e8:	294b883a 	add	r5,r5,r5
  8061ec:	003f4f06 	br	805f2c <__alt_data_end+0xff805f2c>
  8061f0:	01403f84 	movi	r5,254
  8061f4:	00c01f84 	movi	r3,126
  8061f8:	003f4c06 	br	805f2c <__alt_data_end+0xff805f2c>
  8061fc:	98800117 	ldw	r2,4(r19)
  806200:	003fa006 	br	806084 <__alt_data_end+0xff806084>
  806204:	8808d0fa 	srli	r4,r17,3
  806208:	20800044 	addi	r2,r4,1
  80620c:	1085883a 	add	r2,r2,r2
  806210:	003e9006 	br	805c54 <__alt_data_end+0xff805c54>

00806214 <memchr>:
  806214:	208000cc 	andi	r2,r4,3
  806218:	280f883a 	mov	r7,r5
  80621c:	10003426 	beq	r2,zero,8062f0 <memchr+0xdc>
  806220:	30bfffc4 	addi	r2,r6,-1
  806224:	30001a26 	beq	r6,zero,806290 <memchr+0x7c>
  806228:	20c00003 	ldbu	r3,0(r4)
  80622c:	29803fcc 	andi	r6,r5,255
  806230:	30c0051e 	bne	r6,r3,806248 <memchr+0x34>
  806234:	00001806 	br	806298 <memchr+0x84>
  806238:	10001526 	beq	r2,zero,806290 <memchr+0x7c>
  80623c:	20c00003 	ldbu	r3,0(r4)
  806240:	10bfffc4 	addi	r2,r2,-1
  806244:	30c01426 	beq	r6,r3,806298 <memchr+0x84>
  806248:	21000044 	addi	r4,r4,1
  80624c:	20c000cc 	andi	r3,r4,3
  806250:	183ff91e 	bne	r3,zero,806238 <__alt_data_end+0xff806238>
  806254:	020000c4 	movi	r8,3
  806258:	40801136 	bltu	r8,r2,8062a0 <memchr+0x8c>
  80625c:	10000c26 	beq	r2,zero,806290 <memchr+0x7c>
  806260:	20c00003 	ldbu	r3,0(r4)
  806264:	29403fcc 	andi	r5,r5,255
  806268:	28c00b26 	beq	r5,r3,806298 <memchr+0x84>
  80626c:	20c00044 	addi	r3,r4,1
  806270:	39803fcc 	andi	r6,r7,255
  806274:	2089883a 	add	r4,r4,r2
  806278:	00000306 	br	806288 <memchr+0x74>
  80627c:	18c00044 	addi	r3,r3,1
  806280:	197fffc3 	ldbu	r5,-1(r3)
  806284:	31400526 	beq	r6,r5,80629c <memchr+0x88>
  806288:	1805883a 	mov	r2,r3
  80628c:	20fffb1e 	bne	r4,r3,80627c <__alt_data_end+0xff80627c>
  806290:	0005883a 	mov	r2,zero
  806294:	f800283a 	ret
  806298:	2005883a 	mov	r2,r4
  80629c:	f800283a 	ret
  8062a0:	28c03fcc 	andi	r3,r5,255
  8062a4:	1812923a 	slli	r9,r3,8
  8062a8:	02ffbff4 	movhi	r11,65279
  8062ac:	02a02074 	movhi	r10,32897
  8062b0:	48d2b03a 	or	r9,r9,r3
  8062b4:	4806943a 	slli	r3,r9,16
  8062b8:	5affbfc4 	addi	r11,r11,-257
  8062bc:	52a02004 	addi	r10,r10,-32640
  8062c0:	48d2b03a 	or	r9,r9,r3
  8062c4:	20c00017 	ldw	r3,0(r4)
  8062c8:	48c6f03a 	xor	r3,r9,r3
  8062cc:	1acd883a 	add	r6,r3,r11
  8062d0:	00c6303a 	nor	r3,zero,r3
  8062d4:	30c6703a 	and	r3,r6,r3
  8062d8:	1a86703a 	and	r3,r3,r10
  8062dc:	183fe01e 	bne	r3,zero,806260 <__alt_data_end+0xff806260>
  8062e0:	10bfff04 	addi	r2,r2,-4
  8062e4:	21000104 	addi	r4,r4,4
  8062e8:	40bff636 	bltu	r8,r2,8062c4 <__alt_data_end+0xff8062c4>
  8062ec:	003fdb06 	br	80625c <__alt_data_end+0xff80625c>
  8062f0:	3005883a 	mov	r2,r6
  8062f4:	003fd706 	br	806254 <__alt_data_end+0xff806254>

008062f8 <memcpy>:
  8062f8:	defffd04 	addi	sp,sp,-12
  8062fc:	dfc00215 	stw	ra,8(sp)
  806300:	dc400115 	stw	r17,4(sp)
  806304:	dc000015 	stw	r16,0(sp)
  806308:	00c003c4 	movi	r3,15
  80630c:	2005883a 	mov	r2,r4
  806310:	1980452e 	bgeu	r3,r6,806428 <memcpy+0x130>
  806314:	2906b03a 	or	r3,r5,r4
  806318:	18c000cc 	andi	r3,r3,3
  80631c:	1800441e 	bne	r3,zero,806430 <memcpy+0x138>
  806320:	347ffc04 	addi	r17,r6,-16
  806324:	8822d13a 	srli	r17,r17,4
  806328:	28c00104 	addi	r3,r5,4
  80632c:	23400104 	addi	r13,r4,4
  806330:	8820913a 	slli	r16,r17,4
  806334:	2b000204 	addi	r12,r5,8
  806338:	22c00204 	addi	r11,r4,8
  80633c:	84000504 	addi	r16,r16,20
  806340:	2a800304 	addi	r10,r5,12
  806344:	22400304 	addi	r9,r4,12
  806348:	2c21883a 	add	r16,r5,r16
  80634c:	2811883a 	mov	r8,r5
  806350:	200f883a 	mov	r7,r4
  806354:	41000017 	ldw	r4,0(r8)
  806358:	1fc00017 	ldw	ra,0(r3)
  80635c:	63c00017 	ldw	r15,0(r12)
  806360:	39000015 	stw	r4,0(r7)
  806364:	53800017 	ldw	r14,0(r10)
  806368:	6fc00015 	stw	ra,0(r13)
  80636c:	5bc00015 	stw	r15,0(r11)
  806370:	4b800015 	stw	r14,0(r9)
  806374:	18c00404 	addi	r3,r3,16
  806378:	39c00404 	addi	r7,r7,16
  80637c:	42000404 	addi	r8,r8,16
  806380:	6b400404 	addi	r13,r13,16
  806384:	63000404 	addi	r12,r12,16
  806388:	5ac00404 	addi	r11,r11,16
  80638c:	52800404 	addi	r10,r10,16
  806390:	4a400404 	addi	r9,r9,16
  806394:	1c3fef1e 	bne	r3,r16,806354 <__alt_data_end+0xff806354>
  806398:	89c00044 	addi	r7,r17,1
  80639c:	380e913a 	slli	r7,r7,4
  8063a0:	310003cc 	andi	r4,r6,15
  8063a4:	02c000c4 	movi	r11,3
  8063a8:	11c7883a 	add	r3,r2,r7
  8063ac:	29cb883a 	add	r5,r5,r7
  8063b0:	5900212e 	bgeu	r11,r4,806438 <memcpy+0x140>
  8063b4:	1813883a 	mov	r9,r3
  8063b8:	2811883a 	mov	r8,r5
  8063bc:	200f883a 	mov	r7,r4
  8063c0:	42800017 	ldw	r10,0(r8)
  8063c4:	4a400104 	addi	r9,r9,4
  8063c8:	39ffff04 	addi	r7,r7,-4
  8063cc:	4abfff15 	stw	r10,-4(r9)
  8063d0:	42000104 	addi	r8,r8,4
  8063d4:	59fffa36 	bltu	r11,r7,8063c0 <__alt_data_end+0xff8063c0>
  8063d8:	213fff04 	addi	r4,r4,-4
  8063dc:	2008d0ba 	srli	r4,r4,2
  8063e0:	318000cc 	andi	r6,r6,3
  8063e4:	21000044 	addi	r4,r4,1
  8063e8:	2109883a 	add	r4,r4,r4
  8063ec:	2109883a 	add	r4,r4,r4
  8063f0:	1907883a 	add	r3,r3,r4
  8063f4:	290b883a 	add	r5,r5,r4
  8063f8:	30000626 	beq	r6,zero,806414 <memcpy+0x11c>
  8063fc:	198d883a 	add	r6,r3,r6
  806400:	29c00003 	ldbu	r7,0(r5)
  806404:	18c00044 	addi	r3,r3,1
  806408:	29400044 	addi	r5,r5,1
  80640c:	19ffffc5 	stb	r7,-1(r3)
  806410:	19bffb1e 	bne	r3,r6,806400 <__alt_data_end+0xff806400>
  806414:	dfc00217 	ldw	ra,8(sp)
  806418:	dc400117 	ldw	r17,4(sp)
  80641c:	dc000017 	ldw	r16,0(sp)
  806420:	dec00304 	addi	sp,sp,12
  806424:	f800283a 	ret
  806428:	2007883a 	mov	r3,r4
  80642c:	003ff206 	br	8063f8 <__alt_data_end+0xff8063f8>
  806430:	2007883a 	mov	r3,r4
  806434:	003ff106 	br	8063fc <__alt_data_end+0xff8063fc>
  806438:	200d883a 	mov	r6,r4
  80643c:	003fee06 	br	8063f8 <__alt_data_end+0xff8063f8>

00806440 <memmove>:
  806440:	2005883a 	mov	r2,r4
  806444:	29000b2e 	bgeu	r5,r4,806474 <memmove+0x34>
  806448:	298f883a 	add	r7,r5,r6
  80644c:	21c0092e 	bgeu	r4,r7,806474 <memmove+0x34>
  806450:	2187883a 	add	r3,r4,r6
  806454:	198bc83a 	sub	r5,r3,r6
  806458:	30004826 	beq	r6,zero,80657c <memmove+0x13c>
  80645c:	39ffffc4 	addi	r7,r7,-1
  806460:	39000003 	ldbu	r4,0(r7)
  806464:	18ffffc4 	addi	r3,r3,-1
  806468:	19000005 	stb	r4,0(r3)
  80646c:	28fffb1e 	bne	r5,r3,80645c <__alt_data_end+0xff80645c>
  806470:	f800283a 	ret
  806474:	00c003c4 	movi	r3,15
  806478:	1980412e 	bgeu	r3,r6,806580 <memmove+0x140>
  80647c:	2886b03a 	or	r3,r5,r2
  806480:	18c000cc 	andi	r3,r3,3
  806484:	1800401e 	bne	r3,zero,806588 <memmove+0x148>
  806488:	33fffc04 	addi	r15,r6,-16
  80648c:	781ed13a 	srli	r15,r15,4
  806490:	28c00104 	addi	r3,r5,4
  806494:	13400104 	addi	r13,r2,4
  806498:	781c913a 	slli	r14,r15,4
  80649c:	2b000204 	addi	r12,r5,8
  8064a0:	12c00204 	addi	r11,r2,8
  8064a4:	73800504 	addi	r14,r14,20
  8064a8:	2a800304 	addi	r10,r5,12
  8064ac:	12400304 	addi	r9,r2,12
  8064b0:	2b9d883a 	add	r14,r5,r14
  8064b4:	2811883a 	mov	r8,r5
  8064b8:	100f883a 	mov	r7,r2
  8064bc:	41000017 	ldw	r4,0(r8)
  8064c0:	39c00404 	addi	r7,r7,16
  8064c4:	18c00404 	addi	r3,r3,16
  8064c8:	393ffc15 	stw	r4,-16(r7)
  8064cc:	193ffc17 	ldw	r4,-16(r3)
  8064d0:	6b400404 	addi	r13,r13,16
  8064d4:	5ac00404 	addi	r11,r11,16
  8064d8:	693ffc15 	stw	r4,-16(r13)
  8064dc:	61000017 	ldw	r4,0(r12)
  8064e0:	4a400404 	addi	r9,r9,16
  8064e4:	42000404 	addi	r8,r8,16
  8064e8:	593ffc15 	stw	r4,-16(r11)
  8064ec:	51000017 	ldw	r4,0(r10)
  8064f0:	63000404 	addi	r12,r12,16
  8064f4:	52800404 	addi	r10,r10,16
  8064f8:	493ffc15 	stw	r4,-16(r9)
  8064fc:	1bbfef1e 	bne	r3,r14,8064bc <__alt_data_end+0xff8064bc>
  806500:	79000044 	addi	r4,r15,1
  806504:	2008913a 	slli	r4,r4,4
  806508:	328003cc 	andi	r10,r6,15
  80650c:	02c000c4 	movi	r11,3
  806510:	1107883a 	add	r3,r2,r4
  806514:	290b883a 	add	r5,r5,r4
  806518:	5a801e2e 	bgeu	r11,r10,806594 <memmove+0x154>
  80651c:	1813883a 	mov	r9,r3
  806520:	2811883a 	mov	r8,r5
  806524:	500f883a 	mov	r7,r10
  806528:	41000017 	ldw	r4,0(r8)
  80652c:	4a400104 	addi	r9,r9,4
  806530:	39ffff04 	addi	r7,r7,-4
  806534:	493fff15 	stw	r4,-4(r9)
  806538:	42000104 	addi	r8,r8,4
  80653c:	59fffa36 	bltu	r11,r7,806528 <__alt_data_end+0xff806528>
  806540:	513fff04 	addi	r4,r10,-4
  806544:	2008d0ba 	srli	r4,r4,2
  806548:	318000cc 	andi	r6,r6,3
  80654c:	21000044 	addi	r4,r4,1
  806550:	2109883a 	add	r4,r4,r4
  806554:	2109883a 	add	r4,r4,r4
  806558:	1907883a 	add	r3,r3,r4
  80655c:	290b883a 	add	r5,r5,r4
  806560:	30000b26 	beq	r6,zero,806590 <memmove+0x150>
  806564:	198d883a 	add	r6,r3,r6
  806568:	29c00003 	ldbu	r7,0(r5)
  80656c:	18c00044 	addi	r3,r3,1
  806570:	29400044 	addi	r5,r5,1
  806574:	19ffffc5 	stb	r7,-1(r3)
  806578:	19bffb1e 	bne	r3,r6,806568 <__alt_data_end+0xff806568>
  80657c:	f800283a 	ret
  806580:	1007883a 	mov	r3,r2
  806584:	003ff606 	br	806560 <__alt_data_end+0xff806560>
  806588:	1007883a 	mov	r3,r2
  80658c:	003ff506 	br	806564 <__alt_data_end+0xff806564>
  806590:	f800283a 	ret
  806594:	500d883a 	mov	r6,r10
  806598:	003ff106 	br	806560 <__alt_data_end+0xff806560>

0080659c <memset>:
  80659c:	20c000cc 	andi	r3,r4,3
  8065a0:	2005883a 	mov	r2,r4
  8065a4:	18004426 	beq	r3,zero,8066b8 <memset+0x11c>
  8065a8:	31ffffc4 	addi	r7,r6,-1
  8065ac:	30004026 	beq	r6,zero,8066b0 <memset+0x114>
  8065b0:	2813883a 	mov	r9,r5
  8065b4:	200d883a 	mov	r6,r4
  8065b8:	2007883a 	mov	r3,r4
  8065bc:	00000406 	br	8065d0 <memset+0x34>
  8065c0:	3a3fffc4 	addi	r8,r7,-1
  8065c4:	31800044 	addi	r6,r6,1
  8065c8:	38003926 	beq	r7,zero,8066b0 <memset+0x114>
  8065cc:	400f883a 	mov	r7,r8
  8065d0:	18c00044 	addi	r3,r3,1
  8065d4:	32400005 	stb	r9,0(r6)
  8065d8:	1a0000cc 	andi	r8,r3,3
  8065dc:	403ff81e 	bne	r8,zero,8065c0 <__alt_data_end+0xff8065c0>
  8065e0:	010000c4 	movi	r4,3
  8065e4:	21c02d2e 	bgeu	r4,r7,80669c <memset+0x100>
  8065e8:	29003fcc 	andi	r4,r5,255
  8065ec:	200c923a 	slli	r6,r4,8
  8065f0:	3108b03a 	or	r4,r6,r4
  8065f4:	200c943a 	slli	r6,r4,16
  8065f8:	218cb03a 	or	r6,r4,r6
  8065fc:	010003c4 	movi	r4,15
  806600:	21c0182e 	bgeu	r4,r7,806664 <memset+0xc8>
  806604:	3b3ffc04 	addi	r12,r7,-16
  806608:	6018d13a 	srli	r12,r12,4
  80660c:	1a000104 	addi	r8,r3,4
  806610:	1ac00204 	addi	r11,r3,8
  806614:	6008913a 	slli	r4,r12,4
  806618:	1a800304 	addi	r10,r3,12
  80661c:	1813883a 	mov	r9,r3
  806620:	21000504 	addi	r4,r4,20
  806624:	1909883a 	add	r4,r3,r4
  806628:	49800015 	stw	r6,0(r9)
  80662c:	41800015 	stw	r6,0(r8)
  806630:	59800015 	stw	r6,0(r11)
  806634:	51800015 	stw	r6,0(r10)
  806638:	42000404 	addi	r8,r8,16
  80663c:	4a400404 	addi	r9,r9,16
  806640:	5ac00404 	addi	r11,r11,16
  806644:	52800404 	addi	r10,r10,16
  806648:	413ff71e 	bne	r8,r4,806628 <__alt_data_end+0xff806628>
  80664c:	63000044 	addi	r12,r12,1
  806650:	6018913a 	slli	r12,r12,4
  806654:	39c003cc 	andi	r7,r7,15
  806658:	010000c4 	movi	r4,3
  80665c:	1b07883a 	add	r3,r3,r12
  806660:	21c00e2e 	bgeu	r4,r7,80669c <memset+0x100>
  806664:	1813883a 	mov	r9,r3
  806668:	3811883a 	mov	r8,r7
  80666c:	010000c4 	movi	r4,3
  806670:	49800015 	stw	r6,0(r9)
  806674:	423fff04 	addi	r8,r8,-4
  806678:	4a400104 	addi	r9,r9,4
  80667c:	223ffc36 	bltu	r4,r8,806670 <__alt_data_end+0xff806670>
  806680:	393fff04 	addi	r4,r7,-4
  806684:	2008d0ba 	srli	r4,r4,2
  806688:	39c000cc 	andi	r7,r7,3
  80668c:	21000044 	addi	r4,r4,1
  806690:	2109883a 	add	r4,r4,r4
  806694:	2109883a 	add	r4,r4,r4
  806698:	1907883a 	add	r3,r3,r4
  80669c:	38000526 	beq	r7,zero,8066b4 <memset+0x118>
  8066a0:	19cf883a 	add	r7,r3,r7
  8066a4:	19400005 	stb	r5,0(r3)
  8066a8:	18c00044 	addi	r3,r3,1
  8066ac:	38fffd1e 	bne	r7,r3,8066a4 <__alt_data_end+0xff8066a4>
  8066b0:	f800283a 	ret
  8066b4:	f800283a 	ret
  8066b8:	2007883a 	mov	r3,r4
  8066bc:	300f883a 	mov	r7,r6
  8066c0:	003fc706 	br	8065e0 <__alt_data_end+0xff8065e0>

008066c4 <_Balloc>:
  8066c4:	20801317 	ldw	r2,76(r4)
  8066c8:	defffc04 	addi	sp,sp,-16
  8066cc:	dc400115 	stw	r17,4(sp)
  8066d0:	dc000015 	stw	r16,0(sp)
  8066d4:	dfc00315 	stw	ra,12(sp)
  8066d8:	dc800215 	stw	r18,8(sp)
  8066dc:	2023883a 	mov	r17,r4
  8066e0:	2821883a 	mov	r16,r5
  8066e4:	10000f26 	beq	r2,zero,806724 <_Balloc+0x60>
  8066e8:	8407883a 	add	r3,r16,r16
  8066ec:	18c7883a 	add	r3,r3,r3
  8066f0:	10c7883a 	add	r3,r2,r3
  8066f4:	18800017 	ldw	r2,0(r3)
  8066f8:	10001126 	beq	r2,zero,806740 <_Balloc+0x7c>
  8066fc:	11000017 	ldw	r4,0(r2)
  806700:	19000015 	stw	r4,0(r3)
  806704:	10000415 	stw	zero,16(r2)
  806708:	10000315 	stw	zero,12(r2)
  80670c:	dfc00317 	ldw	ra,12(sp)
  806710:	dc800217 	ldw	r18,8(sp)
  806714:	dc400117 	ldw	r17,4(sp)
  806718:	dc000017 	ldw	r16,0(sp)
  80671c:	dec00404 	addi	sp,sp,16
  806720:	f800283a 	ret
  806724:	01800844 	movi	r6,33
  806728:	01400104 	movi	r5,4
  80672c:	08096000 	call	809600 <_calloc_r>
  806730:	88801315 	stw	r2,76(r17)
  806734:	103fec1e 	bne	r2,zero,8066e8 <__alt_data_end+0xff8066e8>
  806738:	0005883a 	mov	r2,zero
  80673c:	003ff306 	br	80670c <__alt_data_end+0xff80670c>
  806740:	01400044 	movi	r5,1
  806744:	2c24983a 	sll	r18,r5,r16
  806748:	8809883a 	mov	r4,r17
  80674c:	91800144 	addi	r6,r18,5
  806750:	318d883a 	add	r6,r6,r6
  806754:	318d883a 	add	r6,r6,r6
  806758:	08096000 	call	809600 <_calloc_r>
  80675c:	103ff626 	beq	r2,zero,806738 <__alt_data_end+0xff806738>
  806760:	14000115 	stw	r16,4(r2)
  806764:	14800215 	stw	r18,8(r2)
  806768:	003fe606 	br	806704 <__alt_data_end+0xff806704>

0080676c <_Bfree>:
  80676c:	28000826 	beq	r5,zero,806790 <_Bfree+0x24>
  806770:	28c00117 	ldw	r3,4(r5)
  806774:	20801317 	ldw	r2,76(r4)
  806778:	18c7883a 	add	r3,r3,r3
  80677c:	18c7883a 	add	r3,r3,r3
  806780:	10c5883a 	add	r2,r2,r3
  806784:	10c00017 	ldw	r3,0(r2)
  806788:	28c00015 	stw	r3,0(r5)
  80678c:	11400015 	stw	r5,0(r2)
  806790:	f800283a 	ret

00806794 <__multadd>:
  806794:	defffa04 	addi	sp,sp,-24
  806798:	dc800315 	stw	r18,12(sp)
  80679c:	dc400215 	stw	r17,8(sp)
  8067a0:	dc000115 	stw	r16,4(sp)
  8067a4:	2823883a 	mov	r17,r5
  8067a8:	2c000417 	ldw	r16,16(r5)
  8067ac:	dfc00515 	stw	ra,20(sp)
  8067b0:	dcc00415 	stw	r19,16(sp)
  8067b4:	2025883a 	mov	r18,r4
  8067b8:	29400504 	addi	r5,r5,20
  8067bc:	0011883a 	mov	r8,zero
  8067c0:	28c00017 	ldw	r3,0(r5)
  8067c4:	29400104 	addi	r5,r5,4
  8067c8:	42000044 	addi	r8,r8,1
  8067cc:	18bfffcc 	andi	r2,r3,65535
  8067d0:	1185383a 	mul	r2,r2,r6
  8067d4:	1806d43a 	srli	r3,r3,16
  8067d8:	11cf883a 	add	r7,r2,r7
  8067dc:	3808d43a 	srli	r4,r7,16
  8067e0:	1987383a 	mul	r3,r3,r6
  8067e4:	38bfffcc 	andi	r2,r7,65535
  8067e8:	1907883a 	add	r3,r3,r4
  8067ec:	1808943a 	slli	r4,r3,16
  8067f0:	180ed43a 	srli	r7,r3,16
  8067f4:	2085883a 	add	r2,r4,r2
  8067f8:	28bfff15 	stw	r2,-4(r5)
  8067fc:	443ff016 	blt	r8,r16,8067c0 <__alt_data_end+0xff8067c0>
  806800:	38000926 	beq	r7,zero,806828 <__multadd+0x94>
  806804:	88800217 	ldw	r2,8(r17)
  806808:	80800f0e 	bge	r16,r2,806848 <__multadd+0xb4>
  80680c:	80800144 	addi	r2,r16,5
  806810:	1085883a 	add	r2,r2,r2
  806814:	1085883a 	add	r2,r2,r2
  806818:	8885883a 	add	r2,r17,r2
  80681c:	11c00015 	stw	r7,0(r2)
  806820:	84000044 	addi	r16,r16,1
  806824:	8c000415 	stw	r16,16(r17)
  806828:	8805883a 	mov	r2,r17
  80682c:	dfc00517 	ldw	ra,20(sp)
  806830:	dcc00417 	ldw	r19,16(sp)
  806834:	dc800317 	ldw	r18,12(sp)
  806838:	dc400217 	ldw	r17,8(sp)
  80683c:	dc000117 	ldw	r16,4(sp)
  806840:	dec00604 	addi	sp,sp,24
  806844:	f800283a 	ret
  806848:	89400117 	ldw	r5,4(r17)
  80684c:	9009883a 	mov	r4,r18
  806850:	d9c00015 	stw	r7,0(sp)
  806854:	29400044 	addi	r5,r5,1
  806858:	08066c40 	call	8066c4 <_Balloc>
  80685c:	89800417 	ldw	r6,16(r17)
  806860:	89400304 	addi	r5,r17,12
  806864:	11000304 	addi	r4,r2,12
  806868:	31800084 	addi	r6,r6,2
  80686c:	318d883a 	add	r6,r6,r6
  806870:	318d883a 	add	r6,r6,r6
  806874:	1027883a 	mov	r19,r2
  806878:	08062f80 	call	8062f8 <memcpy>
  80687c:	d9c00017 	ldw	r7,0(sp)
  806880:	88000a26 	beq	r17,zero,8068ac <__multadd+0x118>
  806884:	88c00117 	ldw	r3,4(r17)
  806888:	90801317 	ldw	r2,76(r18)
  80688c:	18c7883a 	add	r3,r3,r3
  806890:	18c7883a 	add	r3,r3,r3
  806894:	10c5883a 	add	r2,r2,r3
  806898:	10c00017 	ldw	r3,0(r2)
  80689c:	88c00015 	stw	r3,0(r17)
  8068a0:	14400015 	stw	r17,0(r2)
  8068a4:	9823883a 	mov	r17,r19
  8068a8:	003fd806 	br	80680c <__alt_data_end+0xff80680c>
  8068ac:	9823883a 	mov	r17,r19
  8068b0:	003fd606 	br	80680c <__alt_data_end+0xff80680c>

008068b4 <__s2b>:
  8068b4:	defff904 	addi	sp,sp,-28
  8068b8:	dc400115 	stw	r17,4(sp)
  8068bc:	dc000015 	stw	r16,0(sp)
  8068c0:	2023883a 	mov	r17,r4
  8068c4:	2821883a 	mov	r16,r5
  8068c8:	39000204 	addi	r4,r7,8
  8068cc:	01400244 	movi	r5,9
  8068d0:	dcc00315 	stw	r19,12(sp)
  8068d4:	dc800215 	stw	r18,8(sp)
  8068d8:	dfc00615 	stw	ra,24(sp)
  8068dc:	dd400515 	stw	r21,20(sp)
  8068e0:	dd000415 	stw	r20,16(sp)
  8068e4:	3825883a 	mov	r18,r7
  8068e8:	3027883a 	mov	r19,r6
  8068ec:	080a9300 	call	80a930 <__divsi3>
  8068f0:	00c00044 	movi	r3,1
  8068f4:	000b883a 	mov	r5,zero
  8068f8:	1880030e 	bge	r3,r2,806908 <__s2b+0x54>
  8068fc:	18c7883a 	add	r3,r3,r3
  806900:	29400044 	addi	r5,r5,1
  806904:	18bffd16 	blt	r3,r2,8068fc <__alt_data_end+0xff8068fc>
  806908:	8809883a 	mov	r4,r17
  80690c:	08066c40 	call	8066c4 <_Balloc>
  806910:	d8c00717 	ldw	r3,28(sp)
  806914:	10c00515 	stw	r3,20(r2)
  806918:	00c00044 	movi	r3,1
  80691c:	10c00415 	stw	r3,16(r2)
  806920:	00c00244 	movi	r3,9
  806924:	1cc0210e 	bge	r3,r19,8069ac <__s2b+0xf8>
  806928:	80eb883a 	add	r21,r16,r3
  80692c:	a829883a 	mov	r20,r21
  806930:	84e1883a 	add	r16,r16,r19
  806934:	a1c00007 	ldb	r7,0(r20)
  806938:	01800284 	movi	r6,10
  80693c:	a5000044 	addi	r20,r20,1
  806940:	100b883a 	mov	r5,r2
  806944:	39fff404 	addi	r7,r7,-48
  806948:	8809883a 	mov	r4,r17
  80694c:	08067940 	call	806794 <__multadd>
  806950:	a43ff81e 	bne	r20,r16,806934 <__alt_data_end+0xff806934>
  806954:	ace1883a 	add	r16,r21,r19
  806958:	843ffe04 	addi	r16,r16,-8
  80695c:	9c800a0e 	bge	r19,r18,806988 <__s2b+0xd4>
  806960:	94e5c83a 	sub	r18,r18,r19
  806964:	84a5883a 	add	r18,r16,r18
  806968:	81c00007 	ldb	r7,0(r16)
  80696c:	01800284 	movi	r6,10
  806970:	84000044 	addi	r16,r16,1
  806974:	100b883a 	mov	r5,r2
  806978:	39fff404 	addi	r7,r7,-48
  80697c:	8809883a 	mov	r4,r17
  806980:	08067940 	call	806794 <__multadd>
  806984:	84bff81e 	bne	r16,r18,806968 <__alt_data_end+0xff806968>
  806988:	dfc00617 	ldw	ra,24(sp)
  80698c:	dd400517 	ldw	r21,20(sp)
  806990:	dd000417 	ldw	r20,16(sp)
  806994:	dcc00317 	ldw	r19,12(sp)
  806998:	dc800217 	ldw	r18,8(sp)
  80699c:	dc400117 	ldw	r17,4(sp)
  8069a0:	dc000017 	ldw	r16,0(sp)
  8069a4:	dec00704 	addi	sp,sp,28
  8069a8:	f800283a 	ret
  8069ac:	84000284 	addi	r16,r16,10
  8069b0:	1827883a 	mov	r19,r3
  8069b4:	003fe906 	br	80695c <__alt_data_end+0xff80695c>

008069b8 <__hi0bits>:
  8069b8:	20bfffec 	andhi	r2,r4,65535
  8069bc:	1000141e 	bne	r2,zero,806a10 <__hi0bits+0x58>
  8069c0:	2008943a 	slli	r4,r4,16
  8069c4:	00800404 	movi	r2,16
  8069c8:	20ffc02c 	andhi	r3,r4,65280
  8069cc:	1800021e 	bne	r3,zero,8069d8 <__hi0bits+0x20>
  8069d0:	2008923a 	slli	r4,r4,8
  8069d4:	10800204 	addi	r2,r2,8
  8069d8:	20fc002c 	andhi	r3,r4,61440
  8069dc:	1800021e 	bne	r3,zero,8069e8 <__hi0bits+0x30>
  8069e0:	2008913a 	slli	r4,r4,4
  8069e4:	10800104 	addi	r2,r2,4
  8069e8:	20f0002c 	andhi	r3,r4,49152
  8069ec:	1800031e 	bne	r3,zero,8069fc <__hi0bits+0x44>
  8069f0:	2109883a 	add	r4,r4,r4
  8069f4:	10800084 	addi	r2,r2,2
  8069f8:	2109883a 	add	r4,r4,r4
  8069fc:	20000316 	blt	r4,zero,806a0c <__hi0bits+0x54>
  806a00:	2110002c 	andhi	r4,r4,16384
  806a04:	2000041e 	bne	r4,zero,806a18 <__hi0bits+0x60>
  806a08:	00800804 	movi	r2,32
  806a0c:	f800283a 	ret
  806a10:	0005883a 	mov	r2,zero
  806a14:	003fec06 	br	8069c8 <__alt_data_end+0xff8069c8>
  806a18:	10800044 	addi	r2,r2,1
  806a1c:	f800283a 	ret

00806a20 <__lo0bits>:
  806a20:	20c00017 	ldw	r3,0(r4)
  806a24:	188001cc 	andi	r2,r3,7
  806a28:	10000826 	beq	r2,zero,806a4c <__lo0bits+0x2c>
  806a2c:	1880004c 	andi	r2,r3,1
  806a30:	1000211e 	bne	r2,zero,806ab8 <__lo0bits+0x98>
  806a34:	1880008c 	andi	r2,r3,2
  806a38:	1000211e 	bne	r2,zero,806ac0 <__lo0bits+0xa0>
  806a3c:	1806d0ba 	srli	r3,r3,2
  806a40:	00800084 	movi	r2,2
  806a44:	20c00015 	stw	r3,0(r4)
  806a48:	f800283a 	ret
  806a4c:	18bfffcc 	andi	r2,r3,65535
  806a50:	10001326 	beq	r2,zero,806aa0 <__lo0bits+0x80>
  806a54:	0005883a 	mov	r2,zero
  806a58:	19403fcc 	andi	r5,r3,255
  806a5c:	2800021e 	bne	r5,zero,806a68 <__lo0bits+0x48>
  806a60:	1806d23a 	srli	r3,r3,8
  806a64:	10800204 	addi	r2,r2,8
  806a68:	194003cc 	andi	r5,r3,15
  806a6c:	2800021e 	bne	r5,zero,806a78 <__lo0bits+0x58>
  806a70:	1806d13a 	srli	r3,r3,4
  806a74:	10800104 	addi	r2,r2,4
  806a78:	194000cc 	andi	r5,r3,3
  806a7c:	2800021e 	bne	r5,zero,806a88 <__lo0bits+0x68>
  806a80:	1806d0ba 	srli	r3,r3,2
  806a84:	10800084 	addi	r2,r2,2
  806a88:	1940004c 	andi	r5,r3,1
  806a8c:	2800081e 	bne	r5,zero,806ab0 <__lo0bits+0x90>
  806a90:	1806d07a 	srli	r3,r3,1
  806a94:	1800051e 	bne	r3,zero,806aac <__lo0bits+0x8c>
  806a98:	00800804 	movi	r2,32
  806a9c:	f800283a 	ret
  806aa0:	1806d43a 	srli	r3,r3,16
  806aa4:	00800404 	movi	r2,16
  806aa8:	003feb06 	br	806a58 <__alt_data_end+0xff806a58>
  806aac:	10800044 	addi	r2,r2,1
  806ab0:	20c00015 	stw	r3,0(r4)
  806ab4:	f800283a 	ret
  806ab8:	0005883a 	mov	r2,zero
  806abc:	f800283a 	ret
  806ac0:	1806d07a 	srli	r3,r3,1
  806ac4:	00800044 	movi	r2,1
  806ac8:	20c00015 	stw	r3,0(r4)
  806acc:	f800283a 	ret

00806ad0 <__i2b>:
  806ad0:	defffd04 	addi	sp,sp,-12
  806ad4:	dc000015 	stw	r16,0(sp)
  806ad8:	04000044 	movi	r16,1
  806adc:	dc400115 	stw	r17,4(sp)
  806ae0:	2823883a 	mov	r17,r5
  806ae4:	800b883a 	mov	r5,r16
  806ae8:	dfc00215 	stw	ra,8(sp)
  806aec:	08066c40 	call	8066c4 <_Balloc>
  806af0:	14400515 	stw	r17,20(r2)
  806af4:	14000415 	stw	r16,16(r2)
  806af8:	dfc00217 	ldw	ra,8(sp)
  806afc:	dc400117 	ldw	r17,4(sp)
  806b00:	dc000017 	ldw	r16,0(sp)
  806b04:	dec00304 	addi	sp,sp,12
  806b08:	f800283a 	ret

00806b0c <__multiply>:
  806b0c:	defffa04 	addi	sp,sp,-24
  806b10:	dcc00315 	stw	r19,12(sp)
  806b14:	dc800215 	stw	r18,8(sp)
  806b18:	34c00417 	ldw	r19,16(r6)
  806b1c:	2c800417 	ldw	r18,16(r5)
  806b20:	dd000415 	stw	r20,16(sp)
  806b24:	dc400115 	stw	r17,4(sp)
  806b28:	dfc00515 	stw	ra,20(sp)
  806b2c:	dc000015 	stw	r16,0(sp)
  806b30:	2829883a 	mov	r20,r5
  806b34:	3023883a 	mov	r17,r6
  806b38:	94c0050e 	bge	r18,r19,806b50 <__multiply+0x44>
  806b3c:	9007883a 	mov	r3,r18
  806b40:	3029883a 	mov	r20,r6
  806b44:	9825883a 	mov	r18,r19
  806b48:	2823883a 	mov	r17,r5
  806b4c:	1827883a 	mov	r19,r3
  806b50:	a0800217 	ldw	r2,8(r20)
  806b54:	94e1883a 	add	r16,r18,r19
  806b58:	a1400117 	ldw	r5,4(r20)
  806b5c:	1400010e 	bge	r2,r16,806b64 <__multiply+0x58>
  806b60:	29400044 	addi	r5,r5,1
  806b64:	08066c40 	call	8066c4 <_Balloc>
  806b68:	8415883a 	add	r10,r16,r16
  806b6c:	12c00504 	addi	r11,r2,20
  806b70:	5295883a 	add	r10,r10,r10
  806b74:	5a95883a 	add	r10,r11,r10
  806b78:	5807883a 	mov	r3,r11
  806b7c:	5a80032e 	bgeu	r11,r10,806b8c <__multiply+0x80>
  806b80:	18000015 	stw	zero,0(r3)
  806b84:	18c00104 	addi	r3,r3,4
  806b88:	1abffd36 	bltu	r3,r10,806b80 <__alt_data_end+0xff806b80>
  806b8c:	9ce7883a 	add	r19,r19,r19
  806b90:	94a5883a 	add	r18,r18,r18
  806b94:	89800504 	addi	r6,r17,20
  806b98:	9ce7883a 	add	r19,r19,r19
  806b9c:	a3400504 	addi	r13,r20,20
  806ba0:	94a5883a 	add	r18,r18,r18
  806ba4:	34d9883a 	add	r12,r6,r19
  806ba8:	6c93883a 	add	r9,r13,r18
  806bac:	3300422e 	bgeu	r6,r12,806cb8 <__multiply+0x1ac>
  806bb0:	37c00017 	ldw	ra,0(r6)
  806bb4:	fbffffcc 	andi	r15,ra,65535
  806bb8:	78001b26 	beq	r15,zero,806c28 <__multiply+0x11c>
  806bbc:	5811883a 	mov	r8,r11
  806bc0:	681d883a 	mov	r14,r13
  806bc4:	000f883a 	mov	r7,zero
  806bc8:	71000017 	ldw	r4,0(r14)
  806bcc:	40c00017 	ldw	r3,0(r8)
  806bd0:	73800104 	addi	r14,r14,4
  806bd4:	217fffcc 	andi	r5,r4,65535
  806bd8:	2bcb383a 	mul	r5,r5,r15
  806bdc:	2008d43a 	srli	r4,r4,16
  806be0:	1c7fffcc 	andi	r17,r3,65535
  806be4:	2c4b883a 	add	r5,r5,r17
  806be8:	29cb883a 	add	r5,r5,r7
  806bec:	23c9383a 	mul	r4,r4,r15
  806bf0:	1806d43a 	srli	r3,r3,16
  806bf4:	280ed43a 	srli	r7,r5,16
  806bf8:	297fffcc 	andi	r5,r5,65535
  806bfc:	20c7883a 	add	r3,r4,r3
  806c00:	19c7883a 	add	r3,r3,r7
  806c04:	1808943a 	slli	r4,r3,16
  806c08:	4023883a 	mov	r17,r8
  806c0c:	180ed43a 	srli	r7,r3,16
  806c10:	214ab03a 	or	r5,r4,r5
  806c14:	41400015 	stw	r5,0(r8)
  806c18:	42000104 	addi	r8,r8,4
  806c1c:	727fea36 	bltu	r14,r9,806bc8 <__alt_data_end+0xff806bc8>
  806c20:	89c00115 	stw	r7,4(r17)
  806c24:	37c00017 	ldw	ra,0(r6)
  806c28:	f83ed43a 	srli	ra,ra,16
  806c2c:	f8001f26 	beq	ra,zero,806cac <__multiply+0x1a0>
  806c30:	58c00017 	ldw	r3,0(r11)
  806c34:	681d883a 	mov	r14,r13
  806c38:	581f883a 	mov	r15,r11
  806c3c:	1811883a 	mov	r8,r3
  806c40:	5825883a 	mov	r18,r11
  806c44:	000f883a 	mov	r7,zero
  806c48:	00000106 	br	806c50 <__multiply+0x144>
  806c4c:	8825883a 	mov	r18,r17
  806c50:	7140000b 	ldhu	r5,0(r14)
  806c54:	4010d43a 	srli	r8,r8,16
  806c58:	193fffcc 	andi	r4,r3,65535
  806c5c:	2fcb383a 	mul	r5,r5,ra
  806c60:	7bc00104 	addi	r15,r15,4
  806c64:	73800104 	addi	r14,r14,4
  806c68:	2a0b883a 	add	r5,r5,r8
  806c6c:	29cb883a 	add	r5,r5,r7
  806c70:	2806943a 	slli	r3,r5,16
  806c74:	94400104 	addi	r17,r18,4
  806c78:	280ad43a 	srli	r5,r5,16
  806c7c:	1908b03a 	or	r4,r3,r4
  806c80:	793fff15 	stw	r4,-4(r15)
  806c84:	70ffff17 	ldw	r3,-4(r14)
  806c88:	8a000017 	ldw	r8,0(r17)
  806c8c:	1806d43a 	srli	r3,r3,16
  806c90:	413fffcc 	andi	r4,r8,65535
  806c94:	1fc7383a 	mul	r3,r3,ra
  806c98:	1907883a 	add	r3,r3,r4
  806c9c:	1947883a 	add	r3,r3,r5
  806ca0:	180ed43a 	srli	r7,r3,16
  806ca4:	727fe936 	bltu	r14,r9,806c4c <__alt_data_end+0xff806c4c>
  806ca8:	90c00115 	stw	r3,4(r18)
  806cac:	31800104 	addi	r6,r6,4
  806cb0:	5ac00104 	addi	r11,r11,4
  806cb4:	333fbe36 	bltu	r6,r12,806bb0 <__alt_data_end+0xff806bb0>
  806cb8:	0400090e 	bge	zero,r16,806ce0 <__multiply+0x1d4>
  806cbc:	50ffff17 	ldw	r3,-4(r10)
  806cc0:	52bfff04 	addi	r10,r10,-4
  806cc4:	18000326 	beq	r3,zero,806cd4 <__multiply+0x1c8>
  806cc8:	00000506 	br	806ce0 <__multiply+0x1d4>
  806ccc:	50c00017 	ldw	r3,0(r10)
  806cd0:	1800031e 	bne	r3,zero,806ce0 <__multiply+0x1d4>
  806cd4:	843fffc4 	addi	r16,r16,-1
  806cd8:	52bfff04 	addi	r10,r10,-4
  806cdc:	803ffb1e 	bne	r16,zero,806ccc <__alt_data_end+0xff806ccc>
  806ce0:	14000415 	stw	r16,16(r2)
  806ce4:	dfc00517 	ldw	ra,20(sp)
  806ce8:	dd000417 	ldw	r20,16(sp)
  806cec:	dcc00317 	ldw	r19,12(sp)
  806cf0:	dc800217 	ldw	r18,8(sp)
  806cf4:	dc400117 	ldw	r17,4(sp)
  806cf8:	dc000017 	ldw	r16,0(sp)
  806cfc:	dec00604 	addi	sp,sp,24
  806d00:	f800283a 	ret

00806d04 <__pow5mult>:
  806d04:	defffa04 	addi	sp,sp,-24
  806d08:	dcc00315 	stw	r19,12(sp)
  806d0c:	dc000015 	stw	r16,0(sp)
  806d10:	dfc00515 	stw	ra,20(sp)
  806d14:	dd000415 	stw	r20,16(sp)
  806d18:	dc800215 	stw	r18,8(sp)
  806d1c:	dc400115 	stw	r17,4(sp)
  806d20:	308000cc 	andi	r2,r6,3
  806d24:	3021883a 	mov	r16,r6
  806d28:	2027883a 	mov	r19,r4
  806d2c:	10002f1e 	bne	r2,zero,806dec <__pow5mult+0xe8>
  806d30:	2825883a 	mov	r18,r5
  806d34:	8021d0ba 	srai	r16,r16,2
  806d38:	80001a26 	beq	r16,zero,806da4 <__pow5mult+0xa0>
  806d3c:	9c401217 	ldw	r17,72(r19)
  806d40:	8800061e 	bne	r17,zero,806d5c <__pow5mult+0x58>
  806d44:	00003406 	br	806e18 <__pow5mult+0x114>
  806d48:	8021d07a 	srai	r16,r16,1
  806d4c:	80001526 	beq	r16,zero,806da4 <__pow5mult+0xa0>
  806d50:	88800017 	ldw	r2,0(r17)
  806d54:	10001c26 	beq	r2,zero,806dc8 <__pow5mult+0xc4>
  806d58:	1023883a 	mov	r17,r2
  806d5c:	8080004c 	andi	r2,r16,1
  806d60:	103ff926 	beq	r2,zero,806d48 <__alt_data_end+0xff806d48>
  806d64:	880d883a 	mov	r6,r17
  806d68:	900b883a 	mov	r5,r18
  806d6c:	9809883a 	mov	r4,r19
  806d70:	0806b0c0 	call	806b0c <__multiply>
  806d74:	90001b26 	beq	r18,zero,806de4 <__pow5mult+0xe0>
  806d78:	91000117 	ldw	r4,4(r18)
  806d7c:	98c01317 	ldw	r3,76(r19)
  806d80:	8021d07a 	srai	r16,r16,1
  806d84:	2109883a 	add	r4,r4,r4
  806d88:	2109883a 	add	r4,r4,r4
  806d8c:	1907883a 	add	r3,r3,r4
  806d90:	19000017 	ldw	r4,0(r3)
  806d94:	91000015 	stw	r4,0(r18)
  806d98:	1c800015 	stw	r18,0(r3)
  806d9c:	1025883a 	mov	r18,r2
  806da0:	803feb1e 	bne	r16,zero,806d50 <__alt_data_end+0xff806d50>
  806da4:	9005883a 	mov	r2,r18
  806da8:	dfc00517 	ldw	ra,20(sp)
  806dac:	dd000417 	ldw	r20,16(sp)
  806db0:	dcc00317 	ldw	r19,12(sp)
  806db4:	dc800217 	ldw	r18,8(sp)
  806db8:	dc400117 	ldw	r17,4(sp)
  806dbc:	dc000017 	ldw	r16,0(sp)
  806dc0:	dec00604 	addi	sp,sp,24
  806dc4:	f800283a 	ret
  806dc8:	880d883a 	mov	r6,r17
  806dcc:	880b883a 	mov	r5,r17
  806dd0:	9809883a 	mov	r4,r19
  806dd4:	0806b0c0 	call	806b0c <__multiply>
  806dd8:	88800015 	stw	r2,0(r17)
  806ddc:	10000015 	stw	zero,0(r2)
  806de0:	003fdd06 	br	806d58 <__alt_data_end+0xff806d58>
  806de4:	1025883a 	mov	r18,r2
  806de8:	003fd706 	br	806d48 <__alt_data_end+0xff806d48>
  806dec:	10bfffc4 	addi	r2,r2,-1
  806df0:	1085883a 	add	r2,r2,r2
  806df4:	00c02074 	movhi	r3,129
  806df8:	18fe7804 	addi	r3,r3,-1568
  806dfc:	1085883a 	add	r2,r2,r2
  806e00:	1885883a 	add	r2,r3,r2
  806e04:	11800017 	ldw	r6,0(r2)
  806e08:	000f883a 	mov	r7,zero
  806e0c:	08067940 	call	806794 <__multadd>
  806e10:	1025883a 	mov	r18,r2
  806e14:	003fc706 	br	806d34 <__alt_data_end+0xff806d34>
  806e18:	05000044 	movi	r20,1
  806e1c:	a00b883a 	mov	r5,r20
  806e20:	9809883a 	mov	r4,r19
  806e24:	08066c40 	call	8066c4 <_Balloc>
  806e28:	1023883a 	mov	r17,r2
  806e2c:	00809c44 	movi	r2,625
  806e30:	88800515 	stw	r2,20(r17)
  806e34:	8d000415 	stw	r20,16(r17)
  806e38:	9c401215 	stw	r17,72(r19)
  806e3c:	88000015 	stw	zero,0(r17)
  806e40:	003fc606 	br	806d5c <__alt_data_end+0xff806d5c>

00806e44 <__lshift>:
  806e44:	defff904 	addi	sp,sp,-28
  806e48:	dd400515 	stw	r21,20(sp)
  806e4c:	dcc00315 	stw	r19,12(sp)
  806e50:	302bd17a 	srai	r21,r6,5
  806e54:	2cc00417 	ldw	r19,16(r5)
  806e58:	28800217 	ldw	r2,8(r5)
  806e5c:	dd000415 	stw	r20,16(sp)
  806e60:	ace7883a 	add	r19,r21,r19
  806e64:	dc800215 	stw	r18,8(sp)
  806e68:	dc400115 	stw	r17,4(sp)
  806e6c:	dc000015 	stw	r16,0(sp)
  806e70:	dfc00615 	stw	ra,24(sp)
  806e74:	9c000044 	addi	r16,r19,1
  806e78:	2823883a 	mov	r17,r5
  806e7c:	3029883a 	mov	r20,r6
  806e80:	2025883a 	mov	r18,r4
  806e84:	29400117 	ldw	r5,4(r5)
  806e88:	1400030e 	bge	r2,r16,806e98 <__lshift+0x54>
  806e8c:	1085883a 	add	r2,r2,r2
  806e90:	29400044 	addi	r5,r5,1
  806e94:	143ffd16 	blt	r2,r16,806e8c <__alt_data_end+0xff806e8c>
  806e98:	9009883a 	mov	r4,r18
  806e9c:	08066c40 	call	8066c4 <_Balloc>
  806ea0:	10c00504 	addi	r3,r2,20
  806ea4:	0540070e 	bge	zero,r21,806ec4 <__lshift+0x80>
  806ea8:	ad6b883a 	add	r21,r21,r21
  806eac:	ad6b883a 	add	r21,r21,r21
  806eb0:	1809883a 	mov	r4,r3
  806eb4:	1d47883a 	add	r3,r3,r21
  806eb8:	20000015 	stw	zero,0(r4)
  806ebc:	21000104 	addi	r4,r4,4
  806ec0:	193ffd1e 	bne	r3,r4,806eb8 <__alt_data_end+0xff806eb8>
  806ec4:	8a000417 	ldw	r8,16(r17)
  806ec8:	89000504 	addi	r4,r17,20
  806ecc:	a18007cc 	andi	r6,r20,31
  806ed0:	4211883a 	add	r8,r8,r8
  806ed4:	4211883a 	add	r8,r8,r8
  806ed8:	2211883a 	add	r8,r4,r8
  806edc:	30002326 	beq	r6,zero,806f6c <__lshift+0x128>
  806ee0:	02400804 	movi	r9,32
  806ee4:	4993c83a 	sub	r9,r9,r6
  806ee8:	000b883a 	mov	r5,zero
  806eec:	21c00017 	ldw	r7,0(r4)
  806ef0:	1815883a 	mov	r10,r3
  806ef4:	18c00104 	addi	r3,r3,4
  806ef8:	398e983a 	sll	r7,r7,r6
  806efc:	21000104 	addi	r4,r4,4
  806f00:	394ab03a 	or	r5,r7,r5
  806f04:	197fff15 	stw	r5,-4(r3)
  806f08:	217fff17 	ldw	r5,-4(r4)
  806f0c:	2a4ad83a 	srl	r5,r5,r9
  806f10:	223ff636 	bltu	r4,r8,806eec <__alt_data_end+0xff806eec>
  806f14:	51400115 	stw	r5,4(r10)
  806f18:	28001a1e 	bne	r5,zero,806f84 <__lshift+0x140>
  806f1c:	843fffc4 	addi	r16,r16,-1
  806f20:	14000415 	stw	r16,16(r2)
  806f24:	88000826 	beq	r17,zero,806f48 <__lshift+0x104>
  806f28:	89000117 	ldw	r4,4(r17)
  806f2c:	90c01317 	ldw	r3,76(r18)
  806f30:	2109883a 	add	r4,r4,r4
  806f34:	2109883a 	add	r4,r4,r4
  806f38:	1907883a 	add	r3,r3,r4
  806f3c:	19000017 	ldw	r4,0(r3)
  806f40:	89000015 	stw	r4,0(r17)
  806f44:	1c400015 	stw	r17,0(r3)
  806f48:	dfc00617 	ldw	ra,24(sp)
  806f4c:	dd400517 	ldw	r21,20(sp)
  806f50:	dd000417 	ldw	r20,16(sp)
  806f54:	dcc00317 	ldw	r19,12(sp)
  806f58:	dc800217 	ldw	r18,8(sp)
  806f5c:	dc400117 	ldw	r17,4(sp)
  806f60:	dc000017 	ldw	r16,0(sp)
  806f64:	dec00704 	addi	sp,sp,28
  806f68:	f800283a 	ret
  806f6c:	21400017 	ldw	r5,0(r4)
  806f70:	18c00104 	addi	r3,r3,4
  806f74:	21000104 	addi	r4,r4,4
  806f78:	197fff15 	stw	r5,-4(r3)
  806f7c:	223ffb36 	bltu	r4,r8,806f6c <__alt_data_end+0xff806f6c>
  806f80:	003fe606 	br	806f1c <__alt_data_end+0xff806f1c>
  806f84:	9c000084 	addi	r16,r19,2
  806f88:	003fe406 	br	806f1c <__alt_data_end+0xff806f1c>

00806f8c <__mcmp>:
  806f8c:	20800417 	ldw	r2,16(r4)
  806f90:	28c00417 	ldw	r3,16(r5)
  806f94:	10c5c83a 	sub	r2,r2,r3
  806f98:	1000111e 	bne	r2,zero,806fe0 <__mcmp+0x54>
  806f9c:	18c7883a 	add	r3,r3,r3
  806fa0:	18c7883a 	add	r3,r3,r3
  806fa4:	21000504 	addi	r4,r4,20
  806fa8:	29400504 	addi	r5,r5,20
  806fac:	20c5883a 	add	r2,r4,r3
  806fb0:	28cb883a 	add	r5,r5,r3
  806fb4:	00000106 	br	806fbc <__mcmp+0x30>
  806fb8:	20800a2e 	bgeu	r4,r2,806fe4 <__mcmp+0x58>
  806fbc:	10bfff04 	addi	r2,r2,-4
  806fc0:	297fff04 	addi	r5,r5,-4
  806fc4:	11800017 	ldw	r6,0(r2)
  806fc8:	28c00017 	ldw	r3,0(r5)
  806fcc:	30fffa26 	beq	r6,r3,806fb8 <__alt_data_end+0xff806fb8>
  806fd0:	30c00236 	bltu	r6,r3,806fdc <__mcmp+0x50>
  806fd4:	00800044 	movi	r2,1
  806fd8:	f800283a 	ret
  806fdc:	00bfffc4 	movi	r2,-1
  806fe0:	f800283a 	ret
  806fe4:	0005883a 	mov	r2,zero
  806fe8:	f800283a 	ret

00806fec <__mdiff>:
  806fec:	28c00417 	ldw	r3,16(r5)
  806ff0:	30800417 	ldw	r2,16(r6)
  806ff4:	defffa04 	addi	sp,sp,-24
  806ff8:	dcc00315 	stw	r19,12(sp)
  806ffc:	dc800215 	stw	r18,8(sp)
  807000:	dfc00515 	stw	ra,20(sp)
  807004:	dd000415 	stw	r20,16(sp)
  807008:	dc400115 	stw	r17,4(sp)
  80700c:	dc000015 	stw	r16,0(sp)
  807010:	1887c83a 	sub	r3,r3,r2
  807014:	2825883a 	mov	r18,r5
  807018:	3027883a 	mov	r19,r6
  80701c:	1800141e 	bne	r3,zero,807070 <__mdiff+0x84>
  807020:	1085883a 	add	r2,r2,r2
  807024:	1085883a 	add	r2,r2,r2
  807028:	2a000504 	addi	r8,r5,20
  80702c:	34000504 	addi	r16,r6,20
  807030:	4087883a 	add	r3,r8,r2
  807034:	8085883a 	add	r2,r16,r2
  807038:	00000106 	br	807040 <__mdiff+0x54>
  80703c:	40c0592e 	bgeu	r8,r3,8071a4 <__mdiff+0x1b8>
  807040:	18ffff04 	addi	r3,r3,-4
  807044:	10bfff04 	addi	r2,r2,-4
  807048:	19c00017 	ldw	r7,0(r3)
  80704c:	11400017 	ldw	r5,0(r2)
  807050:	397ffa26 	beq	r7,r5,80703c <__alt_data_end+0xff80703c>
  807054:	3940592e 	bgeu	r7,r5,8071bc <__mdiff+0x1d0>
  807058:	9005883a 	mov	r2,r18
  80705c:	4023883a 	mov	r17,r8
  807060:	9825883a 	mov	r18,r19
  807064:	05000044 	movi	r20,1
  807068:	1027883a 	mov	r19,r2
  80706c:	00000406 	br	807080 <__mdiff+0x94>
  807070:	18005616 	blt	r3,zero,8071cc <__mdiff+0x1e0>
  807074:	34400504 	addi	r17,r6,20
  807078:	2c000504 	addi	r16,r5,20
  80707c:	0029883a 	mov	r20,zero
  807080:	91400117 	ldw	r5,4(r18)
  807084:	08066c40 	call	8066c4 <_Balloc>
  807088:	92400417 	ldw	r9,16(r18)
  80708c:	9b000417 	ldw	r12,16(r19)
  807090:	12c00504 	addi	r11,r2,20
  807094:	4a51883a 	add	r8,r9,r9
  807098:	6319883a 	add	r12,r12,r12
  80709c:	4211883a 	add	r8,r8,r8
  8070a0:	6319883a 	add	r12,r12,r12
  8070a4:	15000315 	stw	r20,12(r2)
  8070a8:	8211883a 	add	r8,r16,r8
  8070ac:	8b19883a 	add	r12,r17,r12
  8070b0:	0007883a 	mov	r3,zero
  8070b4:	81400017 	ldw	r5,0(r16)
  8070b8:	89c00017 	ldw	r7,0(r17)
  8070bc:	59800104 	addi	r6,r11,4
  8070c0:	293fffcc 	andi	r4,r5,65535
  8070c4:	20c7883a 	add	r3,r4,r3
  8070c8:	393fffcc 	andi	r4,r7,65535
  8070cc:	1909c83a 	sub	r4,r3,r4
  8070d0:	280ad43a 	srli	r5,r5,16
  8070d4:	380ed43a 	srli	r7,r7,16
  8070d8:	2007d43a 	srai	r3,r4,16
  8070dc:	213fffcc 	andi	r4,r4,65535
  8070e0:	29cbc83a 	sub	r5,r5,r7
  8070e4:	28c7883a 	add	r3,r5,r3
  8070e8:	180a943a 	slli	r5,r3,16
  8070ec:	8c400104 	addi	r17,r17,4
  8070f0:	84000104 	addi	r16,r16,4
  8070f4:	2908b03a 	or	r4,r5,r4
  8070f8:	59000015 	stw	r4,0(r11)
  8070fc:	1807d43a 	srai	r3,r3,16
  807100:	3015883a 	mov	r10,r6
  807104:	3017883a 	mov	r11,r6
  807108:	8b3fea36 	bltu	r17,r12,8070b4 <__alt_data_end+0xff8070b4>
  80710c:	8200162e 	bgeu	r16,r8,807168 <__mdiff+0x17c>
  807110:	8017883a 	mov	r11,r16
  807114:	59400017 	ldw	r5,0(r11)
  807118:	31800104 	addi	r6,r6,4
  80711c:	5ac00104 	addi	r11,r11,4
  807120:	293fffcc 	andi	r4,r5,65535
  807124:	20c7883a 	add	r3,r4,r3
  807128:	280ed43a 	srli	r7,r5,16
  80712c:	180bd43a 	srai	r5,r3,16
  807130:	193fffcc 	andi	r4,r3,65535
  807134:	3947883a 	add	r3,r7,r5
  807138:	180a943a 	slli	r5,r3,16
  80713c:	1807d43a 	srai	r3,r3,16
  807140:	2908b03a 	or	r4,r5,r4
  807144:	313fff15 	stw	r4,-4(r6)
  807148:	5a3ff236 	bltu	r11,r8,807114 <__alt_data_end+0xff807114>
  80714c:	0406303a 	nor	r3,zero,r16
  807150:	1a07883a 	add	r3,r3,r8
  807154:	1806d0ba 	srli	r3,r3,2
  807158:	18c00044 	addi	r3,r3,1
  80715c:	18c7883a 	add	r3,r3,r3
  807160:	18c7883a 	add	r3,r3,r3
  807164:	50d5883a 	add	r10,r10,r3
  807168:	50ffff04 	addi	r3,r10,-4
  80716c:	2000041e 	bne	r4,zero,807180 <__mdiff+0x194>
  807170:	18ffff04 	addi	r3,r3,-4
  807174:	19000017 	ldw	r4,0(r3)
  807178:	4a7fffc4 	addi	r9,r9,-1
  80717c:	203ffc26 	beq	r4,zero,807170 <__alt_data_end+0xff807170>
  807180:	12400415 	stw	r9,16(r2)
  807184:	dfc00517 	ldw	ra,20(sp)
  807188:	dd000417 	ldw	r20,16(sp)
  80718c:	dcc00317 	ldw	r19,12(sp)
  807190:	dc800217 	ldw	r18,8(sp)
  807194:	dc400117 	ldw	r17,4(sp)
  807198:	dc000017 	ldw	r16,0(sp)
  80719c:	dec00604 	addi	sp,sp,24
  8071a0:	f800283a 	ret
  8071a4:	000b883a 	mov	r5,zero
  8071a8:	08066c40 	call	8066c4 <_Balloc>
  8071ac:	00c00044 	movi	r3,1
  8071b0:	10c00415 	stw	r3,16(r2)
  8071b4:	10000515 	stw	zero,20(r2)
  8071b8:	003ff206 	br	807184 <__alt_data_end+0xff807184>
  8071bc:	8023883a 	mov	r17,r16
  8071c0:	0029883a 	mov	r20,zero
  8071c4:	4021883a 	mov	r16,r8
  8071c8:	003fad06 	br	807080 <__alt_data_end+0xff807080>
  8071cc:	9005883a 	mov	r2,r18
  8071d0:	94400504 	addi	r17,r18,20
  8071d4:	9c000504 	addi	r16,r19,20
  8071d8:	9825883a 	mov	r18,r19
  8071dc:	05000044 	movi	r20,1
  8071e0:	1027883a 	mov	r19,r2
  8071e4:	003fa606 	br	807080 <__alt_data_end+0xff807080>

008071e8 <__ulp>:
  8071e8:	295ffc2c 	andhi	r5,r5,32752
  8071ec:	00bf3034 	movhi	r2,64704
  8071f0:	2887883a 	add	r3,r5,r2
  8071f4:	00c0020e 	bge	zero,r3,807200 <__ulp+0x18>
  8071f8:	0005883a 	mov	r2,zero
  8071fc:	f800283a 	ret
  807200:	00c7c83a 	sub	r3,zero,r3
  807204:	1807d53a 	srai	r3,r3,20
  807208:	008004c4 	movi	r2,19
  80720c:	10c00b0e 	bge	r2,r3,80723c <__ulp+0x54>
  807210:	18bffb04 	addi	r2,r3,-20
  807214:	01000784 	movi	r4,30
  807218:	0007883a 	mov	r3,zero
  80721c:	20800516 	blt	r4,r2,807234 <__ulp+0x4c>
  807220:	010007c4 	movi	r4,31
  807224:	2089c83a 	sub	r4,r4,r2
  807228:	00800044 	movi	r2,1
  80722c:	1104983a 	sll	r2,r2,r4
  807230:	f800283a 	ret
  807234:	00800044 	movi	r2,1
  807238:	f800283a 	ret
  80723c:	01400234 	movhi	r5,8
  807240:	28c7d83a 	sra	r3,r5,r3
  807244:	0005883a 	mov	r2,zero
  807248:	f800283a 	ret

0080724c <__b2d>:
  80724c:	defffa04 	addi	sp,sp,-24
  807250:	dc000015 	stw	r16,0(sp)
  807254:	24000417 	ldw	r16,16(r4)
  807258:	dc400115 	stw	r17,4(sp)
  80725c:	24400504 	addi	r17,r4,20
  807260:	8421883a 	add	r16,r16,r16
  807264:	8421883a 	add	r16,r16,r16
  807268:	8c21883a 	add	r16,r17,r16
  80726c:	dc800215 	stw	r18,8(sp)
  807270:	84bfff17 	ldw	r18,-4(r16)
  807274:	dd000415 	stw	r20,16(sp)
  807278:	dcc00315 	stw	r19,12(sp)
  80727c:	9009883a 	mov	r4,r18
  807280:	2829883a 	mov	r20,r5
  807284:	dfc00515 	stw	ra,20(sp)
  807288:	08069b80 	call	8069b8 <__hi0bits>
  80728c:	00c00804 	movi	r3,32
  807290:	1889c83a 	sub	r4,r3,r2
  807294:	a1000015 	stw	r4,0(r20)
  807298:	01000284 	movi	r4,10
  80729c:	84ffff04 	addi	r19,r16,-4
  8072a0:	20801216 	blt	r4,r2,8072ec <__b2d+0xa0>
  8072a4:	018002c4 	movi	r6,11
  8072a8:	308dc83a 	sub	r6,r6,r2
  8072ac:	9186d83a 	srl	r3,r18,r6
  8072b0:	18cffc34 	orhi	r3,r3,16368
  8072b4:	8cc0212e 	bgeu	r17,r19,80733c <__b2d+0xf0>
  8072b8:	813ffe17 	ldw	r4,-8(r16)
  8072bc:	218cd83a 	srl	r6,r4,r6
  8072c0:	10800544 	addi	r2,r2,21
  8072c4:	9084983a 	sll	r2,r18,r2
  8072c8:	1184b03a 	or	r2,r2,r6
  8072cc:	dfc00517 	ldw	ra,20(sp)
  8072d0:	dd000417 	ldw	r20,16(sp)
  8072d4:	dcc00317 	ldw	r19,12(sp)
  8072d8:	dc800217 	ldw	r18,8(sp)
  8072dc:	dc400117 	ldw	r17,4(sp)
  8072e0:	dc000017 	ldw	r16,0(sp)
  8072e4:	dec00604 	addi	sp,sp,24
  8072e8:	f800283a 	ret
  8072ec:	8cc00f2e 	bgeu	r17,r19,80732c <__b2d+0xe0>
  8072f0:	117ffd44 	addi	r5,r2,-11
  8072f4:	80bffe17 	ldw	r2,-8(r16)
  8072f8:	28000e26 	beq	r5,zero,807334 <__b2d+0xe8>
  8072fc:	1949c83a 	sub	r4,r3,r5
  807300:	9164983a 	sll	r18,r18,r5
  807304:	1106d83a 	srl	r3,r2,r4
  807308:	81bffe04 	addi	r6,r16,-8
  80730c:	948ffc34 	orhi	r18,r18,16368
  807310:	90c6b03a 	or	r3,r18,r3
  807314:	89800e2e 	bgeu	r17,r6,807350 <__b2d+0x104>
  807318:	81bffd17 	ldw	r6,-12(r16)
  80731c:	1144983a 	sll	r2,r2,r5
  807320:	310ad83a 	srl	r5,r6,r4
  807324:	2884b03a 	or	r2,r5,r2
  807328:	003fe806 	br	8072cc <__alt_data_end+0xff8072cc>
  80732c:	10bffd44 	addi	r2,r2,-11
  807330:	1000041e 	bne	r2,zero,807344 <__b2d+0xf8>
  807334:	90cffc34 	orhi	r3,r18,16368
  807338:	003fe406 	br	8072cc <__alt_data_end+0xff8072cc>
  80733c:	000d883a 	mov	r6,zero
  807340:	003fdf06 	br	8072c0 <__alt_data_end+0xff8072c0>
  807344:	90a4983a 	sll	r18,r18,r2
  807348:	0005883a 	mov	r2,zero
  80734c:	003ff906 	br	807334 <__alt_data_end+0xff807334>
  807350:	1144983a 	sll	r2,r2,r5
  807354:	003fdd06 	br	8072cc <__alt_data_end+0xff8072cc>

00807358 <__d2b>:
  807358:	defff804 	addi	sp,sp,-32
  80735c:	dc000215 	stw	r16,8(sp)
  807360:	3021883a 	mov	r16,r6
  807364:	dc400315 	stw	r17,12(sp)
  807368:	8022907a 	slli	r17,r16,1
  80736c:	dd000615 	stw	r20,24(sp)
  807370:	2829883a 	mov	r20,r5
  807374:	01400044 	movi	r5,1
  807378:	dcc00515 	stw	r19,20(sp)
  80737c:	dc800415 	stw	r18,16(sp)
  807380:	dfc00715 	stw	ra,28(sp)
  807384:	3825883a 	mov	r18,r7
  807388:	8822d57a 	srli	r17,r17,21
  80738c:	08066c40 	call	8066c4 <_Balloc>
  807390:	1027883a 	mov	r19,r2
  807394:	00800434 	movhi	r2,16
  807398:	10bfffc4 	addi	r2,r2,-1
  80739c:	808c703a 	and	r6,r16,r2
  8073a0:	88000126 	beq	r17,zero,8073a8 <__d2b+0x50>
  8073a4:	31800434 	orhi	r6,r6,16
  8073a8:	d9800015 	stw	r6,0(sp)
  8073ac:	a0002426 	beq	r20,zero,807440 <__d2b+0xe8>
  8073b0:	d9000104 	addi	r4,sp,4
  8073b4:	dd000115 	stw	r20,4(sp)
  8073b8:	0806a200 	call	806a20 <__lo0bits>
  8073bc:	d8c00017 	ldw	r3,0(sp)
  8073c0:	10002f1e 	bne	r2,zero,807480 <__d2b+0x128>
  8073c4:	d9000117 	ldw	r4,4(sp)
  8073c8:	99000515 	stw	r4,20(r19)
  8073cc:	1821003a 	cmpeq	r16,r3,zero
  8073d0:	01000084 	movi	r4,2
  8073d4:	2421c83a 	sub	r16,r4,r16
  8073d8:	98c00615 	stw	r3,24(r19)
  8073dc:	9c000415 	stw	r16,16(r19)
  8073e0:	88001f1e 	bne	r17,zero,807460 <__d2b+0x108>
  8073e4:	10bef384 	addi	r2,r2,-1074
  8073e8:	90800015 	stw	r2,0(r18)
  8073ec:	00900034 	movhi	r2,16384
  8073f0:	10bfffc4 	addi	r2,r2,-1
  8073f4:	8085883a 	add	r2,r16,r2
  8073f8:	1085883a 	add	r2,r2,r2
  8073fc:	1085883a 	add	r2,r2,r2
  807400:	9885883a 	add	r2,r19,r2
  807404:	11000517 	ldw	r4,20(r2)
  807408:	8020917a 	slli	r16,r16,5
  80740c:	08069b80 	call	8069b8 <__hi0bits>
  807410:	d8c00817 	ldw	r3,32(sp)
  807414:	8085c83a 	sub	r2,r16,r2
  807418:	18800015 	stw	r2,0(r3)
  80741c:	9805883a 	mov	r2,r19
  807420:	dfc00717 	ldw	ra,28(sp)
  807424:	dd000617 	ldw	r20,24(sp)
  807428:	dcc00517 	ldw	r19,20(sp)
  80742c:	dc800417 	ldw	r18,16(sp)
  807430:	dc400317 	ldw	r17,12(sp)
  807434:	dc000217 	ldw	r16,8(sp)
  807438:	dec00804 	addi	sp,sp,32
  80743c:	f800283a 	ret
  807440:	d809883a 	mov	r4,sp
  807444:	0806a200 	call	806a20 <__lo0bits>
  807448:	d8c00017 	ldw	r3,0(sp)
  80744c:	04000044 	movi	r16,1
  807450:	9c000415 	stw	r16,16(r19)
  807454:	98c00515 	stw	r3,20(r19)
  807458:	10800804 	addi	r2,r2,32
  80745c:	883fe126 	beq	r17,zero,8073e4 <__alt_data_end+0xff8073e4>
  807460:	00c00d44 	movi	r3,53
  807464:	8c7ef344 	addi	r17,r17,-1075
  807468:	88a3883a 	add	r17,r17,r2
  80746c:	1885c83a 	sub	r2,r3,r2
  807470:	d8c00817 	ldw	r3,32(sp)
  807474:	94400015 	stw	r17,0(r18)
  807478:	18800015 	stw	r2,0(r3)
  80747c:	003fe706 	br	80741c <__alt_data_end+0xff80741c>
  807480:	01000804 	movi	r4,32
  807484:	2089c83a 	sub	r4,r4,r2
  807488:	1908983a 	sll	r4,r3,r4
  80748c:	d9400117 	ldw	r5,4(sp)
  807490:	1886d83a 	srl	r3,r3,r2
  807494:	2148b03a 	or	r4,r4,r5
  807498:	99000515 	stw	r4,20(r19)
  80749c:	d8c00015 	stw	r3,0(sp)
  8074a0:	003fca06 	br	8073cc <__alt_data_end+0xff8073cc>

008074a4 <__ratio>:
  8074a4:	defff904 	addi	sp,sp,-28
  8074a8:	dc400315 	stw	r17,12(sp)
  8074ac:	2823883a 	mov	r17,r5
  8074b0:	d9400104 	addi	r5,sp,4
  8074b4:	dfc00615 	stw	ra,24(sp)
  8074b8:	dcc00515 	stw	r19,20(sp)
  8074bc:	dc800415 	stw	r18,16(sp)
  8074c0:	2027883a 	mov	r19,r4
  8074c4:	dc000215 	stw	r16,8(sp)
  8074c8:	080724c0 	call	80724c <__b2d>
  8074cc:	d80b883a 	mov	r5,sp
  8074d0:	8809883a 	mov	r4,r17
  8074d4:	1025883a 	mov	r18,r2
  8074d8:	1821883a 	mov	r16,r3
  8074dc:	080724c0 	call	80724c <__b2d>
  8074e0:	8a000417 	ldw	r8,16(r17)
  8074e4:	99000417 	ldw	r4,16(r19)
  8074e8:	d9400117 	ldw	r5,4(sp)
  8074ec:	2209c83a 	sub	r4,r4,r8
  8074f0:	2010917a 	slli	r8,r4,5
  8074f4:	d9000017 	ldw	r4,0(sp)
  8074f8:	2909c83a 	sub	r4,r5,r4
  8074fc:	4109883a 	add	r4,r8,r4
  807500:	01000e0e 	bge	zero,r4,80753c <__ratio+0x98>
  807504:	2008953a 	slli	r4,r4,20
  807508:	2421883a 	add	r16,r4,r16
  80750c:	100d883a 	mov	r6,r2
  807510:	180f883a 	mov	r7,r3
  807514:	9009883a 	mov	r4,r18
  807518:	800b883a 	mov	r5,r16
  80751c:	080b3900 	call	80b390 <__divdf3>
  807520:	dfc00617 	ldw	ra,24(sp)
  807524:	dcc00517 	ldw	r19,20(sp)
  807528:	dc800417 	ldw	r18,16(sp)
  80752c:	dc400317 	ldw	r17,12(sp)
  807530:	dc000217 	ldw	r16,8(sp)
  807534:	dec00704 	addi	sp,sp,28
  807538:	f800283a 	ret
  80753c:	2008953a 	slli	r4,r4,20
  807540:	1907c83a 	sub	r3,r3,r4
  807544:	003ff106 	br	80750c <__alt_data_end+0xff80750c>

00807548 <_mprec_log10>:
  807548:	defffe04 	addi	sp,sp,-8
  80754c:	dc000015 	stw	r16,0(sp)
  807550:	dfc00115 	stw	ra,4(sp)
  807554:	008005c4 	movi	r2,23
  807558:	2021883a 	mov	r16,r4
  80755c:	11000d0e 	bge	r2,r4,807594 <_mprec_log10+0x4c>
  807560:	0005883a 	mov	r2,zero
  807564:	00cffc34 	movhi	r3,16368
  807568:	843fffc4 	addi	r16,r16,-1
  80756c:	000d883a 	mov	r6,zero
  807570:	01d00934 	movhi	r7,16420
  807574:	1009883a 	mov	r4,r2
  807578:	180b883a 	mov	r5,r3
  80757c:	080bed00 	call	80bed0 <__muldf3>
  807580:	803ff91e 	bne	r16,zero,807568 <__alt_data_end+0xff807568>
  807584:	dfc00117 	ldw	ra,4(sp)
  807588:	dc000017 	ldw	r16,0(sp)
  80758c:	dec00204 	addi	sp,sp,8
  807590:	f800283a 	ret
  807594:	202090fa 	slli	r16,r4,3
  807598:	00802074 	movhi	r2,129
  80759c:	10be8f04 	addi	r2,r2,-1476
  8075a0:	1421883a 	add	r16,r2,r16
  8075a4:	80800017 	ldw	r2,0(r16)
  8075a8:	80c00117 	ldw	r3,4(r16)
  8075ac:	dfc00117 	ldw	ra,4(sp)
  8075b0:	dc000017 	ldw	r16,0(sp)
  8075b4:	dec00204 	addi	sp,sp,8
  8075b8:	f800283a 	ret

008075bc <__copybits>:
  8075bc:	297fffc4 	addi	r5,r5,-1
  8075c0:	280fd17a 	srai	r7,r5,5
  8075c4:	30c00417 	ldw	r3,16(r6)
  8075c8:	30800504 	addi	r2,r6,20
  8075cc:	39c00044 	addi	r7,r7,1
  8075d0:	18c7883a 	add	r3,r3,r3
  8075d4:	39cf883a 	add	r7,r7,r7
  8075d8:	18c7883a 	add	r3,r3,r3
  8075dc:	39cf883a 	add	r7,r7,r7
  8075e0:	10c7883a 	add	r3,r2,r3
  8075e4:	21cf883a 	add	r7,r4,r7
  8075e8:	10c00d2e 	bgeu	r2,r3,807620 <__copybits+0x64>
  8075ec:	200b883a 	mov	r5,r4
  8075f0:	12000017 	ldw	r8,0(r2)
  8075f4:	29400104 	addi	r5,r5,4
  8075f8:	10800104 	addi	r2,r2,4
  8075fc:	2a3fff15 	stw	r8,-4(r5)
  807600:	10fffb36 	bltu	r2,r3,8075f0 <__alt_data_end+0xff8075f0>
  807604:	1985c83a 	sub	r2,r3,r6
  807608:	10bffac4 	addi	r2,r2,-21
  80760c:	1004d0ba 	srli	r2,r2,2
  807610:	10800044 	addi	r2,r2,1
  807614:	1085883a 	add	r2,r2,r2
  807618:	1085883a 	add	r2,r2,r2
  80761c:	2089883a 	add	r4,r4,r2
  807620:	21c0032e 	bgeu	r4,r7,807630 <__copybits+0x74>
  807624:	20000015 	stw	zero,0(r4)
  807628:	21000104 	addi	r4,r4,4
  80762c:	21fffd36 	bltu	r4,r7,807624 <__alt_data_end+0xff807624>
  807630:	f800283a 	ret

00807634 <__any_on>:
  807634:	20c00417 	ldw	r3,16(r4)
  807638:	2805d17a 	srai	r2,r5,5
  80763c:	21000504 	addi	r4,r4,20
  807640:	18800d0e 	bge	r3,r2,807678 <__any_on+0x44>
  807644:	18c7883a 	add	r3,r3,r3
  807648:	18c7883a 	add	r3,r3,r3
  80764c:	20c7883a 	add	r3,r4,r3
  807650:	20c0192e 	bgeu	r4,r3,8076b8 <__any_on+0x84>
  807654:	18bfff17 	ldw	r2,-4(r3)
  807658:	18ffff04 	addi	r3,r3,-4
  80765c:	1000041e 	bne	r2,zero,807670 <__any_on+0x3c>
  807660:	20c0142e 	bgeu	r4,r3,8076b4 <__any_on+0x80>
  807664:	18ffff04 	addi	r3,r3,-4
  807668:	19400017 	ldw	r5,0(r3)
  80766c:	283ffc26 	beq	r5,zero,807660 <__alt_data_end+0xff807660>
  807670:	00800044 	movi	r2,1
  807674:	f800283a 	ret
  807678:	10c00a0e 	bge	r2,r3,8076a4 <__any_on+0x70>
  80767c:	1085883a 	add	r2,r2,r2
  807680:	1085883a 	add	r2,r2,r2
  807684:	294007cc 	andi	r5,r5,31
  807688:	2087883a 	add	r3,r4,r2
  80768c:	283ff026 	beq	r5,zero,807650 <__alt_data_end+0xff807650>
  807690:	19800017 	ldw	r6,0(r3)
  807694:	3144d83a 	srl	r2,r6,r5
  807698:	114a983a 	sll	r5,r2,r5
  80769c:	317ff41e 	bne	r6,r5,807670 <__alt_data_end+0xff807670>
  8076a0:	003feb06 	br	807650 <__alt_data_end+0xff807650>
  8076a4:	1085883a 	add	r2,r2,r2
  8076a8:	1085883a 	add	r2,r2,r2
  8076ac:	2087883a 	add	r3,r4,r2
  8076b0:	003fe706 	br	807650 <__alt_data_end+0xff807650>
  8076b4:	f800283a 	ret
  8076b8:	0005883a 	mov	r2,zero
  8076bc:	f800283a 	ret

008076c0 <_realloc_r>:
  8076c0:	defff604 	addi	sp,sp,-40
  8076c4:	dc800215 	stw	r18,8(sp)
  8076c8:	dfc00915 	stw	ra,36(sp)
  8076cc:	df000815 	stw	fp,32(sp)
  8076d0:	ddc00715 	stw	r23,28(sp)
  8076d4:	dd800615 	stw	r22,24(sp)
  8076d8:	dd400515 	stw	r21,20(sp)
  8076dc:	dd000415 	stw	r20,16(sp)
  8076e0:	dcc00315 	stw	r19,12(sp)
  8076e4:	dc400115 	stw	r17,4(sp)
  8076e8:	dc000015 	stw	r16,0(sp)
  8076ec:	3025883a 	mov	r18,r6
  8076f0:	2800b726 	beq	r5,zero,8079d0 <_realloc_r+0x310>
  8076f4:	282b883a 	mov	r21,r5
  8076f8:	2029883a 	mov	r20,r4
  8076fc:	080d6640 	call	80d664 <__malloc_lock>
  807700:	a8bfff17 	ldw	r2,-4(r21)
  807704:	043fff04 	movi	r16,-4
  807708:	90c002c4 	addi	r3,r18,11
  80770c:	01000584 	movi	r4,22
  807710:	acfffe04 	addi	r19,r21,-8
  807714:	1420703a 	and	r16,r2,r16
  807718:	20c0332e 	bgeu	r4,r3,8077e8 <_realloc_r+0x128>
  80771c:	047ffe04 	movi	r17,-8
  807720:	1c62703a 	and	r17,r3,r17
  807724:	8807883a 	mov	r3,r17
  807728:	88005816 	blt	r17,zero,80788c <_realloc_r+0x1cc>
  80772c:	8c805736 	bltu	r17,r18,80788c <_realloc_r+0x1cc>
  807730:	80c0300e 	bge	r16,r3,8077f4 <_realloc_r+0x134>
  807734:	07002074 	movhi	fp,129
  807738:	e73ffb04 	addi	fp,fp,-20
  80773c:	e1c00217 	ldw	r7,8(fp)
  807740:	9c09883a 	add	r4,r19,r16
  807744:	22000117 	ldw	r8,4(r4)
  807748:	21c06326 	beq	r4,r7,8078d8 <_realloc_r+0x218>
  80774c:	017fff84 	movi	r5,-2
  807750:	414a703a 	and	r5,r8,r5
  807754:	214b883a 	add	r5,r4,r5
  807758:	29800117 	ldw	r6,4(r5)
  80775c:	3180004c 	andi	r6,r6,1
  807760:	30003f26 	beq	r6,zero,807860 <_realloc_r+0x1a0>
  807764:	1080004c 	andi	r2,r2,1
  807768:	10008326 	beq	r2,zero,807978 <_realloc_r+0x2b8>
  80776c:	900b883a 	mov	r5,r18
  807770:	a009883a 	mov	r4,r20
  807774:	0805a080 	call	805a08 <_malloc_r>
  807778:	1025883a 	mov	r18,r2
  80777c:	10011e26 	beq	r2,zero,807bf8 <_realloc_r+0x538>
  807780:	a93fff17 	ldw	r4,-4(r21)
  807784:	10fffe04 	addi	r3,r2,-8
  807788:	00bfff84 	movi	r2,-2
  80778c:	2084703a 	and	r2,r4,r2
  807790:	9885883a 	add	r2,r19,r2
  807794:	1880ee26 	beq	r3,r2,807b50 <_realloc_r+0x490>
  807798:	81bfff04 	addi	r6,r16,-4
  80779c:	00800904 	movi	r2,36
  8077a0:	1180b836 	bltu	r2,r6,807a84 <_realloc_r+0x3c4>
  8077a4:	00c004c4 	movi	r3,19
  8077a8:	19809636 	bltu	r3,r6,807a04 <_realloc_r+0x344>
  8077ac:	9005883a 	mov	r2,r18
  8077b0:	a807883a 	mov	r3,r21
  8077b4:	19000017 	ldw	r4,0(r3)
  8077b8:	11000015 	stw	r4,0(r2)
  8077bc:	19000117 	ldw	r4,4(r3)
  8077c0:	11000115 	stw	r4,4(r2)
  8077c4:	18c00217 	ldw	r3,8(r3)
  8077c8:	10c00215 	stw	r3,8(r2)
  8077cc:	a80b883a 	mov	r5,r21
  8077d0:	a009883a 	mov	r4,r20
  8077d4:	0804e1c0 	call	804e1c <_free_r>
  8077d8:	a009883a 	mov	r4,r20
  8077dc:	080d6880 	call	80d688 <__malloc_unlock>
  8077e0:	9005883a 	mov	r2,r18
  8077e4:	00001206 	br	807830 <_realloc_r+0x170>
  8077e8:	00c00404 	movi	r3,16
  8077ec:	1823883a 	mov	r17,r3
  8077f0:	003fce06 	br	80772c <__alt_data_end+0xff80772c>
  8077f4:	a825883a 	mov	r18,r21
  8077f8:	8445c83a 	sub	r2,r16,r17
  8077fc:	00c003c4 	movi	r3,15
  807800:	18802636 	bltu	r3,r2,80789c <_realloc_r+0x1dc>
  807804:	99800117 	ldw	r6,4(r19)
  807808:	9c07883a 	add	r3,r19,r16
  80780c:	3180004c 	andi	r6,r6,1
  807810:	3420b03a 	or	r16,r6,r16
  807814:	9c000115 	stw	r16,4(r19)
  807818:	18800117 	ldw	r2,4(r3)
  80781c:	10800054 	ori	r2,r2,1
  807820:	18800115 	stw	r2,4(r3)
  807824:	a009883a 	mov	r4,r20
  807828:	080d6880 	call	80d688 <__malloc_unlock>
  80782c:	9005883a 	mov	r2,r18
  807830:	dfc00917 	ldw	ra,36(sp)
  807834:	df000817 	ldw	fp,32(sp)
  807838:	ddc00717 	ldw	r23,28(sp)
  80783c:	dd800617 	ldw	r22,24(sp)
  807840:	dd400517 	ldw	r21,20(sp)
  807844:	dd000417 	ldw	r20,16(sp)
  807848:	dcc00317 	ldw	r19,12(sp)
  80784c:	dc800217 	ldw	r18,8(sp)
  807850:	dc400117 	ldw	r17,4(sp)
  807854:	dc000017 	ldw	r16,0(sp)
  807858:	dec00a04 	addi	sp,sp,40
  80785c:	f800283a 	ret
  807860:	017fff04 	movi	r5,-4
  807864:	414a703a 	and	r5,r8,r5
  807868:	814d883a 	add	r6,r16,r5
  80786c:	30c01f16 	blt	r6,r3,8078ec <_realloc_r+0x22c>
  807870:	20800317 	ldw	r2,12(r4)
  807874:	20c00217 	ldw	r3,8(r4)
  807878:	a825883a 	mov	r18,r21
  80787c:	3021883a 	mov	r16,r6
  807880:	18800315 	stw	r2,12(r3)
  807884:	10c00215 	stw	r3,8(r2)
  807888:	003fdb06 	br	8077f8 <__alt_data_end+0xff8077f8>
  80788c:	00800304 	movi	r2,12
  807890:	a0800015 	stw	r2,0(r20)
  807894:	0005883a 	mov	r2,zero
  807898:	003fe506 	br	807830 <__alt_data_end+0xff807830>
  80789c:	98c00117 	ldw	r3,4(r19)
  8078a0:	9c4b883a 	add	r5,r19,r17
  8078a4:	11000054 	ori	r4,r2,1
  8078a8:	18c0004c 	andi	r3,r3,1
  8078ac:	1c62b03a 	or	r17,r3,r17
  8078b0:	9c400115 	stw	r17,4(r19)
  8078b4:	29000115 	stw	r4,4(r5)
  8078b8:	2885883a 	add	r2,r5,r2
  8078bc:	10c00117 	ldw	r3,4(r2)
  8078c0:	29400204 	addi	r5,r5,8
  8078c4:	a009883a 	mov	r4,r20
  8078c8:	18c00054 	ori	r3,r3,1
  8078cc:	10c00115 	stw	r3,4(r2)
  8078d0:	0804e1c0 	call	804e1c <_free_r>
  8078d4:	003fd306 	br	807824 <__alt_data_end+0xff807824>
  8078d8:	017fff04 	movi	r5,-4
  8078dc:	414a703a 	and	r5,r8,r5
  8078e0:	89800404 	addi	r6,r17,16
  8078e4:	8151883a 	add	r8,r16,r5
  8078e8:	4180590e 	bge	r8,r6,807a50 <_realloc_r+0x390>
  8078ec:	1080004c 	andi	r2,r2,1
  8078f0:	103f9e1e 	bne	r2,zero,80776c <__alt_data_end+0xff80776c>
  8078f4:	adbffe17 	ldw	r22,-8(r21)
  8078f8:	00bfff04 	movi	r2,-4
  8078fc:	9dadc83a 	sub	r22,r19,r22
  807900:	b1800117 	ldw	r6,4(r22)
  807904:	3084703a 	and	r2,r6,r2
  807908:	20002026 	beq	r4,zero,80798c <_realloc_r+0x2cc>
  80790c:	80af883a 	add	r23,r16,r2
  807910:	b96f883a 	add	r23,r23,r5
  807914:	21c05f26 	beq	r4,r7,807a94 <_realloc_r+0x3d4>
  807918:	b8c01c16 	blt	r23,r3,80798c <_realloc_r+0x2cc>
  80791c:	20800317 	ldw	r2,12(r4)
  807920:	20c00217 	ldw	r3,8(r4)
  807924:	81bfff04 	addi	r6,r16,-4
  807928:	01000904 	movi	r4,36
  80792c:	18800315 	stw	r2,12(r3)
  807930:	10c00215 	stw	r3,8(r2)
  807934:	b0c00217 	ldw	r3,8(r22)
  807938:	b0800317 	ldw	r2,12(r22)
  80793c:	b4800204 	addi	r18,r22,8
  807940:	18800315 	stw	r2,12(r3)
  807944:	10c00215 	stw	r3,8(r2)
  807948:	21801b36 	bltu	r4,r6,8079b8 <_realloc_r+0x2f8>
  80794c:	008004c4 	movi	r2,19
  807950:	1180352e 	bgeu	r2,r6,807a28 <_realloc_r+0x368>
  807954:	a8800017 	ldw	r2,0(r21)
  807958:	b0800215 	stw	r2,8(r22)
  80795c:	a8800117 	ldw	r2,4(r21)
  807960:	b0800315 	stw	r2,12(r22)
  807964:	008006c4 	movi	r2,27
  807968:	11807f36 	bltu	r2,r6,807b68 <_realloc_r+0x4a8>
  80796c:	b0800404 	addi	r2,r22,16
  807970:	ad400204 	addi	r21,r21,8
  807974:	00002d06 	br	807a2c <_realloc_r+0x36c>
  807978:	adbffe17 	ldw	r22,-8(r21)
  80797c:	00bfff04 	movi	r2,-4
  807980:	9dadc83a 	sub	r22,r19,r22
  807984:	b1000117 	ldw	r4,4(r22)
  807988:	2084703a 	and	r2,r4,r2
  80798c:	b03f7726 	beq	r22,zero,80776c <__alt_data_end+0xff80776c>
  807990:	80af883a 	add	r23,r16,r2
  807994:	b8ff7516 	blt	r23,r3,80776c <__alt_data_end+0xff80776c>
  807998:	b0800317 	ldw	r2,12(r22)
  80799c:	b0c00217 	ldw	r3,8(r22)
  8079a0:	81bfff04 	addi	r6,r16,-4
  8079a4:	01000904 	movi	r4,36
  8079a8:	18800315 	stw	r2,12(r3)
  8079ac:	10c00215 	stw	r3,8(r2)
  8079b0:	b4800204 	addi	r18,r22,8
  8079b4:	21bfe52e 	bgeu	r4,r6,80794c <__alt_data_end+0xff80794c>
  8079b8:	a80b883a 	mov	r5,r21
  8079bc:	9009883a 	mov	r4,r18
  8079c0:	08064400 	call	806440 <memmove>
  8079c4:	b821883a 	mov	r16,r23
  8079c8:	b027883a 	mov	r19,r22
  8079cc:	003f8a06 	br	8077f8 <__alt_data_end+0xff8077f8>
  8079d0:	300b883a 	mov	r5,r6
  8079d4:	dfc00917 	ldw	ra,36(sp)
  8079d8:	df000817 	ldw	fp,32(sp)
  8079dc:	ddc00717 	ldw	r23,28(sp)
  8079e0:	dd800617 	ldw	r22,24(sp)
  8079e4:	dd400517 	ldw	r21,20(sp)
  8079e8:	dd000417 	ldw	r20,16(sp)
  8079ec:	dcc00317 	ldw	r19,12(sp)
  8079f0:	dc800217 	ldw	r18,8(sp)
  8079f4:	dc400117 	ldw	r17,4(sp)
  8079f8:	dc000017 	ldw	r16,0(sp)
  8079fc:	dec00a04 	addi	sp,sp,40
  807a00:	0805a081 	jmpi	805a08 <_malloc_r>
  807a04:	a8c00017 	ldw	r3,0(r21)
  807a08:	90c00015 	stw	r3,0(r18)
  807a0c:	a8c00117 	ldw	r3,4(r21)
  807a10:	90c00115 	stw	r3,4(r18)
  807a14:	00c006c4 	movi	r3,27
  807a18:	19804536 	bltu	r3,r6,807b30 <_realloc_r+0x470>
  807a1c:	90800204 	addi	r2,r18,8
  807a20:	a8c00204 	addi	r3,r21,8
  807a24:	003f6306 	br	8077b4 <__alt_data_end+0xff8077b4>
  807a28:	9005883a 	mov	r2,r18
  807a2c:	a8c00017 	ldw	r3,0(r21)
  807a30:	b821883a 	mov	r16,r23
  807a34:	b027883a 	mov	r19,r22
  807a38:	10c00015 	stw	r3,0(r2)
  807a3c:	a8c00117 	ldw	r3,4(r21)
  807a40:	10c00115 	stw	r3,4(r2)
  807a44:	a8c00217 	ldw	r3,8(r21)
  807a48:	10c00215 	stw	r3,8(r2)
  807a4c:	003f6a06 	br	8077f8 <__alt_data_end+0xff8077f8>
  807a50:	9c67883a 	add	r19,r19,r17
  807a54:	4445c83a 	sub	r2,r8,r17
  807a58:	e4c00215 	stw	r19,8(fp)
  807a5c:	10800054 	ori	r2,r2,1
  807a60:	98800115 	stw	r2,4(r19)
  807a64:	a8bfff17 	ldw	r2,-4(r21)
  807a68:	a009883a 	mov	r4,r20
  807a6c:	1080004c 	andi	r2,r2,1
  807a70:	1462b03a 	or	r17,r2,r17
  807a74:	ac7fff15 	stw	r17,-4(r21)
  807a78:	080d6880 	call	80d688 <__malloc_unlock>
  807a7c:	a805883a 	mov	r2,r21
  807a80:	003f6b06 	br	807830 <__alt_data_end+0xff807830>
  807a84:	a80b883a 	mov	r5,r21
  807a88:	9009883a 	mov	r4,r18
  807a8c:	08064400 	call	806440 <memmove>
  807a90:	003f4e06 	br	8077cc <__alt_data_end+0xff8077cc>
  807a94:	89000404 	addi	r4,r17,16
  807a98:	b93fbc16 	blt	r23,r4,80798c <__alt_data_end+0xff80798c>
  807a9c:	b0800317 	ldw	r2,12(r22)
  807aa0:	b0c00217 	ldw	r3,8(r22)
  807aa4:	81bfff04 	addi	r6,r16,-4
  807aa8:	01000904 	movi	r4,36
  807aac:	18800315 	stw	r2,12(r3)
  807ab0:	10c00215 	stw	r3,8(r2)
  807ab4:	b4800204 	addi	r18,r22,8
  807ab8:	21804336 	bltu	r4,r6,807bc8 <_realloc_r+0x508>
  807abc:	008004c4 	movi	r2,19
  807ac0:	11803f2e 	bgeu	r2,r6,807bc0 <_realloc_r+0x500>
  807ac4:	a8800017 	ldw	r2,0(r21)
  807ac8:	b0800215 	stw	r2,8(r22)
  807acc:	a8800117 	ldw	r2,4(r21)
  807ad0:	b0800315 	stw	r2,12(r22)
  807ad4:	008006c4 	movi	r2,27
  807ad8:	11803f36 	bltu	r2,r6,807bd8 <_realloc_r+0x518>
  807adc:	b0800404 	addi	r2,r22,16
  807ae0:	ad400204 	addi	r21,r21,8
  807ae4:	a8c00017 	ldw	r3,0(r21)
  807ae8:	10c00015 	stw	r3,0(r2)
  807aec:	a8c00117 	ldw	r3,4(r21)
  807af0:	10c00115 	stw	r3,4(r2)
  807af4:	a8c00217 	ldw	r3,8(r21)
  807af8:	10c00215 	stw	r3,8(r2)
  807afc:	b447883a 	add	r3,r22,r17
  807b00:	bc45c83a 	sub	r2,r23,r17
  807b04:	e0c00215 	stw	r3,8(fp)
  807b08:	10800054 	ori	r2,r2,1
  807b0c:	18800115 	stw	r2,4(r3)
  807b10:	b0800117 	ldw	r2,4(r22)
  807b14:	a009883a 	mov	r4,r20
  807b18:	1080004c 	andi	r2,r2,1
  807b1c:	1462b03a 	or	r17,r2,r17
  807b20:	b4400115 	stw	r17,4(r22)
  807b24:	080d6880 	call	80d688 <__malloc_unlock>
  807b28:	9005883a 	mov	r2,r18
  807b2c:	003f4006 	br	807830 <__alt_data_end+0xff807830>
  807b30:	a8c00217 	ldw	r3,8(r21)
  807b34:	90c00215 	stw	r3,8(r18)
  807b38:	a8c00317 	ldw	r3,12(r21)
  807b3c:	90c00315 	stw	r3,12(r18)
  807b40:	30801126 	beq	r6,r2,807b88 <_realloc_r+0x4c8>
  807b44:	90800404 	addi	r2,r18,16
  807b48:	a8c00404 	addi	r3,r21,16
  807b4c:	003f1906 	br	8077b4 <__alt_data_end+0xff8077b4>
  807b50:	90ffff17 	ldw	r3,-4(r18)
  807b54:	00bfff04 	movi	r2,-4
  807b58:	a825883a 	mov	r18,r21
  807b5c:	1884703a 	and	r2,r3,r2
  807b60:	80a1883a 	add	r16,r16,r2
  807b64:	003f2406 	br	8077f8 <__alt_data_end+0xff8077f8>
  807b68:	a8800217 	ldw	r2,8(r21)
  807b6c:	b0800415 	stw	r2,16(r22)
  807b70:	a8800317 	ldw	r2,12(r21)
  807b74:	b0800515 	stw	r2,20(r22)
  807b78:	31000a26 	beq	r6,r4,807ba4 <_realloc_r+0x4e4>
  807b7c:	b0800604 	addi	r2,r22,24
  807b80:	ad400404 	addi	r21,r21,16
  807b84:	003fa906 	br	807a2c <__alt_data_end+0xff807a2c>
  807b88:	a9000417 	ldw	r4,16(r21)
  807b8c:	90800604 	addi	r2,r18,24
  807b90:	a8c00604 	addi	r3,r21,24
  807b94:	91000415 	stw	r4,16(r18)
  807b98:	a9000517 	ldw	r4,20(r21)
  807b9c:	91000515 	stw	r4,20(r18)
  807ba0:	003f0406 	br	8077b4 <__alt_data_end+0xff8077b4>
  807ba4:	a8c00417 	ldw	r3,16(r21)
  807ba8:	ad400604 	addi	r21,r21,24
  807bac:	b0800804 	addi	r2,r22,32
  807bb0:	b0c00615 	stw	r3,24(r22)
  807bb4:	a8ffff17 	ldw	r3,-4(r21)
  807bb8:	b0c00715 	stw	r3,28(r22)
  807bbc:	003f9b06 	br	807a2c <__alt_data_end+0xff807a2c>
  807bc0:	9005883a 	mov	r2,r18
  807bc4:	003fc706 	br	807ae4 <__alt_data_end+0xff807ae4>
  807bc8:	a80b883a 	mov	r5,r21
  807bcc:	9009883a 	mov	r4,r18
  807bd0:	08064400 	call	806440 <memmove>
  807bd4:	003fc906 	br	807afc <__alt_data_end+0xff807afc>
  807bd8:	a8800217 	ldw	r2,8(r21)
  807bdc:	b0800415 	stw	r2,16(r22)
  807be0:	a8800317 	ldw	r2,12(r21)
  807be4:	b0800515 	stw	r2,20(r22)
  807be8:	31000726 	beq	r6,r4,807c08 <_realloc_r+0x548>
  807bec:	b0800604 	addi	r2,r22,24
  807bf0:	ad400404 	addi	r21,r21,16
  807bf4:	003fbb06 	br	807ae4 <__alt_data_end+0xff807ae4>
  807bf8:	a009883a 	mov	r4,r20
  807bfc:	080d6880 	call	80d688 <__malloc_unlock>
  807c00:	0005883a 	mov	r2,zero
  807c04:	003f0a06 	br	807830 <__alt_data_end+0xff807830>
  807c08:	a8c00417 	ldw	r3,16(r21)
  807c0c:	ad400604 	addi	r21,r21,24
  807c10:	b0800804 	addi	r2,r22,32
  807c14:	b0c00615 	stw	r3,24(r22)
  807c18:	a8ffff17 	ldw	r3,-4(r21)
  807c1c:	b0c00715 	stw	r3,28(r22)
  807c20:	003fb006 	br	807ae4 <__alt_data_end+0xff807ae4>

00807c24 <__fpclassifyd>:
  807c24:	00a00034 	movhi	r2,32768
  807c28:	10bfffc4 	addi	r2,r2,-1
  807c2c:	2884703a 	and	r2,r5,r2
  807c30:	10000726 	beq	r2,zero,807c50 <__fpclassifyd+0x2c>
  807c34:	00fffc34 	movhi	r3,65520
  807c38:	019ff834 	movhi	r6,32736
  807c3c:	28c7883a 	add	r3,r5,r3
  807c40:	31bfffc4 	addi	r6,r6,-1
  807c44:	30c00536 	bltu	r6,r3,807c5c <__fpclassifyd+0x38>
  807c48:	00800104 	movi	r2,4
  807c4c:	f800283a 	ret
  807c50:	2000021e 	bne	r4,zero,807c5c <__fpclassifyd+0x38>
  807c54:	00800084 	movi	r2,2
  807c58:	f800283a 	ret
  807c5c:	00dffc34 	movhi	r3,32752
  807c60:	019ff834 	movhi	r6,32736
  807c64:	28cb883a 	add	r5,r5,r3
  807c68:	31bfffc4 	addi	r6,r6,-1
  807c6c:	317ff62e 	bgeu	r6,r5,807c48 <__alt_data_end+0xff807c48>
  807c70:	01400434 	movhi	r5,16
  807c74:	297fffc4 	addi	r5,r5,-1
  807c78:	28800236 	bltu	r5,r2,807c84 <__fpclassifyd+0x60>
  807c7c:	008000c4 	movi	r2,3
  807c80:	f800283a 	ret
  807c84:	10c00226 	beq	r2,r3,807c90 <__fpclassifyd+0x6c>
  807c88:	0005883a 	mov	r2,zero
  807c8c:	f800283a 	ret
  807c90:	2005003a 	cmpeq	r2,r4,zero
  807c94:	f800283a 	ret

00807c98 <_sbrk_r>:
  807c98:	defffd04 	addi	sp,sp,-12
  807c9c:	dc000015 	stw	r16,0(sp)
  807ca0:	04002074 	movhi	r16,129
  807ca4:	dc400115 	stw	r17,4(sp)
  807ca8:	840c5004 	addi	r16,r16,12608
  807cac:	2023883a 	mov	r17,r4
  807cb0:	2809883a 	mov	r4,r5
  807cb4:	dfc00215 	stw	ra,8(sp)
  807cb8:	80000015 	stw	zero,0(r16)
  807cbc:	080d8480 	call	80d848 <sbrk>
  807cc0:	00ffffc4 	movi	r3,-1
  807cc4:	10c00526 	beq	r2,r3,807cdc <_sbrk_r+0x44>
  807cc8:	dfc00217 	ldw	ra,8(sp)
  807ccc:	dc400117 	ldw	r17,4(sp)
  807cd0:	dc000017 	ldw	r16,0(sp)
  807cd4:	dec00304 	addi	sp,sp,12
  807cd8:	f800283a 	ret
  807cdc:	80c00017 	ldw	r3,0(r16)
  807ce0:	183ff926 	beq	r3,zero,807cc8 <__alt_data_end+0xff807cc8>
  807ce4:	88c00015 	stw	r3,0(r17)
  807ce8:	003ff706 	br	807cc8 <__alt_data_end+0xff807cc8>

00807cec <__sread>:
  807cec:	defffe04 	addi	sp,sp,-8
  807cf0:	dc000015 	stw	r16,0(sp)
  807cf4:	2821883a 	mov	r16,r5
  807cf8:	2940038f 	ldh	r5,14(r5)
  807cfc:	dfc00115 	stw	ra,4(sp)
  807d00:	0809ae00 	call	809ae0 <_read_r>
  807d04:	10000716 	blt	r2,zero,807d24 <__sread+0x38>
  807d08:	80c01417 	ldw	r3,80(r16)
  807d0c:	1887883a 	add	r3,r3,r2
  807d10:	80c01415 	stw	r3,80(r16)
  807d14:	dfc00117 	ldw	ra,4(sp)
  807d18:	dc000017 	ldw	r16,0(sp)
  807d1c:	dec00204 	addi	sp,sp,8
  807d20:	f800283a 	ret
  807d24:	80c0030b 	ldhu	r3,12(r16)
  807d28:	18fbffcc 	andi	r3,r3,61439
  807d2c:	80c0030d 	sth	r3,12(r16)
  807d30:	dfc00117 	ldw	ra,4(sp)
  807d34:	dc000017 	ldw	r16,0(sp)
  807d38:	dec00204 	addi	sp,sp,8
  807d3c:	f800283a 	ret

00807d40 <__seofread>:
  807d40:	0005883a 	mov	r2,zero
  807d44:	f800283a 	ret

00807d48 <__swrite>:
  807d48:	2880030b 	ldhu	r2,12(r5)
  807d4c:	defffb04 	addi	sp,sp,-20
  807d50:	dcc00315 	stw	r19,12(sp)
  807d54:	dc800215 	stw	r18,8(sp)
  807d58:	dc400115 	stw	r17,4(sp)
  807d5c:	dc000015 	stw	r16,0(sp)
  807d60:	dfc00415 	stw	ra,16(sp)
  807d64:	10c0400c 	andi	r3,r2,256
  807d68:	2821883a 	mov	r16,r5
  807d6c:	2023883a 	mov	r17,r4
  807d70:	3025883a 	mov	r18,r6
  807d74:	3827883a 	mov	r19,r7
  807d78:	18000526 	beq	r3,zero,807d90 <__swrite+0x48>
  807d7c:	2940038f 	ldh	r5,14(r5)
  807d80:	01c00084 	movi	r7,2
  807d84:	000d883a 	mov	r6,zero
  807d88:	0809a800 	call	809a80 <_lseek_r>
  807d8c:	8080030b 	ldhu	r2,12(r16)
  807d90:	8140038f 	ldh	r5,14(r16)
  807d94:	10bbffcc 	andi	r2,r2,61439
  807d98:	980f883a 	mov	r7,r19
  807d9c:	900d883a 	mov	r6,r18
  807da0:	8809883a 	mov	r4,r17
  807da4:	8080030d 	sth	r2,12(r16)
  807da8:	dfc00417 	ldw	ra,16(sp)
  807dac:	dcc00317 	ldw	r19,12(sp)
  807db0:	dc800217 	ldw	r18,8(sp)
  807db4:	dc400117 	ldw	r17,4(sp)
  807db8:	dc000017 	ldw	r16,0(sp)
  807dbc:	dec00504 	addi	sp,sp,20
  807dc0:	080954c1 	jmpi	80954c <_write_r>

00807dc4 <__sseek>:
  807dc4:	defffe04 	addi	sp,sp,-8
  807dc8:	dc000015 	stw	r16,0(sp)
  807dcc:	2821883a 	mov	r16,r5
  807dd0:	2940038f 	ldh	r5,14(r5)
  807dd4:	dfc00115 	stw	ra,4(sp)
  807dd8:	0809a800 	call	809a80 <_lseek_r>
  807ddc:	00ffffc4 	movi	r3,-1
  807de0:	10c00826 	beq	r2,r3,807e04 <__sseek+0x40>
  807de4:	80c0030b 	ldhu	r3,12(r16)
  807de8:	80801415 	stw	r2,80(r16)
  807dec:	18c40014 	ori	r3,r3,4096
  807df0:	80c0030d 	sth	r3,12(r16)
  807df4:	dfc00117 	ldw	ra,4(sp)
  807df8:	dc000017 	ldw	r16,0(sp)
  807dfc:	dec00204 	addi	sp,sp,8
  807e00:	f800283a 	ret
  807e04:	80c0030b 	ldhu	r3,12(r16)
  807e08:	18fbffcc 	andi	r3,r3,61439
  807e0c:	80c0030d 	sth	r3,12(r16)
  807e10:	dfc00117 	ldw	ra,4(sp)
  807e14:	dc000017 	ldw	r16,0(sp)
  807e18:	dec00204 	addi	sp,sp,8
  807e1c:	f800283a 	ret

00807e20 <__sclose>:
  807e20:	2940038f 	ldh	r5,14(r5)
  807e24:	08095ac1 	jmpi	8095ac <_close_r>

00807e28 <strcmp>:
  807e28:	2144b03a 	or	r2,r4,r5
  807e2c:	108000cc 	andi	r2,r2,3
  807e30:	1000171e 	bne	r2,zero,807e90 <strcmp+0x68>
  807e34:	20800017 	ldw	r2,0(r4)
  807e38:	28c00017 	ldw	r3,0(r5)
  807e3c:	10c0141e 	bne	r2,r3,807e90 <strcmp+0x68>
  807e40:	027fbff4 	movhi	r9,65279
  807e44:	4a7fbfc4 	addi	r9,r9,-257
  807e48:	0086303a 	nor	r3,zero,r2
  807e4c:	02202074 	movhi	r8,32897
  807e50:	1245883a 	add	r2,r2,r9
  807e54:	42202004 	addi	r8,r8,-32640
  807e58:	10c4703a 	and	r2,r2,r3
  807e5c:	1204703a 	and	r2,r2,r8
  807e60:	10000226 	beq	r2,zero,807e6c <strcmp+0x44>
  807e64:	00002306 	br	807ef4 <strcmp+0xcc>
  807e68:	1000221e 	bne	r2,zero,807ef4 <strcmp+0xcc>
  807e6c:	21000104 	addi	r4,r4,4
  807e70:	20c00017 	ldw	r3,0(r4)
  807e74:	29400104 	addi	r5,r5,4
  807e78:	29800017 	ldw	r6,0(r5)
  807e7c:	1a4f883a 	add	r7,r3,r9
  807e80:	00c4303a 	nor	r2,zero,r3
  807e84:	3884703a 	and	r2,r7,r2
  807e88:	1204703a 	and	r2,r2,r8
  807e8c:	19bff626 	beq	r3,r6,807e68 <__alt_data_end+0xff807e68>
  807e90:	20800003 	ldbu	r2,0(r4)
  807e94:	10c03fcc 	andi	r3,r2,255
  807e98:	18c0201c 	xori	r3,r3,128
  807e9c:	18ffe004 	addi	r3,r3,-128
  807ea0:	18000c26 	beq	r3,zero,807ed4 <strcmp+0xac>
  807ea4:	29800007 	ldb	r6,0(r5)
  807ea8:	19800326 	beq	r3,r6,807eb8 <strcmp+0x90>
  807eac:	00001306 	br	807efc <strcmp+0xd4>
  807eb0:	29800007 	ldb	r6,0(r5)
  807eb4:	11800b1e 	bne	r2,r6,807ee4 <strcmp+0xbc>
  807eb8:	21000044 	addi	r4,r4,1
  807ebc:	20c00003 	ldbu	r3,0(r4)
  807ec0:	29400044 	addi	r5,r5,1
  807ec4:	18803fcc 	andi	r2,r3,255
  807ec8:	1080201c 	xori	r2,r2,128
  807ecc:	10bfe004 	addi	r2,r2,-128
  807ed0:	103ff71e 	bne	r2,zero,807eb0 <__alt_data_end+0xff807eb0>
  807ed4:	0007883a 	mov	r3,zero
  807ed8:	28800003 	ldbu	r2,0(r5)
  807edc:	1885c83a 	sub	r2,r3,r2
  807ee0:	f800283a 	ret
  807ee4:	28800003 	ldbu	r2,0(r5)
  807ee8:	18c03fcc 	andi	r3,r3,255
  807eec:	1885c83a 	sub	r2,r3,r2
  807ef0:	f800283a 	ret
  807ef4:	0005883a 	mov	r2,zero
  807ef8:	f800283a 	ret
  807efc:	10c03fcc 	andi	r3,r2,255
  807f00:	003ff506 	br	807ed8 <__alt_data_end+0xff807ed8>

00807f04 <__sprint_r.part.0>:
  807f04:	28801917 	ldw	r2,100(r5)
  807f08:	defff604 	addi	sp,sp,-40
  807f0c:	dd400515 	stw	r21,20(sp)
  807f10:	dfc00915 	stw	ra,36(sp)
  807f14:	df000815 	stw	fp,32(sp)
  807f18:	ddc00715 	stw	r23,28(sp)
  807f1c:	dd800615 	stw	r22,24(sp)
  807f20:	dd000415 	stw	r20,16(sp)
  807f24:	dcc00315 	stw	r19,12(sp)
  807f28:	dc800215 	stw	r18,8(sp)
  807f2c:	dc400115 	stw	r17,4(sp)
  807f30:	dc000015 	stw	r16,0(sp)
  807f34:	1088000c 	andi	r2,r2,8192
  807f38:	302b883a 	mov	r21,r6
  807f3c:	10002e26 	beq	r2,zero,807ff8 <__sprint_r.part.0+0xf4>
  807f40:	30800217 	ldw	r2,8(r6)
  807f44:	35800017 	ldw	r22,0(r6)
  807f48:	10002926 	beq	r2,zero,807ff0 <__sprint_r.part.0+0xec>
  807f4c:	2827883a 	mov	r19,r5
  807f50:	2029883a 	mov	r20,r4
  807f54:	b5c00104 	addi	r23,r22,4
  807f58:	04bfffc4 	movi	r18,-1
  807f5c:	bc400017 	ldw	r17,0(r23)
  807f60:	b4000017 	ldw	r16,0(r22)
  807f64:	0039883a 	mov	fp,zero
  807f68:	8822d0ba 	srli	r17,r17,2
  807f6c:	8800031e 	bne	r17,zero,807f7c <__sprint_r.part.0+0x78>
  807f70:	00001806 	br	807fd4 <__sprint_r.part.0+0xd0>
  807f74:	84000104 	addi	r16,r16,4
  807f78:	8f001526 	beq	r17,fp,807fd0 <__sprint_r.part.0+0xcc>
  807f7c:	81400017 	ldw	r5,0(r16)
  807f80:	980d883a 	mov	r6,r19
  807f84:	a009883a 	mov	r4,r20
  807f88:	080992c0 	call	80992c <_fputwc_r>
  807f8c:	e7000044 	addi	fp,fp,1
  807f90:	14bff81e 	bne	r2,r18,807f74 <__alt_data_end+0xff807f74>
  807f94:	9005883a 	mov	r2,r18
  807f98:	a8000215 	stw	zero,8(r21)
  807f9c:	a8000115 	stw	zero,4(r21)
  807fa0:	dfc00917 	ldw	ra,36(sp)
  807fa4:	df000817 	ldw	fp,32(sp)
  807fa8:	ddc00717 	ldw	r23,28(sp)
  807fac:	dd800617 	ldw	r22,24(sp)
  807fb0:	dd400517 	ldw	r21,20(sp)
  807fb4:	dd000417 	ldw	r20,16(sp)
  807fb8:	dcc00317 	ldw	r19,12(sp)
  807fbc:	dc800217 	ldw	r18,8(sp)
  807fc0:	dc400117 	ldw	r17,4(sp)
  807fc4:	dc000017 	ldw	r16,0(sp)
  807fc8:	dec00a04 	addi	sp,sp,40
  807fcc:	f800283a 	ret
  807fd0:	a8800217 	ldw	r2,8(r21)
  807fd4:	8c63883a 	add	r17,r17,r17
  807fd8:	8c63883a 	add	r17,r17,r17
  807fdc:	1445c83a 	sub	r2,r2,r17
  807fe0:	a8800215 	stw	r2,8(r21)
  807fe4:	b5800204 	addi	r22,r22,8
  807fe8:	bdc00204 	addi	r23,r23,8
  807fec:	103fdb1e 	bne	r2,zero,807f5c <__alt_data_end+0xff807f5c>
  807ff0:	0005883a 	mov	r2,zero
  807ff4:	003fe806 	br	807f98 <__alt_data_end+0xff807f98>
  807ff8:	080512c0 	call	80512c <__sfvwrite_r>
  807ffc:	003fe606 	br	807f98 <__alt_data_end+0xff807f98>

00808000 <__sprint_r>:
  808000:	30c00217 	ldw	r3,8(r6)
  808004:	18000126 	beq	r3,zero,80800c <__sprint_r+0xc>
  808008:	0807f041 	jmpi	807f04 <__sprint_r.part.0>
  80800c:	30000115 	stw	zero,4(r6)
  808010:	0005883a 	mov	r2,zero
  808014:	f800283a 	ret

00808018 <___vfiprintf_internal_r>:
  808018:	deffc904 	addi	sp,sp,-220
  80801c:	df003515 	stw	fp,212(sp)
  808020:	dd003115 	stw	r20,196(sp)
  808024:	dfc03615 	stw	ra,216(sp)
  808028:	ddc03415 	stw	r23,208(sp)
  80802c:	dd803315 	stw	r22,204(sp)
  808030:	dd403215 	stw	r21,200(sp)
  808034:	dcc03015 	stw	r19,192(sp)
  808038:	dc802f15 	stw	r18,188(sp)
  80803c:	dc402e15 	stw	r17,184(sp)
  808040:	dc002d15 	stw	r16,180(sp)
  808044:	d9002015 	stw	r4,128(sp)
  808048:	d9c02215 	stw	r7,136(sp)
  80804c:	2829883a 	mov	r20,r5
  808050:	3039883a 	mov	fp,r6
  808054:	20000226 	beq	r4,zero,808060 <___vfiprintf_internal_r+0x48>
  808058:	20800e17 	ldw	r2,56(r4)
  80805c:	1000cf26 	beq	r2,zero,80839c <___vfiprintf_internal_r+0x384>
  808060:	a080030b 	ldhu	r2,12(r20)
  808064:	10c8000c 	andi	r3,r2,8192
  808068:	1800061e 	bne	r3,zero,808084 <___vfiprintf_internal_r+0x6c>
  80806c:	a1001917 	ldw	r4,100(r20)
  808070:	00f7ffc4 	movi	r3,-8193
  808074:	10880014 	ori	r2,r2,8192
  808078:	20c6703a 	and	r3,r4,r3
  80807c:	a080030d 	sth	r2,12(r20)
  808080:	a0c01915 	stw	r3,100(r20)
  808084:	10c0020c 	andi	r3,r2,8
  808088:	1800a926 	beq	r3,zero,808330 <___vfiprintf_internal_r+0x318>
  80808c:	a0c00417 	ldw	r3,16(r20)
  808090:	1800a726 	beq	r3,zero,808330 <___vfiprintf_internal_r+0x318>
  808094:	1080068c 	andi	r2,r2,26
  808098:	00c00284 	movi	r3,10
  80809c:	10c0ac26 	beq	r2,r3,808350 <___vfiprintf_internal_r+0x338>
  8080a0:	da801a04 	addi	r10,sp,104
  8080a4:	da801e15 	stw	r10,120(sp)
  8080a8:	d8801e17 	ldw	r2,120(sp)
  8080ac:	da8019c4 	addi	r10,sp,103
  8080b0:	05802074 	movhi	r22,129
  8080b4:	05c02074 	movhi	r23,129
  8080b8:	da801f15 	stw	r10,124(sp)
  8080bc:	1295c83a 	sub	r10,r2,r10
  8080c0:	b5bec504 	addi	r22,r22,-1260
  8080c4:	bdfec104 	addi	r23,r23,-1276
  8080c8:	dec01a15 	stw	sp,104(sp)
  8080cc:	d8001c15 	stw	zero,112(sp)
  8080d0:	d8001b15 	stw	zero,108(sp)
  8080d4:	d8002615 	stw	zero,152(sp)
  8080d8:	d8002315 	stw	zero,140(sp)
  8080dc:	da802715 	stw	r10,156(sp)
  8080e0:	d811883a 	mov	r8,sp
  8080e4:	dd002115 	stw	r20,132(sp)
  8080e8:	e021883a 	mov	r16,fp
  8080ec:	80800007 	ldb	r2,0(r16)
  8080f0:	1003ea26 	beq	r2,zero,80909c <___vfiprintf_internal_r+0x1084>
  8080f4:	00c00944 	movi	r3,37
  8080f8:	8025883a 	mov	r18,r16
  8080fc:	10c0021e 	bne	r2,r3,808108 <___vfiprintf_internal_r+0xf0>
  808100:	00001606 	br	80815c <___vfiprintf_internal_r+0x144>
  808104:	10c00326 	beq	r2,r3,808114 <___vfiprintf_internal_r+0xfc>
  808108:	94800044 	addi	r18,r18,1
  80810c:	90800007 	ldb	r2,0(r18)
  808110:	103ffc1e 	bne	r2,zero,808104 <__alt_data_end+0xff808104>
  808114:	9423c83a 	sub	r17,r18,r16
  808118:	88001026 	beq	r17,zero,80815c <___vfiprintf_internal_r+0x144>
  80811c:	d8c01c17 	ldw	r3,112(sp)
  808120:	d8801b17 	ldw	r2,108(sp)
  808124:	44000015 	stw	r16,0(r8)
  808128:	88c7883a 	add	r3,r17,r3
  80812c:	10800044 	addi	r2,r2,1
  808130:	44400115 	stw	r17,4(r8)
  808134:	d8c01c15 	stw	r3,112(sp)
  808138:	d8801b15 	stw	r2,108(sp)
  80813c:	010001c4 	movi	r4,7
  808140:	2080760e 	bge	r4,r2,80831c <___vfiprintf_internal_r+0x304>
  808144:	1803821e 	bne	r3,zero,808f50 <___vfiprintf_internal_r+0xf38>
  808148:	da802317 	ldw	r10,140(sp)
  80814c:	d8001b15 	stw	zero,108(sp)
  808150:	d811883a 	mov	r8,sp
  808154:	5455883a 	add	r10,r10,r17
  808158:	da802315 	stw	r10,140(sp)
  80815c:	90800007 	ldb	r2,0(r18)
  808160:	10044626 	beq	r2,zero,80927c <___vfiprintf_internal_r+0x1264>
  808164:	90c00047 	ldb	r3,1(r18)
  808168:	94000044 	addi	r16,r18,1
  80816c:	d8001d85 	stb	zero,118(sp)
  808170:	0009883a 	mov	r4,zero
  808174:	000f883a 	mov	r7,zero
  808178:	027fffc4 	movi	r9,-1
  80817c:	0023883a 	mov	r17,zero
  808180:	0029883a 	mov	r20,zero
  808184:	01401604 	movi	r5,88
  808188:	01800244 	movi	r6,9
  80818c:	03400a84 	movi	r13,42
  808190:	03001b04 	movi	r12,108
  808194:	84000044 	addi	r16,r16,1
  808198:	18bff804 	addi	r2,r3,-32
  80819c:	28827336 	bltu	r5,r2,808b6c <___vfiprintf_internal_r+0xb54>
  8081a0:	100490ba 	slli	r2,r2,2
  8081a4:	02802074 	movhi	r10,129
  8081a8:	52a06e04 	addi	r10,r10,-32328
  8081ac:	1285883a 	add	r2,r2,r10
  8081b0:	10800017 	ldw	r2,0(r2)
  8081b4:	1000683a 	jmp	r2
  8081b8:	008088a0 	cmpeqi	r2,zero,546
  8081bc:	00808b6c 	andhi	r2,zero,557
  8081c0:	00808b6c 	andhi	r2,zero,557
  8081c4:	008088c0 	call	8088c <__reset-0x77f774>
  8081c8:	00808b6c 	andhi	r2,zero,557
  8081cc:	00808b6c 	andhi	r2,zero,557
  8081d0:	00808b6c 	andhi	r2,zero,557
  8081d4:	00808b6c 	andhi	r2,zero,557
  8081d8:	00808b6c 	andhi	r2,zero,557
  8081dc:	00808b6c 	andhi	r2,zero,557
  8081e0:	00808aa8 	cmpgeui	r2,zero,554
  8081e4:	00808ac4 	movi	r2,555
  8081e8:	00808b6c 	andhi	r2,zero,557
  8081ec:	008083ac 	andhi	r2,zero,526
  8081f0:	00808ad4 	movui	r2,555
  8081f4:	00808b6c 	andhi	r2,zero,557
  8081f8:	008088cc 	andi	r2,zero,547
  8081fc:	008088d8 	cmpnei	r2,zero,547
  808200:	008088d8 	cmpnei	r2,zero,547
  808204:	008088d8 	cmpnei	r2,zero,547
  808208:	008088d8 	cmpnei	r2,zero,547
  80820c:	008088d8 	cmpnei	r2,zero,547
  808210:	008088d8 	cmpnei	r2,zero,547
  808214:	008088d8 	cmpnei	r2,zero,547
  808218:	008088d8 	cmpnei	r2,zero,547
  80821c:	008088d8 	cmpnei	r2,zero,547
  808220:	00808b6c 	andhi	r2,zero,557
  808224:	00808b6c 	andhi	r2,zero,557
  808228:	00808b6c 	andhi	r2,zero,557
  80822c:	00808b6c 	andhi	r2,zero,557
  808230:	00808b6c 	andhi	r2,zero,557
  808234:	00808b6c 	andhi	r2,zero,557
  808238:	00808b6c 	andhi	r2,zero,557
  80823c:	00808b6c 	andhi	r2,zero,557
  808240:	00808b6c 	andhi	r2,zero,557
  808244:	00808b6c 	andhi	r2,zero,557
  808248:	00808904 	movi	r2,548
  80824c:	00808b6c 	andhi	r2,zero,557
  808250:	00808b6c 	andhi	r2,zero,557
  808254:	00808b6c 	andhi	r2,zero,557
  808258:	00808b6c 	andhi	r2,zero,557
  80825c:	00808b6c 	andhi	r2,zero,557
  808260:	00808b6c 	andhi	r2,zero,557
  808264:	00808b6c 	andhi	r2,zero,557
  808268:	00808b6c 	andhi	r2,zero,557
  80826c:	00808b6c 	andhi	r2,zero,557
  808270:	00808b6c 	andhi	r2,zero,557
  808274:	0080893c 	xorhi	r2,zero,548
  808278:	00808b6c 	andhi	r2,zero,557
  80827c:	00808b6c 	andhi	r2,zero,557
  808280:	00808b6c 	andhi	r2,zero,557
  808284:	00808b6c 	andhi	r2,zero,557
  808288:	00808b6c 	andhi	r2,zero,557
  80828c:	00808994 	movui	r2,550
  808290:	00808b6c 	andhi	r2,zero,557
  808294:	00808b6c 	andhi	r2,zero,557
  808298:	00808a04 	movi	r2,552
  80829c:	00808b6c 	andhi	r2,zero,557
  8082a0:	00808b6c 	andhi	r2,zero,557
  8082a4:	00808b6c 	andhi	r2,zero,557
  8082a8:	00808b6c 	andhi	r2,zero,557
  8082ac:	00808b6c 	andhi	r2,zero,557
  8082b0:	00808b6c 	andhi	r2,zero,557
  8082b4:	00808b6c 	andhi	r2,zero,557
  8082b8:	00808b6c 	andhi	r2,zero,557
  8082bc:	00808b6c 	andhi	r2,zero,557
  8082c0:	00808b6c 	andhi	r2,zero,557
  8082c4:	008087b0 	cmpltui	r2,zero,542
  8082c8:	008087dc 	xori	r2,zero,543
  8082cc:	00808b6c 	andhi	r2,zero,557
  8082d0:	00808b6c 	andhi	r2,zero,557
  8082d4:	00808b6c 	andhi	r2,zero,557
  8082d8:	00808b14 	movui	r2,556
  8082dc:	008087dc 	xori	r2,zero,543
  8082e0:	00808b6c 	andhi	r2,zero,557
  8082e4:	00808b6c 	andhi	r2,zero,557
  8082e8:	00808670 	cmpltui	r2,zero,537
  8082ec:	00808b6c 	andhi	r2,zero,557
  8082f0:	00808680 	call	80868 <__reset-0x77f798>
  8082f4:	008086bc 	xorhi	r2,zero,538
  8082f8:	008083b8 	rdprs	r2,zero,526
  8082fc:	00808664 	muli	r2,zero,537
  808300:	00808b6c 	andhi	r2,zero,557
  808304:	00808a40 	call	808a4 <__reset-0x77f75c>
  808308:	00808b6c 	andhi	r2,zero,557
  80830c:	00808a98 	cmpnei	r2,zero,554
  808310:	00808b6c 	andhi	r2,zero,557
  808314:	00808b6c 	andhi	r2,zero,557
  808318:	0080875c 	xori	r2,zero,541
  80831c:	42000204 	addi	r8,r8,8
  808320:	da802317 	ldw	r10,140(sp)
  808324:	5455883a 	add	r10,r10,r17
  808328:	da802315 	stw	r10,140(sp)
  80832c:	003f8b06 	br	80815c <__alt_data_end+0xff80815c>
  808330:	d9002017 	ldw	r4,128(sp)
  808334:	a00b883a 	mov	r5,r20
  808338:	0802cd40 	call	802cd4 <__swsetup_r>
  80833c:	1003b11e 	bne	r2,zero,809204 <___vfiprintf_internal_r+0x11ec>
  808340:	a080030b 	ldhu	r2,12(r20)
  808344:	00c00284 	movi	r3,10
  808348:	1080068c 	andi	r2,r2,26
  80834c:	10ff541e 	bne	r2,r3,8080a0 <__alt_data_end+0xff8080a0>
  808350:	a080038f 	ldh	r2,14(r20)
  808354:	103f5216 	blt	r2,zero,8080a0 <__alt_data_end+0xff8080a0>
  808358:	d9c02217 	ldw	r7,136(sp)
  80835c:	d9002017 	ldw	r4,128(sp)
  808360:	e00d883a 	mov	r6,fp
  808364:	a00b883a 	mov	r5,r20
  808368:	08094900 	call	809490 <__sbprintf>
  80836c:	dfc03617 	ldw	ra,216(sp)
  808370:	df003517 	ldw	fp,212(sp)
  808374:	ddc03417 	ldw	r23,208(sp)
  808378:	dd803317 	ldw	r22,204(sp)
  80837c:	dd403217 	ldw	r21,200(sp)
  808380:	dd003117 	ldw	r20,196(sp)
  808384:	dcc03017 	ldw	r19,192(sp)
  808388:	dc802f17 	ldw	r18,188(sp)
  80838c:	dc402e17 	ldw	r17,184(sp)
  808390:	dc002d17 	ldw	r16,180(sp)
  808394:	dec03704 	addi	sp,sp,220
  808398:	f800283a 	ret
  80839c:	0804ca80 	call	804ca8 <__sinit>
  8083a0:	003f2f06 	br	808060 <__alt_data_end+0xff808060>
  8083a4:	0463c83a 	sub	r17,zero,r17
  8083a8:	d8802215 	stw	r2,136(sp)
  8083ac:	a5000114 	ori	r20,r20,4
  8083b0:	80c00007 	ldb	r3,0(r16)
  8083b4:	003f7706 	br	808194 <__alt_data_end+0xff808194>
  8083b8:	00800c04 	movi	r2,48
  8083bc:	da802217 	ldw	r10,136(sp)
  8083c0:	d8801d05 	stb	r2,116(sp)
  8083c4:	00801e04 	movi	r2,120
  8083c8:	d8801d45 	stb	r2,117(sp)
  8083cc:	d8001d85 	stb	zero,118(sp)
  8083d0:	50c00104 	addi	r3,r10,4
  8083d4:	54800017 	ldw	r18,0(r10)
  8083d8:	0027883a 	mov	r19,zero
  8083dc:	a0800094 	ori	r2,r20,2
  8083e0:	48030b16 	blt	r9,zero,809010 <___vfiprintf_internal_r+0xff8>
  8083e4:	00bfdfc4 	movi	r2,-129
  8083e8:	a096703a 	and	r11,r20,r2
  8083ec:	d8c02215 	stw	r3,136(sp)
  8083f0:	5d000094 	ori	r20,r11,2
  8083f4:	90032b1e 	bne	r18,zero,8090a4 <___vfiprintf_internal_r+0x108c>
  8083f8:	00802074 	movhi	r2,129
  8083fc:	10be6004 	addi	r2,r2,-1664
  808400:	d8802615 	stw	r2,152(sp)
  808404:	0039883a 	mov	fp,zero
  808408:	48017b1e 	bne	r9,zero,8089f8 <___vfiprintf_internal_r+0x9e0>
  80840c:	0013883a 	mov	r9,zero
  808410:	0027883a 	mov	r19,zero
  808414:	dd401a04 	addi	r21,sp,104
  808418:	4825883a 	mov	r18,r9
  80841c:	4cc0010e 	bge	r9,r19,808424 <___vfiprintf_internal_r+0x40c>
  808420:	9825883a 	mov	r18,r19
  808424:	e7003fcc 	andi	fp,fp,255
  808428:	e700201c 	xori	fp,fp,128
  80842c:	e73fe004 	addi	fp,fp,-128
  808430:	e0000126 	beq	fp,zero,808438 <___vfiprintf_internal_r+0x420>
  808434:	94800044 	addi	r18,r18,1
  808438:	a380008c 	andi	r14,r20,2
  80843c:	70000126 	beq	r14,zero,808444 <___vfiprintf_internal_r+0x42c>
  808440:	94800084 	addi	r18,r18,2
  808444:	a700210c 	andi	fp,r20,132
  808448:	e001df1e 	bne	fp,zero,808bc8 <___vfiprintf_internal_r+0xbb0>
  80844c:	8c87c83a 	sub	r3,r17,r18
  808450:	00c1dd0e 	bge	zero,r3,808bc8 <___vfiprintf_internal_r+0xbb0>
  808454:	01c00404 	movi	r7,16
  808458:	d8801c17 	ldw	r2,112(sp)
  80845c:	38c3ad0e 	bge	r7,r3,809314 <___vfiprintf_internal_r+0x12fc>
  808460:	02802074 	movhi	r10,129
  808464:	52bec504 	addi	r10,r10,-1260
  808468:	dc002915 	stw	r16,164(sp)
  80846c:	d9801b17 	ldw	r6,108(sp)
  808470:	da802415 	stw	r10,144(sp)
  808474:	03c001c4 	movi	r15,7
  808478:	da402515 	stw	r9,148(sp)
  80847c:	db802815 	stw	r14,160(sp)
  808480:	1821883a 	mov	r16,r3
  808484:	00000506 	br	80849c <___vfiprintf_internal_r+0x484>
  808488:	31400084 	addi	r5,r6,2
  80848c:	42000204 	addi	r8,r8,8
  808490:	200d883a 	mov	r6,r4
  808494:	843ffc04 	addi	r16,r16,-16
  808498:	3c000d0e 	bge	r7,r16,8084d0 <___vfiprintf_internal_r+0x4b8>
  80849c:	10800404 	addi	r2,r2,16
  8084a0:	31000044 	addi	r4,r6,1
  8084a4:	45800015 	stw	r22,0(r8)
  8084a8:	41c00115 	stw	r7,4(r8)
  8084ac:	d8801c15 	stw	r2,112(sp)
  8084b0:	d9001b15 	stw	r4,108(sp)
  8084b4:	793ff40e 	bge	r15,r4,808488 <__alt_data_end+0xff808488>
  8084b8:	1001b51e 	bne	r2,zero,808b90 <___vfiprintf_internal_r+0xb78>
  8084bc:	843ffc04 	addi	r16,r16,-16
  8084c0:	000d883a 	mov	r6,zero
  8084c4:	01400044 	movi	r5,1
  8084c8:	d811883a 	mov	r8,sp
  8084cc:	3c3ff316 	blt	r7,r16,80849c <__alt_data_end+0xff80849c>
  8084d0:	8007883a 	mov	r3,r16
  8084d4:	da402517 	ldw	r9,148(sp)
  8084d8:	db802817 	ldw	r14,160(sp)
  8084dc:	dc002917 	ldw	r16,164(sp)
  8084e0:	da802417 	ldw	r10,144(sp)
  8084e4:	1885883a 	add	r2,r3,r2
  8084e8:	40c00115 	stw	r3,4(r8)
  8084ec:	42800015 	stw	r10,0(r8)
  8084f0:	d8801c15 	stw	r2,112(sp)
  8084f4:	d9401b15 	stw	r5,108(sp)
  8084f8:	00c001c4 	movi	r3,7
  8084fc:	19426016 	blt	r3,r5,808e80 <___vfiprintf_internal_r+0xe68>
  808500:	d8c01d87 	ldb	r3,118(sp)
  808504:	42000204 	addi	r8,r8,8
  808508:	29000044 	addi	r4,r5,1
  80850c:	1801b31e 	bne	r3,zero,808bdc <___vfiprintf_internal_r+0xbc4>
  808510:	7001c026 	beq	r14,zero,808c14 <___vfiprintf_internal_r+0xbfc>
  808514:	d8c01d04 	addi	r3,sp,116
  808518:	10800084 	addi	r2,r2,2
  80851c:	40c00015 	stw	r3,0(r8)
  808520:	00c00084 	movi	r3,2
  808524:	40c00115 	stw	r3,4(r8)
  808528:	d8801c15 	stw	r2,112(sp)
  80852c:	d9001b15 	stw	r4,108(sp)
  808530:	00c001c4 	movi	r3,7
  808534:	1902650e 	bge	r3,r4,808ecc <___vfiprintf_internal_r+0xeb4>
  808538:	10029a1e 	bne	r2,zero,808fa4 <___vfiprintf_internal_r+0xf8c>
  80853c:	00c02004 	movi	r3,128
  808540:	01000044 	movi	r4,1
  808544:	000b883a 	mov	r5,zero
  808548:	d811883a 	mov	r8,sp
  80854c:	e0c1b31e 	bne	fp,r3,808c1c <___vfiprintf_internal_r+0xc04>
  808550:	8cb9c83a 	sub	fp,r17,r18
  808554:	0701b10e 	bge	zero,fp,808c1c <___vfiprintf_internal_r+0xc04>
  808558:	01c00404 	movi	r7,16
  80855c:	3f03890e 	bge	r7,fp,809384 <___vfiprintf_internal_r+0x136c>
  808560:	00c02074 	movhi	r3,129
  808564:	18fec104 	addi	r3,r3,-1276
  808568:	d8c02415 	stw	r3,144(sp)
  80856c:	8007883a 	mov	r3,r16
  808570:	034001c4 	movi	r13,7
  808574:	e021883a 	mov	r16,fp
  808578:	da402515 	stw	r9,148(sp)
  80857c:	1839883a 	mov	fp,r3
  808580:	00000506 	br	808598 <___vfiprintf_internal_r+0x580>
  808584:	29800084 	addi	r6,r5,2
  808588:	42000204 	addi	r8,r8,8
  80858c:	180b883a 	mov	r5,r3
  808590:	843ffc04 	addi	r16,r16,-16
  808594:	3c000d0e 	bge	r7,r16,8085cc <___vfiprintf_internal_r+0x5b4>
  808598:	10800404 	addi	r2,r2,16
  80859c:	28c00044 	addi	r3,r5,1
  8085a0:	45c00015 	stw	r23,0(r8)
  8085a4:	41c00115 	stw	r7,4(r8)
  8085a8:	d8801c15 	stw	r2,112(sp)
  8085ac:	d8c01b15 	stw	r3,108(sp)
  8085b0:	68fff40e 	bge	r13,r3,808584 <__alt_data_end+0xff808584>
  8085b4:	1002241e 	bne	r2,zero,808e48 <___vfiprintf_internal_r+0xe30>
  8085b8:	843ffc04 	addi	r16,r16,-16
  8085bc:	01800044 	movi	r6,1
  8085c0:	000b883a 	mov	r5,zero
  8085c4:	d811883a 	mov	r8,sp
  8085c8:	3c3ff316 	blt	r7,r16,808598 <__alt_data_end+0xff808598>
  8085cc:	da402517 	ldw	r9,148(sp)
  8085d0:	e007883a 	mov	r3,fp
  8085d4:	8039883a 	mov	fp,r16
  8085d8:	1821883a 	mov	r16,r3
  8085dc:	d8c02417 	ldw	r3,144(sp)
  8085e0:	1705883a 	add	r2,r2,fp
  8085e4:	47000115 	stw	fp,4(r8)
  8085e8:	40c00015 	stw	r3,0(r8)
  8085ec:	d8801c15 	stw	r2,112(sp)
  8085f0:	d9801b15 	stw	r6,108(sp)
  8085f4:	00c001c4 	movi	r3,7
  8085f8:	19827616 	blt	r3,r6,808fd4 <___vfiprintf_internal_r+0xfbc>
  8085fc:	4cf9c83a 	sub	fp,r9,r19
  808600:	42000204 	addi	r8,r8,8
  808604:	31000044 	addi	r4,r6,1
  808608:	300b883a 	mov	r5,r6
  80860c:	07018516 	blt	zero,fp,808c24 <___vfiprintf_internal_r+0xc0c>
  808610:	9885883a 	add	r2,r19,r2
  808614:	45400015 	stw	r21,0(r8)
  808618:	44c00115 	stw	r19,4(r8)
  80861c:	d8801c15 	stw	r2,112(sp)
  808620:	d9001b15 	stw	r4,108(sp)
  808624:	00c001c4 	movi	r3,7
  808628:	1901dd0e 	bge	r3,r4,808da0 <___vfiprintf_internal_r+0xd88>
  80862c:	1002401e 	bne	r2,zero,808f30 <___vfiprintf_internal_r+0xf18>
  808630:	d8001b15 	stw	zero,108(sp)
  808634:	a2c0010c 	andi	r11,r20,4
  808638:	58000226 	beq	r11,zero,808644 <___vfiprintf_internal_r+0x62c>
  80863c:	8ca7c83a 	sub	r19,r17,r18
  808640:	04c2f216 	blt	zero,r19,80920c <___vfiprintf_internal_r+0x11f4>
  808644:	8c80010e 	bge	r17,r18,80864c <___vfiprintf_internal_r+0x634>
  808648:	9023883a 	mov	r17,r18
  80864c:	da802317 	ldw	r10,140(sp)
  808650:	5455883a 	add	r10,r10,r17
  808654:	da802315 	stw	r10,140(sp)
  808658:	d8001b15 	stw	zero,108(sp)
  80865c:	d811883a 	mov	r8,sp
  808660:	003ea206 	br	8080ec <__alt_data_end+0xff8080ec>
  808664:	a5000814 	ori	r20,r20,32
  808668:	80c00007 	ldb	r3,0(r16)
  80866c:	003ec906 	br	808194 <__alt_data_end+0xff808194>
  808670:	80c00007 	ldb	r3,0(r16)
  808674:	1b030926 	beq	r3,r12,80929c <___vfiprintf_internal_r+0x1284>
  808678:	a5000414 	ori	r20,r20,16
  80867c:	003ec506 	br	808194 <__alt_data_end+0xff808194>
  808680:	21003fcc 	andi	r4,r4,255
  808684:	20035e1e 	bne	r4,zero,809400 <___vfiprintf_internal_r+0x13e8>
  808688:	a080080c 	andi	r2,r20,32
  80868c:	1002a526 	beq	r2,zero,809124 <___vfiprintf_internal_r+0x110c>
  808690:	da802217 	ldw	r10,136(sp)
  808694:	50800017 	ldw	r2,0(r10)
  808698:	da802317 	ldw	r10,140(sp)
  80869c:	5007d7fa 	srai	r3,r10,31
  8086a0:	da802217 	ldw	r10,136(sp)
  8086a4:	10c00115 	stw	r3,4(r2)
  8086a8:	52800104 	addi	r10,r10,4
  8086ac:	da802215 	stw	r10,136(sp)
  8086b0:	da802317 	ldw	r10,140(sp)
  8086b4:	12800015 	stw	r10,0(r2)
  8086b8:	003e8c06 	br	8080ec <__alt_data_end+0xff8080ec>
  8086bc:	21003fcc 	andi	r4,r4,255
  8086c0:	2003511e 	bne	r4,zero,809408 <___vfiprintf_internal_r+0x13f0>
  8086c4:	a080080c 	andi	r2,r20,32
  8086c8:	1000a126 	beq	r2,zero,808950 <___vfiprintf_internal_r+0x938>
  8086cc:	da802217 	ldw	r10,136(sp)
  8086d0:	d8001d85 	stb	zero,118(sp)
  8086d4:	50800204 	addi	r2,r10,8
  8086d8:	54800017 	ldw	r18,0(r10)
  8086dc:	54c00117 	ldw	r19,4(r10)
  8086e0:	4802b416 	blt	r9,zero,8091b4 <___vfiprintf_internal_r+0x119c>
  8086e4:	013fdfc4 	movi	r4,-129
  8086e8:	94c6b03a 	or	r3,r18,r19
  8086ec:	d8802215 	stw	r2,136(sp)
  8086f0:	a128703a 	and	r20,r20,r4
  8086f4:	1800a226 	beq	r3,zero,808980 <___vfiprintf_internal_r+0x968>
  8086f8:	0039883a 	mov	fp,zero
  8086fc:	dd401a04 	addi	r21,sp,104
  808700:	9006d0fa 	srli	r3,r18,3
  808704:	9808977a 	slli	r4,r19,29
  808708:	9826d0fa 	srli	r19,r19,3
  80870c:	948001cc 	andi	r18,r18,7
  808710:	90800c04 	addi	r2,r18,48
  808714:	ad7fffc4 	addi	r21,r21,-1
  808718:	20e4b03a 	or	r18,r4,r3
  80871c:	a8800005 	stb	r2,0(r21)
  808720:	94c6b03a 	or	r3,r18,r19
  808724:	183ff61e 	bne	r3,zero,808700 <__alt_data_end+0xff808700>
  808728:	a0c0004c 	andi	r3,r20,1
  80872c:	18005926 	beq	r3,zero,808894 <___vfiprintf_internal_r+0x87c>
  808730:	10803fcc 	andi	r2,r2,255
  808734:	1080201c 	xori	r2,r2,128
  808738:	10bfe004 	addi	r2,r2,-128
  80873c:	00c00c04 	movi	r3,48
  808740:	10c05426 	beq	r2,r3,808894 <___vfiprintf_internal_r+0x87c>
  808744:	da801e17 	ldw	r10,120(sp)
  808748:	a8bfffc4 	addi	r2,r21,-1
  80874c:	a8ffffc5 	stb	r3,-1(r21)
  808750:	50a7c83a 	sub	r19,r10,r2
  808754:	102b883a 	mov	r21,r2
  808758:	003f2f06 	br	808418 <__alt_data_end+0xff808418>
  80875c:	21003fcc 	andi	r4,r4,255
  808760:	2003421e 	bne	r4,zero,80946c <___vfiprintf_internal_r+0x1454>
  808764:	00802074 	movhi	r2,129
  808768:	10be6004 	addi	r2,r2,-1664
  80876c:	d8802615 	stw	r2,152(sp)
  808770:	a080080c 	andi	r2,r20,32
  808774:	1000aa26 	beq	r2,zero,808a20 <___vfiprintf_internal_r+0xa08>
  808778:	da802217 	ldw	r10,136(sp)
  80877c:	54800017 	ldw	r18,0(r10)
  808780:	54c00117 	ldw	r19,4(r10)
  808784:	52800204 	addi	r10,r10,8
  808788:	da802215 	stw	r10,136(sp)
  80878c:	a080004c 	andi	r2,r20,1
  808790:	1001d226 	beq	r2,zero,808edc <___vfiprintf_internal_r+0xec4>
  808794:	94c4b03a 	or	r2,r18,r19
  808798:	1002351e 	bne	r2,zero,809070 <___vfiprintf_internal_r+0x1058>
  80879c:	d8001d85 	stb	zero,118(sp)
  8087a0:	48022216 	blt	r9,zero,80902c <___vfiprintf_internal_r+0x1014>
  8087a4:	00bfdfc4 	movi	r2,-129
  8087a8:	a0a8703a 	and	r20,r20,r2
  8087ac:	003f1506 	br	808404 <__alt_data_end+0xff808404>
  8087b0:	da802217 	ldw	r10,136(sp)
  8087b4:	04800044 	movi	r18,1
  8087b8:	d8001d85 	stb	zero,118(sp)
  8087bc:	50800017 	ldw	r2,0(r10)
  8087c0:	52800104 	addi	r10,r10,4
  8087c4:	da802215 	stw	r10,136(sp)
  8087c8:	d8801005 	stb	r2,64(sp)
  8087cc:	9027883a 	mov	r19,r18
  8087d0:	dd401004 	addi	r21,sp,64
  8087d4:	0013883a 	mov	r9,zero
  8087d8:	003f1706 	br	808438 <__alt_data_end+0xff808438>
  8087dc:	21003fcc 	andi	r4,r4,255
  8087e0:	2003201e 	bne	r4,zero,809464 <___vfiprintf_internal_r+0x144c>
  8087e4:	a080080c 	andi	r2,r20,32
  8087e8:	10004b26 	beq	r2,zero,808918 <___vfiprintf_internal_r+0x900>
  8087ec:	da802217 	ldw	r10,136(sp)
  8087f0:	50800117 	ldw	r2,4(r10)
  8087f4:	54800017 	ldw	r18,0(r10)
  8087f8:	52800204 	addi	r10,r10,8
  8087fc:	da802215 	stw	r10,136(sp)
  808800:	1027883a 	mov	r19,r2
  808804:	10022c16 	blt	r2,zero,8090b8 <___vfiprintf_internal_r+0x10a0>
  808808:	df001d83 	ldbu	fp,118(sp)
  80880c:	48007216 	blt	r9,zero,8089d8 <___vfiprintf_internal_r+0x9c0>
  808810:	00ffdfc4 	movi	r3,-129
  808814:	94c4b03a 	or	r2,r18,r19
  808818:	a0e8703a 	and	r20,r20,r3
  80881c:	1000cc26 	beq	r2,zero,808b50 <___vfiprintf_internal_r+0xb38>
  808820:	98021026 	beq	r19,zero,809064 <___vfiprintf_internal_r+0x104c>
  808824:	dc402415 	stw	r17,144(sp)
  808828:	dc002515 	stw	r16,148(sp)
  80882c:	9823883a 	mov	r17,r19
  808830:	9021883a 	mov	r16,r18
  808834:	dd401a04 	addi	r21,sp,104
  808838:	4825883a 	mov	r18,r9
  80883c:	4027883a 	mov	r19,r8
  808840:	8009883a 	mov	r4,r16
  808844:	880b883a 	mov	r5,r17
  808848:	01800284 	movi	r6,10
  80884c:	000f883a 	mov	r7,zero
  808850:	080a3f80 	call	80a3f8 <__umoddi3>
  808854:	10800c04 	addi	r2,r2,48
  808858:	ad7fffc4 	addi	r21,r21,-1
  80885c:	8009883a 	mov	r4,r16
  808860:	880b883a 	mov	r5,r17
  808864:	a8800005 	stb	r2,0(r21)
  808868:	01800284 	movi	r6,10
  80886c:	000f883a 	mov	r7,zero
  808870:	0809e800 	call	809e80 <__udivdi3>
  808874:	1021883a 	mov	r16,r2
  808878:	10c4b03a 	or	r2,r2,r3
  80887c:	1823883a 	mov	r17,r3
  808880:	103fef1e 	bne	r2,zero,808840 <__alt_data_end+0xff808840>
  808884:	dc402417 	ldw	r17,144(sp)
  808888:	dc002517 	ldw	r16,148(sp)
  80888c:	9013883a 	mov	r9,r18
  808890:	9811883a 	mov	r8,r19
  808894:	da801e17 	ldw	r10,120(sp)
  808898:	5567c83a 	sub	r19,r10,r21
  80889c:	003ede06 	br	808418 <__alt_data_end+0xff808418>
  8088a0:	38803fcc 	andi	r2,r7,255
  8088a4:	1080201c 	xori	r2,r2,128
  8088a8:	10bfe004 	addi	r2,r2,-128
  8088ac:	1002371e 	bne	r2,zero,80918c <___vfiprintf_internal_r+0x1174>
  8088b0:	01000044 	movi	r4,1
  8088b4:	01c00804 	movi	r7,32
  8088b8:	80c00007 	ldb	r3,0(r16)
  8088bc:	003e3506 	br	808194 <__alt_data_end+0xff808194>
  8088c0:	a5000054 	ori	r20,r20,1
  8088c4:	80c00007 	ldb	r3,0(r16)
  8088c8:	003e3206 	br	808194 <__alt_data_end+0xff808194>
  8088cc:	a5002014 	ori	r20,r20,128
  8088d0:	80c00007 	ldb	r3,0(r16)
  8088d4:	003e2f06 	br	808194 <__alt_data_end+0xff808194>
  8088d8:	8015883a 	mov	r10,r16
  8088dc:	0023883a 	mov	r17,zero
  8088e0:	18bff404 	addi	r2,r3,-48
  8088e4:	50c00007 	ldb	r3,0(r10)
  8088e8:	8c4002a4 	muli	r17,r17,10
  8088ec:	84000044 	addi	r16,r16,1
  8088f0:	8015883a 	mov	r10,r16
  8088f4:	1463883a 	add	r17,r2,r17
  8088f8:	18bff404 	addi	r2,r3,-48
  8088fc:	30bff92e 	bgeu	r6,r2,8088e4 <__alt_data_end+0xff8088e4>
  808900:	003e2506 	br	808198 <__alt_data_end+0xff808198>
  808904:	21003fcc 	andi	r4,r4,255
  808908:	2002d41e 	bne	r4,zero,80945c <___vfiprintf_internal_r+0x1444>
  80890c:	a5000414 	ori	r20,r20,16
  808910:	a080080c 	andi	r2,r20,32
  808914:	103fb51e 	bne	r2,zero,8087ec <__alt_data_end+0xff8087ec>
  808918:	a080040c 	andi	r2,r20,16
  80891c:	1001f826 	beq	r2,zero,809100 <___vfiprintf_internal_r+0x10e8>
  808920:	da802217 	ldw	r10,136(sp)
  808924:	54800017 	ldw	r18,0(r10)
  808928:	52800104 	addi	r10,r10,4
  80892c:	da802215 	stw	r10,136(sp)
  808930:	9027d7fa 	srai	r19,r18,31
  808934:	9805883a 	mov	r2,r19
  808938:	003fb206 	br	808804 <__alt_data_end+0xff808804>
  80893c:	21003fcc 	andi	r4,r4,255
  808940:	2002c41e 	bne	r4,zero,809454 <___vfiprintf_internal_r+0x143c>
  808944:	a5000414 	ori	r20,r20,16
  808948:	a080080c 	andi	r2,r20,32
  80894c:	103f5f1e 	bne	r2,zero,8086cc <__alt_data_end+0xff8086cc>
  808950:	a080040c 	andi	r2,r20,16
  808954:	10020f26 	beq	r2,zero,809194 <___vfiprintf_internal_r+0x117c>
  808958:	da802217 	ldw	r10,136(sp)
  80895c:	d8001d85 	stb	zero,118(sp)
  808960:	0027883a 	mov	r19,zero
  808964:	50800104 	addi	r2,r10,4
  808968:	54800017 	ldw	r18,0(r10)
  80896c:	48021116 	blt	r9,zero,8091b4 <___vfiprintf_internal_r+0x119c>
  808970:	00ffdfc4 	movi	r3,-129
  808974:	d8802215 	stw	r2,136(sp)
  808978:	a0e8703a 	and	r20,r20,r3
  80897c:	903f5e1e 	bne	r18,zero,8086f8 <__alt_data_end+0xff8086f8>
  808980:	0039883a 	mov	fp,zero
  808984:	4802a626 	beq	r9,zero,809420 <___vfiprintf_internal_r+0x1408>
  808988:	0025883a 	mov	r18,zero
  80898c:	0027883a 	mov	r19,zero
  808990:	003f5a06 	br	8086fc <__alt_data_end+0xff8086fc>
  808994:	21003fcc 	andi	r4,r4,255
  808998:	20029f1e 	bne	r4,zero,809418 <___vfiprintf_internal_r+0x1400>
  80899c:	a5000414 	ori	r20,r20,16
  8089a0:	a080080c 	andi	r2,r20,32
  8089a4:	10005e1e 	bne	r2,zero,808b20 <___vfiprintf_internal_r+0xb08>
  8089a8:	a080040c 	andi	r2,r20,16
  8089ac:	1001a21e 	bne	r2,zero,809038 <___vfiprintf_internal_r+0x1020>
  8089b0:	a080100c 	andi	r2,r20,64
  8089b4:	d8001d85 	stb	zero,118(sp)
  8089b8:	da802217 	ldw	r10,136(sp)
  8089bc:	1002231e 	bne	r2,zero,80924c <___vfiprintf_internal_r+0x1234>
  8089c0:	50800104 	addi	r2,r10,4
  8089c4:	54800017 	ldw	r18,0(r10)
  8089c8:	0027883a 	mov	r19,zero
  8089cc:	4801a00e 	bge	r9,zero,809050 <___vfiprintf_internal_r+0x1038>
  8089d0:	d8802215 	stw	r2,136(sp)
  8089d4:	0039883a 	mov	fp,zero
  8089d8:	94c4b03a 	or	r2,r18,r19
  8089dc:	103f901e 	bne	r2,zero,808820 <__alt_data_end+0xff808820>
  8089e0:	00800044 	movi	r2,1
  8089e4:	10803fcc 	andi	r2,r2,255
  8089e8:	00c00044 	movi	r3,1
  8089ec:	10c05926 	beq	r2,r3,808b54 <___vfiprintf_internal_r+0xb3c>
  8089f0:	00c00084 	movi	r3,2
  8089f4:	10ffe41e 	bne	r2,r3,808988 <__alt_data_end+0xff808988>
  8089f8:	0025883a 	mov	r18,zero
  8089fc:	0027883a 	mov	r19,zero
  808a00:	00013d06 	br	808ef8 <___vfiprintf_internal_r+0xee0>
  808a04:	21003fcc 	andi	r4,r4,255
  808a08:	2002811e 	bne	r4,zero,809410 <___vfiprintf_internal_r+0x13f8>
  808a0c:	00802074 	movhi	r2,129
  808a10:	10be5b04 	addi	r2,r2,-1684
  808a14:	d8802615 	stw	r2,152(sp)
  808a18:	a080080c 	andi	r2,r20,32
  808a1c:	103f561e 	bne	r2,zero,808778 <__alt_data_end+0xff808778>
  808a20:	a080040c 	andi	r2,r20,16
  808a24:	1001d126 	beq	r2,zero,80916c <___vfiprintf_internal_r+0x1154>
  808a28:	da802217 	ldw	r10,136(sp)
  808a2c:	0027883a 	mov	r19,zero
  808a30:	54800017 	ldw	r18,0(r10)
  808a34:	52800104 	addi	r10,r10,4
  808a38:	da802215 	stw	r10,136(sp)
  808a3c:	003f5306 	br	80878c <__alt_data_end+0xff80878c>
  808a40:	da802217 	ldw	r10,136(sp)
  808a44:	d8001d85 	stb	zero,118(sp)
  808a48:	55400017 	ldw	r21,0(r10)
  808a4c:	50c00104 	addi	r3,r10,4
  808a50:	a8024226 	beq	r21,zero,80935c <___vfiprintf_internal_r+0x1344>
  808a54:	48021816 	blt	r9,zero,8092b8 <___vfiprintf_internal_r+0x12a0>
  808a58:	480d883a 	mov	r6,r9
  808a5c:	000b883a 	mov	r5,zero
  808a60:	a809883a 	mov	r4,r21
  808a64:	d8c02a15 	stw	r3,168(sp)
  808a68:	da002b15 	stw	r8,172(sp)
  808a6c:	da402c15 	stw	r9,176(sp)
  808a70:	08062140 	call	806214 <memchr>
  808a74:	d8c02a17 	ldw	r3,168(sp)
  808a78:	da002b17 	ldw	r8,172(sp)
  808a7c:	da402c17 	ldw	r9,176(sp)
  808a80:	10024826 	beq	r2,zero,8093a4 <___vfiprintf_internal_r+0x138c>
  808a84:	1567c83a 	sub	r19,r2,r21
  808a88:	df001d83 	ldbu	fp,118(sp)
  808a8c:	d8c02215 	stw	r3,136(sp)
  808a90:	0013883a 	mov	r9,zero
  808a94:	003e6006 	br	808418 <__alt_data_end+0xff808418>
  808a98:	21003fcc 	andi	r4,r4,255
  808a9c:	203fc026 	beq	r4,zero,8089a0 <__alt_data_end+0xff8089a0>
  808aa0:	d9c01d85 	stb	r7,118(sp)
  808aa4:	003fbe06 	br	8089a0 <__alt_data_end+0xff8089a0>
  808aa8:	da802217 	ldw	r10,136(sp)
  808aac:	54400017 	ldw	r17,0(r10)
  808ab0:	50800104 	addi	r2,r10,4
  808ab4:	883e3b16 	blt	r17,zero,8083a4 <__alt_data_end+0xff8083a4>
  808ab8:	d8802215 	stw	r2,136(sp)
  808abc:	80c00007 	ldb	r3,0(r16)
  808ac0:	003db406 	br	808194 <__alt_data_end+0xff808194>
  808ac4:	01000044 	movi	r4,1
  808ac8:	01c00ac4 	movi	r7,43
  808acc:	80c00007 	ldb	r3,0(r16)
  808ad0:	003db006 	br	808194 <__alt_data_end+0xff808194>
  808ad4:	80c00007 	ldb	r3,0(r16)
  808ad8:	82800044 	addi	r10,r16,1
  808adc:	1b423c26 	beq	r3,r13,8093d0 <___vfiprintf_internal_r+0x13b8>
  808ae0:	18bff404 	addi	r2,r3,-48
  808ae4:	0013883a 	mov	r9,zero
  808ae8:	30822b36 	bltu	r6,r2,809398 <___vfiprintf_internal_r+0x1380>
  808aec:	50c00007 	ldb	r3,0(r10)
  808af0:	4a4002a4 	muli	r9,r9,10
  808af4:	54000044 	addi	r16,r10,1
  808af8:	8015883a 	mov	r10,r16
  808afc:	4893883a 	add	r9,r9,r2
  808b00:	18bff404 	addi	r2,r3,-48
  808b04:	30bff92e 	bgeu	r6,r2,808aec <__alt_data_end+0xff808aec>
  808b08:	483da30e 	bge	r9,zero,808198 <__alt_data_end+0xff808198>
  808b0c:	027fffc4 	movi	r9,-1
  808b10:	003da106 	br	808198 <__alt_data_end+0xff808198>
  808b14:	a5001014 	ori	r20,r20,64
  808b18:	80c00007 	ldb	r3,0(r16)
  808b1c:	003d9d06 	br	808194 <__alt_data_end+0xff808194>
  808b20:	da802217 	ldw	r10,136(sp)
  808b24:	d8001d85 	stb	zero,118(sp)
  808b28:	50c00204 	addi	r3,r10,8
  808b2c:	54800017 	ldw	r18,0(r10)
  808b30:	54c00117 	ldw	r19,4(r10)
  808b34:	4801ca16 	blt	r9,zero,809260 <___vfiprintf_internal_r+0x1248>
  808b38:	013fdfc4 	movi	r4,-129
  808b3c:	94c4b03a 	or	r2,r18,r19
  808b40:	d8c02215 	stw	r3,136(sp)
  808b44:	a128703a 	and	r20,r20,r4
  808b48:	0039883a 	mov	fp,zero
  808b4c:	103f341e 	bne	r2,zero,808820 <__alt_data_end+0xff808820>
  808b50:	483e2e26 	beq	r9,zero,80840c <__alt_data_end+0xff80840c>
  808b54:	0025883a 	mov	r18,zero
  808b58:	94800c04 	addi	r18,r18,48
  808b5c:	dc8019c5 	stb	r18,103(sp)
  808b60:	dcc02717 	ldw	r19,156(sp)
  808b64:	dd4019c4 	addi	r21,sp,103
  808b68:	003e2b06 	br	808418 <__alt_data_end+0xff808418>
  808b6c:	21003fcc 	andi	r4,r4,255
  808b70:	2002361e 	bne	r4,zero,80944c <___vfiprintf_internal_r+0x1434>
  808b74:	1801c126 	beq	r3,zero,80927c <___vfiprintf_internal_r+0x1264>
  808b78:	04800044 	movi	r18,1
  808b7c:	d8c01005 	stb	r3,64(sp)
  808b80:	d8001d85 	stb	zero,118(sp)
  808b84:	9027883a 	mov	r19,r18
  808b88:	dd401004 	addi	r21,sp,64
  808b8c:	003f1106 	br	8087d4 <__alt_data_end+0xff8087d4>
  808b90:	d9402117 	ldw	r5,132(sp)
  808b94:	d9002017 	ldw	r4,128(sp)
  808b98:	d9801a04 	addi	r6,sp,104
  808b9c:	d9c02b15 	stw	r7,172(sp)
  808ba0:	dbc02a15 	stw	r15,168(sp)
  808ba4:	0807f040 	call	807f04 <__sprint_r.part.0>
  808ba8:	d9c02b17 	ldw	r7,172(sp)
  808bac:	dbc02a17 	ldw	r15,168(sp)
  808bb0:	10006d1e 	bne	r2,zero,808d68 <___vfiprintf_internal_r+0xd50>
  808bb4:	d9801b17 	ldw	r6,108(sp)
  808bb8:	d8801c17 	ldw	r2,112(sp)
  808bbc:	d811883a 	mov	r8,sp
  808bc0:	31400044 	addi	r5,r6,1
  808bc4:	003e3306 	br	808494 <__alt_data_end+0xff808494>
  808bc8:	d9401b17 	ldw	r5,108(sp)
  808bcc:	d8801c17 	ldw	r2,112(sp)
  808bd0:	29000044 	addi	r4,r5,1
  808bd4:	d8c01d87 	ldb	r3,118(sp)
  808bd8:	183e4d26 	beq	r3,zero,808510 <__alt_data_end+0xff808510>
  808bdc:	00c00044 	movi	r3,1
  808be0:	d9401d84 	addi	r5,sp,118
  808be4:	10c5883a 	add	r2,r2,r3
  808be8:	41400015 	stw	r5,0(r8)
  808bec:	40c00115 	stw	r3,4(r8)
  808bf0:	d8801c15 	stw	r2,112(sp)
  808bf4:	d9001b15 	stw	r4,108(sp)
  808bf8:	014001c4 	movi	r5,7
  808bfc:	2900a90e 	bge	r5,r4,808ea4 <___vfiprintf_internal_r+0xe8c>
  808c00:	1000da1e 	bne	r2,zero,808f6c <___vfiprintf_internal_r+0xf54>
  808c04:	7000ab1e 	bne	r14,zero,808eb4 <___vfiprintf_internal_r+0xe9c>
  808c08:	000b883a 	mov	r5,zero
  808c0c:	1809883a 	mov	r4,r3
  808c10:	d811883a 	mov	r8,sp
  808c14:	00c02004 	movi	r3,128
  808c18:	e0fe4d26 	beq	fp,r3,808550 <__alt_data_end+0xff808550>
  808c1c:	4cf9c83a 	sub	fp,r9,r19
  808c20:	073e7b0e 	bge	zero,fp,808610 <__alt_data_end+0xff808610>
  808c24:	01c00404 	movi	r7,16
  808c28:	3f01900e 	bge	r7,fp,80926c <___vfiprintf_internal_r+0x1254>
  808c2c:	00c02074 	movhi	r3,129
  808c30:	18fec104 	addi	r3,r3,-1276
  808c34:	d8c02415 	stw	r3,144(sp)
  808c38:	034001c4 	movi	r13,7
  808c3c:	00000506 	br	808c54 <___vfiprintf_internal_r+0xc3c>
  808c40:	29000084 	addi	r4,r5,2
  808c44:	42000204 	addi	r8,r8,8
  808c48:	180b883a 	mov	r5,r3
  808c4c:	e73ffc04 	addi	fp,fp,-16
  808c50:	3f000d0e 	bge	r7,fp,808c88 <___vfiprintf_internal_r+0xc70>
  808c54:	10800404 	addi	r2,r2,16
  808c58:	28c00044 	addi	r3,r5,1
  808c5c:	45c00015 	stw	r23,0(r8)
  808c60:	41c00115 	stw	r7,4(r8)
  808c64:	d8801c15 	stw	r2,112(sp)
  808c68:	d8c01b15 	stw	r3,108(sp)
  808c6c:	68fff40e 	bge	r13,r3,808c40 <__alt_data_end+0xff808c40>
  808c70:	1000101e 	bne	r2,zero,808cb4 <___vfiprintf_internal_r+0xc9c>
  808c74:	e73ffc04 	addi	fp,fp,-16
  808c78:	01000044 	movi	r4,1
  808c7c:	000b883a 	mov	r5,zero
  808c80:	d811883a 	mov	r8,sp
  808c84:	3f3ff316 	blt	r7,fp,808c54 <__alt_data_end+0xff808c54>
  808c88:	da802417 	ldw	r10,144(sp)
  808c8c:	1705883a 	add	r2,r2,fp
  808c90:	47000115 	stw	fp,4(r8)
  808c94:	42800015 	stw	r10,0(r8)
  808c98:	d8801c15 	stw	r2,112(sp)
  808c9c:	d9001b15 	stw	r4,108(sp)
  808ca0:	00c001c4 	movi	r3,7
  808ca4:	19003616 	blt	r3,r4,808d80 <___vfiprintf_internal_r+0xd68>
  808ca8:	42000204 	addi	r8,r8,8
  808cac:	21000044 	addi	r4,r4,1
  808cb0:	003e5706 	br	808610 <__alt_data_end+0xff808610>
  808cb4:	d9402117 	ldw	r5,132(sp)
  808cb8:	d9002017 	ldw	r4,128(sp)
  808cbc:	d9801a04 	addi	r6,sp,104
  808cc0:	d9c02b15 	stw	r7,172(sp)
  808cc4:	db402a15 	stw	r13,168(sp)
  808cc8:	0807f040 	call	807f04 <__sprint_r.part.0>
  808ccc:	d9c02b17 	ldw	r7,172(sp)
  808cd0:	db402a17 	ldw	r13,168(sp)
  808cd4:	1000241e 	bne	r2,zero,808d68 <___vfiprintf_internal_r+0xd50>
  808cd8:	d9401b17 	ldw	r5,108(sp)
  808cdc:	d8801c17 	ldw	r2,112(sp)
  808ce0:	d811883a 	mov	r8,sp
  808ce4:	29000044 	addi	r4,r5,1
  808ce8:	003fd806 	br	808c4c <__alt_data_end+0xff808c4c>
  808cec:	d9401b17 	ldw	r5,108(sp)
  808cf0:	00c02074 	movhi	r3,129
  808cf4:	18fec504 	addi	r3,r3,-1260
  808cf8:	d8c02415 	stw	r3,144(sp)
  808cfc:	29400044 	addi	r5,r5,1
  808d00:	d8c02417 	ldw	r3,144(sp)
  808d04:	14c5883a 	add	r2,r2,r19
  808d08:	44c00115 	stw	r19,4(r8)
  808d0c:	40c00015 	stw	r3,0(r8)
  808d10:	d8801c15 	stw	r2,112(sp)
  808d14:	d9401b15 	stw	r5,108(sp)
  808d18:	00c001c4 	movi	r3,7
  808d1c:	1940070e 	bge	r3,r5,808d3c <___vfiprintf_internal_r+0xd24>
  808d20:	103e4826 	beq	r2,zero,808644 <__alt_data_end+0xff808644>
  808d24:	d9402117 	ldw	r5,132(sp)
  808d28:	d9002017 	ldw	r4,128(sp)
  808d2c:	d9801a04 	addi	r6,sp,104
  808d30:	0807f040 	call	807f04 <__sprint_r.part.0>
  808d34:	10000c1e 	bne	r2,zero,808d68 <___vfiprintf_internal_r+0xd50>
  808d38:	d8801c17 	ldw	r2,112(sp)
  808d3c:	8c80010e 	bge	r17,r18,808d44 <___vfiprintf_internal_r+0xd2c>
  808d40:	9023883a 	mov	r17,r18
  808d44:	da802317 	ldw	r10,140(sp)
  808d48:	5455883a 	add	r10,r10,r17
  808d4c:	da802315 	stw	r10,140(sp)
  808d50:	103e4126 	beq	r2,zero,808658 <__alt_data_end+0xff808658>
  808d54:	d9402117 	ldw	r5,132(sp)
  808d58:	d9002017 	ldw	r4,128(sp)
  808d5c:	d9801a04 	addi	r6,sp,104
  808d60:	0807f040 	call	807f04 <__sprint_r.part.0>
  808d64:	103e3c26 	beq	r2,zero,808658 <__alt_data_end+0xff808658>
  808d68:	dd002117 	ldw	r20,132(sp)
  808d6c:	a080030b 	ldhu	r2,12(r20)
  808d70:	1080100c 	andi	r2,r2,64
  808d74:	1001231e 	bne	r2,zero,809204 <___vfiprintf_internal_r+0x11ec>
  808d78:	d8802317 	ldw	r2,140(sp)
  808d7c:	003d7b06 	br	80836c <__alt_data_end+0xff80836c>
  808d80:	1000991e 	bne	r2,zero,808fe8 <___vfiprintf_internal_r+0xfd0>
  808d84:	00c00044 	movi	r3,1
  808d88:	9805883a 	mov	r2,r19
  808d8c:	dd400015 	stw	r21,0(sp)
  808d90:	dcc00115 	stw	r19,4(sp)
  808d94:	dcc01c15 	stw	r19,112(sp)
  808d98:	d8c01b15 	stw	r3,108(sp)
  808d9c:	d811883a 	mov	r8,sp
  808da0:	42000204 	addi	r8,r8,8
  808da4:	a2c0010c 	andi	r11,r20,4
  808da8:	583fe426 	beq	r11,zero,808d3c <__alt_data_end+0xff808d3c>
  808dac:	8ca7c83a 	sub	r19,r17,r18
  808db0:	04ffe20e 	bge	zero,r19,808d3c <__alt_data_end+0xff808d3c>
  808db4:	01c00404 	movi	r7,16
  808db8:	3cffcc0e 	bge	r7,r19,808cec <__alt_data_end+0xff808cec>
  808dbc:	02802074 	movhi	r10,129
  808dc0:	52bec504 	addi	r10,r10,-1260
  808dc4:	d9001b17 	ldw	r4,108(sp)
  808dc8:	da802415 	stw	r10,144(sp)
  808dcc:	382b883a 	mov	r21,r7
  808dd0:	050001c4 	movi	r20,7
  808dd4:	df002017 	ldw	fp,128(sp)
  808dd8:	00000506 	br	808df0 <___vfiprintf_internal_r+0xdd8>
  808ddc:	21400084 	addi	r5,r4,2
  808de0:	42000204 	addi	r8,r8,8
  808de4:	1809883a 	mov	r4,r3
  808de8:	9cfffc04 	addi	r19,r19,-16
  808dec:	acffc40e 	bge	r21,r19,808d00 <__alt_data_end+0xff808d00>
  808df0:	10800404 	addi	r2,r2,16
  808df4:	20c00044 	addi	r3,r4,1
  808df8:	45800015 	stw	r22,0(r8)
  808dfc:	45400115 	stw	r21,4(r8)
  808e00:	d8801c15 	stw	r2,112(sp)
  808e04:	d8c01b15 	stw	r3,108(sp)
  808e08:	a0fff40e 	bge	r20,r3,808ddc <__alt_data_end+0xff808ddc>
  808e0c:	1000041e 	bne	r2,zero,808e20 <___vfiprintf_internal_r+0xe08>
  808e10:	01400044 	movi	r5,1
  808e14:	0009883a 	mov	r4,zero
  808e18:	d811883a 	mov	r8,sp
  808e1c:	003ff206 	br	808de8 <__alt_data_end+0xff808de8>
  808e20:	d9402117 	ldw	r5,132(sp)
  808e24:	d9801a04 	addi	r6,sp,104
  808e28:	e009883a 	mov	r4,fp
  808e2c:	0807f040 	call	807f04 <__sprint_r.part.0>
  808e30:	103fcd1e 	bne	r2,zero,808d68 <__alt_data_end+0xff808d68>
  808e34:	d9001b17 	ldw	r4,108(sp)
  808e38:	d8801c17 	ldw	r2,112(sp)
  808e3c:	d811883a 	mov	r8,sp
  808e40:	21400044 	addi	r5,r4,1
  808e44:	003fe806 	br	808de8 <__alt_data_end+0xff808de8>
  808e48:	d9402117 	ldw	r5,132(sp)
  808e4c:	d9002017 	ldw	r4,128(sp)
  808e50:	d9801a04 	addi	r6,sp,104
  808e54:	d9c02b15 	stw	r7,172(sp)
  808e58:	db402a15 	stw	r13,168(sp)
  808e5c:	0807f040 	call	807f04 <__sprint_r.part.0>
  808e60:	d9c02b17 	ldw	r7,172(sp)
  808e64:	db402a17 	ldw	r13,168(sp)
  808e68:	103fbf1e 	bne	r2,zero,808d68 <__alt_data_end+0xff808d68>
  808e6c:	d9401b17 	ldw	r5,108(sp)
  808e70:	d8801c17 	ldw	r2,112(sp)
  808e74:	d811883a 	mov	r8,sp
  808e78:	29800044 	addi	r6,r5,1
  808e7c:	003dc406 	br	808590 <__alt_data_end+0xff808590>
  808e80:	1000d21e 	bne	r2,zero,8091cc <___vfiprintf_internal_r+0x11b4>
  808e84:	d8c01d87 	ldb	r3,118(sp)
  808e88:	18009526 	beq	r3,zero,8090e0 <___vfiprintf_internal_r+0x10c8>
  808e8c:	00800044 	movi	r2,1
  808e90:	d8c01d84 	addi	r3,sp,118
  808e94:	1009883a 	mov	r4,r2
  808e98:	d8c00015 	stw	r3,0(sp)
  808e9c:	d8800115 	stw	r2,4(sp)
  808ea0:	d811883a 	mov	r8,sp
  808ea4:	200b883a 	mov	r5,r4
  808ea8:	42000204 	addi	r8,r8,8
  808eac:	21000044 	addi	r4,r4,1
  808eb0:	003d9706 	br	808510 <__alt_data_end+0xff808510>
  808eb4:	d9001d04 	addi	r4,sp,116
  808eb8:	00800084 	movi	r2,2
  808ebc:	d9000015 	stw	r4,0(sp)
  808ec0:	d8800115 	stw	r2,4(sp)
  808ec4:	1809883a 	mov	r4,r3
  808ec8:	d811883a 	mov	r8,sp
  808ecc:	200b883a 	mov	r5,r4
  808ed0:	42000204 	addi	r8,r8,8
  808ed4:	21000044 	addi	r4,r4,1
  808ed8:	003f4e06 	br	808c14 <__alt_data_end+0xff808c14>
  808edc:	d8001d85 	stb	zero,118(sp)
  808ee0:	48005016 	blt	r9,zero,809024 <___vfiprintf_internal_r+0x100c>
  808ee4:	00ffdfc4 	movi	r3,-129
  808ee8:	94c4b03a 	or	r2,r18,r19
  808eec:	a0e8703a 	and	r20,r20,r3
  808ef0:	103d4426 	beq	r2,zero,808404 <__alt_data_end+0xff808404>
  808ef4:	0039883a 	mov	fp,zero
  808ef8:	d9002617 	ldw	r4,152(sp)
  808efc:	dd401a04 	addi	r21,sp,104
  808f00:	908003cc 	andi	r2,r18,15
  808f04:	9806973a 	slli	r3,r19,28
  808f08:	2085883a 	add	r2,r4,r2
  808f0c:	9024d13a 	srli	r18,r18,4
  808f10:	10800003 	ldbu	r2,0(r2)
  808f14:	9826d13a 	srli	r19,r19,4
  808f18:	ad7fffc4 	addi	r21,r21,-1
  808f1c:	1ca4b03a 	or	r18,r3,r18
  808f20:	a8800005 	stb	r2,0(r21)
  808f24:	94c4b03a 	or	r2,r18,r19
  808f28:	103ff51e 	bne	r2,zero,808f00 <__alt_data_end+0xff808f00>
  808f2c:	003e5906 	br	808894 <__alt_data_end+0xff808894>
  808f30:	d9402117 	ldw	r5,132(sp)
  808f34:	d9002017 	ldw	r4,128(sp)
  808f38:	d9801a04 	addi	r6,sp,104
  808f3c:	0807f040 	call	807f04 <__sprint_r.part.0>
  808f40:	103f891e 	bne	r2,zero,808d68 <__alt_data_end+0xff808d68>
  808f44:	d8801c17 	ldw	r2,112(sp)
  808f48:	d811883a 	mov	r8,sp
  808f4c:	003f9506 	br	808da4 <__alt_data_end+0xff808da4>
  808f50:	d9402117 	ldw	r5,132(sp)
  808f54:	d9002017 	ldw	r4,128(sp)
  808f58:	d9801a04 	addi	r6,sp,104
  808f5c:	0807f040 	call	807f04 <__sprint_r.part.0>
  808f60:	103f811e 	bne	r2,zero,808d68 <__alt_data_end+0xff808d68>
  808f64:	d811883a 	mov	r8,sp
  808f68:	003ced06 	br	808320 <__alt_data_end+0xff808320>
  808f6c:	d9402117 	ldw	r5,132(sp)
  808f70:	d9002017 	ldw	r4,128(sp)
  808f74:	d9801a04 	addi	r6,sp,104
  808f78:	da402c15 	stw	r9,176(sp)
  808f7c:	db802a15 	stw	r14,168(sp)
  808f80:	0807f040 	call	807f04 <__sprint_r.part.0>
  808f84:	da402c17 	ldw	r9,176(sp)
  808f88:	db802a17 	ldw	r14,168(sp)
  808f8c:	103f761e 	bne	r2,zero,808d68 <__alt_data_end+0xff808d68>
  808f90:	d9401b17 	ldw	r5,108(sp)
  808f94:	d8801c17 	ldw	r2,112(sp)
  808f98:	d811883a 	mov	r8,sp
  808f9c:	29000044 	addi	r4,r5,1
  808fa0:	003d5b06 	br	808510 <__alt_data_end+0xff808510>
  808fa4:	d9402117 	ldw	r5,132(sp)
  808fa8:	d9002017 	ldw	r4,128(sp)
  808fac:	d9801a04 	addi	r6,sp,104
  808fb0:	da402c15 	stw	r9,176(sp)
  808fb4:	0807f040 	call	807f04 <__sprint_r.part.0>
  808fb8:	da402c17 	ldw	r9,176(sp)
  808fbc:	103f6a1e 	bne	r2,zero,808d68 <__alt_data_end+0xff808d68>
  808fc0:	d9401b17 	ldw	r5,108(sp)
  808fc4:	d8801c17 	ldw	r2,112(sp)
  808fc8:	d811883a 	mov	r8,sp
  808fcc:	29000044 	addi	r4,r5,1
  808fd0:	003f1006 	br	808c14 <__alt_data_end+0xff808c14>
  808fd4:	1000c31e 	bne	r2,zero,8092e4 <___vfiprintf_internal_r+0x12cc>
  808fd8:	01000044 	movi	r4,1
  808fdc:	000b883a 	mov	r5,zero
  808fe0:	d811883a 	mov	r8,sp
  808fe4:	003f0d06 	br	808c1c <__alt_data_end+0xff808c1c>
  808fe8:	d9402117 	ldw	r5,132(sp)
  808fec:	d9002017 	ldw	r4,128(sp)
  808ff0:	d9801a04 	addi	r6,sp,104
  808ff4:	0807f040 	call	807f04 <__sprint_r.part.0>
  808ff8:	103f5b1e 	bne	r2,zero,808d68 <__alt_data_end+0xff808d68>
  808ffc:	d9001b17 	ldw	r4,108(sp)
  809000:	d8801c17 	ldw	r2,112(sp)
  809004:	d811883a 	mov	r8,sp
  809008:	21000044 	addi	r4,r4,1
  80900c:	003d8006 	br	808610 <__alt_data_end+0xff808610>
  809010:	01002074 	movhi	r4,129
  809014:	213e6004 	addi	r4,r4,-1664
  809018:	d9002615 	stw	r4,152(sp)
  80901c:	d8c02215 	stw	r3,136(sp)
  809020:	1029883a 	mov	r20,r2
  809024:	94c4b03a 	or	r2,r18,r19
  809028:	103fb21e 	bne	r2,zero,808ef4 <__alt_data_end+0xff808ef4>
  80902c:	0039883a 	mov	fp,zero
  809030:	00800084 	movi	r2,2
  809034:	003e6b06 	br	8089e4 <__alt_data_end+0xff8089e4>
  809038:	da802217 	ldw	r10,136(sp)
  80903c:	d8001d85 	stb	zero,118(sp)
  809040:	0027883a 	mov	r19,zero
  809044:	50800104 	addi	r2,r10,4
  809048:	54800017 	ldw	r18,0(r10)
  80904c:	483e6016 	blt	r9,zero,8089d0 <__alt_data_end+0xff8089d0>
  809050:	00ffdfc4 	movi	r3,-129
  809054:	d8802215 	stw	r2,136(sp)
  809058:	a0e8703a 	and	r20,r20,r3
  80905c:	0039883a 	mov	fp,zero
  809060:	903ebb26 	beq	r18,zero,808b50 <__alt_data_end+0xff808b50>
  809064:	00800244 	movi	r2,9
  809068:	14bdee36 	bltu	r2,r18,808824 <__alt_data_end+0xff808824>
  80906c:	003eba06 	br	808b58 <__alt_data_end+0xff808b58>
  809070:	00800c04 	movi	r2,48
  809074:	d8c01d45 	stb	r3,117(sp)
  809078:	d8801d05 	stb	r2,116(sp)
  80907c:	d8001d85 	stb	zero,118(sp)
  809080:	a0c00094 	ori	r3,r20,2
  809084:	4800a916 	blt	r9,zero,80932c <___vfiprintf_internal_r+0x1314>
  809088:	00bfdfc4 	movi	r2,-129
  80908c:	a096703a 	and	r11,r20,r2
  809090:	5d000094 	ori	r20,r11,2
  809094:	0039883a 	mov	fp,zero
  809098:	003f9706 	br	808ef8 <__alt_data_end+0xff808ef8>
  80909c:	8025883a 	mov	r18,r16
  8090a0:	003c2e06 	br	80815c <__alt_data_end+0xff80815c>
  8090a4:	00802074 	movhi	r2,129
  8090a8:	10be6004 	addi	r2,r2,-1664
  8090ac:	0039883a 	mov	fp,zero
  8090b0:	d8802615 	stw	r2,152(sp)
  8090b4:	003f9006 	br	808ef8 <__alt_data_end+0xff808ef8>
  8090b8:	04a5c83a 	sub	r18,zero,r18
  8090bc:	07000b44 	movi	fp,45
  8090c0:	9004c03a 	cmpne	r2,r18,zero
  8090c4:	04e7c83a 	sub	r19,zero,r19
  8090c8:	df001d85 	stb	fp,118(sp)
  8090cc:	98a7c83a 	sub	r19,r19,r2
  8090d0:	48009f16 	blt	r9,zero,809350 <___vfiprintf_internal_r+0x1338>
  8090d4:	00bfdfc4 	movi	r2,-129
  8090d8:	a0a8703a 	and	r20,r20,r2
  8090dc:	003dd006 	br	808820 <__alt_data_end+0xff808820>
  8090e0:	70004c26 	beq	r14,zero,809214 <___vfiprintf_internal_r+0x11fc>
  8090e4:	00800084 	movi	r2,2
  8090e8:	d8c01d04 	addi	r3,sp,116
  8090ec:	d8c00015 	stw	r3,0(sp)
  8090f0:	d8800115 	stw	r2,4(sp)
  8090f4:	01000044 	movi	r4,1
  8090f8:	d811883a 	mov	r8,sp
  8090fc:	003f7306 	br	808ecc <__alt_data_end+0xff808ecc>
  809100:	a080100c 	andi	r2,r20,64
  809104:	da802217 	ldw	r10,136(sp)
  809108:	103e0626 	beq	r2,zero,808924 <__alt_data_end+0xff808924>
  80910c:	5480000f 	ldh	r18,0(r10)
  809110:	52800104 	addi	r10,r10,4
  809114:	da802215 	stw	r10,136(sp)
  809118:	9027d7fa 	srai	r19,r18,31
  80911c:	9805883a 	mov	r2,r19
  809120:	003db806 	br	808804 <__alt_data_end+0xff808804>
  809124:	a080040c 	andi	r2,r20,16
  809128:	1000091e 	bne	r2,zero,809150 <___vfiprintf_internal_r+0x1138>
  80912c:	a2c0100c 	andi	r11,r20,64
  809130:	58000726 	beq	r11,zero,809150 <___vfiprintf_internal_r+0x1138>
  809134:	da802217 	ldw	r10,136(sp)
  809138:	50800017 	ldw	r2,0(r10)
  80913c:	52800104 	addi	r10,r10,4
  809140:	da802215 	stw	r10,136(sp)
  809144:	da802317 	ldw	r10,140(sp)
  809148:	1280000d 	sth	r10,0(r2)
  80914c:	003be706 	br	8080ec <__alt_data_end+0xff8080ec>
  809150:	da802217 	ldw	r10,136(sp)
  809154:	50800017 	ldw	r2,0(r10)
  809158:	52800104 	addi	r10,r10,4
  80915c:	da802215 	stw	r10,136(sp)
  809160:	da802317 	ldw	r10,140(sp)
  809164:	12800015 	stw	r10,0(r2)
  809168:	003be006 	br	8080ec <__alt_data_end+0xff8080ec>
  80916c:	a080100c 	andi	r2,r20,64
  809170:	da802217 	ldw	r10,136(sp)
  809174:	10003026 	beq	r2,zero,809238 <___vfiprintf_internal_r+0x1220>
  809178:	5480000b 	ldhu	r18,0(r10)
  80917c:	52800104 	addi	r10,r10,4
  809180:	0027883a 	mov	r19,zero
  809184:	da802215 	stw	r10,136(sp)
  809188:	003d8006 	br	80878c <__alt_data_end+0xff80878c>
  80918c:	80c00007 	ldb	r3,0(r16)
  809190:	003c0006 	br	808194 <__alt_data_end+0xff808194>
  809194:	a080100c 	andi	r2,r20,64
  809198:	d8001d85 	stb	zero,118(sp)
  80919c:	da802217 	ldw	r10,136(sp)
  8091a0:	1000201e 	bne	r2,zero,809224 <___vfiprintf_internal_r+0x120c>
  8091a4:	50800104 	addi	r2,r10,4
  8091a8:	54800017 	ldw	r18,0(r10)
  8091ac:	0027883a 	mov	r19,zero
  8091b0:	483def0e 	bge	r9,zero,808970 <__alt_data_end+0xff808970>
  8091b4:	94c6b03a 	or	r3,r18,r19
  8091b8:	d8802215 	stw	r2,136(sp)
  8091bc:	183d4e1e 	bne	r3,zero,8086f8 <__alt_data_end+0xff8086f8>
  8091c0:	0039883a 	mov	fp,zero
  8091c4:	0005883a 	mov	r2,zero
  8091c8:	003e0606 	br	8089e4 <__alt_data_end+0xff8089e4>
  8091cc:	d9402117 	ldw	r5,132(sp)
  8091d0:	d9002017 	ldw	r4,128(sp)
  8091d4:	d9801a04 	addi	r6,sp,104
  8091d8:	da402c15 	stw	r9,176(sp)
  8091dc:	db802a15 	stw	r14,168(sp)
  8091e0:	0807f040 	call	807f04 <__sprint_r.part.0>
  8091e4:	da402c17 	ldw	r9,176(sp)
  8091e8:	db802a17 	ldw	r14,168(sp)
  8091ec:	103ede1e 	bne	r2,zero,808d68 <__alt_data_end+0xff808d68>
  8091f0:	d9401b17 	ldw	r5,108(sp)
  8091f4:	d8801c17 	ldw	r2,112(sp)
  8091f8:	d811883a 	mov	r8,sp
  8091fc:	29000044 	addi	r4,r5,1
  809200:	003e7406 	br	808bd4 <__alt_data_end+0xff808bd4>
  809204:	00bfffc4 	movi	r2,-1
  809208:	003c5806 	br	80836c <__alt_data_end+0xff80836c>
  80920c:	d811883a 	mov	r8,sp
  809210:	003ee806 	br	808db4 <__alt_data_end+0xff808db4>
  809214:	000b883a 	mov	r5,zero
  809218:	01000044 	movi	r4,1
  80921c:	d811883a 	mov	r8,sp
  809220:	003e7c06 	br	808c14 <__alt_data_end+0xff808c14>
  809224:	50800104 	addi	r2,r10,4
  809228:	5480000b 	ldhu	r18,0(r10)
  80922c:	0027883a 	mov	r19,zero
  809230:	483dcf0e 	bge	r9,zero,808970 <__alt_data_end+0xff808970>
  809234:	003fdf06 	br	8091b4 <__alt_data_end+0xff8091b4>
  809238:	54800017 	ldw	r18,0(r10)
  80923c:	52800104 	addi	r10,r10,4
  809240:	0027883a 	mov	r19,zero
  809244:	da802215 	stw	r10,136(sp)
  809248:	003d5006 	br	80878c <__alt_data_end+0xff80878c>
  80924c:	50800104 	addi	r2,r10,4
  809250:	5480000b 	ldhu	r18,0(r10)
  809254:	0027883a 	mov	r19,zero
  809258:	483f7d0e 	bge	r9,zero,809050 <__alt_data_end+0xff809050>
  80925c:	003ddc06 	br	8089d0 <__alt_data_end+0xff8089d0>
  809260:	d8c02215 	stw	r3,136(sp)
  809264:	0039883a 	mov	fp,zero
  809268:	003ddb06 	br	8089d8 <__alt_data_end+0xff8089d8>
  80926c:	02802074 	movhi	r10,129
  809270:	52bec104 	addi	r10,r10,-1276
  809274:	da802415 	stw	r10,144(sp)
  809278:	003e8306 	br	808c88 <__alt_data_end+0xff808c88>
  80927c:	d8801c17 	ldw	r2,112(sp)
  809280:	dd002117 	ldw	r20,132(sp)
  809284:	103eb926 	beq	r2,zero,808d6c <__alt_data_end+0xff808d6c>
  809288:	d9002017 	ldw	r4,128(sp)
  80928c:	d9801a04 	addi	r6,sp,104
  809290:	a00b883a 	mov	r5,r20
  809294:	0807f040 	call	807f04 <__sprint_r.part.0>
  809298:	003eb406 	br	808d6c <__alt_data_end+0xff808d6c>
  80929c:	80c00043 	ldbu	r3,1(r16)
  8092a0:	a5000814 	ori	r20,r20,32
  8092a4:	84000044 	addi	r16,r16,1
  8092a8:	18c03fcc 	andi	r3,r3,255
  8092ac:	18c0201c 	xori	r3,r3,128
  8092b0:	18ffe004 	addi	r3,r3,-128
  8092b4:	003bb706 	br	808194 <__alt_data_end+0xff808194>
  8092b8:	a809883a 	mov	r4,r21
  8092bc:	d8c02a15 	stw	r3,168(sp)
  8092c0:	da002b15 	stw	r8,172(sp)
  8092c4:	080096c0 	call	80096c <strlen>
  8092c8:	d8c02a17 	ldw	r3,168(sp)
  8092cc:	1027883a 	mov	r19,r2
  8092d0:	df001d83 	ldbu	fp,118(sp)
  8092d4:	d8c02215 	stw	r3,136(sp)
  8092d8:	0013883a 	mov	r9,zero
  8092dc:	da002b17 	ldw	r8,172(sp)
  8092e0:	003c4d06 	br	808418 <__alt_data_end+0xff808418>
  8092e4:	d9402117 	ldw	r5,132(sp)
  8092e8:	d9002017 	ldw	r4,128(sp)
  8092ec:	d9801a04 	addi	r6,sp,104
  8092f0:	da402c15 	stw	r9,176(sp)
  8092f4:	0807f040 	call	807f04 <__sprint_r.part.0>
  8092f8:	da402c17 	ldw	r9,176(sp)
  8092fc:	103e9a1e 	bne	r2,zero,808d68 <__alt_data_end+0xff808d68>
  809300:	d9401b17 	ldw	r5,108(sp)
  809304:	d8801c17 	ldw	r2,112(sp)
  809308:	d811883a 	mov	r8,sp
  80930c:	29000044 	addi	r4,r5,1
  809310:	003e4206 	br	808c1c <__alt_data_end+0xff808c1c>
  809314:	d9401b17 	ldw	r5,108(sp)
  809318:	01002074 	movhi	r4,129
  80931c:	213ec504 	addi	r4,r4,-1260
  809320:	d9002415 	stw	r4,144(sp)
  809324:	29400044 	addi	r5,r5,1
  809328:	003c6d06 	br	8084e0 <__alt_data_end+0xff8084e0>
  80932c:	0039883a 	mov	fp,zero
  809330:	00800084 	movi	r2,2
  809334:	10803fcc 	andi	r2,r2,255
  809338:	01000044 	movi	r4,1
  80933c:	11001e26 	beq	r2,r4,8093b8 <___vfiprintf_internal_r+0x13a0>
  809340:	01000084 	movi	r4,2
  809344:	11001e1e 	bne	r2,r4,8093c0 <___vfiprintf_internal_r+0x13a8>
  809348:	1829883a 	mov	r20,r3
  80934c:	003eea06 	br	808ef8 <__alt_data_end+0xff808ef8>
  809350:	a007883a 	mov	r3,r20
  809354:	00800044 	movi	r2,1
  809358:	003ff606 	br	809334 <__alt_data_end+0xff809334>
  80935c:	00800184 	movi	r2,6
  809360:	1240012e 	bgeu	r2,r9,809368 <___vfiprintf_internal_r+0x1350>
  809364:	1013883a 	mov	r9,r2
  809368:	4827883a 	mov	r19,r9
  80936c:	4825883a 	mov	r18,r9
  809370:	48001516 	blt	r9,zero,8093c8 <___vfiprintf_internal_r+0x13b0>
  809374:	05402074 	movhi	r21,129
  809378:	d8c02215 	stw	r3,136(sp)
  80937c:	ad7e6504 	addi	r21,r21,-1644
  809380:	003d1406 	br	8087d4 <__alt_data_end+0xff8087d4>
  809384:	02802074 	movhi	r10,129
  809388:	52bec104 	addi	r10,r10,-1276
  80938c:	da802415 	stw	r10,144(sp)
  809390:	200d883a 	mov	r6,r4
  809394:	003c9106 	br	8085dc <__alt_data_end+0xff8085dc>
  809398:	5021883a 	mov	r16,r10
  80939c:	0013883a 	mov	r9,zero
  8093a0:	003b7d06 	br	808198 <__alt_data_end+0xff808198>
  8093a4:	4827883a 	mov	r19,r9
  8093a8:	df001d83 	ldbu	fp,118(sp)
  8093ac:	d8c02215 	stw	r3,136(sp)
  8093b0:	0013883a 	mov	r9,zero
  8093b4:	003c1806 	br	808418 <__alt_data_end+0xff808418>
  8093b8:	1829883a 	mov	r20,r3
  8093bc:	003d1806 	br	808820 <__alt_data_end+0xff808820>
  8093c0:	1829883a 	mov	r20,r3
  8093c4:	003ccd06 	br	8086fc <__alt_data_end+0xff8086fc>
  8093c8:	0025883a 	mov	r18,zero
  8093cc:	003fe906 	br	809374 <__alt_data_end+0xff809374>
  8093d0:	d8802217 	ldw	r2,136(sp)
  8093d4:	80c00043 	ldbu	r3,1(r16)
  8093d8:	5021883a 	mov	r16,r10
  8093dc:	12400017 	ldw	r9,0(r2)
  8093e0:	10800104 	addi	r2,r2,4
  8093e4:	d8802215 	stw	r2,136(sp)
  8093e8:	483faf0e 	bge	r9,zero,8092a8 <__alt_data_end+0xff8092a8>
  8093ec:	18c03fcc 	andi	r3,r3,255
  8093f0:	18c0201c 	xori	r3,r3,128
  8093f4:	027fffc4 	movi	r9,-1
  8093f8:	18ffe004 	addi	r3,r3,-128
  8093fc:	003b6506 	br	808194 <__alt_data_end+0xff808194>
  809400:	d9c01d85 	stb	r7,118(sp)
  809404:	003ca006 	br	808688 <__alt_data_end+0xff808688>
  809408:	d9c01d85 	stb	r7,118(sp)
  80940c:	003cad06 	br	8086c4 <__alt_data_end+0xff8086c4>
  809410:	d9c01d85 	stb	r7,118(sp)
  809414:	003d7d06 	br	808a0c <__alt_data_end+0xff808a0c>
  809418:	d9c01d85 	stb	r7,118(sp)
  80941c:	003d5f06 	br	80899c <__alt_data_end+0xff80899c>
  809420:	a080004c 	andi	r2,r20,1
  809424:	0039883a 	mov	fp,zero
  809428:	10000526 	beq	r2,zero,809440 <___vfiprintf_internal_r+0x1428>
  80942c:	00800c04 	movi	r2,48
  809430:	d88019c5 	stb	r2,103(sp)
  809434:	dcc02717 	ldw	r19,156(sp)
  809438:	dd4019c4 	addi	r21,sp,103
  80943c:	003bf606 	br	808418 <__alt_data_end+0xff808418>
  809440:	0027883a 	mov	r19,zero
  809444:	dd401a04 	addi	r21,sp,104
  809448:	003bf306 	br	808418 <__alt_data_end+0xff808418>
  80944c:	d9c01d85 	stb	r7,118(sp)
  809450:	003dc806 	br	808b74 <__alt_data_end+0xff808b74>
  809454:	d9c01d85 	stb	r7,118(sp)
  809458:	003d3a06 	br	808944 <__alt_data_end+0xff808944>
  80945c:	d9c01d85 	stb	r7,118(sp)
  809460:	003d2a06 	br	80890c <__alt_data_end+0xff80890c>
  809464:	d9c01d85 	stb	r7,118(sp)
  809468:	003cde06 	br	8087e4 <__alt_data_end+0xff8087e4>
  80946c:	d9c01d85 	stb	r7,118(sp)
  809470:	003cbc06 	br	808764 <__alt_data_end+0xff808764>

00809474 <__vfiprintf_internal>:
  809474:	00802074 	movhi	r2,129
  809478:	10858004 	addi	r2,r2,5632
  80947c:	300f883a 	mov	r7,r6
  809480:	280d883a 	mov	r6,r5
  809484:	200b883a 	mov	r5,r4
  809488:	11000017 	ldw	r4,0(r2)
  80948c:	08080181 	jmpi	808018 <___vfiprintf_internal_r>

00809490 <__sbprintf>:
  809490:	2880030b 	ldhu	r2,12(r5)
  809494:	2ac01917 	ldw	r11,100(r5)
  809498:	2a80038b 	ldhu	r10,14(r5)
  80949c:	2a400717 	ldw	r9,28(r5)
  8094a0:	2a000917 	ldw	r8,36(r5)
  8094a4:	defee204 	addi	sp,sp,-1144
  8094a8:	00c10004 	movi	r3,1024
  8094ac:	dc011a15 	stw	r16,1128(sp)
  8094b0:	10bfff4c 	andi	r2,r2,65533
  8094b4:	2821883a 	mov	r16,r5
  8094b8:	d8cb883a 	add	r5,sp,r3
  8094bc:	dc811c15 	stw	r18,1136(sp)
  8094c0:	dc411b15 	stw	r17,1132(sp)
  8094c4:	dfc11d15 	stw	ra,1140(sp)
  8094c8:	2025883a 	mov	r18,r4
  8094cc:	d881030d 	sth	r2,1036(sp)
  8094d0:	dac11915 	stw	r11,1124(sp)
  8094d4:	da81038d 	sth	r10,1038(sp)
  8094d8:	da410715 	stw	r9,1052(sp)
  8094dc:	da010915 	stw	r8,1060(sp)
  8094e0:	dec10015 	stw	sp,1024(sp)
  8094e4:	dec10415 	stw	sp,1040(sp)
  8094e8:	d8c10215 	stw	r3,1032(sp)
  8094ec:	d8c10515 	stw	r3,1044(sp)
  8094f0:	d8010615 	stw	zero,1048(sp)
  8094f4:	08080180 	call	808018 <___vfiprintf_internal_r>
  8094f8:	1023883a 	mov	r17,r2
  8094fc:	10000416 	blt	r2,zero,809510 <__sbprintf+0x80>
  809500:	d9410004 	addi	r5,sp,1024
  809504:	9009883a 	mov	r4,r18
  809508:	08048cc0 	call	8048cc <_fflush_r>
  80950c:	10000d1e 	bne	r2,zero,809544 <__sbprintf+0xb4>
  809510:	d881030b 	ldhu	r2,1036(sp)
  809514:	1080100c 	andi	r2,r2,64
  809518:	10000326 	beq	r2,zero,809528 <__sbprintf+0x98>
  80951c:	8080030b 	ldhu	r2,12(r16)
  809520:	10801014 	ori	r2,r2,64
  809524:	8080030d 	sth	r2,12(r16)
  809528:	8805883a 	mov	r2,r17
  80952c:	dfc11d17 	ldw	ra,1140(sp)
  809530:	dc811c17 	ldw	r18,1136(sp)
  809534:	dc411b17 	ldw	r17,1132(sp)
  809538:	dc011a17 	ldw	r16,1128(sp)
  80953c:	dec11e04 	addi	sp,sp,1144
  809540:	f800283a 	ret
  809544:	047fffc4 	movi	r17,-1
  809548:	003ff106 	br	809510 <__alt_data_end+0xff809510>

0080954c <_write_r>:
  80954c:	defffd04 	addi	sp,sp,-12
  809550:	2805883a 	mov	r2,r5
  809554:	dc000015 	stw	r16,0(sp)
  809558:	04002074 	movhi	r16,129
  80955c:	dc400115 	stw	r17,4(sp)
  809560:	300b883a 	mov	r5,r6
  809564:	840c5004 	addi	r16,r16,12608
  809568:	2023883a 	mov	r17,r4
  80956c:	380d883a 	mov	r6,r7
  809570:	1009883a 	mov	r4,r2
  809574:	dfc00215 	stw	ra,8(sp)
  809578:	80000015 	stw	zero,0(r16)
  80957c:	080d9340 	call	80d934 <write>
  809580:	00ffffc4 	movi	r3,-1
  809584:	10c00526 	beq	r2,r3,80959c <_write_r+0x50>
  809588:	dfc00217 	ldw	ra,8(sp)
  80958c:	dc400117 	ldw	r17,4(sp)
  809590:	dc000017 	ldw	r16,0(sp)
  809594:	dec00304 	addi	sp,sp,12
  809598:	f800283a 	ret
  80959c:	80c00017 	ldw	r3,0(r16)
  8095a0:	183ff926 	beq	r3,zero,809588 <__alt_data_end+0xff809588>
  8095a4:	88c00015 	stw	r3,0(r17)
  8095a8:	003ff706 	br	809588 <__alt_data_end+0xff809588>

008095ac <_close_r>:
  8095ac:	defffd04 	addi	sp,sp,-12
  8095b0:	dc000015 	stw	r16,0(sp)
  8095b4:	04002074 	movhi	r16,129
  8095b8:	dc400115 	stw	r17,4(sp)
  8095bc:	840c5004 	addi	r16,r16,12608
  8095c0:	2023883a 	mov	r17,r4
  8095c4:	2809883a 	mov	r4,r5
  8095c8:	dfc00215 	stw	ra,8(sp)
  8095cc:	80000015 	stw	zero,0(r16)
  8095d0:	080d1240 	call	80d124 <close>
  8095d4:	00ffffc4 	movi	r3,-1
  8095d8:	10c00526 	beq	r2,r3,8095f0 <_close_r+0x44>
  8095dc:	dfc00217 	ldw	ra,8(sp)
  8095e0:	dc400117 	ldw	r17,4(sp)
  8095e4:	dc000017 	ldw	r16,0(sp)
  8095e8:	dec00304 	addi	sp,sp,12
  8095ec:	f800283a 	ret
  8095f0:	80c00017 	ldw	r3,0(r16)
  8095f4:	183ff926 	beq	r3,zero,8095dc <__alt_data_end+0xff8095dc>
  8095f8:	88c00015 	stw	r3,0(r17)
  8095fc:	003ff706 	br	8095dc <__alt_data_end+0xff8095dc>

00809600 <_calloc_r>:
  809600:	298b383a 	mul	r5,r5,r6
  809604:	defffe04 	addi	sp,sp,-8
  809608:	dfc00115 	stw	ra,4(sp)
  80960c:	dc000015 	stw	r16,0(sp)
  809610:	0805a080 	call	805a08 <_malloc_r>
  809614:	10002926 	beq	r2,zero,8096bc <_calloc_r+0xbc>
  809618:	11bfff17 	ldw	r6,-4(r2)
  80961c:	1021883a 	mov	r16,r2
  809620:	00bfff04 	movi	r2,-4
  809624:	308c703a 	and	r6,r6,r2
  809628:	00c00904 	movi	r3,36
  80962c:	308d883a 	add	r6,r6,r2
  809630:	19801636 	bltu	r3,r6,80968c <_calloc_r+0x8c>
  809634:	008004c4 	movi	r2,19
  809638:	11800b2e 	bgeu	r2,r6,809668 <_calloc_r+0x68>
  80963c:	80000015 	stw	zero,0(r16)
  809640:	80000115 	stw	zero,4(r16)
  809644:	008006c4 	movi	r2,27
  809648:	11801a2e 	bgeu	r2,r6,8096b4 <_calloc_r+0xb4>
  80964c:	80000215 	stw	zero,8(r16)
  809650:	80000315 	stw	zero,12(r16)
  809654:	30c0151e 	bne	r6,r3,8096ac <_calloc_r+0xac>
  809658:	80000415 	stw	zero,16(r16)
  80965c:	80800604 	addi	r2,r16,24
  809660:	80000515 	stw	zero,20(r16)
  809664:	00000106 	br	80966c <_calloc_r+0x6c>
  809668:	8005883a 	mov	r2,r16
  80966c:	10000015 	stw	zero,0(r2)
  809670:	10000115 	stw	zero,4(r2)
  809674:	10000215 	stw	zero,8(r2)
  809678:	8005883a 	mov	r2,r16
  80967c:	dfc00117 	ldw	ra,4(sp)
  809680:	dc000017 	ldw	r16,0(sp)
  809684:	dec00204 	addi	sp,sp,8
  809688:	f800283a 	ret
  80968c:	000b883a 	mov	r5,zero
  809690:	8009883a 	mov	r4,r16
  809694:	080659c0 	call	80659c <memset>
  809698:	8005883a 	mov	r2,r16
  80969c:	dfc00117 	ldw	ra,4(sp)
  8096a0:	dc000017 	ldw	r16,0(sp)
  8096a4:	dec00204 	addi	sp,sp,8
  8096a8:	f800283a 	ret
  8096ac:	80800404 	addi	r2,r16,16
  8096b0:	003fee06 	br	80966c <__alt_data_end+0xff80966c>
  8096b4:	80800204 	addi	r2,r16,8
  8096b8:	003fec06 	br	80966c <__alt_data_end+0xff80966c>
  8096bc:	0005883a 	mov	r2,zero
  8096c0:	003fee06 	br	80967c <__alt_data_end+0xff80967c>

008096c4 <_fclose_r>:
  8096c4:	28003926 	beq	r5,zero,8097ac <_fclose_r+0xe8>
  8096c8:	defffc04 	addi	sp,sp,-16
  8096cc:	dc400115 	stw	r17,4(sp)
  8096d0:	dc000015 	stw	r16,0(sp)
  8096d4:	dfc00315 	stw	ra,12(sp)
  8096d8:	dc800215 	stw	r18,8(sp)
  8096dc:	2023883a 	mov	r17,r4
  8096e0:	2821883a 	mov	r16,r5
  8096e4:	20000226 	beq	r4,zero,8096f0 <_fclose_r+0x2c>
  8096e8:	20800e17 	ldw	r2,56(r4)
  8096ec:	10002726 	beq	r2,zero,80978c <_fclose_r+0xc8>
  8096f0:	8080030f 	ldh	r2,12(r16)
  8096f4:	1000071e 	bne	r2,zero,809714 <_fclose_r+0x50>
  8096f8:	0005883a 	mov	r2,zero
  8096fc:	dfc00317 	ldw	ra,12(sp)
  809700:	dc800217 	ldw	r18,8(sp)
  809704:	dc400117 	ldw	r17,4(sp)
  809708:	dc000017 	ldw	r16,0(sp)
  80970c:	dec00404 	addi	sp,sp,16
  809710:	f800283a 	ret
  809714:	800b883a 	mov	r5,r16
  809718:	8809883a 	mov	r4,r17
  80971c:	08046b00 	call	8046b0 <__sflush_r>
  809720:	1025883a 	mov	r18,r2
  809724:	80800b17 	ldw	r2,44(r16)
  809728:	10000426 	beq	r2,zero,80973c <_fclose_r+0x78>
  80972c:	81400717 	ldw	r5,28(r16)
  809730:	8809883a 	mov	r4,r17
  809734:	103ee83a 	callr	r2
  809738:	10001616 	blt	r2,zero,809794 <_fclose_r+0xd0>
  80973c:	8080030b 	ldhu	r2,12(r16)
  809740:	1080200c 	andi	r2,r2,128
  809744:	1000151e 	bne	r2,zero,80979c <_fclose_r+0xd8>
  809748:	81400c17 	ldw	r5,48(r16)
  80974c:	28000526 	beq	r5,zero,809764 <_fclose_r+0xa0>
  809750:	80801004 	addi	r2,r16,64
  809754:	28800226 	beq	r5,r2,809760 <_fclose_r+0x9c>
  809758:	8809883a 	mov	r4,r17
  80975c:	0804e1c0 	call	804e1c <_free_r>
  809760:	80000c15 	stw	zero,48(r16)
  809764:	81401117 	ldw	r5,68(r16)
  809768:	28000326 	beq	r5,zero,809778 <_fclose_r+0xb4>
  80976c:	8809883a 	mov	r4,r17
  809770:	0804e1c0 	call	804e1c <_free_r>
  809774:	80001115 	stw	zero,68(r16)
  809778:	0804cb80 	call	804cb8 <__sfp_lock_acquire>
  80977c:	8000030d 	sth	zero,12(r16)
  809780:	0804cbc0 	call	804cbc <__sfp_lock_release>
  809784:	9005883a 	mov	r2,r18
  809788:	003fdc06 	br	8096fc <__alt_data_end+0xff8096fc>
  80978c:	0804ca80 	call	804ca8 <__sinit>
  809790:	003fd706 	br	8096f0 <__alt_data_end+0xff8096f0>
  809794:	04bfffc4 	movi	r18,-1
  809798:	003fe806 	br	80973c <__alt_data_end+0xff80973c>
  80979c:	81400417 	ldw	r5,16(r16)
  8097a0:	8809883a 	mov	r4,r17
  8097a4:	0804e1c0 	call	804e1c <_free_r>
  8097a8:	003fe706 	br	809748 <__alt_data_end+0xff809748>
  8097ac:	0005883a 	mov	r2,zero
  8097b0:	f800283a 	ret

008097b4 <fclose>:
  8097b4:	00802074 	movhi	r2,129
  8097b8:	10858004 	addi	r2,r2,5632
  8097bc:	200b883a 	mov	r5,r4
  8097c0:	11000017 	ldw	r4,0(r2)
  8097c4:	08096c41 	jmpi	8096c4 <_fclose_r>

008097c8 <__fputwc>:
  8097c8:	defff804 	addi	sp,sp,-32
  8097cc:	dcc00415 	stw	r19,16(sp)
  8097d0:	dc800315 	stw	r18,12(sp)
  8097d4:	dc000115 	stw	r16,4(sp)
  8097d8:	dfc00715 	stw	ra,28(sp)
  8097dc:	dd400615 	stw	r21,24(sp)
  8097e0:	dd000515 	stw	r20,20(sp)
  8097e4:	dc400215 	stw	r17,8(sp)
  8097e8:	2027883a 	mov	r19,r4
  8097ec:	2825883a 	mov	r18,r5
  8097f0:	3021883a 	mov	r16,r6
  8097f4:	08057f80 	call	8057f8 <__locale_mb_cur_max>
  8097f8:	00c00044 	movi	r3,1
  8097fc:	10c03e26 	beq	r2,r3,8098f8 <__fputwc+0x130>
  809800:	81c01704 	addi	r7,r16,92
  809804:	900d883a 	mov	r6,r18
  809808:	d80b883a 	mov	r5,sp
  80980c:	9809883a 	mov	r4,r19
  809810:	0809c980 	call	809c98 <_wcrtomb_r>
  809814:	1029883a 	mov	r20,r2
  809818:	00bfffc4 	movi	r2,-1
  80981c:	a0802026 	beq	r20,r2,8098a0 <__fputwc+0xd8>
  809820:	d9400003 	ldbu	r5,0(sp)
  809824:	a0001c26 	beq	r20,zero,809898 <__fputwc+0xd0>
  809828:	0023883a 	mov	r17,zero
  80982c:	05400284 	movi	r21,10
  809830:	00000906 	br	809858 <__fputwc+0x90>
  809834:	80800017 	ldw	r2,0(r16)
  809838:	11400005 	stb	r5,0(r2)
  80983c:	80c00017 	ldw	r3,0(r16)
  809840:	18c00044 	addi	r3,r3,1
  809844:	80c00015 	stw	r3,0(r16)
  809848:	8c400044 	addi	r17,r17,1
  80984c:	dc45883a 	add	r2,sp,r17
  809850:	8d00112e 	bgeu	r17,r20,809898 <__fputwc+0xd0>
  809854:	11400003 	ldbu	r5,0(r2)
  809858:	80c00217 	ldw	r3,8(r16)
  80985c:	18ffffc4 	addi	r3,r3,-1
  809860:	80c00215 	stw	r3,8(r16)
  809864:	183ff30e 	bge	r3,zero,809834 <__alt_data_end+0xff809834>
  809868:	80800617 	ldw	r2,24(r16)
  80986c:	18801916 	blt	r3,r2,8098d4 <__fputwc+0x10c>
  809870:	80800017 	ldw	r2,0(r16)
  809874:	11400005 	stb	r5,0(r2)
  809878:	80800017 	ldw	r2,0(r16)
  80987c:	10c00003 	ldbu	r3,0(r2)
  809880:	10800044 	addi	r2,r2,1
  809884:	1d402326 	beq	r3,r21,809914 <__fputwc+0x14c>
  809888:	80800015 	stw	r2,0(r16)
  80988c:	8c400044 	addi	r17,r17,1
  809890:	dc45883a 	add	r2,sp,r17
  809894:	8d3fef36 	bltu	r17,r20,809854 <__alt_data_end+0xff809854>
  809898:	9005883a 	mov	r2,r18
  80989c:	00000406 	br	8098b0 <__fputwc+0xe8>
  8098a0:	80c0030b 	ldhu	r3,12(r16)
  8098a4:	a005883a 	mov	r2,r20
  8098a8:	18c01014 	ori	r3,r3,64
  8098ac:	80c0030d 	sth	r3,12(r16)
  8098b0:	dfc00717 	ldw	ra,28(sp)
  8098b4:	dd400617 	ldw	r21,24(sp)
  8098b8:	dd000517 	ldw	r20,20(sp)
  8098bc:	dcc00417 	ldw	r19,16(sp)
  8098c0:	dc800317 	ldw	r18,12(sp)
  8098c4:	dc400217 	ldw	r17,8(sp)
  8098c8:	dc000117 	ldw	r16,4(sp)
  8098cc:	dec00804 	addi	sp,sp,32
  8098d0:	f800283a 	ret
  8098d4:	800d883a 	mov	r6,r16
  8098d8:	29403fcc 	andi	r5,r5,255
  8098dc:	9809883a 	mov	r4,r19
  8098e0:	0809b400 	call	809b40 <__swbuf_r>
  8098e4:	10bfffe0 	cmpeqi	r2,r2,-1
  8098e8:	10803fcc 	andi	r2,r2,255
  8098ec:	103fd626 	beq	r2,zero,809848 <__alt_data_end+0xff809848>
  8098f0:	00bfffc4 	movi	r2,-1
  8098f4:	003fee06 	br	8098b0 <__alt_data_end+0xff8098b0>
  8098f8:	90ffffc4 	addi	r3,r18,-1
  8098fc:	01003f84 	movi	r4,254
  809900:	20ffbf36 	bltu	r4,r3,809800 <__alt_data_end+0xff809800>
  809904:	900b883a 	mov	r5,r18
  809908:	dc800005 	stb	r18,0(sp)
  80990c:	1029883a 	mov	r20,r2
  809910:	003fc506 	br	809828 <__alt_data_end+0xff809828>
  809914:	800d883a 	mov	r6,r16
  809918:	a80b883a 	mov	r5,r21
  80991c:	9809883a 	mov	r4,r19
  809920:	0809b400 	call	809b40 <__swbuf_r>
  809924:	10bfffe0 	cmpeqi	r2,r2,-1
  809928:	003fef06 	br	8098e8 <__alt_data_end+0xff8098e8>

0080992c <_fputwc_r>:
  80992c:	3080030b 	ldhu	r2,12(r6)
  809930:	10c8000c 	andi	r3,r2,8192
  809934:	1800051e 	bne	r3,zero,80994c <_fputwc_r+0x20>
  809938:	30c01917 	ldw	r3,100(r6)
  80993c:	10880014 	ori	r2,r2,8192
  809940:	3080030d 	sth	r2,12(r6)
  809944:	18880014 	ori	r2,r3,8192
  809948:	30801915 	stw	r2,100(r6)
  80994c:	08097c81 	jmpi	8097c8 <__fputwc>

00809950 <fputwc>:
  809950:	00802074 	movhi	r2,129
  809954:	defffc04 	addi	sp,sp,-16
  809958:	10858004 	addi	r2,r2,5632
  80995c:	dc000115 	stw	r16,4(sp)
  809960:	14000017 	ldw	r16,0(r2)
  809964:	dc400215 	stw	r17,8(sp)
  809968:	dfc00315 	stw	ra,12(sp)
  80996c:	2023883a 	mov	r17,r4
  809970:	80000226 	beq	r16,zero,80997c <fputwc+0x2c>
  809974:	80800e17 	ldw	r2,56(r16)
  809978:	10001026 	beq	r2,zero,8099bc <fputwc+0x6c>
  80997c:	2880030b 	ldhu	r2,12(r5)
  809980:	10c8000c 	andi	r3,r2,8192
  809984:	1800051e 	bne	r3,zero,80999c <fputwc+0x4c>
  809988:	28c01917 	ldw	r3,100(r5)
  80998c:	10880014 	ori	r2,r2,8192
  809990:	2880030d 	sth	r2,12(r5)
  809994:	18880014 	ori	r2,r3,8192
  809998:	28801915 	stw	r2,100(r5)
  80999c:	280d883a 	mov	r6,r5
  8099a0:	8009883a 	mov	r4,r16
  8099a4:	880b883a 	mov	r5,r17
  8099a8:	dfc00317 	ldw	ra,12(sp)
  8099ac:	dc400217 	ldw	r17,8(sp)
  8099b0:	dc000117 	ldw	r16,4(sp)
  8099b4:	dec00404 	addi	sp,sp,16
  8099b8:	08097c81 	jmpi	8097c8 <__fputwc>
  8099bc:	8009883a 	mov	r4,r16
  8099c0:	d9400015 	stw	r5,0(sp)
  8099c4:	0804ca80 	call	804ca8 <__sinit>
  8099c8:	d9400017 	ldw	r5,0(sp)
  8099cc:	003feb06 	br	80997c <__alt_data_end+0xff80997c>

008099d0 <_fstat_r>:
  8099d0:	defffd04 	addi	sp,sp,-12
  8099d4:	2805883a 	mov	r2,r5
  8099d8:	dc000015 	stw	r16,0(sp)
  8099dc:	04002074 	movhi	r16,129
  8099e0:	dc400115 	stw	r17,4(sp)
  8099e4:	840c5004 	addi	r16,r16,12608
  8099e8:	2023883a 	mov	r17,r4
  8099ec:	300b883a 	mov	r5,r6
  8099f0:	1009883a 	mov	r4,r2
  8099f4:	dfc00215 	stw	ra,8(sp)
  8099f8:	80000015 	stw	zero,0(r16)
  8099fc:	080d25c0 	call	80d25c <fstat>
  809a00:	00ffffc4 	movi	r3,-1
  809a04:	10c00526 	beq	r2,r3,809a1c <_fstat_r+0x4c>
  809a08:	dfc00217 	ldw	ra,8(sp)
  809a0c:	dc400117 	ldw	r17,4(sp)
  809a10:	dc000017 	ldw	r16,0(sp)
  809a14:	dec00304 	addi	sp,sp,12
  809a18:	f800283a 	ret
  809a1c:	80c00017 	ldw	r3,0(r16)
  809a20:	183ff926 	beq	r3,zero,809a08 <__alt_data_end+0xff809a08>
  809a24:	88c00015 	stw	r3,0(r17)
  809a28:	003ff706 	br	809a08 <__alt_data_end+0xff809a08>

00809a2c <_isatty_r>:
  809a2c:	defffd04 	addi	sp,sp,-12
  809a30:	dc000015 	stw	r16,0(sp)
  809a34:	04002074 	movhi	r16,129
  809a38:	dc400115 	stw	r17,4(sp)
  809a3c:	840c5004 	addi	r16,r16,12608
  809a40:	2023883a 	mov	r17,r4
  809a44:	2809883a 	mov	r4,r5
  809a48:	dfc00215 	stw	ra,8(sp)
  809a4c:	80000015 	stw	zero,0(r16)
  809a50:	080d3480 	call	80d348 <isatty>
  809a54:	00ffffc4 	movi	r3,-1
  809a58:	10c00526 	beq	r2,r3,809a70 <_isatty_r+0x44>
  809a5c:	dfc00217 	ldw	ra,8(sp)
  809a60:	dc400117 	ldw	r17,4(sp)
  809a64:	dc000017 	ldw	r16,0(sp)
  809a68:	dec00304 	addi	sp,sp,12
  809a6c:	f800283a 	ret
  809a70:	80c00017 	ldw	r3,0(r16)
  809a74:	183ff926 	beq	r3,zero,809a5c <__alt_data_end+0xff809a5c>
  809a78:	88c00015 	stw	r3,0(r17)
  809a7c:	003ff706 	br	809a5c <__alt_data_end+0xff809a5c>

00809a80 <_lseek_r>:
  809a80:	defffd04 	addi	sp,sp,-12
  809a84:	2805883a 	mov	r2,r5
  809a88:	dc000015 	stw	r16,0(sp)
  809a8c:	04002074 	movhi	r16,129
  809a90:	dc400115 	stw	r17,4(sp)
  809a94:	300b883a 	mov	r5,r6
  809a98:	840c5004 	addi	r16,r16,12608
  809a9c:	2023883a 	mov	r17,r4
  809aa0:	380d883a 	mov	r6,r7
  809aa4:	1009883a 	mov	r4,r2
  809aa8:	dfc00215 	stw	ra,8(sp)
  809aac:	80000015 	stw	zero,0(r16)
  809ab0:	080d5140 	call	80d514 <lseek>
  809ab4:	00ffffc4 	movi	r3,-1
  809ab8:	10c00526 	beq	r2,r3,809ad0 <_lseek_r+0x50>
  809abc:	dfc00217 	ldw	ra,8(sp)
  809ac0:	dc400117 	ldw	r17,4(sp)
  809ac4:	dc000017 	ldw	r16,0(sp)
  809ac8:	dec00304 	addi	sp,sp,12
  809acc:	f800283a 	ret
  809ad0:	80c00017 	ldw	r3,0(r16)
  809ad4:	183ff926 	beq	r3,zero,809abc <__alt_data_end+0xff809abc>
  809ad8:	88c00015 	stw	r3,0(r17)
  809adc:	003ff706 	br	809abc <__alt_data_end+0xff809abc>

00809ae0 <_read_r>:
  809ae0:	defffd04 	addi	sp,sp,-12
  809ae4:	2805883a 	mov	r2,r5
  809ae8:	dc000015 	stw	r16,0(sp)
  809aec:	04002074 	movhi	r16,129
  809af0:	dc400115 	stw	r17,4(sp)
  809af4:	300b883a 	mov	r5,r6
  809af8:	840c5004 	addi	r16,r16,12608
  809afc:	2023883a 	mov	r17,r4
  809b00:	380d883a 	mov	r6,r7
  809b04:	1009883a 	mov	r4,r2
  809b08:	dfc00215 	stw	ra,8(sp)
  809b0c:	80000015 	stw	zero,0(r16)
  809b10:	080d6e80 	call	80d6e8 <read>
  809b14:	00ffffc4 	movi	r3,-1
  809b18:	10c00526 	beq	r2,r3,809b30 <_read_r+0x50>
  809b1c:	dfc00217 	ldw	ra,8(sp)
  809b20:	dc400117 	ldw	r17,4(sp)
  809b24:	dc000017 	ldw	r16,0(sp)
  809b28:	dec00304 	addi	sp,sp,12
  809b2c:	f800283a 	ret
  809b30:	80c00017 	ldw	r3,0(r16)
  809b34:	183ff926 	beq	r3,zero,809b1c <__alt_data_end+0xff809b1c>
  809b38:	88c00015 	stw	r3,0(r17)
  809b3c:	003ff706 	br	809b1c <__alt_data_end+0xff809b1c>

00809b40 <__swbuf_r>:
  809b40:	defffb04 	addi	sp,sp,-20
  809b44:	dcc00315 	stw	r19,12(sp)
  809b48:	dc800215 	stw	r18,8(sp)
  809b4c:	dc000015 	stw	r16,0(sp)
  809b50:	dfc00415 	stw	ra,16(sp)
  809b54:	dc400115 	stw	r17,4(sp)
  809b58:	2025883a 	mov	r18,r4
  809b5c:	2827883a 	mov	r19,r5
  809b60:	3021883a 	mov	r16,r6
  809b64:	20000226 	beq	r4,zero,809b70 <__swbuf_r+0x30>
  809b68:	20800e17 	ldw	r2,56(r4)
  809b6c:	10004226 	beq	r2,zero,809c78 <__swbuf_r+0x138>
  809b70:	80800617 	ldw	r2,24(r16)
  809b74:	8100030b 	ldhu	r4,12(r16)
  809b78:	80800215 	stw	r2,8(r16)
  809b7c:	2080020c 	andi	r2,r4,8
  809b80:	10003626 	beq	r2,zero,809c5c <__swbuf_r+0x11c>
  809b84:	80c00417 	ldw	r3,16(r16)
  809b88:	18003426 	beq	r3,zero,809c5c <__swbuf_r+0x11c>
  809b8c:	2088000c 	andi	r2,r4,8192
  809b90:	9c403fcc 	andi	r17,r19,255
  809b94:	10001a26 	beq	r2,zero,809c00 <__swbuf_r+0xc0>
  809b98:	80800017 	ldw	r2,0(r16)
  809b9c:	81000517 	ldw	r4,20(r16)
  809ba0:	10c7c83a 	sub	r3,r2,r3
  809ba4:	1900200e 	bge	r3,r4,809c28 <__swbuf_r+0xe8>
  809ba8:	18c00044 	addi	r3,r3,1
  809bac:	81000217 	ldw	r4,8(r16)
  809bb0:	11400044 	addi	r5,r2,1
  809bb4:	81400015 	stw	r5,0(r16)
  809bb8:	213fffc4 	addi	r4,r4,-1
  809bbc:	81000215 	stw	r4,8(r16)
  809bc0:	14c00005 	stb	r19,0(r2)
  809bc4:	80800517 	ldw	r2,20(r16)
  809bc8:	10c01e26 	beq	r2,r3,809c44 <__swbuf_r+0x104>
  809bcc:	8080030b 	ldhu	r2,12(r16)
  809bd0:	1080004c 	andi	r2,r2,1
  809bd4:	10000226 	beq	r2,zero,809be0 <__swbuf_r+0xa0>
  809bd8:	00800284 	movi	r2,10
  809bdc:	88801926 	beq	r17,r2,809c44 <__swbuf_r+0x104>
  809be0:	8805883a 	mov	r2,r17
  809be4:	dfc00417 	ldw	ra,16(sp)
  809be8:	dcc00317 	ldw	r19,12(sp)
  809bec:	dc800217 	ldw	r18,8(sp)
  809bf0:	dc400117 	ldw	r17,4(sp)
  809bf4:	dc000017 	ldw	r16,0(sp)
  809bf8:	dec00504 	addi	sp,sp,20
  809bfc:	f800283a 	ret
  809c00:	81401917 	ldw	r5,100(r16)
  809c04:	00b7ffc4 	movi	r2,-8193
  809c08:	21080014 	ori	r4,r4,8192
  809c0c:	2884703a 	and	r2,r5,r2
  809c10:	80801915 	stw	r2,100(r16)
  809c14:	80800017 	ldw	r2,0(r16)
  809c18:	8100030d 	sth	r4,12(r16)
  809c1c:	81000517 	ldw	r4,20(r16)
  809c20:	10c7c83a 	sub	r3,r2,r3
  809c24:	193fe016 	blt	r3,r4,809ba8 <__alt_data_end+0xff809ba8>
  809c28:	800b883a 	mov	r5,r16
  809c2c:	9009883a 	mov	r4,r18
  809c30:	08048cc0 	call	8048cc <_fflush_r>
  809c34:	1000071e 	bne	r2,zero,809c54 <__swbuf_r+0x114>
  809c38:	80800017 	ldw	r2,0(r16)
  809c3c:	00c00044 	movi	r3,1
  809c40:	003fda06 	br	809bac <__alt_data_end+0xff809bac>
  809c44:	800b883a 	mov	r5,r16
  809c48:	9009883a 	mov	r4,r18
  809c4c:	08048cc0 	call	8048cc <_fflush_r>
  809c50:	103fe326 	beq	r2,zero,809be0 <__alt_data_end+0xff809be0>
  809c54:	00bfffc4 	movi	r2,-1
  809c58:	003fe206 	br	809be4 <__alt_data_end+0xff809be4>
  809c5c:	800b883a 	mov	r5,r16
  809c60:	9009883a 	mov	r4,r18
  809c64:	0802cd40 	call	802cd4 <__swsetup_r>
  809c68:	103ffa1e 	bne	r2,zero,809c54 <__alt_data_end+0xff809c54>
  809c6c:	8100030b 	ldhu	r4,12(r16)
  809c70:	80c00417 	ldw	r3,16(r16)
  809c74:	003fc506 	br	809b8c <__alt_data_end+0xff809b8c>
  809c78:	0804ca80 	call	804ca8 <__sinit>
  809c7c:	003fbc06 	br	809b70 <__alt_data_end+0xff809b70>

00809c80 <__swbuf>:
  809c80:	00802074 	movhi	r2,129
  809c84:	10858004 	addi	r2,r2,5632
  809c88:	280d883a 	mov	r6,r5
  809c8c:	200b883a 	mov	r5,r4
  809c90:	11000017 	ldw	r4,0(r2)
  809c94:	0809b401 	jmpi	809b40 <__swbuf_r>

00809c98 <_wcrtomb_r>:
  809c98:	defff604 	addi	sp,sp,-40
  809c9c:	00802074 	movhi	r2,129
  809ca0:	dc800815 	stw	r18,32(sp)
  809ca4:	dc400715 	stw	r17,28(sp)
  809ca8:	dc000615 	stw	r16,24(sp)
  809cac:	10858404 	addi	r2,r2,5648
  809cb0:	dfc00915 	stw	ra,36(sp)
  809cb4:	2021883a 	mov	r16,r4
  809cb8:	3823883a 	mov	r17,r7
  809cbc:	14800017 	ldw	r18,0(r2)
  809cc0:	28001426 	beq	r5,zero,809d14 <_wcrtomb_r+0x7c>
  809cc4:	d9400415 	stw	r5,16(sp)
  809cc8:	d9800515 	stw	r6,20(sp)
  809ccc:	08057ec0 	call	8057ec <__locale_charset>
  809cd0:	d9800517 	ldw	r6,20(sp)
  809cd4:	d9400417 	ldw	r5,16(sp)
  809cd8:	100f883a 	mov	r7,r2
  809cdc:	dc400015 	stw	r17,0(sp)
  809ce0:	8009883a 	mov	r4,r16
  809ce4:	903ee83a 	callr	r18
  809ce8:	00ffffc4 	movi	r3,-1
  809cec:	10c0031e 	bne	r2,r3,809cfc <_wcrtomb_r+0x64>
  809cf0:	88000015 	stw	zero,0(r17)
  809cf4:	00c02284 	movi	r3,138
  809cf8:	80c00015 	stw	r3,0(r16)
  809cfc:	dfc00917 	ldw	ra,36(sp)
  809d00:	dc800817 	ldw	r18,32(sp)
  809d04:	dc400717 	ldw	r17,28(sp)
  809d08:	dc000617 	ldw	r16,24(sp)
  809d0c:	dec00a04 	addi	sp,sp,40
  809d10:	f800283a 	ret
  809d14:	08057ec0 	call	8057ec <__locale_charset>
  809d18:	100f883a 	mov	r7,r2
  809d1c:	dc400015 	stw	r17,0(sp)
  809d20:	000d883a 	mov	r6,zero
  809d24:	d9400104 	addi	r5,sp,4
  809d28:	8009883a 	mov	r4,r16
  809d2c:	903ee83a 	callr	r18
  809d30:	003fed06 	br	809ce8 <__alt_data_end+0xff809ce8>

00809d34 <wcrtomb>:
  809d34:	defff604 	addi	sp,sp,-40
  809d38:	00802074 	movhi	r2,129
  809d3c:	dc800615 	stw	r18,24(sp)
  809d40:	dc400515 	stw	r17,20(sp)
  809d44:	10858004 	addi	r2,r2,5632
  809d48:	dfc00915 	stw	ra,36(sp)
  809d4c:	dd000815 	stw	r20,32(sp)
  809d50:	dcc00715 	stw	r19,28(sp)
  809d54:	dc000415 	stw	r16,16(sp)
  809d58:	3025883a 	mov	r18,r6
  809d5c:	14400017 	ldw	r17,0(r2)
  809d60:	20001926 	beq	r4,zero,809dc8 <wcrtomb+0x94>
  809d64:	00802074 	movhi	r2,129
  809d68:	10858404 	addi	r2,r2,5648
  809d6c:	15000017 	ldw	r20,0(r2)
  809d70:	2021883a 	mov	r16,r4
  809d74:	2827883a 	mov	r19,r5
  809d78:	08057ec0 	call	8057ec <__locale_charset>
  809d7c:	100f883a 	mov	r7,r2
  809d80:	dc800015 	stw	r18,0(sp)
  809d84:	980d883a 	mov	r6,r19
  809d88:	800b883a 	mov	r5,r16
  809d8c:	8809883a 	mov	r4,r17
  809d90:	a03ee83a 	callr	r20
  809d94:	00ffffc4 	movi	r3,-1
  809d98:	10c0031e 	bne	r2,r3,809da8 <wcrtomb+0x74>
  809d9c:	90000015 	stw	zero,0(r18)
  809da0:	00c02284 	movi	r3,138
  809da4:	88c00015 	stw	r3,0(r17)
  809da8:	dfc00917 	ldw	ra,36(sp)
  809dac:	dd000817 	ldw	r20,32(sp)
  809db0:	dcc00717 	ldw	r19,28(sp)
  809db4:	dc800617 	ldw	r18,24(sp)
  809db8:	dc400517 	ldw	r17,20(sp)
  809dbc:	dc000417 	ldw	r16,16(sp)
  809dc0:	dec00a04 	addi	sp,sp,40
  809dc4:	f800283a 	ret
  809dc8:	00802074 	movhi	r2,129
  809dcc:	10858404 	addi	r2,r2,5648
  809dd0:	14000017 	ldw	r16,0(r2)
  809dd4:	08057ec0 	call	8057ec <__locale_charset>
  809dd8:	100f883a 	mov	r7,r2
  809ddc:	dc800015 	stw	r18,0(sp)
  809de0:	000d883a 	mov	r6,zero
  809de4:	d9400104 	addi	r5,sp,4
  809de8:	8809883a 	mov	r4,r17
  809dec:	803ee83a 	callr	r16
  809df0:	003fe806 	br	809d94 <__alt_data_end+0xff809d94>

00809df4 <__ascii_wctomb>:
  809df4:	28000526 	beq	r5,zero,809e0c <__ascii_wctomb+0x18>
  809df8:	00803fc4 	movi	r2,255
  809dfc:	11800536 	bltu	r2,r6,809e14 <__ascii_wctomb+0x20>
  809e00:	29800005 	stb	r6,0(r5)
  809e04:	00800044 	movi	r2,1
  809e08:	f800283a 	ret
  809e0c:	0005883a 	mov	r2,zero
  809e10:	f800283a 	ret
  809e14:	00802284 	movi	r2,138
  809e18:	20800015 	stw	r2,0(r4)
  809e1c:	00bfffc4 	movi	r2,-1
  809e20:	f800283a 	ret

00809e24 <_wctomb_r>:
  809e24:	00802074 	movhi	r2,129
  809e28:	defff904 	addi	sp,sp,-28
  809e2c:	10858404 	addi	r2,r2,5648
  809e30:	dfc00615 	stw	ra,24(sp)
  809e34:	dc400515 	stw	r17,20(sp)
  809e38:	dc000415 	stw	r16,16(sp)
  809e3c:	3823883a 	mov	r17,r7
  809e40:	14000017 	ldw	r16,0(r2)
  809e44:	d9000115 	stw	r4,4(sp)
  809e48:	d9400215 	stw	r5,8(sp)
  809e4c:	d9800315 	stw	r6,12(sp)
  809e50:	08057ec0 	call	8057ec <__locale_charset>
  809e54:	d9800317 	ldw	r6,12(sp)
  809e58:	d9400217 	ldw	r5,8(sp)
  809e5c:	d9000117 	ldw	r4,4(sp)
  809e60:	100f883a 	mov	r7,r2
  809e64:	dc400015 	stw	r17,0(sp)
  809e68:	803ee83a 	callr	r16
  809e6c:	dfc00617 	ldw	ra,24(sp)
  809e70:	dc400517 	ldw	r17,20(sp)
  809e74:	dc000417 	ldw	r16,16(sp)
  809e78:	dec00704 	addi	sp,sp,28
  809e7c:	f800283a 	ret

00809e80 <__udivdi3>:
  809e80:	defff504 	addi	sp,sp,-44
  809e84:	dcc00415 	stw	r19,16(sp)
  809e88:	dc000115 	stw	r16,4(sp)
  809e8c:	dfc00a15 	stw	ra,40(sp)
  809e90:	df000915 	stw	fp,36(sp)
  809e94:	ddc00815 	stw	r23,32(sp)
  809e98:	dd800715 	stw	r22,28(sp)
  809e9c:	dd400615 	stw	r21,24(sp)
  809ea0:	dd000515 	stw	r20,20(sp)
  809ea4:	dc800315 	stw	r18,12(sp)
  809ea8:	dc400215 	stw	r17,8(sp)
  809eac:	2027883a 	mov	r19,r4
  809eb0:	2821883a 	mov	r16,r5
  809eb4:	3800411e 	bne	r7,zero,809fbc <__udivdi3+0x13c>
  809eb8:	3023883a 	mov	r17,r6
  809ebc:	2025883a 	mov	r18,r4
  809ec0:	2980522e 	bgeu	r5,r6,80a00c <__udivdi3+0x18c>
  809ec4:	00bfffd4 	movui	r2,65535
  809ec8:	282d883a 	mov	r22,r5
  809ecc:	1180a836 	bltu	r2,r6,80a170 <__udivdi3+0x2f0>
  809ed0:	00803fc4 	movi	r2,255
  809ed4:	1185803a 	cmpltu	r2,r2,r6
  809ed8:	100490fa 	slli	r2,r2,3
  809edc:	3086d83a 	srl	r3,r6,r2
  809ee0:	01002074 	movhi	r4,129
  809ee4:	213e1604 	addi	r4,r4,-1960
  809ee8:	20c7883a 	add	r3,r4,r3
  809eec:	18c00003 	ldbu	r3,0(r3)
  809ef0:	1885883a 	add	r2,r3,r2
  809ef4:	00c00804 	movi	r3,32
  809ef8:	1887c83a 	sub	r3,r3,r2
  809efc:	18000526 	beq	r3,zero,809f14 <__udivdi3+0x94>
  809f00:	80e0983a 	sll	r16,r16,r3
  809f04:	9884d83a 	srl	r2,r19,r2
  809f08:	30e2983a 	sll	r17,r6,r3
  809f0c:	98e4983a 	sll	r18,r19,r3
  809f10:	142cb03a 	or	r22,r2,r16
  809f14:	882ad43a 	srli	r21,r17,16
  809f18:	b009883a 	mov	r4,r22
  809f1c:	8d3fffcc 	andi	r20,r17,65535
  809f20:	a80b883a 	mov	r5,r21
  809f24:	080aa8c0 	call	80aa8c <__umodsi3>
  809f28:	b009883a 	mov	r4,r22
  809f2c:	a80b883a 	mov	r5,r21
  809f30:	1027883a 	mov	r19,r2
  809f34:	080aa280 	call	80aa28 <__udivsi3>
  809f38:	102d883a 	mov	r22,r2
  809f3c:	9826943a 	slli	r19,r19,16
  809f40:	9004d43a 	srli	r2,r18,16
  809f44:	a5a1383a 	mul	r16,r20,r22
  809f48:	14c4b03a 	or	r2,r2,r19
  809f4c:	1400052e 	bgeu	r2,r16,809f64 <__udivdi3+0xe4>
  809f50:	1445883a 	add	r2,r2,r17
  809f54:	b0ffffc4 	addi	r3,r22,-1
  809f58:	14400136 	bltu	r2,r17,809f60 <__udivdi3+0xe0>
  809f5c:	14012336 	bltu	r2,r16,80a3ec <__udivdi3+0x56c>
  809f60:	182d883a 	mov	r22,r3
  809f64:	1421c83a 	sub	r16,r2,r16
  809f68:	a80b883a 	mov	r5,r21
  809f6c:	8009883a 	mov	r4,r16
  809f70:	080aa8c0 	call	80aa8c <__umodsi3>
  809f74:	1027883a 	mov	r19,r2
  809f78:	a80b883a 	mov	r5,r21
  809f7c:	8009883a 	mov	r4,r16
  809f80:	080aa280 	call	80aa28 <__udivsi3>
  809f84:	9826943a 	slli	r19,r19,16
  809f88:	a0a9383a 	mul	r20,r20,r2
  809f8c:	94bfffcc 	andi	r18,r18,65535
  809f90:	94e4b03a 	or	r18,r18,r19
  809f94:	9500052e 	bgeu	r18,r20,809fac <__udivdi3+0x12c>
  809f98:	8ca5883a 	add	r18,r17,r18
  809f9c:	10ffffc4 	addi	r3,r2,-1
  809fa0:	9440f136 	bltu	r18,r17,80a368 <__udivdi3+0x4e8>
  809fa4:	9500f02e 	bgeu	r18,r20,80a368 <__udivdi3+0x4e8>
  809fa8:	10bfff84 	addi	r2,r2,-2
  809fac:	b00c943a 	slli	r6,r22,16
  809fb0:	0007883a 	mov	r3,zero
  809fb4:	3084b03a 	or	r2,r6,r2
  809fb8:	00005906 	br	80a120 <__udivdi3+0x2a0>
  809fbc:	29c05636 	bltu	r5,r7,80a118 <__udivdi3+0x298>
  809fc0:	00bfffd4 	movui	r2,65535
  809fc4:	11c0622e 	bgeu	r2,r7,80a150 <__udivdi3+0x2d0>
  809fc8:	00804034 	movhi	r2,256
  809fcc:	10bfffc4 	addi	r2,r2,-1
  809fd0:	11c0ee36 	bltu	r2,r7,80a38c <__udivdi3+0x50c>
  809fd4:	00800404 	movi	r2,16
  809fd8:	3886d83a 	srl	r3,r7,r2
  809fdc:	01002074 	movhi	r4,129
  809fe0:	213e1604 	addi	r4,r4,-1960
  809fe4:	20c7883a 	add	r3,r4,r3
  809fe8:	18c00003 	ldbu	r3,0(r3)
  809fec:	05400804 	movi	r21,32
  809ff0:	1885883a 	add	r2,r3,r2
  809ff4:	a8abc83a 	sub	r21,r21,r2
  809ff8:	a800621e 	bne	r21,zero,80a184 <__udivdi3+0x304>
  809ffc:	3c00e936 	bltu	r7,r16,80a3a4 <__udivdi3+0x524>
  80a000:	9985403a 	cmpgeu	r2,r19,r6
  80a004:	0007883a 	mov	r3,zero
  80a008:	00004506 	br	80a120 <__udivdi3+0x2a0>
  80a00c:	3000041e 	bne	r6,zero,80a020 <__udivdi3+0x1a0>
  80a010:	000b883a 	mov	r5,zero
  80a014:	01000044 	movi	r4,1
  80a018:	080aa280 	call	80aa28 <__udivsi3>
  80a01c:	1023883a 	mov	r17,r2
  80a020:	00bfffd4 	movui	r2,65535
  80a024:	14404e2e 	bgeu	r2,r17,80a160 <__udivdi3+0x2e0>
  80a028:	00804034 	movhi	r2,256
  80a02c:	10bfffc4 	addi	r2,r2,-1
  80a030:	1440d836 	bltu	r2,r17,80a394 <__udivdi3+0x514>
  80a034:	00800404 	movi	r2,16
  80a038:	8886d83a 	srl	r3,r17,r2
  80a03c:	01002074 	movhi	r4,129
  80a040:	213e1604 	addi	r4,r4,-1960
  80a044:	20c7883a 	add	r3,r4,r3
  80a048:	18c00003 	ldbu	r3,0(r3)
  80a04c:	1885883a 	add	r2,r3,r2
  80a050:	00c00804 	movi	r3,32
  80a054:	1887c83a 	sub	r3,r3,r2
  80a058:	18008f1e 	bne	r3,zero,80a298 <__udivdi3+0x418>
  80a05c:	882ad43a 	srli	r21,r17,16
  80a060:	8461c83a 	sub	r16,r16,r17
  80a064:	8d3fffcc 	andi	r20,r17,65535
  80a068:	00c00044 	movi	r3,1
  80a06c:	8009883a 	mov	r4,r16
  80a070:	a80b883a 	mov	r5,r21
  80a074:	d8c00015 	stw	r3,0(sp)
  80a078:	080aa8c0 	call	80aa8c <__umodsi3>
  80a07c:	8009883a 	mov	r4,r16
  80a080:	a80b883a 	mov	r5,r21
  80a084:	1027883a 	mov	r19,r2
  80a088:	080aa280 	call	80aa28 <__udivsi3>
  80a08c:	9826943a 	slli	r19,r19,16
  80a090:	9008d43a 	srli	r4,r18,16
  80a094:	1521383a 	mul	r16,r2,r20
  80a098:	102d883a 	mov	r22,r2
  80a09c:	24c8b03a 	or	r4,r4,r19
  80a0a0:	d8c00017 	ldw	r3,0(sp)
  80a0a4:	2400052e 	bgeu	r4,r16,80a0bc <__udivdi3+0x23c>
  80a0a8:	2449883a 	add	r4,r4,r17
  80a0ac:	b0bfffc4 	addi	r2,r22,-1
  80a0b0:	24400136 	bltu	r4,r17,80a0b8 <__udivdi3+0x238>
  80a0b4:	2400ca36 	bltu	r4,r16,80a3e0 <__udivdi3+0x560>
  80a0b8:	102d883a 	mov	r22,r2
  80a0bc:	2421c83a 	sub	r16,r4,r16
  80a0c0:	a80b883a 	mov	r5,r21
  80a0c4:	8009883a 	mov	r4,r16
  80a0c8:	d8c00015 	stw	r3,0(sp)
  80a0cc:	080aa8c0 	call	80aa8c <__umodsi3>
  80a0d0:	1027883a 	mov	r19,r2
  80a0d4:	a80b883a 	mov	r5,r21
  80a0d8:	8009883a 	mov	r4,r16
  80a0dc:	080aa280 	call	80aa28 <__udivsi3>
  80a0e0:	9826943a 	slli	r19,r19,16
  80a0e4:	1529383a 	mul	r20,r2,r20
  80a0e8:	94bfffcc 	andi	r18,r18,65535
  80a0ec:	94e4b03a 	or	r18,r18,r19
  80a0f0:	d8c00017 	ldw	r3,0(sp)
  80a0f4:	9500052e 	bgeu	r18,r20,80a10c <__udivdi3+0x28c>
  80a0f8:	8ca5883a 	add	r18,r17,r18
  80a0fc:	113fffc4 	addi	r4,r2,-1
  80a100:	94409736 	bltu	r18,r17,80a360 <__udivdi3+0x4e0>
  80a104:	9500962e 	bgeu	r18,r20,80a360 <__udivdi3+0x4e0>
  80a108:	10bfff84 	addi	r2,r2,-2
  80a10c:	b00c943a 	slli	r6,r22,16
  80a110:	3084b03a 	or	r2,r6,r2
  80a114:	00000206 	br	80a120 <__udivdi3+0x2a0>
  80a118:	0007883a 	mov	r3,zero
  80a11c:	0005883a 	mov	r2,zero
  80a120:	dfc00a17 	ldw	ra,40(sp)
  80a124:	df000917 	ldw	fp,36(sp)
  80a128:	ddc00817 	ldw	r23,32(sp)
  80a12c:	dd800717 	ldw	r22,28(sp)
  80a130:	dd400617 	ldw	r21,24(sp)
  80a134:	dd000517 	ldw	r20,20(sp)
  80a138:	dcc00417 	ldw	r19,16(sp)
  80a13c:	dc800317 	ldw	r18,12(sp)
  80a140:	dc400217 	ldw	r17,8(sp)
  80a144:	dc000117 	ldw	r16,4(sp)
  80a148:	dec00b04 	addi	sp,sp,44
  80a14c:	f800283a 	ret
  80a150:	00803fc4 	movi	r2,255
  80a154:	11c5803a 	cmpltu	r2,r2,r7
  80a158:	100490fa 	slli	r2,r2,3
  80a15c:	003f9e06 	br	809fd8 <__alt_data_end+0xff809fd8>
  80a160:	00803fc4 	movi	r2,255
  80a164:	1445803a 	cmpltu	r2,r2,r17
  80a168:	100490fa 	slli	r2,r2,3
  80a16c:	003fb206 	br	80a038 <__alt_data_end+0xff80a038>
  80a170:	00804034 	movhi	r2,256
  80a174:	10bfffc4 	addi	r2,r2,-1
  80a178:	11808836 	bltu	r2,r6,80a39c <__udivdi3+0x51c>
  80a17c:	00800404 	movi	r2,16
  80a180:	003f5606 	br	809edc <__alt_data_end+0xff809edc>
  80a184:	30aed83a 	srl	r23,r6,r2
  80a188:	3d4e983a 	sll	r7,r7,r21
  80a18c:	80acd83a 	srl	r22,r16,r2
  80a190:	9884d83a 	srl	r2,r19,r2
  80a194:	3deeb03a 	or	r23,r7,r23
  80a198:	b824d43a 	srli	r18,r23,16
  80a19c:	8560983a 	sll	r16,r16,r21
  80a1a0:	b009883a 	mov	r4,r22
  80a1a4:	900b883a 	mov	r5,r18
  80a1a8:	3568983a 	sll	r20,r6,r21
  80a1ac:	1420b03a 	or	r16,r2,r16
  80a1b0:	080aa8c0 	call	80aa8c <__umodsi3>
  80a1b4:	b009883a 	mov	r4,r22
  80a1b8:	900b883a 	mov	r5,r18
  80a1bc:	1023883a 	mov	r17,r2
  80a1c0:	080aa280 	call	80aa28 <__udivsi3>
  80a1c4:	8808943a 	slli	r4,r17,16
  80a1c8:	bf3fffcc 	andi	fp,r23,65535
  80a1cc:	8006d43a 	srli	r3,r16,16
  80a1d0:	e0a3383a 	mul	r17,fp,r2
  80a1d4:	100d883a 	mov	r6,r2
  80a1d8:	1906b03a 	or	r3,r3,r4
  80a1dc:	1c40042e 	bgeu	r3,r17,80a1f0 <__udivdi3+0x370>
  80a1e0:	1dc7883a 	add	r3,r3,r23
  80a1e4:	10bfffc4 	addi	r2,r2,-1
  80a1e8:	1dc0752e 	bgeu	r3,r23,80a3c0 <__udivdi3+0x540>
  80a1ec:	100d883a 	mov	r6,r2
  80a1f0:	1c63c83a 	sub	r17,r3,r17
  80a1f4:	900b883a 	mov	r5,r18
  80a1f8:	8809883a 	mov	r4,r17
  80a1fc:	d9800015 	stw	r6,0(sp)
  80a200:	080aa8c0 	call	80aa8c <__umodsi3>
  80a204:	102d883a 	mov	r22,r2
  80a208:	8809883a 	mov	r4,r17
  80a20c:	900b883a 	mov	r5,r18
  80a210:	080aa280 	call	80aa28 <__udivsi3>
  80a214:	b02c943a 	slli	r22,r22,16
  80a218:	e089383a 	mul	r4,fp,r2
  80a21c:	843fffcc 	andi	r16,r16,65535
  80a220:	85a0b03a 	or	r16,r16,r22
  80a224:	d9800017 	ldw	r6,0(sp)
  80a228:	8100042e 	bgeu	r16,r4,80a23c <__udivdi3+0x3bc>
  80a22c:	85e1883a 	add	r16,r16,r23
  80a230:	10ffffc4 	addi	r3,r2,-1
  80a234:	85c05e2e 	bgeu	r16,r23,80a3b0 <__udivdi3+0x530>
  80a238:	1805883a 	mov	r2,r3
  80a23c:	300c943a 	slli	r6,r6,16
  80a240:	a17fffcc 	andi	r5,r20,65535
  80a244:	a028d43a 	srli	r20,r20,16
  80a248:	3084b03a 	or	r2,r6,r2
  80a24c:	10ffffcc 	andi	r3,r2,65535
  80a250:	100cd43a 	srli	r6,r2,16
  80a254:	194f383a 	mul	r7,r3,r5
  80a258:	1d07383a 	mul	r3,r3,r20
  80a25c:	314b383a 	mul	r5,r6,r5
  80a260:	3810d43a 	srli	r8,r7,16
  80a264:	8121c83a 	sub	r16,r16,r4
  80a268:	1947883a 	add	r3,r3,r5
  80a26c:	40c7883a 	add	r3,r8,r3
  80a270:	350d383a 	mul	r6,r6,r20
  80a274:	1940022e 	bgeu	r3,r5,80a280 <__udivdi3+0x400>
  80a278:	01000074 	movhi	r4,1
  80a27c:	310d883a 	add	r6,r6,r4
  80a280:	1828d43a 	srli	r20,r3,16
  80a284:	a18d883a 	add	r6,r20,r6
  80a288:	81803e36 	bltu	r16,r6,80a384 <__udivdi3+0x504>
  80a28c:	81803826 	beq	r16,r6,80a370 <__udivdi3+0x4f0>
  80a290:	0007883a 	mov	r3,zero
  80a294:	003fa206 	br	80a120 <__alt_data_end+0xff80a120>
  80a298:	88e2983a 	sll	r17,r17,r3
  80a29c:	80a8d83a 	srl	r20,r16,r2
  80a2a0:	80e0983a 	sll	r16,r16,r3
  80a2a4:	882ad43a 	srli	r21,r17,16
  80a2a8:	9884d83a 	srl	r2,r19,r2
  80a2ac:	a009883a 	mov	r4,r20
  80a2b0:	a80b883a 	mov	r5,r21
  80a2b4:	142eb03a 	or	r23,r2,r16
  80a2b8:	98e4983a 	sll	r18,r19,r3
  80a2bc:	080aa8c0 	call	80aa8c <__umodsi3>
  80a2c0:	a009883a 	mov	r4,r20
  80a2c4:	a80b883a 	mov	r5,r21
  80a2c8:	1021883a 	mov	r16,r2
  80a2cc:	080aa280 	call	80aa28 <__udivsi3>
  80a2d0:	1039883a 	mov	fp,r2
  80a2d4:	8d3fffcc 	andi	r20,r17,65535
  80a2d8:	8020943a 	slli	r16,r16,16
  80a2dc:	b804d43a 	srli	r2,r23,16
  80a2e0:	a72d383a 	mul	r22,r20,fp
  80a2e4:	1404b03a 	or	r2,r2,r16
  80a2e8:	1580062e 	bgeu	r2,r22,80a304 <__udivdi3+0x484>
  80a2ec:	1445883a 	add	r2,r2,r17
  80a2f0:	e0ffffc4 	addi	r3,fp,-1
  80a2f4:	14403836 	bltu	r2,r17,80a3d8 <__udivdi3+0x558>
  80a2f8:	1580372e 	bgeu	r2,r22,80a3d8 <__udivdi3+0x558>
  80a2fc:	e73fff84 	addi	fp,fp,-2
  80a300:	1445883a 	add	r2,r2,r17
  80a304:	15adc83a 	sub	r22,r2,r22
  80a308:	a80b883a 	mov	r5,r21
  80a30c:	b009883a 	mov	r4,r22
  80a310:	080aa8c0 	call	80aa8c <__umodsi3>
  80a314:	1027883a 	mov	r19,r2
  80a318:	b009883a 	mov	r4,r22
  80a31c:	a80b883a 	mov	r5,r21
  80a320:	080aa280 	call	80aa28 <__udivsi3>
  80a324:	9826943a 	slli	r19,r19,16
  80a328:	a0a1383a 	mul	r16,r20,r2
  80a32c:	b93fffcc 	andi	r4,r23,65535
  80a330:	24c8b03a 	or	r4,r4,r19
  80a334:	2400062e 	bgeu	r4,r16,80a350 <__udivdi3+0x4d0>
  80a338:	2449883a 	add	r4,r4,r17
  80a33c:	10ffffc4 	addi	r3,r2,-1
  80a340:	24402336 	bltu	r4,r17,80a3d0 <__udivdi3+0x550>
  80a344:	2400222e 	bgeu	r4,r16,80a3d0 <__udivdi3+0x550>
  80a348:	10bfff84 	addi	r2,r2,-2
  80a34c:	2449883a 	add	r4,r4,r17
  80a350:	e038943a 	slli	fp,fp,16
  80a354:	2421c83a 	sub	r16,r4,r16
  80a358:	e086b03a 	or	r3,fp,r2
  80a35c:	003f4306 	br	80a06c <__alt_data_end+0xff80a06c>
  80a360:	2005883a 	mov	r2,r4
  80a364:	003f6906 	br	80a10c <__alt_data_end+0xff80a10c>
  80a368:	1805883a 	mov	r2,r3
  80a36c:	003f0f06 	br	809fac <__alt_data_end+0xff809fac>
  80a370:	1806943a 	slli	r3,r3,16
  80a374:	9d66983a 	sll	r19,r19,r21
  80a378:	39ffffcc 	andi	r7,r7,65535
  80a37c:	19c7883a 	add	r3,r3,r7
  80a380:	98ffc32e 	bgeu	r19,r3,80a290 <__alt_data_end+0xff80a290>
  80a384:	10bfffc4 	addi	r2,r2,-1
  80a388:	003fc106 	br	80a290 <__alt_data_end+0xff80a290>
  80a38c:	00800604 	movi	r2,24
  80a390:	003f1106 	br	809fd8 <__alt_data_end+0xff809fd8>
  80a394:	00800604 	movi	r2,24
  80a398:	003f2706 	br	80a038 <__alt_data_end+0xff80a038>
  80a39c:	00800604 	movi	r2,24
  80a3a0:	003ece06 	br	809edc <__alt_data_end+0xff809edc>
  80a3a4:	0007883a 	mov	r3,zero
  80a3a8:	00800044 	movi	r2,1
  80a3ac:	003f5c06 	br	80a120 <__alt_data_end+0xff80a120>
  80a3b0:	813fa12e 	bgeu	r16,r4,80a238 <__alt_data_end+0xff80a238>
  80a3b4:	10bfff84 	addi	r2,r2,-2
  80a3b8:	85e1883a 	add	r16,r16,r23
  80a3bc:	003f9f06 	br	80a23c <__alt_data_end+0xff80a23c>
  80a3c0:	1c7f8a2e 	bgeu	r3,r17,80a1ec <__alt_data_end+0xff80a1ec>
  80a3c4:	31bfff84 	addi	r6,r6,-2
  80a3c8:	1dc7883a 	add	r3,r3,r23
  80a3cc:	003f8806 	br	80a1f0 <__alt_data_end+0xff80a1f0>
  80a3d0:	1805883a 	mov	r2,r3
  80a3d4:	003fde06 	br	80a350 <__alt_data_end+0xff80a350>
  80a3d8:	1839883a 	mov	fp,r3
  80a3dc:	003fc906 	br	80a304 <__alt_data_end+0xff80a304>
  80a3e0:	b5bfff84 	addi	r22,r22,-2
  80a3e4:	2449883a 	add	r4,r4,r17
  80a3e8:	003f3406 	br	80a0bc <__alt_data_end+0xff80a0bc>
  80a3ec:	b5bfff84 	addi	r22,r22,-2
  80a3f0:	1445883a 	add	r2,r2,r17
  80a3f4:	003edb06 	br	809f64 <__alt_data_end+0xff809f64>

0080a3f8 <__umoddi3>:
  80a3f8:	defff404 	addi	sp,sp,-48
  80a3fc:	df000a15 	stw	fp,40(sp)
  80a400:	dc400315 	stw	r17,12(sp)
  80a404:	dc000215 	stw	r16,8(sp)
  80a408:	dfc00b15 	stw	ra,44(sp)
  80a40c:	ddc00915 	stw	r23,36(sp)
  80a410:	dd800815 	stw	r22,32(sp)
  80a414:	dd400715 	stw	r21,28(sp)
  80a418:	dd000615 	stw	r20,24(sp)
  80a41c:	dcc00515 	stw	r19,20(sp)
  80a420:	dc800415 	stw	r18,16(sp)
  80a424:	2021883a 	mov	r16,r4
  80a428:	2823883a 	mov	r17,r5
  80a42c:	2839883a 	mov	fp,r5
  80a430:	38003c1e 	bne	r7,zero,80a524 <__umoddi3+0x12c>
  80a434:	3027883a 	mov	r19,r6
  80a438:	2029883a 	mov	r20,r4
  80a43c:	2980512e 	bgeu	r5,r6,80a584 <__umoddi3+0x18c>
  80a440:	00bfffd4 	movui	r2,65535
  80a444:	11809a36 	bltu	r2,r6,80a6b0 <__umoddi3+0x2b8>
  80a448:	01003fc4 	movi	r4,255
  80a44c:	2189803a 	cmpltu	r4,r4,r6
  80a450:	200890fa 	slli	r4,r4,3
  80a454:	3104d83a 	srl	r2,r6,r4
  80a458:	00c02074 	movhi	r3,129
  80a45c:	18fe1604 	addi	r3,r3,-1960
  80a460:	1885883a 	add	r2,r3,r2
  80a464:	10c00003 	ldbu	r3,0(r2)
  80a468:	00800804 	movi	r2,32
  80a46c:	1909883a 	add	r4,r3,r4
  80a470:	1125c83a 	sub	r18,r2,r4
  80a474:	90000526 	beq	r18,zero,80a48c <__umoddi3+0x94>
  80a478:	8ca2983a 	sll	r17,r17,r18
  80a47c:	8108d83a 	srl	r4,r16,r4
  80a480:	34a6983a 	sll	r19,r6,r18
  80a484:	84a8983a 	sll	r20,r16,r18
  80a488:	2478b03a 	or	fp,r4,r17
  80a48c:	982ed43a 	srli	r23,r19,16
  80a490:	e009883a 	mov	r4,fp
  80a494:	9dbfffcc 	andi	r22,r19,65535
  80a498:	b80b883a 	mov	r5,r23
  80a49c:	080aa8c0 	call	80aa8c <__umodsi3>
  80a4a0:	e009883a 	mov	r4,fp
  80a4a4:	b80b883a 	mov	r5,r23
  80a4a8:	102b883a 	mov	r21,r2
  80a4ac:	080aa280 	call	80aa28 <__udivsi3>
  80a4b0:	a806943a 	slli	r3,r21,16
  80a4b4:	a008d43a 	srli	r4,r20,16
  80a4b8:	b085383a 	mul	r2,r22,r2
  80a4bc:	20c8b03a 	or	r4,r4,r3
  80a4c0:	2080032e 	bgeu	r4,r2,80a4d0 <__umoddi3+0xd8>
  80a4c4:	24c9883a 	add	r4,r4,r19
  80a4c8:	24c00136 	bltu	r4,r19,80a4d0 <__umoddi3+0xd8>
  80a4cc:	20811036 	bltu	r4,r2,80a910 <__umoddi3+0x518>
  80a4d0:	20abc83a 	sub	r21,r4,r2
  80a4d4:	b80b883a 	mov	r5,r23
  80a4d8:	a809883a 	mov	r4,r21
  80a4dc:	080aa8c0 	call	80aa8c <__umodsi3>
  80a4e0:	1023883a 	mov	r17,r2
  80a4e4:	b80b883a 	mov	r5,r23
  80a4e8:	a809883a 	mov	r4,r21
  80a4ec:	080aa280 	call	80aa28 <__udivsi3>
  80a4f0:	8822943a 	slli	r17,r17,16
  80a4f4:	b085383a 	mul	r2,r22,r2
  80a4f8:	a0ffffcc 	andi	r3,r20,65535
  80a4fc:	1c46b03a 	or	r3,r3,r17
  80a500:	1880042e 	bgeu	r3,r2,80a514 <__umoddi3+0x11c>
  80a504:	1cc7883a 	add	r3,r3,r19
  80a508:	1cc00236 	bltu	r3,r19,80a514 <__umoddi3+0x11c>
  80a50c:	1880012e 	bgeu	r3,r2,80a514 <__umoddi3+0x11c>
  80a510:	1cc7883a 	add	r3,r3,r19
  80a514:	1885c83a 	sub	r2,r3,r2
  80a518:	1484d83a 	srl	r2,r2,r18
  80a51c:	0007883a 	mov	r3,zero
  80a520:	00004f06 	br	80a660 <__umoddi3+0x268>
  80a524:	29c04c36 	bltu	r5,r7,80a658 <__umoddi3+0x260>
  80a528:	00bfffd4 	movui	r2,65535
  80a52c:	11c0582e 	bgeu	r2,r7,80a690 <__umoddi3+0x298>
  80a530:	00804034 	movhi	r2,256
  80a534:	10bfffc4 	addi	r2,r2,-1
  80a538:	11c0e736 	bltu	r2,r7,80a8d8 <__umoddi3+0x4e0>
  80a53c:	01000404 	movi	r4,16
  80a540:	3904d83a 	srl	r2,r7,r4
  80a544:	00c02074 	movhi	r3,129
  80a548:	18fe1604 	addi	r3,r3,-1960
  80a54c:	1885883a 	add	r2,r3,r2
  80a550:	14c00003 	ldbu	r19,0(r2)
  80a554:	00c00804 	movi	r3,32
  80a558:	9927883a 	add	r19,r19,r4
  80a55c:	1ce9c83a 	sub	r20,r3,r19
  80a560:	a000581e 	bne	r20,zero,80a6c4 <__umoddi3+0x2cc>
  80a564:	3c400136 	bltu	r7,r17,80a56c <__umoddi3+0x174>
  80a568:	8180eb36 	bltu	r16,r6,80a918 <__umoddi3+0x520>
  80a56c:	8185c83a 	sub	r2,r16,r6
  80a570:	89e3c83a 	sub	r17,r17,r7
  80a574:	8089803a 	cmpltu	r4,r16,r2
  80a578:	8939c83a 	sub	fp,r17,r4
  80a57c:	e007883a 	mov	r3,fp
  80a580:	00003706 	br	80a660 <__umoddi3+0x268>
  80a584:	3000041e 	bne	r6,zero,80a598 <__umoddi3+0x1a0>
  80a588:	000b883a 	mov	r5,zero
  80a58c:	01000044 	movi	r4,1
  80a590:	080aa280 	call	80aa28 <__udivsi3>
  80a594:	1027883a 	mov	r19,r2
  80a598:	00bfffd4 	movui	r2,65535
  80a59c:	14c0402e 	bgeu	r2,r19,80a6a0 <__umoddi3+0x2a8>
  80a5a0:	00804034 	movhi	r2,256
  80a5a4:	10bfffc4 	addi	r2,r2,-1
  80a5a8:	14c0cd36 	bltu	r2,r19,80a8e0 <__umoddi3+0x4e8>
  80a5ac:	00800404 	movi	r2,16
  80a5b0:	9886d83a 	srl	r3,r19,r2
  80a5b4:	01002074 	movhi	r4,129
  80a5b8:	213e1604 	addi	r4,r4,-1960
  80a5bc:	20c7883a 	add	r3,r4,r3
  80a5c0:	18c00003 	ldbu	r3,0(r3)
  80a5c4:	1887883a 	add	r3,r3,r2
  80a5c8:	00800804 	movi	r2,32
  80a5cc:	10e5c83a 	sub	r18,r2,r3
  80a5d0:	9000901e 	bne	r18,zero,80a814 <__umoddi3+0x41c>
  80a5d4:	982cd43a 	srli	r22,r19,16
  80a5d8:	8ce3c83a 	sub	r17,r17,r19
  80a5dc:	9d7fffcc 	andi	r21,r19,65535
  80a5e0:	b00b883a 	mov	r5,r22
  80a5e4:	8809883a 	mov	r4,r17
  80a5e8:	080aa8c0 	call	80aa8c <__umodsi3>
  80a5ec:	8809883a 	mov	r4,r17
  80a5f0:	b00b883a 	mov	r5,r22
  80a5f4:	1021883a 	mov	r16,r2
  80a5f8:	080aa280 	call	80aa28 <__udivsi3>
  80a5fc:	8006943a 	slli	r3,r16,16
  80a600:	a008d43a 	srli	r4,r20,16
  80a604:	1545383a 	mul	r2,r2,r21
  80a608:	20c8b03a 	or	r4,r4,r3
  80a60c:	2080042e 	bgeu	r4,r2,80a620 <__umoddi3+0x228>
  80a610:	24c9883a 	add	r4,r4,r19
  80a614:	24c00236 	bltu	r4,r19,80a620 <__umoddi3+0x228>
  80a618:	2080012e 	bgeu	r4,r2,80a620 <__umoddi3+0x228>
  80a61c:	24c9883a 	add	r4,r4,r19
  80a620:	20a1c83a 	sub	r16,r4,r2
  80a624:	b00b883a 	mov	r5,r22
  80a628:	8009883a 	mov	r4,r16
  80a62c:	080aa8c0 	call	80aa8c <__umodsi3>
  80a630:	1023883a 	mov	r17,r2
  80a634:	b00b883a 	mov	r5,r22
  80a638:	8009883a 	mov	r4,r16
  80a63c:	080aa280 	call	80aa28 <__udivsi3>
  80a640:	8822943a 	slli	r17,r17,16
  80a644:	1545383a 	mul	r2,r2,r21
  80a648:	a53fffcc 	andi	r20,r20,65535
  80a64c:	a446b03a 	or	r3,r20,r17
  80a650:	18bfb02e 	bgeu	r3,r2,80a514 <__alt_data_end+0xff80a514>
  80a654:	003fab06 	br	80a504 <__alt_data_end+0xff80a504>
  80a658:	2005883a 	mov	r2,r4
  80a65c:	2807883a 	mov	r3,r5
  80a660:	dfc00b17 	ldw	ra,44(sp)
  80a664:	df000a17 	ldw	fp,40(sp)
  80a668:	ddc00917 	ldw	r23,36(sp)
  80a66c:	dd800817 	ldw	r22,32(sp)
  80a670:	dd400717 	ldw	r21,28(sp)
  80a674:	dd000617 	ldw	r20,24(sp)
  80a678:	dcc00517 	ldw	r19,20(sp)
  80a67c:	dc800417 	ldw	r18,16(sp)
  80a680:	dc400317 	ldw	r17,12(sp)
  80a684:	dc000217 	ldw	r16,8(sp)
  80a688:	dec00c04 	addi	sp,sp,48
  80a68c:	f800283a 	ret
  80a690:	04c03fc4 	movi	r19,255
  80a694:	99c9803a 	cmpltu	r4,r19,r7
  80a698:	200890fa 	slli	r4,r4,3
  80a69c:	003fa806 	br	80a540 <__alt_data_end+0xff80a540>
  80a6a0:	00803fc4 	movi	r2,255
  80a6a4:	14c5803a 	cmpltu	r2,r2,r19
  80a6a8:	100490fa 	slli	r2,r2,3
  80a6ac:	003fc006 	br	80a5b0 <__alt_data_end+0xff80a5b0>
  80a6b0:	00804034 	movhi	r2,256
  80a6b4:	10bfffc4 	addi	r2,r2,-1
  80a6b8:	11808b36 	bltu	r2,r6,80a8e8 <__umoddi3+0x4f0>
  80a6bc:	01000404 	movi	r4,16
  80a6c0:	003f6406 	br	80a454 <__alt_data_end+0xff80a454>
  80a6c4:	34c4d83a 	srl	r2,r6,r19
  80a6c8:	3d0e983a 	sll	r7,r7,r20
  80a6cc:	8cf8d83a 	srl	fp,r17,r19
  80a6d0:	8d10983a 	sll	r8,r17,r20
  80a6d4:	38aab03a 	or	r21,r7,r2
  80a6d8:	a82cd43a 	srli	r22,r21,16
  80a6dc:	84e2d83a 	srl	r17,r16,r19
  80a6e0:	e009883a 	mov	r4,fp
  80a6e4:	b00b883a 	mov	r5,r22
  80a6e8:	8a22b03a 	or	r17,r17,r8
  80a6ec:	3524983a 	sll	r18,r6,r20
  80a6f0:	080aa8c0 	call	80aa8c <__umodsi3>
  80a6f4:	e009883a 	mov	r4,fp
  80a6f8:	b00b883a 	mov	r5,r22
  80a6fc:	102f883a 	mov	r23,r2
  80a700:	080aa280 	call	80aa28 <__udivsi3>
  80a704:	100d883a 	mov	r6,r2
  80a708:	b808943a 	slli	r4,r23,16
  80a70c:	aa3fffcc 	andi	r8,r21,65535
  80a710:	8804d43a 	srli	r2,r17,16
  80a714:	41af383a 	mul	r23,r8,r6
  80a718:	8520983a 	sll	r16,r16,r20
  80a71c:	1104b03a 	or	r2,r2,r4
  80a720:	15c0042e 	bgeu	r2,r23,80a734 <__umoddi3+0x33c>
  80a724:	1545883a 	add	r2,r2,r21
  80a728:	30ffffc4 	addi	r3,r6,-1
  80a72c:	1540742e 	bgeu	r2,r21,80a900 <__umoddi3+0x508>
  80a730:	180d883a 	mov	r6,r3
  80a734:	15efc83a 	sub	r23,r2,r23
  80a738:	b00b883a 	mov	r5,r22
  80a73c:	b809883a 	mov	r4,r23
  80a740:	d9800115 	stw	r6,4(sp)
  80a744:	da000015 	stw	r8,0(sp)
  80a748:	080aa8c0 	call	80aa8c <__umodsi3>
  80a74c:	b00b883a 	mov	r5,r22
  80a750:	b809883a 	mov	r4,r23
  80a754:	1039883a 	mov	fp,r2
  80a758:	080aa280 	call	80aa28 <__udivsi3>
  80a75c:	da000017 	ldw	r8,0(sp)
  80a760:	e038943a 	slli	fp,fp,16
  80a764:	100b883a 	mov	r5,r2
  80a768:	4089383a 	mul	r4,r8,r2
  80a76c:	8a3fffcc 	andi	r8,r17,65535
  80a770:	4710b03a 	or	r8,r8,fp
  80a774:	d9800117 	ldw	r6,4(sp)
  80a778:	4100042e 	bgeu	r8,r4,80a78c <__umoddi3+0x394>
  80a77c:	4551883a 	add	r8,r8,r21
  80a780:	10bfffc4 	addi	r2,r2,-1
  80a784:	45405a2e 	bgeu	r8,r21,80a8f0 <__umoddi3+0x4f8>
  80a788:	100b883a 	mov	r5,r2
  80a78c:	300c943a 	slli	r6,r6,16
  80a790:	91ffffcc 	andi	r7,r18,65535
  80a794:	9004d43a 	srli	r2,r18,16
  80a798:	314cb03a 	or	r6,r6,r5
  80a79c:	317fffcc 	andi	r5,r6,65535
  80a7a0:	300cd43a 	srli	r6,r6,16
  80a7a4:	29d3383a 	mul	r9,r5,r7
  80a7a8:	288b383a 	mul	r5,r5,r2
  80a7ac:	31cf383a 	mul	r7,r6,r7
  80a7b0:	4806d43a 	srli	r3,r9,16
  80a7b4:	4111c83a 	sub	r8,r8,r4
  80a7b8:	29cb883a 	add	r5,r5,r7
  80a7bc:	194b883a 	add	r5,r3,r5
  80a7c0:	3085383a 	mul	r2,r6,r2
  80a7c4:	29c0022e 	bgeu	r5,r7,80a7d0 <__umoddi3+0x3d8>
  80a7c8:	00c00074 	movhi	r3,1
  80a7cc:	10c5883a 	add	r2,r2,r3
  80a7d0:	2808d43a 	srli	r4,r5,16
  80a7d4:	280a943a 	slli	r5,r5,16
  80a7d8:	4a7fffcc 	andi	r9,r9,65535
  80a7dc:	2085883a 	add	r2,r4,r2
  80a7e0:	2a4b883a 	add	r5,r5,r9
  80a7e4:	40803636 	bltu	r8,r2,80a8c0 <__umoddi3+0x4c8>
  80a7e8:	40804d26 	beq	r8,r2,80a920 <__umoddi3+0x528>
  80a7ec:	4089c83a 	sub	r4,r8,r2
  80a7f0:	280f883a 	mov	r7,r5
  80a7f4:	81cfc83a 	sub	r7,r16,r7
  80a7f8:	81c7803a 	cmpltu	r3,r16,r7
  80a7fc:	20c7c83a 	sub	r3,r4,r3
  80a800:	1cc4983a 	sll	r2,r3,r19
  80a804:	3d0ed83a 	srl	r7,r7,r20
  80a808:	1d06d83a 	srl	r3,r3,r20
  80a80c:	11c4b03a 	or	r2,r2,r7
  80a810:	003f9306 	br	80a660 <__alt_data_end+0xff80a660>
  80a814:	9ca6983a 	sll	r19,r19,r18
  80a818:	88e8d83a 	srl	r20,r17,r3
  80a81c:	80c4d83a 	srl	r2,r16,r3
  80a820:	982cd43a 	srli	r22,r19,16
  80a824:	8ca2983a 	sll	r17,r17,r18
  80a828:	a009883a 	mov	r4,r20
  80a82c:	b00b883a 	mov	r5,r22
  80a830:	1478b03a 	or	fp,r2,r17
  80a834:	080aa8c0 	call	80aa8c <__umodsi3>
  80a838:	a009883a 	mov	r4,r20
  80a83c:	b00b883a 	mov	r5,r22
  80a840:	1023883a 	mov	r17,r2
  80a844:	080aa280 	call	80aa28 <__udivsi3>
  80a848:	9d7fffcc 	andi	r21,r19,65535
  80a84c:	880a943a 	slli	r5,r17,16
  80a850:	e008d43a 	srli	r4,fp,16
  80a854:	a885383a 	mul	r2,r21,r2
  80a858:	84a8983a 	sll	r20,r16,r18
  80a85c:	2148b03a 	or	r4,r4,r5
  80a860:	2080042e 	bgeu	r4,r2,80a874 <__umoddi3+0x47c>
  80a864:	24c9883a 	add	r4,r4,r19
  80a868:	24c00236 	bltu	r4,r19,80a874 <__umoddi3+0x47c>
  80a86c:	2080012e 	bgeu	r4,r2,80a874 <__umoddi3+0x47c>
  80a870:	24c9883a 	add	r4,r4,r19
  80a874:	20a3c83a 	sub	r17,r4,r2
  80a878:	b00b883a 	mov	r5,r22
  80a87c:	8809883a 	mov	r4,r17
  80a880:	080aa8c0 	call	80aa8c <__umodsi3>
  80a884:	102f883a 	mov	r23,r2
  80a888:	8809883a 	mov	r4,r17
  80a88c:	b00b883a 	mov	r5,r22
  80a890:	080aa280 	call	80aa28 <__udivsi3>
  80a894:	b82e943a 	slli	r23,r23,16
  80a898:	a885383a 	mul	r2,r21,r2
  80a89c:	e13fffcc 	andi	r4,fp,65535
  80a8a0:	25c8b03a 	or	r4,r4,r23
  80a8a4:	2080042e 	bgeu	r4,r2,80a8b8 <__umoddi3+0x4c0>
  80a8a8:	24c9883a 	add	r4,r4,r19
  80a8ac:	24c00236 	bltu	r4,r19,80a8b8 <__umoddi3+0x4c0>
  80a8b0:	2080012e 	bgeu	r4,r2,80a8b8 <__umoddi3+0x4c0>
  80a8b4:	24c9883a 	add	r4,r4,r19
  80a8b8:	20a3c83a 	sub	r17,r4,r2
  80a8bc:	003f4806 	br	80a5e0 <__alt_data_end+0xff80a5e0>
  80a8c0:	2c8fc83a 	sub	r7,r5,r18
  80a8c4:	1545c83a 	sub	r2,r2,r21
  80a8c8:	29cb803a 	cmpltu	r5,r5,r7
  80a8cc:	1145c83a 	sub	r2,r2,r5
  80a8d0:	4089c83a 	sub	r4,r8,r2
  80a8d4:	003fc706 	br	80a7f4 <__alt_data_end+0xff80a7f4>
  80a8d8:	01000604 	movi	r4,24
  80a8dc:	003f1806 	br	80a540 <__alt_data_end+0xff80a540>
  80a8e0:	00800604 	movi	r2,24
  80a8e4:	003f3206 	br	80a5b0 <__alt_data_end+0xff80a5b0>
  80a8e8:	01000604 	movi	r4,24
  80a8ec:	003ed906 	br	80a454 <__alt_data_end+0xff80a454>
  80a8f0:	413fa52e 	bgeu	r8,r4,80a788 <__alt_data_end+0xff80a788>
  80a8f4:	297fff84 	addi	r5,r5,-2
  80a8f8:	4551883a 	add	r8,r8,r21
  80a8fc:	003fa306 	br	80a78c <__alt_data_end+0xff80a78c>
  80a900:	15ff8b2e 	bgeu	r2,r23,80a730 <__alt_data_end+0xff80a730>
  80a904:	31bfff84 	addi	r6,r6,-2
  80a908:	1545883a 	add	r2,r2,r21
  80a90c:	003f8906 	br	80a734 <__alt_data_end+0xff80a734>
  80a910:	24c9883a 	add	r4,r4,r19
  80a914:	003eee06 	br	80a4d0 <__alt_data_end+0xff80a4d0>
  80a918:	8005883a 	mov	r2,r16
  80a91c:	003f1706 	br	80a57c <__alt_data_end+0xff80a57c>
  80a920:	817fe736 	bltu	r16,r5,80a8c0 <__alt_data_end+0xff80a8c0>
  80a924:	280f883a 	mov	r7,r5
  80a928:	0009883a 	mov	r4,zero
  80a92c:	003fb106 	br	80a7f4 <__alt_data_end+0xff80a7f4>

0080a930 <__divsi3>:
  80a930:	20001b16 	blt	r4,zero,80a9a0 <__divsi3+0x70>
  80a934:	000f883a 	mov	r7,zero
  80a938:	28001616 	blt	r5,zero,80a994 <__divsi3+0x64>
  80a93c:	200d883a 	mov	r6,r4
  80a940:	29001a2e 	bgeu	r5,r4,80a9ac <__divsi3+0x7c>
  80a944:	00800804 	movi	r2,32
  80a948:	00c00044 	movi	r3,1
  80a94c:	00000106 	br	80a954 <__divsi3+0x24>
  80a950:	10000d26 	beq	r2,zero,80a988 <__divsi3+0x58>
  80a954:	294b883a 	add	r5,r5,r5
  80a958:	10bfffc4 	addi	r2,r2,-1
  80a95c:	18c7883a 	add	r3,r3,r3
  80a960:	293ffb36 	bltu	r5,r4,80a950 <__alt_data_end+0xff80a950>
  80a964:	0005883a 	mov	r2,zero
  80a968:	18000726 	beq	r3,zero,80a988 <__divsi3+0x58>
  80a96c:	0005883a 	mov	r2,zero
  80a970:	31400236 	bltu	r6,r5,80a97c <__divsi3+0x4c>
  80a974:	314dc83a 	sub	r6,r6,r5
  80a978:	10c4b03a 	or	r2,r2,r3
  80a97c:	1806d07a 	srli	r3,r3,1
  80a980:	280ad07a 	srli	r5,r5,1
  80a984:	183ffa1e 	bne	r3,zero,80a970 <__alt_data_end+0xff80a970>
  80a988:	38000126 	beq	r7,zero,80a990 <__divsi3+0x60>
  80a98c:	0085c83a 	sub	r2,zero,r2
  80a990:	f800283a 	ret
  80a994:	014bc83a 	sub	r5,zero,r5
  80a998:	39c0005c 	xori	r7,r7,1
  80a99c:	003fe706 	br	80a93c <__alt_data_end+0xff80a93c>
  80a9a0:	0109c83a 	sub	r4,zero,r4
  80a9a4:	01c00044 	movi	r7,1
  80a9a8:	003fe306 	br	80a938 <__alt_data_end+0xff80a938>
  80a9ac:	00c00044 	movi	r3,1
  80a9b0:	003fee06 	br	80a96c <__alt_data_end+0xff80a96c>

0080a9b4 <__modsi3>:
  80a9b4:	20001716 	blt	r4,zero,80aa14 <__modsi3+0x60>
  80a9b8:	000f883a 	mov	r7,zero
  80a9bc:	2005883a 	mov	r2,r4
  80a9c0:	28001216 	blt	r5,zero,80aa0c <__modsi3+0x58>
  80a9c4:	2900162e 	bgeu	r5,r4,80aa20 <__modsi3+0x6c>
  80a9c8:	01800804 	movi	r6,32
  80a9cc:	00c00044 	movi	r3,1
  80a9d0:	00000106 	br	80a9d8 <__modsi3+0x24>
  80a9d4:	30000a26 	beq	r6,zero,80aa00 <__modsi3+0x4c>
  80a9d8:	294b883a 	add	r5,r5,r5
  80a9dc:	31bfffc4 	addi	r6,r6,-1
  80a9e0:	18c7883a 	add	r3,r3,r3
  80a9e4:	293ffb36 	bltu	r5,r4,80a9d4 <__alt_data_end+0xff80a9d4>
  80a9e8:	18000526 	beq	r3,zero,80aa00 <__modsi3+0x4c>
  80a9ec:	1806d07a 	srli	r3,r3,1
  80a9f0:	11400136 	bltu	r2,r5,80a9f8 <__modsi3+0x44>
  80a9f4:	1145c83a 	sub	r2,r2,r5
  80a9f8:	280ad07a 	srli	r5,r5,1
  80a9fc:	183ffb1e 	bne	r3,zero,80a9ec <__alt_data_end+0xff80a9ec>
  80aa00:	38000126 	beq	r7,zero,80aa08 <__modsi3+0x54>
  80aa04:	0085c83a 	sub	r2,zero,r2
  80aa08:	f800283a 	ret
  80aa0c:	014bc83a 	sub	r5,zero,r5
  80aa10:	003fec06 	br	80a9c4 <__alt_data_end+0xff80a9c4>
  80aa14:	0109c83a 	sub	r4,zero,r4
  80aa18:	01c00044 	movi	r7,1
  80aa1c:	003fe706 	br	80a9bc <__alt_data_end+0xff80a9bc>
  80aa20:	00c00044 	movi	r3,1
  80aa24:	003ff106 	br	80a9ec <__alt_data_end+0xff80a9ec>

0080aa28 <__udivsi3>:
  80aa28:	200d883a 	mov	r6,r4
  80aa2c:	2900152e 	bgeu	r5,r4,80aa84 <__udivsi3+0x5c>
  80aa30:	28001416 	blt	r5,zero,80aa84 <__udivsi3+0x5c>
  80aa34:	00800804 	movi	r2,32
  80aa38:	00c00044 	movi	r3,1
  80aa3c:	00000206 	br	80aa48 <__udivsi3+0x20>
  80aa40:	10000e26 	beq	r2,zero,80aa7c <__udivsi3+0x54>
  80aa44:	28000516 	blt	r5,zero,80aa5c <__udivsi3+0x34>
  80aa48:	294b883a 	add	r5,r5,r5
  80aa4c:	10bfffc4 	addi	r2,r2,-1
  80aa50:	18c7883a 	add	r3,r3,r3
  80aa54:	293ffa36 	bltu	r5,r4,80aa40 <__alt_data_end+0xff80aa40>
  80aa58:	18000826 	beq	r3,zero,80aa7c <__udivsi3+0x54>
  80aa5c:	0005883a 	mov	r2,zero
  80aa60:	31400236 	bltu	r6,r5,80aa6c <__udivsi3+0x44>
  80aa64:	314dc83a 	sub	r6,r6,r5
  80aa68:	10c4b03a 	or	r2,r2,r3
  80aa6c:	1806d07a 	srli	r3,r3,1
  80aa70:	280ad07a 	srli	r5,r5,1
  80aa74:	183ffa1e 	bne	r3,zero,80aa60 <__alt_data_end+0xff80aa60>
  80aa78:	f800283a 	ret
  80aa7c:	0005883a 	mov	r2,zero
  80aa80:	f800283a 	ret
  80aa84:	00c00044 	movi	r3,1
  80aa88:	003ff406 	br	80aa5c <__alt_data_end+0xff80aa5c>

0080aa8c <__umodsi3>:
  80aa8c:	2005883a 	mov	r2,r4
  80aa90:	2900122e 	bgeu	r5,r4,80aadc <__umodsi3+0x50>
  80aa94:	28001116 	blt	r5,zero,80aadc <__umodsi3+0x50>
  80aa98:	01800804 	movi	r6,32
  80aa9c:	00c00044 	movi	r3,1
  80aaa0:	00000206 	br	80aaac <__umodsi3+0x20>
  80aaa4:	30000c26 	beq	r6,zero,80aad8 <__umodsi3+0x4c>
  80aaa8:	28000516 	blt	r5,zero,80aac0 <__umodsi3+0x34>
  80aaac:	294b883a 	add	r5,r5,r5
  80aab0:	31bfffc4 	addi	r6,r6,-1
  80aab4:	18c7883a 	add	r3,r3,r3
  80aab8:	293ffa36 	bltu	r5,r4,80aaa4 <__alt_data_end+0xff80aaa4>
  80aabc:	18000626 	beq	r3,zero,80aad8 <__umodsi3+0x4c>
  80aac0:	1806d07a 	srli	r3,r3,1
  80aac4:	11400136 	bltu	r2,r5,80aacc <__umodsi3+0x40>
  80aac8:	1145c83a 	sub	r2,r2,r5
  80aacc:	280ad07a 	srli	r5,r5,1
  80aad0:	183ffb1e 	bne	r3,zero,80aac0 <__alt_data_end+0xff80aac0>
  80aad4:	f800283a 	ret
  80aad8:	f800283a 	ret
  80aadc:	00c00044 	movi	r3,1
  80aae0:	003ff706 	br	80aac0 <__alt_data_end+0xff80aac0>

0080aae4 <__adddf3>:
  80aae4:	02c00434 	movhi	r11,16
  80aae8:	5affffc4 	addi	r11,r11,-1
  80aaec:	2806d7fa 	srli	r3,r5,31
  80aaf0:	2ad4703a 	and	r10,r5,r11
  80aaf4:	3ad2703a 	and	r9,r7,r11
  80aaf8:	3804d53a 	srli	r2,r7,20
  80aafc:	3018d77a 	srli	r12,r6,29
  80ab00:	280ad53a 	srli	r5,r5,20
  80ab04:	501490fa 	slli	r10,r10,3
  80ab08:	2010d77a 	srli	r8,r4,29
  80ab0c:	481290fa 	slli	r9,r9,3
  80ab10:	380ed7fa 	srli	r7,r7,31
  80ab14:	defffb04 	addi	sp,sp,-20
  80ab18:	dc800215 	stw	r18,8(sp)
  80ab1c:	dc400115 	stw	r17,4(sp)
  80ab20:	dc000015 	stw	r16,0(sp)
  80ab24:	dfc00415 	stw	ra,16(sp)
  80ab28:	dcc00315 	stw	r19,12(sp)
  80ab2c:	1c803fcc 	andi	r18,r3,255
  80ab30:	2c01ffcc 	andi	r16,r5,2047
  80ab34:	5210b03a 	or	r8,r10,r8
  80ab38:	202290fa 	slli	r17,r4,3
  80ab3c:	1081ffcc 	andi	r2,r2,2047
  80ab40:	4b12b03a 	or	r9,r9,r12
  80ab44:	300c90fa 	slli	r6,r6,3
  80ab48:	91c07526 	beq	r18,r7,80ad20 <__adddf3+0x23c>
  80ab4c:	8087c83a 	sub	r3,r16,r2
  80ab50:	00c0ab0e 	bge	zero,r3,80ae00 <__adddf3+0x31c>
  80ab54:	10002a1e 	bne	r2,zero,80ac00 <__adddf3+0x11c>
  80ab58:	4984b03a 	or	r2,r9,r6
  80ab5c:	1000961e 	bne	r2,zero,80adb8 <__adddf3+0x2d4>
  80ab60:	888001cc 	andi	r2,r17,7
  80ab64:	10000726 	beq	r2,zero,80ab84 <__adddf3+0xa0>
  80ab68:	888003cc 	andi	r2,r17,15
  80ab6c:	00c00104 	movi	r3,4
  80ab70:	10c00426 	beq	r2,r3,80ab84 <__adddf3+0xa0>
  80ab74:	88c7883a 	add	r3,r17,r3
  80ab78:	1c63803a 	cmpltu	r17,r3,r17
  80ab7c:	4451883a 	add	r8,r8,r17
  80ab80:	1823883a 	mov	r17,r3
  80ab84:	4080202c 	andhi	r2,r8,128
  80ab88:	10005926 	beq	r2,zero,80acf0 <__adddf3+0x20c>
  80ab8c:	84000044 	addi	r16,r16,1
  80ab90:	0081ffc4 	movi	r2,2047
  80ab94:	8080ba26 	beq	r16,r2,80ae80 <__adddf3+0x39c>
  80ab98:	00bfe034 	movhi	r2,65408
  80ab9c:	10bfffc4 	addi	r2,r2,-1
  80aba0:	4090703a 	and	r8,r8,r2
  80aba4:	4004977a 	slli	r2,r8,29
  80aba8:	4010927a 	slli	r8,r8,9
  80abac:	8822d0fa 	srli	r17,r17,3
  80abb0:	8401ffcc 	andi	r16,r16,2047
  80abb4:	4010d33a 	srli	r8,r8,12
  80abb8:	9007883a 	mov	r3,r18
  80abbc:	1444b03a 	or	r2,r2,r17
  80abc0:	8401ffcc 	andi	r16,r16,2047
  80abc4:	8020953a 	slli	r16,r16,20
  80abc8:	18c03fcc 	andi	r3,r3,255
  80abcc:	01000434 	movhi	r4,16
  80abd0:	213fffc4 	addi	r4,r4,-1
  80abd4:	180697fa 	slli	r3,r3,31
  80abd8:	4110703a 	and	r8,r8,r4
  80abdc:	4410b03a 	or	r8,r8,r16
  80abe0:	40c6b03a 	or	r3,r8,r3
  80abe4:	dfc00417 	ldw	ra,16(sp)
  80abe8:	dcc00317 	ldw	r19,12(sp)
  80abec:	dc800217 	ldw	r18,8(sp)
  80abf0:	dc400117 	ldw	r17,4(sp)
  80abf4:	dc000017 	ldw	r16,0(sp)
  80abf8:	dec00504 	addi	sp,sp,20
  80abfc:	f800283a 	ret
  80ac00:	0081ffc4 	movi	r2,2047
  80ac04:	80bfd626 	beq	r16,r2,80ab60 <__alt_data_end+0xff80ab60>
  80ac08:	4a402034 	orhi	r9,r9,128
  80ac0c:	00800e04 	movi	r2,56
  80ac10:	10c09f16 	blt	r2,r3,80ae90 <__adddf3+0x3ac>
  80ac14:	008007c4 	movi	r2,31
  80ac18:	10c0c216 	blt	r2,r3,80af24 <__adddf3+0x440>
  80ac1c:	00800804 	movi	r2,32
  80ac20:	10c5c83a 	sub	r2,r2,r3
  80ac24:	488a983a 	sll	r5,r9,r2
  80ac28:	30c8d83a 	srl	r4,r6,r3
  80ac2c:	3084983a 	sll	r2,r6,r2
  80ac30:	48c6d83a 	srl	r3,r9,r3
  80ac34:	290cb03a 	or	r6,r5,r4
  80ac38:	1004c03a 	cmpne	r2,r2,zero
  80ac3c:	308cb03a 	or	r6,r6,r2
  80ac40:	898dc83a 	sub	r6,r17,r6
  80ac44:	89a3803a 	cmpltu	r17,r17,r6
  80ac48:	40d1c83a 	sub	r8,r8,r3
  80ac4c:	4451c83a 	sub	r8,r8,r17
  80ac50:	3023883a 	mov	r17,r6
  80ac54:	4080202c 	andhi	r2,r8,128
  80ac58:	10002326 	beq	r2,zero,80ace8 <__adddf3+0x204>
  80ac5c:	04c02034 	movhi	r19,128
  80ac60:	9cffffc4 	addi	r19,r19,-1
  80ac64:	44e6703a 	and	r19,r8,r19
  80ac68:	98007626 	beq	r19,zero,80ae44 <__adddf3+0x360>
  80ac6c:	9809883a 	mov	r4,r19
  80ac70:	08007c80 	call	8007c8 <__clzsi2>
  80ac74:	10fffe04 	addi	r3,r2,-8
  80ac78:	010007c4 	movi	r4,31
  80ac7c:	20c07716 	blt	r4,r3,80ae5c <__adddf3+0x378>
  80ac80:	00800804 	movi	r2,32
  80ac84:	10c5c83a 	sub	r2,r2,r3
  80ac88:	8884d83a 	srl	r2,r17,r2
  80ac8c:	98d0983a 	sll	r8,r19,r3
  80ac90:	88e2983a 	sll	r17,r17,r3
  80ac94:	1204b03a 	or	r2,r2,r8
  80ac98:	1c007416 	blt	r3,r16,80ae6c <__adddf3+0x388>
  80ac9c:	1c21c83a 	sub	r16,r3,r16
  80aca0:	82000044 	addi	r8,r16,1
  80aca4:	00c007c4 	movi	r3,31
  80aca8:	1a009116 	blt	r3,r8,80aef0 <__adddf3+0x40c>
  80acac:	00c00804 	movi	r3,32
  80acb0:	1a07c83a 	sub	r3,r3,r8
  80acb4:	8a08d83a 	srl	r4,r17,r8
  80acb8:	88e2983a 	sll	r17,r17,r3
  80acbc:	10c6983a 	sll	r3,r2,r3
  80acc0:	1210d83a 	srl	r8,r2,r8
  80acc4:	8804c03a 	cmpne	r2,r17,zero
  80acc8:	1906b03a 	or	r3,r3,r4
  80accc:	18a2b03a 	or	r17,r3,r2
  80acd0:	0021883a 	mov	r16,zero
  80acd4:	003fa206 	br	80ab60 <__alt_data_end+0xff80ab60>
  80acd8:	1890b03a 	or	r8,r3,r2
  80acdc:	40017d26 	beq	r8,zero,80b2d4 <__adddf3+0x7f0>
  80ace0:	1011883a 	mov	r8,r2
  80ace4:	1823883a 	mov	r17,r3
  80ace8:	888001cc 	andi	r2,r17,7
  80acec:	103f9e1e 	bne	r2,zero,80ab68 <__alt_data_end+0xff80ab68>
  80acf0:	4004977a 	slli	r2,r8,29
  80acf4:	8822d0fa 	srli	r17,r17,3
  80acf8:	4010d0fa 	srli	r8,r8,3
  80acfc:	9007883a 	mov	r3,r18
  80ad00:	1444b03a 	or	r2,r2,r17
  80ad04:	0101ffc4 	movi	r4,2047
  80ad08:	81002426 	beq	r16,r4,80ad9c <__adddf3+0x2b8>
  80ad0c:	8120703a 	and	r16,r16,r4
  80ad10:	01000434 	movhi	r4,16
  80ad14:	213fffc4 	addi	r4,r4,-1
  80ad18:	4110703a 	and	r8,r8,r4
  80ad1c:	003fa806 	br	80abc0 <__alt_data_end+0xff80abc0>
  80ad20:	8089c83a 	sub	r4,r16,r2
  80ad24:	01005e0e 	bge	zero,r4,80aea0 <__adddf3+0x3bc>
  80ad28:	10002b26 	beq	r2,zero,80add8 <__adddf3+0x2f4>
  80ad2c:	0081ffc4 	movi	r2,2047
  80ad30:	80bf8b26 	beq	r16,r2,80ab60 <__alt_data_end+0xff80ab60>
  80ad34:	4a402034 	orhi	r9,r9,128
  80ad38:	00800e04 	movi	r2,56
  80ad3c:	1100a40e 	bge	r2,r4,80afd0 <__adddf3+0x4ec>
  80ad40:	498cb03a 	or	r6,r9,r6
  80ad44:	300ac03a 	cmpne	r5,r6,zero
  80ad48:	0013883a 	mov	r9,zero
  80ad4c:	2c4b883a 	add	r5,r5,r17
  80ad50:	2c63803a 	cmpltu	r17,r5,r17
  80ad54:	4a11883a 	add	r8,r9,r8
  80ad58:	8a11883a 	add	r8,r17,r8
  80ad5c:	2823883a 	mov	r17,r5
  80ad60:	4080202c 	andhi	r2,r8,128
  80ad64:	103fe026 	beq	r2,zero,80ace8 <__alt_data_end+0xff80ace8>
  80ad68:	84000044 	addi	r16,r16,1
  80ad6c:	0081ffc4 	movi	r2,2047
  80ad70:	8080d226 	beq	r16,r2,80b0bc <__adddf3+0x5d8>
  80ad74:	00bfe034 	movhi	r2,65408
  80ad78:	10bfffc4 	addi	r2,r2,-1
  80ad7c:	4090703a 	and	r8,r8,r2
  80ad80:	880ad07a 	srli	r5,r17,1
  80ad84:	400897fa 	slli	r4,r8,31
  80ad88:	88c0004c 	andi	r3,r17,1
  80ad8c:	28e2b03a 	or	r17,r5,r3
  80ad90:	4010d07a 	srli	r8,r8,1
  80ad94:	2462b03a 	or	r17,r4,r17
  80ad98:	003f7106 	br	80ab60 <__alt_data_end+0xff80ab60>
  80ad9c:	4088b03a 	or	r4,r8,r2
  80ada0:	20014526 	beq	r4,zero,80b2b8 <__adddf3+0x7d4>
  80ada4:	01000434 	movhi	r4,16
  80ada8:	42000234 	orhi	r8,r8,8
  80adac:	213fffc4 	addi	r4,r4,-1
  80adb0:	4110703a 	and	r8,r8,r4
  80adb4:	003f8206 	br	80abc0 <__alt_data_end+0xff80abc0>
  80adb8:	18ffffc4 	addi	r3,r3,-1
  80adbc:	1800491e 	bne	r3,zero,80aee4 <__adddf3+0x400>
  80adc0:	898bc83a 	sub	r5,r17,r6
  80adc4:	8963803a 	cmpltu	r17,r17,r5
  80adc8:	4251c83a 	sub	r8,r8,r9
  80adcc:	4451c83a 	sub	r8,r8,r17
  80add0:	2823883a 	mov	r17,r5
  80add4:	003f9f06 	br	80ac54 <__alt_data_end+0xff80ac54>
  80add8:	4984b03a 	or	r2,r9,r6
  80addc:	103f6026 	beq	r2,zero,80ab60 <__alt_data_end+0xff80ab60>
  80ade0:	213fffc4 	addi	r4,r4,-1
  80ade4:	2000931e 	bne	r4,zero,80b034 <__adddf3+0x550>
  80ade8:	898d883a 	add	r6,r17,r6
  80adec:	3463803a 	cmpltu	r17,r6,r17
  80adf0:	4251883a 	add	r8,r8,r9
  80adf4:	8a11883a 	add	r8,r17,r8
  80adf8:	3023883a 	mov	r17,r6
  80adfc:	003fd806 	br	80ad60 <__alt_data_end+0xff80ad60>
  80ae00:	1800541e 	bne	r3,zero,80af54 <__adddf3+0x470>
  80ae04:	80800044 	addi	r2,r16,1
  80ae08:	1081ffcc 	andi	r2,r2,2047
  80ae0c:	00c00044 	movi	r3,1
  80ae10:	1880a00e 	bge	r3,r2,80b094 <__adddf3+0x5b0>
  80ae14:	8989c83a 	sub	r4,r17,r6
  80ae18:	8905803a 	cmpltu	r2,r17,r4
  80ae1c:	4267c83a 	sub	r19,r8,r9
  80ae20:	98a7c83a 	sub	r19,r19,r2
  80ae24:	9880202c 	andhi	r2,r19,128
  80ae28:	10006326 	beq	r2,zero,80afb8 <__adddf3+0x4d4>
  80ae2c:	3463c83a 	sub	r17,r6,r17
  80ae30:	4a07c83a 	sub	r3,r9,r8
  80ae34:	344d803a 	cmpltu	r6,r6,r17
  80ae38:	19a7c83a 	sub	r19,r3,r6
  80ae3c:	3825883a 	mov	r18,r7
  80ae40:	983f8a1e 	bne	r19,zero,80ac6c <__alt_data_end+0xff80ac6c>
  80ae44:	8809883a 	mov	r4,r17
  80ae48:	08007c80 	call	8007c8 <__clzsi2>
  80ae4c:	10800804 	addi	r2,r2,32
  80ae50:	10fffe04 	addi	r3,r2,-8
  80ae54:	010007c4 	movi	r4,31
  80ae58:	20ff890e 	bge	r4,r3,80ac80 <__alt_data_end+0xff80ac80>
  80ae5c:	10bff604 	addi	r2,r2,-40
  80ae60:	8884983a 	sll	r2,r17,r2
  80ae64:	0023883a 	mov	r17,zero
  80ae68:	1c3f8c0e 	bge	r3,r16,80ac9c <__alt_data_end+0xff80ac9c>
  80ae6c:	023fe034 	movhi	r8,65408
  80ae70:	423fffc4 	addi	r8,r8,-1
  80ae74:	80e1c83a 	sub	r16,r16,r3
  80ae78:	1210703a 	and	r8,r2,r8
  80ae7c:	003f3806 	br	80ab60 <__alt_data_end+0xff80ab60>
  80ae80:	9007883a 	mov	r3,r18
  80ae84:	0011883a 	mov	r8,zero
  80ae88:	0005883a 	mov	r2,zero
  80ae8c:	003f4c06 	br	80abc0 <__alt_data_end+0xff80abc0>
  80ae90:	498cb03a 	or	r6,r9,r6
  80ae94:	300cc03a 	cmpne	r6,r6,zero
  80ae98:	0007883a 	mov	r3,zero
  80ae9c:	003f6806 	br	80ac40 <__alt_data_end+0xff80ac40>
  80aea0:	20009c1e 	bne	r4,zero,80b114 <__adddf3+0x630>
  80aea4:	80800044 	addi	r2,r16,1
  80aea8:	1141ffcc 	andi	r5,r2,2047
  80aeac:	01000044 	movi	r4,1
  80aeb0:	2140670e 	bge	r4,r5,80b050 <__adddf3+0x56c>
  80aeb4:	0101ffc4 	movi	r4,2047
  80aeb8:	11007f26 	beq	r2,r4,80b0b8 <__adddf3+0x5d4>
  80aebc:	898d883a 	add	r6,r17,r6
  80aec0:	4247883a 	add	r3,r8,r9
  80aec4:	3451803a 	cmpltu	r8,r6,r17
  80aec8:	40d1883a 	add	r8,r8,r3
  80aecc:	402297fa 	slli	r17,r8,31
  80aed0:	300cd07a 	srli	r6,r6,1
  80aed4:	4010d07a 	srli	r8,r8,1
  80aed8:	1021883a 	mov	r16,r2
  80aedc:	89a2b03a 	or	r17,r17,r6
  80aee0:	003f1f06 	br	80ab60 <__alt_data_end+0xff80ab60>
  80aee4:	0081ffc4 	movi	r2,2047
  80aee8:	80bf481e 	bne	r16,r2,80ac0c <__alt_data_end+0xff80ac0c>
  80aeec:	003f1c06 	br	80ab60 <__alt_data_end+0xff80ab60>
  80aef0:	843ff844 	addi	r16,r16,-31
  80aef4:	01000804 	movi	r4,32
  80aef8:	1406d83a 	srl	r3,r2,r16
  80aefc:	41005026 	beq	r8,r4,80b040 <__adddf3+0x55c>
  80af00:	01001004 	movi	r4,64
  80af04:	2211c83a 	sub	r8,r4,r8
  80af08:	1204983a 	sll	r2,r2,r8
  80af0c:	88a2b03a 	or	r17,r17,r2
  80af10:	8822c03a 	cmpne	r17,r17,zero
  80af14:	1c62b03a 	or	r17,r3,r17
  80af18:	0011883a 	mov	r8,zero
  80af1c:	0021883a 	mov	r16,zero
  80af20:	003f7106 	br	80ace8 <__alt_data_end+0xff80ace8>
  80af24:	193ff804 	addi	r4,r3,-32
  80af28:	00800804 	movi	r2,32
  80af2c:	4908d83a 	srl	r4,r9,r4
  80af30:	18804526 	beq	r3,r2,80b048 <__adddf3+0x564>
  80af34:	00801004 	movi	r2,64
  80af38:	10c5c83a 	sub	r2,r2,r3
  80af3c:	4886983a 	sll	r3,r9,r2
  80af40:	198cb03a 	or	r6,r3,r6
  80af44:	300cc03a 	cmpne	r6,r6,zero
  80af48:	218cb03a 	or	r6,r4,r6
  80af4c:	0007883a 	mov	r3,zero
  80af50:	003f3b06 	br	80ac40 <__alt_data_end+0xff80ac40>
  80af54:	80002a26 	beq	r16,zero,80b000 <__adddf3+0x51c>
  80af58:	0101ffc4 	movi	r4,2047
  80af5c:	11006826 	beq	r2,r4,80b100 <__adddf3+0x61c>
  80af60:	00c7c83a 	sub	r3,zero,r3
  80af64:	42002034 	orhi	r8,r8,128
  80af68:	01000e04 	movi	r4,56
  80af6c:	20c07c16 	blt	r4,r3,80b160 <__adddf3+0x67c>
  80af70:	010007c4 	movi	r4,31
  80af74:	20c0da16 	blt	r4,r3,80b2e0 <__adddf3+0x7fc>
  80af78:	01000804 	movi	r4,32
  80af7c:	20c9c83a 	sub	r4,r4,r3
  80af80:	4114983a 	sll	r10,r8,r4
  80af84:	88cad83a 	srl	r5,r17,r3
  80af88:	8908983a 	sll	r4,r17,r4
  80af8c:	40c6d83a 	srl	r3,r8,r3
  80af90:	5162b03a 	or	r17,r10,r5
  80af94:	2008c03a 	cmpne	r4,r4,zero
  80af98:	8922b03a 	or	r17,r17,r4
  80af9c:	3463c83a 	sub	r17,r6,r17
  80afa0:	48c7c83a 	sub	r3,r9,r3
  80afa4:	344d803a 	cmpltu	r6,r6,r17
  80afa8:	1991c83a 	sub	r8,r3,r6
  80afac:	1021883a 	mov	r16,r2
  80afb0:	3825883a 	mov	r18,r7
  80afb4:	003f2706 	br	80ac54 <__alt_data_end+0xff80ac54>
  80afb8:	24d0b03a 	or	r8,r4,r19
  80afbc:	40001b1e 	bne	r8,zero,80b02c <__adddf3+0x548>
  80afc0:	0005883a 	mov	r2,zero
  80afc4:	0007883a 	mov	r3,zero
  80afc8:	0021883a 	mov	r16,zero
  80afcc:	003f4d06 	br	80ad04 <__alt_data_end+0xff80ad04>
  80afd0:	008007c4 	movi	r2,31
  80afd4:	11003c16 	blt	r2,r4,80b0c8 <__adddf3+0x5e4>
  80afd8:	00800804 	movi	r2,32
  80afdc:	1105c83a 	sub	r2,r2,r4
  80afe0:	488e983a 	sll	r7,r9,r2
  80afe4:	310ad83a 	srl	r5,r6,r4
  80afe8:	3084983a 	sll	r2,r6,r2
  80afec:	4912d83a 	srl	r9,r9,r4
  80aff0:	394ab03a 	or	r5,r7,r5
  80aff4:	1004c03a 	cmpne	r2,r2,zero
  80aff8:	288ab03a 	or	r5,r5,r2
  80affc:	003f5306 	br	80ad4c <__alt_data_end+0xff80ad4c>
  80b000:	4448b03a 	or	r4,r8,r17
  80b004:	20003e26 	beq	r4,zero,80b100 <__adddf3+0x61c>
  80b008:	00c6303a 	nor	r3,zero,r3
  80b00c:	18003a1e 	bne	r3,zero,80b0f8 <__adddf3+0x614>
  80b010:	3463c83a 	sub	r17,r6,r17
  80b014:	4a07c83a 	sub	r3,r9,r8
  80b018:	344d803a 	cmpltu	r6,r6,r17
  80b01c:	1991c83a 	sub	r8,r3,r6
  80b020:	1021883a 	mov	r16,r2
  80b024:	3825883a 	mov	r18,r7
  80b028:	003f0a06 	br	80ac54 <__alt_data_end+0xff80ac54>
  80b02c:	2023883a 	mov	r17,r4
  80b030:	003f0d06 	br	80ac68 <__alt_data_end+0xff80ac68>
  80b034:	0081ffc4 	movi	r2,2047
  80b038:	80bf3f1e 	bne	r16,r2,80ad38 <__alt_data_end+0xff80ad38>
  80b03c:	003ec806 	br	80ab60 <__alt_data_end+0xff80ab60>
  80b040:	0005883a 	mov	r2,zero
  80b044:	003fb106 	br	80af0c <__alt_data_end+0xff80af0c>
  80b048:	0007883a 	mov	r3,zero
  80b04c:	003fbc06 	br	80af40 <__alt_data_end+0xff80af40>
  80b050:	4444b03a 	or	r2,r8,r17
  80b054:	8000871e 	bne	r16,zero,80b274 <__adddf3+0x790>
  80b058:	1000ba26 	beq	r2,zero,80b344 <__adddf3+0x860>
  80b05c:	4984b03a 	or	r2,r9,r6
  80b060:	103ebf26 	beq	r2,zero,80ab60 <__alt_data_end+0xff80ab60>
  80b064:	8985883a 	add	r2,r17,r6
  80b068:	4247883a 	add	r3,r8,r9
  80b06c:	1451803a 	cmpltu	r8,r2,r17
  80b070:	40d1883a 	add	r8,r8,r3
  80b074:	40c0202c 	andhi	r3,r8,128
  80b078:	1023883a 	mov	r17,r2
  80b07c:	183f1a26 	beq	r3,zero,80ace8 <__alt_data_end+0xff80ace8>
  80b080:	00bfe034 	movhi	r2,65408
  80b084:	10bfffc4 	addi	r2,r2,-1
  80b088:	2021883a 	mov	r16,r4
  80b08c:	4090703a 	and	r8,r8,r2
  80b090:	003eb306 	br	80ab60 <__alt_data_end+0xff80ab60>
  80b094:	4444b03a 	or	r2,r8,r17
  80b098:	8000291e 	bne	r16,zero,80b140 <__adddf3+0x65c>
  80b09c:	10004b1e 	bne	r2,zero,80b1cc <__adddf3+0x6e8>
  80b0a0:	4990b03a 	or	r8,r9,r6
  80b0a4:	40008b26 	beq	r8,zero,80b2d4 <__adddf3+0x7f0>
  80b0a8:	4811883a 	mov	r8,r9
  80b0ac:	3023883a 	mov	r17,r6
  80b0b0:	3825883a 	mov	r18,r7
  80b0b4:	003eaa06 	br	80ab60 <__alt_data_end+0xff80ab60>
  80b0b8:	1021883a 	mov	r16,r2
  80b0bc:	0011883a 	mov	r8,zero
  80b0c0:	0005883a 	mov	r2,zero
  80b0c4:	003f0f06 	br	80ad04 <__alt_data_end+0xff80ad04>
  80b0c8:	217ff804 	addi	r5,r4,-32
  80b0cc:	00800804 	movi	r2,32
  80b0d0:	494ad83a 	srl	r5,r9,r5
  80b0d4:	20807d26 	beq	r4,r2,80b2cc <__adddf3+0x7e8>
  80b0d8:	00801004 	movi	r2,64
  80b0dc:	1109c83a 	sub	r4,r2,r4
  80b0e0:	4912983a 	sll	r9,r9,r4
  80b0e4:	498cb03a 	or	r6,r9,r6
  80b0e8:	300cc03a 	cmpne	r6,r6,zero
  80b0ec:	298ab03a 	or	r5,r5,r6
  80b0f0:	0013883a 	mov	r9,zero
  80b0f4:	003f1506 	br	80ad4c <__alt_data_end+0xff80ad4c>
  80b0f8:	0101ffc4 	movi	r4,2047
  80b0fc:	113f9a1e 	bne	r2,r4,80af68 <__alt_data_end+0xff80af68>
  80b100:	4811883a 	mov	r8,r9
  80b104:	3023883a 	mov	r17,r6
  80b108:	1021883a 	mov	r16,r2
  80b10c:	3825883a 	mov	r18,r7
  80b110:	003e9306 	br	80ab60 <__alt_data_end+0xff80ab60>
  80b114:	8000161e 	bne	r16,zero,80b170 <__adddf3+0x68c>
  80b118:	444ab03a 	or	r5,r8,r17
  80b11c:	28005126 	beq	r5,zero,80b264 <__adddf3+0x780>
  80b120:	0108303a 	nor	r4,zero,r4
  80b124:	20004d1e 	bne	r4,zero,80b25c <__adddf3+0x778>
  80b128:	89a3883a 	add	r17,r17,r6
  80b12c:	4253883a 	add	r9,r8,r9
  80b130:	898d803a 	cmpltu	r6,r17,r6
  80b134:	3251883a 	add	r8,r6,r9
  80b138:	1021883a 	mov	r16,r2
  80b13c:	003f0806 	br	80ad60 <__alt_data_end+0xff80ad60>
  80b140:	1000301e 	bne	r2,zero,80b204 <__adddf3+0x720>
  80b144:	4984b03a 	or	r2,r9,r6
  80b148:	10007126 	beq	r2,zero,80b310 <__adddf3+0x82c>
  80b14c:	4811883a 	mov	r8,r9
  80b150:	3023883a 	mov	r17,r6
  80b154:	3825883a 	mov	r18,r7
  80b158:	0401ffc4 	movi	r16,2047
  80b15c:	003e8006 	br	80ab60 <__alt_data_end+0xff80ab60>
  80b160:	4462b03a 	or	r17,r8,r17
  80b164:	8822c03a 	cmpne	r17,r17,zero
  80b168:	0007883a 	mov	r3,zero
  80b16c:	003f8b06 	br	80af9c <__alt_data_end+0xff80af9c>
  80b170:	0141ffc4 	movi	r5,2047
  80b174:	11403b26 	beq	r2,r5,80b264 <__adddf3+0x780>
  80b178:	0109c83a 	sub	r4,zero,r4
  80b17c:	42002034 	orhi	r8,r8,128
  80b180:	01400e04 	movi	r5,56
  80b184:	29006716 	blt	r5,r4,80b324 <__adddf3+0x840>
  80b188:	014007c4 	movi	r5,31
  80b18c:	29007016 	blt	r5,r4,80b350 <__adddf3+0x86c>
  80b190:	01400804 	movi	r5,32
  80b194:	290bc83a 	sub	r5,r5,r4
  80b198:	4154983a 	sll	r10,r8,r5
  80b19c:	890ed83a 	srl	r7,r17,r4
  80b1a0:	894a983a 	sll	r5,r17,r5
  80b1a4:	4108d83a 	srl	r4,r8,r4
  80b1a8:	51e2b03a 	or	r17,r10,r7
  80b1ac:	280ac03a 	cmpne	r5,r5,zero
  80b1b0:	8962b03a 	or	r17,r17,r5
  80b1b4:	89a3883a 	add	r17,r17,r6
  80b1b8:	2253883a 	add	r9,r4,r9
  80b1bc:	898d803a 	cmpltu	r6,r17,r6
  80b1c0:	3251883a 	add	r8,r6,r9
  80b1c4:	1021883a 	mov	r16,r2
  80b1c8:	003ee506 	br	80ad60 <__alt_data_end+0xff80ad60>
  80b1cc:	4984b03a 	or	r2,r9,r6
  80b1d0:	103e6326 	beq	r2,zero,80ab60 <__alt_data_end+0xff80ab60>
  80b1d4:	8987c83a 	sub	r3,r17,r6
  80b1d8:	88c9803a 	cmpltu	r4,r17,r3
  80b1dc:	4245c83a 	sub	r2,r8,r9
  80b1e0:	1105c83a 	sub	r2,r2,r4
  80b1e4:	1100202c 	andhi	r4,r2,128
  80b1e8:	203ebb26 	beq	r4,zero,80acd8 <__alt_data_end+0xff80acd8>
  80b1ec:	3463c83a 	sub	r17,r6,r17
  80b1f0:	4a07c83a 	sub	r3,r9,r8
  80b1f4:	344d803a 	cmpltu	r6,r6,r17
  80b1f8:	1991c83a 	sub	r8,r3,r6
  80b1fc:	3825883a 	mov	r18,r7
  80b200:	003e5706 	br	80ab60 <__alt_data_end+0xff80ab60>
  80b204:	4984b03a 	or	r2,r9,r6
  80b208:	10002e26 	beq	r2,zero,80b2c4 <__adddf3+0x7e0>
  80b20c:	4004d0fa 	srli	r2,r8,3
  80b210:	8822d0fa 	srli	r17,r17,3
  80b214:	4010977a 	slli	r8,r8,29
  80b218:	10c0022c 	andhi	r3,r2,8
  80b21c:	4462b03a 	or	r17,r8,r17
  80b220:	18000826 	beq	r3,zero,80b244 <__adddf3+0x760>
  80b224:	4808d0fa 	srli	r4,r9,3
  80b228:	20c0022c 	andhi	r3,r4,8
  80b22c:	1800051e 	bne	r3,zero,80b244 <__adddf3+0x760>
  80b230:	300cd0fa 	srli	r6,r6,3
  80b234:	4806977a 	slli	r3,r9,29
  80b238:	2005883a 	mov	r2,r4
  80b23c:	3825883a 	mov	r18,r7
  80b240:	19a2b03a 	or	r17,r3,r6
  80b244:	8810d77a 	srli	r8,r17,29
  80b248:	100490fa 	slli	r2,r2,3
  80b24c:	882290fa 	slli	r17,r17,3
  80b250:	0401ffc4 	movi	r16,2047
  80b254:	4090b03a 	or	r8,r8,r2
  80b258:	003e4106 	br	80ab60 <__alt_data_end+0xff80ab60>
  80b25c:	0141ffc4 	movi	r5,2047
  80b260:	117fc71e 	bne	r2,r5,80b180 <__alt_data_end+0xff80b180>
  80b264:	4811883a 	mov	r8,r9
  80b268:	3023883a 	mov	r17,r6
  80b26c:	1021883a 	mov	r16,r2
  80b270:	003e3b06 	br	80ab60 <__alt_data_end+0xff80ab60>
  80b274:	10002f26 	beq	r2,zero,80b334 <__adddf3+0x850>
  80b278:	4984b03a 	or	r2,r9,r6
  80b27c:	10001126 	beq	r2,zero,80b2c4 <__adddf3+0x7e0>
  80b280:	4004d0fa 	srli	r2,r8,3
  80b284:	8822d0fa 	srli	r17,r17,3
  80b288:	4010977a 	slli	r8,r8,29
  80b28c:	10c0022c 	andhi	r3,r2,8
  80b290:	4462b03a 	or	r17,r8,r17
  80b294:	183feb26 	beq	r3,zero,80b244 <__alt_data_end+0xff80b244>
  80b298:	4808d0fa 	srli	r4,r9,3
  80b29c:	20c0022c 	andhi	r3,r4,8
  80b2a0:	183fe81e 	bne	r3,zero,80b244 <__alt_data_end+0xff80b244>
  80b2a4:	300cd0fa 	srli	r6,r6,3
  80b2a8:	4806977a 	slli	r3,r9,29
  80b2ac:	2005883a 	mov	r2,r4
  80b2b0:	19a2b03a 	or	r17,r3,r6
  80b2b4:	003fe306 	br	80b244 <__alt_data_end+0xff80b244>
  80b2b8:	0011883a 	mov	r8,zero
  80b2bc:	0005883a 	mov	r2,zero
  80b2c0:	003e3f06 	br	80abc0 <__alt_data_end+0xff80abc0>
  80b2c4:	0401ffc4 	movi	r16,2047
  80b2c8:	003e2506 	br	80ab60 <__alt_data_end+0xff80ab60>
  80b2cc:	0013883a 	mov	r9,zero
  80b2d0:	003f8406 	br	80b0e4 <__alt_data_end+0xff80b0e4>
  80b2d4:	0005883a 	mov	r2,zero
  80b2d8:	0007883a 	mov	r3,zero
  80b2dc:	003e8906 	br	80ad04 <__alt_data_end+0xff80ad04>
  80b2e0:	197ff804 	addi	r5,r3,-32
  80b2e4:	01000804 	movi	r4,32
  80b2e8:	414ad83a 	srl	r5,r8,r5
  80b2ec:	19002426 	beq	r3,r4,80b380 <__adddf3+0x89c>
  80b2f0:	01001004 	movi	r4,64
  80b2f4:	20c7c83a 	sub	r3,r4,r3
  80b2f8:	40c6983a 	sll	r3,r8,r3
  80b2fc:	1c46b03a 	or	r3,r3,r17
  80b300:	1806c03a 	cmpne	r3,r3,zero
  80b304:	28e2b03a 	or	r17,r5,r3
  80b308:	0007883a 	mov	r3,zero
  80b30c:	003f2306 	br	80af9c <__alt_data_end+0xff80af9c>
  80b310:	0007883a 	mov	r3,zero
  80b314:	5811883a 	mov	r8,r11
  80b318:	00bfffc4 	movi	r2,-1
  80b31c:	0401ffc4 	movi	r16,2047
  80b320:	003e7806 	br	80ad04 <__alt_data_end+0xff80ad04>
  80b324:	4462b03a 	or	r17,r8,r17
  80b328:	8822c03a 	cmpne	r17,r17,zero
  80b32c:	0009883a 	mov	r4,zero
  80b330:	003fa006 	br	80b1b4 <__alt_data_end+0xff80b1b4>
  80b334:	4811883a 	mov	r8,r9
  80b338:	3023883a 	mov	r17,r6
  80b33c:	0401ffc4 	movi	r16,2047
  80b340:	003e0706 	br	80ab60 <__alt_data_end+0xff80ab60>
  80b344:	4811883a 	mov	r8,r9
  80b348:	3023883a 	mov	r17,r6
  80b34c:	003e0406 	br	80ab60 <__alt_data_end+0xff80ab60>
  80b350:	21fff804 	addi	r7,r4,-32
  80b354:	01400804 	movi	r5,32
  80b358:	41ced83a 	srl	r7,r8,r7
  80b35c:	21400a26 	beq	r4,r5,80b388 <__adddf3+0x8a4>
  80b360:	01401004 	movi	r5,64
  80b364:	2909c83a 	sub	r4,r5,r4
  80b368:	4108983a 	sll	r4,r8,r4
  80b36c:	2448b03a 	or	r4,r4,r17
  80b370:	2008c03a 	cmpne	r4,r4,zero
  80b374:	3922b03a 	or	r17,r7,r4
  80b378:	0009883a 	mov	r4,zero
  80b37c:	003f8d06 	br	80b1b4 <__alt_data_end+0xff80b1b4>
  80b380:	0007883a 	mov	r3,zero
  80b384:	003fdd06 	br	80b2fc <__alt_data_end+0xff80b2fc>
  80b388:	0009883a 	mov	r4,zero
  80b38c:	003ff706 	br	80b36c <__alt_data_end+0xff80b36c>

0080b390 <__divdf3>:
  80b390:	defff204 	addi	sp,sp,-56
  80b394:	dd400915 	stw	r21,36(sp)
  80b398:	282ad53a 	srli	r21,r5,20
  80b39c:	dd000815 	stw	r20,32(sp)
  80b3a0:	2828d7fa 	srli	r20,r5,31
  80b3a4:	dc000415 	stw	r16,16(sp)
  80b3a8:	04000434 	movhi	r16,16
  80b3ac:	df000c15 	stw	fp,48(sp)
  80b3b0:	843fffc4 	addi	r16,r16,-1
  80b3b4:	dfc00d15 	stw	ra,52(sp)
  80b3b8:	ddc00b15 	stw	r23,44(sp)
  80b3bc:	dd800a15 	stw	r22,40(sp)
  80b3c0:	dcc00715 	stw	r19,28(sp)
  80b3c4:	dc800615 	stw	r18,24(sp)
  80b3c8:	dc400515 	stw	r17,20(sp)
  80b3cc:	ad41ffcc 	andi	r21,r21,2047
  80b3d0:	2c20703a 	and	r16,r5,r16
  80b3d4:	a7003fcc 	andi	fp,r20,255
  80b3d8:	a8006126 	beq	r21,zero,80b560 <__divdf3+0x1d0>
  80b3dc:	0081ffc4 	movi	r2,2047
  80b3e0:	2025883a 	mov	r18,r4
  80b3e4:	a8803726 	beq	r21,r2,80b4c4 <__divdf3+0x134>
  80b3e8:	80800434 	orhi	r2,r16,16
  80b3ec:	100490fa 	slli	r2,r2,3
  80b3f0:	2020d77a 	srli	r16,r4,29
  80b3f4:	202490fa 	slli	r18,r4,3
  80b3f8:	ad7f0044 	addi	r21,r21,-1023
  80b3fc:	80a0b03a 	or	r16,r16,r2
  80b400:	0027883a 	mov	r19,zero
  80b404:	0013883a 	mov	r9,zero
  80b408:	3804d53a 	srli	r2,r7,20
  80b40c:	382cd7fa 	srli	r22,r7,31
  80b410:	04400434 	movhi	r17,16
  80b414:	8c7fffc4 	addi	r17,r17,-1
  80b418:	1081ffcc 	andi	r2,r2,2047
  80b41c:	3011883a 	mov	r8,r6
  80b420:	3c62703a 	and	r17,r7,r17
  80b424:	b5c03fcc 	andi	r23,r22,255
  80b428:	10006c26 	beq	r2,zero,80b5dc <__divdf3+0x24c>
  80b42c:	00c1ffc4 	movi	r3,2047
  80b430:	10c06426 	beq	r2,r3,80b5c4 <__divdf3+0x234>
  80b434:	88c00434 	orhi	r3,r17,16
  80b438:	180690fa 	slli	r3,r3,3
  80b43c:	3022d77a 	srli	r17,r6,29
  80b440:	301090fa 	slli	r8,r6,3
  80b444:	10bf0044 	addi	r2,r2,-1023
  80b448:	88e2b03a 	or	r17,r17,r3
  80b44c:	000f883a 	mov	r7,zero
  80b450:	a58cf03a 	xor	r6,r20,r22
  80b454:	3cc8b03a 	or	r4,r7,r19
  80b458:	a8abc83a 	sub	r21,r21,r2
  80b45c:	008003c4 	movi	r2,15
  80b460:	3007883a 	mov	r3,r6
  80b464:	34c03fcc 	andi	r19,r6,255
  80b468:	11009036 	bltu	r2,r4,80b6ac <__divdf3+0x31c>
  80b46c:	200890ba 	slli	r4,r4,2
  80b470:	00802074 	movhi	r2,129
  80b474:	10ad2104 	addi	r2,r2,-19324
  80b478:	2089883a 	add	r4,r4,r2
  80b47c:	20800017 	ldw	r2,0(r4)
  80b480:	1000683a 	jmp	r2
  80b484:	0080b6ac 	andhi	r2,zero,730
  80b488:	0080b4fc 	xorhi	r2,zero,723
  80b48c:	0080b69c 	xori	r2,zero,730
  80b490:	0080b4f0 	cmpltui	r2,zero,723
  80b494:	0080b69c 	xori	r2,zero,730
  80b498:	0080b670 	cmpltui	r2,zero,729
  80b49c:	0080b69c 	xori	r2,zero,730
  80b4a0:	0080b4f0 	cmpltui	r2,zero,723
  80b4a4:	0080b4fc 	xorhi	r2,zero,723
  80b4a8:	0080b4fc 	xorhi	r2,zero,723
  80b4ac:	0080b670 	cmpltui	r2,zero,729
  80b4b0:	0080b4f0 	cmpltui	r2,zero,723
  80b4b4:	0080b4e0 	cmpeqi	r2,zero,723
  80b4b8:	0080b4e0 	cmpeqi	r2,zero,723
  80b4bc:	0080b4e0 	cmpeqi	r2,zero,723
  80b4c0:	0080b990 	cmplti	r2,zero,742
  80b4c4:	2404b03a 	or	r2,r4,r16
  80b4c8:	1000661e 	bne	r2,zero,80b664 <__divdf3+0x2d4>
  80b4cc:	04c00204 	movi	r19,8
  80b4d0:	0021883a 	mov	r16,zero
  80b4d4:	0025883a 	mov	r18,zero
  80b4d8:	02400084 	movi	r9,2
  80b4dc:	003fca06 	br	80b408 <__alt_data_end+0xff80b408>
  80b4e0:	8023883a 	mov	r17,r16
  80b4e4:	9011883a 	mov	r8,r18
  80b4e8:	e02f883a 	mov	r23,fp
  80b4ec:	480f883a 	mov	r7,r9
  80b4f0:	00800084 	movi	r2,2
  80b4f4:	3881311e 	bne	r7,r2,80b9bc <__divdf3+0x62c>
  80b4f8:	b827883a 	mov	r19,r23
  80b4fc:	98c0004c 	andi	r3,r19,1
  80b500:	0081ffc4 	movi	r2,2047
  80b504:	000b883a 	mov	r5,zero
  80b508:	0025883a 	mov	r18,zero
  80b50c:	1004953a 	slli	r2,r2,20
  80b510:	18c03fcc 	andi	r3,r3,255
  80b514:	04400434 	movhi	r17,16
  80b518:	8c7fffc4 	addi	r17,r17,-1
  80b51c:	180697fa 	slli	r3,r3,31
  80b520:	2c4a703a 	and	r5,r5,r17
  80b524:	288ab03a 	or	r5,r5,r2
  80b528:	28c6b03a 	or	r3,r5,r3
  80b52c:	9005883a 	mov	r2,r18
  80b530:	dfc00d17 	ldw	ra,52(sp)
  80b534:	df000c17 	ldw	fp,48(sp)
  80b538:	ddc00b17 	ldw	r23,44(sp)
  80b53c:	dd800a17 	ldw	r22,40(sp)
  80b540:	dd400917 	ldw	r21,36(sp)
  80b544:	dd000817 	ldw	r20,32(sp)
  80b548:	dcc00717 	ldw	r19,28(sp)
  80b54c:	dc800617 	ldw	r18,24(sp)
  80b550:	dc400517 	ldw	r17,20(sp)
  80b554:	dc000417 	ldw	r16,16(sp)
  80b558:	dec00e04 	addi	sp,sp,56
  80b55c:	f800283a 	ret
  80b560:	2404b03a 	or	r2,r4,r16
  80b564:	2027883a 	mov	r19,r4
  80b568:	10003926 	beq	r2,zero,80b650 <__divdf3+0x2c0>
  80b56c:	80012e26 	beq	r16,zero,80ba28 <__divdf3+0x698>
  80b570:	8009883a 	mov	r4,r16
  80b574:	d9800315 	stw	r6,12(sp)
  80b578:	d9c00215 	stw	r7,8(sp)
  80b57c:	08007c80 	call	8007c8 <__clzsi2>
  80b580:	d9800317 	ldw	r6,12(sp)
  80b584:	d9c00217 	ldw	r7,8(sp)
  80b588:	113ffd44 	addi	r4,r2,-11
  80b58c:	00c00704 	movi	r3,28
  80b590:	19012116 	blt	r3,r4,80ba18 <__divdf3+0x688>
  80b594:	00c00744 	movi	r3,29
  80b598:	147ffe04 	addi	r17,r2,-8
  80b59c:	1907c83a 	sub	r3,r3,r4
  80b5a0:	8460983a 	sll	r16,r16,r17
  80b5a4:	98c6d83a 	srl	r3,r19,r3
  80b5a8:	9c64983a 	sll	r18,r19,r17
  80b5ac:	1c20b03a 	or	r16,r3,r16
  80b5b0:	1080fcc4 	addi	r2,r2,1011
  80b5b4:	00abc83a 	sub	r21,zero,r2
  80b5b8:	0027883a 	mov	r19,zero
  80b5bc:	0013883a 	mov	r9,zero
  80b5c0:	003f9106 	br	80b408 <__alt_data_end+0xff80b408>
  80b5c4:	3446b03a 	or	r3,r6,r17
  80b5c8:	18001f1e 	bne	r3,zero,80b648 <__divdf3+0x2b8>
  80b5cc:	0023883a 	mov	r17,zero
  80b5d0:	0011883a 	mov	r8,zero
  80b5d4:	01c00084 	movi	r7,2
  80b5d8:	003f9d06 	br	80b450 <__alt_data_end+0xff80b450>
  80b5dc:	3446b03a 	or	r3,r6,r17
  80b5e0:	18001526 	beq	r3,zero,80b638 <__divdf3+0x2a8>
  80b5e4:	88011b26 	beq	r17,zero,80ba54 <__divdf3+0x6c4>
  80b5e8:	8809883a 	mov	r4,r17
  80b5ec:	d9800315 	stw	r6,12(sp)
  80b5f0:	da400115 	stw	r9,4(sp)
  80b5f4:	08007c80 	call	8007c8 <__clzsi2>
  80b5f8:	d9800317 	ldw	r6,12(sp)
  80b5fc:	da400117 	ldw	r9,4(sp)
  80b600:	113ffd44 	addi	r4,r2,-11
  80b604:	00c00704 	movi	r3,28
  80b608:	19010e16 	blt	r3,r4,80ba44 <__divdf3+0x6b4>
  80b60c:	00c00744 	movi	r3,29
  80b610:	123ffe04 	addi	r8,r2,-8
  80b614:	1907c83a 	sub	r3,r3,r4
  80b618:	8a22983a 	sll	r17,r17,r8
  80b61c:	30c6d83a 	srl	r3,r6,r3
  80b620:	3210983a 	sll	r8,r6,r8
  80b624:	1c62b03a 	or	r17,r3,r17
  80b628:	1080fcc4 	addi	r2,r2,1011
  80b62c:	0085c83a 	sub	r2,zero,r2
  80b630:	000f883a 	mov	r7,zero
  80b634:	003f8606 	br	80b450 <__alt_data_end+0xff80b450>
  80b638:	0023883a 	mov	r17,zero
  80b63c:	0011883a 	mov	r8,zero
  80b640:	01c00044 	movi	r7,1
  80b644:	003f8206 	br	80b450 <__alt_data_end+0xff80b450>
  80b648:	01c000c4 	movi	r7,3
  80b64c:	003f8006 	br	80b450 <__alt_data_end+0xff80b450>
  80b650:	04c00104 	movi	r19,4
  80b654:	0021883a 	mov	r16,zero
  80b658:	0025883a 	mov	r18,zero
  80b65c:	02400044 	movi	r9,1
  80b660:	003f6906 	br	80b408 <__alt_data_end+0xff80b408>
  80b664:	04c00304 	movi	r19,12
  80b668:	024000c4 	movi	r9,3
  80b66c:	003f6606 	br	80b408 <__alt_data_end+0xff80b408>
  80b670:	01400434 	movhi	r5,16
  80b674:	0007883a 	mov	r3,zero
  80b678:	297fffc4 	addi	r5,r5,-1
  80b67c:	04bfffc4 	movi	r18,-1
  80b680:	0081ffc4 	movi	r2,2047
  80b684:	003fa106 	br	80b50c <__alt_data_end+0xff80b50c>
  80b688:	00c00044 	movi	r3,1
  80b68c:	1887c83a 	sub	r3,r3,r2
  80b690:	01000e04 	movi	r4,56
  80b694:	20c1210e 	bge	r4,r3,80bb1c <__divdf3+0x78c>
  80b698:	98c0004c 	andi	r3,r19,1
  80b69c:	0005883a 	mov	r2,zero
  80b6a0:	000b883a 	mov	r5,zero
  80b6a4:	0025883a 	mov	r18,zero
  80b6a8:	003f9806 	br	80b50c <__alt_data_end+0xff80b50c>
  80b6ac:	8c00fd36 	bltu	r17,r16,80baa4 <__divdf3+0x714>
  80b6b0:	8440fb26 	beq	r16,r17,80baa0 <__divdf3+0x710>
  80b6b4:	8007883a 	mov	r3,r16
  80b6b8:	ad7fffc4 	addi	r21,r21,-1
  80b6bc:	0021883a 	mov	r16,zero
  80b6c0:	4004d63a 	srli	r2,r8,24
  80b6c4:	8822923a 	slli	r17,r17,8
  80b6c8:	1809883a 	mov	r4,r3
  80b6cc:	402c923a 	slli	r22,r8,8
  80b6d0:	88b8b03a 	or	fp,r17,r2
  80b6d4:	e028d43a 	srli	r20,fp,16
  80b6d8:	d8c00015 	stw	r3,0(sp)
  80b6dc:	e5ffffcc 	andi	r23,fp,65535
  80b6e0:	a00b883a 	mov	r5,r20
  80b6e4:	080aa280 	call	80aa28 <__udivsi3>
  80b6e8:	d8c00017 	ldw	r3,0(sp)
  80b6ec:	a00b883a 	mov	r5,r20
  80b6f0:	d8800315 	stw	r2,12(sp)
  80b6f4:	1809883a 	mov	r4,r3
  80b6f8:	080aa8c0 	call	80aa8c <__umodsi3>
  80b6fc:	d9800317 	ldw	r6,12(sp)
  80b700:	1006943a 	slli	r3,r2,16
  80b704:	9004d43a 	srli	r2,r18,16
  80b708:	b9a3383a 	mul	r17,r23,r6
  80b70c:	10c4b03a 	or	r2,r2,r3
  80b710:	1440062e 	bgeu	r2,r17,80b72c <__divdf3+0x39c>
  80b714:	1705883a 	add	r2,r2,fp
  80b718:	30ffffc4 	addi	r3,r6,-1
  80b71c:	1700ee36 	bltu	r2,fp,80bad8 <__divdf3+0x748>
  80b720:	1440ed2e 	bgeu	r2,r17,80bad8 <__divdf3+0x748>
  80b724:	31bfff84 	addi	r6,r6,-2
  80b728:	1705883a 	add	r2,r2,fp
  80b72c:	1463c83a 	sub	r17,r2,r17
  80b730:	a00b883a 	mov	r5,r20
  80b734:	8809883a 	mov	r4,r17
  80b738:	d9800315 	stw	r6,12(sp)
  80b73c:	080aa280 	call	80aa28 <__udivsi3>
  80b740:	a00b883a 	mov	r5,r20
  80b744:	8809883a 	mov	r4,r17
  80b748:	d8800215 	stw	r2,8(sp)
  80b74c:	080aa8c0 	call	80aa8c <__umodsi3>
  80b750:	d9c00217 	ldw	r7,8(sp)
  80b754:	1004943a 	slli	r2,r2,16
  80b758:	94bfffcc 	andi	r18,r18,65535
  80b75c:	b9d1383a 	mul	r8,r23,r7
  80b760:	90a4b03a 	or	r18,r18,r2
  80b764:	d9800317 	ldw	r6,12(sp)
  80b768:	9200062e 	bgeu	r18,r8,80b784 <__divdf3+0x3f4>
  80b76c:	9725883a 	add	r18,r18,fp
  80b770:	38bfffc4 	addi	r2,r7,-1
  80b774:	9700d636 	bltu	r18,fp,80bad0 <__divdf3+0x740>
  80b778:	9200d52e 	bgeu	r18,r8,80bad0 <__divdf3+0x740>
  80b77c:	39ffff84 	addi	r7,r7,-2
  80b780:	9725883a 	add	r18,r18,fp
  80b784:	3004943a 	slli	r2,r6,16
  80b788:	b012d43a 	srli	r9,r22,16
  80b78c:	b1bfffcc 	andi	r6,r22,65535
  80b790:	11e2b03a 	or	r17,r2,r7
  80b794:	8806d43a 	srli	r3,r17,16
  80b798:	893fffcc 	andi	r4,r17,65535
  80b79c:	218b383a 	mul	r5,r4,r6
  80b7a0:	30c5383a 	mul	r2,r6,r3
  80b7a4:	2249383a 	mul	r4,r4,r9
  80b7a8:	280ed43a 	srli	r7,r5,16
  80b7ac:	9225c83a 	sub	r18,r18,r8
  80b7b0:	2089883a 	add	r4,r4,r2
  80b7b4:	3909883a 	add	r4,r7,r4
  80b7b8:	1a47383a 	mul	r3,r3,r9
  80b7bc:	2080022e 	bgeu	r4,r2,80b7c8 <__divdf3+0x438>
  80b7c0:	00800074 	movhi	r2,1
  80b7c4:	1887883a 	add	r3,r3,r2
  80b7c8:	2004d43a 	srli	r2,r4,16
  80b7cc:	2008943a 	slli	r4,r4,16
  80b7d0:	297fffcc 	andi	r5,r5,65535
  80b7d4:	10c7883a 	add	r3,r2,r3
  80b7d8:	2149883a 	add	r4,r4,r5
  80b7dc:	90c0a536 	bltu	r18,r3,80ba74 <__divdf3+0x6e4>
  80b7e0:	90c0bf26 	beq	r18,r3,80bae0 <__divdf3+0x750>
  80b7e4:	90c7c83a 	sub	r3,r18,r3
  80b7e8:	810fc83a 	sub	r7,r16,r4
  80b7ec:	81e5803a 	cmpltu	r18,r16,r7
  80b7f0:	1ca5c83a 	sub	r18,r3,r18
  80b7f4:	e480c126 	beq	fp,r18,80bafc <__divdf3+0x76c>
  80b7f8:	a00b883a 	mov	r5,r20
  80b7fc:	9009883a 	mov	r4,r18
  80b800:	d9800315 	stw	r6,12(sp)
  80b804:	d9c00215 	stw	r7,8(sp)
  80b808:	da400115 	stw	r9,4(sp)
  80b80c:	080aa280 	call	80aa28 <__udivsi3>
  80b810:	a00b883a 	mov	r5,r20
  80b814:	9009883a 	mov	r4,r18
  80b818:	d8800015 	stw	r2,0(sp)
  80b81c:	080aa8c0 	call	80aa8c <__umodsi3>
  80b820:	d9c00217 	ldw	r7,8(sp)
  80b824:	da000017 	ldw	r8,0(sp)
  80b828:	1006943a 	slli	r3,r2,16
  80b82c:	3804d43a 	srli	r2,r7,16
  80b830:	ba21383a 	mul	r16,r23,r8
  80b834:	d9800317 	ldw	r6,12(sp)
  80b838:	10c4b03a 	or	r2,r2,r3
  80b83c:	da400117 	ldw	r9,4(sp)
  80b840:	1400062e 	bgeu	r2,r16,80b85c <__divdf3+0x4cc>
  80b844:	1705883a 	add	r2,r2,fp
  80b848:	40ffffc4 	addi	r3,r8,-1
  80b84c:	1700ad36 	bltu	r2,fp,80bb04 <__divdf3+0x774>
  80b850:	1400ac2e 	bgeu	r2,r16,80bb04 <__divdf3+0x774>
  80b854:	423fff84 	addi	r8,r8,-2
  80b858:	1705883a 	add	r2,r2,fp
  80b85c:	1421c83a 	sub	r16,r2,r16
  80b860:	a00b883a 	mov	r5,r20
  80b864:	8009883a 	mov	r4,r16
  80b868:	d9800315 	stw	r6,12(sp)
  80b86c:	d9c00215 	stw	r7,8(sp)
  80b870:	da000015 	stw	r8,0(sp)
  80b874:	da400115 	stw	r9,4(sp)
  80b878:	080aa280 	call	80aa28 <__udivsi3>
  80b87c:	8009883a 	mov	r4,r16
  80b880:	a00b883a 	mov	r5,r20
  80b884:	1025883a 	mov	r18,r2
  80b888:	080aa8c0 	call	80aa8c <__umodsi3>
  80b88c:	d9c00217 	ldw	r7,8(sp)
  80b890:	1004943a 	slli	r2,r2,16
  80b894:	bcaf383a 	mul	r23,r23,r18
  80b898:	393fffcc 	andi	r4,r7,65535
  80b89c:	2088b03a 	or	r4,r4,r2
  80b8a0:	d9800317 	ldw	r6,12(sp)
  80b8a4:	da000017 	ldw	r8,0(sp)
  80b8a8:	da400117 	ldw	r9,4(sp)
  80b8ac:	25c0062e 	bgeu	r4,r23,80b8c8 <__divdf3+0x538>
  80b8b0:	2709883a 	add	r4,r4,fp
  80b8b4:	90bfffc4 	addi	r2,r18,-1
  80b8b8:	27009436 	bltu	r4,fp,80bb0c <__divdf3+0x77c>
  80b8bc:	25c0932e 	bgeu	r4,r23,80bb0c <__divdf3+0x77c>
  80b8c0:	94bfff84 	addi	r18,r18,-2
  80b8c4:	2709883a 	add	r4,r4,fp
  80b8c8:	4004943a 	slli	r2,r8,16
  80b8cc:	25efc83a 	sub	r23,r4,r23
  80b8d0:	1490b03a 	or	r8,r2,r18
  80b8d4:	4008d43a 	srli	r4,r8,16
  80b8d8:	40ffffcc 	andi	r3,r8,65535
  80b8dc:	30c5383a 	mul	r2,r6,r3
  80b8e0:	1a47383a 	mul	r3,r3,r9
  80b8e4:	310d383a 	mul	r6,r6,r4
  80b8e8:	100ad43a 	srli	r5,r2,16
  80b8ec:	4913383a 	mul	r9,r9,r4
  80b8f0:	1987883a 	add	r3,r3,r6
  80b8f4:	28c7883a 	add	r3,r5,r3
  80b8f8:	1980022e 	bgeu	r3,r6,80b904 <__divdf3+0x574>
  80b8fc:	01000074 	movhi	r4,1
  80b900:	4913883a 	add	r9,r9,r4
  80b904:	1808d43a 	srli	r4,r3,16
  80b908:	1806943a 	slli	r3,r3,16
  80b90c:	10bfffcc 	andi	r2,r2,65535
  80b910:	2253883a 	add	r9,r4,r9
  80b914:	1887883a 	add	r3,r3,r2
  80b918:	ba403836 	bltu	r23,r9,80b9fc <__divdf3+0x66c>
  80b91c:	ba403626 	beq	r23,r9,80b9f8 <__divdf3+0x668>
  80b920:	42000054 	ori	r8,r8,1
  80b924:	a880ffc4 	addi	r2,r21,1023
  80b928:	00bf570e 	bge	zero,r2,80b688 <__alt_data_end+0xff80b688>
  80b92c:	40c001cc 	andi	r3,r8,7
  80b930:	18000726 	beq	r3,zero,80b950 <__divdf3+0x5c0>
  80b934:	40c003cc 	andi	r3,r8,15
  80b938:	01000104 	movi	r4,4
  80b93c:	19000426 	beq	r3,r4,80b950 <__divdf3+0x5c0>
  80b940:	4107883a 	add	r3,r8,r4
  80b944:	1a11803a 	cmpltu	r8,r3,r8
  80b948:	8a23883a 	add	r17,r17,r8
  80b94c:	1811883a 	mov	r8,r3
  80b950:	88c0402c 	andhi	r3,r17,256
  80b954:	18000426 	beq	r3,zero,80b968 <__divdf3+0x5d8>
  80b958:	00ffc034 	movhi	r3,65280
  80b95c:	18ffffc4 	addi	r3,r3,-1
  80b960:	a8810004 	addi	r2,r21,1024
  80b964:	88e2703a 	and	r17,r17,r3
  80b968:	00c1ff84 	movi	r3,2046
  80b96c:	18bee316 	blt	r3,r2,80b4fc <__alt_data_end+0xff80b4fc>
  80b970:	8824977a 	slli	r18,r17,29
  80b974:	4010d0fa 	srli	r8,r8,3
  80b978:	8822927a 	slli	r17,r17,9
  80b97c:	1081ffcc 	andi	r2,r2,2047
  80b980:	9224b03a 	or	r18,r18,r8
  80b984:	880ad33a 	srli	r5,r17,12
  80b988:	98c0004c 	andi	r3,r19,1
  80b98c:	003edf06 	br	80b50c <__alt_data_end+0xff80b50c>
  80b990:	8080022c 	andhi	r2,r16,8
  80b994:	10001226 	beq	r2,zero,80b9e0 <__divdf3+0x650>
  80b998:	8880022c 	andhi	r2,r17,8
  80b99c:	1000101e 	bne	r2,zero,80b9e0 <__divdf3+0x650>
  80b9a0:	00800434 	movhi	r2,16
  80b9a4:	89400234 	orhi	r5,r17,8
  80b9a8:	10bfffc4 	addi	r2,r2,-1
  80b9ac:	b007883a 	mov	r3,r22
  80b9b0:	288a703a 	and	r5,r5,r2
  80b9b4:	4025883a 	mov	r18,r8
  80b9b8:	003f3106 	br	80b680 <__alt_data_end+0xff80b680>
  80b9bc:	008000c4 	movi	r2,3
  80b9c0:	3880a626 	beq	r7,r2,80bc5c <__divdf3+0x8cc>
  80b9c4:	00800044 	movi	r2,1
  80b9c8:	3880521e 	bne	r7,r2,80bb14 <__divdf3+0x784>
  80b9cc:	b807883a 	mov	r3,r23
  80b9d0:	0005883a 	mov	r2,zero
  80b9d4:	000b883a 	mov	r5,zero
  80b9d8:	0025883a 	mov	r18,zero
  80b9dc:	003ecb06 	br	80b50c <__alt_data_end+0xff80b50c>
  80b9e0:	00800434 	movhi	r2,16
  80b9e4:	81400234 	orhi	r5,r16,8
  80b9e8:	10bfffc4 	addi	r2,r2,-1
  80b9ec:	a007883a 	mov	r3,r20
  80b9f0:	288a703a 	and	r5,r5,r2
  80b9f4:	003f2206 	br	80b680 <__alt_data_end+0xff80b680>
  80b9f8:	183fca26 	beq	r3,zero,80b924 <__alt_data_end+0xff80b924>
  80b9fc:	e5ef883a 	add	r23,fp,r23
  80ba00:	40bfffc4 	addi	r2,r8,-1
  80ba04:	bf00392e 	bgeu	r23,fp,80baec <__divdf3+0x75c>
  80ba08:	1011883a 	mov	r8,r2
  80ba0c:	ba7fc41e 	bne	r23,r9,80b920 <__alt_data_end+0xff80b920>
  80ba10:	b0ffc31e 	bne	r22,r3,80b920 <__alt_data_end+0xff80b920>
  80ba14:	003fc306 	br	80b924 <__alt_data_end+0xff80b924>
  80ba18:	143ff604 	addi	r16,r2,-40
  80ba1c:	9c20983a 	sll	r16,r19,r16
  80ba20:	0025883a 	mov	r18,zero
  80ba24:	003ee206 	br	80b5b0 <__alt_data_end+0xff80b5b0>
  80ba28:	d9800315 	stw	r6,12(sp)
  80ba2c:	d9c00215 	stw	r7,8(sp)
  80ba30:	08007c80 	call	8007c8 <__clzsi2>
  80ba34:	10800804 	addi	r2,r2,32
  80ba38:	d9c00217 	ldw	r7,8(sp)
  80ba3c:	d9800317 	ldw	r6,12(sp)
  80ba40:	003ed106 	br	80b588 <__alt_data_end+0xff80b588>
  80ba44:	147ff604 	addi	r17,r2,-40
  80ba48:	3462983a 	sll	r17,r6,r17
  80ba4c:	0011883a 	mov	r8,zero
  80ba50:	003ef506 	br	80b628 <__alt_data_end+0xff80b628>
  80ba54:	3009883a 	mov	r4,r6
  80ba58:	d9800315 	stw	r6,12(sp)
  80ba5c:	da400115 	stw	r9,4(sp)
  80ba60:	08007c80 	call	8007c8 <__clzsi2>
  80ba64:	10800804 	addi	r2,r2,32
  80ba68:	da400117 	ldw	r9,4(sp)
  80ba6c:	d9800317 	ldw	r6,12(sp)
  80ba70:	003ee306 	br	80b600 <__alt_data_end+0xff80b600>
  80ba74:	85a1883a 	add	r16,r16,r22
  80ba78:	8585803a 	cmpltu	r2,r16,r22
  80ba7c:	1705883a 	add	r2,r2,fp
  80ba80:	14a5883a 	add	r18,r2,r18
  80ba84:	88bfffc4 	addi	r2,r17,-1
  80ba88:	e4800c2e 	bgeu	fp,r18,80babc <__divdf3+0x72c>
  80ba8c:	90c03e36 	bltu	r18,r3,80bb88 <__divdf3+0x7f8>
  80ba90:	1c806926 	beq	r3,r18,80bc38 <__divdf3+0x8a8>
  80ba94:	90c7c83a 	sub	r3,r18,r3
  80ba98:	1023883a 	mov	r17,r2
  80ba9c:	003f5206 	br	80b7e8 <__alt_data_end+0xff80b7e8>
  80baa0:	923f0436 	bltu	r18,r8,80b6b4 <__alt_data_end+0xff80b6b4>
  80baa4:	800897fa 	slli	r4,r16,31
  80baa8:	9004d07a 	srli	r2,r18,1
  80baac:	8006d07a 	srli	r3,r16,1
  80bab0:	902097fa 	slli	r16,r18,31
  80bab4:	20a4b03a 	or	r18,r4,r2
  80bab8:	003f0106 	br	80b6c0 <__alt_data_end+0xff80b6c0>
  80babc:	e4bff51e 	bne	fp,r18,80ba94 <__alt_data_end+0xff80ba94>
  80bac0:	85bff22e 	bgeu	r16,r22,80ba8c <__alt_data_end+0xff80ba8c>
  80bac4:	e0c7c83a 	sub	r3,fp,r3
  80bac8:	1023883a 	mov	r17,r2
  80bacc:	003f4606 	br	80b7e8 <__alt_data_end+0xff80b7e8>
  80bad0:	100f883a 	mov	r7,r2
  80bad4:	003f2b06 	br	80b784 <__alt_data_end+0xff80b784>
  80bad8:	180d883a 	mov	r6,r3
  80badc:	003f1306 	br	80b72c <__alt_data_end+0xff80b72c>
  80bae0:	813fe436 	bltu	r16,r4,80ba74 <__alt_data_end+0xff80ba74>
  80bae4:	0007883a 	mov	r3,zero
  80bae8:	003f3f06 	br	80b7e8 <__alt_data_end+0xff80b7e8>
  80baec:	ba402c36 	bltu	r23,r9,80bba0 <__divdf3+0x810>
  80baf0:	4dc05426 	beq	r9,r23,80bc44 <__divdf3+0x8b4>
  80baf4:	1011883a 	mov	r8,r2
  80baf8:	003f8906 	br	80b920 <__alt_data_end+0xff80b920>
  80bafc:	023fffc4 	movi	r8,-1
  80bb00:	003f8806 	br	80b924 <__alt_data_end+0xff80b924>
  80bb04:	1811883a 	mov	r8,r3
  80bb08:	003f5406 	br	80b85c <__alt_data_end+0xff80b85c>
  80bb0c:	1025883a 	mov	r18,r2
  80bb10:	003f6d06 	br	80b8c8 <__alt_data_end+0xff80b8c8>
  80bb14:	b827883a 	mov	r19,r23
  80bb18:	003f8206 	br	80b924 <__alt_data_end+0xff80b924>
  80bb1c:	010007c4 	movi	r4,31
  80bb20:	20c02616 	blt	r4,r3,80bbbc <__divdf3+0x82c>
  80bb24:	00800804 	movi	r2,32
  80bb28:	10c5c83a 	sub	r2,r2,r3
  80bb2c:	888a983a 	sll	r5,r17,r2
  80bb30:	40c8d83a 	srl	r4,r8,r3
  80bb34:	4084983a 	sll	r2,r8,r2
  80bb38:	88e2d83a 	srl	r17,r17,r3
  80bb3c:	2906b03a 	or	r3,r5,r4
  80bb40:	1004c03a 	cmpne	r2,r2,zero
  80bb44:	1886b03a 	or	r3,r3,r2
  80bb48:	188001cc 	andi	r2,r3,7
  80bb4c:	10000726 	beq	r2,zero,80bb6c <__divdf3+0x7dc>
  80bb50:	188003cc 	andi	r2,r3,15
  80bb54:	01000104 	movi	r4,4
  80bb58:	11000426 	beq	r2,r4,80bb6c <__divdf3+0x7dc>
  80bb5c:	1805883a 	mov	r2,r3
  80bb60:	10c00104 	addi	r3,r2,4
  80bb64:	1885803a 	cmpltu	r2,r3,r2
  80bb68:	88a3883a 	add	r17,r17,r2
  80bb6c:	8880202c 	andhi	r2,r17,128
  80bb70:	10002726 	beq	r2,zero,80bc10 <__divdf3+0x880>
  80bb74:	98c0004c 	andi	r3,r19,1
  80bb78:	00800044 	movi	r2,1
  80bb7c:	000b883a 	mov	r5,zero
  80bb80:	0025883a 	mov	r18,zero
  80bb84:	003e6106 	br	80b50c <__alt_data_end+0xff80b50c>
  80bb88:	85a1883a 	add	r16,r16,r22
  80bb8c:	8585803a 	cmpltu	r2,r16,r22
  80bb90:	1705883a 	add	r2,r2,fp
  80bb94:	14a5883a 	add	r18,r2,r18
  80bb98:	8c7fff84 	addi	r17,r17,-2
  80bb9c:	003f1106 	br	80b7e4 <__alt_data_end+0xff80b7e4>
  80bba0:	b589883a 	add	r4,r22,r22
  80bba4:	25ad803a 	cmpltu	r22,r4,r22
  80bba8:	b739883a 	add	fp,r22,fp
  80bbac:	40bfff84 	addi	r2,r8,-2
  80bbb0:	bf2f883a 	add	r23,r23,fp
  80bbb4:	202d883a 	mov	r22,r4
  80bbb8:	003f9306 	br	80ba08 <__alt_data_end+0xff80ba08>
  80bbbc:	013ff844 	movi	r4,-31
  80bbc0:	2085c83a 	sub	r2,r4,r2
  80bbc4:	8888d83a 	srl	r4,r17,r2
  80bbc8:	00800804 	movi	r2,32
  80bbcc:	18802126 	beq	r3,r2,80bc54 <__divdf3+0x8c4>
  80bbd0:	00801004 	movi	r2,64
  80bbd4:	10c5c83a 	sub	r2,r2,r3
  80bbd8:	8884983a 	sll	r2,r17,r2
  80bbdc:	1204b03a 	or	r2,r2,r8
  80bbe0:	1004c03a 	cmpne	r2,r2,zero
  80bbe4:	2084b03a 	or	r2,r4,r2
  80bbe8:	144001cc 	andi	r17,r2,7
  80bbec:	88000d1e 	bne	r17,zero,80bc24 <__divdf3+0x894>
  80bbf0:	000b883a 	mov	r5,zero
  80bbf4:	1024d0fa 	srli	r18,r2,3
  80bbf8:	98c0004c 	andi	r3,r19,1
  80bbfc:	0005883a 	mov	r2,zero
  80bc00:	9464b03a 	or	r18,r18,r17
  80bc04:	003e4106 	br	80b50c <__alt_data_end+0xff80b50c>
  80bc08:	1007883a 	mov	r3,r2
  80bc0c:	0023883a 	mov	r17,zero
  80bc10:	880a927a 	slli	r5,r17,9
  80bc14:	1805883a 	mov	r2,r3
  80bc18:	8822977a 	slli	r17,r17,29
  80bc1c:	280ad33a 	srli	r5,r5,12
  80bc20:	003ff406 	br	80bbf4 <__alt_data_end+0xff80bbf4>
  80bc24:	10c003cc 	andi	r3,r2,15
  80bc28:	01000104 	movi	r4,4
  80bc2c:	193ff626 	beq	r3,r4,80bc08 <__alt_data_end+0xff80bc08>
  80bc30:	0023883a 	mov	r17,zero
  80bc34:	003fca06 	br	80bb60 <__alt_data_end+0xff80bb60>
  80bc38:	813fd336 	bltu	r16,r4,80bb88 <__alt_data_end+0xff80bb88>
  80bc3c:	1023883a 	mov	r17,r2
  80bc40:	003fa806 	br	80bae4 <__alt_data_end+0xff80bae4>
  80bc44:	b0ffd636 	bltu	r22,r3,80bba0 <__alt_data_end+0xff80bba0>
  80bc48:	1011883a 	mov	r8,r2
  80bc4c:	b0ff341e 	bne	r22,r3,80b920 <__alt_data_end+0xff80b920>
  80bc50:	003f3406 	br	80b924 <__alt_data_end+0xff80b924>
  80bc54:	0005883a 	mov	r2,zero
  80bc58:	003fe006 	br	80bbdc <__alt_data_end+0xff80bbdc>
  80bc5c:	00800434 	movhi	r2,16
  80bc60:	89400234 	orhi	r5,r17,8
  80bc64:	10bfffc4 	addi	r2,r2,-1
  80bc68:	b807883a 	mov	r3,r23
  80bc6c:	288a703a 	and	r5,r5,r2
  80bc70:	4025883a 	mov	r18,r8
  80bc74:	003e8206 	br	80b680 <__alt_data_end+0xff80b680>

0080bc78 <__eqdf2>:
  80bc78:	2804d53a 	srli	r2,r5,20
  80bc7c:	3806d53a 	srli	r3,r7,20
  80bc80:	02000434 	movhi	r8,16
  80bc84:	423fffc4 	addi	r8,r8,-1
  80bc88:	1081ffcc 	andi	r2,r2,2047
  80bc8c:	0281ffc4 	movi	r10,2047
  80bc90:	2a12703a 	and	r9,r5,r8
  80bc94:	18c1ffcc 	andi	r3,r3,2047
  80bc98:	3a10703a 	and	r8,r7,r8
  80bc9c:	280ad7fa 	srli	r5,r5,31
  80bca0:	380ed7fa 	srli	r7,r7,31
  80bca4:	12801026 	beq	r2,r10,80bce8 <__eqdf2+0x70>
  80bca8:	0281ffc4 	movi	r10,2047
  80bcac:	1a800a26 	beq	r3,r10,80bcd8 <__eqdf2+0x60>
  80bcb0:	10c00226 	beq	r2,r3,80bcbc <__eqdf2+0x44>
  80bcb4:	00800044 	movi	r2,1
  80bcb8:	f800283a 	ret
  80bcbc:	4a3ffd1e 	bne	r9,r8,80bcb4 <__alt_data_end+0xff80bcb4>
  80bcc0:	21bffc1e 	bne	r4,r6,80bcb4 <__alt_data_end+0xff80bcb4>
  80bcc4:	29c00c26 	beq	r5,r7,80bcf8 <__eqdf2+0x80>
  80bcc8:	103ffa1e 	bne	r2,zero,80bcb4 <__alt_data_end+0xff80bcb4>
  80bccc:	2244b03a 	or	r2,r4,r9
  80bcd0:	1004c03a 	cmpne	r2,r2,zero
  80bcd4:	f800283a 	ret
  80bcd8:	3214b03a 	or	r10,r6,r8
  80bcdc:	503ff426 	beq	r10,zero,80bcb0 <__alt_data_end+0xff80bcb0>
  80bce0:	00800044 	movi	r2,1
  80bce4:	f800283a 	ret
  80bce8:	2254b03a 	or	r10,r4,r9
  80bcec:	503fee26 	beq	r10,zero,80bca8 <__alt_data_end+0xff80bca8>
  80bcf0:	00800044 	movi	r2,1
  80bcf4:	f800283a 	ret
  80bcf8:	0005883a 	mov	r2,zero
  80bcfc:	f800283a 	ret

0080bd00 <__gedf2>:
  80bd00:	2804d53a 	srli	r2,r5,20
  80bd04:	3806d53a 	srli	r3,r7,20
  80bd08:	02000434 	movhi	r8,16
  80bd0c:	423fffc4 	addi	r8,r8,-1
  80bd10:	1081ffcc 	andi	r2,r2,2047
  80bd14:	0241ffc4 	movi	r9,2047
  80bd18:	2a14703a 	and	r10,r5,r8
  80bd1c:	18c1ffcc 	andi	r3,r3,2047
  80bd20:	3a10703a 	and	r8,r7,r8
  80bd24:	280ad7fa 	srli	r5,r5,31
  80bd28:	380ed7fa 	srli	r7,r7,31
  80bd2c:	12401d26 	beq	r2,r9,80bda4 <__gedf2+0xa4>
  80bd30:	0241ffc4 	movi	r9,2047
  80bd34:	1a401226 	beq	r3,r9,80bd80 <__gedf2+0x80>
  80bd38:	1000081e 	bne	r2,zero,80bd5c <__gedf2+0x5c>
  80bd3c:	2296b03a 	or	r11,r4,r10
  80bd40:	5813003a 	cmpeq	r9,r11,zero
  80bd44:	1800091e 	bne	r3,zero,80bd6c <__gedf2+0x6c>
  80bd48:	3218b03a 	or	r12,r6,r8
  80bd4c:	6000071e 	bne	r12,zero,80bd6c <__gedf2+0x6c>
  80bd50:	0005883a 	mov	r2,zero
  80bd54:	5800101e 	bne	r11,zero,80bd98 <__gedf2+0x98>
  80bd58:	f800283a 	ret
  80bd5c:	18000c1e 	bne	r3,zero,80bd90 <__gedf2+0x90>
  80bd60:	3212b03a 	or	r9,r6,r8
  80bd64:	48000c26 	beq	r9,zero,80bd98 <__gedf2+0x98>
  80bd68:	0013883a 	mov	r9,zero
  80bd6c:	39c03fcc 	andi	r7,r7,255
  80bd70:	48000826 	beq	r9,zero,80bd94 <__gedf2+0x94>
  80bd74:	38000926 	beq	r7,zero,80bd9c <__gedf2+0x9c>
  80bd78:	00800044 	movi	r2,1
  80bd7c:	f800283a 	ret
  80bd80:	3212b03a 	or	r9,r6,r8
  80bd84:	483fec26 	beq	r9,zero,80bd38 <__alt_data_end+0xff80bd38>
  80bd88:	00bfff84 	movi	r2,-2
  80bd8c:	f800283a 	ret
  80bd90:	39c03fcc 	andi	r7,r7,255
  80bd94:	29c00626 	beq	r5,r7,80bdb0 <__gedf2+0xb0>
  80bd98:	283ff726 	beq	r5,zero,80bd78 <__alt_data_end+0xff80bd78>
  80bd9c:	00bfffc4 	movi	r2,-1
  80bda0:	f800283a 	ret
  80bda4:	2292b03a 	or	r9,r4,r10
  80bda8:	483fe126 	beq	r9,zero,80bd30 <__alt_data_end+0xff80bd30>
  80bdac:	003ff606 	br	80bd88 <__alt_data_end+0xff80bd88>
  80bdb0:	18bff916 	blt	r3,r2,80bd98 <__alt_data_end+0xff80bd98>
  80bdb4:	10c00316 	blt	r2,r3,80bdc4 <__gedf2+0xc4>
  80bdb8:	42bff736 	bltu	r8,r10,80bd98 <__alt_data_end+0xff80bd98>
  80bdbc:	52000326 	beq	r10,r8,80bdcc <__gedf2+0xcc>
  80bdc0:	5200042e 	bgeu	r10,r8,80bdd4 <__gedf2+0xd4>
  80bdc4:	283fec1e 	bne	r5,zero,80bd78 <__alt_data_end+0xff80bd78>
  80bdc8:	003ff406 	br	80bd9c <__alt_data_end+0xff80bd9c>
  80bdcc:	313ff236 	bltu	r6,r4,80bd98 <__alt_data_end+0xff80bd98>
  80bdd0:	21bffc36 	bltu	r4,r6,80bdc4 <__alt_data_end+0xff80bdc4>
  80bdd4:	0005883a 	mov	r2,zero
  80bdd8:	f800283a 	ret

0080bddc <__ledf2>:
  80bddc:	2804d53a 	srli	r2,r5,20
  80bde0:	3810d53a 	srli	r8,r7,20
  80bde4:	00c00434 	movhi	r3,16
  80bde8:	18ffffc4 	addi	r3,r3,-1
  80bdec:	1081ffcc 	andi	r2,r2,2047
  80bdf0:	0241ffc4 	movi	r9,2047
  80bdf4:	28d4703a 	and	r10,r5,r3
  80bdf8:	4201ffcc 	andi	r8,r8,2047
  80bdfc:	38c6703a 	and	r3,r7,r3
  80be00:	280ad7fa 	srli	r5,r5,31
  80be04:	380ed7fa 	srli	r7,r7,31
  80be08:	12401f26 	beq	r2,r9,80be88 <__ledf2+0xac>
  80be0c:	0241ffc4 	movi	r9,2047
  80be10:	42401426 	beq	r8,r9,80be64 <__ledf2+0x88>
  80be14:	1000091e 	bne	r2,zero,80be3c <__ledf2+0x60>
  80be18:	2296b03a 	or	r11,r4,r10
  80be1c:	5813003a 	cmpeq	r9,r11,zero
  80be20:	29403fcc 	andi	r5,r5,255
  80be24:	40000a1e 	bne	r8,zero,80be50 <__ledf2+0x74>
  80be28:	30d8b03a 	or	r12,r6,r3
  80be2c:	6000081e 	bne	r12,zero,80be50 <__ledf2+0x74>
  80be30:	0005883a 	mov	r2,zero
  80be34:	5800111e 	bne	r11,zero,80be7c <__ledf2+0xa0>
  80be38:	f800283a 	ret
  80be3c:	29403fcc 	andi	r5,r5,255
  80be40:	40000c1e 	bne	r8,zero,80be74 <__ledf2+0x98>
  80be44:	30d2b03a 	or	r9,r6,r3
  80be48:	48000c26 	beq	r9,zero,80be7c <__ledf2+0xa0>
  80be4c:	0013883a 	mov	r9,zero
  80be50:	39c03fcc 	andi	r7,r7,255
  80be54:	48000826 	beq	r9,zero,80be78 <__ledf2+0x9c>
  80be58:	38001126 	beq	r7,zero,80bea0 <__ledf2+0xc4>
  80be5c:	00800044 	movi	r2,1
  80be60:	f800283a 	ret
  80be64:	30d2b03a 	or	r9,r6,r3
  80be68:	483fea26 	beq	r9,zero,80be14 <__alt_data_end+0xff80be14>
  80be6c:	00800084 	movi	r2,2
  80be70:	f800283a 	ret
  80be74:	39c03fcc 	andi	r7,r7,255
  80be78:	39400726 	beq	r7,r5,80be98 <__ledf2+0xbc>
  80be7c:	2800081e 	bne	r5,zero,80bea0 <__ledf2+0xc4>
  80be80:	00800044 	movi	r2,1
  80be84:	f800283a 	ret
  80be88:	2292b03a 	or	r9,r4,r10
  80be8c:	483fdf26 	beq	r9,zero,80be0c <__alt_data_end+0xff80be0c>
  80be90:	00800084 	movi	r2,2
  80be94:	f800283a 	ret
  80be98:	4080030e 	bge	r8,r2,80bea8 <__ledf2+0xcc>
  80be9c:	383fef26 	beq	r7,zero,80be5c <__alt_data_end+0xff80be5c>
  80bea0:	00bfffc4 	movi	r2,-1
  80bea4:	f800283a 	ret
  80bea8:	123feb16 	blt	r2,r8,80be58 <__alt_data_end+0xff80be58>
  80beac:	1abff336 	bltu	r3,r10,80be7c <__alt_data_end+0xff80be7c>
  80beb0:	50c00326 	beq	r10,r3,80bec0 <__ledf2+0xe4>
  80beb4:	50c0042e 	bgeu	r10,r3,80bec8 <__ledf2+0xec>
  80beb8:	283fe81e 	bne	r5,zero,80be5c <__alt_data_end+0xff80be5c>
  80bebc:	003ff806 	br	80bea0 <__alt_data_end+0xff80bea0>
  80bec0:	313fee36 	bltu	r6,r4,80be7c <__alt_data_end+0xff80be7c>
  80bec4:	21bffc36 	bltu	r4,r6,80beb8 <__alt_data_end+0xff80beb8>
  80bec8:	0005883a 	mov	r2,zero
  80becc:	f800283a 	ret

0080bed0 <__muldf3>:
  80bed0:	defff304 	addi	sp,sp,-52
  80bed4:	2804d53a 	srli	r2,r5,20
  80bed8:	dd800915 	stw	r22,36(sp)
  80bedc:	282cd7fa 	srli	r22,r5,31
  80bee0:	dc000315 	stw	r16,12(sp)
  80bee4:	04000434 	movhi	r16,16
  80bee8:	dd400815 	stw	r21,32(sp)
  80beec:	dc800515 	stw	r18,20(sp)
  80bef0:	843fffc4 	addi	r16,r16,-1
  80bef4:	dfc00c15 	stw	ra,48(sp)
  80bef8:	df000b15 	stw	fp,44(sp)
  80befc:	ddc00a15 	stw	r23,40(sp)
  80bf00:	dd000715 	stw	r20,28(sp)
  80bf04:	dcc00615 	stw	r19,24(sp)
  80bf08:	dc400415 	stw	r17,16(sp)
  80bf0c:	1481ffcc 	andi	r18,r2,2047
  80bf10:	2c20703a 	and	r16,r5,r16
  80bf14:	b02b883a 	mov	r21,r22
  80bf18:	b2403fcc 	andi	r9,r22,255
  80bf1c:	90006026 	beq	r18,zero,80c0a0 <__muldf3+0x1d0>
  80bf20:	0081ffc4 	movi	r2,2047
  80bf24:	2029883a 	mov	r20,r4
  80bf28:	90803626 	beq	r18,r2,80c004 <__muldf3+0x134>
  80bf2c:	80800434 	orhi	r2,r16,16
  80bf30:	100490fa 	slli	r2,r2,3
  80bf34:	2020d77a 	srli	r16,r4,29
  80bf38:	202890fa 	slli	r20,r4,3
  80bf3c:	94bf0044 	addi	r18,r18,-1023
  80bf40:	80a0b03a 	or	r16,r16,r2
  80bf44:	0027883a 	mov	r19,zero
  80bf48:	0039883a 	mov	fp,zero
  80bf4c:	3804d53a 	srli	r2,r7,20
  80bf50:	382ed7fa 	srli	r23,r7,31
  80bf54:	04400434 	movhi	r17,16
  80bf58:	8c7fffc4 	addi	r17,r17,-1
  80bf5c:	1081ffcc 	andi	r2,r2,2047
  80bf60:	3011883a 	mov	r8,r6
  80bf64:	3c62703a 	and	r17,r7,r17
  80bf68:	ba803fcc 	andi	r10,r23,255
  80bf6c:	10006d26 	beq	r2,zero,80c124 <__muldf3+0x254>
  80bf70:	00c1ffc4 	movi	r3,2047
  80bf74:	10c06526 	beq	r2,r3,80c10c <__muldf3+0x23c>
  80bf78:	88c00434 	orhi	r3,r17,16
  80bf7c:	180690fa 	slli	r3,r3,3
  80bf80:	3022d77a 	srli	r17,r6,29
  80bf84:	301090fa 	slli	r8,r6,3
  80bf88:	10bf0044 	addi	r2,r2,-1023
  80bf8c:	88e2b03a 	or	r17,r17,r3
  80bf90:	000b883a 	mov	r5,zero
  80bf94:	9085883a 	add	r2,r18,r2
  80bf98:	2cc8b03a 	or	r4,r5,r19
  80bf9c:	00c003c4 	movi	r3,15
  80bfa0:	bdacf03a 	xor	r22,r23,r22
  80bfa4:	12c00044 	addi	r11,r2,1
  80bfa8:	19009936 	bltu	r3,r4,80c210 <__muldf3+0x340>
  80bfac:	200890ba 	slli	r4,r4,2
  80bfb0:	00c02074 	movhi	r3,129
  80bfb4:	18eff104 	addi	r3,r3,-16444
  80bfb8:	20c9883a 	add	r4,r4,r3
  80bfbc:	20c00017 	ldw	r3,0(r4)
  80bfc0:	1800683a 	jmp	r3
  80bfc4:	0080c210 	cmplti	r2,zero,776
  80bfc8:	0080c024 	muli	r2,zero,768
  80bfcc:	0080c024 	muli	r2,zero,768
  80bfd0:	0080c020 	cmpeqi	r2,zero,768
  80bfd4:	0080c1ec 	andhi	r2,zero,775
  80bfd8:	0080c1ec 	andhi	r2,zero,775
  80bfdc:	0080c1d4 	movui	r2,775
  80bfe0:	0080c020 	cmpeqi	r2,zero,768
  80bfe4:	0080c1ec 	andhi	r2,zero,775
  80bfe8:	0080c1d4 	movui	r2,775
  80bfec:	0080c1ec 	andhi	r2,zero,775
  80bff0:	0080c020 	cmpeqi	r2,zero,768
  80bff4:	0080c1fc 	xorhi	r2,zero,775
  80bff8:	0080c1fc 	xorhi	r2,zero,775
  80bffc:	0080c1fc 	xorhi	r2,zero,775
  80c000:	0080c418 	cmpnei	r2,zero,784
  80c004:	2404b03a 	or	r2,r4,r16
  80c008:	10006f1e 	bne	r2,zero,80c1c8 <__muldf3+0x2f8>
  80c00c:	04c00204 	movi	r19,8
  80c010:	0021883a 	mov	r16,zero
  80c014:	0029883a 	mov	r20,zero
  80c018:	07000084 	movi	fp,2
  80c01c:	003fcb06 	br	80bf4c <__alt_data_end+0xff80bf4c>
  80c020:	502d883a 	mov	r22,r10
  80c024:	00800084 	movi	r2,2
  80c028:	28805726 	beq	r5,r2,80c188 <__muldf3+0x2b8>
  80c02c:	008000c4 	movi	r2,3
  80c030:	28816626 	beq	r5,r2,80c5cc <__muldf3+0x6fc>
  80c034:	00800044 	movi	r2,1
  80c038:	2881411e 	bne	r5,r2,80c540 <__muldf3+0x670>
  80c03c:	b02b883a 	mov	r21,r22
  80c040:	0005883a 	mov	r2,zero
  80c044:	000b883a 	mov	r5,zero
  80c048:	0029883a 	mov	r20,zero
  80c04c:	1004953a 	slli	r2,r2,20
  80c050:	a8c03fcc 	andi	r3,r21,255
  80c054:	04400434 	movhi	r17,16
  80c058:	8c7fffc4 	addi	r17,r17,-1
  80c05c:	180697fa 	slli	r3,r3,31
  80c060:	2c4a703a 	and	r5,r5,r17
  80c064:	288ab03a 	or	r5,r5,r2
  80c068:	28c6b03a 	or	r3,r5,r3
  80c06c:	a005883a 	mov	r2,r20
  80c070:	dfc00c17 	ldw	ra,48(sp)
  80c074:	df000b17 	ldw	fp,44(sp)
  80c078:	ddc00a17 	ldw	r23,40(sp)
  80c07c:	dd800917 	ldw	r22,36(sp)
  80c080:	dd400817 	ldw	r21,32(sp)
  80c084:	dd000717 	ldw	r20,28(sp)
  80c088:	dcc00617 	ldw	r19,24(sp)
  80c08c:	dc800517 	ldw	r18,20(sp)
  80c090:	dc400417 	ldw	r17,16(sp)
  80c094:	dc000317 	ldw	r16,12(sp)
  80c098:	dec00d04 	addi	sp,sp,52
  80c09c:	f800283a 	ret
  80c0a0:	2404b03a 	or	r2,r4,r16
  80c0a4:	2027883a 	mov	r19,r4
  80c0a8:	10004226 	beq	r2,zero,80c1b4 <__muldf3+0x2e4>
  80c0ac:	8000fc26 	beq	r16,zero,80c4a0 <__muldf3+0x5d0>
  80c0b0:	8009883a 	mov	r4,r16
  80c0b4:	d9800215 	stw	r6,8(sp)
  80c0b8:	d9c00015 	stw	r7,0(sp)
  80c0bc:	da400115 	stw	r9,4(sp)
  80c0c0:	08007c80 	call	8007c8 <__clzsi2>
  80c0c4:	d9800217 	ldw	r6,8(sp)
  80c0c8:	d9c00017 	ldw	r7,0(sp)
  80c0cc:	da400117 	ldw	r9,4(sp)
  80c0d0:	113ffd44 	addi	r4,r2,-11
  80c0d4:	00c00704 	movi	r3,28
  80c0d8:	1900ed16 	blt	r3,r4,80c490 <__muldf3+0x5c0>
  80c0dc:	00c00744 	movi	r3,29
  80c0e0:	147ffe04 	addi	r17,r2,-8
  80c0e4:	1907c83a 	sub	r3,r3,r4
  80c0e8:	8460983a 	sll	r16,r16,r17
  80c0ec:	98c6d83a 	srl	r3,r19,r3
  80c0f0:	9c68983a 	sll	r20,r19,r17
  80c0f4:	1c20b03a 	or	r16,r3,r16
  80c0f8:	1080fcc4 	addi	r2,r2,1011
  80c0fc:	00a5c83a 	sub	r18,zero,r2
  80c100:	0027883a 	mov	r19,zero
  80c104:	0039883a 	mov	fp,zero
  80c108:	003f9006 	br	80bf4c <__alt_data_end+0xff80bf4c>
  80c10c:	3446b03a 	or	r3,r6,r17
  80c110:	1800261e 	bne	r3,zero,80c1ac <__muldf3+0x2dc>
  80c114:	0023883a 	mov	r17,zero
  80c118:	0011883a 	mov	r8,zero
  80c11c:	01400084 	movi	r5,2
  80c120:	003f9c06 	br	80bf94 <__alt_data_end+0xff80bf94>
  80c124:	3446b03a 	or	r3,r6,r17
  80c128:	18001c26 	beq	r3,zero,80c19c <__muldf3+0x2cc>
  80c12c:	8800ce26 	beq	r17,zero,80c468 <__muldf3+0x598>
  80c130:	8809883a 	mov	r4,r17
  80c134:	d9800215 	stw	r6,8(sp)
  80c138:	da400115 	stw	r9,4(sp)
  80c13c:	da800015 	stw	r10,0(sp)
  80c140:	08007c80 	call	8007c8 <__clzsi2>
  80c144:	d9800217 	ldw	r6,8(sp)
  80c148:	da400117 	ldw	r9,4(sp)
  80c14c:	da800017 	ldw	r10,0(sp)
  80c150:	113ffd44 	addi	r4,r2,-11
  80c154:	00c00704 	movi	r3,28
  80c158:	1900bf16 	blt	r3,r4,80c458 <__muldf3+0x588>
  80c15c:	00c00744 	movi	r3,29
  80c160:	123ffe04 	addi	r8,r2,-8
  80c164:	1907c83a 	sub	r3,r3,r4
  80c168:	8a22983a 	sll	r17,r17,r8
  80c16c:	30c6d83a 	srl	r3,r6,r3
  80c170:	3210983a 	sll	r8,r6,r8
  80c174:	1c62b03a 	or	r17,r3,r17
  80c178:	1080fcc4 	addi	r2,r2,1011
  80c17c:	0085c83a 	sub	r2,zero,r2
  80c180:	000b883a 	mov	r5,zero
  80c184:	003f8306 	br	80bf94 <__alt_data_end+0xff80bf94>
  80c188:	b02b883a 	mov	r21,r22
  80c18c:	0081ffc4 	movi	r2,2047
  80c190:	000b883a 	mov	r5,zero
  80c194:	0029883a 	mov	r20,zero
  80c198:	003fac06 	br	80c04c <__alt_data_end+0xff80c04c>
  80c19c:	0023883a 	mov	r17,zero
  80c1a0:	0011883a 	mov	r8,zero
  80c1a4:	01400044 	movi	r5,1
  80c1a8:	003f7a06 	br	80bf94 <__alt_data_end+0xff80bf94>
  80c1ac:	014000c4 	movi	r5,3
  80c1b0:	003f7806 	br	80bf94 <__alt_data_end+0xff80bf94>
  80c1b4:	04c00104 	movi	r19,4
  80c1b8:	0021883a 	mov	r16,zero
  80c1bc:	0029883a 	mov	r20,zero
  80c1c0:	07000044 	movi	fp,1
  80c1c4:	003f6106 	br	80bf4c <__alt_data_end+0xff80bf4c>
  80c1c8:	04c00304 	movi	r19,12
  80c1cc:	070000c4 	movi	fp,3
  80c1d0:	003f5e06 	br	80bf4c <__alt_data_end+0xff80bf4c>
  80c1d4:	01400434 	movhi	r5,16
  80c1d8:	002b883a 	mov	r21,zero
  80c1dc:	297fffc4 	addi	r5,r5,-1
  80c1e0:	053fffc4 	movi	r20,-1
  80c1e4:	0081ffc4 	movi	r2,2047
  80c1e8:	003f9806 	br	80c04c <__alt_data_end+0xff80c04c>
  80c1ec:	8023883a 	mov	r17,r16
  80c1f0:	a011883a 	mov	r8,r20
  80c1f4:	e00b883a 	mov	r5,fp
  80c1f8:	003f8a06 	br	80c024 <__alt_data_end+0xff80c024>
  80c1fc:	8023883a 	mov	r17,r16
  80c200:	a011883a 	mov	r8,r20
  80c204:	482d883a 	mov	r22,r9
  80c208:	e00b883a 	mov	r5,fp
  80c20c:	003f8506 	br	80c024 <__alt_data_end+0xff80c024>
  80c210:	a00ad43a 	srli	r5,r20,16
  80c214:	401ad43a 	srli	r13,r8,16
  80c218:	a53fffcc 	andi	r20,r20,65535
  80c21c:	423fffcc 	andi	r8,r8,65535
  80c220:	4519383a 	mul	r12,r8,r20
  80c224:	4147383a 	mul	r3,r8,r5
  80c228:	6d09383a 	mul	r4,r13,r20
  80c22c:	600cd43a 	srli	r6,r12,16
  80c230:	2b5d383a 	mul	r14,r5,r13
  80c234:	20c9883a 	add	r4,r4,r3
  80c238:	310d883a 	add	r6,r6,r4
  80c23c:	30c0022e 	bgeu	r6,r3,80c248 <__muldf3+0x378>
  80c240:	00c00074 	movhi	r3,1
  80c244:	70dd883a 	add	r14,r14,r3
  80c248:	8826d43a 	srli	r19,r17,16
  80c24c:	8bffffcc 	andi	r15,r17,65535
  80c250:	7d23383a 	mul	r17,r15,r20
  80c254:	7949383a 	mul	r4,r15,r5
  80c258:	9d29383a 	mul	r20,r19,r20
  80c25c:	8814d43a 	srli	r10,r17,16
  80c260:	3012943a 	slli	r9,r6,16
  80c264:	a129883a 	add	r20,r20,r4
  80c268:	633fffcc 	andi	r12,r12,65535
  80c26c:	5515883a 	add	r10,r10,r20
  80c270:	3006d43a 	srli	r3,r6,16
  80c274:	4b13883a 	add	r9,r9,r12
  80c278:	2ccb383a 	mul	r5,r5,r19
  80c27c:	5100022e 	bgeu	r10,r4,80c288 <__muldf3+0x3b8>
  80c280:	01000074 	movhi	r4,1
  80c284:	290b883a 	add	r5,r5,r4
  80c288:	802ad43a 	srli	r21,r16,16
  80c28c:	843fffcc 	andi	r16,r16,65535
  80c290:	440d383a 	mul	r6,r8,r16
  80c294:	4565383a 	mul	r18,r8,r21
  80c298:	8349383a 	mul	r4,r16,r13
  80c29c:	500e943a 	slli	r7,r10,16
  80c2a0:	3010d43a 	srli	r8,r6,16
  80c2a4:	5028d43a 	srli	r20,r10,16
  80c2a8:	2489883a 	add	r4,r4,r18
  80c2ac:	8abfffcc 	andi	r10,r17,65535
  80c2b0:	3a95883a 	add	r10,r7,r10
  80c2b4:	4119883a 	add	r12,r8,r4
  80c2b8:	a169883a 	add	r20,r20,r5
  80c2bc:	1a87883a 	add	r3,r3,r10
  80c2c0:	6d5b383a 	mul	r13,r13,r21
  80c2c4:	6480022e 	bgeu	r12,r18,80c2d0 <__muldf3+0x400>
  80c2c8:	01000074 	movhi	r4,1
  80c2cc:	691b883a 	add	r13,r13,r4
  80c2d0:	7c25383a 	mul	r18,r15,r16
  80c2d4:	7d4b383a 	mul	r5,r15,r21
  80c2d8:	84cf383a 	mul	r7,r16,r19
  80c2dc:	901ed43a 	srli	r15,r18,16
  80c2e0:	6008d43a 	srli	r4,r12,16
  80c2e4:	6010943a 	slli	r8,r12,16
  80c2e8:	394f883a 	add	r7,r7,r5
  80c2ec:	333fffcc 	andi	r12,r6,65535
  80c2f0:	79df883a 	add	r15,r15,r7
  80c2f4:	235b883a 	add	r13,r4,r13
  80c2f8:	9d63383a 	mul	r17,r19,r21
  80c2fc:	4309883a 	add	r4,r8,r12
  80c300:	7940022e 	bgeu	r15,r5,80c30c <__muldf3+0x43c>
  80c304:	01400074 	movhi	r5,1
  80c308:	8963883a 	add	r17,r17,r5
  80c30c:	780a943a 	slli	r5,r15,16
  80c310:	91bfffcc 	andi	r6,r18,65535
  80c314:	70c7883a 	add	r3,r14,r3
  80c318:	298d883a 	add	r6,r5,r6
  80c31c:	1a8f803a 	cmpltu	r7,r3,r10
  80c320:	350b883a 	add	r5,r6,r20
  80c324:	20c7883a 	add	r3,r4,r3
  80c328:	3955883a 	add	r10,r7,r5
  80c32c:	1909803a 	cmpltu	r4,r3,r4
  80c330:	6a91883a 	add	r8,r13,r10
  80c334:	780cd43a 	srli	r6,r15,16
  80c338:	2219883a 	add	r12,r4,r8
  80c33c:	2d0b803a 	cmpltu	r5,r5,r20
  80c340:	51cf803a 	cmpltu	r7,r10,r7
  80c344:	29ceb03a 	or	r7,r5,r7
  80c348:	4351803a 	cmpltu	r8,r8,r13
  80c34c:	610b803a 	cmpltu	r5,r12,r4
  80c350:	4148b03a 	or	r4,r8,r5
  80c354:	398f883a 	add	r7,r7,r6
  80c358:	3909883a 	add	r4,r7,r4
  80c35c:	1810927a 	slli	r8,r3,9
  80c360:	2449883a 	add	r4,r4,r17
  80c364:	2008927a 	slli	r4,r4,9
  80c368:	6022d5fa 	srli	r17,r12,23
  80c36c:	1806d5fa 	srli	r3,r3,23
  80c370:	4252b03a 	or	r9,r8,r9
  80c374:	600a927a 	slli	r5,r12,9
  80c378:	4810c03a 	cmpne	r8,r9,zero
  80c37c:	2462b03a 	or	r17,r4,r17
  80c380:	40c6b03a 	or	r3,r8,r3
  80c384:	8900402c 	andhi	r4,r17,256
  80c388:	1950b03a 	or	r8,r3,r5
  80c38c:	20000726 	beq	r4,zero,80c3ac <__muldf3+0x4dc>
  80c390:	4006d07a 	srli	r3,r8,1
  80c394:	880497fa 	slli	r2,r17,31
  80c398:	4200004c 	andi	r8,r8,1
  80c39c:	8822d07a 	srli	r17,r17,1
  80c3a0:	1a10b03a 	or	r8,r3,r8
  80c3a4:	1210b03a 	or	r8,r2,r8
  80c3a8:	5805883a 	mov	r2,r11
  80c3ac:	1140ffc4 	addi	r5,r2,1023
  80c3b0:	0140440e 	bge	zero,r5,80c4c4 <__muldf3+0x5f4>
  80c3b4:	40c001cc 	andi	r3,r8,7
  80c3b8:	18000726 	beq	r3,zero,80c3d8 <__muldf3+0x508>
  80c3bc:	40c003cc 	andi	r3,r8,15
  80c3c0:	01000104 	movi	r4,4
  80c3c4:	19000426 	beq	r3,r4,80c3d8 <__muldf3+0x508>
  80c3c8:	4107883a 	add	r3,r8,r4
  80c3cc:	1a11803a 	cmpltu	r8,r3,r8
  80c3d0:	8a23883a 	add	r17,r17,r8
  80c3d4:	1811883a 	mov	r8,r3
  80c3d8:	88c0402c 	andhi	r3,r17,256
  80c3dc:	18000426 	beq	r3,zero,80c3f0 <__muldf3+0x520>
  80c3e0:	11410004 	addi	r5,r2,1024
  80c3e4:	00bfc034 	movhi	r2,65280
  80c3e8:	10bfffc4 	addi	r2,r2,-1
  80c3ec:	88a2703a 	and	r17,r17,r2
  80c3f0:	0081ff84 	movi	r2,2046
  80c3f4:	117f6416 	blt	r2,r5,80c188 <__alt_data_end+0xff80c188>
  80c3f8:	8828977a 	slli	r20,r17,29
  80c3fc:	4010d0fa 	srli	r8,r8,3
  80c400:	8822927a 	slli	r17,r17,9
  80c404:	2881ffcc 	andi	r2,r5,2047
  80c408:	a228b03a 	or	r20,r20,r8
  80c40c:	880ad33a 	srli	r5,r17,12
  80c410:	b02b883a 	mov	r21,r22
  80c414:	003f0d06 	br	80c04c <__alt_data_end+0xff80c04c>
  80c418:	8080022c 	andhi	r2,r16,8
  80c41c:	10000926 	beq	r2,zero,80c444 <__muldf3+0x574>
  80c420:	8880022c 	andhi	r2,r17,8
  80c424:	1000071e 	bne	r2,zero,80c444 <__muldf3+0x574>
  80c428:	00800434 	movhi	r2,16
  80c42c:	89400234 	orhi	r5,r17,8
  80c430:	10bfffc4 	addi	r2,r2,-1
  80c434:	b82b883a 	mov	r21,r23
  80c438:	288a703a 	and	r5,r5,r2
  80c43c:	4029883a 	mov	r20,r8
  80c440:	003f6806 	br	80c1e4 <__alt_data_end+0xff80c1e4>
  80c444:	00800434 	movhi	r2,16
  80c448:	81400234 	orhi	r5,r16,8
  80c44c:	10bfffc4 	addi	r2,r2,-1
  80c450:	288a703a 	and	r5,r5,r2
  80c454:	003f6306 	br	80c1e4 <__alt_data_end+0xff80c1e4>
  80c458:	147ff604 	addi	r17,r2,-40
  80c45c:	3462983a 	sll	r17,r6,r17
  80c460:	0011883a 	mov	r8,zero
  80c464:	003f4406 	br	80c178 <__alt_data_end+0xff80c178>
  80c468:	3009883a 	mov	r4,r6
  80c46c:	d9800215 	stw	r6,8(sp)
  80c470:	da400115 	stw	r9,4(sp)
  80c474:	da800015 	stw	r10,0(sp)
  80c478:	08007c80 	call	8007c8 <__clzsi2>
  80c47c:	10800804 	addi	r2,r2,32
  80c480:	da800017 	ldw	r10,0(sp)
  80c484:	da400117 	ldw	r9,4(sp)
  80c488:	d9800217 	ldw	r6,8(sp)
  80c48c:	003f3006 	br	80c150 <__alt_data_end+0xff80c150>
  80c490:	143ff604 	addi	r16,r2,-40
  80c494:	9c20983a 	sll	r16,r19,r16
  80c498:	0029883a 	mov	r20,zero
  80c49c:	003f1606 	br	80c0f8 <__alt_data_end+0xff80c0f8>
  80c4a0:	d9800215 	stw	r6,8(sp)
  80c4a4:	d9c00015 	stw	r7,0(sp)
  80c4a8:	da400115 	stw	r9,4(sp)
  80c4ac:	08007c80 	call	8007c8 <__clzsi2>
  80c4b0:	10800804 	addi	r2,r2,32
  80c4b4:	da400117 	ldw	r9,4(sp)
  80c4b8:	d9c00017 	ldw	r7,0(sp)
  80c4bc:	d9800217 	ldw	r6,8(sp)
  80c4c0:	003f0306 	br	80c0d0 <__alt_data_end+0xff80c0d0>
  80c4c4:	00c00044 	movi	r3,1
  80c4c8:	1947c83a 	sub	r3,r3,r5
  80c4cc:	00800e04 	movi	r2,56
  80c4d0:	10feda16 	blt	r2,r3,80c03c <__alt_data_end+0xff80c03c>
  80c4d4:	008007c4 	movi	r2,31
  80c4d8:	10c01b16 	blt	r2,r3,80c548 <__muldf3+0x678>
  80c4dc:	00800804 	movi	r2,32
  80c4e0:	10c5c83a 	sub	r2,r2,r3
  80c4e4:	888a983a 	sll	r5,r17,r2
  80c4e8:	40c8d83a 	srl	r4,r8,r3
  80c4ec:	4084983a 	sll	r2,r8,r2
  80c4f0:	88e2d83a 	srl	r17,r17,r3
  80c4f4:	2906b03a 	or	r3,r5,r4
  80c4f8:	1004c03a 	cmpne	r2,r2,zero
  80c4fc:	1886b03a 	or	r3,r3,r2
  80c500:	188001cc 	andi	r2,r3,7
  80c504:	10000726 	beq	r2,zero,80c524 <__muldf3+0x654>
  80c508:	188003cc 	andi	r2,r3,15
  80c50c:	01000104 	movi	r4,4
  80c510:	11000426 	beq	r2,r4,80c524 <__muldf3+0x654>
  80c514:	1805883a 	mov	r2,r3
  80c518:	10c00104 	addi	r3,r2,4
  80c51c:	1885803a 	cmpltu	r2,r3,r2
  80c520:	88a3883a 	add	r17,r17,r2
  80c524:	8880202c 	andhi	r2,r17,128
  80c528:	10001c26 	beq	r2,zero,80c59c <__muldf3+0x6cc>
  80c52c:	b02b883a 	mov	r21,r22
  80c530:	00800044 	movi	r2,1
  80c534:	000b883a 	mov	r5,zero
  80c538:	0029883a 	mov	r20,zero
  80c53c:	003ec306 	br	80c04c <__alt_data_end+0xff80c04c>
  80c540:	5805883a 	mov	r2,r11
  80c544:	003f9906 	br	80c3ac <__alt_data_end+0xff80c3ac>
  80c548:	00bff844 	movi	r2,-31
  80c54c:	1145c83a 	sub	r2,r2,r5
  80c550:	8888d83a 	srl	r4,r17,r2
  80c554:	00800804 	movi	r2,32
  80c558:	18801a26 	beq	r3,r2,80c5c4 <__muldf3+0x6f4>
  80c55c:	00801004 	movi	r2,64
  80c560:	10c5c83a 	sub	r2,r2,r3
  80c564:	8884983a 	sll	r2,r17,r2
  80c568:	1204b03a 	or	r2,r2,r8
  80c56c:	1004c03a 	cmpne	r2,r2,zero
  80c570:	2084b03a 	or	r2,r4,r2
  80c574:	144001cc 	andi	r17,r2,7
  80c578:	88000d1e 	bne	r17,zero,80c5b0 <__muldf3+0x6e0>
  80c57c:	000b883a 	mov	r5,zero
  80c580:	1028d0fa 	srli	r20,r2,3
  80c584:	b02b883a 	mov	r21,r22
  80c588:	0005883a 	mov	r2,zero
  80c58c:	a468b03a 	or	r20,r20,r17
  80c590:	003eae06 	br	80c04c <__alt_data_end+0xff80c04c>
  80c594:	1007883a 	mov	r3,r2
  80c598:	0023883a 	mov	r17,zero
  80c59c:	880a927a 	slli	r5,r17,9
  80c5a0:	1805883a 	mov	r2,r3
  80c5a4:	8822977a 	slli	r17,r17,29
  80c5a8:	280ad33a 	srli	r5,r5,12
  80c5ac:	003ff406 	br	80c580 <__alt_data_end+0xff80c580>
  80c5b0:	10c003cc 	andi	r3,r2,15
  80c5b4:	01000104 	movi	r4,4
  80c5b8:	193ff626 	beq	r3,r4,80c594 <__alt_data_end+0xff80c594>
  80c5bc:	0023883a 	mov	r17,zero
  80c5c0:	003fd506 	br	80c518 <__alt_data_end+0xff80c518>
  80c5c4:	0005883a 	mov	r2,zero
  80c5c8:	003fe706 	br	80c568 <__alt_data_end+0xff80c568>
  80c5cc:	00800434 	movhi	r2,16
  80c5d0:	89400234 	orhi	r5,r17,8
  80c5d4:	10bfffc4 	addi	r2,r2,-1
  80c5d8:	b02b883a 	mov	r21,r22
  80c5dc:	288a703a 	and	r5,r5,r2
  80c5e0:	4029883a 	mov	r20,r8
  80c5e4:	003eff06 	br	80c1e4 <__alt_data_end+0xff80c1e4>

0080c5e8 <__subdf3>:
  80c5e8:	02000434 	movhi	r8,16
  80c5ec:	423fffc4 	addi	r8,r8,-1
  80c5f0:	defffb04 	addi	sp,sp,-20
  80c5f4:	2a14703a 	and	r10,r5,r8
  80c5f8:	3812d53a 	srli	r9,r7,20
  80c5fc:	3a10703a 	and	r8,r7,r8
  80c600:	2006d77a 	srli	r3,r4,29
  80c604:	3004d77a 	srli	r2,r6,29
  80c608:	dc000015 	stw	r16,0(sp)
  80c60c:	501490fa 	slli	r10,r10,3
  80c610:	2820d53a 	srli	r16,r5,20
  80c614:	401090fa 	slli	r8,r8,3
  80c618:	dc800215 	stw	r18,8(sp)
  80c61c:	dc400115 	stw	r17,4(sp)
  80c620:	dfc00415 	stw	ra,16(sp)
  80c624:	202290fa 	slli	r17,r4,3
  80c628:	dcc00315 	stw	r19,12(sp)
  80c62c:	4a41ffcc 	andi	r9,r9,2047
  80c630:	0101ffc4 	movi	r4,2047
  80c634:	2824d7fa 	srli	r18,r5,31
  80c638:	8401ffcc 	andi	r16,r16,2047
  80c63c:	50c6b03a 	or	r3,r10,r3
  80c640:	380ed7fa 	srli	r7,r7,31
  80c644:	408ab03a 	or	r5,r8,r2
  80c648:	300c90fa 	slli	r6,r6,3
  80c64c:	49009626 	beq	r9,r4,80c8a8 <__subdf3+0x2c0>
  80c650:	39c0005c 	xori	r7,r7,1
  80c654:	8245c83a 	sub	r2,r16,r9
  80c658:	3c807426 	beq	r7,r18,80c82c <__subdf3+0x244>
  80c65c:	0080af0e 	bge	zero,r2,80c91c <__subdf3+0x334>
  80c660:	48002a1e 	bne	r9,zero,80c70c <__subdf3+0x124>
  80c664:	2988b03a 	or	r4,r5,r6
  80c668:	20009a1e 	bne	r4,zero,80c8d4 <__subdf3+0x2ec>
  80c66c:	888001cc 	andi	r2,r17,7
  80c670:	10000726 	beq	r2,zero,80c690 <__subdf3+0xa8>
  80c674:	888003cc 	andi	r2,r17,15
  80c678:	01000104 	movi	r4,4
  80c67c:	11000426 	beq	r2,r4,80c690 <__subdf3+0xa8>
  80c680:	890b883a 	add	r5,r17,r4
  80c684:	2c63803a 	cmpltu	r17,r5,r17
  80c688:	1c47883a 	add	r3,r3,r17
  80c68c:	2823883a 	mov	r17,r5
  80c690:	1880202c 	andhi	r2,r3,128
  80c694:	10005926 	beq	r2,zero,80c7fc <__subdf3+0x214>
  80c698:	84000044 	addi	r16,r16,1
  80c69c:	0081ffc4 	movi	r2,2047
  80c6a0:	8080be26 	beq	r16,r2,80c99c <__subdf3+0x3b4>
  80c6a4:	017fe034 	movhi	r5,65408
  80c6a8:	297fffc4 	addi	r5,r5,-1
  80c6ac:	1946703a 	and	r3,r3,r5
  80c6b0:	1804977a 	slli	r2,r3,29
  80c6b4:	1806927a 	slli	r3,r3,9
  80c6b8:	8822d0fa 	srli	r17,r17,3
  80c6bc:	8401ffcc 	andi	r16,r16,2047
  80c6c0:	180ad33a 	srli	r5,r3,12
  80c6c4:	9100004c 	andi	r4,r18,1
  80c6c8:	1444b03a 	or	r2,r2,r17
  80c6cc:	80c1ffcc 	andi	r3,r16,2047
  80c6d0:	1820953a 	slli	r16,r3,20
  80c6d4:	20c03fcc 	andi	r3,r4,255
  80c6d8:	180897fa 	slli	r4,r3,31
  80c6dc:	00c00434 	movhi	r3,16
  80c6e0:	18ffffc4 	addi	r3,r3,-1
  80c6e4:	28c6703a 	and	r3,r5,r3
  80c6e8:	1c06b03a 	or	r3,r3,r16
  80c6ec:	1906b03a 	or	r3,r3,r4
  80c6f0:	dfc00417 	ldw	ra,16(sp)
  80c6f4:	dcc00317 	ldw	r19,12(sp)
  80c6f8:	dc800217 	ldw	r18,8(sp)
  80c6fc:	dc400117 	ldw	r17,4(sp)
  80c700:	dc000017 	ldw	r16,0(sp)
  80c704:	dec00504 	addi	sp,sp,20
  80c708:	f800283a 	ret
  80c70c:	0101ffc4 	movi	r4,2047
  80c710:	813fd626 	beq	r16,r4,80c66c <__alt_data_end+0xff80c66c>
  80c714:	29402034 	orhi	r5,r5,128
  80c718:	01000e04 	movi	r4,56
  80c71c:	2080a316 	blt	r4,r2,80c9ac <__subdf3+0x3c4>
  80c720:	010007c4 	movi	r4,31
  80c724:	2080c616 	blt	r4,r2,80ca40 <__subdf3+0x458>
  80c728:	01000804 	movi	r4,32
  80c72c:	2089c83a 	sub	r4,r4,r2
  80c730:	2910983a 	sll	r8,r5,r4
  80c734:	308ed83a 	srl	r7,r6,r2
  80c738:	3108983a 	sll	r4,r6,r4
  80c73c:	2884d83a 	srl	r2,r5,r2
  80c740:	41ccb03a 	or	r6,r8,r7
  80c744:	2008c03a 	cmpne	r4,r4,zero
  80c748:	310cb03a 	or	r6,r6,r4
  80c74c:	898dc83a 	sub	r6,r17,r6
  80c750:	89a3803a 	cmpltu	r17,r17,r6
  80c754:	1887c83a 	sub	r3,r3,r2
  80c758:	1c47c83a 	sub	r3,r3,r17
  80c75c:	3023883a 	mov	r17,r6
  80c760:	1880202c 	andhi	r2,r3,128
  80c764:	10002326 	beq	r2,zero,80c7f4 <__subdf3+0x20c>
  80c768:	04c02034 	movhi	r19,128
  80c76c:	9cffffc4 	addi	r19,r19,-1
  80c770:	1ce6703a 	and	r19,r3,r19
  80c774:	98007a26 	beq	r19,zero,80c960 <__subdf3+0x378>
  80c778:	9809883a 	mov	r4,r19
  80c77c:	08007c80 	call	8007c8 <__clzsi2>
  80c780:	113ffe04 	addi	r4,r2,-8
  80c784:	00c007c4 	movi	r3,31
  80c788:	19007b16 	blt	r3,r4,80c978 <__subdf3+0x390>
  80c78c:	00800804 	movi	r2,32
  80c790:	1105c83a 	sub	r2,r2,r4
  80c794:	8884d83a 	srl	r2,r17,r2
  80c798:	9906983a 	sll	r3,r19,r4
  80c79c:	8922983a 	sll	r17,r17,r4
  80c7a0:	10c4b03a 	or	r2,r2,r3
  80c7a4:	24007816 	blt	r4,r16,80c988 <__subdf3+0x3a0>
  80c7a8:	2421c83a 	sub	r16,r4,r16
  80c7ac:	80c00044 	addi	r3,r16,1
  80c7b0:	010007c4 	movi	r4,31
  80c7b4:	20c09516 	blt	r4,r3,80ca0c <__subdf3+0x424>
  80c7b8:	01400804 	movi	r5,32
  80c7bc:	28cbc83a 	sub	r5,r5,r3
  80c7c0:	88c8d83a 	srl	r4,r17,r3
  80c7c4:	8962983a 	sll	r17,r17,r5
  80c7c8:	114a983a 	sll	r5,r2,r5
  80c7cc:	10c6d83a 	srl	r3,r2,r3
  80c7d0:	8804c03a 	cmpne	r2,r17,zero
  80c7d4:	290ab03a 	or	r5,r5,r4
  80c7d8:	28a2b03a 	or	r17,r5,r2
  80c7dc:	0021883a 	mov	r16,zero
  80c7e0:	003fa206 	br	80c66c <__alt_data_end+0xff80c66c>
  80c7e4:	2090b03a 	or	r8,r4,r2
  80c7e8:	40018e26 	beq	r8,zero,80ce24 <__subdf3+0x83c>
  80c7ec:	1007883a 	mov	r3,r2
  80c7f0:	2023883a 	mov	r17,r4
  80c7f4:	888001cc 	andi	r2,r17,7
  80c7f8:	103f9e1e 	bne	r2,zero,80c674 <__alt_data_end+0xff80c674>
  80c7fc:	1804977a 	slli	r2,r3,29
  80c800:	8822d0fa 	srli	r17,r17,3
  80c804:	1810d0fa 	srli	r8,r3,3
  80c808:	9100004c 	andi	r4,r18,1
  80c80c:	1444b03a 	or	r2,r2,r17
  80c810:	00c1ffc4 	movi	r3,2047
  80c814:	80c02826 	beq	r16,r3,80c8b8 <__subdf3+0x2d0>
  80c818:	01400434 	movhi	r5,16
  80c81c:	297fffc4 	addi	r5,r5,-1
  80c820:	80e0703a 	and	r16,r16,r3
  80c824:	414a703a 	and	r5,r8,r5
  80c828:	003fa806 	br	80c6cc <__alt_data_end+0xff80c6cc>
  80c82c:	0080630e 	bge	zero,r2,80c9bc <__subdf3+0x3d4>
  80c830:	48003026 	beq	r9,zero,80c8f4 <__subdf3+0x30c>
  80c834:	0101ffc4 	movi	r4,2047
  80c838:	813f8c26 	beq	r16,r4,80c66c <__alt_data_end+0xff80c66c>
  80c83c:	29402034 	orhi	r5,r5,128
  80c840:	01000e04 	movi	r4,56
  80c844:	2080a90e 	bge	r4,r2,80caec <__subdf3+0x504>
  80c848:	298cb03a 	or	r6,r5,r6
  80c84c:	3012c03a 	cmpne	r9,r6,zero
  80c850:	0005883a 	mov	r2,zero
  80c854:	4c53883a 	add	r9,r9,r17
  80c858:	4c63803a 	cmpltu	r17,r9,r17
  80c85c:	10c7883a 	add	r3,r2,r3
  80c860:	88c7883a 	add	r3,r17,r3
  80c864:	4823883a 	mov	r17,r9
  80c868:	1880202c 	andhi	r2,r3,128
  80c86c:	1000d026 	beq	r2,zero,80cbb0 <__subdf3+0x5c8>
  80c870:	84000044 	addi	r16,r16,1
  80c874:	0081ffc4 	movi	r2,2047
  80c878:	8080fe26 	beq	r16,r2,80cc74 <__subdf3+0x68c>
  80c87c:	00bfe034 	movhi	r2,65408
  80c880:	10bfffc4 	addi	r2,r2,-1
  80c884:	1886703a 	and	r3,r3,r2
  80c888:	880ad07a 	srli	r5,r17,1
  80c88c:	180497fa 	slli	r2,r3,31
  80c890:	8900004c 	andi	r4,r17,1
  80c894:	2922b03a 	or	r17,r5,r4
  80c898:	1806d07a 	srli	r3,r3,1
  80c89c:	1462b03a 	or	r17,r2,r17
  80c8a0:	3825883a 	mov	r18,r7
  80c8a4:	003f7106 	br	80c66c <__alt_data_end+0xff80c66c>
  80c8a8:	2984b03a 	or	r2,r5,r6
  80c8ac:	103f6826 	beq	r2,zero,80c650 <__alt_data_end+0xff80c650>
  80c8b0:	39c03fcc 	andi	r7,r7,255
  80c8b4:	003f6706 	br	80c654 <__alt_data_end+0xff80c654>
  80c8b8:	4086b03a 	or	r3,r8,r2
  80c8bc:	18015226 	beq	r3,zero,80ce08 <__subdf3+0x820>
  80c8c0:	00c00434 	movhi	r3,16
  80c8c4:	41400234 	orhi	r5,r8,8
  80c8c8:	18ffffc4 	addi	r3,r3,-1
  80c8cc:	28ca703a 	and	r5,r5,r3
  80c8d0:	003f7e06 	br	80c6cc <__alt_data_end+0xff80c6cc>
  80c8d4:	10bfffc4 	addi	r2,r2,-1
  80c8d8:	1000491e 	bne	r2,zero,80ca00 <__subdf3+0x418>
  80c8dc:	898fc83a 	sub	r7,r17,r6
  80c8e0:	89e3803a 	cmpltu	r17,r17,r7
  80c8e4:	1947c83a 	sub	r3,r3,r5
  80c8e8:	1c47c83a 	sub	r3,r3,r17
  80c8ec:	3823883a 	mov	r17,r7
  80c8f0:	003f9b06 	br	80c760 <__alt_data_end+0xff80c760>
  80c8f4:	2988b03a 	or	r4,r5,r6
  80c8f8:	203f5c26 	beq	r4,zero,80c66c <__alt_data_end+0xff80c66c>
  80c8fc:	10bfffc4 	addi	r2,r2,-1
  80c900:	1000931e 	bne	r2,zero,80cb50 <__subdf3+0x568>
  80c904:	898d883a 	add	r6,r17,r6
  80c908:	3463803a 	cmpltu	r17,r6,r17
  80c90c:	1947883a 	add	r3,r3,r5
  80c910:	88c7883a 	add	r3,r17,r3
  80c914:	3023883a 	mov	r17,r6
  80c918:	003fd306 	br	80c868 <__alt_data_end+0xff80c868>
  80c91c:	1000541e 	bne	r2,zero,80ca70 <__subdf3+0x488>
  80c920:	80800044 	addi	r2,r16,1
  80c924:	1081ffcc 	andi	r2,r2,2047
  80c928:	01000044 	movi	r4,1
  80c92c:	2080a20e 	bge	r4,r2,80cbb8 <__subdf3+0x5d0>
  80c930:	8989c83a 	sub	r4,r17,r6
  80c934:	8905803a 	cmpltu	r2,r17,r4
  80c938:	1967c83a 	sub	r19,r3,r5
  80c93c:	98a7c83a 	sub	r19,r19,r2
  80c940:	9880202c 	andhi	r2,r19,128
  80c944:	10006326 	beq	r2,zero,80cad4 <__subdf3+0x4ec>
  80c948:	3463c83a 	sub	r17,r6,r17
  80c94c:	28c7c83a 	sub	r3,r5,r3
  80c950:	344d803a 	cmpltu	r6,r6,r17
  80c954:	19a7c83a 	sub	r19,r3,r6
  80c958:	3825883a 	mov	r18,r7
  80c95c:	983f861e 	bne	r19,zero,80c778 <__alt_data_end+0xff80c778>
  80c960:	8809883a 	mov	r4,r17
  80c964:	08007c80 	call	8007c8 <__clzsi2>
  80c968:	10800804 	addi	r2,r2,32
  80c96c:	113ffe04 	addi	r4,r2,-8
  80c970:	00c007c4 	movi	r3,31
  80c974:	193f850e 	bge	r3,r4,80c78c <__alt_data_end+0xff80c78c>
  80c978:	10bff604 	addi	r2,r2,-40
  80c97c:	8884983a 	sll	r2,r17,r2
  80c980:	0023883a 	mov	r17,zero
  80c984:	243f880e 	bge	r4,r16,80c7a8 <__alt_data_end+0xff80c7a8>
  80c988:	00ffe034 	movhi	r3,65408
  80c98c:	18ffffc4 	addi	r3,r3,-1
  80c990:	8121c83a 	sub	r16,r16,r4
  80c994:	10c6703a 	and	r3,r2,r3
  80c998:	003f3406 	br	80c66c <__alt_data_end+0xff80c66c>
  80c99c:	9100004c 	andi	r4,r18,1
  80c9a0:	000b883a 	mov	r5,zero
  80c9a4:	0005883a 	mov	r2,zero
  80c9a8:	003f4806 	br	80c6cc <__alt_data_end+0xff80c6cc>
  80c9ac:	298cb03a 	or	r6,r5,r6
  80c9b0:	300cc03a 	cmpne	r6,r6,zero
  80c9b4:	0005883a 	mov	r2,zero
  80c9b8:	003f6406 	br	80c74c <__alt_data_end+0xff80c74c>
  80c9bc:	10009a1e 	bne	r2,zero,80cc28 <__subdf3+0x640>
  80c9c0:	82400044 	addi	r9,r16,1
  80c9c4:	4881ffcc 	andi	r2,r9,2047
  80c9c8:	02800044 	movi	r10,1
  80c9cc:	5080670e 	bge	r10,r2,80cb6c <__subdf3+0x584>
  80c9d0:	0081ffc4 	movi	r2,2047
  80c9d4:	4880af26 	beq	r9,r2,80cc94 <__subdf3+0x6ac>
  80c9d8:	898d883a 	add	r6,r17,r6
  80c9dc:	1945883a 	add	r2,r3,r5
  80c9e0:	3447803a 	cmpltu	r3,r6,r17
  80c9e4:	1887883a 	add	r3,r3,r2
  80c9e8:	182297fa 	slli	r17,r3,31
  80c9ec:	300cd07a 	srli	r6,r6,1
  80c9f0:	1806d07a 	srli	r3,r3,1
  80c9f4:	4821883a 	mov	r16,r9
  80c9f8:	89a2b03a 	or	r17,r17,r6
  80c9fc:	003f1b06 	br	80c66c <__alt_data_end+0xff80c66c>
  80ca00:	0101ffc4 	movi	r4,2047
  80ca04:	813f441e 	bne	r16,r4,80c718 <__alt_data_end+0xff80c718>
  80ca08:	003f1806 	br	80c66c <__alt_data_end+0xff80c66c>
  80ca0c:	843ff844 	addi	r16,r16,-31
  80ca10:	01400804 	movi	r5,32
  80ca14:	1408d83a 	srl	r4,r2,r16
  80ca18:	19405026 	beq	r3,r5,80cb5c <__subdf3+0x574>
  80ca1c:	01401004 	movi	r5,64
  80ca20:	28c7c83a 	sub	r3,r5,r3
  80ca24:	10c4983a 	sll	r2,r2,r3
  80ca28:	88a2b03a 	or	r17,r17,r2
  80ca2c:	8822c03a 	cmpne	r17,r17,zero
  80ca30:	2462b03a 	or	r17,r4,r17
  80ca34:	0007883a 	mov	r3,zero
  80ca38:	0021883a 	mov	r16,zero
  80ca3c:	003f6d06 	br	80c7f4 <__alt_data_end+0xff80c7f4>
  80ca40:	11fff804 	addi	r7,r2,-32
  80ca44:	01000804 	movi	r4,32
  80ca48:	29ced83a 	srl	r7,r5,r7
  80ca4c:	11004526 	beq	r2,r4,80cb64 <__subdf3+0x57c>
  80ca50:	01001004 	movi	r4,64
  80ca54:	2089c83a 	sub	r4,r4,r2
  80ca58:	2904983a 	sll	r2,r5,r4
  80ca5c:	118cb03a 	or	r6,r2,r6
  80ca60:	300cc03a 	cmpne	r6,r6,zero
  80ca64:	398cb03a 	or	r6,r7,r6
  80ca68:	0005883a 	mov	r2,zero
  80ca6c:	003f3706 	br	80c74c <__alt_data_end+0xff80c74c>
  80ca70:	80002a26 	beq	r16,zero,80cb1c <__subdf3+0x534>
  80ca74:	0101ffc4 	movi	r4,2047
  80ca78:	49006626 	beq	r9,r4,80cc14 <__subdf3+0x62c>
  80ca7c:	0085c83a 	sub	r2,zero,r2
  80ca80:	18c02034 	orhi	r3,r3,128
  80ca84:	01000e04 	movi	r4,56
  80ca88:	20807e16 	blt	r4,r2,80cc84 <__subdf3+0x69c>
  80ca8c:	010007c4 	movi	r4,31
  80ca90:	2080e716 	blt	r4,r2,80ce30 <__subdf3+0x848>
  80ca94:	01000804 	movi	r4,32
  80ca98:	2089c83a 	sub	r4,r4,r2
  80ca9c:	1914983a 	sll	r10,r3,r4
  80caa0:	8890d83a 	srl	r8,r17,r2
  80caa4:	8908983a 	sll	r4,r17,r4
  80caa8:	1884d83a 	srl	r2,r3,r2
  80caac:	5222b03a 	or	r17,r10,r8
  80cab0:	2006c03a 	cmpne	r3,r4,zero
  80cab4:	88e2b03a 	or	r17,r17,r3
  80cab8:	3463c83a 	sub	r17,r6,r17
  80cabc:	2885c83a 	sub	r2,r5,r2
  80cac0:	344d803a 	cmpltu	r6,r6,r17
  80cac4:	1187c83a 	sub	r3,r2,r6
  80cac8:	4821883a 	mov	r16,r9
  80cacc:	3825883a 	mov	r18,r7
  80cad0:	003f2306 	br	80c760 <__alt_data_end+0xff80c760>
  80cad4:	24d0b03a 	or	r8,r4,r19
  80cad8:	40001b1e 	bne	r8,zero,80cb48 <__subdf3+0x560>
  80cadc:	0005883a 	mov	r2,zero
  80cae0:	0009883a 	mov	r4,zero
  80cae4:	0021883a 	mov	r16,zero
  80cae8:	003f4906 	br	80c810 <__alt_data_end+0xff80c810>
  80caec:	010007c4 	movi	r4,31
  80caf0:	20803a16 	blt	r4,r2,80cbdc <__subdf3+0x5f4>
  80caf4:	01000804 	movi	r4,32
  80caf8:	2089c83a 	sub	r4,r4,r2
  80cafc:	2912983a 	sll	r9,r5,r4
  80cb00:	3090d83a 	srl	r8,r6,r2
  80cb04:	3108983a 	sll	r4,r6,r4
  80cb08:	2884d83a 	srl	r2,r5,r2
  80cb0c:	4a12b03a 	or	r9,r9,r8
  80cb10:	2008c03a 	cmpne	r4,r4,zero
  80cb14:	4912b03a 	or	r9,r9,r4
  80cb18:	003f4e06 	br	80c854 <__alt_data_end+0xff80c854>
  80cb1c:	1c48b03a 	or	r4,r3,r17
  80cb20:	20003c26 	beq	r4,zero,80cc14 <__subdf3+0x62c>
  80cb24:	0084303a 	nor	r2,zero,r2
  80cb28:	1000381e 	bne	r2,zero,80cc0c <__subdf3+0x624>
  80cb2c:	3463c83a 	sub	r17,r6,r17
  80cb30:	28c5c83a 	sub	r2,r5,r3
  80cb34:	344d803a 	cmpltu	r6,r6,r17
  80cb38:	1187c83a 	sub	r3,r2,r6
  80cb3c:	4821883a 	mov	r16,r9
  80cb40:	3825883a 	mov	r18,r7
  80cb44:	003f0606 	br	80c760 <__alt_data_end+0xff80c760>
  80cb48:	2023883a 	mov	r17,r4
  80cb4c:	003f0906 	br	80c774 <__alt_data_end+0xff80c774>
  80cb50:	0101ffc4 	movi	r4,2047
  80cb54:	813f3a1e 	bne	r16,r4,80c840 <__alt_data_end+0xff80c840>
  80cb58:	003ec406 	br	80c66c <__alt_data_end+0xff80c66c>
  80cb5c:	0005883a 	mov	r2,zero
  80cb60:	003fb106 	br	80ca28 <__alt_data_end+0xff80ca28>
  80cb64:	0005883a 	mov	r2,zero
  80cb68:	003fbc06 	br	80ca5c <__alt_data_end+0xff80ca5c>
  80cb6c:	1c44b03a 	or	r2,r3,r17
  80cb70:	80008e1e 	bne	r16,zero,80cdac <__subdf3+0x7c4>
  80cb74:	1000c826 	beq	r2,zero,80ce98 <__subdf3+0x8b0>
  80cb78:	2984b03a 	or	r2,r5,r6
  80cb7c:	103ebb26 	beq	r2,zero,80c66c <__alt_data_end+0xff80c66c>
  80cb80:	8989883a 	add	r4,r17,r6
  80cb84:	1945883a 	add	r2,r3,r5
  80cb88:	2447803a 	cmpltu	r3,r4,r17
  80cb8c:	1887883a 	add	r3,r3,r2
  80cb90:	1880202c 	andhi	r2,r3,128
  80cb94:	2023883a 	mov	r17,r4
  80cb98:	103f1626 	beq	r2,zero,80c7f4 <__alt_data_end+0xff80c7f4>
  80cb9c:	00bfe034 	movhi	r2,65408
  80cba0:	10bfffc4 	addi	r2,r2,-1
  80cba4:	5021883a 	mov	r16,r10
  80cba8:	1886703a 	and	r3,r3,r2
  80cbac:	003eaf06 	br	80c66c <__alt_data_end+0xff80c66c>
  80cbb0:	3825883a 	mov	r18,r7
  80cbb4:	003f0f06 	br	80c7f4 <__alt_data_end+0xff80c7f4>
  80cbb8:	1c44b03a 	or	r2,r3,r17
  80cbbc:	8000251e 	bne	r16,zero,80cc54 <__subdf3+0x66c>
  80cbc0:	1000661e 	bne	r2,zero,80cd5c <__subdf3+0x774>
  80cbc4:	2990b03a 	or	r8,r5,r6
  80cbc8:	40009626 	beq	r8,zero,80ce24 <__subdf3+0x83c>
  80cbcc:	2807883a 	mov	r3,r5
  80cbd0:	3023883a 	mov	r17,r6
  80cbd4:	3825883a 	mov	r18,r7
  80cbd8:	003ea406 	br	80c66c <__alt_data_end+0xff80c66c>
  80cbdc:	127ff804 	addi	r9,r2,-32
  80cbe0:	01000804 	movi	r4,32
  80cbe4:	2a52d83a 	srl	r9,r5,r9
  80cbe8:	11008c26 	beq	r2,r4,80ce1c <__subdf3+0x834>
  80cbec:	01001004 	movi	r4,64
  80cbf0:	2085c83a 	sub	r2,r4,r2
  80cbf4:	2884983a 	sll	r2,r5,r2
  80cbf8:	118cb03a 	or	r6,r2,r6
  80cbfc:	300cc03a 	cmpne	r6,r6,zero
  80cc00:	4992b03a 	or	r9,r9,r6
  80cc04:	0005883a 	mov	r2,zero
  80cc08:	003f1206 	br	80c854 <__alt_data_end+0xff80c854>
  80cc0c:	0101ffc4 	movi	r4,2047
  80cc10:	493f9c1e 	bne	r9,r4,80ca84 <__alt_data_end+0xff80ca84>
  80cc14:	2807883a 	mov	r3,r5
  80cc18:	3023883a 	mov	r17,r6
  80cc1c:	4821883a 	mov	r16,r9
  80cc20:	3825883a 	mov	r18,r7
  80cc24:	003e9106 	br	80c66c <__alt_data_end+0xff80c66c>
  80cc28:	80001f1e 	bne	r16,zero,80cca8 <__subdf3+0x6c0>
  80cc2c:	1c48b03a 	or	r4,r3,r17
  80cc30:	20005a26 	beq	r4,zero,80cd9c <__subdf3+0x7b4>
  80cc34:	0084303a 	nor	r2,zero,r2
  80cc38:	1000561e 	bne	r2,zero,80cd94 <__subdf3+0x7ac>
  80cc3c:	89a3883a 	add	r17,r17,r6
  80cc40:	1945883a 	add	r2,r3,r5
  80cc44:	898d803a 	cmpltu	r6,r17,r6
  80cc48:	3087883a 	add	r3,r6,r2
  80cc4c:	4821883a 	mov	r16,r9
  80cc50:	003f0506 	br	80c868 <__alt_data_end+0xff80c868>
  80cc54:	10002b1e 	bne	r2,zero,80cd04 <__subdf3+0x71c>
  80cc58:	2984b03a 	or	r2,r5,r6
  80cc5c:	10008026 	beq	r2,zero,80ce60 <__subdf3+0x878>
  80cc60:	2807883a 	mov	r3,r5
  80cc64:	3023883a 	mov	r17,r6
  80cc68:	3825883a 	mov	r18,r7
  80cc6c:	0401ffc4 	movi	r16,2047
  80cc70:	003e7e06 	br	80c66c <__alt_data_end+0xff80c66c>
  80cc74:	3809883a 	mov	r4,r7
  80cc78:	0011883a 	mov	r8,zero
  80cc7c:	0005883a 	mov	r2,zero
  80cc80:	003ee306 	br	80c810 <__alt_data_end+0xff80c810>
  80cc84:	1c62b03a 	or	r17,r3,r17
  80cc88:	8822c03a 	cmpne	r17,r17,zero
  80cc8c:	0005883a 	mov	r2,zero
  80cc90:	003f8906 	br	80cab8 <__alt_data_end+0xff80cab8>
  80cc94:	3809883a 	mov	r4,r7
  80cc98:	4821883a 	mov	r16,r9
  80cc9c:	0011883a 	mov	r8,zero
  80cca0:	0005883a 	mov	r2,zero
  80cca4:	003eda06 	br	80c810 <__alt_data_end+0xff80c810>
  80cca8:	0101ffc4 	movi	r4,2047
  80ccac:	49003b26 	beq	r9,r4,80cd9c <__subdf3+0x7b4>
  80ccb0:	0085c83a 	sub	r2,zero,r2
  80ccb4:	18c02034 	orhi	r3,r3,128
  80ccb8:	01000e04 	movi	r4,56
  80ccbc:	20806e16 	blt	r4,r2,80ce78 <__subdf3+0x890>
  80ccc0:	010007c4 	movi	r4,31
  80ccc4:	20807716 	blt	r4,r2,80cea4 <__subdf3+0x8bc>
  80ccc8:	01000804 	movi	r4,32
  80cccc:	2089c83a 	sub	r4,r4,r2
  80ccd0:	1914983a 	sll	r10,r3,r4
  80ccd4:	8890d83a 	srl	r8,r17,r2
  80ccd8:	8908983a 	sll	r4,r17,r4
  80ccdc:	1884d83a 	srl	r2,r3,r2
  80cce0:	5222b03a 	or	r17,r10,r8
  80cce4:	2006c03a 	cmpne	r3,r4,zero
  80cce8:	88e2b03a 	or	r17,r17,r3
  80ccec:	89a3883a 	add	r17,r17,r6
  80ccf0:	1145883a 	add	r2,r2,r5
  80ccf4:	898d803a 	cmpltu	r6,r17,r6
  80ccf8:	3087883a 	add	r3,r6,r2
  80ccfc:	4821883a 	mov	r16,r9
  80cd00:	003ed906 	br	80c868 <__alt_data_end+0xff80c868>
  80cd04:	2984b03a 	or	r2,r5,r6
  80cd08:	10004226 	beq	r2,zero,80ce14 <__subdf3+0x82c>
  80cd0c:	1808d0fa 	srli	r4,r3,3
  80cd10:	8822d0fa 	srli	r17,r17,3
  80cd14:	1806977a 	slli	r3,r3,29
  80cd18:	2080022c 	andhi	r2,r4,8
  80cd1c:	1c62b03a 	or	r17,r3,r17
  80cd20:	10000826 	beq	r2,zero,80cd44 <__subdf3+0x75c>
  80cd24:	2812d0fa 	srli	r9,r5,3
  80cd28:	4880022c 	andhi	r2,r9,8
  80cd2c:	1000051e 	bne	r2,zero,80cd44 <__subdf3+0x75c>
  80cd30:	300cd0fa 	srli	r6,r6,3
  80cd34:	2804977a 	slli	r2,r5,29
  80cd38:	4809883a 	mov	r4,r9
  80cd3c:	3825883a 	mov	r18,r7
  80cd40:	11a2b03a 	or	r17,r2,r6
  80cd44:	8806d77a 	srli	r3,r17,29
  80cd48:	200890fa 	slli	r4,r4,3
  80cd4c:	882290fa 	slli	r17,r17,3
  80cd50:	0401ffc4 	movi	r16,2047
  80cd54:	1906b03a 	or	r3,r3,r4
  80cd58:	003e4406 	br	80c66c <__alt_data_end+0xff80c66c>
  80cd5c:	2984b03a 	or	r2,r5,r6
  80cd60:	103e4226 	beq	r2,zero,80c66c <__alt_data_end+0xff80c66c>
  80cd64:	8989c83a 	sub	r4,r17,r6
  80cd68:	8911803a 	cmpltu	r8,r17,r4
  80cd6c:	1945c83a 	sub	r2,r3,r5
  80cd70:	1205c83a 	sub	r2,r2,r8
  80cd74:	1200202c 	andhi	r8,r2,128
  80cd78:	403e9a26 	beq	r8,zero,80c7e4 <__alt_data_end+0xff80c7e4>
  80cd7c:	3463c83a 	sub	r17,r6,r17
  80cd80:	28c5c83a 	sub	r2,r5,r3
  80cd84:	344d803a 	cmpltu	r6,r6,r17
  80cd88:	1187c83a 	sub	r3,r2,r6
  80cd8c:	3825883a 	mov	r18,r7
  80cd90:	003e3606 	br	80c66c <__alt_data_end+0xff80c66c>
  80cd94:	0101ffc4 	movi	r4,2047
  80cd98:	493fc71e 	bne	r9,r4,80ccb8 <__alt_data_end+0xff80ccb8>
  80cd9c:	2807883a 	mov	r3,r5
  80cda0:	3023883a 	mov	r17,r6
  80cda4:	4821883a 	mov	r16,r9
  80cda8:	003e3006 	br	80c66c <__alt_data_end+0xff80c66c>
  80cdac:	10003626 	beq	r2,zero,80ce88 <__subdf3+0x8a0>
  80cdb0:	2984b03a 	or	r2,r5,r6
  80cdb4:	10001726 	beq	r2,zero,80ce14 <__subdf3+0x82c>
  80cdb8:	1808d0fa 	srli	r4,r3,3
  80cdbc:	8822d0fa 	srli	r17,r17,3
  80cdc0:	1806977a 	slli	r3,r3,29
  80cdc4:	2080022c 	andhi	r2,r4,8
  80cdc8:	1c62b03a 	or	r17,r3,r17
  80cdcc:	10000726 	beq	r2,zero,80cdec <__subdf3+0x804>
  80cdd0:	2812d0fa 	srli	r9,r5,3
  80cdd4:	4880022c 	andhi	r2,r9,8
  80cdd8:	1000041e 	bne	r2,zero,80cdec <__subdf3+0x804>
  80cddc:	300cd0fa 	srli	r6,r6,3
  80cde0:	2804977a 	slli	r2,r5,29
  80cde4:	4809883a 	mov	r4,r9
  80cde8:	11a2b03a 	or	r17,r2,r6
  80cdec:	8806d77a 	srli	r3,r17,29
  80cdf0:	200890fa 	slli	r4,r4,3
  80cdf4:	882290fa 	slli	r17,r17,3
  80cdf8:	3825883a 	mov	r18,r7
  80cdfc:	1906b03a 	or	r3,r3,r4
  80ce00:	0401ffc4 	movi	r16,2047
  80ce04:	003e1906 	br	80c66c <__alt_data_end+0xff80c66c>
  80ce08:	000b883a 	mov	r5,zero
  80ce0c:	0005883a 	mov	r2,zero
  80ce10:	003e2e06 	br	80c6cc <__alt_data_end+0xff80c6cc>
  80ce14:	0401ffc4 	movi	r16,2047
  80ce18:	003e1406 	br	80c66c <__alt_data_end+0xff80c66c>
  80ce1c:	0005883a 	mov	r2,zero
  80ce20:	003f7506 	br	80cbf8 <__alt_data_end+0xff80cbf8>
  80ce24:	0005883a 	mov	r2,zero
  80ce28:	0009883a 	mov	r4,zero
  80ce2c:	003e7806 	br	80c810 <__alt_data_end+0xff80c810>
  80ce30:	123ff804 	addi	r8,r2,-32
  80ce34:	01000804 	movi	r4,32
  80ce38:	1a10d83a 	srl	r8,r3,r8
  80ce3c:	11002526 	beq	r2,r4,80ced4 <__subdf3+0x8ec>
  80ce40:	01001004 	movi	r4,64
  80ce44:	2085c83a 	sub	r2,r4,r2
  80ce48:	1884983a 	sll	r2,r3,r2
  80ce4c:	1444b03a 	or	r2,r2,r17
  80ce50:	1004c03a 	cmpne	r2,r2,zero
  80ce54:	40a2b03a 	or	r17,r8,r2
  80ce58:	0005883a 	mov	r2,zero
  80ce5c:	003f1606 	br	80cab8 <__alt_data_end+0xff80cab8>
  80ce60:	02000434 	movhi	r8,16
  80ce64:	0009883a 	mov	r4,zero
  80ce68:	423fffc4 	addi	r8,r8,-1
  80ce6c:	00bfffc4 	movi	r2,-1
  80ce70:	0401ffc4 	movi	r16,2047
  80ce74:	003e6606 	br	80c810 <__alt_data_end+0xff80c810>
  80ce78:	1c62b03a 	or	r17,r3,r17
  80ce7c:	8822c03a 	cmpne	r17,r17,zero
  80ce80:	0005883a 	mov	r2,zero
  80ce84:	003f9906 	br	80ccec <__alt_data_end+0xff80ccec>
  80ce88:	2807883a 	mov	r3,r5
  80ce8c:	3023883a 	mov	r17,r6
  80ce90:	0401ffc4 	movi	r16,2047
  80ce94:	003df506 	br	80c66c <__alt_data_end+0xff80c66c>
  80ce98:	2807883a 	mov	r3,r5
  80ce9c:	3023883a 	mov	r17,r6
  80cea0:	003df206 	br	80c66c <__alt_data_end+0xff80c66c>
  80cea4:	123ff804 	addi	r8,r2,-32
  80cea8:	01000804 	movi	r4,32
  80ceac:	1a10d83a 	srl	r8,r3,r8
  80ceb0:	11000a26 	beq	r2,r4,80cedc <__subdf3+0x8f4>
  80ceb4:	01001004 	movi	r4,64
  80ceb8:	2085c83a 	sub	r2,r4,r2
  80cebc:	1884983a 	sll	r2,r3,r2
  80cec0:	1444b03a 	or	r2,r2,r17
  80cec4:	1004c03a 	cmpne	r2,r2,zero
  80cec8:	40a2b03a 	or	r17,r8,r2
  80cecc:	0005883a 	mov	r2,zero
  80ced0:	003f8606 	br	80ccec <__alt_data_end+0xff80ccec>
  80ced4:	0005883a 	mov	r2,zero
  80ced8:	003fdc06 	br	80ce4c <__alt_data_end+0xff80ce4c>
  80cedc:	0005883a 	mov	r2,zero
  80cee0:	003ff706 	br	80cec0 <__alt_data_end+0xff80cec0>

0080cee4 <__fixdfsi>:
  80cee4:	280cd53a 	srli	r6,r5,20
  80cee8:	00c00434 	movhi	r3,16
  80ceec:	18ffffc4 	addi	r3,r3,-1
  80cef0:	3181ffcc 	andi	r6,r6,2047
  80cef4:	01c0ff84 	movi	r7,1022
  80cef8:	28c6703a 	and	r3,r5,r3
  80cefc:	280ad7fa 	srli	r5,r5,31
  80cf00:	3980120e 	bge	r7,r6,80cf4c <__fixdfsi+0x68>
  80cf04:	00810744 	movi	r2,1053
  80cf08:	11800c16 	blt	r2,r6,80cf3c <__fixdfsi+0x58>
  80cf0c:	00810cc4 	movi	r2,1075
  80cf10:	1185c83a 	sub	r2,r2,r6
  80cf14:	01c007c4 	movi	r7,31
  80cf18:	18c00434 	orhi	r3,r3,16
  80cf1c:	38800d16 	blt	r7,r2,80cf54 <__fixdfsi+0x70>
  80cf20:	31befb44 	addi	r6,r6,-1043
  80cf24:	2084d83a 	srl	r2,r4,r2
  80cf28:	1986983a 	sll	r3,r3,r6
  80cf2c:	1884b03a 	or	r2,r3,r2
  80cf30:	28000726 	beq	r5,zero,80cf50 <__fixdfsi+0x6c>
  80cf34:	0085c83a 	sub	r2,zero,r2
  80cf38:	f800283a 	ret
  80cf3c:	00a00034 	movhi	r2,32768
  80cf40:	10bfffc4 	addi	r2,r2,-1
  80cf44:	2885883a 	add	r2,r5,r2
  80cf48:	f800283a 	ret
  80cf4c:	0005883a 	mov	r2,zero
  80cf50:	f800283a 	ret
  80cf54:	008104c4 	movi	r2,1043
  80cf58:	1185c83a 	sub	r2,r2,r6
  80cf5c:	1884d83a 	srl	r2,r3,r2
  80cf60:	003ff306 	br	80cf30 <__alt_data_end+0xff80cf30>

0080cf64 <__floatsidf>:
  80cf64:	defffd04 	addi	sp,sp,-12
  80cf68:	dfc00215 	stw	ra,8(sp)
  80cf6c:	dc400115 	stw	r17,4(sp)
  80cf70:	dc000015 	stw	r16,0(sp)
  80cf74:	20002b26 	beq	r4,zero,80d024 <__floatsidf+0xc0>
  80cf78:	2023883a 	mov	r17,r4
  80cf7c:	2020d7fa 	srli	r16,r4,31
  80cf80:	20002d16 	blt	r4,zero,80d038 <__floatsidf+0xd4>
  80cf84:	8809883a 	mov	r4,r17
  80cf88:	08007c80 	call	8007c8 <__clzsi2>
  80cf8c:	01410784 	movi	r5,1054
  80cf90:	288bc83a 	sub	r5,r5,r2
  80cf94:	01010cc4 	movi	r4,1075
  80cf98:	2149c83a 	sub	r4,r4,r5
  80cf9c:	00c007c4 	movi	r3,31
  80cfa0:	1900160e 	bge	r3,r4,80cffc <__floatsidf+0x98>
  80cfa4:	00c104c4 	movi	r3,1043
  80cfa8:	1947c83a 	sub	r3,r3,r5
  80cfac:	88c6983a 	sll	r3,r17,r3
  80cfb0:	00800434 	movhi	r2,16
  80cfb4:	10bfffc4 	addi	r2,r2,-1
  80cfb8:	1886703a 	and	r3,r3,r2
  80cfbc:	2941ffcc 	andi	r5,r5,2047
  80cfc0:	800d883a 	mov	r6,r16
  80cfc4:	0005883a 	mov	r2,zero
  80cfc8:	280a953a 	slli	r5,r5,20
  80cfcc:	31803fcc 	andi	r6,r6,255
  80cfd0:	01000434 	movhi	r4,16
  80cfd4:	300c97fa 	slli	r6,r6,31
  80cfd8:	213fffc4 	addi	r4,r4,-1
  80cfdc:	1906703a 	and	r3,r3,r4
  80cfe0:	1946b03a 	or	r3,r3,r5
  80cfe4:	1986b03a 	or	r3,r3,r6
  80cfe8:	dfc00217 	ldw	ra,8(sp)
  80cfec:	dc400117 	ldw	r17,4(sp)
  80cff0:	dc000017 	ldw	r16,0(sp)
  80cff4:	dec00304 	addi	sp,sp,12
  80cff8:	f800283a 	ret
  80cffc:	00c002c4 	movi	r3,11
  80d000:	1887c83a 	sub	r3,r3,r2
  80d004:	88c6d83a 	srl	r3,r17,r3
  80d008:	8904983a 	sll	r2,r17,r4
  80d00c:	01000434 	movhi	r4,16
  80d010:	213fffc4 	addi	r4,r4,-1
  80d014:	2941ffcc 	andi	r5,r5,2047
  80d018:	1906703a 	and	r3,r3,r4
  80d01c:	800d883a 	mov	r6,r16
  80d020:	003fe906 	br	80cfc8 <__alt_data_end+0xff80cfc8>
  80d024:	000d883a 	mov	r6,zero
  80d028:	000b883a 	mov	r5,zero
  80d02c:	0007883a 	mov	r3,zero
  80d030:	0005883a 	mov	r2,zero
  80d034:	003fe406 	br	80cfc8 <__alt_data_end+0xff80cfc8>
  80d038:	0123c83a 	sub	r17,zero,r4
  80d03c:	003fd106 	br	80cf84 <__alt_data_end+0xff80cf84>

0080d040 <__floatunsidf>:
  80d040:	defffe04 	addi	sp,sp,-8
  80d044:	dc000015 	stw	r16,0(sp)
  80d048:	dfc00115 	stw	ra,4(sp)
  80d04c:	2021883a 	mov	r16,r4
  80d050:	20002226 	beq	r4,zero,80d0dc <__floatunsidf+0x9c>
  80d054:	08007c80 	call	8007c8 <__clzsi2>
  80d058:	01010784 	movi	r4,1054
  80d05c:	2089c83a 	sub	r4,r4,r2
  80d060:	01810cc4 	movi	r6,1075
  80d064:	310dc83a 	sub	r6,r6,r4
  80d068:	00c007c4 	movi	r3,31
  80d06c:	1980120e 	bge	r3,r6,80d0b8 <__floatunsidf+0x78>
  80d070:	00c104c4 	movi	r3,1043
  80d074:	1907c83a 	sub	r3,r3,r4
  80d078:	80ca983a 	sll	r5,r16,r3
  80d07c:	00800434 	movhi	r2,16
  80d080:	10bfffc4 	addi	r2,r2,-1
  80d084:	2101ffcc 	andi	r4,r4,2047
  80d088:	0021883a 	mov	r16,zero
  80d08c:	288a703a 	and	r5,r5,r2
  80d090:	2008953a 	slli	r4,r4,20
  80d094:	00c00434 	movhi	r3,16
  80d098:	18ffffc4 	addi	r3,r3,-1
  80d09c:	28c6703a 	and	r3,r5,r3
  80d0a0:	8005883a 	mov	r2,r16
  80d0a4:	1906b03a 	or	r3,r3,r4
  80d0a8:	dfc00117 	ldw	ra,4(sp)
  80d0ac:	dc000017 	ldw	r16,0(sp)
  80d0b0:	dec00204 	addi	sp,sp,8
  80d0b4:	f800283a 	ret
  80d0b8:	00c002c4 	movi	r3,11
  80d0bc:	188bc83a 	sub	r5,r3,r2
  80d0c0:	814ad83a 	srl	r5,r16,r5
  80d0c4:	00c00434 	movhi	r3,16
  80d0c8:	18ffffc4 	addi	r3,r3,-1
  80d0cc:	81a0983a 	sll	r16,r16,r6
  80d0d0:	2101ffcc 	andi	r4,r4,2047
  80d0d4:	28ca703a 	and	r5,r5,r3
  80d0d8:	003fed06 	br	80d090 <__alt_data_end+0xff80d090>
  80d0dc:	0009883a 	mov	r4,zero
  80d0e0:	000b883a 	mov	r5,zero
  80d0e4:	003fea06 	br	80d090 <__alt_data_end+0xff80d090>

0080d0e8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d0e8:	defffe04 	addi	sp,sp,-8
  80d0ec:	dfc00115 	stw	ra,4(sp)
  80d0f0:	df000015 	stw	fp,0(sp)
  80d0f4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d0f8:	d0a00b17 	ldw	r2,-32724(gp)
  80d0fc:	10000326 	beq	r2,zero,80d10c <alt_get_errno+0x24>
  80d100:	d0a00b17 	ldw	r2,-32724(gp)
  80d104:	103ee83a 	callr	r2
  80d108:	00000106 	br	80d110 <alt_get_errno+0x28>
  80d10c:	d0a6d104 	addi	r2,gp,-25788
}
  80d110:	e037883a 	mov	sp,fp
  80d114:	dfc00117 	ldw	ra,4(sp)
  80d118:	df000017 	ldw	fp,0(sp)
  80d11c:	dec00204 	addi	sp,sp,8
  80d120:	f800283a 	ret

0080d124 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80d124:	defffb04 	addi	sp,sp,-20
  80d128:	dfc00415 	stw	ra,16(sp)
  80d12c:	df000315 	stw	fp,12(sp)
  80d130:	df000304 	addi	fp,sp,12
  80d134:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80d138:	e0bfff17 	ldw	r2,-4(fp)
  80d13c:	10000616 	blt	r2,zero,80d158 <close+0x34>
  80d140:	e0bfff17 	ldw	r2,-4(fp)
  80d144:	10c00324 	muli	r3,r2,12
  80d148:	00802074 	movhi	r2,129
  80d14c:	10810704 	addi	r2,r2,1052
  80d150:	1885883a 	add	r2,r3,r2
  80d154:	00000106 	br	80d15c <close+0x38>
  80d158:	0005883a 	mov	r2,zero
  80d15c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  80d160:	e0bffd17 	ldw	r2,-12(fp)
  80d164:	10001926 	beq	r2,zero,80d1cc <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80d168:	e0bffd17 	ldw	r2,-12(fp)
  80d16c:	10800017 	ldw	r2,0(r2)
  80d170:	10800417 	ldw	r2,16(r2)
  80d174:	10000626 	beq	r2,zero,80d190 <close+0x6c>
  80d178:	e0bffd17 	ldw	r2,-12(fp)
  80d17c:	10800017 	ldw	r2,0(r2)
  80d180:	10800417 	ldw	r2,16(r2)
  80d184:	e13ffd17 	ldw	r4,-12(fp)
  80d188:	103ee83a 	callr	r2
  80d18c:	00000106 	br	80d194 <close+0x70>
  80d190:	0005883a 	mov	r2,zero
  80d194:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80d198:	e13fff17 	ldw	r4,-4(fp)
  80d19c:	080d7e40 	call	80d7e4 <alt_release_fd>
    if (rval < 0)
  80d1a0:	e0bffe17 	ldw	r2,-8(fp)
  80d1a4:	1000070e 	bge	r2,zero,80d1c4 <close+0xa0>
    {
      ALT_ERRNO = -rval;
  80d1a8:	080d0e80 	call	80d0e8 <alt_get_errno>
  80d1ac:	1007883a 	mov	r3,r2
  80d1b0:	e0bffe17 	ldw	r2,-8(fp)
  80d1b4:	0085c83a 	sub	r2,zero,r2
  80d1b8:	18800015 	stw	r2,0(r3)
      return -1;
  80d1bc:	00bfffc4 	movi	r2,-1
  80d1c0:	00000706 	br	80d1e0 <close+0xbc>
    }
    return 0;
  80d1c4:	0005883a 	mov	r2,zero
  80d1c8:	00000506 	br	80d1e0 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d1cc:	080d0e80 	call	80d0e8 <alt_get_errno>
  80d1d0:	1007883a 	mov	r3,r2
  80d1d4:	00801444 	movi	r2,81
  80d1d8:	18800015 	stw	r2,0(r3)
    return -1;
  80d1dc:	00bfffc4 	movi	r2,-1
  }
}
  80d1e0:	e037883a 	mov	sp,fp
  80d1e4:	dfc00117 	ldw	ra,4(sp)
  80d1e8:	df000017 	ldw	fp,0(sp)
  80d1ec:	dec00204 	addi	sp,sp,8
  80d1f0:	f800283a 	ret

0080d1f4 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80d1f4:	defffc04 	addi	sp,sp,-16
  80d1f8:	df000315 	stw	fp,12(sp)
  80d1fc:	df000304 	addi	fp,sp,12
  80d200:	e13ffd15 	stw	r4,-12(fp)
  80d204:	e17ffe15 	stw	r5,-8(fp)
  80d208:	e1bfff15 	stw	r6,-4(fp)
  return len;
  80d20c:	e0bfff17 	ldw	r2,-4(fp)
}
  80d210:	e037883a 	mov	sp,fp
  80d214:	df000017 	ldw	fp,0(sp)
  80d218:	dec00104 	addi	sp,sp,4
  80d21c:	f800283a 	ret

0080d220 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d220:	defffe04 	addi	sp,sp,-8
  80d224:	dfc00115 	stw	ra,4(sp)
  80d228:	df000015 	stw	fp,0(sp)
  80d22c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d230:	d0a00b17 	ldw	r2,-32724(gp)
  80d234:	10000326 	beq	r2,zero,80d244 <alt_get_errno+0x24>
  80d238:	d0a00b17 	ldw	r2,-32724(gp)
  80d23c:	103ee83a 	callr	r2
  80d240:	00000106 	br	80d248 <alt_get_errno+0x28>
  80d244:	d0a6d104 	addi	r2,gp,-25788
}
  80d248:	e037883a 	mov	sp,fp
  80d24c:	dfc00117 	ldw	ra,4(sp)
  80d250:	df000017 	ldw	fp,0(sp)
  80d254:	dec00204 	addi	sp,sp,8
  80d258:	f800283a 	ret

0080d25c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80d25c:	defffb04 	addi	sp,sp,-20
  80d260:	dfc00415 	stw	ra,16(sp)
  80d264:	df000315 	stw	fp,12(sp)
  80d268:	df000304 	addi	fp,sp,12
  80d26c:	e13ffe15 	stw	r4,-8(fp)
  80d270:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d274:	e0bffe17 	ldw	r2,-8(fp)
  80d278:	10000616 	blt	r2,zero,80d294 <fstat+0x38>
  80d27c:	e0bffe17 	ldw	r2,-8(fp)
  80d280:	10c00324 	muli	r3,r2,12
  80d284:	00802074 	movhi	r2,129
  80d288:	10810704 	addi	r2,r2,1052
  80d28c:	1885883a 	add	r2,r3,r2
  80d290:	00000106 	br	80d298 <fstat+0x3c>
  80d294:	0005883a 	mov	r2,zero
  80d298:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  80d29c:	e0bffd17 	ldw	r2,-12(fp)
  80d2a0:	10001026 	beq	r2,zero,80d2e4 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80d2a4:	e0bffd17 	ldw	r2,-12(fp)
  80d2a8:	10800017 	ldw	r2,0(r2)
  80d2ac:	10800817 	ldw	r2,32(r2)
  80d2b0:	10000726 	beq	r2,zero,80d2d0 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
  80d2b4:	e0bffd17 	ldw	r2,-12(fp)
  80d2b8:	10800017 	ldw	r2,0(r2)
  80d2bc:	10800817 	ldw	r2,32(r2)
  80d2c0:	e17fff17 	ldw	r5,-4(fp)
  80d2c4:	e13ffd17 	ldw	r4,-12(fp)
  80d2c8:	103ee83a 	callr	r2
  80d2cc:	00000a06 	br	80d2f8 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80d2d0:	e0bfff17 	ldw	r2,-4(fp)
  80d2d4:	00c80004 	movi	r3,8192
  80d2d8:	10c00115 	stw	r3,4(r2)
      return 0;
  80d2dc:	0005883a 	mov	r2,zero
  80d2e0:	00000506 	br	80d2f8 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d2e4:	080d2200 	call	80d220 <alt_get_errno>
  80d2e8:	1007883a 	mov	r3,r2
  80d2ec:	00801444 	movi	r2,81
  80d2f0:	18800015 	stw	r2,0(r3)
    return -1;
  80d2f4:	00bfffc4 	movi	r2,-1
  }
}
  80d2f8:	e037883a 	mov	sp,fp
  80d2fc:	dfc00117 	ldw	ra,4(sp)
  80d300:	df000017 	ldw	fp,0(sp)
  80d304:	dec00204 	addi	sp,sp,8
  80d308:	f800283a 	ret

0080d30c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d30c:	defffe04 	addi	sp,sp,-8
  80d310:	dfc00115 	stw	ra,4(sp)
  80d314:	df000015 	stw	fp,0(sp)
  80d318:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d31c:	d0a00b17 	ldw	r2,-32724(gp)
  80d320:	10000326 	beq	r2,zero,80d330 <alt_get_errno+0x24>
  80d324:	d0a00b17 	ldw	r2,-32724(gp)
  80d328:	103ee83a 	callr	r2
  80d32c:	00000106 	br	80d334 <alt_get_errno+0x28>
  80d330:	d0a6d104 	addi	r2,gp,-25788
}
  80d334:	e037883a 	mov	sp,fp
  80d338:	dfc00117 	ldw	ra,4(sp)
  80d33c:	df000017 	ldw	fp,0(sp)
  80d340:	dec00204 	addi	sp,sp,8
  80d344:	f800283a 	ret

0080d348 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80d348:	deffed04 	addi	sp,sp,-76
  80d34c:	dfc01215 	stw	ra,72(sp)
  80d350:	df001115 	stw	fp,68(sp)
  80d354:	df001104 	addi	fp,sp,68
  80d358:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d35c:	e0bfff17 	ldw	r2,-4(fp)
  80d360:	10000616 	blt	r2,zero,80d37c <isatty+0x34>
  80d364:	e0bfff17 	ldw	r2,-4(fp)
  80d368:	10c00324 	muli	r3,r2,12
  80d36c:	00802074 	movhi	r2,129
  80d370:	10810704 	addi	r2,r2,1052
  80d374:	1885883a 	add	r2,r3,r2
  80d378:	00000106 	br	80d380 <isatty+0x38>
  80d37c:	0005883a 	mov	r2,zero
  80d380:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  80d384:	e0bfef17 	ldw	r2,-68(fp)
  80d388:	10000e26 	beq	r2,zero,80d3c4 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80d38c:	e0bfef17 	ldw	r2,-68(fp)
  80d390:	10800017 	ldw	r2,0(r2)
  80d394:	10800817 	ldw	r2,32(r2)
  80d398:	1000021e 	bne	r2,zero,80d3a4 <isatty+0x5c>
    {
      return 1;
  80d39c:	00800044 	movi	r2,1
  80d3a0:	00000d06 	br	80d3d8 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80d3a4:	e0bff004 	addi	r2,fp,-64
  80d3a8:	100b883a 	mov	r5,r2
  80d3ac:	e13fff17 	ldw	r4,-4(fp)
  80d3b0:	080d25c0 	call	80d25c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80d3b4:	e0bff117 	ldw	r2,-60(fp)
  80d3b8:	10880020 	cmpeqi	r2,r2,8192
  80d3bc:	10803fcc 	andi	r2,r2,255
  80d3c0:	00000506 	br	80d3d8 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d3c4:	080d30c0 	call	80d30c <alt_get_errno>
  80d3c8:	1007883a 	mov	r3,r2
  80d3cc:	00801444 	movi	r2,81
  80d3d0:	18800015 	stw	r2,0(r3)
    return 0;
  80d3d4:	0005883a 	mov	r2,zero
  }
}
  80d3d8:	e037883a 	mov	sp,fp
  80d3dc:	dfc00117 	ldw	ra,4(sp)
  80d3e0:	df000017 	ldw	fp,0(sp)
  80d3e4:	dec00204 	addi	sp,sp,8
  80d3e8:	f800283a 	ret

0080d3ec <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  80d3ec:	defffc04 	addi	sp,sp,-16
  80d3f0:	df000315 	stw	fp,12(sp)
  80d3f4:	df000304 	addi	fp,sp,12
  80d3f8:	e13ffd15 	stw	r4,-12(fp)
  80d3fc:	e17ffe15 	stw	r5,-8(fp)
  80d400:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  80d404:	e0fffe17 	ldw	r3,-8(fp)
  80d408:	e0bffd17 	ldw	r2,-12(fp)
  80d40c:	18800c26 	beq	r3,r2,80d440 <alt_load_section+0x54>
  {
    while( to != end )
  80d410:	00000806 	br	80d434 <alt_load_section+0x48>
    {
      *to++ = *from++;
  80d414:	e0bffe17 	ldw	r2,-8(fp)
  80d418:	10c00104 	addi	r3,r2,4
  80d41c:	e0fffe15 	stw	r3,-8(fp)
  80d420:	e0fffd17 	ldw	r3,-12(fp)
  80d424:	19000104 	addi	r4,r3,4
  80d428:	e13ffd15 	stw	r4,-12(fp)
  80d42c:	18c00017 	ldw	r3,0(r3)
  80d430:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  80d434:	e0fffe17 	ldw	r3,-8(fp)
  80d438:	e0bfff17 	ldw	r2,-4(fp)
  80d43c:	18bff51e 	bne	r3,r2,80d414 <__alt_data_end+0xff80d414>
    {
      *to++ = *from++;
    }
  }
}
  80d440:	0001883a 	nop
  80d444:	e037883a 	mov	sp,fp
  80d448:	df000017 	ldw	fp,0(sp)
  80d44c:	dec00104 	addi	sp,sp,4
  80d450:	f800283a 	ret

0080d454 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  80d454:	defffe04 	addi	sp,sp,-8
  80d458:	dfc00115 	stw	ra,4(sp)
  80d45c:	df000015 	stw	fp,0(sp)
  80d460:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  80d464:	01802074 	movhi	r6,129
  80d468:	31858f04 	addi	r6,r6,5692
  80d46c:	01402074 	movhi	r5,129
  80d470:	297ed404 	addi	r5,r5,-1200
  80d474:	01002074 	movhi	r4,129
  80d478:	21058f04 	addi	r4,r4,5692
  80d47c:	080d3ec0 	call	80d3ec <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80d480:	01802034 	movhi	r6,128
  80d484:	31807004 	addi	r6,r6,448
  80d488:	01402034 	movhi	r5,128
  80d48c:	29400804 	addi	r5,r5,32
  80d490:	01002034 	movhi	r4,128
  80d494:	21000804 	addi	r4,r4,32
  80d498:	080d3ec0 	call	80d3ec <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  80d49c:	01802074 	movhi	r6,129
  80d4a0:	31bed404 	addi	r6,r6,-1200
  80d4a4:	01402074 	movhi	r5,129
  80d4a8:	297dff04 	addi	r5,r5,-2052
  80d4ac:	01002074 	movhi	r4,129
  80d4b0:	213dff04 	addi	r4,r4,-2052
  80d4b4:	080d3ec0 	call	80d3ec <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  80d4b8:	080e7840 	call	80e784 <alt_dcache_flush_all>
  alt_icache_flush_all();
  80d4bc:	080e96c0 	call	80e96c <alt_icache_flush_all>
}
  80d4c0:	0001883a 	nop
  80d4c4:	e037883a 	mov	sp,fp
  80d4c8:	dfc00117 	ldw	ra,4(sp)
  80d4cc:	df000017 	ldw	fp,0(sp)
  80d4d0:	dec00204 	addi	sp,sp,8
  80d4d4:	f800283a 	ret

0080d4d8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d4d8:	defffe04 	addi	sp,sp,-8
  80d4dc:	dfc00115 	stw	ra,4(sp)
  80d4e0:	df000015 	stw	fp,0(sp)
  80d4e4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d4e8:	d0a00b17 	ldw	r2,-32724(gp)
  80d4ec:	10000326 	beq	r2,zero,80d4fc <alt_get_errno+0x24>
  80d4f0:	d0a00b17 	ldw	r2,-32724(gp)
  80d4f4:	103ee83a 	callr	r2
  80d4f8:	00000106 	br	80d500 <alt_get_errno+0x28>
  80d4fc:	d0a6d104 	addi	r2,gp,-25788
}
  80d500:	e037883a 	mov	sp,fp
  80d504:	dfc00117 	ldw	ra,4(sp)
  80d508:	df000017 	ldw	fp,0(sp)
  80d50c:	dec00204 	addi	sp,sp,8
  80d510:	f800283a 	ret

0080d514 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80d514:	defff904 	addi	sp,sp,-28
  80d518:	dfc00615 	stw	ra,24(sp)
  80d51c:	df000515 	stw	fp,20(sp)
  80d520:	df000504 	addi	fp,sp,20
  80d524:	e13ffd15 	stw	r4,-12(fp)
  80d528:	e17ffe15 	stw	r5,-8(fp)
  80d52c:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80d530:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d534:	e0bffd17 	ldw	r2,-12(fp)
  80d538:	10000616 	blt	r2,zero,80d554 <lseek+0x40>
  80d53c:	e0bffd17 	ldw	r2,-12(fp)
  80d540:	10c00324 	muli	r3,r2,12
  80d544:	00802074 	movhi	r2,129
  80d548:	10810704 	addi	r2,r2,1052
  80d54c:	1885883a 	add	r2,r3,r2
  80d550:	00000106 	br	80d558 <lseek+0x44>
  80d554:	0005883a 	mov	r2,zero
  80d558:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  80d55c:	e0bffc17 	ldw	r2,-16(fp)
  80d560:	10001026 	beq	r2,zero,80d5a4 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80d564:	e0bffc17 	ldw	r2,-16(fp)
  80d568:	10800017 	ldw	r2,0(r2)
  80d56c:	10800717 	ldw	r2,28(r2)
  80d570:	10000926 	beq	r2,zero,80d598 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80d574:	e0bffc17 	ldw	r2,-16(fp)
  80d578:	10800017 	ldw	r2,0(r2)
  80d57c:	10800717 	ldw	r2,28(r2)
  80d580:	e1bfff17 	ldw	r6,-4(fp)
  80d584:	e17ffe17 	ldw	r5,-8(fp)
  80d588:	e13ffc17 	ldw	r4,-16(fp)
  80d58c:	103ee83a 	callr	r2
  80d590:	e0bffb15 	stw	r2,-20(fp)
  80d594:	00000506 	br	80d5ac <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80d598:	00bfde84 	movi	r2,-134
  80d59c:	e0bffb15 	stw	r2,-20(fp)
  80d5a0:	00000206 	br	80d5ac <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
  80d5a4:	00bfebc4 	movi	r2,-81
  80d5a8:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  80d5ac:	e0bffb17 	ldw	r2,-20(fp)
  80d5b0:	1000070e 	bge	r2,zero,80d5d0 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
  80d5b4:	080d4d80 	call	80d4d8 <alt_get_errno>
  80d5b8:	1007883a 	mov	r3,r2
  80d5bc:	e0bffb17 	ldw	r2,-20(fp)
  80d5c0:	0085c83a 	sub	r2,zero,r2
  80d5c4:	18800015 	stw	r2,0(r3)
    rc = -1;
  80d5c8:	00bfffc4 	movi	r2,-1
  80d5cc:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  80d5d0:	e0bffb17 	ldw	r2,-20(fp)
}
  80d5d4:	e037883a 	mov	sp,fp
  80d5d8:	dfc00117 	ldw	ra,4(sp)
  80d5dc:	df000017 	ldw	fp,0(sp)
  80d5e0:	dec00204 	addi	sp,sp,8
  80d5e4:	f800283a 	ret

0080d5e8 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80d5e8:	defffd04 	addi	sp,sp,-12
  80d5ec:	dfc00215 	stw	ra,8(sp)
  80d5f0:	df000115 	stw	fp,4(sp)
  80d5f4:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80d5f8:	0009883a 	mov	r4,zero
  80d5fc:	080da600 	call	80da60 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  80d600:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80d604:	080da980 	call	80da98 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80d608:	01802074 	movhi	r6,129
  80d60c:	31becc04 	addi	r6,r6,-1232
  80d610:	01402074 	movhi	r5,129
  80d614:	297ecc04 	addi	r5,r5,-1232
  80d618:	01002074 	movhi	r4,129
  80d61c:	213ecc04 	addi	r4,r4,-1232
  80d620:	080ed040 	call	80ed04 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80d624:	080e8ac0 	call	80e8ac <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80d628:	01002074 	movhi	r4,129
  80d62c:	213a4304 	addi	r4,r4,-5876
  80d630:	080f4680 	call	80f468 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80d634:	d0a6d217 	ldw	r2,-25784(gp)
  80d638:	d0e6d317 	ldw	r3,-25780(gp)
  80d63c:	d126d417 	ldw	r4,-25776(gp)
  80d640:	200d883a 	mov	r6,r4
  80d644:	180b883a 	mov	r5,r3
  80d648:	1009883a 	mov	r4,r2
  80d64c:	080020c0 	call	80020c <main>
  80d650:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80d654:	01000044 	movi	r4,1
  80d658:	080d1240 	call	80d124 <close>
  exit (result);
  80d65c:	e13fff17 	ldw	r4,-4(fp)
  80d660:	080f47c0 	call	80f47c <exit>

0080d664 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  80d664:	defffe04 	addi	sp,sp,-8
  80d668:	df000115 	stw	fp,4(sp)
  80d66c:	df000104 	addi	fp,sp,4
  80d670:	e13fff15 	stw	r4,-4(fp)
}
  80d674:	0001883a 	nop
  80d678:	e037883a 	mov	sp,fp
  80d67c:	df000017 	ldw	fp,0(sp)
  80d680:	dec00104 	addi	sp,sp,4
  80d684:	f800283a 	ret

0080d688 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  80d688:	defffe04 	addi	sp,sp,-8
  80d68c:	df000115 	stw	fp,4(sp)
  80d690:	df000104 	addi	fp,sp,4
  80d694:	e13fff15 	stw	r4,-4(fp)
}
  80d698:	0001883a 	nop
  80d69c:	e037883a 	mov	sp,fp
  80d6a0:	df000017 	ldw	fp,0(sp)
  80d6a4:	dec00104 	addi	sp,sp,4
  80d6a8:	f800283a 	ret

0080d6ac <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d6ac:	defffe04 	addi	sp,sp,-8
  80d6b0:	dfc00115 	stw	ra,4(sp)
  80d6b4:	df000015 	stw	fp,0(sp)
  80d6b8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d6bc:	d0a00b17 	ldw	r2,-32724(gp)
  80d6c0:	10000326 	beq	r2,zero,80d6d0 <alt_get_errno+0x24>
  80d6c4:	d0a00b17 	ldw	r2,-32724(gp)
  80d6c8:	103ee83a 	callr	r2
  80d6cc:	00000106 	br	80d6d4 <alt_get_errno+0x28>
  80d6d0:	d0a6d104 	addi	r2,gp,-25788
}
  80d6d4:	e037883a 	mov	sp,fp
  80d6d8:	dfc00117 	ldw	ra,4(sp)
  80d6dc:	df000017 	ldw	fp,0(sp)
  80d6e0:	dec00204 	addi	sp,sp,8
  80d6e4:	f800283a 	ret

0080d6e8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80d6e8:	defff904 	addi	sp,sp,-28
  80d6ec:	dfc00615 	stw	ra,24(sp)
  80d6f0:	df000515 	stw	fp,20(sp)
  80d6f4:	df000504 	addi	fp,sp,20
  80d6f8:	e13ffd15 	stw	r4,-12(fp)
  80d6fc:	e17ffe15 	stw	r5,-8(fp)
  80d700:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d704:	e0bffd17 	ldw	r2,-12(fp)
  80d708:	10000616 	blt	r2,zero,80d724 <read+0x3c>
  80d70c:	e0bffd17 	ldw	r2,-12(fp)
  80d710:	10c00324 	muli	r3,r2,12
  80d714:	00802074 	movhi	r2,129
  80d718:	10810704 	addi	r2,r2,1052
  80d71c:	1885883a 	add	r2,r3,r2
  80d720:	00000106 	br	80d728 <read+0x40>
  80d724:	0005883a 	mov	r2,zero
  80d728:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80d72c:	e0bffb17 	ldw	r2,-20(fp)
  80d730:	10002226 	beq	r2,zero,80d7bc <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80d734:	e0bffb17 	ldw	r2,-20(fp)
  80d738:	10800217 	ldw	r2,8(r2)
  80d73c:	108000cc 	andi	r2,r2,3
  80d740:	10800060 	cmpeqi	r2,r2,1
  80d744:	1000181e 	bne	r2,zero,80d7a8 <read+0xc0>
        (fd->dev->read))
  80d748:	e0bffb17 	ldw	r2,-20(fp)
  80d74c:	10800017 	ldw	r2,0(r2)
  80d750:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80d754:	10001426 	beq	r2,zero,80d7a8 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80d758:	e0bffb17 	ldw	r2,-20(fp)
  80d75c:	10800017 	ldw	r2,0(r2)
  80d760:	10800517 	ldw	r2,20(r2)
  80d764:	e0ffff17 	ldw	r3,-4(fp)
  80d768:	180d883a 	mov	r6,r3
  80d76c:	e17ffe17 	ldw	r5,-8(fp)
  80d770:	e13ffb17 	ldw	r4,-20(fp)
  80d774:	103ee83a 	callr	r2
  80d778:	e0bffc15 	stw	r2,-16(fp)
  80d77c:	e0bffc17 	ldw	r2,-16(fp)
  80d780:	1000070e 	bge	r2,zero,80d7a0 <read+0xb8>
        {
          ALT_ERRNO = -rval;
  80d784:	080d6ac0 	call	80d6ac <alt_get_errno>
  80d788:	1007883a 	mov	r3,r2
  80d78c:	e0bffc17 	ldw	r2,-16(fp)
  80d790:	0085c83a 	sub	r2,zero,r2
  80d794:	18800015 	stw	r2,0(r3)
          return -1;
  80d798:	00bfffc4 	movi	r2,-1
  80d79c:	00000c06 	br	80d7d0 <read+0xe8>
        }
        return rval;
  80d7a0:	e0bffc17 	ldw	r2,-16(fp)
  80d7a4:	00000a06 	br	80d7d0 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80d7a8:	080d6ac0 	call	80d6ac <alt_get_errno>
  80d7ac:	1007883a 	mov	r3,r2
  80d7b0:	00800344 	movi	r2,13
  80d7b4:	18800015 	stw	r2,0(r3)
  80d7b8:	00000406 	br	80d7cc <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80d7bc:	080d6ac0 	call	80d6ac <alt_get_errno>
  80d7c0:	1007883a 	mov	r3,r2
  80d7c4:	00801444 	movi	r2,81
  80d7c8:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80d7cc:	00bfffc4 	movi	r2,-1
}
  80d7d0:	e037883a 	mov	sp,fp
  80d7d4:	dfc00117 	ldw	ra,4(sp)
  80d7d8:	df000017 	ldw	fp,0(sp)
  80d7dc:	dec00204 	addi	sp,sp,8
  80d7e0:	f800283a 	ret

0080d7e4 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80d7e4:	defffe04 	addi	sp,sp,-8
  80d7e8:	df000115 	stw	fp,4(sp)
  80d7ec:	df000104 	addi	fp,sp,4
  80d7f0:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  80d7f4:	e0bfff17 	ldw	r2,-4(fp)
  80d7f8:	108000d0 	cmplti	r2,r2,3
  80d7fc:	10000d1e 	bne	r2,zero,80d834 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
  80d800:	00802074 	movhi	r2,129
  80d804:	10810704 	addi	r2,r2,1052
  80d808:	e0ffff17 	ldw	r3,-4(fp)
  80d80c:	18c00324 	muli	r3,r3,12
  80d810:	10c5883a 	add	r2,r2,r3
  80d814:	10800204 	addi	r2,r2,8
  80d818:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  80d81c:	00802074 	movhi	r2,129
  80d820:	10810704 	addi	r2,r2,1052
  80d824:	e0ffff17 	ldw	r3,-4(fp)
  80d828:	18c00324 	muli	r3,r3,12
  80d82c:	10c5883a 	add	r2,r2,r3
  80d830:	10000015 	stw	zero,0(r2)
  }
}
  80d834:	0001883a 	nop
  80d838:	e037883a 	mov	sp,fp
  80d83c:	df000017 	ldw	fp,0(sp)
  80d840:	dec00104 	addi	sp,sp,4
  80d844:	f800283a 	ret

0080d848 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80d848:	defff904 	addi	sp,sp,-28
  80d84c:	df000615 	stw	fp,24(sp)
  80d850:	df000604 	addi	fp,sp,24
  80d854:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80d858:	0005303a 	rdctl	r2,status
  80d85c:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80d860:	e0fffe17 	ldw	r3,-8(fp)
  80d864:	00bfff84 	movi	r2,-2
  80d868:	1884703a 	and	r2,r3,r2
  80d86c:	1001703a 	wrctl	status,r2
  
  return context;
  80d870:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  80d874:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  80d878:	d0a00c17 	ldw	r2,-32720(gp)
  80d87c:	10c000c4 	addi	r3,r2,3
  80d880:	00bfff04 	movi	r2,-4
  80d884:	1884703a 	and	r2,r3,r2
  80d888:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  80d88c:	d0e00c17 	ldw	r3,-32720(gp)
  80d890:	e0bfff17 	ldw	r2,-4(fp)
  80d894:	1887883a 	add	r3,r3,r2
  80d898:	00804034 	movhi	r2,256
  80d89c:	10800004 	addi	r2,r2,0
  80d8a0:	10c0062e 	bgeu	r2,r3,80d8bc <sbrk+0x74>
  80d8a4:	e0bffb17 	ldw	r2,-20(fp)
  80d8a8:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80d8ac:	e0bffa17 	ldw	r2,-24(fp)
  80d8b0:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  80d8b4:	00bfffc4 	movi	r2,-1
  80d8b8:	00000b06 	br	80d8e8 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  80d8bc:	d0a00c17 	ldw	r2,-32720(gp)
  80d8c0:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
  80d8c4:	d0e00c17 	ldw	r3,-32720(gp)
  80d8c8:	e0bfff17 	ldw	r2,-4(fp)
  80d8cc:	1885883a 	add	r2,r3,r2
  80d8d0:	d0a00c15 	stw	r2,-32720(gp)
  80d8d4:	e0bffb17 	ldw	r2,-20(fp)
  80d8d8:	e0bffc15 	stw	r2,-16(fp)
  80d8dc:	e0bffc17 	ldw	r2,-16(fp)
  80d8e0:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  80d8e4:	e0bffd17 	ldw	r2,-12(fp)
} 
  80d8e8:	e037883a 	mov	sp,fp
  80d8ec:	df000017 	ldw	fp,0(sp)
  80d8f0:	dec00104 	addi	sp,sp,4
  80d8f4:	f800283a 	ret

0080d8f8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d8f8:	defffe04 	addi	sp,sp,-8
  80d8fc:	dfc00115 	stw	ra,4(sp)
  80d900:	df000015 	stw	fp,0(sp)
  80d904:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d908:	d0a00b17 	ldw	r2,-32724(gp)
  80d90c:	10000326 	beq	r2,zero,80d91c <alt_get_errno+0x24>
  80d910:	d0a00b17 	ldw	r2,-32724(gp)
  80d914:	103ee83a 	callr	r2
  80d918:	00000106 	br	80d920 <alt_get_errno+0x28>
  80d91c:	d0a6d104 	addi	r2,gp,-25788
}
  80d920:	e037883a 	mov	sp,fp
  80d924:	dfc00117 	ldw	ra,4(sp)
  80d928:	df000017 	ldw	fp,0(sp)
  80d92c:	dec00204 	addi	sp,sp,8
  80d930:	f800283a 	ret

0080d934 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80d934:	defff904 	addi	sp,sp,-28
  80d938:	dfc00615 	stw	ra,24(sp)
  80d93c:	df000515 	stw	fp,20(sp)
  80d940:	df000504 	addi	fp,sp,20
  80d944:	e13ffd15 	stw	r4,-12(fp)
  80d948:	e17ffe15 	stw	r5,-8(fp)
  80d94c:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d950:	e0bffd17 	ldw	r2,-12(fp)
  80d954:	10000616 	blt	r2,zero,80d970 <write+0x3c>
  80d958:	e0bffd17 	ldw	r2,-12(fp)
  80d95c:	10c00324 	muli	r3,r2,12
  80d960:	00802074 	movhi	r2,129
  80d964:	10810704 	addi	r2,r2,1052
  80d968:	1885883a 	add	r2,r3,r2
  80d96c:	00000106 	br	80d974 <write+0x40>
  80d970:	0005883a 	mov	r2,zero
  80d974:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80d978:	e0bffb17 	ldw	r2,-20(fp)
  80d97c:	10002126 	beq	r2,zero,80da04 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  80d980:	e0bffb17 	ldw	r2,-20(fp)
  80d984:	10800217 	ldw	r2,8(r2)
  80d988:	108000cc 	andi	r2,r2,3
  80d98c:	10001826 	beq	r2,zero,80d9f0 <write+0xbc>
  80d990:	e0bffb17 	ldw	r2,-20(fp)
  80d994:	10800017 	ldw	r2,0(r2)
  80d998:	10800617 	ldw	r2,24(r2)
  80d99c:	10001426 	beq	r2,zero,80d9f0 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  80d9a0:	e0bffb17 	ldw	r2,-20(fp)
  80d9a4:	10800017 	ldw	r2,0(r2)
  80d9a8:	10800617 	ldw	r2,24(r2)
  80d9ac:	e0ffff17 	ldw	r3,-4(fp)
  80d9b0:	180d883a 	mov	r6,r3
  80d9b4:	e17ffe17 	ldw	r5,-8(fp)
  80d9b8:	e13ffb17 	ldw	r4,-20(fp)
  80d9bc:	103ee83a 	callr	r2
  80d9c0:	e0bffc15 	stw	r2,-16(fp)
  80d9c4:	e0bffc17 	ldw	r2,-16(fp)
  80d9c8:	1000070e 	bge	r2,zero,80d9e8 <write+0xb4>
      {
        ALT_ERRNO = -rval;
  80d9cc:	080d8f80 	call	80d8f8 <alt_get_errno>
  80d9d0:	1007883a 	mov	r3,r2
  80d9d4:	e0bffc17 	ldw	r2,-16(fp)
  80d9d8:	0085c83a 	sub	r2,zero,r2
  80d9dc:	18800015 	stw	r2,0(r3)
        return -1;
  80d9e0:	00bfffc4 	movi	r2,-1
  80d9e4:	00000c06 	br	80da18 <write+0xe4>
      }
      return rval;
  80d9e8:	e0bffc17 	ldw	r2,-16(fp)
  80d9ec:	00000a06 	br	80da18 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
  80d9f0:	080d8f80 	call	80d8f8 <alt_get_errno>
  80d9f4:	1007883a 	mov	r3,r2
  80d9f8:	00800344 	movi	r2,13
  80d9fc:	18800015 	stw	r2,0(r3)
  80da00:	00000406 	br	80da14 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  80da04:	080d8f80 	call	80d8f8 <alt_get_errno>
  80da08:	1007883a 	mov	r3,r2
  80da0c:	00801444 	movi	r2,81
  80da10:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80da14:	00bfffc4 	movi	r2,-1
}
  80da18:	e037883a 	mov	sp,fp
  80da1c:	dfc00117 	ldw	ra,4(sp)
  80da20:	df000017 	ldw	fp,0(sp)
  80da24:	dec00204 	addi	sp,sp,8
  80da28:	f800283a 	ret

0080da2c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  80da2c:	defffd04 	addi	sp,sp,-12
  80da30:	dfc00215 	stw	ra,8(sp)
  80da34:	df000115 	stw	fp,4(sp)
  80da38:	df000104 	addi	fp,sp,4
  80da3c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  80da40:	d1600804 	addi	r5,gp,-32736
  80da44:	e13fff17 	ldw	r4,-4(fp)
  80da48:	080e8080 	call	80e808 <alt_dev_llist_insert>
}
  80da4c:	e037883a 	mov	sp,fp
  80da50:	dfc00117 	ldw	ra,4(sp)
  80da54:	df000017 	ldw	fp,0(sp)
  80da58:	dec00204 	addi	sp,sp,8
  80da5c:	f800283a 	ret

0080da60 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  80da60:	defffd04 	addi	sp,sp,-12
  80da64:	dfc00215 	stw	ra,8(sp)
  80da68:	df000115 	stw	fp,4(sp)
  80da6c:	df000104 	addi	fp,sp,4
  80da70:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU, cpu);
  80da74:	080f1780 	call	80f178 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  80da78:	00800044 	movi	r2,1
  80da7c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  80da80:	0001883a 	nop
  80da84:	e037883a 	mov	sp,fp
  80da88:	dfc00117 	ldw	ra,4(sp)
  80da8c:	df000017 	ldw	fp,0(sp)
  80da90:	dec00204 	addi	sp,sp,8
  80da94:	f800283a 	ret

0080da98 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  80da98:	defffe04 	addi	sp,sp,-8
  80da9c:	dfc00115 	stw	ra,4(sp)
  80daa0:	df000015 	stw	fp,0(sp)
  80daa4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  80daa8:	01c0fa04 	movi	r7,1000
  80daac:	01800044 	movi	r6,1
  80dab0:	000b883a 	mov	r5,zero
  80dab4:	01004034 	movhi	r4,256
  80dab8:	21040004 	addi	r4,r4,4096
  80dabc:	080e5dc0 	call	80e5dc <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  80dac0:	01800404 	movi	r6,16
  80dac4:	000b883a 	mov	r5,zero
  80dac8:	01002074 	movhi	r4,129
  80dacc:	21017104 	addi	r4,r4,1476
  80dad0:	080dc600 	call	80dc60 <altera_avalon_jtag_uart_init>
  80dad4:	01002074 	movhi	r4,129
  80dad8:	21016704 	addi	r4,r4,1436
  80dadc:	080da2c0 	call	80da2c <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
  80dae0:	0001883a 	nop
}
  80dae4:	0001883a 	nop
  80dae8:	e037883a 	mov	sp,fp
  80daec:	dfc00117 	ldw	ra,4(sp)
  80daf0:	df000017 	ldw	fp,0(sp)
  80daf4:	dec00204 	addi	sp,sp,8
  80daf8:	f800283a 	ret

0080dafc <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80dafc:	defffa04 	addi	sp,sp,-24
  80db00:	dfc00515 	stw	ra,20(sp)
  80db04:	df000415 	stw	fp,16(sp)
  80db08:	df000404 	addi	fp,sp,16
  80db0c:	e13ffd15 	stw	r4,-12(fp)
  80db10:	e17ffe15 	stw	r5,-8(fp)
  80db14:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80db18:	e0bffd17 	ldw	r2,-12(fp)
  80db1c:	10800017 	ldw	r2,0(r2)
  80db20:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  80db24:	e0bffc17 	ldw	r2,-16(fp)
  80db28:	10c00a04 	addi	r3,r2,40
  80db2c:	e0bffd17 	ldw	r2,-12(fp)
  80db30:	10800217 	ldw	r2,8(r2)
  80db34:	100f883a 	mov	r7,r2
  80db38:	e1bfff17 	ldw	r6,-4(fp)
  80db3c:	e17ffe17 	ldw	r5,-8(fp)
  80db40:	1809883a 	mov	r4,r3
  80db44:	080e1240 	call	80e124 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  80db48:	e037883a 	mov	sp,fp
  80db4c:	dfc00117 	ldw	ra,4(sp)
  80db50:	df000017 	ldw	fp,0(sp)
  80db54:	dec00204 	addi	sp,sp,8
  80db58:	f800283a 	ret

0080db5c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  80db5c:	defffa04 	addi	sp,sp,-24
  80db60:	dfc00515 	stw	ra,20(sp)
  80db64:	df000415 	stw	fp,16(sp)
  80db68:	df000404 	addi	fp,sp,16
  80db6c:	e13ffd15 	stw	r4,-12(fp)
  80db70:	e17ffe15 	stw	r5,-8(fp)
  80db74:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80db78:	e0bffd17 	ldw	r2,-12(fp)
  80db7c:	10800017 	ldw	r2,0(r2)
  80db80:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  80db84:	e0bffc17 	ldw	r2,-16(fp)
  80db88:	10c00a04 	addi	r3,r2,40
  80db8c:	e0bffd17 	ldw	r2,-12(fp)
  80db90:	10800217 	ldw	r2,8(r2)
  80db94:	100f883a 	mov	r7,r2
  80db98:	e1bfff17 	ldw	r6,-4(fp)
  80db9c:	e17ffe17 	ldw	r5,-8(fp)
  80dba0:	1809883a 	mov	r4,r3
  80dba4:	080e3400 	call	80e340 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  80dba8:	e037883a 	mov	sp,fp
  80dbac:	dfc00117 	ldw	ra,4(sp)
  80dbb0:	df000017 	ldw	fp,0(sp)
  80dbb4:	dec00204 	addi	sp,sp,8
  80dbb8:	f800283a 	ret

0080dbbc <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  80dbbc:	defffc04 	addi	sp,sp,-16
  80dbc0:	dfc00315 	stw	ra,12(sp)
  80dbc4:	df000215 	stw	fp,8(sp)
  80dbc8:	df000204 	addi	fp,sp,8
  80dbcc:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80dbd0:	e0bfff17 	ldw	r2,-4(fp)
  80dbd4:	10800017 	ldw	r2,0(r2)
  80dbd8:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  80dbdc:	e0bffe17 	ldw	r2,-8(fp)
  80dbe0:	10c00a04 	addi	r3,r2,40
  80dbe4:	e0bfff17 	ldw	r2,-4(fp)
  80dbe8:	10800217 	ldw	r2,8(r2)
  80dbec:	100b883a 	mov	r5,r2
  80dbf0:	1809883a 	mov	r4,r3
  80dbf4:	080dfcc0 	call	80dfcc <altera_avalon_jtag_uart_close>
}
  80dbf8:	e037883a 	mov	sp,fp
  80dbfc:	dfc00117 	ldw	ra,4(sp)
  80dc00:	df000017 	ldw	fp,0(sp)
  80dc04:	dec00204 	addi	sp,sp,8
  80dc08:	f800283a 	ret

0080dc0c <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  80dc0c:	defffa04 	addi	sp,sp,-24
  80dc10:	dfc00515 	stw	ra,20(sp)
  80dc14:	df000415 	stw	fp,16(sp)
  80dc18:	df000404 	addi	fp,sp,16
  80dc1c:	e13ffd15 	stw	r4,-12(fp)
  80dc20:	e17ffe15 	stw	r5,-8(fp)
  80dc24:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  80dc28:	e0bffd17 	ldw	r2,-12(fp)
  80dc2c:	10800017 	ldw	r2,0(r2)
  80dc30:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  80dc34:	e0bffc17 	ldw	r2,-16(fp)
  80dc38:	10800a04 	addi	r2,r2,40
  80dc3c:	e1bfff17 	ldw	r6,-4(fp)
  80dc40:	e17ffe17 	ldw	r5,-8(fp)
  80dc44:	1009883a 	mov	r4,r2
  80dc48:	080e0340 	call	80e034 <altera_avalon_jtag_uart_ioctl>
}
  80dc4c:	e037883a 	mov	sp,fp
  80dc50:	dfc00117 	ldw	ra,4(sp)
  80dc54:	df000017 	ldw	fp,0(sp)
  80dc58:	dec00204 	addi	sp,sp,8
  80dc5c:	f800283a 	ret

0080dc60 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  80dc60:	defffa04 	addi	sp,sp,-24
  80dc64:	dfc00515 	stw	ra,20(sp)
  80dc68:	df000415 	stw	fp,16(sp)
  80dc6c:	df000404 	addi	fp,sp,16
  80dc70:	e13ffd15 	stw	r4,-12(fp)
  80dc74:	e17ffe15 	stw	r5,-8(fp)
  80dc78:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80dc7c:	e0bffd17 	ldw	r2,-12(fp)
  80dc80:	00c00044 	movi	r3,1
  80dc84:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  80dc88:	e0bffd17 	ldw	r2,-12(fp)
  80dc8c:	10800017 	ldw	r2,0(r2)
  80dc90:	10800104 	addi	r2,r2,4
  80dc94:	1007883a 	mov	r3,r2
  80dc98:	e0bffd17 	ldw	r2,-12(fp)
  80dc9c:	10800817 	ldw	r2,32(r2)
  80dca0:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  80dca4:	e0bffe17 	ldw	r2,-8(fp)
  80dca8:	e0ffff17 	ldw	r3,-4(fp)
  80dcac:	d8000015 	stw	zero,0(sp)
  80dcb0:	e1fffd17 	ldw	r7,-12(fp)
  80dcb4:	01802074 	movhi	r6,129
  80dcb8:	31b74804 	addi	r6,r6,-8928
  80dcbc:	180b883a 	mov	r5,r3
  80dcc0:	1009883a 	mov	r4,r2
  80dcc4:	080e9a00 	call	80e9a0 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  80dcc8:	e0bffd17 	ldw	r2,-12(fp)
  80dccc:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  80dcd0:	e0bffd17 	ldw	r2,-12(fp)
  80dcd4:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80dcd8:	d0e6d617 	ldw	r3,-25768(gp)
  80dcdc:	e1fffd17 	ldw	r7,-12(fp)
  80dce0:	01802074 	movhi	r6,129
  80dce4:	31b7cb04 	addi	r6,r6,-8404
  80dce8:	180b883a 	mov	r5,r3
  80dcec:	1009883a 	mov	r4,r2
  80dcf0:	080e6580 	call	80e658 <alt_alarm_start>
  80dcf4:	1000040e 	bge	r2,zero,80dd08 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  80dcf8:	e0fffd17 	ldw	r3,-12(fp)
  80dcfc:	00a00034 	movhi	r2,32768
  80dd00:	10bfffc4 	addi	r2,r2,-1
  80dd04:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  80dd08:	0001883a 	nop
  80dd0c:	e037883a 	mov	sp,fp
  80dd10:	dfc00117 	ldw	ra,4(sp)
  80dd14:	df000017 	ldw	fp,0(sp)
  80dd18:	dec00204 	addi	sp,sp,8
  80dd1c:	f800283a 	ret

0080dd20 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  80dd20:	defff804 	addi	sp,sp,-32
  80dd24:	df000715 	stw	fp,28(sp)
  80dd28:	df000704 	addi	fp,sp,28
  80dd2c:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  80dd30:	e0bfff17 	ldw	r2,-4(fp)
  80dd34:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
  80dd38:	e0bffb17 	ldw	r2,-20(fp)
  80dd3c:	10800017 	ldw	r2,0(r2)
  80dd40:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80dd44:	e0bffc17 	ldw	r2,-16(fp)
  80dd48:	10800104 	addi	r2,r2,4
  80dd4c:	10800037 	ldwio	r2,0(r2)
  80dd50:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  80dd54:	e0bffd17 	ldw	r2,-12(fp)
  80dd58:	1080c00c 	andi	r2,r2,768
  80dd5c:	10006d26 	beq	r2,zero,80df14 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  80dd60:	e0bffd17 	ldw	r2,-12(fp)
  80dd64:	1080400c 	andi	r2,r2,256
  80dd68:	10003526 	beq	r2,zero,80de40 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  80dd6c:	00800074 	movhi	r2,1
  80dd70:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80dd74:	e0bffb17 	ldw	r2,-20(fp)
  80dd78:	10800a17 	ldw	r2,40(r2)
  80dd7c:	10800044 	addi	r2,r2,1
  80dd80:	1081ffcc 	andi	r2,r2,2047
  80dd84:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
  80dd88:	e0bffb17 	ldw	r2,-20(fp)
  80dd8c:	10c00b17 	ldw	r3,44(r2)
  80dd90:	e0bffe17 	ldw	r2,-8(fp)
  80dd94:	18801526 	beq	r3,r2,80ddec <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  80dd98:	e0bffc17 	ldw	r2,-16(fp)
  80dd9c:	10800037 	ldwio	r2,0(r2)
  80dda0:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  80dda4:	e0bff917 	ldw	r2,-28(fp)
  80dda8:	10a0000c 	andi	r2,r2,32768
  80ddac:	10001126 	beq	r2,zero,80ddf4 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  80ddb0:	e0bffb17 	ldw	r2,-20(fp)
  80ddb4:	10800a17 	ldw	r2,40(r2)
  80ddb8:	e0fff917 	ldw	r3,-28(fp)
  80ddbc:	1809883a 	mov	r4,r3
  80ddc0:	e0fffb17 	ldw	r3,-20(fp)
  80ddc4:	1885883a 	add	r2,r3,r2
  80ddc8:	10800e04 	addi	r2,r2,56
  80ddcc:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80ddd0:	e0bffb17 	ldw	r2,-20(fp)
  80ddd4:	10800a17 	ldw	r2,40(r2)
  80ddd8:	10800044 	addi	r2,r2,1
  80dddc:	10c1ffcc 	andi	r3,r2,2047
  80dde0:	e0bffb17 	ldw	r2,-20(fp)
  80dde4:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  80dde8:	003fe206 	br	80dd74 <__alt_data_end+0xff80dd74>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
  80ddec:	0001883a 	nop
  80ddf0:	00000106 	br	80ddf8 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
  80ddf4:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  80ddf8:	e0bff917 	ldw	r2,-28(fp)
  80ddfc:	10bfffec 	andhi	r2,r2,65535
  80de00:	10000f26 	beq	r2,zero,80de40 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80de04:	e0bffb17 	ldw	r2,-20(fp)
  80de08:	10c00817 	ldw	r3,32(r2)
  80de0c:	00bfff84 	movi	r2,-2
  80de10:	1886703a 	and	r3,r3,r2
  80de14:	e0bffb17 	ldw	r2,-20(fp)
  80de18:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  80de1c:	e0bffc17 	ldw	r2,-16(fp)
  80de20:	10800104 	addi	r2,r2,4
  80de24:	1007883a 	mov	r3,r2
  80de28:	e0bffb17 	ldw	r2,-20(fp)
  80de2c:	10800817 	ldw	r2,32(r2)
  80de30:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80de34:	e0bffc17 	ldw	r2,-16(fp)
  80de38:	10800104 	addi	r2,r2,4
  80de3c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  80de40:	e0bffd17 	ldw	r2,-12(fp)
  80de44:	1080800c 	andi	r2,r2,512
  80de48:	103fbe26 	beq	r2,zero,80dd44 <__alt_data_end+0xff80dd44>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  80de4c:	e0bffd17 	ldw	r2,-12(fp)
  80de50:	1004d43a 	srli	r2,r2,16
  80de54:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  80de58:	00001406 	br	80deac <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  80de5c:	e0bffc17 	ldw	r2,-16(fp)
  80de60:	e0fffb17 	ldw	r3,-20(fp)
  80de64:	18c00d17 	ldw	r3,52(r3)
  80de68:	e13ffb17 	ldw	r4,-20(fp)
  80de6c:	20c7883a 	add	r3,r4,r3
  80de70:	18c20e04 	addi	r3,r3,2104
  80de74:	18c00003 	ldbu	r3,0(r3)
  80de78:	18c03fcc 	andi	r3,r3,255
  80de7c:	18c0201c 	xori	r3,r3,128
  80de80:	18ffe004 	addi	r3,r3,-128
  80de84:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80de88:	e0bffb17 	ldw	r2,-20(fp)
  80de8c:	10800d17 	ldw	r2,52(r2)
  80de90:	10800044 	addi	r2,r2,1
  80de94:	10c1ffcc 	andi	r3,r2,2047
  80de98:	e0bffb17 	ldw	r2,-20(fp)
  80de9c:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  80dea0:	e0bffa17 	ldw	r2,-24(fp)
  80dea4:	10bfffc4 	addi	r2,r2,-1
  80dea8:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  80deac:	e0bffa17 	ldw	r2,-24(fp)
  80deb0:	10000526 	beq	r2,zero,80dec8 <altera_avalon_jtag_uart_irq+0x1a8>
  80deb4:	e0bffb17 	ldw	r2,-20(fp)
  80deb8:	10c00d17 	ldw	r3,52(r2)
  80debc:	e0bffb17 	ldw	r2,-20(fp)
  80dec0:	10800c17 	ldw	r2,48(r2)
  80dec4:	18bfe51e 	bne	r3,r2,80de5c <__alt_data_end+0xff80de5c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  80dec8:	e0bffa17 	ldw	r2,-24(fp)
  80decc:	103f9d26 	beq	r2,zero,80dd44 <__alt_data_end+0xff80dd44>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80ded0:	e0bffb17 	ldw	r2,-20(fp)
  80ded4:	10c00817 	ldw	r3,32(r2)
  80ded8:	00bfff44 	movi	r2,-3
  80dedc:	1886703a 	and	r3,r3,r2
  80dee0:	e0bffb17 	ldw	r2,-20(fp)
  80dee4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80dee8:	e0bffb17 	ldw	r2,-20(fp)
  80deec:	10800017 	ldw	r2,0(r2)
  80def0:	10800104 	addi	r2,r2,4
  80def4:	1007883a 	mov	r3,r2
  80def8:	e0bffb17 	ldw	r2,-20(fp)
  80defc:	10800817 	ldw	r2,32(r2)
  80df00:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80df04:	e0bffc17 	ldw	r2,-16(fp)
  80df08:	10800104 	addi	r2,r2,4
  80df0c:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  80df10:	003f8c06 	br	80dd44 <__alt_data_end+0xff80dd44>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
  80df14:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
  80df18:	0001883a 	nop
  80df1c:	e037883a 	mov	sp,fp
  80df20:	df000017 	ldw	fp,0(sp)
  80df24:	dec00104 	addi	sp,sp,4
  80df28:	f800283a 	ret

0080df2c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  80df2c:	defff804 	addi	sp,sp,-32
  80df30:	df000715 	stw	fp,28(sp)
  80df34:	df000704 	addi	fp,sp,28
  80df38:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  80df3c:	e0bffb17 	ldw	r2,-20(fp)
  80df40:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  80df44:	e0bff917 	ldw	r2,-28(fp)
  80df48:	10800017 	ldw	r2,0(r2)
  80df4c:	10800104 	addi	r2,r2,4
  80df50:	10800037 	ldwio	r2,0(r2)
  80df54:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  80df58:	e0bffa17 	ldw	r2,-24(fp)
  80df5c:	1081000c 	andi	r2,r2,1024
  80df60:	10000b26 	beq	r2,zero,80df90 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  80df64:	e0bff917 	ldw	r2,-28(fp)
  80df68:	10800017 	ldw	r2,0(r2)
  80df6c:	10800104 	addi	r2,r2,4
  80df70:	1007883a 	mov	r3,r2
  80df74:	e0bff917 	ldw	r2,-28(fp)
  80df78:	10800817 	ldw	r2,32(r2)
  80df7c:	10810014 	ori	r2,r2,1024
  80df80:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  80df84:	e0bff917 	ldw	r2,-28(fp)
  80df88:	10000915 	stw	zero,36(r2)
  80df8c:	00000a06 	br	80dfb8 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  80df90:	e0bff917 	ldw	r2,-28(fp)
  80df94:	10c00917 	ldw	r3,36(r2)
  80df98:	00a00034 	movhi	r2,32768
  80df9c:	10bfff04 	addi	r2,r2,-4
  80dfa0:	10c00536 	bltu	r2,r3,80dfb8 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  80dfa4:	e0bff917 	ldw	r2,-28(fp)
  80dfa8:	10800917 	ldw	r2,36(r2)
  80dfac:	10c00044 	addi	r3,r2,1
  80dfb0:	e0bff917 	ldw	r2,-28(fp)
  80dfb4:	10c00915 	stw	r3,36(r2)
  80dfb8:	d0a6d617 	ldw	r2,-25768(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  80dfbc:	e037883a 	mov	sp,fp
  80dfc0:	df000017 	ldw	fp,0(sp)
  80dfc4:	dec00104 	addi	sp,sp,4
  80dfc8:	f800283a 	ret

0080dfcc <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  80dfcc:	defffd04 	addi	sp,sp,-12
  80dfd0:	df000215 	stw	fp,8(sp)
  80dfd4:	df000204 	addi	fp,sp,8
  80dfd8:	e13ffe15 	stw	r4,-8(fp)
  80dfdc:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80dfe0:	00000506 	br	80dff8 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  80dfe4:	e0bfff17 	ldw	r2,-4(fp)
  80dfe8:	1090000c 	andi	r2,r2,16384
  80dfec:	10000226 	beq	r2,zero,80dff8 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  80dff0:	00bffd44 	movi	r2,-11
  80dff4:	00000b06 	br	80e024 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80dff8:	e0bffe17 	ldw	r2,-8(fp)
  80dffc:	10c00d17 	ldw	r3,52(r2)
  80e000:	e0bffe17 	ldw	r2,-8(fp)
  80e004:	10800c17 	ldw	r2,48(r2)
  80e008:	18800526 	beq	r3,r2,80e020 <altera_avalon_jtag_uart_close+0x54>
  80e00c:	e0bffe17 	ldw	r2,-8(fp)
  80e010:	10c00917 	ldw	r3,36(r2)
  80e014:	e0bffe17 	ldw	r2,-8(fp)
  80e018:	10800117 	ldw	r2,4(r2)
  80e01c:	18bff136 	bltu	r3,r2,80dfe4 <__alt_data_end+0xff80dfe4>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  80e020:	0005883a 	mov	r2,zero
}
  80e024:	e037883a 	mov	sp,fp
  80e028:	df000017 	ldw	fp,0(sp)
  80e02c:	dec00104 	addi	sp,sp,4
  80e030:	f800283a 	ret

0080e034 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  80e034:	defffa04 	addi	sp,sp,-24
  80e038:	df000515 	stw	fp,20(sp)
  80e03c:	df000504 	addi	fp,sp,20
  80e040:	e13ffd15 	stw	r4,-12(fp)
  80e044:	e17ffe15 	stw	r5,-8(fp)
  80e048:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  80e04c:	00bff9c4 	movi	r2,-25
  80e050:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  80e054:	e0bffe17 	ldw	r2,-8(fp)
  80e058:	10da8060 	cmpeqi	r3,r2,27137
  80e05c:	1800031e 	bne	r3,zero,80e06c <altera_avalon_jtag_uart_ioctl+0x38>
  80e060:	109a80a0 	cmpeqi	r2,r2,27138
  80e064:	1000181e 	bne	r2,zero,80e0c8 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
  80e068:	00002906 	br	80e110 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  80e06c:	e0bffd17 	ldw	r2,-12(fp)
  80e070:	10c00117 	ldw	r3,4(r2)
  80e074:	00a00034 	movhi	r2,32768
  80e078:	10bfffc4 	addi	r2,r2,-1
  80e07c:	18802126 	beq	r3,r2,80e104 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
  80e080:	e0bfff17 	ldw	r2,-4(fp)
  80e084:	10800017 	ldw	r2,0(r2)
  80e088:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  80e08c:	e0bffc17 	ldw	r2,-16(fp)
  80e090:	10800090 	cmplti	r2,r2,2
  80e094:	1000061e 	bne	r2,zero,80e0b0 <altera_avalon_jtag_uart_ioctl+0x7c>
  80e098:	e0fffc17 	ldw	r3,-16(fp)
  80e09c:	00a00034 	movhi	r2,32768
  80e0a0:	10bfffc4 	addi	r2,r2,-1
  80e0a4:	18800226 	beq	r3,r2,80e0b0 <altera_avalon_jtag_uart_ioctl+0x7c>
  80e0a8:	e0bffc17 	ldw	r2,-16(fp)
  80e0ac:	00000206 	br	80e0b8 <altera_avalon_jtag_uart_ioctl+0x84>
  80e0b0:	00a00034 	movhi	r2,32768
  80e0b4:	10bfff84 	addi	r2,r2,-2
  80e0b8:	e0fffd17 	ldw	r3,-12(fp)
  80e0bc:	18800115 	stw	r2,4(r3)
      rc = 0;
  80e0c0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  80e0c4:	00000f06 	br	80e104 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  80e0c8:	e0bffd17 	ldw	r2,-12(fp)
  80e0cc:	10c00117 	ldw	r3,4(r2)
  80e0d0:	00a00034 	movhi	r2,32768
  80e0d4:	10bfffc4 	addi	r2,r2,-1
  80e0d8:	18800c26 	beq	r3,r2,80e10c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  80e0dc:	e0bffd17 	ldw	r2,-12(fp)
  80e0e0:	10c00917 	ldw	r3,36(r2)
  80e0e4:	e0bffd17 	ldw	r2,-12(fp)
  80e0e8:	10800117 	ldw	r2,4(r2)
  80e0ec:	1885803a 	cmpltu	r2,r3,r2
  80e0f0:	10c03fcc 	andi	r3,r2,255
  80e0f4:	e0bfff17 	ldw	r2,-4(fp)
  80e0f8:	10c00015 	stw	r3,0(r2)
      rc = 0;
  80e0fc:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  80e100:	00000206 	br	80e10c <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
  80e104:	0001883a 	nop
  80e108:	00000106 	br	80e110 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
  80e10c:	0001883a 	nop

  default:
    break;
  }

  return rc;
  80e110:	e0bffb17 	ldw	r2,-20(fp)
}
  80e114:	e037883a 	mov	sp,fp
  80e118:	df000017 	ldw	fp,0(sp)
  80e11c:	dec00104 	addi	sp,sp,4
  80e120:	f800283a 	ret

0080e124 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  80e124:	defff304 	addi	sp,sp,-52
  80e128:	dfc00c15 	stw	ra,48(sp)
  80e12c:	df000b15 	stw	fp,44(sp)
  80e130:	df000b04 	addi	fp,sp,44
  80e134:	e13ffc15 	stw	r4,-16(fp)
  80e138:	e17ffd15 	stw	r5,-12(fp)
  80e13c:	e1bffe15 	stw	r6,-8(fp)
  80e140:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  80e144:	e0bffd17 	ldw	r2,-12(fp)
  80e148:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80e14c:	00004706 	br	80e26c <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  80e150:	e0bffc17 	ldw	r2,-16(fp)
  80e154:	10800a17 	ldw	r2,40(r2)
  80e158:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  80e15c:	e0bffc17 	ldw	r2,-16(fp)
  80e160:	10800b17 	ldw	r2,44(r2)
  80e164:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
  80e168:	e0fff717 	ldw	r3,-36(fp)
  80e16c:	e0bff817 	ldw	r2,-32(fp)
  80e170:	18800536 	bltu	r3,r2,80e188 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  80e174:	e0fff717 	ldw	r3,-36(fp)
  80e178:	e0bff817 	ldw	r2,-32(fp)
  80e17c:	1885c83a 	sub	r2,r3,r2
  80e180:	e0bff615 	stw	r2,-40(fp)
  80e184:	00000406 	br	80e198 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  80e188:	00c20004 	movi	r3,2048
  80e18c:	e0bff817 	ldw	r2,-32(fp)
  80e190:	1885c83a 	sub	r2,r3,r2
  80e194:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  80e198:	e0bff617 	ldw	r2,-40(fp)
  80e19c:	10001e26 	beq	r2,zero,80e218 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  80e1a0:	e0fffe17 	ldw	r3,-8(fp)
  80e1a4:	e0bff617 	ldw	r2,-40(fp)
  80e1a8:	1880022e 	bgeu	r3,r2,80e1b4 <altera_avalon_jtag_uart_read+0x90>
        n = space;
  80e1ac:	e0bffe17 	ldw	r2,-8(fp)
  80e1b0:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  80e1b4:	e0bffc17 	ldw	r2,-16(fp)
  80e1b8:	10c00e04 	addi	r3,r2,56
  80e1bc:	e0bff817 	ldw	r2,-32(fp)
  80e1c0:	1885883a 	add	r2,r3,r2
  80e1c4:	e1bff617 	ldw	r6,-40(fp)
  80e1c8:	100b883a 	mov	r5,r2
  80e1cc:	e13ff517 	ldw	r4,-44(fp)
  80e1d0:	08062f80 	call	8062f8 <memcpy>
      ptr   += n;
  80e1d4:	e0fff517 	ldw	r3,-44(fp)
  80e1d8:	e0bff617 	ldw	r2,-40(fp)
  80e1dc:	1885883a 	add	r2,r3,r2
  80e1e0:	e0bff515 	stw	r2,-44(fp)
      space -= n;
  80e1e4:	e0fffe17 	ldw	r3,-8(fp)
  80e1e8:	e0bff617 	ldw	r2,-40(fp)
  80e1ec:	1885c83a 	sub	r2,r3,r2
  80e1f0:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e1f4:	e0fff817 	ldw	r3,-32(fp)
  80e1f8:	e0bff617 	ldw	r2,-40(fp)
  80e1fc:	1885883a 	add	r2,r3,r2
  80e200:	10c1ffcc 	andi	r3,r2,2047
  80e204:	e0bffc17 	ldw	r2,-16(fp)
  80e208:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  80e20c:	e0bffe17 	ldw	r2,-8(fp)
  80e210:	00bfcf16 	blt	zero,r2,80e150 <__alt_data_end+0xff80e150>
  80e214:	00000106 	br	80e21c <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
  80e218:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
  80e21c:	e0fff517 	ldw	r3,-44(fp)
  80e220:	e0bffd17 	ldw	r2,-12(fp)
  80e224:	1880141e 	bne	r3,r2,80e278 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  80e228:	e0bfff17 	ldw	r2,-4(fp)
  80e22c:	1090000c 	andi	r2,r2,16384
  80e230:	1000131e 	bne	r2,zero,80e280 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  80e234:	0001883a 	nop
  80e238:	e0bffc17 	ldw	r2,-16(fp)
  80e23c:	10c00a17 	ldw	r3,40(r2)
  80e240:	e0bff717 	ldw	r2,-36(fp)
  80e244:	1880051e 	bne	r3,r2,80e25c <altera_avalon_jtag_uart_read+0x138>
  80e248:	e0bffc17 	ldw	r2,-16(fp)
  80e24c:	10c00917 	ldw	r3,36(r2)
  80e250:	e0bffc17 	ldw	r2,-16(fp)
  80e254:	10800117 	ldw	r2,4(r2)
  80e258:	18bff736 	bltu	r3,r2,80e238 <__alt_data_end+0xff80e238>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  80e25c:	e0bffc17 	ldw	r2,-16(fp)
  80e260:	10c00a17 	ldw	r3,40(r2)
  80e264:	e0bff717 	ldw	r2,-36(fp)
  80e268:	18800726 	beq	r3,r2,80e288 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80e26c:	e0bffe17 	ldw	r2,-8(fp)
  80e270:	00bfb716 	blt	zero,r2,80e150 <__alt_data_end+0xff80e150>
  80e274:	00000506 	br	80e28c <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
  80e278:	0001883a 	nop
  80e27c:	00000306 	br	80e28c <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
  80e280:	0001883a 	nop
  80e284:	00000106 	br	80e28c <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
  80e288:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  80e28c:	e0fff517 	ldw	r3,-44(fp)
  80e290:	e0bffd17 	ldw	r2,-12(fp)
  80e294:	18801826 	beq	r3,r2,80e2f8 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e298:	0005303a 	rdctl	r2,status
  80e29c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e2a0:	e0fffb17 	ldw	r3,-20(fp)
  80e2a4:	00bfff84 	movi	r2,-2
  80e2a8:	1884703a 	and	r2,r3,r2
  80e2ac:	1001703a 	wrctl	status,r2
  
  return context;
  80e2b0:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  80e2b4:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e2b8:	e0bffc17 	ldw	r2,-16(fp)
  80e2bc:	10800817 	ldw	r2,32(r2)
  80e2c0:	10c00054 	ori	r3,r2,1
  80e2c4:	e0bffc17 	ldw	r2,-16(fp)
  80e2c8:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e2cc:	e0bffc17 	ldw	r2,-16(fp)
  80e2d0:	10800017 	ldw	r2,0(r2)
  80e2d4:	10800104 	addi	r2,r2,4
  80e2d8:	1007883a 	mov	r3,r2
  80e2dc:	e0bffc17 	ldw	r2,-16(fp)
  80e2e0:	10800817 	ldw	r2,32(r2)
  80e2e4:	18800035 	stwio	r2,0(r3)
  80e2e8:	e0bffa17 	ldw	r2,-24(fp)
  80e2ec:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e2f0:	e0bff917 	ldw	r2,-28(fp)
  80e2f4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  80e2f8:	e0fff517 	ldw	r3,-44(fp)
  80e2fc:	e0bffd17 	ldw	r2,-12(fp)
  80e300:	18800426 	beq	r3,r2,80e314 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
  80e304:	e0fff517 	ldw	r3,-44(fp)
  80e308:	e0bffd17 	ldw	r2,-12(fp)
  80e30c:	1885c83a 	sub	r2,r3,r2
  80e310:	00000606 	br	80e32c <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
  80e314:	e0bfff17 	ldw	r2,-4(fp)
  80e318:	1090000c 	andi	r2,r2,16384
  80e31c:	10000226 	beq	r2,zero,80e328 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
  80e320:	00bffd44 	movi	r2,-11
  80e324:	00000106 	br	80e32c <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
  80e328:	00bffec4 	movi	r2,-5
}
  80e32c:	e037883a 	mov	sp,fp
  80e330:	dfc00117 	ldw	ra,4(sp)
  80e334:	df000017 	ldw	fp,0(sp)
  80e338:	dec00204 	addi	sp,sp,8
  80e33c:	f800283a 	ret

0080e340 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  80e340:	defff304 	addi	sp,sp,-52
  80e344:	dfc00c15 	stw	ra,48(sp)
  80e348:	df000b15 	stw	fp,44(sp)
  80e34c:	df000b04 	addi	fp,sp,44
  80e350:	e13ffc15 	stw	r4,-16(fp)
  80e354:	e17ffd15 	stw	r5,-12(fp)
  80e358:	e1bffe15 	stw	r6,-8(fp)
  80e35c:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  80e360:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  80e364:	e0bffd17 	ldw	r2,-12(fp)
  80e368:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80e36c:	00003706 	br	80e44c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  80e370:	e0bffc17 	ldw	r2,-16(fp)
  80e374:	10800c17 	ldw	r2,48(r2)
  80e378:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
  80e37c:	e0bffc17 	ldw	r2,-16(fp)
  80e380:	10800d17 	ldw	r2,52(r2)
  80e384:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
  80e388:	e0fff917 	ldw	r3,-28(fp)
  80e38c:	e0bff517 	ldw	r2,-44(fp)
  80e390:	1880062e 	bgeu	r3,r2,80e3ac <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  80e394:	e0fff517 	ldw	r3,-44(fp)
  80e398:	e0bff917 	ldw	r2,-28(fp)
  80e39c:	1885c83a 	sub	r2,r3,r2
  80e3a0:	10bfffc4 	addi	r2,r2,-1
  80e3a4:	e0bff615 	stw	r2,-40(fp)
  80e3a8:	00000b06 	br	80e3d8 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  80e3ac:	e0bff517 	ldw	r2,-44(fp)
  80e3b0:	10000526 	beq	r2,zero,80e3c8 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  80e3b4:	00c20004 	movi	r3,2048
  80e3b8:	e0bff917 	ldw	r2,-28(fp)
  80e3bc:	1885c83a 	sub	r2,r3,r2
  80e3c0:	e0bff615 	stw	r2,-40(fp)
  80e3c4:	00000406 	br	80e3d8 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  80e3c8:	00c1ffc4 	movi	r3,2047
  80e3cc:	e0bff917 	ldw	r2,-28(fp)
  80e3d0:	1885c83a 	sub	r2,r3,r2
  80e3d4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  80e3d8:	e0bff617 	ldw	r2,-40(fp)
  80e3dc:	10001e26 	beq	r2,zero,80e458 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  80e3e0:	e0fffe17 	ldw	r3,-8(fp)
  80e3e4:	e0bff617 	ldw	r2,-40(fp)
  80e3e8:	1880022e 	bgeu	r3,r2,80e3f4 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  80e3ec:	e0bffe17 	ldw	r2,-8(fp)
  80e3f0:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  80e3f4:	e0bffc17 	ldw	r2,-16(fp)
  80e3f8:	10c20e04 	addi	r3,r2,2104
  80e3fc:	e0bff917 	ldw	r2,-28(fp)
  80e400:	1885883a 	add	r2,r3,r2
  80e404:	e1bff617 	ldw	r6,-40(fp)
  80e408:	e17ffd17 	ldw	r5,-12(fp)
  80e40c:	1009883a 	mov	r4,r2
  80e410:	08062f80 	call	8062f8 <memcpy>
      ptr   += n;
  80e414:	e0fffd17 	ldw	r3,-12(fp)
  80e418:	e0bff617 	ldw	r2,-40(fp)
  80e41c:	1885883a 	add	r2,r3,r2
  80e420:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  80e424:	e0fffe17 	ldw	r3,-8(fp)
  80e428:	e0bff617 	ldw	r2,-40(fp)
  80e42c:	1885c83a 	sub	r2,r3,r2
  80e430:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e434:	e0fff917 	ldw	r3,-28(fp)
  80e438:	e0bff617 	ldw	r2,-40(fp)
  80e43c:	1885883a 	add	r2,r3,r2
  80e440:	10c1ffcc 	andi	r3,r2,2047
  80e444:	e0bffc17 	ldw	r2,-16(fp)
  80e448:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80e44c:	e0bffe17 	ldw	r2,-8(fp)
  80e450:	00bfc716 	blt	zero,r2,80e370 <__alt_data_end+0xff80e370>
  80e454:	00000106 	br	80e45c <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
  80e458:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e45c:	0005303a 	rdctl	r2,status
  80e460:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e464:	e0fffb17 	ldw	r3,-20(fp)
  80e468:	00bfff84 	movi	r2,-2
  80e46c:	1884703a 	and	r2,r3,r2
  80e470:	1001703a 	wrctl	status,r2
  
  return context;
  80e474:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  80e478:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80e47c:	e0bffc17 	ldw	r2,-16(fp)
  80e480:	10800817 	ldw	r2,32(r2)
  80e484:	10c00094 	ori	r3,r2,2
  80e488:	e0bffc17 	ldw	r2,-16(fp)
  80e48c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e490:	e0bffc17 	ldw	r2,-16(fp)
  80e494:	10800017 	ldw	r2,0(r2)
  80e498:	10800104 	addi	r2,r2,4
  80e49c:	1007883a 	mov	r3,r2
  80e4a0:	e0bffc17 	ldw	r2,-16(fp)
  80e4a4:	10800817 	ldw	r2,32(r2)
  80e4a8:	18800035 	stwio	r2,0(r3)
  80e4ac:	e0bffa17 	ldw	r2,-24(fp)
  80e4b0:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e4b4:	e0bff817 	ldw	r2,-32(fp)
  80e4b8:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  80e4bc:	e0bffe17 	ldw	r2,-8(fp)
  80e4c0:	0080100e 	bge	zero,r2,80e504 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
  80e4c4:	e0bfff17 	ldw	r2,-4(fp)
  80e4c8:	1090000c 	andi	r2,r2,16384
  80e4cc:	1000101e 	bne	r2,zero,80e510 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  80e4d0:	0001883a 	nop
  80e4d4:	e0bffc17 	ldw	r2,-16(fp)
  80e4d8:	10c00d17 	ldw	r3,52(r2)
  80e4dc:	e0bff517 	ldw	r2,-44(fp)
  80e4e0:	1880051e 	bne	r3,r2,80e4f8 <altera_avalon_jtag_uart_write+0x1b8>
  80e4e4:	e0bffc17 	ldw	r2,-16(fp)
  80e4e8:	10c00917 	ldw	r3,36(r2)
  80e4ec:	e0bffc17 	ldw	r2,-16(fp)
  80e4f0:	10800117 	ldw	r2,4(r2)
  80e4f4:	18bff736 	bltu	r3,r2,80e4d4 <__alt_data_end+0xff80e4d4>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  80e4f8:	e0bffc17 	ldw	r2,-16(fp)
  80e4fc:	10800917 	ldw	r2,36(r2)
  80e500:	1000051e 	bne	r2,zero,80e518 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
  80e504:	e0bffe17 	ldw	r2,-8(fp)
  80e508:	00bfd016 	blt	zero,r2,80e44c <__alt_data_end+0xff80e44c>
  80e50c:	00000306 	br	80e51c <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
  80e510:	0001883a 	nop
  80e514:	00000106 	br	80e51c <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
  80e518:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  80e51c:	e0fffd17 	ldw	r3,-12(fp)
  80e520:	e0bff717 	ldw	r2,-36(fp)
  80e524:	18800426 	beq	r3,r2,80e538 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
  80e528:	e0fffd17 	ldw	r3,-12(fp)
  80e52c:	e0bff717 	ldw	r2,-36(fp)
  80e530:	1885c83a 	sub	r2,r3,r2
  80e534:	00000606 	br	80e550 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
  80e538:	e0bfff17 	ldw	r2,-4(fp)
  80e53c:	1090000c 	andi	r2,r2,16384
  80e540:	10000226 	beq	r2,zero,80e54c <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
  80e544:	00bffd44 	movi	r2,-11
  80e548:	00000106 	br	80e550 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  80e54c:	00bffec4 	movi	r2,-5
}
  80e550:	e037883a 	mov	sp,fp
  80e554:	dfc00117 	ldw	ra,4(sp)
  80e558:	df000017 	ldw	fp,0(sp)
  80e55c:	dec00204 	addi	sp,sp,8
  80e560:	f800283a 	ret

0080e564 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  80e564:	defffa04 	addi	sp,sp,-24
  80e568:	dfc00515 	stw	ra,20(sp)
  80e56c:	df000415 	stw	fp,16(sp)
  80e570:	df000404 	addi	fp,sp,16
  80e574:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  80e578:	0007883a 	mov	r3,zero
  80e57c:	e0bfff17 	ldw	r2,-4(fp)
  80e580:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  80e584:	e0bfff17 	ldw	r2,-4(fp)
  80e588:	10800104 	addi	r2,r2,4
  80e58c:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e590:	0005303a 	rdctl	r2,status
  80e594:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e598:	e0fffd17 	ldw	r3,-12(fp)
  80e59c:	00bfff84 	movi	r2,-2
  80e5a0:	1884703a 	and	r2,r3,r2
  80e5a4:	1001703a 	wrctl	status,r2
  
  return context;
  80e5a8:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  80e5ac:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
  80e5b0:	080f0700 	call	80f070 <alt_tick>
  80e5b4:	e0bffc17 	ldw	r2,-16(fp)
  80e5b8:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e5bc:	e0bffe17 	ldw	r2,-8(fp)
  80e5c0:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  80e5c4:	0001883a 	nop
  80e5c8:	e037883a 	mov	sp,fp
  80e5cc:	dfc00117 	ldw	ra,4(sp)
  80e5d0:	df000017 	ldw	fp,0(sp)
  80e5d4:	dec00204 	addi	sp,sp,8
  80e5d8:	f800283a 	ret

0080e5dc <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  80e5dc:	defff804 	addi	sp,sp,-32
  80e5e0:	dfc00715 	stw	ra,28(sp)
  80e5e4:	df000615 	stw	fp,24(sp)
  80e5e8:	df000604 	addi	fp,sp,24
  80e5ec:	e13ffc15 	stw	r4,-16(fp)
  80e5f0:	e17ffd15 	stw	r5,-12(fp)
  80e5f4:	e1bffe15 	stw	r6,-8(fp)
  80e5f8:	e1ffff15 	stw	r7,-4(fp)
  80e5fc:	e0bfff17 	ldw	r2,-4(fp)
  80e600:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  80e604:	d0a6d617 	ldw	r2,-25768(gp)
  80e608:	1000021e 	bne	r2,zero,80e614 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
  80e60c:	e0bffb17 	ldw	r2,-20(fp)
  80e610:	d0a6d615 	stw	r2,-25768(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  80e614:	e0bffc17 	ldw	r2,-16(fp)
  80e618:	10800104 	addi	r2,r2,4
  80e61c:	00c001c4 	movi	r3,7
  80e620:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  80e624:	d8000015 	stw	zero,0(sp)
  80e628:	e1fffc17 	ldw	r7,-16(fp)
  80e62c:	01802074 	movhi	r6,129
  80e630:	31b95904 	addi	r6,r6,-6812
  80e634:	e17ffe17 	ldw	r5,-8(fp)
  80e638:	e13ffd17 	ldw	r4,-12(fp)
  80e63c:	080e9a00 	call	80e9a0 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  80e640:	0001883a 	nop
  80e644:	e037883a 	mov	sp,fp
  80e648:	dfc00117 	ldw	ra,4(sp)
  80e64c:	df000017 	ldw	fp,0(sp)
  80e650:	dec00204 	addi	sp,sp,8
  80e654:	f800283a 	ret

0080e658 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  80e658:	defff504 	addi	sp,sp,-44
  80e65c:	df000a15 	stw	fp,40(sp)
  80e660:	df000a04 	addi	fp,sp,40
  80e664:	e13ffc15 	stw	r4,-16(fp)
  80e668:	e17ffd15 	stw	r5,-12(fp)
  80e66c:	e1bffe15 	stw	r6,-8(fp)
  80e670:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  80e674:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80e678:	d0a6d617 	ldw	r2,-25768(gp)
  
  if (alt_ticks_per_second ())
  80e67c:	10003c26 	beq	r2,zero,80e770 <alt_alarm_start+0x118>
  {
    if (alarm)
  80e680:	e0bffc17 	ldw	r2,-16(fp)
  80e684:	10003826 	beq	r2,zero,80e768 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
  80e688:	e0bffc17 	ldw	r2,-16(fp)
  80e68c:	e0fffe17 	ldw	r3,-8(fp)
  80e690:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  80e694:	e0bffc17 	ldw	r2,-16(fp)
  80e698:	e0ffff17 	ldw	r3,-4(fp)
  80e69c:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e6a0:	0005303a 	rdctl	r2,status
  80e6a4:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e6a8:	e0fff917 	ldw	r3,-28(fp)
  80e6ac:	00bfff84 	movi	r2,-2
  80e6b0:	1884703a 	and	r2,r3,r2
  80e6b4:	1001703a 	wrctl	status,r2
  
  return context;
  80e6b8:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
  80e6bc:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80e6c0:	d0a6d717 	ldw	r2,-25764(gp)
      
      current_nticks = alt_nticks();
  80e6c4:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  80e6c8:	e0fffd17 	ldw	r3,-12(fp)
  80e6cc:	e0bff617 	ldw	r2,-40(fp)
  80e6d0:	1885883a 	add	r2,r3,r2
  80e6d4:	10c00044 	addi	r3,r2,1
  80e6d8:	e0bffc17 	ldw	r2,-16(fp)
  80e6dc:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  80e6e0:	e0bffc17 	ldw	r2,-16(fp)
  80e6e4:	10c00217 	ldw	r3,8(r2)
  80e6e8:	e0bff617 	ldw	r2,-40(fp)
  80e6ec:	1880042e 	bgeu	r3,r2,80e700 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  80e6f0:	e0bffc17 	ldw	r2,-16(fp)
  80e6f4:	00c00044 	movi	r3,1
  80e6f8:	10c00405 	stb	r3,16(r2)
  80e6fc:	00000206 	br	80e708 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  80e700:	e0bffc17 	ldw	r2,-16(fp)
  80e704:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  80e708:	e0bffc17 	ldw	r2,-16(fp)
  80e70c:	d0e00e04 	addi	r3,gp,-32712
  80e710:	e0fffa15 	stw	r3,-24(fp)
  80e714:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80e718:	e0bffb17 	ldw	r2,-20(fp)
  80e71c:	e0fffa17 	ldw	r3,-24(fp)
  80e720:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80e724:	e0bffa17 	ldw	r2,-24(fp)
  80e728:	10c00017 	ldw	r3,0(r2)
  80e72c:	e0bffb17 	ldw	r2,-20(fp)
  80e730:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80e734:	e0bffa17 	ldw	r2,-24(fp)
  80e738:	10800017 	ldw	r2,0(r2)
  80e73c:	e0fffb17 	ldw	r3,-20(fp)
  80e740:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80e744:	e0bffa17 	ldw	r2,-24(fp)
  80e748:	e0fffb17 	ldw	r3,-20(fp)
  80e74c:	10c00015 	stw	r3,0(r2)
  80e750:	e0bff817 	ldw	r2,-32(fp)
  80e754:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e758:	e0bff717 	ldw	r2,-36(fp)
  80e75c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  80e760:	0005883a 	mov	r2,zero
  80e764:	00000306 	br	80e774 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
  80e768:	00bffa84 	movi	r2,-22
  80e76c:	00000106 	br	80e774 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
  80e770:	00bfde84 	movi	r2,-134
  }
}
  80e774:	e037883a 	mov	sp,fp
  80e778:	df000017 	ldw	fp,0(sp)
  80e77c:	dec00104 	addi	sp,sp,4
  80e780:	f800283a 	ret

0080e784 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  80e784:	defffe04 	addi	sp,sp,-8
  80e788:	df000115 	stw	fp,4(sp)
  80e78c:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80e790:	e03fff15 	stw	zero,-4(fp)
  80e794:	00000506 	br	80e7ac <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  80e798:	e0bfff17 	ldw	r2,-4(fp)
  80e79c:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80e7a0:	e0bfff17 	ldw	r2,-4(fp)
  80e7a4:	10800804 	addi	r2,r2,32
  80e7a8:	e0bfff15 	stw	r2,-4(fp)
  80e7ac:	e0bfff17 	ldw	r2,-4(fp)
  80e7b0:	00ffffd4 	movui	r3,65535
  80e7b4:	18bff82e 	bgeu	r3,r2,80e798 <__alt_data_end+0xff80e798>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  80e7b8:	0001883a 	nop
  80e7bc:	e037883a 	mov	sp,fp
  80e7c0:	df000017 	ldw	fp,0(sp)
  80e7c4:	dec00104 	addi	sp,sp,4
  80e7c8:	f800283a 	ret

0080e7cc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e7cc:	defffe04 	addi	sp,sp,-8
  80e7d0:	dfc00115 	stw	ra,4(sp)
  80e7d4:	df000015 	stw	fp,0(sp)
  80e7d8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e7dc:	d0a00b17 	ldw	r2,-32724(gp)
  80e7e0:	10000326 	beq	r2,zero,80e7f0 <alt_get_errno+0x24>
  80e7e4:	d0a00b17 	ldw	r2,-32724(gp)
  80e7e8:	103ee83a 	callr	r2
  80e7ec:	00000106 	br	80e7f4 <alt_get_errno+0x28>
  80e7f0:	d0a6d104 	addi	r2,gp,-25788
}
  80e7f4:	e037883a 	mov	sp,fp
  80e7f8:	dfc00117 	ldw	ra,4(sp)
  80e7fc:	df000017 	ldw	fp,0(sp)
  80e800:	dec00204 	addi	sp,sp,8
  80e804:	f800283a 	ret

0080e808 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  80e808:	defffa04 	addi	sp,sp,-24
  80e80c:	dfc00515 	stw	ra,20(sp)
  80e810:	df000415 	stw	fp,16(sp)
  80e814:	df000404 	addi	fp,sp,16
  80e818:	e13ffe15 	stw	r4,-8(fp)
  80e81c:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  80e820:	e0bffe17 	ldw	r2,-8(fp)
  80e824:	10000326 	beq	r2,zero,80e834 <alt_dev_llist_insert+0x2c>
  80e828:	e0bffe17 	ldw	r2,-8(fp)
  80e82c:	10800217 	ldw	r2,8(r2)
  80e830:	1000061e 	bne	r2,zero,80e84c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  80e834:	080e7cc0 	call	80e7cc <alt_get_errno>
  80e838:	1007883a 	mov	r3,r2
  80e83c:	00800584 	movi	r2,22
  80e840:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  80e844:	00bffa84 	movi	r2,-22
  80e848:	00001306 	br	80e898 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  80e84c:	e0bffe17 	ldw	r2,-8(fp)
  80e850:	e0ffff17 	ldw	r3,-4(fp)
  80e854:	e0fffc15 	stw	r3,-16(fp)
  80e858:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80e85c:	e0bffd17 	ldw	r2,-12(fp)
  80e860:	e0fffc17 	ldw	r3,-16(fp)
  80e864:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80e868:	e0bffc17 	ldw	r2,-16(fp)
  80e86c:	10c00017 	ldw	r3,0(r2)
  80e870:	e0bffd17 	ldw	r2,-12(fp)
  80e874:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80e878:	e0bffc17 	ldw	r2,-16(fp)
  80e87c:	10800017 	ldw	r2,0(r2)
  80e880:	e0fffd17 	ldw	r3,-12(fp)
  80e884:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80e888:	e0bffc17 	ldw	r2,-16(fp)
  80e88c:	e0fffd17 	ldw	r3,-12(fp)
  80e890:	10c00015 	stw	r3,0(r2)

  return 0;  
  80e894:	0005883a 	mov	r2,zero
}
  80e898:	e037883a 	mov	sp,fp
  80e89c:	dfc00117 	ldw	ra,4(sp)
  80e8a0:	df000017 	ldw	fp,0(sp)
  80e8a4:	dec00204 	addi	sp,sp,8
  80e8a8:	f800283a 	ret

0080e8ac <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  80e8ac:	defffd04 	addi	sp,sp,-12
  80e8b0:	dfc00215 	stw	ra,8(sp)
  80e8b4:	df000115 	stw	fp,4(sp)
  80e8b8:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80e8bc:	00802074 	movhi	r2,129
  80e8c0:	10bdfe04 	addi	r2,r2,-2056
  80e8c4:	e0bfff15 	stw	r2,-4(fp)
  80e8c8:	00000606 	br	80e8e4 <_do_ctors+0x38>
        (*ctor) (); 
  80e8cc:	e0bfff17 	ldw	r2,-4(fp)
  80e8d0:	10800017 	ldw	r2,0(r2)
  80e8d4:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80e8d8:	e0bfff17 	ldw	r2,-4(fp)
  80e8dc:	10bfff04 	addi	r2,r2,-4
  80e8e0:	e0bfff15 	stw	r2,-4(fp)
  80e8e4:	e0ffff17 	ldw	r3,-4(fp)
  80e8e8:	00802074 	movhi	r2,129
  80e8ec:	10bdff04 	addi	r2,r2,-2052
  80e8f0:	18bff62e 	bgeu	r3,r2,80e8cc <__alt_data_end+0xff80e8cc>
        (*ctor) (); 
}
  80e8f4:	0001883a 	nop
  80e8f8:	e037883a 	mov	sp,fp
  80e8fc:	dfc00117 	ldw	ra,4(sp)
  80e900:	df000017 	ldw	fp,0(sp)
  80e904:	dec00204 	addi	sp,sp,8
  80e908:	f800283a 	ret

0080e90c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  80e90c:	defffd04 	addi	sp,sp,-12
  80e910:	dfc00215 	stw	ra,8(sp)
  80e914:	df000115 	stw	fp,4(sp)
  80e918:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80e91c:	00802074 	movhi	r2,129
  80e920:	10bdfe04 	addi	r2,r2,-2056
  80e924:	e0bfff15 	stw	r2,-4(fp)
  80e928:	00000606 	br	80e944 <_do_dtors+0x38>
        (*dtor) (); 
  80e92c:	e0bfff17 	ldw	r2,-4(fp)
  80e930:	10800017 	ldw	r2,0(r2)
  80e934:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80e938:	e0bfff17 	ldw	r2,-4(fp)
  80e93c:	10bfff04 	addi	r2,r2,-4
  80e940:	e0bfff15 	stw	r2,-4(fp)
  80e944:	e0ffff17 	ldw	r3,-4(fp)
  80e948:	00802074 	movhi	r2,129
  80e94c:	10bdff04 	addi	r2,r2,-2052
  80e950:	18bff62e 	bgeu	r3,r2,80e92c <__alt_data_end+0xff80e92c>
        (*dtor) (); 
}
  80e954:	0001883a 	nop
  80e958:	e037883a 	mov	sp,fp
  80e95c:	dfc00117 	ldw	ra,4(sp)
  80e960:	df000017 	ldw	fp,0(sp)
  80e964:	dec00204 	addi	sp,sp,8
  80e968:	f800283a 	ret

0080e96c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  80e96c:	defffe04 	addi	sp,sp,-8
  80e970:	dfc00115 	stw	ra,4(sp)
  80e974:	df000015 	stw	fp,0(sp)
  80e978:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  80e97c:	01420004 	movi	r5,2048
  80e980:	0009883a 	mov	r4,zero
  80e984:	080f3d80 	call	80f3d8 <alt_icache_flush>
#endif
}
  80e988:	0001883a 	nop
  80e98c:	e037883a 	mov	sp,fp
  80e990:	dfc00117 	ldw	ra,4(sp)
  80e994:	df000017 	ldw	fp,0(sp)
  80e998:	dec00204 	addi	sp,sp,8
  80e99c:	f800283a 	ret

0080e9a0 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80e9a0:	defff904 	addi	sp,sp,-28
  80e9a4:	dfc00615 	stw	ra,24(sp)
  80e9a8:	df000515 	stw	fp,20(sp)
  80e9ac:	df000504 	addi	fp,sp,20
  80e9b0:	e13ffc15 	stw	r4,-16(fp)
  80e9b4:	e17ffd15 	stw	r5,-12(fp)
  80e9b8:	e1bffe15 	stw	r6,-8(fp)
  80e9bc:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  80e9c0:	e0800217 	ldw	r2,8(fp)
  80e9c4:	d8800015 	stw	r2,0(sp)
  80e9c8:	e1ffff17 	ldw	r7,-4(fp)
  80e9cc:	e1bffe17 	ldw	r6,-8(fp)
  80e9d0:	e17ffd17 	ldw	r5,-12(fp)
  80e9d4:	e13ffc17 	ldw	r4,-16(fp)
  80e9d8:	080eb500 	call	80eb50 <alt_iic_isr_register>
}  
  80e9dc:	e037883a 	mov	sp,fp
  80e9e0:	dfc00117 	ldw	ra,4(sp)
  80e9e4:	df000017 	ldw	fp,0(sp)
  80e9e8:	dec00204 	addi	sp,sp,8
  80e9ec:	f800283a 	ret

0080e9f0 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  80e9f0:	defff904 	addi	sp,sp,-28
  80e9f4:	df000615 	stw	fp,24(sp)
  80e9f8:	df000604 	addi	fp,sp,24
  80e9fc:	e13ffe15 	stw	r4,-8(fp)
  80ea00:	e17fff15 	stw	r5,-4(fp)
  80ea04:	e0bfff17 	ldw	r2,-4(fp)
  80ea08:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80ea0c:	0005303a 	rdctl	r2,status
  80ea10:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ea14:	e0fffb17 	ldw	r3,-20(fp)
  80ea18:	00bfff84 	movi	r2,-2
  80ea1c:	1884703a 	and	r2,r3,r2
  80ea20:	1001703a 	wrctl	status,r2
  
  return context;
  80ea24:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80ea28:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
  80ea2c:	00c00044 	movi	r3,1
  80ea30:	e0bffa17 	ldw	r2,-24(fp)
  80ea34:	1884983a 	sll	r2,r3,r2
  80ea38:	1007883a 	mov	r3,r2
  80ea3c:	d0a6d517 	ldw	r2,-25772(gp)
  80ea40:	1884b03a 	or	r2,r3,r2
  80ea44:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80ea48:	d0a6d517 	ldw	r2,-25772(gp)
  80ea4c:	100170fa 	wrctl	ienable,r2
  80ea50:	e0bffc17 	ldw	r2,-16(fp)
  80ea54:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80ea58:	e0bffd17 	ldw	r2,-12(fp)
  80ea5c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80ea60:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
  80ea64:	0001883a 	nop
}
  80ea68:	e037883a 	mov	sp,fp
  80ea6c:	df000017 	ldw	fp,0(sp)
  80ea70:	dec00104 	addi	sp,sp,4
  80ea74:	f800283a 	ret

0080ea78 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  80ea78:	defff904 	addi	sp,sp,-28
  80ea7c:	df000615 	stw	fp,24(sp)
  80ea80:	df000604 	addi	fp,sp,24
  80ea84:	e13ffe15 	stw	r4,-8(fp)
  80ea88:	e17fff15 	stw	r5,-4(fp)
  80ea8c:	e0bfff17 	ldw	r2,-4(fp)
  80ea90:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80ea94:	0005303a 	rdctl	r2,status
  80ea98:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ea9c:	e0fffb17 	ldw	r3,-20(fp)
  80eaa0:	00bfff84 	movi	r2,-2
  80eaa4:	1884703a 	and	r2,r3,r2
  80eaa8:	1001703a 	wrctl	status,r2
  
  return context;
  80eaac:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80eab0:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
  80eab4:	00c00044 	movi	r3,1
  80eab8:	e0bffa17 	ldw	r2,-24(fp)
  80eabc:	1884983a 	sll	r2,r3,r2
  80eac0:	0084303a 	nor	r2,zero,r2
  80eac4:	1007883a 	mov	r3,r2
  80eac8:	d0a6d517 	ldw	r2,-25772(gp)
  80eacc:	1884703a 	and	r2,r3,r2
  80ead0:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80ead4:	d0a6d517 	ldw	r2,-25772(gp)
  80ead8:	100170fa 	wrctl	ienable,r2
  80eadc:	e0bffc17 	ldw	r2,-16(fp)
  80eae0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80eae4:	e0bffd17 	ldw	r2,-12(fp)
  80eae8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80eaec:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
  80eaf0:	0001883a 	nop
}
  80eaf4:	e037883a 	mov	sp,fp
  80eaf8:	df000017 	ldw	fp,0(sp)
  80eafc:	dec00104 	addi	sp,sp,4
  80eb00:	f800283a 	ret

0080eb04 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  80eb04:	defffc04 	addi	sp,sp,-16
  80eb08:	df000315 	stw	fp,12(sp)
  80eb0c:	df000304 	addi	fp,sp,12
  80eb10:	e13ffe15 	stw	r4,-8(fp)
  80eb14:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  80eb18:	000530fa 	rdctl	r2,ienable
  80eb1c:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  80eb20:	00c00044 	movi	r3,1
  80eb24:	e0bfff17 	ldw	r2,-4(fp)
  80eb28:	1884983a 	sll	r2,r3,r2
  80eb2c:	1007883a 	mov	r3,r2
  80eb30:	e0bffd17 	ldw	r2,-12(fp)
  80eb34:	1884703a 	and	r2,r3,r2
  80eb38:	1004c03a 	cmpne	r2,r2,zero
  80eb3c:	10803fcc 	andi	r2,r2,255
}
  80eb40:	e037883a 	mov	sp,fp
  80eb44:	df000017 	ldw	fp,0(sp)
  80eb48:	dec00104 	addi	sp,sp,4
  80eb4c:	f800283a 	ret

0080eb50 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80eb50:	defff504 	addi	sp,sp,-44
  80eb54:	dfc00a15 	stw	ra,40(sp)
  80eb58:	df000915 	stw	fp,36(sp)
  80eb5c:	df000904 	addi	fp,sp,36
  80eb60:	e13ffc15 	stw	r4,-16(fp)
  80eb64:	e17ffd15 	stw	r5,-12(fp)
  80eb68:	e1bffe15 	stw	r6,-8(fp)
  80eb6c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
  80eb70:	00bffa84 	movi	r2,-22
  80eb74:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  80eb78:	e0bffd17 	ldw	r2,-12(fp)
  80eb7c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  80eb80:	e0bff817 	ldw	r2,-32(fp)
  80eb84:	10800808 	cmpgei	r2,r2,32
  80eb88:	1000271e 	bne	r2,zero,80ec28 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80eb8c:	0005303a 	rdctl	r2,status
  80eb90:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80eb94:	e0fffb17 	ldw	r3,-20(fp)
  80eb98:	00bfff84 	movi	r2,-2
  80eb9c:	1884703a 	and	r2,r3,r2
  80eba0:	1001703a 	wrctl	status,r2
  
  return context;
  80eba4:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  80eba8:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
  80ebac:	00802074 	movhi	r2,129
  80ebb0:	108c6104 	addi	r2,r2,12676
  80ebb4:	e0fff817 	ldw	r3,-32(fp)
  80ebb8:	180690fa 	slli	r3,r3,3
  80ebbc:	10c5883a 	add	r2,r2,r3
  80ebc0:	e0fffe17 	ldw	r3,-8(fp)
  80ebc4:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
  80ebc8:	00802074 	movhi	r2,129
  80ebcc:	108c6104 	addi	r2,r2,12676
  80ebd0:	e0fff817 	ldw	r3,-32(fp)
  80ebd4:	180690fa 	slli	r3,r3,3
  80ebd8:	10c5883a 	add	r2,r2,r3
  80ebdc:	10800104 	addi	r2,r2,4
  80ebe0:	e0ffff17 	ldw	r3,-4(fp)
  80ebe4:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  80ebe8:	e0bffe17 	ldw	r2,-8(fp)
  80ebec:	10000526 	beq	r2,zero,80ec04 <alt_iic_isr_register+0xb4>
  80ebf0:	e0bff817 	ldw	r2,-32(fp)
  80ebf4:	100b883a 	mov	r5,r2
  80ebf8:	e13ffc17 	ldw	r4,-16(fp)
  80ebfc:	080e9f00 	call	80e9f0 <alt_ic_irq_enable>
  80ec00:	00000406 	br	80ec14 <alt_iic_isr_register+0xc4>
  80ec04:	e0bff817 	ldw	r2,-32(fp)
  80ec08:	100b883a 	mov	r5,r2
  80ec0c:	e13ffc17 	ldw	r4,-16(fp)
  80ec10:	080ea780 	call	80ea78 <alt_ic_irq_disable>
  80ec14:	e0bff715 	stw	r2,-36(fp)
  80ec18:	e0bffa17 	ldw	r2,-24(fp)
  80ec1c:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80ec20:	e0bff917 	ldw	r2,-28(fp)
  80ec24:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  80ec28:	e0bff717 	ldw	r2,-36(fp)
}
  80ec2c:	e037883a 	mov	sp,fp
  80ec30:	dfc00117 	ldw	ra,4(sp)
  80ec34:	df000017 	ldw	fp,0(sp)
  80ec38:	dec00204 	addi	sp,sp,8
  80ec3c:	f800283a 	ret

0080ec40 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  80ec40:	defff904 	addi	sp,sp,-28
  80ec44:	dfc00615 	stw	ra,24(sp)
  80ec48:	df000515 	stw	fp,20(sp)
  80ec4c:	df000504 	addi	fp,sp,20
  80ec50:	e13ffc15 	stw	r4,-16(fp)
  80ec54:	e17ffd15 	stw	r5,-12(fp)
  80ec58:	e1bffe15 	stw	r6,-8(fp)
  80ec5c:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  80ec60:	e1bfff17 	ldw	r6,-4(fp)
  80ec64:	e17ffe17 	ldw	r5,-8(fp)
  80ec68:	e13ffd17 	ldw	r4,-12(fp)
  80ec6c:	080ee800 	call	80ee80 <open>
  80ec70:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  80ec74:	e0bffb17 	ldw	r2,-20(fp)
  80ec78:	10001c16 	blt	r2,zero,80ecec <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
  80ec7c:	00802074 	movhi	r2,129
  80ec80:	10810704 	addi	r2,r2,1052
  80ec84:	e0fffb17 	ldw	r3,-20(fp)
  80ec88:	18c00324 	muli	r3,r3,12
  80ec8c:	10c5883a 	add	r2,r2,r3
  80ec90:	10c00017 	ldw	r3,0(r2)
  80ec94:	e0bffc17 	ldw	r2,-16(fp)
  80ec98:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  80ec9c:	00802074 	movhi	r2,129
  80eca0:	10810704 	addi	r2,r2,1052
  80eca4:	e0fffb17 	ldw	r3,-20(fp)
  80eca8:	18c00324 	muli	r3,r3,12
  80ecac:	10c5883a 	add	r2,r2,r3
  80ecb0:	10800104 	addi	r2,r2,4
  80ecb4:	10c00017 	ldw	r3,0(r2)
  80ecb8:	e0bffc17 	ldw	r2,-16(fp)
  80ecbc:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  80ecc0:	00802074 	movhi	r2,129
  80ecc4:	10810704 	addi	r2,r2,1052
  80ecc8:	e0fffb17 	ldw	r3,-20(fp)
  80eccc:	18c00324 	muli	r3,r3,12
  80ecd0:	10c5883a 	add	r2,r2,r3
  80ecd4:	10800204 	addi	r2,r2,8
  80ecd8:	10c00017 	ldw	r3,0(r2)
  80ecdc:	e0bffc17 	ldw	r2,-16(fp)
  80ece0:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  80ece4:	e13ffb17 	ldw	r4,-20(fp)
  80ece8:	080d7e40 	call	80d7e4 <alt_release_fd>
  }
} 
  80ecec:	0001883a 	nop
  80ecf0:	e037883a 	mov	sp,fp
  80ecf4:	dfc00117 	ldw	ra,4(sp)
  80ecf8:	df000017 	ldw	fp,0(sp)
  80ecfc:	dec00204 	addi	sp,sp,8
  80ed00:	f800283a 	ret

0080ed04 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  80ed04:	defffb04 	addi	sp,sp,-20
  80ed08:	dfc00415 	stw	ra,16(sp)
  80ed0c:	df000315 	stw	fp,12(sp)
  80ed10:	df000304 	addi	fp,sp,12
  80ed14:	e13ffd15 	stw	r4,-12(fp)
  80ed18:	e17ffe15 	stw	r5,-8(fp)
  80ed1c:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  80ed20:	01c07fc4 	movi	r7,511
  80ed24:	01800044 	movi	r6,1
  80ed28:	e17ffd17 	ldw	r5,-12(fp)
  80ed2c:	01002074 	movhi	r4,129
  80ed30:	21010a04 	addi	r4,r4,1064
  80ed34:	080ec400 	call	80ec40 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  80ed38:	01c07fc4 	movi	r7,511
  80ed3c:	000d883a 	mov	r6,zero
  80ed40:	e17ffe17 	ldw	r5,-8(fp)
  80ed44:	01002074 	movhi	r4,129
  80ed48:	21010704 	addi	r4,r4,1052
  80ed4c:	080ec400 	call	80ec40 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  80ed50:	01c07fc4 	movi	r7,511
  80ed54:	01800044 	movi	r6,1
  80ed58:	e17fff17 	ldw	r5,-4(fp)
  80ed5c:	01002074 	movhi	r4,129
  80ed60:	21010d04 	addi	r4,r4,1076
  80ed64:	080ec400 	call	80ec40 <alt_open_fd>
}  
  80ed68:	0001883a 	nop
  80ed6c:	e037883a 	mov	sp,fp
  80ed70:	dfc00117 	ldw	ra,4(sp)
  80ed74:	df000017 	ldw	fp,0(sp)
  80ed78:	dec00204 	addi	sp,sp,8
  80ed7c:	f800283a 	ret

0080ed80 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80ed80:	defffe04 	addi	sp,sp,-8
  80ed84:	dfc00115 	stw	ra,4(sp)
  80ed88:	df000015 	stw	fp,0(sp)
  80ed8c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80ed90:	d0a00b17 	ldw	r2,-32724(gp)
  80ed94:	10000326 	beq	r2,zero,80eda4 <alt_get_errno+0x24>
  80ed98:	d0a00b17 	ldw	r2,-32724(gp)
  80ed9c:	103ee83a 	callr	r2
  80eda0:	00000106 	br	80eda8 <alt_get_errno+0x28>
  80eda4:	d0a6d104 	addi	r2,gp,-25788
}
  80eda8:	e037883a 	mov	sp,fp
  80edac:	dfc00117 	ldw	ra,4(sp)
  80edb0:	df000017 	ldw	fp,0(sp)
  80edb4:	dec00204 	addi	sp,sp,8
  80edb8:	f800283a 	ret

0080edbc <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  80edbc:	defffd04 	addi	sp,sp,-12
  80edc0:	df000215 	stw	fp,8(sp)
  80edc4:	df000204 	addi	fp,sp,8
  80edc8:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  80edcc:	e0bfff17 	ldw	r2,-4(fp)
  80edd0:	10800217 	ldw	r2,8(r2)
  80edd4:	10d00034 	orhi	r3,r2,16384
  80edd8:	e0bfff17 	ldw	r2,-4(fp)
  80eddc:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80ede0:	e03ffe15 	stw	zero,-8(fp)
  80ede4:	00001d06 	br	80ee5c <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80ede8:	00802074 	movhi	r2,129
  80edec:	10810704 	addi	r2,r2,1052
  80edf0:	e0fffe17 	ldw	r3,-8(fp)
  80edf4:	18c00324 	muli	r3,r3,12
  80edf8:	10c5883a 	add	r2,r2,r3
  80edfc:	10c00017 	ldw	r3,0(r2)
  80ee00:	e0bfff17 	ldw	r2,-4(fp)
  80ee04:	10800017 	ldw	r2,0(r2)
  80ee08:	1880111e 	bne	r3,r2,80ee50 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80ee0c:	00802074 	movhi	r2,129
  80ee10:	10810704 	addi	r2,r2,1052
  80ee14:	e0fffe17 	ldw	r3,-8(fp)
  80ee18:	18c00324 	muli	r3,r3,12
  80ee1c:	10c5883a 	add	r2,r2,r3
  80ee20:	10800204 	addi	r2,r2,8
  80ee24:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80ee28:	1000090e 	bge	r2,zero,80ee50 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  80ee2c:	e0bffe17 	ldw	r2,-8(fp)
  80ee30:	10c00324 	muli	r3,r2,12
  80ee34:	00802074 	movhi	r2,129
  80ee38:	10810704 	addi	r2,r2,1052
  80ee3c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80ee40:	e0bfff17 	ldw	r2,-4(fp)
  80ee44:	18800226 	beq	r3,r2,80ee50 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  80ee48:	00bffcc4 	movi	r2,-13
  80ee4c:	00000806 	br	80ee70 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80ee50:	e0bffe17 	ldw	r2,-8(fp)
  80ee54:	10800044 	addi	r2,r2,1
  80ee58:	e0bffe15 	stw	r2,-8(fp)
  80ee5c:	d0a00a17 	ldw	r2,-32728(gp)
  80ee60:	1007883a 	mov	r3,r2
  80ee64:	e0bffe17 	ldw	r2,-8(fp)
  80ee68:	18bfdf2e 	bgeu	r3,r2,80ede8 <__alt_data_end+0xff80ede8>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  80ee6c:	0005883a 	mov	r2,zero
}
  80ee70:	e037883a 	mov	sp,fp
  80ee74:	df000017 	ldw	fp,0(sp)
  80ee78:	dec00104 	addi	sp,sp,4
  80ee7c:	f800283a 	ret

0080ee80 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  80ee80:	defff604 	addi	sp,sp,-40
  80ee84:	dfc00915 	stw	ra,36(sp)
  80ee88:	df000815 	stw	fp,32(sp)
  80ee8c:	df000804 	addi	fp,sp,32
  80ee90:	e13ffd15 	stw	r4,-12(fp)
  80ee94:	e17ffe15 	stw	r5,-8(fp)
  80ee98:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  80ee9c:	00bfffc4 	movi	r2,-1
  80eea0:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  80eea4:	00bffb44 	movi	r2,-19
  80eea8:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  80eeac:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  80eeb0:	d1600804 	addi	r5,gp,-32736
  80eeb4:	e13ffd17 	ldw	r4,-12(fp)
  80eeb8:	080f19c0 	call	80f19c <alt_find_dev>
  80eebc:	e0bff815 	stw	r2,-32(fp)
  80eec0:	e0bff817 	ldw	r2,-32(fp)
  80eec4:	1000051e 	bne	r2,zero,80eedc <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  80eec8:	e13ffd17 	ldw	r4,-12(fp)
  80eecc:	080f22c0 	call	80f22c <alt_find_file>
  80eed0:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  80eed4:	00800044 	movi	r2,1
  80eed8:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  80eedc:	e0bff817 	ldw	r2,-32(fp)
  80eee0:	10002926 	beq	r2,zero,80ef88 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
  80eee4:	e13ff817 	ldw	r4,-32(fp)
  80eee8:	080f3340 	call	80f334 <alt_get_fd>
  80eeec:	e0bff915 	stw	r2,-28(fp)
  80eef0:	e0bff917 	ldw	r2,-28(fp)
  80eef4:	1000030e 	bge	r2,zero,80ef04 <open+0x84>
    {
      status = index;
  80eef8:	e0bff917 	ldw	r2,-28(fp)
  80eefc:	e0bffa15 	stw	r2,-24(fp)
  80ef00:	00002306 	br	80ef90 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
  80ef04:	e0bff917 	ldw	r2,-28(fp)
  80ef08:	10c00324 	muli	r3,r2,12
  80ef0c:	00802074 	movhi	r2,129
  80ef10:	10810704 	addi	r2,r2,1052
  80ef14:	1885883a 	add	r2,r3,r2
  80ef18:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  80ef1c:	e0fffe17 	ldw	r3,-8(fp)
  80ef20:	00900034 	movhi	r2,16384
  80ef24:	10bfffc4 	addi	r2,r2,-1
  80ef28:	1886703a 	and	r3,r3,r2
  80ef2c:	e0bffc17 	ldw	r2,-16(fp)
  80ef30:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  80ef34:	e0bffb17 	ldw	r2,-20(fp)
  80ef38:	1000051e 	bne	r2,zero,80ef50 <open+0xd0>
  80ef3c:	e13ffc17 	ldw	r4,-16(fp)
  80ef40:	080edbc0 	call	80edbc <alt_file_locked>
  80ef44:	e0bffa15 	stw	r2,-24(fp)
  80ef48:	e0bffa17 	ldw	r2,-24(fp)
  80ef4c:	10001016 	blt	r2,zero,80ef90 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  80ef50:	e0bff817 	ldw	r2,-32(fp)
  80ef54:	10800317 	ldw	r2,12(r2)
  80ef58:	10000826 	beq	r2,zero,80ef7c <open+0xfc>
  80ef5c:	e0bff817 	ldw	r2,-32(fp)
  80ef60:	10800317 	ldw	r2,12(r2)
  80ef64:	e1ffff17 	ldw	r7,-4(fp)
  80ef68:	e1bffe17 	ldw	r6,-8(fp)
  80ef6c:	e17ffd17 	ldw	r5,-12(fp)
  80ef70:	e13ffc17 	ldw	r4,-16(fp)
  80ef74:	103ee83a 	callr	r2
  80ef78:	00000106 	br	80ef80 <open+0x100>
  80ef7c:	0005883a 	mov	r2,zero
  80ef80:	e0bffa15 	stw	r2,-24(fp)
  80ef84:	00000206 	br	80ef90 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
  80ef88:	00bffb44 	movi	r2,-19
  80ef8c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  80ef90:	e0bffa17 	ldw	r2,-24(fp)
  80ef94:	1000090e 	bge	r2,zero,80efbc <open+0x13c>
  {
    alt_release_fd (index);  
  80ef98:	e13ff917 	ldw	r4,-28(fp)
  80ef9c:	080d7e40 	call	80d7e4 <alt_release_fd>
    ALT_ERRNO = -status;
  80efa0:	080ed800 	call	80ed80 <alt_get_errno>
  80efa4:	1007883a 	mov	r3,r2
  80efa8:	e0bffa17 	ldw	r2,-24(fp)
  80efac:	0085c83a 	sub	r2,zero,r2
  80efb0:	18800015 	stw	r2,0(r3)
    return -1;
  80efb4:	00bfffc4 	movi	r2,-1
  80efb8:	00000106 	br	80efc0 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
  80efbc:	e0bff917 	ldw	r2,-28(fp)
}
  80efc0:	e037883a 	mov	sp,fp
  80efc4:	dfc00117 	ldw	ra,4(sp)
  80efc8:	df000017 	ldw	fp,0(sp)
  80efcc:	dec00204 	addi	sp,sp,8
  80efd0:	f800283a 	ret

0080efd4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  80efd4:	defffa04 	addi	sp,sp,-24
  80efd8:	df000515 	stw	fp,20(sp)
  80efdc:	df000504 	addi	fp,sp,20
  80efe0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80efe4:	0005303a 	rdctl	r2,status
  80efe8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80efec:	e0fffc17 	ldw	r3,-16(fp)
  80eff0:	00bfff84 	movi	r2,-2
  80eff4:	1884703a 	and	r2,r3,r2
  80eff8:	1001703a 	wrctl	status,r2
  
  return context;
  80effc:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  80f000:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  80f004:	e0bfff17 	ldw	r2,-4(fp)
  80f008:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  80f00c:	e0bffd17 	ldw	r2,-12(fp)
  80f010:	10800017 	ldw	r2,0(r2)
  80f014:	e0fffd17 	ldw	r3,-12(fp)
  80f018:	18c00117 	ldw	r3,4(r3)
  80f01c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  80f020:	e0bffd17 	ldw	r2,-12(fp)
  80f024:	10800117 	ldw	r2,4(r2)
  80f028:	e0fffd17 	ldw	r3,-12(fp)
  80f02c:	18c00017 	ldw	r3,0(r3)
  80f030:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  80f034:	e0bffd17 	ldw	r2,-12(fp)
  80f038:	e0fffd17 	ldw	r3,-12(fp)
  80f03c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  80f040:	e0bffd17 	ldw	r2,-12(fp)
  80f044:	e0fffd17 	ldw	r3,-12(fp)
  80f048:	10c00015 	stw	r3,0(r2)
  80f04c:	e0bffb17 	ldw	r2,-20(fp)
  80f050:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f054:	e0bffe17 	ldw	r2,-8(fp)
  80f058:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  80f05c:	0001883a 	nop
  80f060:	e037883a 	mov	sp,fp
  80f064:	df000017 	ldw	fp,0(sp)
  80f068:	dec00104 	addi	sp,sp,4
  80f06c:	f800283a 	ret

0080f070 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  80f070:	defffb04 	addi	sp,sp,-20
  80f074:	dfc00415 	stw	ra,16(sp)
  80f078:	df000315 	stw	fp,12(sp)
  80f07c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  80f080:	d0a00e17 	ldw	r2,-32712(gp)
  80f084:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  80f088:	d0a6d717 	ldw	r2,-25764(gp)
  80f08c:	10800044 	addi	r2,r2,1
  80f090:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80f094:	00002e06 	br	80f150 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  80f098:	e0bffd17 	ldw	r2,-12(fp)
  80f09c:	10800017 	ldw	r2,0(r2)
  80f0a0:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  80f0a4:	e0bffd17 	ldw	r2,-12(fp)
  80f0a8:	10800403 	ldbu	r2,16(r2)
  80f0ac:	10803fcc 	andi	r2,r2,255
  80f0b0:	10000426 	beq	r2,zero,80f0c4 <alt_tick+0x54>
  80f0b4:	d0a6d717 	ldw	r2,-25764(gp)
  80f0b8:	1000021e 	bne	r2,zero,80f0c4 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  80f0bc:	e0bffd17 	ldw	r2,-12(fp)
  80f0c0:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  80f0c4:	e0bffd17 	ldw	r2,-12(fp)
  80f0c8:	10800217 	ldw	r2,8(r2)
  80f0cc:	d0e6d717 	ldw	r3,-25764(gp)
  80f0d0:	18801d36 	bltu	r3,r2,80f148 <alt_tick+0xd8>
  80f0d4:	e0bffd17 	ldw	r2,-12(fp)
  80f0d8:	10800403 	ldbu	r2,16(r2)
  80f0dc:	10803fcc 	andi	r2,r2,255
  80f0e0:	1000191e 	bne	r2,zero,80f148 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  80f0e4:	e0bffd17 	ldw	r2,-12(fp)
  80f0e8:	10800317 	ldw	r2,12(r2)
  80f0ec:	e0fffd17 	ldw	r3,-12(fp)
  80f0f0:	18c00517 	ldw	r3,20(r3)
  80f0f4:	1809883a 	mov	r4,r3
  80f0f8:	103ee83a 	callr	r2
  80f0fc:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  80f100:	e0bfff17 	ldw	r2,-4(fp)
  80f104:	1000031e 	bne	r2,zero,80f114 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  80f108:	e13ffd17 	ldw	r4,-12(fp)
  80f10c:	080efd40 	call	80efd4 <alt_alarm_stop>
  80f110:	00000d06 	br	80f148 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  80f114:	e0bffd17 	ldw	r2,-12(fp)
  80f118:	10c00217 	ldw	r3,8(r2)
  80f11c:	e0bfff17 	ldw	r2,-4(fp)
  80f120:	1887883a 	add	r3,r3,r2
  80f124:	e0bffd17 	ldw	r2,-12(fp)
  80f128:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  80f12c:	e0bffd17 	ldw	r2,-12(fp)
  80f130:	10c00217 	ldw	r3,8(r2)
  80f134:	d0a6d717 	ldw	r2,-25764(gp)
  80f138:	1880032e 	bgeu	r3,r2,80f148 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  80f13c:	e0bffd17 	ldw	r2,-12(fp)
  80f140:	00c00044 	movi	r3,1
  80f144:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  80f148:	e0bffe17 	ldw	r2,-8(fp)
  80f14c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80f150:	e0fffd17 	ldw	r3,-12(fp)
  80f154:	d0a00e04 	addi	r2,gp,-32712
  80f158:	18bfcf1e 	bne	r3,r2,80f098 <__alt_data_end+0xff80f098>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  80f15c:	0001883a 	nop
}
  80f160:	0001883a 	nop
  80f164:	e037883a 	mov	sp,fp
  80f168:	dfc00117 	ldw	ra,4(sp)
  80f16c:	df000017 	ldw	fp,0(sp)
  80f170:	dec00204 	addi	sp,sp,8
  80f174:	f800283a 	ret

0080f178 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
  80f178:	deffff04 	addi	sp,sp,-4
  80f17c:	df000015 	stw	fp,0(sp)
  80f180:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  80f184:	000170fa 	wrctl	ienable,zero
}
  80f188:	0001883a 	nop
  80f18c:	e037883a 	mov	sp,fp
  80f190:	df000017 	ldw	fp,0(sp)
  80f194:	dec00104 	addi	sp,sp,4
  80f198:	f800283a 	ret

0080f19c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  80f19c:	defffa04 	addi	sp,sp,-24
  80f1a0:	dfc00515 	stw	ra,20(sp)
  80f1a4:	df000415 	stw	fp,16(sp)
  80f1a8:	df000404 	addi	fp,sp,16
  80f1ac:	e13ffe15 	stw	r4,-8(fp)
  80f1b0:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  80f1b4:	e0bfff17 	ldw	r2,-4(fp)
  80f1b8:	10800017 	ldw	r2,0(r2)
  80f1bc:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  80f1c0:	e13ffe17 	ldw	r4,-8(fp)
  80f1c4:	080096c0 	call	80096c <strlen>
  80f1c8:	10800044 	addi	r2,r2,1
  80f1cc:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80f1d0:	00000d06 	br	80f208 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  80f1d4:	e0bffc17 	ldw	r2,-16(fp)
  80f1d8:	10800217 	ldw	r2,8(r2)
  80f1dc:	e0fffd17 	ldw	r3,-12(fp)
  80f1e0:	180d883a 	mov	r6,r3
  80f1e4:	e17ffe17 	ldw	r5,-8(fp)
  80f1e8:	1009883a 	mov	r4,r2
  80f1ec:	080f4b40 	call	80f4b4 <memcmp>
  80f1f0:	1000021e 	bne	r2,zero,80f1fc <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  80f1f4:	e0bffc17 	ldw	r2,-16(fp)
  80f1f8:	00000706 	br	80f218 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  80f1fc:	e0bffc17 	ldw	r2,-16(fp)
  80f200:	10800017 	ldw	r2,0(r2)
  80f204:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80f208:	e0fffc17 	ldw	r3,-16(fp)
  80f20c:	e0bfff17 	ldw	r2,-4(fp)
  80f210:	18bff01e 	bne	r3,r2,80f1d4 <__alt_data_end+0xff80f1d4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  80f214:	0005883a 	mov	r2,zero
}
  80f218:	e037883a 	mov	sp,fp
  80f21c:	dfc00117 	ldw	ra,4(sp)
  80f220:	df000017 	ldw	fp,0(sp)
  80f224:	dec00204 	addi	sp,sp,8
  80f228:	f800283a 	ret

0080f22c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  80f22c:	defffb04 	addi	sp,sp,-20
  80f230:	dfc00415 	stw	ra,16(sp)
  80f234:	df000315 	stw	fp,12(sp)
  80f238:	df000304 	addi	fp,sp,12
  80f23c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  80f240:	d0a00617 	ldw	r2,-32744(gp)
  80f244:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  80f248:	00003106 	br	80f310 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  80f24c:	e0bffd17 	ldw	r2,-12(fp)
  80f250:	10800217 	ldw	r2,8(r2)
  80f254:	1009883a 	mov	r4,r2
  80f258:	080096c0 	call	80096c <strlen>
  80f25c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  80f260:	e0bffd17 	ldw	r2,-12(fp)
  80f264:	10c00217 	ldw	r3,8(r2)
  80f268:	e0bffe17 	ldw	r2,-8(fp)
  80f26c:	10bfffc4 	addi	r2,r2,-1
  80f270:	1885883a 	add	r2,r3,r2
  80f274:	10800003 	ldbu	r2,0(r2)
  80f278:	10803fcc 	andi	r2,r2,255
  80f27c:	1080201c 	xori	r2,r2,128
  80f280:	10bfe004 	addi	r2,r2,-128
  80f284:	10800bd8 	cmpnei	r2,r2,47
  80f288:	1000031e 	bne	r2,zero,80f298 <alt_find_file+0x6c>
    {
      len -= 1;
  80f28c:	e0bffe17 	ldw	r2,-8(fp)
  80f290:	10bfffc4 	addi	r2,r2,-1
  80f294:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  80f298:	e0bffe17 	ldw	r2,-8(fp)
  80f29c:	e0ffff17 	ldw	r3,-4(fp)
  80f2a0:	1885883a 	add	r2,r3,r2
  80f2a4:	10800003 	ldbu	r2,0(r2)
  80f2a8:	10803fcc 	andi	r2,r2,255
  80f2ac:	1080201c 	xori	r2,r2,128
  80f2b0:	10bfe004 	addi	r2,r2,-128
  80f2b4:	10800be0 	cmpeqi	r2,r2,47
  80f2b8:	1000081e 	bne	r2,zero,80f2dc <alt_find_file+0xb0>
  80f2bc:	e0bffe17 	ldw	r2,-8(fp)
  80f2c0:	e0ffff17 	ldw	r3,-4(fp)
  80f2c4:	1885883a 	add	r2,r3,r2
  80f2c8:	10800003 	ldbu	r2,0(r2)
  80f2cc:	10803fcc 	andi	r2,r2,255
  80f2d0:	1080201c 	xori	r2,r2,128
  80f2d4:	10bfe004 	addi	r2,r2,-128
  80f2d8:	10000a1e 	bne	r2,zero,80f304 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  80f2dc:	e0bffd17 	ldw	r2,-12(fp)
  80f2e0:	10800217 	ldw	r2,8(r2)
  80f2e4:	e0fffe17 	ldw	r3,-8(fp)
  80f2e8:	180d883a 	mov	r6,r3
  80f2ec:	e17fff17 	ldw	r5,-4(fp)
  80f2f0:	1009883a 	mov	r4,r2
  80f2f4:	080f4b40 	call	80f4b4 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  80f2f8:	1000021e 	bne	r2,zero,80f304 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  80f2fc:	e0bffd17 	ldw	r2,-12(fp)
  80f300:	00000706 	br	80f320 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  80f304:	e0bffd17 	ldw	r2,-12(fp)
  80f308:	10800017 	ldw	r2,0(r2)
  80f30c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  80f310:	e0fffd17 	ldw	r3,-12(fp)
  80f314:	d0a00604 	addi	r2,gp,-32744
  80f318:	18bfcc1e 	bne	r3,r2,80f24c <__alt_data_end+0xff80f24c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  80f31c:	0005883a 	mov	r2,zero
}
  80f320:	e037883a 	mov	sp,fp
  80f324:	dfc00117 	ldw	ra,4(sp)
  80f328:	df000017 	ldw	fp,0(sp)
  80f32c:	dec00204 	addi	sp,sp,8
  80f330:	f800283a 	ret

0080f334 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  80f334:	defffc04 	addi	sp,sp,-16
  80f338:	df000315 	stw	fp,12(sp)
  80f33c:	df000304 	addi	fp,sp,12
  80f340:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  80f344:	00bffa04 	movi	r2,-24
  80f348:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  80f34c:	e03ffd15 	stw	zero,-12(fp)
  80f350:	00001906 	br	80f3b8 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
  80f354:	00802074 	movhi	r2,129
  80f358:	10810704 	addi	r2,r2,1052
  80f35c:	e0fffd17 	ldw	r3,-12(fp)
  80f360:	18c00324 	muli	r3,r3,12
  80f364:	10c5883a 	add	r2,r2,r3
  80f368:	10800017 	ldw	r2,0(r2)
  80f36c:	10000f1e 	bne	r2,zero,80f3ac <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
  80f370:	00802074 	movhi	r2,129
  80f374:	10810704 	addi	r2,r2,1052
  80f378:	e0fffd17 	ldw	r3,-12(fp)
  80f37c:	18c00324 	muli	r3,r3,12
  80f380:	10c5883a 	add	r2,r2,r3
  80f384:	e0ffff17 	ldw	r3,-4(fp)
  80f388:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  80f38c:	d0e00a17 	ldw	r3,-32728(gp)
  80f390:	e0bffd17 	ldw	r2,-12(fp)
  80f394:	1880020e 	bge	r3,r2,80f3a0 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
  80f398:	e0bffd17 	ldw	r2,-12(fp)
  80f39c:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
  80f3a0:	e0bffd17 	ldw	r2,-12(fp)
  80f3a4:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  80f3a8:	00000606 	br	80f3c4 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  80f3ac:	e0bffd17 	ldw	r2,-12(fp)
  80f3b0:	10800044 	addi	r2,r2,1
  80f3b4:	e0bffd15 	stw	r2,-12(fp)
  80f3b8:	e0bffd17 	ldw	r2,-12(fp)
  80f3bc:	10800810 	cmplti	r2,r2,32
  80f3c0:	103fe41e 	bne	r2,zero,80f354 <__alt_data_end+0xff80f354>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  80f3c4:	e0bffe17 	ldw	r2,-8(fp)
}
  80f3c8:	e037883a 	mov	sp,fp
  80f3cc:	df000017 	ldw	fp,0(sp)
  80f3d0:	dec00104 	addi	sp,sp,4
  80f3d4:	f800283a 	ret

0080f3d8 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  80f3d8:	defffb04 	addi	sp,sp,-20
  80f3dc:	df000415 	stw	fp,16(sp)
  80f3e0:	df000404 	addi	fp,sp,16
  80f3e4:	e13ffe15 	stw	r4,-8(fp)
  80f3e8:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  80f3ec:	e0bfff17 	ldw	r2,-4(fp)
  80f3f0:	10820070 	cmpltui	r2,r2,2049
  80f3f4:	1000021e 	bne	r2,zero,80f400 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  80f3f8:	00820004 	movi	r2,2048
  80f3fc:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  80f400:	e0fffe17 	ldw	r3,-8(fp)
  80f404:	e0bfff17 	ldw	r2,-4(fp)
  80f408:	1885883a 	add	r2,r3,r2
  80f40c:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80f410:	e0bffe17 	ldw	r2,-8(fp)
  80f414:	e0bffc15 	stw	r2,-16(fp)
  80f418:	00000506 	br	80f430 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  80f41c:	e0bffc17 	ldw	r2,-16(fp)
  80f420:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80f424:	e0bffc17 	ldw	r2,-16(fp)
  80f428:	10800804 	addi	r2,r2,32
  80f42c:	e0bffc15 	stw	r2,-16(fp)
  80f430:	e0fffc17 	ldw	r3,-16(fp)
  80f434:	e0bffd17 	ldw	r2,-12(fp)
  80f438:	18bff836 	bltu	r3,r2,80f41c <__alt_data_end+0xff80f41c>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  80f43c:	e0bffe17 	ldw	r2,-8(fp)
  80f440:	108007cc 	andi	r2,r2,31
  80f444:	10000226 	beq	r2,zero,80f450 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  80f448:	e0bffc17 	ldw	r2,-16(fp)
  80f44c:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  80f450:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  80f454:	0001883a 	nop
  80f458:	e037883a 	mov	sp,fp
  80f45c:	df000017 	ldw	fp,0(sp)
  80f460:	dec00104 	addi	sp,sp,4
  80f464:	f800283a 	ret

0080f468 <atexit>:
  80f468:	200b883a 	mov	r5,r4
  80f46c:	000f883a 	mov	r7,zero
  80f470:	000d883a 	mov	r6,zero
  80f474:	0009883a 	mov	r4,zero
  80f478:	080f5301 	jmpi	80f530 <__register_exitproc>

0080f47c <exit>:
  80f47c:	defffe04 	addi	sp,sp,-8
  80f480:	000b883a 	mov	r5,zero
  80f484:	dc000015 	stw	r16,0(sp)
  80f488:	dfc00115 	stw	ra,4(sp)
  80f48c:	2021883a 	mov	r16,r4
  80f490:	080f6480 	call	80f648 <__call_exitprocs>
  80f494:	00802074 	movhi	r2,129
  80f498:	10857f04 	addi	r2,r2,5628
  80f49c:	11000017 	ldw	r4,0(r2)
  80f4a0:	20800f17 	ldw	r2,60(r4)
  80f4a4:	10000126 	beq	r2,zero,80f4ac <exit+0x30>
  80f4a8:	103ee83a 	callr	r2
  80f4ac:	8009883a 	mov	r4,r16
  80f4b0:	080f7c80 	call	80f7c8 <_exit>

0080f4b4 <memcmp>:
  80f4b4:	01c000c4 	movi	r7,3
  80f4b8:	3980192e 	bgeu	r7,r6,80f520 <memcmp+0x6c>
  80f4bc:	2144b03a 	or	r2,r4,r5
  80f4c0:	11c4703a 	and	r2,r2,r7
  80f4c4:	10000f26 	beq	r2,zero,80f504 <memcmp+0x50>
  80f4c8:	20800003 	ldbu	r2,0(r4)
  80f4cc:	28c00003 	ldbu	r3,0(r5)
  80f4d0:	10c0151e 	bne	r2,r3,80f528 <memcmp+0x74>
  80f4d4:	31bfff84 	addi	r6,r6,-2
  80f4d8:	01ffffc4 	movi	r7,-1
  80f4dc:	00000406 	br	80f4f0 <memcmp+0x3c>
  80f4e0:	20800003 	ldbu	r2,0(r4)
  80f4e4:	28c00003 	ldbu	r3,0(r5)
  80f4e8:	31bfffc4 	addi	r6,r6,-1
  80f4ec:	10c00e1e 	bne	r2,r3,80f528 <memcmp+0x74>
  80f4f0:	21000044 	addi	r4,r4,1
  80f4f4:	29400044 	addi	r5,r5,1
  80f4f8:	31fff91e 	bne	r6,r7,80f4e0 <__alt_data_end+0xff80f4e0>
  80f4fc:	0005883a 	mov	r2,zero
  80f500:	f800283a 	ret
  80f504:	20c00017 	ldw	r3,0(r4)
  80f508:	28800017 	ldw	r2,0(r5)
  80f50c:	18bfee1e 	bne	r3,r2,80f4c8 <__alt_data_end+0xff80f4c8>
  80f510:	31bfff04 	addi	r6,r6,-4
  80f514:	21000104 	addi	r4,r4,4
  80f518:	29400104 	addi	r5,r5,4
  80f51c:	39bff936 	bltu	r7,r6,80f504 <__alt_data_end+0xff80f504>
  80f520:	303fe91e 	bne	r6,zero,80f4c8 <__alt_data_end+0xff80f4c8>
  80f524:	003ff506 	br	80f4fc <__alt_data_end+0xff80f4fc>
  80f528:	10c5c83a 	sub	r2,r2,r3
  80f52c:	f800283a 	ret

0080f530 <__register_exitproc>:
  80f530:	defffa04 	addi	sp,sp,-24
  80f534:	dc000315 	stw	r16,12(sp)
  80f538:	04002074 	movhi	r16,129
  80f53c:	84057f04 	addi	r16,r16,5628
  80f540:	80c00017 	ldw	r3,0(r16)
  80f544:	dc400415 	stw	r17,16(sp)
  80f548:	dfc00515 	stw	ra,20(sp)
  80f54c:	18805217 	ldw	r2,328(r3)
  80f550:	2023883a 	mov	r17,r4
  80f554:	10003726 	beq	r2,zero,80f634 <__register_exitproc+0x104>
  80f558:	10c00117 	ldw	r3,4(r2)
  80f55c:	010007c4 	movi	r4,31
  80f560:	20c00e16 	blt	r4,r3,80f59c <__register_exitproc+0x6c>
  80f564:	1a000044 	addi	r8,r3,1
  80f568:	8800221e 	bne	r17,zero,80f5f4 <__register_exitproc+0xc4>
  80f56c:	18c00084 	addi	r3,r3,2
  80f570:	18c7883a 	add	r3,r3,r3
  80f574:	18c7883a 	add	r3,r3,r3
  80f578:	12000115 	stw	r8,4(r2)
  80f57c:	10c7883a 	add	r3,r2,r3
  80f580:	19400015 	stw	r5,0(r3)
  80f584:	0005883a 	mov	r2,zero
  80f588:	dfc00517 	ldw	ra,20(sp)
  80f58c:	dc400417 	ldw	r17,16(sp)
  80f590:	dc000317 	ldw	r16,12(sp)
  80f594:	dec00604 	addi	sp,sp,24
  80f598:	f800283a 	ret
  80f59c:	00800034 	movhi	r2,0
  80f5a0:	10800004 	addi	r2,r2,0
  80f5a4:	10002626 	beq	r2,zero,80f640 <__register_exitproc+0x110>
  80f5a8:	01006404 	movi	r4,400
  80f5ac:	d9400015 	stw	r5,0(sp)
  80f5b0:	d9800115 	stw	r6,4(sp)
  80f5b4:	d9c00215 	stw	r7,8(sp)
  80f5b8:	00000000 	call	0 <__reset-0x800000>
  80f5bc:	d9400017 	ldw	r5,0(sp)
  80f5c0:	d9800117 	ldw	r6,4(sp)
  80f5c4:	d9c00217 	ldw	r7,8(sp)
  80f5c8:	10001d26 	beq	r2,zero,80f640 <__register_exitproc+0x110>
  80f5cc:	81000017 	ldw	r4,0(r16)
  80f5d0:	10000115 	stw	zero,4(r2)
  80f5d4:	02000044 	movi	r8,1
  80f5d8:	22405217 	ldw	r9,328(r4)
  80f5dc:	0007883a 	mov	r3,zero
  80f5e0:	12400015 	stw	r9,0(r2)
  80f5e4:	20805215 	stw	r2,328(r4)
  80f5e8:	10006215 	stw	zero,392(r2)
  80f5ec:	10006315 	stw	zero,396(r2)
  80f5f0:	883fde26 	beq	r17,zero,80f56c <__alt_data_end+0xff80f56c>
  80f5f4:	18c9883a 	add	r4,r3,r3
  80f5f8:	2109883a 	add	r4,r4,r4
  80f5fc:	1109883a 	add	r4,r2,r4
  80f600:	21802215 	stw	r6,136(r4)
  80f604:	01800044 	movi	r6,1
  80f608:	12406217 	ldw	r9,392(r2)
  80f60c:	30cc983a 	sll	r6,r6,r3
  80f610:	4992b03a 	or	r9,r9,r6
  80f614:	12406215 	stw	r9,392(r2)
  80f618:	21c04215 	stw	r7,264(r4)
  80f61c:	01000084 	movi	r4,2
  80f620:	893fd21e 	bne	r17,r4,80f56c <__alt_data_end+0xff80f56c>
  80f624:	11006317 	ldw	r4,396(r2)
  80f628:	218cb03a 	or	r6,r4,r6
  80f62c:	11806315 	stw	r6,396(r2)
  80f630:	003fce06 	br	80f56c <__alt_data_end+0xff80f56c>
  80f634:	18805304 	addi	r2,r3,332
  80f638:	18805215 	stw	r2,328(r3)
  80f63c:	003fc606 	br	80f558 <__alt_data_end+0xff80f558>
  80f640:	00bfffc4 	movi	r2,-1
  80f644:	003fd006 	br	80f588 <__alt_data_end+0xff80f588>

0080f648 <__call_exitprocs>:
  80f648:	defff504 	addi	sp,sp,-44
  80f64c:	df000915 	stw	fp,36(sp)
  80f650:	dd400615 	stw	r21,24(sp)
  80f654:	dc800315 	stw	r18,12(sp)
  80f658:	dfc00a15 	stw	ra,40(sp)
  80f65c:	ddc00815 	stw	r23,32(sp)
  80f660:	dd800715 	stw	r22,28(sp)
  80f664:	dd000515 	stw	r20,20(sp)
  80f668:	dcc00415 	stw	r19,16(sp)
  80f66c:	dc400215 	stw	r17,8(sp)
  80f670:	dc000115 	stw	r16,4(sp)
  80f674:	d9000015 	stw	r4,0(sp)
  80f678:	2839883a 	mov	fp,r5
  80f67c:	04800044 	movi	r18,1
  80f680:	057fffc4 	movi	r21,-1
  80f684:	00802074 	movhi	r2,129
  80f688:	10857f04 	addi	r2,r2,5628
  80f68c:	12000017 	ldw	r8,0(r2)
  80f690:	45005217 	ldw	r20,328(r8)
  80f694:	44c05204 	addi	r19,r8,328
  80f698:	a0001c26 	beq	r20,zero,80f70c <__call_exitprocs+0xc4>
  80f69c:	a0800117 	ldw	r2,4(r20)
  80f6a0:	15ffffc4 	addi	r23,r2,-1
  80f6a4:	b8000d16 	blt	r23,zero,80f6dc <__call_exitprocs+0x94>
  80f6a8:	14000044 	addi	r16,r2,1
  80f6ac:	8421883a 	add	r16,r16,r16
  80f6b0:	8421883a 	add	r16,r16,r16
  80f6b4:	84402004 	addi	r17,r16,128
  80f6b8:	a463883a 	add	r17,r20,r17
  80f6bc:	a421883a 	add	r16,r20,r16
  80f6c0:	e0001e26 	beq	fp,zero,80f73c <__call_exitprocs+0xf4>
  80f6c4:	80804017 	ldw	r2,256(r16)
  80f6c8:	e0801c26 	beq	fp,r2,80f73c <__call_exitprocs+0xf4>
  80f6cc:	bdffffc4 	addi	r23,r23,-1
  80f6d0:	843fff04 	addi	r16,r16,-4
  80f6d4:	8c7fff04 	addi	r17,r17,-4
  80f6d8:	bd7ff91e 	bne	r23,r21,80f6c0 <__alt_data_end+0xff80f6c0>
  80f6dc:	00800034 	movhi	r2,0
  80f6e0:	10800004 	addi	r2,r2,0
  80f6e4:	10000926 	beq	r2,zero,80f70c <__call_exitprocs+0xc4>
  80f6e8:	a0800117 	ldw	r2,4(r20)
  80f6ec:	1000301e 	bne	r2,zero,80f7b0 <__call_exitprocs+0x168>
  80f6f0:	a0800017 	ldw	r2,0(r20)
  80f6f4:	10003226 	beq	r2,zero,80f7c0 <__call_exitprocs+0x178>
  80f6f8:	a009883a 	mov	r4,r20
  80f6fc:	98800015 	stw	r2,0(r19)
  80f700:	00000000 	call	0 <__reset-0x800000>
  80f704:	9d000017 	ldw	r20,0(r19)
  80f708:	a03fe41e 	bne	r20,zero,80f69c <__alt_data_end+0xff80f69c>
  80f70c:	dfc00a17 	ldw	ra,40(sp)
  80f710:	df000917 	ldw	fp,36(sp)
  80f714:	ddc00817 	ldw	r23,32(sp)
  80f718:	dd800717 	ldw	r22,28(sp)
  80f71c:	dd400617 	ldw	r21,24(sp)
  80f720:	dd000517 	ldw	r20,20(sp)
  80f724:	dcc00417 	ldw	r19,16(sp)
  80f728:	dc800317 	ldw	r18,12(sp)
  80f72c:	dc400217 	ldw	r17,8(sp)
  80f730:	dc000117 	ldw	r16,4(sp)
  80f734:	dec00b04 	addi	sp,sp,44
  80f738:	f800283a 	ret
  80f73c:	a0800117 	ldw	r2,4(r20)
  80f740:	80c00017 	ldw	r3,0(r16)
  80f744:	10bfffc4 	addi	r2,r2,-1
  80f748:	15c01426 	beq	r2,r23,80f79c <__call_exitprocs+0x154>
  80f74c:	80000015 	stw	zero,0(r16)
  80f750:	183fde26 	beq	r3,zero,80f6cc <__alt_data_end+0xff80f6cc>
  80f754:	95c8983a 	sll	r4,r18,r23
  80f758:	a0806217 	ldw	r2,392(r20)
  80f75c:	a5800117 	ldw	r22,4(r20)
  80f760:	2084703a 	and	r2,r4,r2
  80f764:	10000b26 	beq	r2,zero,80f794 <__call_exitprocs+0x14c>
  80f768:	a0806317 	ldw	r2,396(r20)
  80f76c:	2088703a 	and	r4,r4,r2
  80f770:	20000c1e 	bne	r4,zero,80f7a4 <__call_exitprocs+0x15c>
  80f774:	89400017 	ldw	r5,0(r17)
  80f778:	d9000017 	ldw	r4,0(sp)
  80f77c:	183ee83a 	callr	r3
  80f780:	a0800117 	ldw	r2,4(r20)
  80f784:	15bfbf1e 	bne	r2,r22,80f684 <__alt_data_end+0xff80f684>
  80f788:	98800017 	ldw	r2,0(r19)
  80f78c:	153fcf26 	beq	r2,r20,80f6cc <__alt_data_end+0xff80f6cc>
  80f790:	003fbc06 	br	80f684 <__alt_data_end+0xff80f684>
  80f794:	183ee83a 	callr	r3
  80f798:	003ff906 	br	80f780 <__alt_data_end+0xff80f780>
  80f79c:	a5c00115 	stw	r23,4(r20)
  80f7a0:	003feb06 	br	80f750 <__alt_data_end+0xff80f750>
  80f7a4:	89000017 	ldw	r4,0(r17)
  80f7a8:	183ee83a 	callr	r3
  80f7ac:	003ff406 	br	80f780 <__alt_data_end+0xff80f780>
  80f7b0:	a0800017 	ldw	r2,0(r20)
  80f7b4:	a027883a 	mov	r19,r20
  80f7b8:	1029883a 	mov	r20,r2
  80f7bc:	003fb606 	br	80f698 <__alt_data_end+0xff80f698>
  80f7c0:	0005883a 	mov	r2,zero
  80f7c4:	003ffb06 	br	80f7b4 <__alt_data_end+0xff80f7b4>

0080f7c8 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  80f7c8:	defffd04 	addi	sp,sp,-12
  80f7cc:	df000215 	stw	fp,8(sp)
  80f7d0:	df000204 	addi	fp,sp,8
  80f7d4:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  80f7d8:	0001883a 	nop
  80f7dc:	e0bfff17 	ldw	r2,-4(fp)
  80f7e0:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  80f7e4:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  80f7e8:	10000226 	beq	r2,zero,80f7f4 <_exit+0x2c>
    ALT_SIM_FAIL();
  80f7ec:	002af070 	cmpltui	zero,zero,43969
  80f7f0:	00000106 	br	80f7f8 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  80f7f4:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  80f7f8:	003fff06 	br	80f7f8 <__alt_data_end+0xff80f7f8>
