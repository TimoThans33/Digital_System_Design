
tsk7_hello_world.elf:     file format elf32-littlenios2
tsk7_hello_world.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x008001c0

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x0000f5cc memsz 0x0000f5cc flags r-x
    LOAD off    0x000105ec vaddr 0x0080f5ec paddr 0x008110d8 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x00012bc4 vaddr 0x00812bc4 paddr 0x00812bc4 align 2**12
         filesz 0x00000000 memsz 0x0000015c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   000001a0  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f110  008001c0  008001c0  000011c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000031c  0080f2d0  0080f2d0  000102d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0080f5ec  008110d8  000105ec  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          0000015c  00812bc4  00812bc4  00012bc4  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00812d20  00812d20  000120d8  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  000120d8  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000e90  00000000  00000000  00012100  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000232e4  00000000  00000000  00012f90  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00008edc  00000000  00000000  00036274  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b271  00000000  00000000  0003f150  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002018  00000000  00000000  0004a3c4  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00003370  00000000  00000000  0004c3dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017868  00000000  00000000  0004f74c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00066fb4  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000018a8  00000000  00000000  00066fe8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006b8e2  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  0006b8e5  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006b8e8  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006b8e9  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0006b8ea  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0006b8ee  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0006b8f2  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  0006b8f6  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0006b8ff  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  0006b908  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  0006b911  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000043  00000000  00000000  0006b923  2**0
                  CONTENTS, READONLY
 29 .jdi          00004f66  00000000  00000000  0006b966  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     0003cf17  00000000  00000000  000708cc  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
008001c0 l    d  .text	00000000 .text
0080f2d0 l    d  .rodata	00000000 .rodata
0080f5ec l    d  .rwdata	00000000 .rwdata
00812bc4 l    d  .bss	00000000 .bss
00812d20 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../tsk7_hello_world_bsp//obj/HAL/src/crt0.o
00800208 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
00800094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0080f33a l     O .rodata	00000010 zeroes.4404
00802688 l     F .text	000000bc __sbprintf
0080f34a l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00802898 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
008043c8 l     F .text	00000008 __fp_unlock
008043dc l     F .text	0000019c __sinit.part.1
00804578 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0080f5ec l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
0080fa30 l     O .rwdata	00000020 lc_ctype_charset
0080fa10 l     O .rwdata	00000020 lc_message_charset
0080fa50 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0080f37c l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00807974 l     F .text	000000fc __sprint_r.part.0
0080f4b0 l     O .rodata	00000010 blanks.4348
0080f4a0 l     O .rodata	00000010 zeroes.4349
00808f00 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0080cbbc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080ccc8 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080ccf4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0080cde0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080cec0 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080cfac l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0080d180 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
008110c8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0080d3cc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0080d500 l     F .text	00000034 alt_dev_reg
00810038 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0080d7f4 l     F .text	0000020c altera_avalon_jtag_uart_irq
0080da00 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0080e038 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0080e2a0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0080e714 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0080e854 l     F .text	0000003c alt_get_errno
0080e890 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00806fb8 g     F .text	00000074 _mprec_log10
008070a4 g     F .text	0000008c __any_on
0080949c g     F .text	00000054 _isatty_r
0080f388 g     O .rodata	00000028 __mprec_tinytens
0080d0bc g     F .text	0000007c alt_main
00800308 g     F .text	000000c0 _puts_r
00812c20 g     O .bss	00000100 alt_irq
008094f0 g     F .text	00000060 _lseek_r
008110d8 g       *ABS*	00000000 __flash_rwdata_start
0080b6e8 g     F .text	00000088 .hidden __eqdf2
00812d20 g       *ABS*	00000000 __alt_heap_start
008002cc g     F .text	0000003c printf
00809708 g     F .text	0000009c _wcrtomb_r
00807834 g     F .text	0000005c __sseek
00804718 g     F .text	00000010 __sinit
008095b0 g     F .text	00000140 __swbuf_r
008051e0 g     F .text	0000007c _setlocale_r
00804580 g     F .text	00000068 __sfmoreglue
0080d15c g     F .text	00000024 __malloc_unlock
00805eb0 g     F .text	0000015c memmove
00804700 g     F .text	00000018 _cleanup
00806134 g     F .text	000000a8 _Balloc
0080b770 g     F .text	000000dc .hidden __gtdf2
00800000 g     F .entry	0000001c __reset
00800020 g       *ABS*	00000000 __flash_exceptions_start
00809440 g     F .text	0000005c _fstat_r
00812bdc g     O .bss	00000004 errno
008077b0 g     F .text	00000008 __seofread
00812be4 g     O .bss	00000004 alt_argv
00819098 g       *ABS*	00000000 _gp
0080feb8 g     O .rwdata	00000180 alt_fd_list
0080ec70 g     F .text	00000090 alt_find_dev
00805d68 g     F .text	00000148 memcpy
008043d0 g     F .text	0000000c _cleanup_r
0080c9d4 g     F .text	000000dc .hidden __floatsidf
0080e7d8 g     F .text	0000007c alt_io_redirect
0080b84c g     F .text	000000f4 .hidden __ltdf2
0080f2d0 g       *ABS*	00000000 __DTOR_END__
008003c8 g     F .text	00000014 puts
00807694 g     F .text	00000074 __fpclassifyd
00806f14 g     F .text	000000a4 __ratio
00808ee4 g     F .text	0000001c __vfiprintf_internal
0080dbf8 g     F .text	0000021c altera_avalon_jtag_uart_read
0080029c g     F .text	00000030 _printf_r
0080a498 g     F .text	00000064 .hidden __udivsi3
0080ce1c g     F .text	000000a4 isatty
0080f3d8 g     O .rodata	000000c8 __mprec_tens
0080525c g     F .text	0000000c __locale_charset
0080eeac g     F .text	00000090 alt_icache_flush
00812bd8 g     O .bss	00000004 __malloc_top_pad
008110a0 g     O .rwdata	00000004 __mb_cur_max
0080528c g     F .text	0000000c _localeconv_r
00806540 g     F .text	0000003c __i2b
00804b9c g     F .text	000004bc __sfvwrite_r
00807708 g     F .text	00000054 _sbrk_r
00809550 g     F .text	00000060 _read_r
008110c0 g     O .rwdata	00000004 alt_max_fd
00809134 g     F .text	000000f0 _fclose_r
00804398 g     F .text	00000030 fflush
00812bd4 g     O .bss	00000004 __malloc_max_sbrked_mem
0080a554 g     F .text	000008ac .hidden __adddf3
00806cbc g     F .text	0000010c __b2d
00809e68 g     F .text	00000538 .hidden __umoddi3
0080cfe8 g     F .text	000000d4 lseek
00811098 g     O .rwdata	00000004 _global_impure_ptr
00807130 g     F .text	00000564 _realloc_r
00812d20 g       *ABS*	00000000 __bss_end
0080e624 g     F .text	000000f0 alt_iic_isr_register
0080eb44 g     F .text	00000108 alt_tick
008098f0 g     F .text	00000578 .hidden __udivdi3
0080939c g     F .text	00000024 _fputwc_r
0080f3b0 g     O .rodata	00000028 __mprec_bigtens
00806324 g     F .text	00000104 __s2b
0080cab0 g     F .text	000000a8 .hidden __floatunsidf
008069fc g     F .text	00000060 __mcmp
00804738 g     F .text	00000018 __fp_lock_all
0080e5d8 g     F .text	0000004c alt_ic_irq_enabled
0080eaa8 g     F .text	0000009c alt_alarm_stop
00812bec g     O .bss	00000004 alt_irq_active
008000ec g     F .exceptions	000000d4 alt_irq_handler
0080fe90 g     O .rwdata	00000028 alt_dev_null
0080e258 g     F .text	00000048 alt_dcache_flush_all
00806428 g     F .text	00000068 __hi0bits
0080c954 g     F .text	00000080 .hidden __fixdfsi
008110d8 g       *ABS*	00000000 __ram_rwdata_end
008110b8 g     O .rwdata	00000008 alt_dev_list
0080d408 g     F .text	000000f8 write
0080f5ec g       *ABS*	00000000 __ram_rodata_end
0080cd30 g     F .text	000000b0 fstat
0080b84c g     F .text	000000f4 .hidden __ledf2
00806774 g     F .text	00000140 __pow5mult
00807a88 g     F .text	0000145c ___vfiprintf_internal_r
00812bcc g     O .bss	00000004 __nlocale_changed
0080a4fc g     F .text	00000058 .hidden __umodsi3
00812d20 g       *ABS*	00000000 end
0080d734 g     F .text	000000c0 altera_avalon_jtag_uart_init
0080f2d0 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
0080e0b0 g     F .text	0000007c alt_avalon_timer_sc_init
0080cb58 g     F .text	00000064 .hidden __clzsi2
0080de14 g     F .text	00000224 altera_avalon_jtag_uart_write
00804728 g     F .text	00000004 __sfp_lock_acquire
00805c84 g     F .text	000000e4 memchr
00800474 g     F .text	000021f8 ___vfprintf_internal_r
0080488c g     F .text	00000310 _free_r
00805268 g     F .text	00000010 __locale_mb_cur_max
0080f11c g     F .text	00000180 __call_exitprocs
00812bc8 g     O .bss	00000004 __mlocale_changed
008110a4 g     O .rwdata	00000004 __malloc_sbrk_base
008001c0 g     F .text	0000004c _start
00812bf0 g     O .bss	00000004 _alt_tick_rate
008068b4 g     F .text	00000148 __lshift
00812bf4 g     O .bss	00000004 _alt_nticks
0080d1bc g     F .text	000000fc read
0080d56c g     F .text	00000064 alt_sys_init
0080f004 g     F .text	00000118 __register_exitproc
0080657c g     F .text	000001f8 __multiply
0080daa0 g     F .text	00000068 altera_avalon_jtag_uart_close
0080f5ec g       *ABS*	00000000 __ram_rwdata_start
0080f2d0 g       *ABS*	00000000 __ram_rodata_start
00812bf8 g     O .bss	00000028 __malloc_current_mallinfo
00806dc8 g     F .text	0000014c __d2b
0080d5d0 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0080ee08 g     F .text	000000a4 alt_get_fd
0080901c g     F .text	00000054 _close_r
0080ef88 g     F .text	0000007c memcmp
0080d690 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00812d20 g       *ABS*	00000000 __alt_stack_base
0080d6e0 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00802744 g     F .text	00000154 __swsetup_r
0080ae00 g     F .text	000008e8 .hidden __divdf3
008045e8 g     F .text	00000118 __sfp
0080702c g     F .text	00000078 __copybits
0080fa88 g     O .rwdata	00000408 __malloc_av_
00804734 g     F .text	00000004 __sinit_lock_release
0080b940 g     F .text	00000718 .hidden __muldf3
0080775c g     F .text	00000054 __sread
0080ed00 g     F .text	00000108 alt_find_file
0080e2dc g     F .text	000000a4 alt_dev_llist_insert
0080d138 g     F .text	00000024 __malloc_lock
0080d31c g     F .text	000000b0 sbrk
0080433c g     F .text	0000005c _fflush_r
00809070 g     F .text	000000c4 _calloc_r
00812bc4 g       *ABS*	00000000 __bss_start
0080600c g     F .text	00000128 memset
0080020c g     F .text	00000090 main
00812be8 g     O .bss	00000004 alt_envp
00812bd0 g     O .bss	00000004 __malloc_max_total_mem
0080d630 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
008096f0 g     F .text	00000018 __swbuf
00807890 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
00809224 g     F .text	00000014 fclose
00802a98 g     F .text	00001688 _dtoa_r
00805478 g     F .text	0000080c _malloc_r
00809864 g     F .text	00000030 __ascii_wctomb
008110c4 g     O .rwdata	00000004 alt_errno
00805058 g     F .text	000000c4 _fwalk
0080a3a0 g     F .text	00000084 .hidden __divsi3
00804768 g     F .text	00000124 _malloc_trim_r
0080f2d0 g       *ABS*	00000000 __CTOR_END__
00807898 g     F .text	000000dc strcmp
0080f2d0 g       *ABS*	00000000 __flash_rodata_start
0080f2d0 g       *ABS*	00000000 __DTOR_LIST__
0080b6e8 g     F .text	00000088 .hidden __nedf2
0080d534 g     F .text	00000038 alt_irq_init
0080d2b8 g     F .text	00000064 alt_release_fd
0080f4c0 g     O .rodata	00000100 .hidden __clz_tab
00812bc4 g     O .bss	00000004 _PathLocale
0080ef3c g     F .text	00000014 atexit
00808fbc g     F .text	00000060 _write_r
00805298 g     F .text	00000018 setlocale
0081109c g     O .rwdata	00000004 _impure_ptr
00812be0 g     O .bss	00000004 alt_argc
00804120 g     F .text	0000021c __sflush_r
0080e3e0 g     F .text	00000060 _do_dtors
00805284 g     F .text	00000008 __locale_cjk_lang
00800020 g       .exceptions	00000000 alt_irq_entry
00806c58 g     F .text	00000064 __ulp
00804750 g     F .text	00000018 __fp_unlock_all
008110b0 g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
008052b0 g     F .text	0000000c localeconv
0080e474 g     F .text	00000050 alt_ic_isr_register
008110d8 g       *ABS*	00000000 _edata
00812d20 g       *ABS*	00000000 _end
00809238 g     F .text	00000164 __fputwc
008001c0 g       *ABS*	00000000 __ram_exceptions_end
0080db08 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0080e54c g     F .text	0000008c alt_ic_irq_disable
008077b8 g     F .text	0000007c __swrite
008110a8 g     O .rwdata	00000004 __malloc_trim_threshold
0080ec4c g     F .text	00000024 altera_nios2_qsys_irq_init
00805278 g     F .text	0000000c __locale_msgcharset
0080ef50 g     F .text	00000038 exit
0080511c g     F .text	000000c4 _fwalk_reent
00806a5c g     F .text	000001fc __mdiff
0080a424 g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
0080472c g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
0080f29c g     F .text	00000034 _exit
0080e12c g     F .text	0000012c alt_alarm_start
008052bc g     F .text	000001bc __smakebuf_r
008003dc g     F .text	00000098 strlen
0080e954 g     F .text	00000154 open
0080b770 g     F .text	000000dc .hidden __gedf2
008110ac g     O .rwdata	00000004 __wctomb
00807a70 g     F .text	00000018 __sprint_r
0080e440 g     F .text	00000034 alt_icache_flush_all
008110cc g     O .rwdata	00000004 alt_priority_mask
0080e4c4 g     F .text	00000088 alt_ic_irq_enable
0080266c g     F .text	0000001c __vfprintf_internal
00809894 g     F .text	0000005c _wctomb_r
0080c058 g     F .text	000008fc .hidden __subdf3
00806490 g     F .text	000000b0 __lo0bits
008110d0 g     O .rwdata	00000008 alt_alarm_list
0080e380 g     F .text	00000060 _do_ctors
008097a4 g     F .text	000000c0 wcrtomb
0080cbf8 g     F .text	000000d0 close
0080cf28 g     F .text	00000084 alt_load
008093c0 g     F .text	00000080 fputwc
00804730 g     F .text	00000004 __sinit_lock_acquire
00806204 g     F .text	00000120 __multadd
008061dc g     F .text	00000028 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00820014 	movui	r2,2048
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__alt_data_end+0xff800004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08407014 	ori	at,at,448
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__alt_mem_sdram-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000ec0 	call	8000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000306 	br	800098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  80008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)

00800094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
  800094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  800098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  80009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000e8:	ef80083a 	eret

008000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000ec:	defff904 	addi	sp,sp,-28
  8000f0:	dfc00615 	stw	ra,24(sp)
  8000f4:	df000515 	stw	fp,20(sp)
  8000f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  8000fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800100:	0005313a 	rdctl	r2,ipending
  800104:	e0bffe15 	stw	r2,-8(fp)

  return active;
  800108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  800110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800114:	00800044 	movi	r2,1
  800118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80011c:	e0fffb17 	ldw	r3,-20(fp)
  800120:	e0bffc17 	ldw	r2,-16(fp)
  800124:	1884703a 	and	r2,r3,r2
  800128:	10001426 	beq	r2,zero,80017c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80012c:	00802074 	movhi	r2,129
  800130:	108b0804 	addi	r2,r2,11296
  800134:	e0fffd17 	ldw	r3,-12(fp)
  800138:	180690fa 	slli	r3,r3,3
  80013c:	10c5883a 	add	r2,r2,r3
  800140:	10c00017 	ldw	r3,0(r2)
  800144:	00802074 	movhi	r2,129
  800148:	108b0804 	addi	r2,r2,11296
  80014c:	e13ffd17 	ldw	r4,-12(fp)
  800150:	200890fa 	slli	r4,r4,3
  800154:	1105883a 	add	r2,r2,r4
  800158:	10800104 	addi	r2,r2,4
  80015c:	10800017 	ldw	r2,0(r2)
  800160:	1009883a 	mov	r4,r2
  800164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  800168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  80016c:	0005313a 	rdctl	r2,ipending
  800170:	e0bfff15 	stw	r2,-4(fp)

  return active;
  800174:	e0bfff17 	ldw	r2,-4(fp)
  800178:	00000706 	br	800198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
  80017c:	e0bffc17 	ldw	r2,-16(fp)
  800180:	1085883a 	add	r2,r2,r2
  800184:	e0bffc15 	stw	r2,-16(fp)
      i++;
  800188:	e0bffd17 	ldw	r2,-12(fp)
  80018c:	10800044 	addi	r2,r2,1
  800190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  800194:	003fe106 	br	80011c <__alt_data_end+0xff80011c>

    active = alt_irq_pending ();
  800198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  80019c:	e0bffb17 	ldw	r2,-20(fp)
  8001a0:	103fdb1e 	bne	r2,zero,800110 <__alt_data_end+0xff800110>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001a4:	0001883a 	nop
}
  8001a8:	0001883a 	nop
  8001ac:	e037883a 	mov	sp,fp
  8001b0:	dfc00117 	ldw	ra,4(sp)
  8001b4:	df000017 	ldw	fp,0(sp)
  8001b8:	dec00204 	addi	sp,sp,8
  8001bc:	f800283a 	ret

Disassembly of section .text:

008001c0 <_start>:

#if NIOS2_DCACHE_SIZE > 0 && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
  8001c0:	00800074 	movhi	r2,1
#else
    movui r2, NIOS2_DCACHE_SIZE
#endif

0:
    initd 0(r2)
  8001c4:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  8001c8:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  8001cc:	00bffd16 	blt	zero,r2,8001c4 <__alt_data_end+0xff8001c4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  8001d0:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  8001d4:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  8001d8:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  8001dc:	d6a42614 	ori	gp,gp,37016
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  8001e0:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  8001e4:	108af114 	ori	r2,r2,11204

    movhi r3, %hi(__bss_end)
  8001e8:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  8001ec:	18cb4814 	ori	r3,r3,11552

    beq r2, r3, 1f
  8001f0:	10c00326 	beq	r2,r3,800200 <_start+0x40>

0:
    stw zero, (r2)
  8001f4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  8001f8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  8001fc:	10fffd36 	bltu	r2,r3,8001f4 <__alt_data_end+0xff8001f4>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800200:	080cf280 	call	80cf28 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  800204:	080d0bc0 	call	80d0bc <alt_main>

00800208 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  800208:	003fff06 	br	800208 <__alt_data_end+0xff800208>

0080020c <main>:
#include <stdio.h>
#include <system.h>
#include <math.h>

int main()
{
  80020c:	defff904 	addi	sp,sp,-28
  800210:	dfc00615 	stw	ra,24(sp)
  800214:	df000515 	stw	fp,20(sp)
  800218:	df000504 	addi	fp,sp,20
  printf("Hello from Nios II!\n");
  80021c:	01002074 	movhi	r4,129
  800220:	213cb404 	addi	r4,r4,-3376
  800224:	08003c80 	call	8003c8 <puts>
  short int x = 1;
  800228:	00800044 	movi	r2,1
  80022c:	e0bffb0d 	sth	r2,-20(fp)
  int angle = 3;
  800230:	008000c4 	movi	r2,3
  800234:	e0bffc15 	stw	r2,-16(fp)
  double x_mh = cos(3);
  800238:	00afa1b4 	movhi	r2,48774
  80023c:	10b97484 	addi	r2,r2,-6702
  800240:	e0bffd15 	stw	r2,-12(fp)
  800244:	00affc34 	movhi	r2,49136
  800248:	10ab8104 	addi	r2,r2,-20988
  80024c:	e0bffe15 	stw	r2,-8(fp)
  int x_ci = ALT_CI_SINCOS_CORDIC_0(x,angle);
  800250:	e0bffb0f 	ldh	r2,-20(fp)
  800254:	e0fffc17 	ldw	r3,-16(fp)
  800258:	10c5c072 	custom	1,r2,r2,r3
  80025c:	e0bfff15 	stw	r2,-4(fp)
  printf("%f \n", x_mh);
  800260:	e17ffd17 	ldw	r5,-12(fp)
  800264:	e1bffe17 	ldw	r6,-8(fp)
  800268:	01002074 	movhi	r4,129
  80026c:	213cb904 	addi	r4,r4,-3356
  800270:	08002cc0 	call	8002cc <printf>
  printf("%d \n", x_ci);
  800274:	e17fff17 	ldw	r5,-4(fp)
  800278:	01002074 	movhi	r4,129
  80027c:	213cbb04 	addi	r4,r4,-3348
  800280:	08002cc0 	call	8002cc <printf>
  return 0;
  800284:	0005883a 	mov	r2,zero
}
  800288:	e037883a 	mov	sp,fp
  80028c:	dfc00117 	ldw	ra,4(sp)
  800290:	df000017 	ldw	fp,0(sp)
  800294:	dec00204 	addi	sp,sp,8
  800298:	f800283a 	ret

0080029c <_printf_r>:
  80029c:	defffd04 	addi	sp,sp,-12
  8002a0:	2805883a 	mov	r2,r5
  8002a4:	dfc00015 	stw	ra,0(sp)
  8002a8:	d9800115 	stw	r6,4(sp)
  8002ac:	d9c00215 	stw	r7,8(sp)
  8002b0:	21400217 	ldw	r5,8(r4)
  8002b4:	d9c00104 	addi	r7,sp,4
  8002b8:	100d883a 	mov	r6,r2
  8002bc:	08004740 	call	800474 <___vfprintf_internal_r>
  8002c0:	dfc00017 	ldw	ra,0(sp)
  8002c4:	dec00304 	addi	sp,sp,12
  8002c8:	f800283a 	ret

008002cc <printf>:
  8002cc:	defffc04 	addi	sp,sp,-16
  8002d0:	dfc00015 	stw	ra,0(sp)
  8002d4:	d9400115 	stw	r5,4(sp)
  8002d8:	d9800215 	stw	r6,8(sp)
  8002dc:	d9c00315 	stw	r7,12(sp)
  8002e0:	00802074 	movhi	r2,129
  8002e4:	10842704 	addi	r2,r2,4252
  8002e8:	10800017 	ldw	r2,0(r2)
  8002ec:	200b883a 	mov	r5,r4
  8002f0:	d9800104 	addi	r6,sp,4
  8002f4:	11000217 	ldw	r4,8(r2)
  8002f8:	080266c0 	call	80266c <__vfprintf_internal>
  8002fc:	dfc00017 	ldw	ra,0(sp)
  800300:	dec00404 	addi	sp,sp,16
  800304:	f800283a 	ret

00800308 <_puts_r>:
  800308:	defff604 	addi	sp,sp,-40
  80030c:	dc000715 	stw	r16,28(sp)
  800310:	2021883a 	mov	r16,r4
  800314:	2809883a 	mov	r4,r5
  800318:	dc400815 	stw	r17,32(sp)
  80031c:	dfc00915 	stw	ra,36(sp)
  800320:	2823883a 	mov	r17,r5
  800324:	08003dc0 	call	8003dc <strlen>
  800328:	10c00044 	addi	r3,r2,1
  80032c:	d8800115 	stw	r2,4(sp)
  800330:	00802074 	movhi	r2,129
  800334:	10bcbd04 	addi	r2,r2,-3340
  800338:	d8800215 	stw	r2,8(sp)
  80033c:	00800044 	movi	r2,1
  800340:	d8800315 	stw	r2,12(sp)
  800344:	00800084 	movi	r2,2
  800348:	dc400015 	stw	r17,0(sp)
  80034c:	d8c00615 	stw	r3,24(sp)
  800350:	dec00415 	stw	sp,16(sp)
  800354:	d8800515 	stw	r2,20(sp)
  800358:	80000226 	beq	r16,zero,800364 <_puts_r+0x5c>
  80035c:	80800e17 	ldw	r2,56(r16)
  800360:	10001426 	beq	r2,zero,8003b4 <_puts_r+0xac>
  800364:	81400217 	ldw	r5,8(r16)
  800368:	2880030b 	ldhu	r2,12(r5)
  80036c:	10c8000c 	andi	r3,r2,8192
  800370:	1800061e 	bne	r3,zero,80038c <_puts_r+0x84>
  800374:	29001917 	ldw	r4,100(r5)
  800378:	00f7ffc4 	movi	r3,-8193
  80037c:	10880014 	ori	r2,r2,8192
  800380:	20c6703a 	and	r3,r4,r3
  800384:	2880030d 	sth	r2,12(r5)
  800388:	28c01915 	stw	r3,100(r5)
  80038c:	d9800404 	addi	r6,sp,16
  800390:	8009883a 	mov	r4,r16
  800394:	0804b9c0 	call	804b9c <__sfvwrite_r>
  800398:	1000091e 	bne	r2,zero,8003c0 <_puts_r+0xb8>
  80039c:	00800284 	movi	r2,10
  8003a0:	dfc00917 	ldw	ra,36(sp)
  8003a4:	dc400817 	ldw	r17,32(sp)
  8003a8:	dc000717 	ldw	r16,28(sp)
  8003ac:	dec00a04 	addi	sp,sp,40
  8003b0:	f800283a 	ret
  8003b4:	8009883a 	mov	r4,r16
  8003b8:	08047180 	call	804718 <__sinit>
  8003bc:	003fe906 	br	800364 <__alt_data_end+0xff800364>
  8003c0:	00bfffc4 	movi	r2,-1
  8003c4:	003ff606 	br	8003a0 <__alt_data_end+0xff8003a0>

008003c8 <puts>:
  8003c8:	00802074 	movhi	r2,129
  8003cc:	10842704 	addi	r2,r2,4252
  8003d0:	200b883a 	mov	r5,r4
  8003d4:	11000017 	ldw	r4,0(r2)
  8003d8:	08003081 	jmpi	800308 <_puts_r>

008003dc <strlen>:
  8003dc:	208000cc 	andi	r2,r4,3
  8003e0:	10002026 	beq	r2,zero,800464 <strlen+0x88>
  8003e4:	20800007 	ldb	r2,0(r4)
  8003e8:	10002026 	beq	r2,zero,80046c <strlen+0x90>
  8003ec:	2005883a 	mov	r2,r4
  8003f0:	00000206 	br	8003fc <strlen+0x20>
  8003f4:	10c00007 	ldb	r3,0(r2)
  8003f8:	18001826 	beq	r3,zero,80045c <strlen+0x80>
  8003fc:	10800044 	addi	r2,r2,1
  800400:	10c000cc 	andi	r3,r2,3
  800404:	183ffb1e 	bne	r3,zero,8003f4 <__alt_data_end+0xff8003f4>
  800408:	10c00017 	ldw	r3,0(r2)
  80040c:	01ffbff4 	movhi	r7,65279
  800410:	39ffbfc4 	addi	r7,r7,-257
  800414:	00ca303a 	nor	r5,zero,r3
  800418:	01a02074 	movhi	r6,32897
  80041c:	19c7883a 	add	r3,r3,r7
  800420:	31a02004 	addi	r6,r6,-32640
  800424:	1946703a 	and	r3,r3,r5
  800428:	1986703a 	and	r3,r3,r6
  80042c:	1800091e 	bne	r3,zero,800454 <strlen+0x78>
  800430:	10800104 	addi	r2,r2,4
  800434:	10c00017 	ldw	r3,0(r2)
  800438:	19cb883a 	add	r5,r3,r7
  80043c:	00c6303a 	nor	r3,zero,r3
  800440:	28c6703a 	and	r3,r5,r3
  800444:	1986703a 	and	r3,r3,r6
  800448:	183ff926 	beq	r3,zero,800430 <__alt_data_end+0xff800430>
  80044c:	00000106 	br	800454 <strlen+0x78>
  800450:	10800044 	addi	r2,r2,1
  800454:	10c00007 	ldb	r3,0(r2)
  800458:	183ffd1e 	bne	r3,zero,800450 <__alt_data_end+0xff800450>
  80045c:	1105c83a 	sub	r2,r2,r4
  800460:	f800283a 	ret
  800464:	2005883a 	mov	r2,r4
  800468:	003fe706 	br	800408 <__alt_data_end+0xff800408>
  80046c:	0005883a 	mov	r2,zero
  800470:	f800283a 	ret

00800474 <___vfprintf_internal_r>:
  800474:	deffb804 	addi	sp,sp,-288
  800478:	dfc04715 	stw	ra,284(sp)
  80047c:	ddc04515 	stw	r23,276(sp)
  800480:	dd404315 	stw	r21,268(sp)
  800484:	d9002c15 	stw	r4,176(sp)
  800488:	282f883a 	mov	r23,r5
  80048c:	302b883a 	mov	r21,r6
  800490:	d9c02d15 	stw	r7,180(sp)
  800494:	df004615 	stw	fp,280(sp)
  800498:	dd804415 	stw	r22,272(sp)
  80049c:	dd004215 	stw	r20,264(sp)
  8004a0:	dcc04115 	stw	r19,260(sp)
  8004a4:	dc804015 	stw	r18,256(sp)
  8004a8:	dc403f15 	stw	r17,252(sp)
  8004ac:	dc003e15 	stw	r16,248(sp)
  8004b0:	080528c0 	call	80528c <_localeconv_r>
  8004b4:	10800017 	ldw	r2,0(r2)
  8004b8:	1009883a 	mov	r4,r2
  8004bc:	d8803415 	stw	r2,208(sp)
  8004c0:	08003dc0 	call	8003dc <strlen>
  8004c4:	d8803715 	stw	r2,220(sp)
  8004c8:	d8802c17 	ldw	r2,176(sp)
  8004cc:	10000226 	beq	r2,zero,8004d8 <___vfprintf_internal_r+0x64>
  8004d0:	10800e17 	ldw	r2,56(r2)
  8004d4:	1000f926 	beq	r2,zero,8008bc <___vfprintf_internal_r+0x448>
  8004d8:	b880030b 	ldhu	r2,12(r23)
  8004dc:	10c8000c 	andi	r3,r2,8192
  8004e0:	1800061e 	bne	r3,zero,8004fc <___vfprintf_internal_r+0x88>
  8004e4:	b9001917 	ldw	r4,100(r23)
  8004e8:	00f7ffc4 	movi	r3,-8193
  8004ec:	10880014 	ori	r2,r2,8192
  8004f0:	20c6703a 	and	r3,r4,r3
  8004f4:	b880030d 	sth	r2,12(r23)
  8004f8:	b8c01915 	stw	r3,100(r23)
  8004fc:	10c0020c 	andi	r3,r2,8
  800500:	1800c126 	beq	r3,zero,800808 <___vfprintf_internal_r+0x394>
  800504:	b8c00417 	ldw	r3,16(r23)
  800508:	1800bf26 	beq	r3,zero,800808 <___vfprintf_internal_r+0x394>
  80050c:	1080068c 	andi	r2,r2,26
  800510:	00c00284 	movi	r3,10
  800514:	10c0c426 	beq	r2,r3,800828 <___vfprintf_internal_r+0x3b4>
  800518:	d8c00404 	addi	r3,sp,16
  80051c:	05002074 	movhi	r20,129
  800520:	d9001e04 	addi	r4,sp,120
  800524:	a53cce84 	addi	r20,r20,-3270
  800528:	d8c01e15 	stw	r3,120(sp)
  80052c:	d8002015 	stw	zero,128(sp)
  800530:	d8001f15 	stw	zero,124(sp)
  800534:	d8003315 	stw	zero,204(sp)
  800538:	d8003615 	stw	zero,216(sp)
  80053c:	d8003815 	stw	zero,224(sp)
  800540:	1811883a 	mov	r8,r3
  800544:	d8003915 	stw	zero,228(sp)
  800548:	d8003a15 	stw	zero,232(sp)
  80054c:	d8002f15 	stw	zero,188(sp)
  800550:	d9002815 	stw	r4,160(sp)
  800554:	a8800007 	ldb	r2,0(r21)
  800558:	10027b26 	beq	r2,zero,800f48 <___vfprintf_internal_r+0xad4>
  80055c:	00c00944 	movi	r3,37
  800560:	a821883a 	mov	r16,r21
  800564:	10c0021e 	bne	r2,r3,800570 <___vfprintf_internal_r+0xfc>
  800568:	00001406 	br	8005bc <___vfprintf_internal_r+0x148>
  80056c:	10c00326 	beq	r2,r3,80057c <___vfprintf_internal_r+0x108>
  800570:	84000044 	addi	r16,r16,1
  800574:	80800007 	ldb	r2,0(r16)
  800578:	103ffc1e 	bne	r2,zero,80056c <__alt_data_end+0xff80056c>
  80057c:	8563c83a 	sub	r17,r16,r21
  800580:	88000e26 	beq	r17,zero,8005bc <___vfprintf_internal_r+0x148>
  800584:	d8c02017 	ldw	r3,128(sp)
  800588:	d8801f17 	ldw	r2,124(sp)
  80058c:	45400015 	stw	r21,0(r8)
  800590:	1c47883a 	add	r3,r3,r17
  800594:	10800044 	addi	r2,r2,1
  800598:	d8c02015 	stw	r3,128(sp)
  80059c:	44400115 	stw	r17,4(r8)
  8005a0:	d8801f15 	stw	r2,124(sp)
  8005a4:	00c001c4 	movi	r3,7
  8005a8:	1880a716 	blt	r3,r2,800848 <___vfprintf_internal_r+0x3d4>
  8005ac:	42000204 	addi	r8,r8,8
  8005b0:	d9402f17 	ldw	r5,188(sp)
  8005b4:	2c4b883a 	add	r5,r5,r17
  8005b8:	d9402f15 	stw	r5,188(sp)
  8005bc:	80800007 	ldb	r2,0(r16)
  8005c0:	1000a826 	beq	r2,zero,800864 <___vfprintf_internal_r+0x3f0>
  8005c4:	84400047 	ldb	r17,1(r16)
  8005c8:	00bfffc4 	movi	r2,-1
  8005cc:	85400044 	addi	r21,r16,1
  8005d0:	d8002785 	stb	zero,158(sp)
  8005d4:	0007883a 	mov	r3,zero
  8005d8:	000f883a 	mov	r7,zero
  8005dc:	d8802915 	stw	r2,164(sp)
  8005e0:	d8003115 	stw	zero,196(sp)
  8005e4:	0025883a 	mov	r18,zero
  8005e8:	01401604 	movi	r5,88
  8005ec:	01800244 	movi	r6,9
  8005f0:	02800a84 	movi	r10,42
  8005f4:	02401b04 	movi	r9,108
  8005f8:	ad400044 	addi	r21,r21,1
  8005fc:	88bff804 	addi	r2,r17,-32
  800600:	28830436 	bltu	r5,r2,801214 <___vfprintf_internal_r+0xda0>
  800604:	100490ba 	slli	r2,r2,2
  800608:	01002034 	movhi	r4,128
  80060c:	21018704 	addi	r4,r4,1564
  800610:	1105883a 	add	r2,r2,r4
  800614:	10800017 	ldw	r2,0(r2)
  800618:	1000683a 	jmp	r2
  80061c:	00801134 	movhi	r2,68
  800620:	00801214 	movui	r2,72
  800624:	00801214 	movui	r2,72
  800628:	00801154 	movui	r2,69
  80062c:	00801214 	movui	r2,72
  800630:	00801214 	movui	r2,72
  800634:	00801214 	movui	r2,72
  800638:	00801214 	movui	r2,72
  80063c:	00801214 	movui	r2,72
  800640:	00801214 	movui	r2,72
  800644:	008008c8 	cmpgei	r2,zero,35
  800648:	00801070 	cmpltui	r2,zero,65
  80064c:	00801214 	movui	r2,72
  800650:	00800790 	cmplti	r2,zero,30
  800654:	008008f0 	cmpltui	r2,zero,35
  800658:	00801214 	movui	r2,72
  80065c:	00800930 	cmpltui	r2,zero,36
  800660:	0080093c 	xorhi	r2,zero,36
  800664:	0080093c 	xorhi	r2,zero,36
  800668:	0080093c 	xorhi	r2,zero,36
  80066c:	0080093c 	xorhi	r2,zero,36
  800670:	0080093c 	xorhi	r2,zero,36
  800674:	0080093c 	xorhi	r2,zero,36
  800678:	0080093c 	xorhi	r2,zero,36
  80067c:	0080093c 	xorhi	r2,zero,36
  800680:	0080093c 	xorhi	r2,zero,36
  800684:	00801214 	movui	r2,72
  800688:	00801214 	movui	r2,72
  80068c:	00801214 	movui	r2,72
  800690:	00801214 	movui	r2,72
  800694:	00801214 	movui	r2,72
  800698:	00801214 	movui	r2,72
  80069c:	00801214 	movui	r2,72
  8006a0:	00801214 	movui	r2,72
  8006a4:	00801214 	movui	r2,72
  8006a8:	00801214 	movui	r2,72
  8006ac:	00800970 	cmpltui	r2,zero,37
  8006b0:	00800a2c 	andhi	r2,zero,40
  8006b4:	00801214 	movui	r2,72
  8006b8:	00800a2c 	andhi	r2,zero,40
  8006bc:	00801214 	movui	r2,72
  8006c0:	00801214 	movui	r2,72
  8006c4:	00801214 	movui	r2,72
  8006c8:	00801214 	movui	r2,72
  8006cc:	00800acc 	andi	r2,zero,43
  8006d0:	00801214 	movui	r2,72
  8006d4:	00801214 	movui	r2,72
  8006d8:	00800ad8 	cmpnei	r2,zero,43
  8006dc:	00801214 	movui	r2,72
  8006e0:	00801214 	movui	r2,72
  8006e4:	00801214 	movui	r2,72
  8006e8:	00801214 	movui	r2,72
  8006ec:	00801214 	movui	r2,72
  8006f0:	00800f50 	cmplti	r2,zero,61
  8006f4:	00801214 	movui	r2,72
  8006f8:	00801214 	movui	r2,72
  8006fc:	00800fb0 	cmpltui	r2,zero,62
  800700:	00801214 	movui	r2,72
  800704:	00801214 	movui	r2,72
  800708:	00801214 	movui	r2,72
  80070c:	00801214 	movui	r2,72
  800710:	00801214 	movui	r2,72
  800714:	00801214 	movui	r2,72
  800718:	00801214 	movui	r2,72
  80071c:	00801214 	movui	r2,72
  800720:	00801214 	movui	r2,72
  800724:	00801214 	movui	r2,72
  800728:	008011c0 	call	8011c <__alt_mem_sdram-0x77fee4>
  80072c:	00801160 	cmpeqi	r2,zero,69
  800730:	00800a2c 	andhi	r2,zero,40
  800734:	00800a2c 	andhi	r2,zero,40
  800738:	00800a2c 	andhi	r2,zero,40
  80073c:	00801170 	cmpltui	r2,zero,69
  800740:	00801160 	cmpeqi	r2,zero,69
  800744:	00801214 	movui	r2,72
  800748:	00801214 	movui	r2,72
  80074c:	0080117c 	xorhi	r2,zero,69
  800750:	00801214 	movui	r2,72
  800754:	0080118c 	andi	r2,zero,70
  800758:	00801060 	cmpeqi	r2,zero,65
  80075c:	0080079c 	xori	r2,zero,30
  800760:	00801080 	call	80108 <__alt_mem_sdram-0x77fef8>
  800764:	00801214 	movui	r2,72
  800768:	0080108c 	andi	r2,zero,66
  80076c:	00801214 	movui	r2,72
  800770:	008010e8 	cmpgeui	r2,zero,67
  800774:	00801214 	movui	r2,72
  800778:	00801214 	movui	r2,72
  80077c:	008010f8 	rdprs	r2,zero,67
  800780:	d9003117 	ldw	r4,196(sp)
  800784:	d8802d15 	stw	r2,180(sp)
  800788:	0109c83a 	sub	r4,zero,r4
  80078c:	d9003115 	stw	r4,196(sp)
  800790:	94800114 	ori	r18,r18,4
  800794:	ac400007 	ldb	r17,0(r21)
  800798:	003f9706 	br	8005f8 <__alt_data_end+0xff8005f8>
  80079c:	00800c04 	movi	r2,48
  8007a0:	d9002d17 	ldw	r4,180(sp)
  8007a4:	d9402917 	ldw	r5,164(sp)
  8007a8:	d8802705 	stb	r2,156(sp)
  8007ac:	00801e04 	movi	r2,120
  8007b0:	d8802745 	stb	r2,157(sp)
  8007b4:	d8002785 	stb	zero,158(sp)
  8007b8:	20c00104 	addi	r3,r4,4
  8007bc:	24c00017 	ldw	r19,0(r4)
  8007c0:	002d883a 	mov	r22,zero
  8007c4:	90800094 	ori	r2,r18,2
  8007c8:	28029a16 	blt	r5,zero,801234 <___vfprintf_internal_r+0xdc0>
  8007cc:	00bfdfc4 	movi	r2,-129
  8007d0:	90a4703a 	and	r18,r18,r2
  8007d4:	d8c02d15 	stw	r3,180(sp)
  8007d8:	94800094 	ori	r18,r18,2
  8007dc:	9802871e 	bne	r19,zero,8011fc <___vfprintf_internal_r+0xd88>
  8007e0:	00802074 	movhi	r2,129
  8007e4:	10bcc704 	addi	r2,r2,-3300
  8007e8:	d8803915 	stw	r2,228(sp)
  8007ec:	04401e04 	movi	r17,120
  8007f0:	d8802917 	ldw	r2,164(sp)
  8007f4:	0039883a 	mov	fp,zero
  8007f8:	1001e926 	beq	r2,zero,800fa0 <___vfprintf_internal_r+0xb2c>
  8007fc:	0027883a 	mov	r19,zero
  800800:	002d883a 	mov	r22,zero
  800804:	00020506 	br	80101c <___vfprintf_internal_r+0xba8>
  800808:	d9002c17 	ldw	r4,176(sp)
  80080c:	b80b883a 	mov	r5,r23
  800810:	08027440 	call	802744 <__swsetup_r>
  800814:	1005ac1e 	bne	r2,zero,801ec8 <___vfprintf_internal_r+0x1a54>
  800818:	b880030b 	ldhu	r2,12(r23)
  80081c:	00c00284 	movi	r3,10
  800820:	1080068c 	andi	r2,r2,26
  800824:	10ff3c1e 	bne	r2,r3,800518 <__alt_data_end+0xff800518>
  800828:	b880038f 	ldh	r2,14(r23)
  80082c:	103f3a16 	blt	r2,zero,800518 <__alt_data_end+0xff800518>
  800830:	d9c02d17 	ldw	r7,180(sp)
  800834:	d9002c17 	ldw	r4,176(sp)
  800838:	a80d883a 	mov	r6,r21
  80083c:	b80b883a 	mov	r5,r23
  800840:	08026880 	call	802688 <__sbprintf>
  800844:	00001106 	br	80088c <___vfprintf_internal_r+0x418>
  800848:	d9002c17 	ldw	r4,176(sp)
  80084c:	d9801e04 	addi	r6,sp,120
  800850:	b80b883a 	mov	r5,r23
  800854:	0807a700 	call	807a70 <__sprint_r>
  800858:	1000081e 	bne	r2,zero,80087c <___vfprintf_internal_r+0x408>
  80085c:	da000404 	addi	r8,sp,16
  800860:	003f5306 	br	8005b0 <__alt_data_end+0xff8005b0>
  800864:	d8802017 	ldw	r2,128(sp)
  800868:	10000426 	beq	r2,zero,80087c <___vfprintf_internal_r+0x408>
  80086c:	d9002c17 	ldw	r4,176(sp)
  800870:	d9801e04 	addi	r6,sp,120
  800874:	b80b883a 	mov	r5,r23
  800878:	0807a700 	call	807a70 <__sprint_r>
  80087c:	b880030b 	ldhu	r2,12(r23)
  800880:	1080100c 	andi	r2,r2,64
  800884:	1005901e 	bne	r2,zero,801ec8 <___vfprintf_internal_r+0x1a54>
  800888:	d8802f17 	ldw	r2,188(sp)
  80088c:	dfc04717 	ldw	ra,284(sp)
  800890:	df004617 	ldw	fp,280(sp)
  800894:	ddc04517 	ldw	r23,276(sp)
  800898:	dd804417 	ldw	r22,272(sp)
  80089c:	dd404317 	ldw	r21,268(sp)
  8008a0:	dd004217 	ldw	r20,264(sp)
  8008a4:	dcc04117 	ldw	r19,260(sp)
  8008a8:	dc804017 	ldw	r18,256(sp)
  8008ac:	dc403f17 	ldw	r17,252(sp)
  8008b0:	dc003e17 	ldw	r16,248(sp)
  8008b4:	dec04804 	addi	sp,sp,288
  8008b8:	f800283a 	ret
  8008bc:	d9002c17 	ldw	r4,176(sp)
  8008c0:	08047180 	call	804718 <__sinit>
  8008c4:	003f0406 	br	8004d8 <__alt_data_end+0xff8004d8>
  8008c8:	d8802d17 	ldw	r2,180(sp)
  8008cc:	d9002d17 	ldw	r4,180(sp)
  8008d0:	10800017 	ldw	r2,0(r2)
  8008d4:	d8803115 	stw	r2,196(sp)
  8008d8:	20800104 	addi	r2,r4,4
  8008dc:	d9003117 	ldw	r4,196(sp)
  8008e0:	203fa716 	blt	r4,zero,800780 <__alt_data_end+0xff800780>
  8008e4:	d8802d15 	stw	r2,180(sp)
  8008e8:	ac400007 	ldb	r17,0(r21)
  8008ec:	003f4206 	br	8005f8 <__alt_data_end+0xff8005f8>
  8008f0:	ac400007 	ldb	r17,0(r21)
  8008f4:	aac00044 	addi	r11,r21,1
  8008f8:	8a872826 	beq	r17,r10,80259c <___vfprintf_internal_r+0x2128>
  8008fc:	88bff404 	addi	r2,r17,-48
  800900:	0009883a 	mov	r4,zero
  800904:	30867d36 	bltu	r6,r2,8022fc <___vfprintf_internal_r+0x1e88>
  800908:	5c400007 	ldb	r17,0(r11)
  80090c:	210002a4 	muli	r4,r4,10
  800910:	5d400044 	addi	r21,r11,1
  800914:	a817883a 	mov	r11,r21
  800918:	2089883a 	add	r4,r4,r2
  80091c:	88bff404 	addi	r2,r17,-48
  800920:	30bff92e 	bgeu	r6,r2,800908 <__alt_data_end+0xff800908>
  800924:	2005c916 	blt	r4,zero,80204c <___vfprintf_internal_r+0x1bd8>
  800928:	d9002915 	stw	r4,164(sp)
  80092c:	003f3306 	br	8005fc <__alt_data_end+0xff8005fc>
  800930:	94802014 	ori	r18,r18,128
  800934:	ac400007 	ldb	r17,0(r21)
  800938:	003f2f06 	br	8005f8 <__alt_data_end+0xff8005f8>
  80093c:	a809883a 	mov	r4,r21
  800940:	d8003115 	stw	zero,196(sp)
  800944:	88bff404 	addi	r2,r17,-48
  800948:	0017883a 	mov	r11,zero
  80094c:	24400007 	ldb	r17,0(r4)
  800950:	5ac002a4 	muli	r11,r11,10
  800954:	ad400044 	addi	r21,r21,1
  800958:	a809883a 	mov	r4,r21
  80095c:	12d7883a 	add	r11,r2,r11
  800960:	88bff404 	addi	r2,r17,-48
  800964:	30bff92e 	bgeu	r6,r2,80094c <__alt_data_end+0xff80094c>
  800968:	dac03115 	stw	r11,196(sp)
  80096c:	003f2306 	br	8005fc <__alt_data_end+0xff8005fc>
  800970:	18c03fcc 	andi	r3,r3,255
  800974:	18072b1e 	bne	r3,zero,802624 <___vfprintf_internal_r+0x21b0>
  800978:	94800414 	ori	r18,r18,16
  80097c:	9080080c 	andi	r2,r18,32
  800980:	10037b26 	beq	r2,zero,801770 <___vfprintf_internal_r+0x12fc>
  800984:	d9402d17 	ldw	r5,180(sp)
  800988:	28800117 	ldw	r2,4(r5)
  80098c:	2cc00017 	ldw	r19,0(r5)
  800990:	29400204 	addi	r5,r5,8
  800994:	d9402d15 	stw	r5,180(sp)
  800998:	102d883a 	mov	r22,r2
  80099c:	10044b16 	blt	r2,zero,801acc <___vfprintf_internal_r+0x1658>
  8009a0:	d9402917 	ldw	r5,164(sp)
  8009a4:	df002783 	ldbu	fp,158(sp)
  8009a8:	2803bc16 	blt	r5,zero,80189c <___vfprintf_internal_r+0x1428>
  8009ac:	00ffdfc4 	movi	r3,-129
  8009b0:	9d84b03a 	or	r2,r19,r22
  8009b4:	90e4703a 	and	r18,r18,r3
  8009b8:	10017726 	beq	r2,zero,800f98 <___vfprintf_internal_r+0xb24>
  8009bc:	b0038326 	beq	r22,zero,8017cc <___vfprintf_internal_r+0x1358>
  8009c0:	dc402a15 	stw	r17,168(sp)
  8009c4:	dc001e04 	addi	r16,sp,120
  8009c8:	b023883a 	mov	r17,r22
  8009cc:	402d883a 	mov	r22,r8
  8009d0:	9809883a 	mov	r4,r19
  8009d4:	880b883a 	mov	r5,r17
  8009d8:	01800284 	movi	r6,10
  8009dc:	000f883a 	mov	r7,zero
  8009e0:	0809e680 	call	809e68 <__umoddi3>
  8009e4:	10800c04 	addi	r2,r2,48
  8009e8:	843fffc4 	addi	r16,r16,-1
  8009ec:	9809883a 	mov	r4,r19
  8009f0:	880b883a 	mov	r5,r17
  8009f4:	80800005 	stb	r2,0(r16)
  8009f8:	01800284 	movi	r6,10
  8009fc:	000f883a 	mov	r7,zero
  800a00:	08098f00 	call	8098f0 <__udivdi3>
  800a04:	1027883a 	mov	r19,r2
  800a08:	10c4b03a 	or	r2,r2,r3
  800a0c:	1823883a 	mov	r17,r3
  800a10:	103fef1e 	bne	r2,zero,8009d0 <__alt_data_end+0xff8009d0>
  800a14:	d8c02817 	ldw	r3,160(sp)
  800a18:	dc402a17 	ldw	r17,168(sp)
  800a1c:	b011883a 	mov	r8,r22
  800a20:	1c07c83a 	sub	r3,r3,r16
  800a24:	d8c02e15 	stw	r3,184(sp)
  800a28:	00005906 	br	800b90 <___vfprintf_internal_r+0x71c>
  800a2c:	18c03fcc 	andi	r3,r3,255
  800a30:	1806fa1e 	bne	r3,zero,80261c <___vfprintf_internal_r+0x21a8>
  800a34:	9080020c 	andi	r2,r18,8
  800a38:	10048a26 	beq	r2,zero,801c64 <___vfprintf_internal_r+0x17f0>
  800a3c:	d8c02d17 	ldw	r3,180(sp)
  800a40:	d9002d17 	ldw	r4,180(sp)
  800a44:	d9402d17 	ldw	r5,180(sp)
  800a48:	18c00017 	ldw	r3,0(r3)
  800a4c:	21000117 	ldw	r4,4(r4)
  800a50:	29400204 	addi	r5,r5,8
  800a54:	d8c03615 	stw	r3,216(sp)
  800a58:	d9003815 	stw	r4,224(sp)
  800a5c:	d9402d15 	stw	r5,180(sp)
  800a60:	d9003617 	ldw	r4,216(sp)
  800a64:	d9403817 	ldw	r5,224(sp)
  800a68:	da003d15 	stw	r8,244(sp)
  800a6c:	04000044 	movi	r16,1
  800a70:	08076940 	call	807694 <__fpclassifyd>
  800a74:	da003d17 	ldw	r8,244(sp)
  800a78:	14041f1e 	bne	r2,r16,801af8 <___vfprintf_internal_r+0x1684>
  800a7c:	d9003617 	ldw	r4,216(sp)
  800a80:	d9403817 	ldw	r5,224(sp)
  800a84:	000d883a 	mov	r6,zero
  800a88:	000f883a 	mov	r7,zero
  800a8c:	080b84c0 	call	80b84c <__ledf2>
  800a90:	da003d17 	ldw	r8,244(sp)
  800a94:	1005be16 	blt	r2,zero,802190 <___vfprintf_internal_r+0x1d1c>
  800a98:	df002783 	ldbu	fp,158(sp)
  800a9c:	008011c4 	movi	r2,71
  800aa0:	1445330e 	bge	r2,r17,801f70 <___vfprintf_internal_r+0x1afc>
  800aa4:	04002074 	movhi	r16,129
  800aa8:	843cbf04 	addi	r16,r16,-3332
  800aac:	00c000c4 	movi	r3,3
  800ab0:	00bfdfc4 	movi	r2,-129
  800ab4:	d8c02a15 	stw	r3,168(sp)
  800ab8:	90a4703a 	and	r18,r18,r2
  800abc:	d8c02e15 	stw	r3,184(sp)
  800ac0:	d8002915 	stw	zero,164(sp)
  800ac4:	d8003215 	stw	zero,200(sp)
  800ac8:	00003706 	br	800ba8 <___vfprintf_internal_r+0x734>
  800acc:	94800214 	ori	r18,r18,8
  800ad0:	ac400007 	ldb	r17,0(r21)
  800ad4:	003ec806 	br	8005f8 <__alt_data_end+0xff8005f8>
  800ad8:	18c03fcc 	andi	r3,r3,255
  800adc:	1806db1e 	bne	r3,zero,80264c <___vfprintf_internal_r+0x21d8>
  800ae0:	94800414 	ori	r18,r18,16
  800ae4:	9080080c 	andi	r2,r18,32
  800ae8:	1002d826 	beq	r2,zero,80164c <___vfprintf_internal_r+0x11d8>
  800aec:	d9402d17 	ldw	r5,180(sp)
  800af0:	d8c02917 	ldw	r3,164(sp)
  800af4:	d8002785 	stb	zero,158(sp)
  800af8:	28800204 	addi	r2,r5,8
  800afc:	2cc00017 	ldw	r19,0(r5)
  800b00:	2d800117 	ldw	r22,4(r5)
  800b04:	18048f16 	blt	r3,zero,801d44 <___vfprintf_internal_r+0x18d0>
  800b08:	013fdfc4 	movi	r4,-129
  800b0c:	9d86b03a 	or	r3,r19,r22
  800b10:	d8802d15 	stw	r2,180(sp)
  800b14:	9124703a 	and	r18,r18,r4
  800b18:	1802d91e 	bne	r3,zero,801680 <___vfprintf_internal_r+0x120c>
  800b1c:	d8c02917 	ldw	r3,164(sp)
  800b20:	0039883a 	mov	fp,zero
  800b24:	1805c326 	beq	r3,zero,802234 <___vfprintf_internal_r+0x1dc0>
  800b28:	0027883a 	mov	r19,zero
  800b2c:	002d883a 	mov	r22,zero
  800b30:	dc001e04 	addi	r16,sp,120
  800b34:	9806d0fa 	srli	r3,r19,3
  800b38:	b008977a 	slli	r4,r22,29
  800b3c:	b02cd0fa 	srli	r22,r22,3
  800b40:	9cc001cc 	andi	r19,r19,7
  800b44:	98800c04 	addi	r2,r19,48
  800b48:	843fffc4 	addi	r16,r16,-1
  800b4c:	20e6b03a 	or	r19,r4,r3
  800b50:	80800005 	stb	r2,0(r16)
  800b54:	9d86b03a 	or	r3,r19,r22
  800b58:	183ff61e 	bne	r3,zero,800b34 <__alt_data_end+0xff800b34>
  800b5c:	90c0004c 	andi	r3,r18,1
  800b60:	18013b26 	beq	r3,zero,801050 <___vfprintf_internal_r+0xbdc>
  800b64:	10803fcc 	andi	r2,r2,255
  800b68:	1080201c 	xori	r2,r2,128
  800b6c:	10bfe004 	addi	r2,r2,-128
  800b70:	00c00c04 	movi	r3,48
  800b74:	10c13626 	beq	r2,r3,801050 <___vfprintf_internal_r+0xbdc>
  800b78:	80ffffc5 	stb	r3,-1(r16)
  800b7c:	d8c02817 	ldw	r3,160(sp)
  800b80:	80bfffc4 	addi	r2,r16,-1
  800b84:	1021883a 	mov	r16,r2
  800b88:	1887c83a 	sub	r3,r3,r2
  800b8c:	d8c02e15 	stw	r3,184(sp)
  800b90:	d8802e17 	ldw	r2,184(sp)
  800b94:	d9002917 	ldw	r4,164(sp)
  800b98:	1100010e 	bge	r2,r4,800ba0 <___vfprintf_internal_r+0x72c>
  800b9c:	2005883a 	mov	r2,r4
  800ba0:	d8802a15 	stw	r2,168(sp)
  800ba4:	d8003215 	stw	zero,200(sp)
  800ba8:	e7003fcc 	andi	fp,fp,255
  800bac:	e700201c 	xori	fp,fp,128
  800bb0:	e73fe004 	addi	fp,fp,-128
  800bb4:	e0000326 	beq	fp,zero,800bc4 <___vfprintf_internal_r+0x750>
  800bb8:	d8c02a17 	ldw	r3,168(sp)
  800bbc:	18c00044 	addi	r3,r3,1
  800bc0:	d8c02a15 	stw	r3,168(sp)
  800bc4:	90c0008c 	andi	r3,r18,2
  800bc8:	d8c02b15 	stw	r3,172(sp)
  800bcc:	18000326 	beq	r3,zero,800bdc <___vfprintf_internal_r+0x768>
  800bd0:	d8c02a17 	ldw	r3,168(sp)
  800bd4:	18c00084 	addi	r3,r3,2
  800bd8:	d8c02a15 	stw	r3,168(sp)
  800bdc:	90c0210c 	andi	r3,r18,132
  800be0:	d8c03015 	stw	r3,192(sp)
  800be4:	1801a31e 	bne	r3,zero,801274 <___vfprintf_internal_r+0xe00>
  800be8:	d9003117 	ldw	r4,196(sp)
  800bec:	d8c02a17 	ldw	r3,168(sp)
  800bf0:	20e7c83a 	sub	r19,r4,r3
  800bf4:	04c19f0e 	bge	zero,r19,801274 <___vfprintf_internal_r+0xe00>
  800bf8:	02400404 	movi	r9,16
  800bfc:	d8c02017 	ldw	r3,128(sp)
  800c00:	d8801f17 	ldw	r2,124(sp)
  800c04:	4cc50d0e 	bge	r9,r19,80203c <___vfprintf_internal_r+0x1bc8>
  800c08:	01402074 	movhi	r5,129
  800c0c:	297cd284 	addi	r5,r5,-3254
  800c10:	dc403b15 	stw	r17,236(sp)
  800c14:	d9403515 	stw	r5,212(sp)
  800c18:	9823883a 	mov	r17,r19
  800c1c:	482d883a 	mov	r22,r9
  800c20:	9027883a 	mov	r19,r18
  800c24:	070001c4 	movi	fp,7
  800c28:	8025883a 	mov	r18,r16
  800c2c:	dc002c17 	ldw	r16,176(sp)
  800c30:	00000306 	br	800c40 <___vfprintf_internal_r+0x7cc>
  800c34:	8c7ffc04 	addi	r17,r17,-16
  800c38:	42000204 	addi	r8,r8,8
  800c3c:	b440130e 	bge	r22,r17,800c8c <___vfprintf_internal_r+0x818>
  800c40:	01002074 	movhi	r4,129
  800c44:	18c00404 	addi	r3,r3,16
  800c48:	10800044 	addi	r2,r2,1
  800c4c:	213cd284 	addi	r4,r4,-3254
  800c50:	41000015 	stw	r4,0(r8)
  800c54:	45800115 	stw	r22,4(r8)
  800c58:	d8c02015 	stw	r3,128(sp)
  800c5c:	d8801f15 	stw	r2,124(sp)
  800c60:	e0bff40e 	bge	fp,r2,800c34 <__alt_data_end+0xff800c34>
  800c64:	d9801e04 	addi	r6,sp,120
  800c68:	b80b883a 	mov	r5,r23
  800c6c:	8009883a 	mov	r4,r16
  800c70:	0807a700 	call	807a70 <__sprint_r>
  800c74:	103f011e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  800c78:	8c7ffc04 	addi	r17,r17,-16
  800c7c:	d8c02017 	ldw	r3,128(sp)
  800c80:	d8801f17 	ldw	r2,124(sp)
  800c84:	da000404 	addi	r8,sp,16
  800c88:	b47fed16 	blt	r22,r17,800c40 <__alt_data_end+0xff800c40>
  800c8c:	9021883a 	mov	r16,r18
  800c90:	9825883a 	mov	r18,r19
  800c94:	8827883a 	mov	r19,r17
  800c98:	dc403b17 	ldw	r17,236(sp)
  800c9c:	d9403517 	ldw	r5,212(sp)
  800ca0:	98c7883a 	add	r3,r19,r3
  800ca4:	10800044 	addi	r2,r2,1
  800ca8:	41400015 	stw	r5,0(r8)
  800cac:	44c00115 	stw	r19,4(r8)
  800cb0:	d8c02015 	stw	r3,128(sp)
  800cb4:	d8801f15 	stw	r2,124(sp)
  800cb8:	010001c4 	movi	r4,7
  800cbc:	2082a316 	blt	r4,r2,80174c <___vfprintf_internal_r+0x12d8>
  800cc0:	df002787 	ldb	fp,158(sp)
  800cc4:	42000204 	addi	r8,r8,8
  800cc8:	e0000c26 	beq	fp,zero,800cfc <___vfprintf_internal_r+0x888>
  800ccc:	d8801f17 	ldw	r2,124(sp)
  800cd0:	d9002784 	addi	r4,sp,158
  800cd4:	18c00044 	addi	r3,r3,1
  800cd8:	10800044 	addi	r2,r2,1
  800cdc:	41000015 	stw	r4,0(r8)
  800ce0:	01000044 	movi	r4,1
  800ce4:	41000115 	stw	r4,4(r8)
  800ce8:	d8c02015 	stw	r3,128(sp)
  800cec:	d8801f15 	stw	r2,124(sp)
  800cf0:	010001c4 	movi	r4,7
  800cf4:	20823c16 	blt	r4,r2,8015e8 <___vfprintf_internal_r+0x1174>
  800cf8:	42000204 	addi	r8,r8,8
  800cfc:	d8802b17 	ldw	r2,172(sp)
  800d00:	10000c26 	beq	r2,zero,800d34 <___vfprintf_internal_r+0x8c0>
  800d04:	d8801f17 	ldw	r2,124(sp)
  800d08:	d9002704 	addi	r4,sp,156
  800d0c:	18c00084 	addi	r3,r3,2
  800d10:	10800044 	addi	r2,r2,1
  800d14:	41000015 	stw	r4,0(r8)
  800d18:	01000084 	movi	r4,2
  800d1c:	41000115 	stw	r4,4(r8)
  800d20:	d8c02015 	stw	r3,128(sp)
  800d24:	d8801f15 	stw	r2,124(sp)
  800d28:	010001c4 	movi	r4,7
  800d2c:	20823616 	blt	r4,r2,801608 <___vfprintf_internal_r+0x1194>
  800d30:	42000204 	addi	r8,r8,8
  800d34:	d9003017 	ldw	r4,192(sp)
  800d38:	00802004 	movi	r2,128
  800d3c:	20819926 	beq	r4,r2,8013a4 <___vfprintf_internal_r+0xf30>
  800d40:	d9402917 	ldw	r5,164(sp)
  800d44:	d8802e17 	ldw	r2,184(sp)
  800d48:	28adc83a 	sub	r22,r5,r2
  800d4c:	0580310e 	bge	zero,r22,800e14 <___vfprintf_internal_r+0x9a0>
  800d50:	07000404 	movi	fp,16
  800d54:	d8801f17 	ldw	r2,124(sp)
  800d58:	e584140e 	bge	fp,r22,801dac <___vfprintf_internal_r+0x1938>
  800d5c:	01402074 	movhi	r5,129
  800d60:	297cce84 	addi	r5,r5,-3270
  800d64:	dc402915 	stw	r17,164(sp)
  800d68:	d9402b15 	stw	r5,172(sp)
  800d6c:	b023883a 	mov	r17,r22
  800d70:	04c001c4 	movi	r19,7
  800d74:	a82d883a 	mov	r22,r21
  800d78:	902b883a 	mov	r21,r18
  800d7c:	8025883a 	mov	r18,r16
  800d80:	dc002c17 	ldw	r16,176(sp)
  800d84:	00000306 	br	800d94 <___vfprintf_internal_r+0x920>
  800d88:	8c7ffc04 	addi	r17,r17,-16
  800d8c:	42000204 	addi	r8,r8,8
  800d90:	e440110e 	bge	fp,r17,800dd8 <___vfprintf_internal_r+0x964>
  800d94:	18c00404 	addi	r3,r3,16
  800d98:	10800044 	addi	r2,r2,1
  800d9c:	45000015 	stw	r20,0(r8)
  800da0:	47000115 	stw	fp,4(r8)
  800da4:	d8c02015 	stw	r3,128(sp)
  800da8:	d8801f15 	stw	r2,124(sp)
  800dac:	98bff60e 	bge	r19,r2,800d88 <__alt_data_end+0xff800d88>
  800db0:	d9801e04 	addi	r6,sp,120
  800db4:	b80b883a 	mov	r5,r23
  800db8:	8009883a 	mov	r4,r16
  800dbc:	0807a700 	call	807a70 <__sprint_r>
  800dc0:	103eae1e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  800dc4:	8c7ffc04 	addi	r17,r17,-16
  800dc8:	d8c02017 	ldw	r3,128(sp)
  800dcc:	d8801f17 	ldw	r2,124(sp)
  800dd0:	da000404 	addi	r8,sp,16
  800dd4:	e47fef16 	blt	fp,r17,800d94 <__alt_data_end+0xff800d94>
  800dd8:	9021883a 	mov	r16,r18
  800ddc:	a825883a 	mov	r18,r21
  800de0:	b02b883a 	mov	r21,r22
  800de4:	882d883a 	mov	r22,r17
  800de8:	dc402917 	ldw	r17,164(sp)
  800dec:	d9002b17 	ldw	r4,172(sp)
  800df0:	1d87883a 	add	r3,r3,r22
  800df4:	10800044 	addi	r2,r2,1
  800df8:	41000015 	stw	r4,0(r8)
  800dfc:	45800115 	stw	r22,4(r8)
  800e00:	d8c02015 	stw	r3,128(sp)
  800e04:	d8801f15 	stw	r2,124(sp)
  800e08:	010001c4 	movi	r4,7
  800e0c:	2081ee16 	blt	r4,r2,8015c8 <___vfprintf_internal_r+0x1154>
  800e10:	42000204 	addi	r8,r8,8
  800e14:	9080400c 	andi	r2,r18,256
  800e18:	1001181e 	bne	r2,zero,80127c <___vfprintf_internal_r+0xe08>
  800e1c:	d9402e17 	ldw	r5,184(sp)
  800e20:	d8801f17 	ldw	r2,124(sp)
  800e24:	44000015 	stw	r16,0(r8)
  800e28:	1947883a 	add	r3,r3,r5
  800e2c:	10800044 	addi	r2,r2,1
  800e30:	41400115 	stw	r5,4(r8)
  800e34:	d8c02015 	stw	r3,128(sp)
  800e38:	d8801f15 	stw	r2,124(sp)
  800e3c:	010001c4 	movi	r4,7
  800e40:	2081d316 	blt	r4,r2,801590 <___vfprintf_internal_r+0x111c>
  800e44:	42000204 	addi	r8,r8,8
  800e48:	9480010c 	andi	r18,r18,4
  800e4c:	90003226 	beq	r18,zero,800f18 <___vfprintf_internal_r+0xaa4>
  800e50:	d9403117 	ldw	r5,196(sp)
  800e54:	d8802a17 	ldw	r2,168(sp)
  800e58:	28a1c83a 	sub	r16,r5,r2
  800e5c:	04002e0e 	bge	zero,r16,800f18 <___vfprintf_internal_r+0xaa4>
  800e60:	04400404 	movi	r17,16
  800e64:	d8801f17 	ldw	r2,124(sp)
  800e68:	8c04a20e 	bge	r17,r16,8020f4 <___vfprintf_internal_r+0x1c80>
  800e6c:	01402074 	movhi	r5,129
  800e70:	297cd284 	addi	r5,r5,-3254
  800e74:	d9403515 	stw	r5,212(sp)
  800e78:	048001c4 	movi	r18,7
  800e7c:	dcc02c17 	ldw	r19,176(sp)
  800e80:	00000306 	br	800e90 <___vfprintf_internal_r+0xa1c>
  800e84:	843ffc04 	addi	r16,r16,-16
  800e88:	42000204 	addi	r8,r8,8
  800e8c:	8c00130e 	bge	r17,r16,800edc <___vfprintf_internal_r+0xa68>
  800e90:	01002074 	movhi	r4,129
  800e94:	18c00404 	addi	r3,r3,16
  800e98:	10800044 	addi	r2,r2,1
  800e9c:	213cd284 	addi	r4,r4,-3254
  800ea0:	41000015 	stw	r4,0(r8)
  800ea4:	44400115 	stw	r17,4(r8)
  800ea8:	d8c02015 	stw	r3,128(sp)
  800eac:	d8801f15 	stw	r2,124(sp)
  800eb0:	90bff40e 	bge	r18,r2,800e84 <__alt_data_end+0xff800e84>
  800eb4:	d9801e04 	addi	r6,sp,120
  800eb8:	b80b883a 	mov	r5,r23
  800ebc:	9809883a 	mov	r4,r19
  800ec0:	0807a700 	call	807a70 <__sprint_r>
  800ec4:	103e6d1e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  800ec8:	843ffc04 	addi	r16,r16,-16
  800ecc:	d8c02017 	ldw	r3,128(sp)
  800ed0:	d8801f17 	ldw	r2,124(sp)
  800ed4:	da000404 	addi	r8,sp,16
  800ed8:	8c3fed16 	blt	r17,r16,800e90 <__alt_data_end+0xff800e90>
  800edc:	d9403517 	ldw	r5,212(sp)
  800ee0:	1c07883a 	add	r3,r3,r16
  800ee4:	10800044 	addi	r2,r2,1
  800ee8:	41400015 	stw	r5,0(r8)
  800eec:	44000115 	stw	r16,4(r8)
  800ef0:	d8c02015 	stw	r3,128(sp)
  800ef4:	d8801f15 	stw	r2,124(sp)
  800ef8:	010001c4 	movi	r4,7
  800efc:	2080060e 	bge	r4,r2,800f18 <___vfprintf_internal_r+0xaa4>
  800f00:	d9002c17 	ldw	r4,176(sp)
  800f04:	d9801e04 	addi	r6,sp,120
  800f08:	b80b883a 	mov	r5,r23
  800f0c:	0807a700 	call	807a70 <__sprint_r>
  800f10:	103e5a1e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  800f14:	d8c02017 	ldw	r3,128(sp)
  800f18:	d8803117 	ldw	r2,196(sp)
  800f1c:	d9002a17 	ldw	r4,168(sp)
  800f20:	1100010e 	bge	r2,r4,800f28 <___vfprintf_internal_r+0xab4>
  800f24:	2005883a 	mov	r2,r4
  800f28:	d9402f17 	ldw	r5,188(sp)
  800f2c:	288b883a 	add	r5,r5,r2
  800f30:	d9402f15 	stw	r5,188(sp)
  800f34:	18019e1e 	bne	r3,zero,8015b0 <___vfprintf_internal_r+0x113c>
  800f38:	a8800007 	ldb	r2,0(r21)
  800f3c:	d8001f15 	stw	zero,124(sp)
  800f40:	da000404 	addi	r8,sp,16
  800f44:	103d851e 	bne	r2,zero,80055c <__alt_data_end+0xff80055c>
  800f48:	a821883a 	mov	r16,r21
  800f4c:	003d9b06 	br	8005bc <__alt_data_end+0xff8005bc>
  800f50:	18c03fcc 	andi	r3,r3,255
  800f54:	1805c11e 	bne	r3,zero,80265c <___vfprintf_internal_r+0x21e8>
  800f58:	94800414 	ori	r18,r18,16
  800f5c:	9080080c 	andi	r2,r18,32
  800f60:	10020c26 	beq	r2,zero,801794 <___vfprintf_internal_r+0x1320>
  800f64:	d8802d17 	ldw	r2,180(sp)
  800f68:	d9002917 	ldw	r4,164(sp)
  800f6c:	d8002785 	stb	zero,158(sp)
  800f70:	10c00204 	addi	r3,r2,8
  800f74:	14c00017 	ldw	r19,0(r2)
  800f78:	15800117 	ldw	r22,4(r2)
  800f7c:	20040f16 	blt	r4,zero,801fbc <___vfprintf_internal_r+0x1b48>
  800f80:	013fdfc4 	movi	r4,-129
  800f84:	9d84b03a 	or	r2,r19,r22
  800f88:	d8c02d15 	stw	r3,180(sp)
  800f8c:	9124703a 	and	r18,r18,r4
  800f90:	0039883a 	mov	fp,zero
  800f94:	103e891e 	bne	r2,zero,8009bc <__alt_data_end+0xff8009bc>
  800f98:	d9002917 	ldw	r4,164(sp)
  800f9c:	2002c11e 	bne	r4,zero,801aa4 <___vfprintf_internal_r+0x1630>
  800fa0:	d8002915 	stw	zero,164(sp)
  800fa4:	d8002e15 	stw	zero,184(sp)
  800fa8:	dc001e04 	addi	r16,sp,120
  800fac:	003ef806 	br	800b90 <__alt_data_end+0xff800b90>
  800fb0:	18c03fcc 	andi	r3,r3,255
  800fb4:	18059d1e 	bne	r3,zero,80262c <___vfprintf_internal_r+0x21b8>
  800fb8:	01402074 	movhi	r5,129
  800fbc:	297cc204 	addi	r5,r5,-3320
  800fc0:	d9403915 	stw	r5,228(sp)
  800fc4:	9080080c 	andi	r2,r18,32
  800fc8:	10005226 	beq	r2,zero,801114 <___vfprintf_internal_r+0xca0>
  800fcc:	d8802d17 	ldw	r2,180(sp)
  800fd0:	14c00017 	ldw	r19,0(r2)
  800fd4:	15800117 	ldw	r22,4(r2)
  800fd8:	10800204 	addi	r2,r2,8
  800fdc:	d8802d15 	stw	r2,180(sp)
  800fe0:	9080004c 	andi	r2,r18,1
  800fe4:	10019026 	beq	r2,zero,801628 <___vfprintf_internal_r+0x11b4>
  800fe8:	9d84b03a 	or	r2,r19,r22
  800fec:	10036926 	beq	r2,zero,801d94 <___vfprintf_internal_r+0x1920>
  800ff0:	d8c02917 	ldw	r3,164(sp)
  800ff4:	00800c04 	movi	r2,48
  800ff8:	d8802705 	stb	r2,156(sp)
  800ffc:	dc402745 	stb	r17,157(sp)
  801000:	d8002785 	stb	zero,158(sp)
  801004:	90800094 	ori	r2,r18,2
  801008:	18045d16 	blt	r3,zero,802180 <___vfprintf_internal_r+0x1d0c>
  80100c:	00bfdfc4 	movi	r2,-129
  801010:	90a4703a 	and	r18,r18,r2
  801014:	94800094 	ori	r18,r18,2
  801018:	0039883a 	mov	fp,zero
  80101c:	d9003917 	ldw	r4,228(sp)
  801020:	dc001e04 	addi	r16,sp,120
  801024:	988003cc 	andi	r2,r19,15
  801028:	b006973a 	slli	r3,r22,28
  80102c:	2085883a 	add	r2,r4,r2
  801030:	9826d13a 	srli	r19,r19,4
  801034:	10800003 	ldbu	r2,0(r2)
  801038:	b02cd13a 	srli	r22,r22,4
  80103c:	843fffc4 	addi	r16,r16,-1
  801040:	1ce6b03a 	or	r19,r3,r19
  801044:	80800005 	stb	r2,0(r16)
  801048:	9d84b03a 	or	r2,r19,r22
  80104c:	103ff51e 	bne	r2,zero,801024 <__alt_data_end+0xff801024>
  801050:	d8c02817 	ldw	r3,160(sp)
  801054:	1c07c83a 	sub	r3,r3,r16
  801058:	d8c02e15 	stw	r3,184(sp)
  80105c:	003ecc06 	br	800b90 <__alt_data_end+0xff800b90>
  801060:	18c03fcc 	andi	r3,r3,255
  801064:	183e9f26 	beq	r3,zero,800ae4 <__alt_data_end+0xff800ae4>
  801068:	d9c02785 	stb	r7,158(sp)
  80106c:	003e9d06 	br	800ae4 <__alt_data_end+0xff800ae4>
  801070:	00c00044 	movi	r3,1
  801074:	01c00ac4 	movi	r7,43
  801078:	ac400007 	ldb	r17,0(r21)
  80107c:	003d5e06 	br	8005f8 <__alt_data_end+0xff8005f8>
  801080:	94800814 	ori	r18,r18,32
  801084:	ac400007 	ldb	r17,0(r21)
  801088:	003d5b06 	br	8005f8 <__alt_data_end+0xff8005f8>
  80108c:	d8c02d17 	ldw	r3,180(sp)
  801090:	d8002785 	stb	zero,158(sp)
  801094:	1c000017 	ldw	r16,0(r3)
  801098:	1cc00104 	addi	r19,r3,4
  80109c:	80041926 	beq	r16,zero,802104 <___vfprintf_internal_r+0x1c90>
  8010a0:	d9002917 	ldw	r4,164(sp)
  8010a4:	2003d016 	blt	r4,zero,801fe8 <___vfprintf_internal_r+0x1b74>
  8010a8:	200d883a 	mov	r6,r4
  8010ac:	000b883a 	mov	r5,zero
  8010b0:	8009883a 	mov	r4,r16
  8010b4:	da003d15 	stw	r8,244(sp)
  8010b8:	0805c840 	call	805c84 <memchr>
  8010bc:	da003d17 	ldw	r8,244(sp)
  8010c0:	10045426 	beq	r2,zero,802214 <___vfprintf_internal_r+0x1da0>
  8010c4:	1405c83a 	sub	r2,r2,r16
  8010c8:	d8802e15 	stw	r2,184(sp)
  8010cc:	1003cc16 	blt	r2,zero,802000 <___vfprintf_internal_r+0x1b8c>
  8010d0:	df002783 	ldbu	fp,158(sp)
  8010d4:	d8802a15 	stw	r2,168(sp)
  8010d8:	dcc02d15 	stw	r19,180(sp)
  8010dc:	d8002915 	stw	zero,164(sp)
  8010e0:	d8003215 	stw	zero,200(sp)
  8010e4:	003eb006 	br	800ba8 <__alt_data_end+0xff800ba8>
  8010e8:	18c03fcc 	andi	r3,r3,255
  8010ec:	183f9b26 	beq	r3,zero,800f5c <__alt_data_end+0xff800f5c>
  8010f0:	d9c02785 	stb	r7,158(sp)
  8010f4:	003f9906 	br	800f5c <__alt_data_end+0xff800f5c>
  8010f8:	18c03fcc 	andi	r3,r3,255
  8010fc:	1805551e 	bne	r3,zero,802654 <___vfprintf_internal_r+0x21e0>
  801100:	01402074 	movhi	r5,129
  801104:	297cc704 	addi	r5,r5,-3300
  801108:	d9403915 	stw	r5,228(sp)
  80110c:	9080080c 	andi	r2,r18,32
  801110:	103fae1e 	bne	r2,zero,800fcc <__alt_data_end+0xff800fcc>
  801114:	9080040c 	andi	r2,r18,16
  801118:	1002de26 	beq	r2,zero,801c94 <___vfprintf_internal_r+0x1820>
  80111c:	d8c02d17 	ldw	r3,180(sp)
  801120:	002d883a 	mov	r22,zero
  801124:	1cc00017 	ldw	r19,0(r3)
  801128:	18c00104 	addi	r3,r3,4
  80112c:	d8c02d15 	stw	r3,180(sp)
  801130:	003fab06 	br	800fe0 <__alt_data_end+0xff800fe0>
  801134:	38803fcc 	andi	r2,r7,255
  801138:	1080201c 	xori	r2,r2,128
  80113c:	10bfe004 	addi	r2,r2,-128
  801140:	1002d21e 	bne	r2,zero,801c8c <___vfprintf_internal_r+0x1818>
  801144:	00c00044 	movi	r3,1
  801148:	01c00804 	movi	r7,32
  80114c:	ac400007 	ldb	r17,0(r21)
  801150:	003d2906 	br	8005f8 <__alt_data_end+0xff8005f8>
  801154:	94800054 	ori	r18,r18,1
  801158:	ac400007 	ldb	r17,0(r21)
  80115c:	003d2606 	br	8005f8 <__alt_data_end+0xff8005f8>
  801160:	18c03fcc 	andi	r3,r3,255
  801164:	183e0526 	beq	r3,zero,80097c <__alt_data_end+0xff80097c>
  801168:	d9c02785 	stb	r7,158(sp)
  80116c:	003e0306 	br	80097c <__alt_data_end+0xff80097c>
  801170:	94801014 	ori	r18,r18,64
  801174:	ac400007 	ldb	r17,0(r21)
  801178:	003d1f06 	br	8005f8 <__alt_data_end+0xff8005f8>
  80117c:	ac400007 	ldb	r17,0(r21)
  801180:	8a438726 	beq	r17,r9,801fa0 <___vfprintf_internal_r+0x1b2c>
  801184:	94800414 	ori	r18,r18,16
  801188:	003d1b06 	br	8005f8 <__alt_data_end+0xff8005f8>
  80118c:	18c03fcc 	andi	r3,r3,255
  801190:	1805341e 	bne	r3,zero,802664 <___vfprintf_internal_r+0x21f0>
  801194:	9080080c 	andi	r2,r18,32
  801198:	1002cd26 	beq	r2,zero,801cd0 <___vfprintf_internal_r+0x185c>
  80119c:	d9402d17 	ldw	r5,180(sp)
  8011a0:	d9002f17 	ldw	r4,188(sp)
  8011a4:	28800017 	ldw	r2,0(r5)
  8011a8:	2007d7fa 	srai	r3,r4,31
  8011ac:	29400104 	addi	r5,r5,4
  8011b0:	d9402d15 	stw	r5,180(sp)
  8011b4:	11000015 	stw	r4,0(r2)
  8011b8:	10c00115 	stw	r3,4(r2)
  8011bc:	003ce506 	br	800554 <__alt_data_end+0xff800554>
  8011c0:	d8c02d17 	ldw	r3,180(sp)
  8011c4:	d9002d17 	ldw	r4,180(sp)
  8011c8:	d8002785 	stb	zero,158(sp)
  8011cc:	18800017 	ldw	r2,0(r3)
  8011d0:	21000104 	addi	r4,r4,4
  8011d4:	00c00044 	movi	r3,1
  8011d8:	d8c02a15 	stw	r3,168(sp)
  8011dc:	d8801405 	stb	r2,80(sp)
  8011e0:	d9002d15 	stw	r4,180(sp)
  8011e4:	d8c02e15 	stw	r3,184(sp)
  8011e8:	d8002915 	stw	zero,164(sp)
  8011ec:	d8003215 	stw	zero,200(sp)
  8011f0:	dc001404 	addi	r16,sp,80
  8011f4:	0039883a 	mov	fp,zero
  8011f8:	003e7206 	br	800bc4 <__alt_data_end+0xff800bc4>
  8011fc:	01002074 	movhi	r4,129
  801200:	213cc704 	addi	r4,r4,-3300
  801204:	0039883a 	mov	fp,zero
  801208:	d9003915 	stw	r4,228(sp)
  80120c:	04401e04 	movi	r17,120
  801210:	003f8206 	br	80101c <__alt_data_end+0xff80101c>
  801214:	18c03fcc 	andi	r3,r3,255
  801218:	1805061e 	bne	r3,zero,802634 <___vfprintf_internal_r+0x21c0>
  80121c:	883d9126 	beq	r17,zero,800864 <__alt_data_end+0xff800864>
  801220:	00c00044 	movi	r3,1
  801224:	d8c02a15 	stw	r3,168(sp)
  801228:	dc401405 	stb	r17,80(sp)
  80122c:	d8002785 	stb	zero,158(sp)
  801230:	003fec06 	br	8011e4 <__alt_data_end+0xff8011e4>
  801234:	01402074 	movhi	r5,129
  801238:	297cc704 	addi	r5,r5,-3300
  80123c:	d9403915 	stw	r5,228(sp)
  801240:	d8c02d15 	stw	r3,180(sp)
  801244:	1025883a 	mov	r18,r2
  801248:	04401e04 	movi	r17,120
  80124c:	9d84b03a 	or	r2,r19,r22
  801250:	1000fc1e 	bne	r2,zero,801644 <___vfprintf_internal_r+0x11d0>
  801254:	0039883a 	mov	fp,zero
  801258:	00800084 	movi	r2,2
  80125c:	10803fcc 	andi	r2,r2,255
  801260:	00c00044 	movi	r3,1
  801264:	10c20f26 	beq	r2,r3,801aa4 <___vfprintf_internal_r+0x1630>
  801268:	00c00084 	movi	r3,2
  80126c:	10fd6326 	beq	r2,r3,8007fc <__alt_data_end+0xff8007fc>
  801270:	003e2d06 	br	800b28 <__alt_data_end+0xff800b28>
  801274:	d8c02017 	ldw	r3,128(sp)
  801278:	003e9306 	br	800cc8 <__alt_data_end+0xff800cc8>
  80127c:	00801944 	movi	r2,101
  801280:	14407e0e 	bge	r2,r17,80147c <___vfprintf_internal_r+0x1008>
  801284:	d9003617 	ldw	r4,216(sp)
  801288:	d9403817 	ldw	r5,224(sp)
  80128c:	000d883a 	mov	r6,zero
  801290:	000f883a 	mov	r7,zero
  801294:	d8c03c15 	stw	r3,240(sp)
  801298:	da003d15 	stw	r8,244(sp)
  80129c:	080b6e80 	call	80b6e8 <__eqdf2>
  8012a0:	d8c03c17 	ldw	r3,240(sp)
  8012a4:	da003d17 	ldw	r8,244(sp)
  8012a8:	1000f71e 	bne	r2,zero,801688 <___vfprintf_internal_r+0x1214>
  8012ac:	d8801f17 	ldw	r2,124(sp)
  8012b0:	01002074 	movhi	r4,129
  8012b4:	213cce04 	addi	r4,r4,-3272
  8012b8:	18c00044 	addi	r3,r3,1
  8012bc:	10800044 	addi	r2,r2,1
  8012c0:	41000015 	stw	r4,0(r8)
  8012c4:	01000044 	movi	r4,1
  8012c8:	41000115 	stw	r4,4(r8)
  8012cc:	d8c02015 	stw	r3,128(sp)
  8012d0:	d8801f15 	stw	r2,124(sp)
  8012d4:	010001c4 	movi	r4,7
  8012d8:	2082b816 	blt	r4,r2,801dbc <___vfprintf_internal_r+0x1948>
  8012dc:	42000204 	addi	r8,r8,8
  8012e0:	d8802617 	ldw	r2,152(sp)
  8012e4:	d9403317 	ldw	r5,204(sp)
  8012e8:	11400216 	blt	r2,r5,8012f4 <___vfprintf_internal_r+0xe80>
  8012ec:	9080004c 	andi	r2,r18,1
  8012f0:	103ed526 	beq	r2,zero,800e48 <__alt_data_end+0xff800e48>
  8012f4:	d8803717 	ldw	r2,220(sp)
  8012f8:	d9003417 	ldw	r4,208(sp)
  8012fc:	d9403717 	ldw	r5,220(sp)
  801300:	1887883a 	add	r3,r3,r2
  801304:	d8801f17 	ldw	r2,124(sp)
  801308:	41000015 	stw	r4,0(r8)
  80130c:	41400115 	stw	r5,4(r8)
  801310:	10800044 	addi	r2,r2,1
  801314:	d8c02015 	stw	r3,128(sp)
  801318:	d8801f15 	stw	r2,124(sp)
  80131c:	010001c4 	movi	r4,7
  801320:	20832916 	blt	r4,r2,801fc8 <___vfprintf_internal_r+0x1b54>
  801324:	42000204 	addi	r8,r8,8
  801328:	d8803317 	ldw	r2,204(sp)
  80132c:	143fffc4 	addi	r16,r2,-1
  801330:	043ec50e 	bge	zero,r16,800e48 <__alt_data_end+0xff800e48>
  801334:	04400404 	movi	r17,16
  801338:	d8801f17 	ldw	r2,124(sp)
  80133c:	8c00880e 	bge	r17,r16,801560 <___vfprintf_internal_r+0x10ec>
  801340:	01402074 	movhi	r5,129
  801344:	297cce84 	addi	r5,r5,-3270
  801348:	d9402b15 	stw	r5,172(sp)
  80134c:	058001c4 	movi	r22,7
  801350:	dcc02c17 	ldw	r19,176(sp)
  801354:	00000306 	br	801364 <___vfprintf_internal_r+0xef0>
  801358:	42000204 	addi	r8,r8,8
  80135c:	843ffc04 	addi	r16,r16,-16
  801360:	8c00820e 	bge	r17,r16,80156c <___vfprintf_internal_r+0x10f8>
  801364:	18c00404 	addi	r3,r3,16
  801368:	10800044 	addi	r2,r2,1
  80136c:	45000015 	stw	r20,0(r8)
  801370:	44400115 	stw	r17,4(r8)
  801374:	d8c02015 	stw	r3,128(sp)
  801378:	d8801f15 	stw	r2,124(sp)
  80137c:	b0bff60e 	bge	r22,r2,801358 <__alt_data_end+0xff801358>
  801380:	d9801e04 	addi	r6,sp,120
  801384:	b80b883a 	mov	r5,r23
  801388:	9809883a 	mov	r4,r19
  80138c:	0807a700 	call	807a70 <__sprint_r>
  801390:	103d3a1e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  801394:	d8c02017 	ldw	r3,128(sp)
  801398:	d8801f17 	ldw	r2,124(sp)
  80139c:	da000404 	addi	r8,sp,16
  8013a0:	003fee06 	br	80135c <__alt_data_end+0xff80135c>
  8013a4:	d9403117 	ldw	r5,196(sp)
  8013a8:	d8802a17 	ldw	r2,168(sp)
  8013ac:	28adc83a 	sub	r22,r5,r2
  8013b0:	05be630e 	bge	zero,r22,800d40 <__alt_data_end+0xff800d40>
  8013b4:	07000404 	movi	fp,16
  8013b8:	d8801f17 	ldw	r2,124(sp)
  8013bc:	e5838f0e 	bge	fp,r22,8021fc <___vfprintf_internal_r+0x1d88>
  8013c0:	01402074 	movhi	r5,129
  8013c4:	297cce84 	addi	r5,r5,-3270
  8013c8:	dc403015 	stw	r17,192(sp)
  8013cc:	d9402b15 	stw	r5,172(sp)
  8013d0:	b023883a 	mov	r17,r22
  8013d4:	04c001c4 	movi	r19,7
  8013d8:	a82d883a 	mov	r22,r21
  8013dc:	902b883a 	mov	r21,r18
  8013e0:	8025883a 	mov	r18,r16
  8013e4:	dc002c17 	ldw	r16,176(sp)
  8013e8:	00000306 	br	8013f8 <___vfprintf_internal_r+0xf84>
  8013ec:	8c7ffc04 	addi	r17,r17,-16
  8013f0:	42000204 	addi	r8,r8,8
  8013f4:	e440110e 	bge	fp,r17,80143c <___vfprintf_internal_r+0xfc8>
  8013f8:	18c00404 	addi	r3,r3,16
  8013fc:	10800044 	addi	r2,r2,1
  801400:	45000015 	stw	r20,0(r8)
  801404:	47000115 	stw	fp,4(r8)
  801408:	d8c02015 	stw	r3,128(sp)
  80140c:	d8801f15 	stw	r2,124(sp)
  801410:	98bff60e 	bge	r19,r2,8013ec <__alt_data_end+0xff8013ec>
  801414:	d9801e04 	addi	r6,sp,120
  801418:	b80b883a 	mov	r5,r23
  80141c:	8009883a 	mov	r4,r16
  801420:	0807a700 	call	807a70 <__sprint_r>
  801424:	103d151e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  801428:	8c7ffc04 	addi	r17,r17,-16
  80142c:	d8c02017 	ldw	r3,128(sp)
  801430:	d8801f17 	ldw	r2,124(sp)
  801434:	da000404 	addi	r8,sp,16
  801438:	e47fef16 	blt	fp,r17,8013f8 <__alt_data_end+0xff8013f8>
  80143c:	9021883a 	mov	r16,r18
  801440:	a825883a 	mov	r18,r21
  801444:	b02b883a 	mov	r21,r22
  801448:	882d883a 	mov	r22,r17
  80144c:	dc403017 	ldw	r17,192(sp)
  801450:	d9002b17 	ldw	r4,172(sp)
  801454:	1d87883a 	add	r3,r3,r22
  801458:	10800044 	addi	r2,r2,1
  80145c:	41000015 	stw	r4,0(r8)
  801460:	45800115 	stw	r22,4(r8)
  801464:	d8c02015 	stw	r3,128(sp)
  801468:	d8801f15 	stw	r2,124(sp)
  80146c:	010001c4 	movi	r4,7
  801470:	20818e16 	blt	r4,r2,801aac <___vfprintf_internal_r+0x1638>
  801474:	42000204 	addi	r8,r8,8
  801478:	003e3106 	br	800d40 <__alt_data_end+0xff800d40>
  80147c:	d9403317 	ldw	r5,204(sp)
  801480:	00800044 	movi	r2,1
  801484:	18c00044 	addi	r3,r3,1
  801488:	1141530e 	bge	r2,r5,8019d8 <___vfprintf_internal_r+0x1564>
  80148c:	dc401f17 	ldw	r17,124(sp)
  801490:	00800044 	movi	r2,1
  801494:	40800115 	stw	r2,4(r8)
  801498:	8c400044 	addi	r17,r17,1
  80149c:	44000015 	stw	r16,0(r8)
  8014a0:	d8c02015 	stw	r3,128(sp)
  8014a4:	dc401f15 	stw	r17,124(sp)
  8014a8:	008001c4 	movi	r2,7
  8014ac:	14416b16 	blt	r2,r17,801a5c <___vfprintf_internal_r+0x15e8>
  8014b0:	42000204 	addi	r8,r8,8
  8014b4:	d8803717 	ldw	r2,220(sp)
  8014b8:	d9003417 	ldw	r4,208(sp)
  8014bc:	8c400044 	addi	r17,r17,1
  8014c0:	10c7883a 	add	r3,r2,r3
  8014c4:	40800115 	stw	r2,4(r8)
  8014c8:	41000015 	stw	r4,0(r8)
  8014cc:	d8c02015 	stw	r3,128(sp)
  8014d0:	dc401f15 	stw	r17,124(sp)
  8014d4:	008001c4 	movi	r2,7
  8014d8:	14416916 	blt	r2,r17,801a80 <___vfprintf_internal_r+0x160c>
  8014dc:	45800204 	addi	r22,r8,8
  8014e0:	d9003617 	ldw	r4,216(sp)
  8014e4:	d9403817 	ldw	r5,224(sp)
  8014e8:	000d883a 	mov	r6,zero
  8014ec:	000f883a 	mov	r7,zero
  8014f0:	d8c03c15 	stw	r3,240(sp)
  8014f4:	080b6e80 	call	80b6e8 <__eqdf2>
  8014f8:	d8c03c17 	ldw	r3,240(sp)
  8014fc:	1000bc26 	beq	r2,zero,8017f0 <___vfprintf_internal_r+0x137c>
  801500:	d9403317 	ldw	r5,204(sp)
  801504:	84000044 	addi	r16,r16,1
  801508:	8c400044 	addi	r17,r17,1
  80150c:	28bfffc4 	addi	r2,r5,-1
  801510:	1887883a 	add	r3,r3,r2
  801514:	b0800115 	stw	r2,4(r22)
  801518:	b4000015 	stw	r16,0(r22)
  80151c:	d8c02015 	stw	r3,128(sp)
  801520:	dc401f15 	stw	r17,124(sp)
  801524:	008001c4 	movi	r2,7
  801528:	14414316 	blt	r2,r17,801a38 <___vfprintf_internal_r+0x15c4>
  80152c:	b5800204 	addi	r22,r22,8
  801530:	d9003a17 	ldw	r4,232(sp)
  801534:	df0022c4 	addi	fp,sp,139
  801538:	8c400044 	addi	r17,r17,1
  80153c:	20c7883a 	add	r3,r4,r3
  801540:	b7000015 	stw	fp,0(r22)
  801544:	b1000115 	stw	r4,4(r22)
  801548:	d8c02015 	stw	r3,128(sp)
  80154c:	dc401f15 	stw	r17,124(sp)
  801550:	008001c4 	movi	r2,7
  801554:	14400e16 	blt	r2,r17,801590 <___vfprintf_internal_r+0x111c>
  801558:	b2000204 	addi	r8,r22,8
  80155c:	003e3a06 	br	800e48 <__alt_data_end+0xff800e48>
  801560:	01002074 	movhi	r4,129
  801564:	213cce84 	addi	r4,r4,-3270
  801568:	d9002b15 	stw	r4,172(sp)
  80156c:	d9002b17 	ldw	r4,172(sp)
  801570:	1c07883a 	add	r3,r3,r16
  801574:	44000115 	stw	r16,4(r8)
  801578:	41000015 	stw	r4,0(r8)
  80157c:	10800044 	addi	r2,r2,1
  801580:	d8c02015 	stw	r3,128(sp)
  801584:	d8801f15 	stw	r2,124(sp)
  801588:	010001c4 	movi	r4,7
  80158c:	20be2d0e 	bge	r4,r2,800e44 <__alt_data_end+0xff800e44>
  801590:	d9002c17 	ldw	r4,176(sp)
  801594:	d9801e04 	addi	r6,sp,120
  801598:	b80b883a 	mov	r5,r23
  80159c:	0807a700 	call	807a70 <__sprint_r>
  8015a0:	103cb61e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  8015a4:	d8c02017 	ldw	r3,128(sp)
  8015a8:	da000404 	addi	r8,sp,16
  8015ac:	003e2606 	br	800e48 <__alt_data_end+0xff800e48>
  8015b0:	d9002c17 	ldw	r4,176(sp)
  8015b4:	d9801e04 	addi	r6,sp,120
  8015b8:	b80b883a 	mov	r5,r23
  8015bc:	0807a700 	call	807a70 <__sprint_r>
  8015c0:	103e5d26 	beq	r2,zero,800f38 <__alt_data_end+0xff800f38>
  8015c4:	003cad06 	br	80087c <__alt_data_end+0xff80087c>
  8015c8:	d9002c17 	ldw	r4,176(sp)
  8015cc:	d9801e04 	addi	r6,sp,120
  8015d0:	b80b883a 	mov	r5,r23
  8015d4:	0807a700 	call	807a70 <__sprint_r>
  8015d8:	103ca81e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  8015dc:	d8c02017 	ldw	r3,128(sp)
  8015e0:	da000404 	addi	r8,sp,16
  8015e4:	003e0b06 	br	800e14 <__alt_data_end+0xff800e14>
  8015e8:	d9002c17 	ldw	r4,176(sp)
  8015ec:	d9801e04 	addi	r6,sp,120
  8015f0:	b80b883a 	mov	r5,r23
  8015f4:	0807a700 	call	807a70 <__sprint_r>
  8015f8:	103ca01e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  8015fc:	d8c02017 	ldw	r3,128(sp)
  801600:	da000404 	addi	r8,sp,16
  801604:	003dbd06 	br	800cfc <__alt_data_end+0xff800cfc>
  801608:	d9002c17 	ldw	r4,176(sp)
  80160c:	d9801e04 	addi	r6,sp,120
  801610:	b80b883a 	mov	r5,r23
  801614:	0807a700 	call	807a70 <__sprint_r>
  801618:	103c981e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  80161c:	d8c02017 	ldw	r3,128(sp)
  801620:	da000404 	addi	r8,sp,16
  801624:	003dc306 	br	800d34 <__alt_data_end+0xff800d34>
  801628:	d8802917 	ldw	r2,164(sp)
  80162c:	d8002785 	stb	zero,158(sp)
  801630:	103f0616 	blt	r2,zero,80124c <__alt_data_end+0xff80124c>
  801634:	00ffdfc4 	movi	r3,-129
  801638:	9d84b03a 	or	r2,r19,r22
  80163c:	90e4703a 	and	r18,r18,r3
  801640:	103c6b26 	beq	r2,zero,8007f0 <__alt_data_end+0xff8007f0>
  801644:	0039883a 	mov	fp,zero
  801648:	003e7406 	br	80101c <__alt_data_end+0xff80101c>
  80164c:	9080040c 	andi	r2,r18,16
  801650:	1001b326 	beq	r2,zero,801d20 <___vfprintf_internal_r+0x18ac>
  801654:	d9002d17 	ldw	r4,180(sp)
  801658:	d9402917 	ldw	r5,164(sp)
  80165c:	d8002785 	stb	zero,158(sp)
  801660:	20800104 	addi	r2,r4,4
  801664:	24c00017 	ldw	r19,0(r4)
  801668:	002d883a 	mov	r22,zero
  80166c:	2801b516 	blt	r5,zero,801d44 <___vfprintf_internal_r+0x18d0>
  801670:	00ffdfc4 	movi	r3,-129
  801674:	d8802d15 	stw	r2,180(sp)
  801678:	90e4703a 	and	r18,r18,r3
  80167c:	983d2726 	beq	r19,zero,800b1c <__alt_data_end+0xff800b1c>
  801680:	0039883a 	mov	fp,zero
  801684:	003d2a06 	br	800b30 <__alt_data_end+0xff800b30>
  801688:	dc402617 	ldw	r17,152(sp)
  80168c:	0441d30e 	bge	zero,r17,801ddc <___vfprintf_internal_r+0x1968>
  801690:	dc403217 	ldw	r17,200(sp)
  801694:	d8803317 	ldw	r2,204(sp)
  801698:	1440010e 	bge	r2,r17,8016a0 <___vfprintf_internal_r+0x122c>
  80169c:	1023883a 	mov	r17,r2
  8016a0:	04400a0e 	bge	zero,r17,8016cc <___vfprintf_internal_r+0x1258>
  8016a4:	d8801f17 	ldw	r2,124(sp)
  8016a8:	1c47883a 	add	r3,r3,r17
  8016ac:	44000015 	stw	r16,0(r8)
  8016b0:	10800044 	addi	r2,r2,1
  8016b4:	44400115 	stw	r17,4(r8)
  8016b8:	d8c02015 	stw	r3,128(sp)
  8016bc:	d8801f15 	stw	r2,124(sp)
  8016c0:	010001c4 	movi	r4,7
  8016c4:	20826516 	blt	r4,r2,80205c <___vfprintf_internal_r+0x1be8>
  8016c8:	42000204 	addi	r8,r8,8
  8016cc:	88026116 	blt	r17,zero,802054 <___vfprintf_internal_r+0x1be0>
  8016d0:	d9003217 	ldw	r4,200(sp)
  8016d4:	2463c83a 	sub	r17,r4,r17
  8016d8:	04407b0e 	bge	zero,r17,8018c8 <___vfprintf_internal_r+0x1454>
  8016dc:	05800404 	movi	r22,16
  8016e0:	d8801f17 	ldw	r2,124(sp)
  8016e4:	b4419d0e 	bge	r22,r17,801d5c <___vfprintf_internal_r+0x18e8>
  8016e8:	01002074 	movhi	r4,129
  8016ec:	213cce84 	addi	r4,r4,-3270
  8016f0:	d9002b15 	stw	r4,172(sp)
  8016f4:	070001c4 	movi	fp,7
  8016f8:	dcc02c17 	ldw	r19,176(sp)
  8016fc:	00000306 	br	80170c <___vfprintf_internal_r+0x1298>
  801700:	42000204 	addi	r8,r8,8
  801704:	8c7ffc04 	addi	r17,r17,-16
  801708:	b441970e 	bge	r22,r17,801d68 <___vfprintf_internal_r+0x18f4>
  80170c:	18c00404 	addi	r3,r3,16
  801710:	10800044 	addi	r2,r2,1
  801714:	45000015 	stw	r20,0(r8)
  801718:	45800115 	stw	r22,4(r8)
  80171c:	d8c02015 	stw	r3,128(sp)
  801720:	d8801f15 	stw	r2,124(sp)
  801724:	e0bff60e 	bge	fp,r2,801700 <__alt_data_end+0xff801700>
  801728:	d9801e04 	addi	r6,sp,120
  80172c:	b80b883a 	mov	r5,r23
  801730:	9809883a 	mov	r4,r19
  801734:	0807a700 	call	807a70 <__sprint_r>
  801738:	103c501e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  80173c:	d8c02017 	ldw	r3,128(sp)
  801740:	d8801f17 	ldw	r2,124(sp)
  801744:	da000404 	addi	r8,sp,16
  801748:	003fee06 	br	801704 <__alt_data_end+0xff801704>
  80174c:	d9002c17 	ldw	r4,176(sp)
  801750:	d9801e04 	addi	r6,sp,120
  801754:	b80b883a 	mov	r5,r23
  801758:	0807a700 	call	807a70 <__sprint_r>
  80175c:	103c471e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  801760:	d8c02017 	ldw	r3,128(sp)
  801764:	df002787 	ldb	fp,158(sp)
  801768:	da000404 	addi	r8,sp,16
  80176c:	003d5606 	br	800cc8 <__alt_data_end+0xff800cc8>
  801770:	9080040c 	andi	r2,r18,16
  801774:	10016126 	beq	r2,zero,801cfc <___vfprintf_internal_r+0x1888>
  801778:	d8802d17 	ldw	r2,180(sp)
  80177c:	14c00017 	ldw	r19,0(r2)
  801780:	10800104 	addi	r2,r2,4
  801784:	d8802d15 	stw	r2,180(sp)
  801788:	982dd7fa 	srai	r22,r19,31
  80178c:	b005883a 	mov	r2,r22
  801790:	003c8206 	br	80099c <__alt_data_end+0xff80099c>
  801794:	9080040c 	andi	r2,r18,16
  801798:	10003526 	beq	r2,zero,801870 <___vfprintf_internal_r+0x13fc>
  80179c:	d9402d17 	ldw	r5,180(sp)
  8017a0:	d8c02917 	ldw	r3,164(sp)
  8017a4:	d8002785 	stb	zero,158(sp)
  8017a8:	28800104 	addi	r2,r5,4
  8017ac:	2cc00017 	ldw	r19,0(r5)
  8017b0:	002d883a 	mov	r22,zero
  8017b4:	18003716 	blt	r3,zero,801894 <___vfprintf_internal_r+0x1420>
  8017b8:	00ffdfc4 	movi	r3,-129
  8017bc:	d8802d15 	stw	r2,180(sp)
  8017c0:	90e4703a 	and	r18,r18,r3
  8017c4:	0039883a 	mov	fp,zero
  8017c8:	983df326 	beq	r19,zero,800f98 <__alt_data_end+0xff800f98>
  8017cc:	00800244 	movi	r2,9
  8017d0:	14fc7b36 	bltu	r2,r19,8009c0 <__alt_data_end+0xff8009c0>
  8017d4:	d8c02817 	ldw	r3,160(sp)
  8017d8:	dc001dc4 	addi	r16,sp,119
  8017dc:	9cc00c04 	addi	r19,r19,48
  8017e0:	1c07c83a 	sub	r3,r3,r16
  8017e4:	dcc01dc5 	stb	r19,119(sp)
  8017e8:	d8c02e15 	stw	r3,184(sp)
  8017ec:	003ce806 	br	800b90 <__alt_data_end+0xff800b90>
  8017f0:	d8803317 	ldw	r2,204(sp)
  8017f4:	143fffc4 	addi	r16,r2,-1
  8017f8:	043f4d0e 	bge	zero,r16,801530 <__alt_data_end+0xff801530>
  8017fc:	07000404 	movi	fp,16
  801800:	e400810e 	bge	fp,r16,801a08 <___vfprintf_internal_r+0x1594>
  801804:	01402074 	movhi	r5,129
  801808:	297cce84 	addi	r5,r5,-3270
  80180c:	d9402b15 	stw	r5,172(sp)
  801810:	01c001c4 	movi	r7,7
  801814:	dcc02c17 	ldw	r19,176(sp)
  801818:	00000306 	br	801828 <___vfprintf_internal_r+0x13b4>
  80181c:	b5800204 	addi	r22,r22,8
  801820:	843ffc04 	addi	r16,r16,-16
  801824:	e4007b0e 	bge	fp,r16,801a14 <___vfprintf_internal_r+0x15a0>
  801828:	18c00404 	addi	r3,r3,16
  80182c:	8c400044 	addi	r17,r17,1
  801830:	b5000015 	stw	r20,0(r22)
  801834:	b7000115 	stw	fp,4(r22)
  801838:	d8c02015 	stw	r3,128(sp)
  80183c:	dc401f15 	stw	r17,124(sp)
  801840:	3c7ff60e 	bge	r7,r17,80181c <__alt_data_end+0xff80181c>
  801844:	d9801e04 	addi	r6,sp,120
  801848:	b80b883a 	mov	r5,r23
  80184c:	9809883a 	mov	r4,r19
  801850:	d9c03c15 	stw	r7,240(sp)
  801854:	0807a700 	call	807a70 <__sprint_r>
  801858:	d9c03c17 	ldw	r7,240(sp)
  80185c:	103c071e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  801860:	d8c02017 	ldw	r3,128(sp)
  801864:	dc401f17 	ldw	r17,124(sp)
  801868:	dd800404 	addi	r22,sp,16
  80186c:	003fec06 	br	801820 <__alt_data_end+0xff801820>
  801870:	9080100c 	andi	r2,r18,64
  801874:	d8002785 	stb	zero,158(sp)
  801878:	10010e26 	beq	r2,zero,801cb4 <___vfprintf_internal_r+0x1840>
  80187c:	d9002d17 	ldw	r4,180(sp)
  801880:	d9402917 	ldw	r5,164(sp)
  801884:	002d883a 	mov	r22,zero
  801888:	20800104 	addi	r2,r4,4
  80188c:	24c0000b 	ldhu	r19,0(r4)
  801890:	283fc90e 	bge	r5,zero,8017b8 <__alt_data_end+0xff8017b8>
  801894:	d8802d15 	stw	r2,180(sp)
  801898:	0039883a 	mov	fp,zero
  80189c:	9d84b03a 	or	r2,r19,r22
  8018a0:	103c461e 	bne	r2,zero,8009bc <__alt_data_end+0xff8009bc>
  8018a4:	00800044 	movi	r2,1
  8018a8:	003e6c06 	br	80125c <__alt_data_end+0xff80125c>
  8018ac:	d9002c17 	ldw	r4,176(sp)
  8018b0:	d9801e04 	addi	r6,sp,120
  8018b4:	b80b883a 	mov	r5,r23
  8018b8:	0807a700 	call	807a70 <__sprint_r>
  8018bc:	103bef1e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  8018c0:	d8c02017 	ldw	r3,128(sp)
  8018c4:	da000404 	addi	r8,sp,16
  8018c8:	d9003217 	ldw	r4,200(sp)
  8018cc:	d8802617 	ldw	r2,152(sp)
  8018d0:	d9403317 	ldw	r5,204(sp)
  8018d4:	8123883a 	add	r17,r16,r4
  8018d8:	11400216 	blt	r2,r5,8018e4 <___vfprintf_internal_r+0x1470>
  8018dc:	9100004c 	andi	r4,r18,1
  8018e0:	20000d26 	beq	r4,zero,801918 <___vfprintf_internal_r+0x14a4>
  8018e4:	d9003717 	ldw	r4,220(sp)
  8018e8:	d9403417 	ldw	r5,208(sp)
  8018ec:	1907883a 	add	r3,r3,r4
  8018f0:	d9001f17 	ldw	r4,124(sp)
  8018f4:	41400015 	stw	r5,0(r8)
  8018f8:	d9403717 	ldw	r5,220(sp)
  8018fc:	21000044 	addi	r4,r4,1
  801900:	d8c02015 	stw	r3,128(sp)
  801904:	41400115 	stw	r5,4(r8)
  801908:	d9001f15 	stw	r4,124(sp)
  80190c:	014001c4 	movi	r5,7
  801910:	2901e816 	blt	r5,r4,8020b4 <___vfprintf_internal_r+0x1c40>
  801914:	42000204 	addi	r8,r8,8
  801918:	d9003317 	ldw	r4,204(sp)
  80191c:	8121883a 	add	r16,r16,r4
  801920:	2085c83a 	sub	r2,r4,r2
  801924:	8461c83a 	sub	r16,r16,r17
  801928:	1400010e 	bge	r2,r16,801930 <___vfprintf_internal_r+0x14bc>
  80192c:	1021883a 	mov	r16,r2
  801930:	04000a0e 	bge	zero,r16,80195c <___vfprintf_internal_r+0x14e8>
  801934:	d9001f17 	ldw	r4,124(sp)
  801938:	1c07883a 	add	r3,r3,r16
  80193c:	44400015 	stw	r17,0(r8)
  801940:	21000044 	addi	r4,r4,1
  801944:	44000115 	stw	r16,4(r8)
  801948:	d8c02015 	stw	r3,128(sp)
  80194c:	d9001f15 	stw	r4,124(sp)
  801950:	014001c4 	movi	r5,7
  801954:	2901fb16 	blt	r5,r4,802144 <___vfprintf_internal_r+0x1cd0>
  801958:	42000204 	addi	r8,r8,8
  80195c:	8001f716 	blt	r16,zero,80213c <___vfprintf_internal_r+0x1cc8>
  801960:	1421c83a 	sub	r16,r2,r16
  801964:	043d380e 	bge	zero,r16,800e48 <__alt_data_end+0xff800e48>
  801968:	04400404 	movi	r17,16
  80196c:	d8801f17 	ldw	r2,124(sp)
  801970:	8c3efb0e 	bge	r17,r16,801560 <__alt_data_end+0xff801560>
  801974:	01402074 	movhi	r5,129
  801978:	297cce84 	addi	r5,r5,-3270
  80197c:	d9402b15 	stw	r5,172(sp)
  801980:	058001c4 	movi	r22,7
  801984:	dcc02c17 	ldw	r19,176(sp)
  801988:	00000306 	br	801998 <___vfprintf_internal_r+0x1524>
  80198c:	42000204 	addi	r8,r8,8
  801990:	843ffc04 	addi	r16,r16,-16
  801994:	8c3ef50e 	bge	r17,r16,80156c <__alt_data_end+0xff80156c>
  801998:	18c00404 	addi	r3,r3,16
  80199c:	10800044 	addi	r2,r2,1
  8019a0:	45000015 	stw	r20,0(r8)
  8019a4:	44400115 	stw	r17,4(r8)
  8019a8:	d8c02015 	stw	r3,128(sp)
  8019ac:	d8801f15 	stw	r2,124(sp)
  8019b0:	b0bff60e 	bge	r22,r2,80198c <__alt_data_end+0xff80198c>
  8019b4:	d9801e04 	addi	r6,sp,120
  8019b8:	b80b883a 	mov	r5,r23
  8019bc:	9809883a 	mov	r4,r19
  8019c0:	0807a700 	call	807a70 <__sprint_r>
  8019c4:	103bad1e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  8019c8:	d8c02017 	ldw	r3,128(sp)
  8019cc:	d8801f17 	ldw	r2,124(sp)
  8019d0:	da000404 	addi	r8,sp,16
  8019d4:	003fee06 	br	801990 <__alt_data_end+0xff801990>
  8019d8:	9088703a 	and	r4,r18,r2
  8019dc:	203eab1e 	bne	r4,zero,80148c <__alt_data_end+0xff80148c>
  8019e0:	dc401f17 	ldw	r17,124(sp)
  8019e4:	40800115 	stw	r2,4(r8)
  8019e8:	44000015 	stw	r16,0(r8)
  8019ec:	8c400044 	addi	r17,r17,1
  8019f0:	d8c02015 	stw	r3,128(sp)
  8019f4:	dc401f15 	stw	r17,124(sp)
  8019f8:	008001c4 	movi	r2,7
  8019fc:	14400e16 	blt	r2,r17,801a38 <___vfprintf_internal_r+0x15c4>
  801a00:	45800204 	addi	r22,r8,8
  801a04:	003eca06 	br	801530 <__alt_data_end+0xff801530>
  801a08:	01002074 	movhi	r4,129
  801a0c:	213cce84 	addi	r4,r4,-3270
  801a10:	d9002b15 	stw	r4,172(sp)
  801a14:	d8802b17 	ldw	r2,172(sp)
  801a18:	1c07883a 	add	r3,r3,r16
  801a1c:	8c400044 	addi	r17,r17,1
  801a20:	b0800015 	stw	r2,0(r22)
  801a24:	b4000115 	stw	r16,4(r22)
  801a28:	d8c02015 	stw	r3,128(sp)
  801a2c:	dc401f15 	stw	r17,124(sp)
  801a30:	008001c4 	movi	r2,7
  801a34:	147ebd0e 	bge	r2,r17,80152c <__alt_data_end+0xff80152c>
  801a38:	d9002c17 	ldw	r4,176(sp)
  801a3c:	d9801e04 	addi	r6,sp,120
  801a40:	b80b883a 	mov	r5,r23
  801a44:	0807a700 	call	807a70 <__sprint_r>
  801a48:	103b8c1e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  801a4c:	d8c02017 	ldw	r3,128(sp)
  801a50:	dc401f17 	ldw	r17,124(sp)
  801a54:	dd800404 	addi	r22,sp,16
  801a58:	003eb506 	br	801530 <__alt_data_end+0xff801530>
  801a5c:	d9002c17 	ldw	r4,176(sp)
  801a60:	d9801e04 	addi	r6,sp,120
  801a64:	b80b883a 	mov	r5,r23
  801a68:	0807a700 	call	807a70 <__sprint_r>
  801a6c:	103b831e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  801a70:	d8c02017 	ldw	r3,128(sp)
  801a74:	dc401f17 	ldw	r17,124(sp)
  801a78:	da000404 	addi	r8,sp,16
  801a7c:	003e8d06 	br	8014b4 <__alt_data_end+0xff8014b4>
  801a80:	d9002c17 	ldw	r4,176(sp)
  801a84:	d9801e04 	addi	r6,sp,120
  801a88:	b80b883a 	mov	r5,r23
  801a8c:	0807a700 	call	807a70 <__sprint_r>
  801a90:	103b7a1e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  801a94:	d8c02017 	ldw	r3,128(sp)
  801a98:	dc401f17 	ldw	r17,124(sp)
  801a9c:	dd800404 	addi	r22,sp,16
  801aa0:	003e8f06 	br	8014e0 <__alt_data_end+0xff8014e0>
  801aa4:	0027883a 	mov	r19,zero
  801aa8:	003f4a06 	br	8017d4 <__alt_data_end+0xff8017d4>
  801aac:	d9002c17 	ldw	r4,176(sp)
  801ab0:	d9801e04 	addi	r6,sp,120
  801ab4:	b80b883a 	mov	r5,r23
  801ab8:	0807a700 	call	807a70 <__sprint_r>
  801abc:	103b6f1e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  801ac0:	d8c02017 	ldw	r3,128(sp)
  801ac4:	da000404 	addi	r8,sp,16
  801ac8:	003c9d06 	br	800d40 <__alt_data_end+0xff800d40>
  801acc:	04e7c83a 	sub	r19,zero,r19
  801ad0:	9804c03a 	cmpne	r2,r19,zero
  801ad4:	05adc83a 	sub	r22,zero,r22
  801ad8:	b0adc83a 	sub	r22,r22,r2
  801adc:	d8802917 	ldw	r2,164(sp)
  801ae0:	07000b44 	movi	fp,45
  801ae4:	df002785 	stb	fp,158(sp)
  801ae8:	10017b16 	blt	r2,zero,8020d8 <___vfprintf_internal_r+0x1c64>
  801aec:	00bfdfc4 	movi	r2,-129
  801af0:	90a4703a 	and	r18,r18,r2
  801af4:	003bb106 	br	8009bc <__alt_data_end+0xff8009bc>
  801af8:	d9003617 	ldw	r4,216(sp)
  801afc:	d9403817 	ldw	r5,224(sp)
  801b00:	da003d15 	stw	r8,244(sp)
  801b04:	08076940 	call	807694 <__fpclassifyd>
  801b08:	da003d17 	ldw	r8,244(sp)
  801b0c:	1000f026 	beq	r2,zero,801ed0 <___vfprintf_internal_r+0x1a5c>
  801b10:	d9002917 	ldw	r4,164(sp)
  801b14:	05bff7c4 	movi	r22,-33
  801b18:	00bfffc4 	movi	r2,-1
  801b1c:	8dac703a 	and	r22,r17,r22
  801b20:	20820026 	beq	r4,r2,802324 <___vfprintf_internal_r+0x1eb0>
  801b24:	008011c4 	movi	r2,71
  801b28:	b081f726 	beq	r22,r2,802308 <___vfprintf_internal_r+0x1e94>
  801b2c:	d9003817 	ldw	r4,224(sp)
  801b30:	90c04014 	ori	r3,r18,256
  801b34:	d8c02b15 	stw	r3,172(sp)
  801b38:	20021516 	blt	r4,zero,802390 <___vfprintf_internal_r+0x1f1c>
  801b3c:	dcc03817 	ldw	r19,224(sp)
  801b40:	d8002a05 	stb	zero,168(sp)
  801b44:	00801984 	movi	r2,102
  801b48:	8881f926 	beq	r17,r2,802330 <___vfprintf_internal_r+0x1ebc>
  801b4c:	00801184 	movi	r2,70
  801b50:	88821c26 	beq	r17,r2,8023c4 <___vfprintf_internal_r+0x1f50>
  801b54:	00801144 	movi	r2,69
  801b58:	b081ef26 	beq	r22,r2,802318 <___vfprintf_internal_r+0x1ea4>
  801b5c:	d8c02917 	ldw	r3,164(sp)
  801b60:	d8802104 	addi	r2,sp,132
  801b64:	d8800315 	stw	r2,12(sp)
  801b68:	d9403617 	ldw	r5,216(sp)
  801b6c:	d8802504 	addi	r2,sp,148
  801b70:	d9002c17 	ldw	r4,176(sp)
  801b74:	d8800215 	stw	r2,8(sp)
  801b78:	d8802604 	addi	r2,sp,152
  801b7c:	d8c00015 	stw	r3,0(sp)
  801b80:	d8800115 	stw	r2,4(sp)
  801b84:	01c00084 	movi	r7,2
  801b88:	980d883a 	mov	r6,r19
  801b8c:	d8c03c15 	stw	r3,240(sp)
  801b90:	da003d15 	stw	r8,244(sp)
  801b94:	0802a980 	call	802a98 <_dtoa_r>
  801b98:	1021883a 	mov	r16,r2
  801b9c:	008019c4 	movi	r2,103
  801ba0:	d8c03c17 	ldw	r3,240(sp)
  801ba4:	da003d17 	ldw	r8,244(sp)
  801ba8:	88817126 	beq	r17,r2,802170 <___vfprintf_internal_r+0x1cfc>
  801bac:	008011c4 	movi	r2,71
  801bb0:	88829226 	beq	r17,r2,8025fc <___vfprintf_internal_r+0x2188>
  801bb4:	80f9883a 	add	fp,r16,r3
  801bb8:	d9003617 	ldw	r4,216(sp)
  801bbc:	000d883a 	mov	r6,zero
  801bc0:	000f883a 	mov	r7,zero
  801bc4:	980b883a 	mov	r5,r19
  801bc8:	da003d15 	stw	r8,244(sp)
  801bcc:	080b6e80 	call	80b6e8 <__eqdf2>
  801bd0:	da003d17 	ldw	r8,244(sp)
  801bd4:	10018d26 	beq	r2,zero,80220c <___vfprintf_internal_r+0x1d98>
  801bd8:	d8802117 	ldw	r2,132(sp)
  801bdc:	1700062e 	bgeu	r2,fp,801bf8 <___vfprintf_internal_r+0x1784>
  801be0:	01000c04 	movi	r4,48
  801be4:	10c00044 	addi	r3,r2,1
  801be8:	d8c02115 	stw	r3,132(sp)
  801bec:	11000005 	stb	r4,0(r2)
  801bf0:	d8802117 	ldw	r2,132(sp)
  801bf4:	173ffb36 	bltu	r2,fp,801be4 <__alt_data_end+0xff801be4>
  801bf8:	1405c83a 	sub	r2,r2,r16
  801bfc:	d8803315 	stw	r2,204(sp)
  801c00:	008011c4 	movi	r2,71
  801c04:	b0817626 	beq	r22,r2,8021e0 <___vfprintf_internal_r+0x1d6c>
  801c08:	00801944 	movi	r2,101
  801c0c:	1442810e 	bge	r2,r17,802614 <___vfprintf_internal_r+0x21a0>
  801c10:	d8c02617 	ldw	r3,152(sp)
  801c14:	00801984 	movi	r2,102
  801c18:	d8c03215 	stw	r3,200(sp)
  801c1c:	8881fe26 	beq	r17,r2,802418 <___vfprintf_internal_r+0x1fa4>
  801c20:	d8c03217 	ldw	r3,200(sp)
  801c24:	d9003317 	ldw	r4,204(sp)
  801c28:	1901dd16 	blt	r3,r4,8023a0 <___vfprintf_internal_r+0x1f2c>
  801c2c:	9480004c 	andi	r18,r18,1
  801c30:	90022b1e 	bne	r18,zero,8024e0 <___vfprintf_internal_r+0x206c>
  801c34:	1805883a 	mov	r2,r3
  801c38:	18028016 	blt	r3,zero,80263c <___vfprintf_internal_r+0x21c8>
  801c3c:	d8c03217 	ldw	r3,200(sp)
  801c40:	044019c4 	movi	r17,103
  801c44:	d8c02e15 	stw	r3,184(sp)
  801c48:	df002a07 	ldb	fp,168(sp)
  801c4c:	e001531e 	bne	fp,zero,80219c <___vfprintf_internal_r+0x1d28>
  801c50:	df002783 	ldbu	fp,158(sp)
  801c54:	d8802a15 	stw	r2,168(sp)
  801c58:	dc802b17 	ldw	r18,172(sp)
  801c5c:	d8002915 	stw	zero,164(sp)
  801c60:	003bd106 	br	800ba8 <__alt_data_end+0xff800ba8>
  801c64:	d8802d17 	ldw	r2,180(sp)
  801c68:	d8c02d17 	ldw	r3,180(sp)
  801c6c:	d9002d17 	ldw	r4,180(sp)
  801c70:	10800017 	ldw	r2,0(r2)
  801c74:	18c00117 	ldw	r3,4(r3)
  801c78:	21000204 	addi	r4,r4,8
  801c7c:	d8803615 	stw	r2,216(sp)
  801c80:	d8c03815 	stw	r3,224(sp)
  801c84:	d9002d15 	stw	r4,180(sp)
  801c88:	003b7506 	br	800a60 <__alt_data_end+0xff800a60>
  801c8c:	ac400007 	ldb	r17,0(r21)
  801c90:	003a5906 	br	8005f8 <__alt_data_end+0xff8005f8>
  801c94:	9080100c 	andi	r2,r18,64
  801c98:	1000a826 	beq	r2,zero,801f3c <___vfprintf_internal_r+0x1ac8>
  801c9c:	d9002d17 	ldw	r4,180(sp)
  801ca0:	002d883a 	mov	r22,zero
  801ca4:	24c0000b 	ldhu	r19,0(r4)
  801ca8:	21000104 	addi	r4,r4,4
  801cac:	d9002d15 	stw	r4,180(sp)
  801cb0:	003ccb06 	br	800fe0 <__alt_data_end+0xff800fe0>
  801cb4:	d8c02d17 	ldw	r3,180(sp)
  801cb8:	d9002917 	ldw	r4,164(sp)
  801cbc:	002d883a 	mov	r22,zero
  801cc0:	18800104 	addi	r2,r3,4
  801cc4:	1cc00017 	ldw	r19,0(r3)
  801cc8:	203ebb0e 	bge	r4,zero,8017b8 <__alt_data_end+0xff8017b8>
  801ccc:	003ef106 	br	801894 <__alt_data_end+0xff801894>
  801cd0:	9080040c 	andi	r2,r18,16
  801cd4:	1000921e 	bne	r2,zero,801f20 <___vfprintf_internal_r+0x1aac>
  801cd8:	9480100c 	andi	r18,r18,64
  801cdc:	90013926 	beq	r18,zero,8021c4 <___vfprintf_internal_r+0x1d50>
  801ce0:	d9002d17 	ldw	r4,180(sp)
  801ce4:	d9402f17 	ldw	r5,188(sp)
  801ce8:	20800017 	ldw	r2,0(r4)
  801cec:	21000104 	addi	r4,r4,4
  801cf0:	d9002d15 	stw	r4,180(sp)
  801cf4:	1140000d 	sth	r5,0(r2)
  801cf8:	003a1606 	br	800554 <__alt_data_end+0xff800554>
  801cfc:	9080100c 	andi	r2,r18,64
  801d00:	10008026 	beq	r2,zero,801f04 <___vfprintf_internal_r+0x1a90>
  801d04:	d8c02d17 	ldw	r3,180(sp)
  801d08:	1cc0000f 	ldh	r19,0(r3)
  801d0c:	18c00104 	addi	r3,r3,4
  801d10:	d8c02d15 	stw	r3,180(sp)
  801d14:	982dd7fa 	srai	r22,r19,31
  801d18:	b005883a 	mov	r2,r22
  801d1c:	003b1f06 	br	80099c <__alt_data_end+0xff80099c>
  801d20:	9080100c 	andi	r2,r18,64
  801d24:	d8002785 	stb	zero,158(sp)
  801d28:	10008a1e 	bne	r2,zero,801f54 <___vfprintf_internal_r+0x1ae0>
  801d2c:	d9402d17 	ldw	r5,180(sp)
  801d30:	d8c02917 	ldw	r3,164(sp)
  801d34:	002d883a 	mov	r22,zero
  801d38:	28800104 	addi	r2,r5,4
  801d3c:	2cc00017 	ldw	r19,0(r5)
  801d40:	183e4b0e 	bge	r3,zero,801670 <__alt_data_end+0xff801670>
  801d44:	9d86b03a 	or	r3,r19,r22
  801d48:	d8802d15 	stw	r2,180(sp)
  801d4c:	183e4c1e 	bne	r3,zero,801680 <__alt_data_end+0xff801680>
  801d50:	0039883a 	mov	fp,zero
  801d54:	0005883a 	mov	r2,zero
  801d58:	003d4006 	br	80125c <__alt_data_end+0xff80125c>
  801d5c:	01402074 	movhi	r5,129
  801d60:	297cce84 	addi	r5,r5,-3270
  801d64:	d9402b15 	stw	r5,172(sp)
  801d68:	d9402b17 	ldw	r5,172(sp)
  801d6c:	1c47883a 	add	r3,r3,r17
  801d70:	10800044 	addi	r2,r2,1
  801d74:	41400015 	stw	r5,0(r8)
  801d78:	44400115 	stw	r17,4(r8)
  801d7c:	d8c02015 	stw	r3,128(sp)
  801d80:	d8801f15 	stw	r2,124(sp)
  801d84:	010001c4 	movi	r4,7
  801d88:	20bec816 	blt	r4,r2,8018ac <__alt_data_end+0xff8018ac>
  801d8c:	42000204 	addi	r8,r8,8
  801d90:	003ecd06 	br	8018c8 <__alt_data_end+0xff8018c8>
  801d94:	d9002917 	ldw	r4,164(sp)
  801d98:	d8002785 	stb	zero,158(sp)
  801d9c:	203d2d16 	blt	r4,zero,801254 <__alt_data_end+0xff801254>
  801da0:	00bfdfc4 	movi	r2,-129
  801da4:	90a4703a 	and	r18,r18,r2
  801da8:	003a9106 	br	8007f0 <__alt_data_end+0xff8007f0>
  801dac:	01002074 	movhi	r4,129
  801db0:	213cce84 	addi	r4,r4,-3270
  801db4:	d9002b15 	stw	r4,172(sp)
  801db8:	003c0c06 	br	800dec <__alt_data_end+0xff800dec>
  801dbc:	d9002c17 	ldw	r4,176(sp)
  801dc0:	d9801e04 	addi	r6,sp,120
  801dc4:	b80b883a 	mov	r5,r23
  801dc8:	0807a700 	call	807a70 <__sprint_r>
  801dcc:	103aab1e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  801dd0:	d8c02017 	ldw	r3,128(sp)
  801dd4:	da000404 	addi	r8,sp,16
  801dd8:	003d4106 	br	8012e0 <__alt_data_end+0xff8012e0>
  801ddc:	d8801f17 	ldw	r2,124(sp)
  801de0:	01402074 	movhi	r5,129
  801de4:	01000044 	movi	r4,1
  801de8:	18c00044 	addi	r3,r3,1
  801dec:	10800044 	addi	r2,r2,1
  801df0:	297cce04 	addi	r5,r5,-3272
  801df4:	41000115 	stw	r4,4(r8)
  801df8:	41400015 	stw	r5,0(r8)
  801dfc:	d8c02015 	stw	r3,128(sp)
  801e00:	d8801f15 	stw	r2,124(sp)
  801e04:	010001c4 	movi	r4,7
  801e08:	20805c16 	blt	r4,r2,801f7c <___vfprintf_internal_r+0x1b08>
  801e0c:	42000204 	addi	r8,r8,8
  801e10:	8800041e 	bne	r17,zero,801e24 <___vfprintf_internal_r+0x19b0>
  801e14:	d8803317 	ldw	r2,204(sp)
  801e18:	1000021e 	bne	r2,zero,801e24 <___vfprintf_internal_r+0x19b0>
  801e1c:	9080004c 	andi	r2,r18,1
  801e20:	103c0926 	beq	r2,zero,800e48 <__alt_data_end+0xff800e48>
  801e24:	d9003717 	ldw	r4,220(sp)
  801e28:	d8801f17 	ldw	r2,124(sp)
  801e2c:	d9403417 	ldw	r5,208(sp)
  801e30:	20c7883a 	add	r3,r4,r3
  801e34:	10800044 	addi	r2,r2,1
  801e38:	41000115 	stw	r4,4(r8)
  801e3c:	41400015 	stw	r5,0(r8)
  801e40:	d8c02015 	stw	r3,128(sp)
  801e44:	d8801f15 	stw	r2,124(sp)
  801e48:	010001c4 	movi	r4,7
  801e4c:	20812116 	blt	r4,r2,8022d4 <___vfprintf_internal_r+0x1e60>
  801e50:	42000204 	addi	r8,r8,8
  801e54:	0463c83a 	sub	r17,zero,r17
  801e58:	0440730e 	bge	zero,r17,802028 <___vfprintf_internal_r+0x1bb4>
  801e5c:	05800404 	movi	r22,16
  801e60:	b440860e 	bge	r22,r17,80207c <___vfprintf_internal_r+0x1c08>
  801e64:	01402074 	movhi	r5,129
  801e68:	297cce84 	addi	r5,r5,-3270
  801e6c:	d9402b15 	stw	r5,172(sp)
  801e70:	070001c4 	movi	fp,7
  801e74:	dcc02c17 	ldw	r19,176(sp)
  801e78:	00000306 	br	801e88 <___vfprintf_internal_r+0x1a14>
  801e7c:	42000204 	addi	r8,r8,8
  801e80:	8c7ffc04 	addi	r17,r17,-16
  801e84:	b440800e 	bge	r22,r17,802088 <___vfprintf_internal_r+0x1c14>
  801e88:	18c00404 	addi	r3,r3,16
  801e8c:	10800044 	addi	r2,r2,1
  801e90:	45000015 	stw	r20,0(r8)
  801e94:	45800115 	stw	r22,4(r8)
  801e98:	d8c02015 	stw	r3,128(sp)
  801e9c:	d8801f15 	stw	r2,124(sp)
  801ea0:	e0bff60e 	bge	fp,r2,801e7c <__alt_data_end+0xff801e7c>
  801ea4:	d9801e04 	addi	r6,sp,120
  801ea8:	b80b883a 	mov	r5,r23
  801eac:	9809883a 	mov	r4,r19
  801eb0:	0807a700 	call	807a70 <__sprint_r>
  801eb4:	103a711e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  801eb8:	d8c02017 	ldw	r3,128(sp)
  801ebc:	d8801f17 	ldw	r2,124(sp)
  801ec0:	da000404 	addi	r8,sp,16
  801ec4:	003fee06 	br	801e80 <__alt_data_end+0xff801e80>
  801ec8:	00bfffc4 	movi	r2,-1
  801ecc:	003a6f06 	br	80088c <__alt_data_end+0xff80088c>
  801ed0:	008011c4 	movi	r2,71
  801ed4:	1440b816 	blt	r2,r17,8021b8 <___vfprintf_internal_r+0x1d44>
  801ed8:	04002074 	movhi	r16,129
  801edc:	843cc004 	addi	r16,r16,-3328
  801ee0:	00c000c4 	movi	r3,3
  801ee4:	00bfdfc4 	movi	r2,-129
  801ee8:	d8c02a15 	stw	r3,168(sp)
  801eec:	90a4703a 	and	r18,r18,r2
  801ef0:	df002783 	ldbu	fp,158(sp)
  801ef4:	d8c02e15 	stw	r3,184(sp)
  801ef8:	d8002915 	stw	zero,164(sp)
  801efc:	d8003215 	stw	zero,200(sp)
  801f00:	003b2906 	br	800ba8 <__alt_data_end+0xff800ba8>
  801f04:	d9002d17 	ldw	r4,180(sp)
  801f08:	24c00017 	ldw	r19,0(r4)
  801f0c:	21000104 	addi	r4,r4,4
  801f10:	d9002d15 	stw	r4,180(sp)
  801f14:	982dd7fa 	srai	r22,r19,31
  801f18:	b005883a 	mov	r2,r22
  801f1c:	003a9f06 	br	80099c <__alt_data_end+0xff80099c>
  801f20:	d9402d17 	ldw	r5,180(sp)
  801f24:	d8c02f17 	ldw	r3,188(sp)
  801f28:	28800017 	ldw	r2,0(r5)
  801f2c:	29400104 	addi	r5,r5,4
  801f30:	d9402d15 	stw	r5,180(sp)
  801f34:	10c00015 	stw	r3,0(r2)
  801f38:	00398606 	br	800554 <__alt_data_end+0xff800554>
  801f3c:	d9402d17 	ldw	r5,180(sp)
  801f40:	002d883a 	mov	r22,zero
  801f44:	2cc00017 	ldw	r19,0(r5)
  801f48:	29400104 	addi	r5,r5,4
  801f4c:	d9402d15 	stw	r5,180(sp)
  801f50:	003c2306 	br	800fe0 <__alt_data_end+0xff800fe0>
  801f54:	d8c02d17 	ldw	r3,180(sp)
  801f58:	d9002917 	ldw	r4,164(sp)
  801f5c:	002d883a 	mov	r22,zero
  801f60:	18800104 	addi	r2,r3,4
  801f64:	1cc0000b 	ldhu	r19,0(r3)
  801f68:	203dc10e 	bge	r4,zero,801670 <__alt_data_end+0xff801670>
  801f6c:	003f7506 	br	801d44 <__alt_data_end+0xff801d44>
  801f70:	04002074 	movhi	r16,129
  801f74:	843cbe04 	addi	r16,r16,-3336
  801f78:	003acc06 	br	800aac <__alt_data_end+0xff800aac>
  801f7c:	d9002c17 	ldw	r4,176(sp)
  801f80:	d9801e04 	addi	r6,sp,120
  801f84:	b80b883a 	mov	r5,r23
  801f88:	0807a700 	call	807a70 <__sprint_r>
  801f8c:	103a3b1e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  801f90:	dc402617 	ldw	r17,152(sp)
  801f94:	d8c02017 	ldw	r3,128(sp)
  801f98:	da000404 	addi	r8,sp,16
  801f9c:	003f9c06 	br	801e10 <__alt_data_end+0xff801e10>
  801fa0:	ac400043 	ldbu	r17,1(r21)
  801fa4:	94800814 	ori	r18,r18,32
  801fa8:	ad400044 	addi	r21,r21,1
  801fac:	8c403fcc 	andi	r17,r17,255
  801fb0:	8c40201c 	xori	r17,r17,128
  801fb4:	8c7fe004 	addi	r17,r17,-128
  801fb8:	00398f06 	br	8005f8 <__alt_data_end+0xff8005f8>
  801fbc:	d8c02d15 	stw	r3,180(sp)
  801fc0:	0039883a 	mov	fp,zero
  801fc4:	003e3506 	br	80189c <__alt_data_end+0xff80189c>
  801fc8:	d9002c17 	ldw	r4,176(sp)
  801fcc:	d9801e04 	addi	r6,sp,120
  801fd0:	b80b883a 	mov	r5,r23
  801fd4:	0807a700 	call	807a70 <__sprint_r>
  801fd8:	103a281e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  801fdc:	d8c02017 	ldw	r3,128(sp)
  801fe0:	da000404 	addi	r8,sp,16
  801fe4:	003cd006 	br	801328 <__alt_data_end+0xff801328>
  801fe8:	8009883a 	mov	r4,r16
  801fec:	da003d15 	stw	r8,244(sp)
  801ff0:	08003dc0 	call	8003dc <strlen>
  801ff4:	d8802e15 	stw	r2,184(sp)
  801ff8:	da003d17 	ldw	r8,244(sp)
  801ffc:	103c340e 	bge	r2,zero,8010d0 <__alt_data_end+0xff8010d0>
  802000:	0005883a 	mov	r2,zero
  802004:	003c3206 	br	8010d0 <__alt_data_end+0xff8010d0>
  802008:	d9002c17 	ldw	r4,176(sp)
  80200c:	d9801e04 	addi	r6,sp,120
  802010:	b80b883a 	mov	r5,r23
  802014:	0807a700 	call	807a70 <__sprint_r>
  802018:	103a181e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  80201c:	d8c02017 	ldw	r3,128(sp)
  802020:	d8801f17 	ldw	r2,124(sp)
  802024:	da000404 	addi	r8,sp,16
  802028:	d9403317 	ldw	r5,204(sp)
  80202c:	10800044 	addi	r2,r2,1
  802030:	44000015 	stw	r16,0(r8)
  802034:	28c7883a 	add	r3,r5,r3
  802038:	003b7d06 	br	800e30 <__alt_data_end+0xff800e30>
  80203c:	01002074 	movhi	r4,129
  802040:	213cd284 	addi	r4,r4,-3254
  802044:	d9003515 	stw	r4,212(sp)
  802048:	003b1406 	br	800c9c <__alt_data_end+0xff800c9c>
  80204c:	013fffc4 	movi	r4,-1
  802050:	003a3506 	br	800928 <__alt_data_end+0xff800928>
  802054:	0023883a 	mov	r17,zero
  802058:	003d9d06 	br	8016d0 <__alt_data_end+0xff8016d0>
  80205c:	d9002c17 	ldw	r4,176(sp)
  802060:	d9801e04 	addi	r6,sp,120
  802064:	b80b883a 	mov	r5,r23
  802068:	0807a700 	call	807a70 <__sprint_r>
  80206c:	103a031e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  802070:	d8c02017 	ldw	r3,128(sp)
  802074:	da000404 	addi	r8,sp,16
  802078:	003d9406 	br	8016cc <__alt_data_end+0xff8016cc>
  80207c:	01002074 	movhi	r4,129
  802080:	213cce84 	addi	r4,r4,-3270
  802084:	d9002b15 	stw	r4,172(sp)
  802088:	d9002b17 	ldw	r4,172(sp)
  80208c:	1c47883a 	add	r3,r3,r17
  802090:	10800044 	addi	r2,r2,1
  802094:	41000015 	stw	r4,0(r8)
  802098:	44400115 	stw	r17,4(r8)
  80209c:	d8c02015 	stw	r3,128(sp)
  8020a0:	d8801f15 	stw	r2,124(sp)
  8020a4:	010001c4 	movi	r4,7
  8020a8:	20bfd716 	blt	r4,r2,802008 <__alt_data_end+0xff802008>
  8020ac:	42000204 	addi	r8,r8,8
  8020b0:	003fdd06 	br	802028 <__alt_data_end+0xff802028>
  8020b4:	d9002c17 	ldw	r4,176(sp)
  8020b8:	d9801e04 	addi	r6,sp,120
  8020bc:	b80b883a 	mov	r5,r23
  8020c0:	0807a700 	call	807a70 <__sprint_r>
  8020c4:	1039ed1e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  8020c8:	d8802617 	ldw	r2,152(sp)
  8020cc:	d8c02017 	ldw	r3,128(sp)
  8020d0:	da000404 	addi	r8,sp,16
  8020d4:	003e1006 	br	801918 <__alt_data_end+0xff801918>
  8020d8:	00800044 	movi	r2,1
  8020dc:	10803fcc 	andi	r2,r2,255
  8020e0:	00c00044 	movi	r3,1
  8020e4:	10fa3526 	beq	r2,r3,8009bc <__alt_data_end+0xff8009bc>
  8020e8:	00c00084 	movi	r3,2
  8020ec:	10fbcb26 	beq	r2,r3,80101c <__alt_data_end+0xff80101c>
  8020f0:	003a8f06 	br	800b30 <__alt_data_end+0xff800b30>
  8020f4:	01002074 	movhi	r4,129
  8020f8:	213cd284 	addi	r4,r4,-3254
  8020fc:	d9003515 	stw	r4,212(sp)
  802100:	003b7606 	br	800edc <__alt_data_end+0xff800edc>
  802104:	d8802917 	ldw	r2,164(sp)
  802108:	00c00184 	movi	r3,6
  80210c:	1880012e 	bgeu	r3,r2,802114 <___vfprintf_internal_r+0x1ca0>
  802110:	1805883a 	mov	r2,r3
  802114:	d8802e15 	stw	r2,184(sp)
  802118:	1000ef16 	blt	r2,zero,8024d8 <___vfprintf_internal_r+0x2064>
  80211c:	04002074 	movhi	r16,129
  802120:	d8802a15 	stw	r2,168(sp)
  802124:	dcc02d15 	stw	r19,180(sp)
  802128:	d8002915 	stw	zero,164(sp)
  80212c:	d8003215 	stw	zero,200(sp)
  802130:	843ccc04 	addi	r16,r16,-3280
  802134:	0039883a 	mov	fp,zero
  802138:	003aa206 	br	800bc4 <__alt_data_end+0xff800bc4>
  80213c:	0021883a 	mov	r16,zero
  802140:	003e0706 	br	801960 <__alt_data_end+0xff801960>
  802144:	d9002c17 	ldw	r4,176(sp)
  802148:	d9801e04 	addi	r6,sp,120
  80214c:	b80b883a 	mov	r5,r23
  802150:	0807a700 	call	807a70 <__sprint_r>
  802154:	1039c91e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  802158:	d8802617 	ldw	r2,152(sp)
  80215c:	d9403317 	ldw	r5,204(sp)
  802160:	d8c02017 	ldw	r3,128(sp)
  802164:	da000404 	addi	r8,sp,16
  802168:	2885c83a 	sub	r2,r5,r2
  80216c:	003dfb06 	br	80195c <__alt_data_end+0xff80195c>
  802170:	9080004c 	andi	r2,r18,1
  802174:	103e8f1e 	bne	r2,zero,801bb4 <__alt_data_end+0xff801bb4>
  802178:	d8802117 	ldw	r2,132(sp)
  80217c:	003e9e06 	br	801bf8 <__alt_data_end+0xff801bf8>
  802180:	1025883a 	mov	r18,r2
  802184:	0039883a 	mov	fp,zero
  802188:	00800084 	movi	r2,2
  80218c:	003fd306 	br	8020dc <__alt_data_end+0xff8020dc>
  802190:	07000b44 	movi	fp,45
  802194:	df002785 	stb	fp,158(sp)
  802198:	003a4006 	br	800a9c <__alt_data_end+0xff800a9c>
  80219c:	00c00b44 	movi	r3,45
  8021a0:	d8c02785 	stb	r3,158(sp)
  8021a4:	d8802a15 	stw	r2,168(sp)
  8021a8:	dc802b17 	ldw	r18,172(sp)
  8021ac:	d8002915 	stw	zero,164(sp)
  8021b0:	07000b44 	movi	fp,45
  8021b4:	003a8006 	br	800bb8 <__alt_data_end+0xff800bb8>
  8021b8:	04002074 	movhi	r16,129
  8021bc:	843cc104 	addi	r16,r16,-3324
  8021c0:	003f4706 	br	801ee0 <__alt_data_end+0xff801ee0>
  8021c4:	d8c02d17 	ldw	r3,180(sp)
  8021c8:	d9002f17 	ldw	r4,188(sp)
  8021cc:	18800017 	ldw	r2,0(r3)
  8021d0:	18c00104 	addi	r3,r3,4
  8021d4:	d8c02d15 	stw	r3,180(sp)
  8021d8:	11000015 	stw	r4,0(r2)
  8021dc:	0038dd06 	br	800554 <__alt_data_end+0xff800554>
  8021e0:	dd802617 	ldw	r22,152(sp)
  8021e4:	00bfff44 	movi	r2,-3
  8021e8:	b0801c16 	blt	r22,r2,80225c <___vfprintf_internal_r+0x1de8>
  8021ec:	d9402917 	ldw	r5,164(sp)
  8021f0:	2d801a16 	blt	r5,r22,80225c <___vfprintf_internal_r+0x1de8>
  8021f4:	dd803215 	stw	r22,200(sp)
  8021f8:	003e8906 	br	801c20 <__alt_data_end+0xff801c20>
  8021fc:	01002074 	movhi	r4,129
  802200:	213cce84 	addi	r4,r4,-3270
  802204:	d9002b15 	stw	r4,172(sp)
  802208:	003c9106 	br	801450 <__alt_data_end+0xff801450>
  80220c:	e005883a 	mov	r2,fp
  802210:	003e7906 	br	801bf8 <__alt_data_end+0xff801bf8>
  802214:	d9402917 	ldw	r5,164(sp)
  802218:	df002783 	ldbu	fp,158(sp)
  80221c:	dcc02d15 	stw	r19,180(sp)
  802220:	d9402a15 	stw	r5,168(sp)
  802224:	d9402e15 	stw	r5,184(sp)
  802228:	d8002915 	stw	zero,164(sp)
  80222c:	d8003215 	stw	zero,200(sp)
  802230:	003a5d06 	br	800ba8 <__alt_data_end+0xff800ba8>
  802234:	9080004c 	andi	r2,r18,1
  802238:	0039883a 	mov	fp,zero
  80223c:	10000426 	beq	r2,zero,802250 <___vfprintf_internal_r+0x1ddc>
  802240:	00800c04 	movi	r2,48
  802244:	dc001dc4 	addi	r16,sp,119
  802248:	d8801dc5 	stb	r2,119(sp)
  80224c:	003b8006 	br	801050 <__alt_data_end+0xff801050>
  802250:	d8002e15 	stw	zero,184(sp)
  802254:	dc001e04 	addi	r16,sp,120
  802258:	003a4d06 	br	800b90 <__alt_data_end+0xff800b90>
  80225c:	8c7fff84 	addi	r17,r17,-2
  802260:	b5bfffc4 	addi	r22,r22,-1
  802264:	dd802615 	stw	r22,152(sp)
  802268:	dc4022c5 	stb	r17,139(sp)
  80226c:	b000bf16 	blt	r22,zero,80256c <___vfprintf_internal_r+0x20f8>
  802270:	00800ac4 	movi	r2,43
  802274:	d8802305 	stb	r2,140(sp)
  802278:	00800244 	movi	r2,9
  80227c:	15807016 	blt	r2,r22,802440 <___vfprintf_internal_r+0x1fcc>
  802280:	00800c04 	movi	r2,48
  802284:	b5800c04 	addi	r22,r22,48
  802288:	d8802345 	stb	r2,141(sp)
  80228c:	dd802385 	stb	r22,142(sp)
  802290:	d88023c4 	addi	r2,sp,143
  802294:	df0022c4 	addi	fp,sp,139
  802298:	d8c03317 	ldw	r3,204(sp)
  80229c:	1739c83a 	sub	fp,r2,fp
  8022a0:	d9003317 	ldw	r4,204(sp)
  8022a4:	e0c7883a 	add	r3,fp,r3
  8022a8:	df003a15 	stw	fp,232(sp)
  8022ac:	d8c02e15 	stw	r3,184(sp)
  8022b0:	00800044 	movi	r2,1
  8022b4:	1100b30e 	bge	r2,r4,802584 <___vfprintf_internal_r+0x2110>
  8022b8:	d8c02e17 	ldw	r3,184(sp)
  8022bc:	18c00044 	addi	r3,r3,1
  8022c0:	d8c02e15 	stw	r3,184(sp)
  8022c4:	1805883a 	mov	r2,r3
  8022c8:	1800ac16 	blt	r3,zero,80257c <___vfprintf_internal_r+0x2108>
  8022cc:	d8003215 	stw	zero,200(sp)
  8022d0:	003e5d06 	br	801c48 <__alt_data_end+0xff801c48>
  8022d4:	d9002c17 	ldw	r4,176(sp)
  8022d8:	d9801e04 	addi	r6,sp,120
  8022dc:	b80b883a 	mov	r5,r23
  8022e0:	0807a700 	call	807a70 <__sprint_r>
  8022e4:	1039651e 	bne	r2,zero,80087c <__alt_data_end+0xff80087c>
  8022e8:	dc402617 	ldw	r17,152(sp)
  8022ec:	d8c02017 	ldw	r3,128(sp)
  8022f0:	d8801f17 	ldw	r2,124(sp)
  8022f4:	da000404 	addi	r8,sp,16
  8022f8:	003ed606 	br	801e54 <__alt_data_end+0xff801e54>
  8022fc:	582b883a 	mov	r21,r11
  802300:	d8002915 	stw	zero,164(sp)
  802304:	0038bd06 	br	8005fc <__alt_data_end+0xff8005fc>
  802308:	d8802917 	ldw	r2,164(sp)
  80230c:	103e071e 	bne	r2,zero,801b2c <__alt_data_end+0xff801b2c>
  802310:	dc002915 	stw	r16,164(sp)
  802314:	003e0506 	br	801b2c <__alt_data_end+0xff801b2c>
  802318:	d9002917 	ldw	r4,164(sp)
  80231c:	20c00044 	addi	r3,r4,1
  802320:	003e0f06 	br	801b60 <__alt_data_end+0xff801b60>
  802324:	01400184 	movi	r5,6
  802328:	d9402915 	stw	r5,164(sp)
  80232c:	003dff06 	br	801b2c <__alt_data_end+0xff801b2c>
  802330:	d8802104 	addi	r2,sp,132
  802334:	d8800315 	stw	r2,12(sp)
  802338:	d8802504 	addi	r2,sp,148
  80233c:	d8800215 	stw	r2,8(sp)
  802340:	d8802604 	addi	r2,sp,152
  802344:	d8800115 	stw	r2,4(sp)
  802348:	d8802917 	ldw	r2,164(sp)
  80234c:	d9403617 	ldw	r5,216(sp)
  802350:	d9002c17 	ldw	r4,176(sp)
  802354:	d8800015 	stw	r2,0(sp)
  802358:	01c000c4 	movi	r7,3
  80235c:	980d883a 	mov	r6,r19
  802360:	da003d15 	stw	r8,244(sp)
  802364:	0802a980 	call	802a98 <_dtoa_r>
  802368:	d8c02917 	ldw	r3,164(sp)
  80236c:	da003d17 	ldw	r8,244(sp)
  802370:	1021883a 	mov	r16,r2
  802374:	10f9883a 	add	fp,r2,r3
  802378:	81000007 	ldb	r4,0(r16)
  80237c:	00800c04 	movi	r2,48
  802380:	20805e26 	beq	r4,r2,8024fc <___vfprintf_internal_r+0x2088>
  802384:	d8c02617 	ldw	r3,152(sp)
  802388:	e0f9883a 	add	fp,fp,r3
  80238c:	003e0a06 	br	801bb8 <__alt_data_end+0xff801bb8>
  802390:	00c00b44 	movi	r3,45
  802394:	24e0003c 	xorhi	r19,r4,32768
  802398:	d8c02a05 	stb	r3,168(sp)
  80239c:	003de906 	br	801b44 <__alt_data_end+0xff801b44>
  8023a0:	d8c03217 	ldw	r3,200(sp)
  8023a4:	00c07a0e 	bge	zero,r3,802590 <___vfprintf_internal_r+0x211c>
  8023a8:	00800044 	movi	r2,1
  8023ac:	d9003317 	ldw	r4,204(sp)
  8023b0:	1105883a 	add	r2,r2,r4
  8023b4:	d8802e15 	stw	r2,184(sp)
  8023b8:	10004e16 	blt	r2,zero,8024f4 <___vfprintf_internal_r+0x2080>
  8023bc:	044019c4 	movi	r17,103
  8023c0:	003e2106 	br	801c48 <__alt_data_end+0xff801c48>
  8023c4:	d9002917 	ldw	r4,164(sp)
  8023c8:	d8802104 	addi	r2,sp,132
  8023cc:	d8800315 	stw	r2,12(sp)
  8023d0:	d9000015 	stw	r4,0(sp)
  8023d4:	d8802504 	addi	r2,sp,148
  8023d8:	d9403617 	ldw	r5,216(sp)
  8023dc:	d9002c17 	ldw	r4,176(sp)
  8023e0:	d8800215 	stw	r2,8(sp)
  8023e4:	d8802604 	addi	r2,sp,152
  8023e8:	d8800115 	stw	r2,4(sp)
  8023ec:	01c000c4 	movi	r7,3
  8023f0:	980d883a 	mov	r6,r19
  8023f4:	da003d15 	stw	r8,244(sp)
  8023f8:	0802a980 	call	802a98 <_dtoa_r>
  8023fc:	d8c02917 	ldw	r3,164(sp)
  802400:	da003d17 	ldw	r8,244(sp)
  802404:	1021883a 	mov	r16,r2
  802408:	00801184 	movi	r2,70
  80240c:	80f9883a 	add	fp,r16,r3
  802410:	88bfd926 	beq	r17,r2,802378 <__alt_data_end+0xff802378>
  802414:	003de806 	br	801bb8 <__alt_data_end+0xff801bb8>
  802418:	d9002917 	ldw	r4,164(sp)
  80241c:	00c04d0e 	bge	zero,r3,802554 <___vfprintf_internal_r+0x20e0>
  802420:	2000441e 	bne	r4,zero,802534 <___vfprintf_internal_r+0x20c0>
  802424:	9480004c 	andi	r18,r18,1
  802428:	9000421e 	bne	r18,zero,802534 <___vfprintf_internal_r+0x20c0>
  80242c:	1805883a 	mov	r2,r3
  802430:	18007016 	blt	r3,zero,8025f4 <___vfprintf_internal_r+0x2180>
  802434:	d8c03217 	ldw	r3,200(sp)
  802438:	d8c02e15 	stw	r3,184(sp)
  80243c:	003e0206 	br	801c48 <__alt_data_end+0xff801c48>
  802440:	df0022c4 	addi	fp,sp,139
  802444:	dc002915 	stw	r16,164(sp)
  802448:	4027883a 	mov	r19,r8
  80244c:	e021883a 	mov	r16,fp
  802450:	b009883a 	mov	r4,r22
  802454:	01400284 	movi	r5,10
  802458:	080a4240 	call	80a424 <__modsi3>
  80245c:	10800c04 	addi	r2,r2,48
  802460:	843fffc4 	addi	r16,r16,-1
  802464:	b009883a 	mov	r4,r22
  802468:	01400284 	movi	r5,10
  80246c:	80800005 	stb	r2,0(r16)
  802470:	080a3a00 	call	80a3a0 <__divsi3>
  802474:	102d883a 	mov	r22,r2
  802478:	00800244 	movi	r2,9
  80247c:	15bff416 	blt	r2,r22,802450 <__alt_data_end+0xff802450>
  802480:	9811883a 	mov	r8,r19
  802484:	b0800c04 	addi	r2,r22,48
  802488:	8027883a 	mov	r19,r16
  80248c:	997fffc4 	addi	r5,r19,-1
  802490:	98bfffc5 	stb	r2,-1(r19)
  802494:	dc002917 	ldw	r16,164(sp)
  802498:	2f006a2e 	bgeu	r5,fp,802644 <___vfprintf_internal_r+0x21d0>
  80249c:	d9c02384 	addi	r7,sp,142
  8024a0:	3ccfc83a 	sub	r7,r7,r19
  8024a4:	d9002344 	addi	r4,sp,141
  8024a8:	e1cf883a 	add	r7,fp,r7
  8024ac:	00000106 	br	8024b4 <___vfprintf_internal_r+0x2040>
  8024b0:	28800003 	ldbu	r2,0(r5)
  8024b4:	20800005 	stb	r2,0(r4)
  8024b8:	21000044 	addi	r4,r4,1
  8024bc:	29400044 	addi	r5,r5,1
  8024c0:	393ffb1e 	bne	r7,r4,8024b0 <__alt_data_end+0xff8024b0>
  8024c4:	d8802304 	addi	r2,sp,140
  8024c8:	14c5c83a 	sub	r2,r2,r19
  8024cc:	d8c02344 	addi	r3,sp,141
  8024d0:	1885883a 	add	r2,r3,r2
  8024d4:	003f7006 	br	802298 <__alt_data_end+0xff802298>
  8024d8:	0005883a 	mov	r2,zero
  8024dc:	003f0f06 	br	80211c <__alt_data_end+0xff80211c>
  8024e0:	d8c03217 	ldw	r3,200(sp)
  8024e4:	18c00044 	addi	r3,r3,1
  8024e8:	d8c02e15 	stw	r3,184(sp)
  8024ec:	1805883a 	mov	r2,r3
  8024f0:	183fb20e 	bge	r3,zero,8023bc <__alt_data_end+0xff8023bc>
  8024f4:	0005883a 	mov	r2,zero
  8024f8:	003fb006 	br	8023bc <__alt_data_end+0xff8023bc>
  8024fc:	d9003617 	ldw	r4,216(sp)
  802500:	000d883a 	mov	r6,zero
  802504:	000f883a 	mov	r7,zero
  802508:	980b883a 	mov	r5,r19
  80250c:	d8c03c15 	stw	r3,240(sp)
  802510:	da003d15 	stw	r8,244(sp)
  802514:	080b6e80 	call	80b6e8 <__eqdf2>
  802518:	d8c03c17 	ldw	r3,240(sp)
  80251c:	da003d17 	ldw	r8,244(sp)
  802520:	103f9826 	beq	r2,zero,802384 <__alt_data_end+0xff802384>
  802524:	00800044 	movi	r2,1
  802528:	10c7c83a 	sub	r3,r2,r3
  80252c:	d8c02615 	stw	r3,152(sp)
  802530:	003f9506 	br	802388 <__alt_data_end+0xff802388>
  802534:	d9002917 	ldw	r4,164(sp)
  802538:	d8c03217 	ldw	r3,200(sp)
  80253c:	20800044 	addi	r2,r4,1
  802540:	1885883a 	add	r2,r3,r2
  802544:	d8802e15 	stw	r2,184(sp)
  802548:	103dbf0e 	bge	r2,zero,801c48 <__alt_data_end+0xff801c48>
  80254c:	0005883a 	mov	r2,zero
  802550:	003dbd06 	br	801c48 <__alt_data_end+0xff801c48>
  802554:	2000211e 	bne	r4,zero,8025dc <___vfprintf_internal_r+0x2168>
  802558:	9480004c 	andi	r18,r18,1
  80255c:	90001f1e 	bne	r18,zero,8025dc <___vfprintf_internal_r+0x2168>
  802560:	00800044 	movi	r2,1
  802564:	d8802e15 	stw	r2,184(sp)
  802568:	003db706 	br	801c48 <__alt_data_end+0xff801c48>
  80256c:	00800b44 	movi	r2,45
  802570:	05adc83a 	sub	r22,zero,r22
  802574:	d8802305 	stb	r2,140(sp)
  802578:	003f3f06 	br	802278 <__alt_data_end+0xff802278>
  80257c:	0005883a 	mov	r2,zero
  802580:	003f5206 	br	8022cc <__alt_data_end+0xff8022cc>
  802584:	90a4703a 	and	r18,r18,r2
  802588:	903f4e26 	beq	r18,zero,8022c4 <__alt_data_end+0xff8022c4>
  80258c:	003f4a06 	br	8022b8 <__alt_data_end+0xff8022b8>
  802590:	00800084 	movi	r2,2
  802594:	10c5c83a 	sub	r2,r2,r3
  802598:	003f8406 	br	8023ac <__alt_data_end+0xff8023ac>
  80259c:	d8802d17 	ldw	r2,180(sp)
  8025a0:	d9002d17 	ldw	r4,180(sp)
  8025a4:	ac400043 	ldbu	r17,1(r21)
  8025a8:	10800017 	ldw	r2,0(r2)
  8025ac:	582b883a 	mov	r21,r11
  8025b0:	d8802915 	stw	r2,164(sp)
  8025b4:	20800104 	addi	r2,r4,4
  8025b8:	d9002917 	ldw	r4,164(sp)
  8025bc:	d8802d15 	stw	r2,180(sp)
  8025c0:	203e7a0e 	bge	r4,zero,801fac <__alt_data_end+0xff801fac>
  8025c4:	8c403fcc 	andi	r17,r17,255
  8025c8:	00bfffc4 	movi	r2,-1
  8025cc:	8c40201c 	xori	r17,r17,128
  8025d0:	d8802915 	stw	r2,164(sp)
  8025d4:	8c7fe004 	addi	r17,r17,-128
  8025d8:	00380706 	br	8005f8 <__alt_data_end+0xff8005f8>
  8025dc:	d8c02917 	ldw	r3,164(sp)
  8025e0:	18c00084 	addi	r3,r3,2
  8025e4:	d8c02e15 	stw	r3,184(sp)
  8025e8:	1805883a 	mov	r2,r3
  8025ec:	183d960e 	bge	r3,zero,801c48 <__alt_data_end+0xff801c48>
  8025f0:	003fd606 	br	80254c <__alt_data_end+0xff80254c>
  8025f4:	0005883a 	mov	r2,zero
  8025f8:	003f8e06 	br	802434 <__alt_data_end+0xff802434>
  8025fc:	9080004c 	andi	r2,r18,1
  802600:	103f811e 	bne	r2,zero,802408 <__alt_data_end+0xff802408>
  802604:	d8802117 	ldw	r2,132(sp)
  802608:	1405c83a 	sub	r2,r2,r16
  80260c:	d8803315 	stw	r2,204(sp)
  802610:	b47ef326 	beq	r22,r17,8021e0 <__alt_data_end+0xff8021e0>
  802614:	dd802617 	ldw	r22,152(sp)
  802618:	003f1106 	br	802260 <__alt_data_end+0xff802260>
  80261c:	d9c02785 	stb	r7,158(sp)
  802620:	00390406 	br	800a34 <__alt_data_end+0xff800a34>
  802624:	d9c02785 	stb	r7,158(sp)
  802628:	0038d306 	br	800978 <__alt_data_end+0xff800978>
  80262c:	d9c02785 	stb	r7,158(sp)
  802630:	003a6106 	br	800fb8 <__alt_data_end+0xff800fb8>
  802634:	d9c02785 	stb	r7,158(sp)
  802638:	003af806 	br	80121c <__alt_data_end+0xff80121c>
  80263c:	0005883a 	mov	r2,zero
  802640:	003d7e06 	br	801c3c <__alt_data_end+0xff801c3c>
  802644:	d8802344 	addi	r2,sp,141
  802648:	003f1306 	br	802298 <__alt_data_end+0xff802298>
  80264c:	d9c02785 	stb	r7,158(sp)
  802650:	00392306 	br	800ae0 <__alt_data_end+0xff800ae0>
  802654:	d9c02785 	stb	r7,158(sp)
  802658:	003aa906 	br	801100 <__alt_data_end+0xff801100>
  80265c:	d9c02785 	stb	r7,158(sp)
  802660:	003a3d06 	br	800f58 <__alt_data_end+0xff800f58>
  802664:	d9c02785 	stb	r7,158(sp)
  802668:	003aca06 	br	801194 <__alt_data_end+0xff801194>

0080266c <__vfprintf_internal>:
  80266c:	00802074 	movhi	r2,129
  802670:	10842704 	addi	r2,r2,4252
  802674:	300f883a 	mov	r7,r6
  802678:	280d883a 	mov	r6,r5
  80267c:	200b883a 	mov	r5,r4
  802680:	11000017 	ldw	r4,0(r2)
  802684:	08004741 	jmpi	800474 <___vfprintf_internal_r>

00802688 <__sbprintf>:
  802688:	2880030b 	ldhu	r2,12(r5)
  80268c:	2ac01917 	ldw	r11,100(r5)
  802690:	2a80038b 	ldhu	r10,14(r5)
  802694:	2a400717 	ldw	r9,28(r5)
  802698:	2a000917 	ldw	r8,36(r5)
  80269c:	defee204 	addi	sp,sp,-1144
  8026a0:	00c10004 	movi	r3,1024
  8026a4:	dc011a15 	stw	r16,1128(sp)
  8026a8:	10bfff4c 	andi	r2,r2,65533
  8026ac:	2821883a 	mov	r16,r5
  8026b0:	d8cb883a 	add	r5,sp,r3
  8026b4:	dc811c15 	stw	r18,1136(sp)
  8026b8:	dc411b15 	stw	r17,1132(sp)
  8026bc:	dfc11d15 	stw	ra,1140(sp)
  8026c0:	2025883a 	mov	r18,r4
  8026c4:	d881030d 	sth	r2,1036(sp)
  8026c8:	dac11915 	stw	r11,1124(sp)
  8026cc:	da81038d 	sth	r10,1038(sp)
  8026d0:	da410715 	stw	r9,1052(sp)
  8026d4:	da010915 	stw	r8,1060(sp)
  8026d8:	dec10015 	stw	sp,1024(sp)
  8026dc:	dec10415 	stw	sp,1040(sp)
  8026e0:	d8c10215 	stw	r3,1032(sp)
  8026e4:	d8c10515 	stw	r3,1044(sp)
  8026e8:	d8010615 	stw	zero,1048(sp)
  8026ec:	08004740 	call	800474 <___vfprintf_internal_r>
  8026f0:	1023883a 	mov	r17,r2
  8026f4:	10000416 	blt	r2,zero,802708 <__sbprintf+0x80>
  8026f8:	d9410004 	addi	r5,sp,1024
  8026fc:	9009883a 	mov	r4,r18
  802700:	080433c0 	call	80433c <_fflush_r>
  802704:	10000d1e 	bne	r2,zero,80273c <__sbprintf+0xb4>
  802708:	d881030b 	ldhu	r2,1036(sp)
  80270c:	1080100c 	andi	r2,r2,64
  802710:	10000326 	beq	r2,zero,802720 <__sbprintf+0x98>
  802714:	8080030b 	ldhu	r2,12(r16)
  802718:	10801014 	ori	r2,r2,64
  80271c:	8080030d 	sth	r2,12(r16)
  802720:	8805883a 	mov	r2,r17
  802724:	dfc11d17 	ldw	ra,1140(sp)
  802728:	dc811c17 	ldw	r18,1136(sp)
  80272c:	dc411b17 	ldw	r17,1132(sp)
  802730:	dc011a17 	ldw	r16,1128(sp)
  802734:	dec11e04 	addi	sp,sp,1144
  802738:	f800283a 	ret
  80273c:	047fffc4 	movi	r17,-1
  802740:	003ff106 	br	802708 <__alt_data_end+0xff802708>

00802744 <__swsetup_r>:
  802744:	00802074 	movhi	r2,129
  802748:	defffd04 	addi	sp,sp,-12
  80274c:	10842704 	addi	r2,r2,4252
  802750:	dc400115 	stw	r17,4(sp)
  802754:	2023883a 	mov	r17,r4
  802758:	11000017 	ldw	r4,0(r2)
  80275c:	dc000015 	stw	r16,0(sp)
  802760:	dfc00215 	stw	ra,8(sp)
  802764:	2821883a 	mov	r16,r5
  802768:	20000226 	beq	r4,zero,802774 <__swsetup_r+0x30>
  80276c:	20800e17 	ldw	r2,56(r4)
  802770:	10003126 	beq	r2,zero,802838 <__swsetup_r+0xf4>
  802774:	8080030b 	ldhu	r2,12(r16)
  802778:	10c0020c 	andi	r3,r2,8
  80277c:	1009883a 	mov	r4,r2
  802780:	18000f26 	beq	r3,zero,8027c0 <__swsetup_r+0x7c>
  802784:	80c00417 	ldw	r3,16(r16)
  802788:	18001526 	beq	r3,zero,8027e0 <__swsetup_r+0x9c>
  80278c:	1100004c 	andi	r4,r2,1
  802790:	20001c1e 	bne	r4,zero,802804 <__swsetup_r+0xc0>
  802794:	1080008c 	andi	r2,r2,2
  802798:	1000291e 	bne	r2,zero,802840 <__swsetup_r+0xfc>
  80279c:	80800517 	ldw	r2,20(r16)
  8027a0:	80800215 	stw	r2,8(r16)
  8027a4:	18001c26 	beq	r3,zero,802818 <__swsetup_r+0xd4>
  8027a8:	0005883a 	mov	r2,zero
  8027ac:	dfc00217 	ldw	ra,8(sp)
  8027b0:	dc400117 	ldw	r17,4(sp)
  8027b4:	dc000017 	ldw	r16,0(sp)
  8027b8:	dec00304 	addi	sp,sp,12
  8027bc:	f800283a 	ret
  8027c0:	2080040c 	andi	r2,r4,16
  8027c4:	10002e26 	beq	r2,zero,802880 <__swsetup_r+0x13c>
  8027c8:	2080010c 	andi	r2,r4,4
  8027cc:	10001e1e 	bne	r2,zero,802848 <__swsetup_r+0x104>
  8027d0:	80c00417 	ldw	r3,16(r16)
  8027d4:	20800214 	ori	r2,r4,8
  8027d8:	8080030d 	sth	r2,12(r16)
  8027dc:	183feb1e 	bne	r3,zero,80278c <__alt_data_end+0xff80278c>
  8027e0:	1100a00c 	andi	r4,r2,640
  8027e4:	01408004 	movi	r5,512
  8027e8:	217fe826 	beq	r4,r5,80278c <__alt_data_end+0xff80278c>
  8027ec:	800b883a 	mov	r5,r16
  8027f0:	8809883a 	mov	r4,r17
  8027f4:	08052bc0 	call	8052bc <__smakebuf_r>
  8027f8:	8080030b 	ldhu	r2,12(r16)
  8027fc:	80c00417 	ldw	r3,16(r16)
  802800:	003fe206 	br	80278c <__alt_data_end+0xff80278c>
  802804:	80800517 	ldw	r2,20(r16)
  802808:	80000215 	stw	zero,8(r16)
  80280c:	0085c83a 	sub	r2,zero,r2
  802810:	80800615 	stw	r2,24(r16)
  802814:	183fe41e 	bne	r3,zero,8027a8 <__alt_data_end+0xff8027a8>
  802818:	80c0030b 	ldhu	r3,12(r16)
  80281c:	0005883a 	mov	r2,zero
  802820:	1900200c 	andi	r4,r3,128
  802824:	203fe126 	beq	r4,zero,8027ac <__alt_data_end+0xff8027ac>
  802828:	18c01014 	ori	r3,r3,64
  80282c:	80c0030d 	sth	r3,12(r16)
  802830:	00bfffc4 	movi	r2,-1
  802834:	003fdd06 	br	8027ac <__alt_data_end+0xff8027ac>
  802838:	08047180 	call	804718 <__sinit>
  80283c:	003fcd06 	br	802774 <__alt_data_end+0xff802774>
  802840:	0005883a 	mov	r2,zero
  802844:	003fd606 	br	8027a0 <__alt_data_end+0xff8027a0>
  802848:	81400c17 	ldw	r5,48(r16)
  80284c:	28000626 	beq	r5,zero,802868 <__swsetup_r+0x124>
  802850:	80801004 	addi	r2,r16,64
  802854:	28800326 	beq	r5,r2,802864 <__swsetup_r+0x120>
  802858:	8809883a 	mov	r4,r17
  80285c:	080488c0 	call	80488c <_free_r>
  802860:	8100030b 	ldhu	r4,12(r16)
  802864:	80000c15 	stw	zero,48(r16)
  802868:	80c00417 	ldw	r3,16(r16)
  80286c:	00bff6c4 	movi	r2,-37
  802870:	1108703a 	and	r4,r2,r4
  802874:	80000115 	stw	zero,4(r16)
  802878:	80c00015 	stw	r3,0(r16)
  80287c:	003fd506 	br	8027d4 <__alt_data_end+0xff8027d4>
  802880:	00800244 	movi	r2,9
  802884:	88800015 	stw	r2,0(r17)
  802888:	20801014 	ori	r2,r4,64
  80288c:	8080030d 	sth	r2,12(r16)
  802890:	00bfffc4 	movi	r2,-1
  802894:	003fc506 	br	8027ac <__alt_data_end+0xff8027ac>

00802898 <quorem>:
  802898:	defff704 	addi	sp,sp,-36
  80289c:	dc800215 	stw	r18,8(sp)
  8028a0:	20800417 	ldw	r2,16(r4)
  8028a4:	2c800417 	ldw	r18,16(r5)
  8028a8:	dfc00815 	stw	ra,32(sp)
  8028ac:	ddc00715 	stw	r23,28(sp)
  8028b0:	dd800615 	stw	r22,24(sp)
  8028b4:	dd400515 	stw	r21,20(sp)
  8028b8:	dd000415 	stw	r20,16(sp)
  8028bc:	dcc00315 	stw	r19,12(sp)
  8028c0:	dc400115 	stw	r17,4(sp)
  8028c4:	dc000015 	stw	r16,0(sp)
  8028c8:	14807116 	blt	r2,r18,802a90 <quorem+0x1f8>
  8028cc:	94bfffc4 	addi	r18,r18,-1
  8028d0:	94ad883a 	add	r22,r18,r18
  8028d4:	b5ad883a 	add	r22,r22,r22
  8028d8:	2c400504 	addi	r17,r5,20
  8028dc:	8da9883a 	add	r20,r17,r22
  8028e0:	25400504 	addi	r21,r4,20
  8028e4:	282f883a 	mov	r23,r5
  8028e8:	adad883a 	add	r22,r21,r22
  8028ec:	a1400017 	ldw	r5,0(r20)
  8028f0:	2021883a 	mov	r16,r4
  8028f4:	b1000017 	ldw	r4,0(r22)
  8028f8:	29400044 	addi	r5,r5,1
  8028fc:	080a4980 	call	80a498 <__udivsi3>
  802900:	1027883a 	mov	r19,r2
  802904:	10002c26 	beq	r2,zero,8029b8 <quorem+0x120>
  802908:	a813883a 	mov	r9,r21
  80290c:	880b883a 	mov	r5,r17
  802910:	0009883a 	mov	r4,zero
  802914:	000d883a 	mov	r6,zero
  802918:	2a000017 	ldw	r8,0(r5)
  80291c:	49c00017 	ldw	r7,0(r9)
  802920:	29400104 	addi	r5,r5,4
  802924:	40bfffcc 	andi	r2,r8,65535
  802928:	14c5383a 	mul	r2,r2,r19
  80292c:	4010d43a 	srli	r8,r8,16
  802930:	38ffffcc 	andi	r3,r7,65535
  802934:	1105883a 	add	r2,r2,r4
  802938:	1008d43a 	srli	r4,r2,16
  80293c:	44d1383a 	mul	r8,r8,r19
  802940:	198d883a 	add	r6,r3,r6
  802944:	10ffffcc 	andi	r3,r2,65535
  802948:	30c7c83a 	sub	r3,r6,r3
  80294c:	380ed43a 	srli	r7,r7,16
  802950:	4105883a 	add	r2,r8,r4
  802954:	180dd43a 	srai	r6,r3,16
  802958:	113fffcc 	andi	r4,r2,65535
  80295c:	390fc83a 	sub	r7,r7,r4
  802960:	398d883a 	add	r6,r7,r6
  802964:	300e943a 	slli	r7,r6,16
  802968:	18ffffcc 	andi	r3,r3,65535
  80296c:	1008d43a 	srli	r4,r2,16
  802970:	38ceb03a 	or	r7,r7,r3
  802974:	49c00015 	stw	r7,0(r9)
  802978:	300dd43a 	srai	r6,r6,16
  80297c:	4a400104 	addi	r9,r9,4
  802980:	a17fe52e 	bgeu	r20,r5,802918 <__alt_data_end+0xff802918>
  802984:	b0800017 	ldw	r2,0(r22)
  802988:	10000b1e 	bne	r2,zero,8029b8 <quorem+0x120>
  80298c:	b0bfff04 	addi	r2,r22,-4
  802990:	a880082e 	bgeu	r21,r2,8029b4 <quorem+0x11c>
  802994:	b0ffff17 	ldw	r3,-4(r22)
  802998:	18000326 	beq	r3,zero,8029a8 <quorem+0x110>
  80299c:	00000506 	br	8029b4 <quorem+0x11c>
  8029a0:	10c00017 	ldw	r3,0(r2)
  8029a4:	1800031e 	bne	r3,zero,8029b4 <quorem+0x11c>
  8029a8:	10bfff04 	addi	r2,r2,-4
  8029ac:	94bfffc4 	addi	r18,r18,-1
  8029b0:	a8bffb36 	bltu	r21,r2,8029a0 <__alt_data_end+0xff8029a0>
  8029b4:	84800415 	stw	r18,16(r16)
  8029b8:	b80b883a 	mov	r5,r23
  8029bc:	8009883a 	mov	r4,r16
  8029c0:	08069fc0 	call	8069fc <__mcmp>
  8029c4:	10002616 	blt	r2,zero,802a60 <quorem+0x1c8>
  8029c8:	9cc00044 	addi	r19,r19,1
  8029cc:	a805883a 	mov	r2,r21
  8029d0:	000b883a 	mov	r5,zero
  8029d4:	11000017 	ldw	r4,0(r2)
  8029d8:	89800017 	ldw	r6,0(r17)
  8029dc:	10800104 	addi	r2,r2,4
  8029e0:	20ffffcc 	andi	r3,r4,65535
  8029e4:	194b883a 	add	r5,r3,r5
  8029e8:	30ffffcc 	andi	r3,r6,65535
  8029ec:	28c7c83a 	sub	r3,r5,r3
  8029f0:	300cd43a 	srli	r6,r6,16
  8029f4:	2008d43a 	srli	r4,r4,16
  8029f8:	180bd43a 	srai	r5,r3,16
  8029fc:	18ffffcc 	andi	r3,r3,65535
  802a00:	2189c83a 	sub	r4,r4,r6
  802a04:	2149883a 	add	r4,r4,r5
  802a08:	200c943a 	slli	r6,r4,16
  802a0c:	8c400104 	addi	r17,r17,4
  802a10:	200bd43a 	srai	r5,r4,16
  802a14:	30c6b03a 	or	r3,r6,r3
  802a18:	10ffff15 	stw	r3,-4(r2)
  802a1c:	a47fed2e 	bgeu	r20,r17,8029d4 <__alt_data_end+0xff8029d4>
  802a20:	9485883a 	add	r2,r18,r18
  802a24:	1085883a 	add	r2,r2,r2
  802a28:	a887883a 	add	r3,r21,r2
  802a2c:	18800017 	ldw	r2,0(r3)
  802a30:	10000b1e 	bne	r2,zero,802a60 <quorem+0x1c8>
  802a34:	18bfff04 	addi	r2,r3,-4
  802a38:	a880082e 	bgeu	r21,r2,802a5c <quorem+0x1c4>
  802a3c:	18ffff17 	ldw	r3,-4(r3)
  802a40:	18000326 	beq	r3,zero,802a50 <quorem+0x1b8>
  802a44:	00000506 	br	802a5c <quorem+0x1c4>
  802a48:	10c00017 	ldw	r3,0(r2)
  802a4c:	1800031e 	bne	r3,zero,802a5c <quorem+0x1c4>
  802a50:	10bfff04 	addi	r2,r2,-4
  802a54:	94bfffc4 	addi	r18,r18,-1
  802a58:	a8bffb36 	bltu	r21,r2,802a48 <__alt_data_end+0xff802a48>
  802a5c:	84800415 	stw	r18,16(r16)
  802a60:	9805883a 	mov	r2,r19
  802a64:	dfc00817 	ldw	ra,32(sp)
  802a68:	ddc00717 	ldw	r23,28(sp)
  802a6c:	dd800617 	ldw	r22,24(sp)
  802a70:	dd400517 	ldw	r21,20(sp)
  802a74:	dd000417 	ldw	r20,16(sp)
  802a78:	dcc00317 	ldw	r19,12(sp)
  802a7c:	dc800217 	ldw	r18,8(sp)
  802a80:	dc400117 	ldw	r17,4(sp)
  802a84:	dc000017 	ldw	r16,0(sp)
  802a88:	dec00904 	addi	sp,sp,36
  802a8c:	f800283a 	ret
  802a90:	0005883a 	mov	r2,zero
  802a94:	003ff306 	br	802a64 <__alt_data_end+0xff802a64>

00802a98 <_dtoa_r>:
  802a98:	20801017 	ldw	r2,64(r4)
  802a9c:	deffde04 	addi	sp,sp,-136
  802aa0:	df002015 	stw	fp,128(sp)
  802aa4:	dcc01b15 	stw	r19,108(sp)
  802aa8:	dc801a15 	stw	r18,104(sp)
  802aac:	dc401915 	stw	r17,100(sp)
  802ab0:	dc001815 	stw	r16,96(sp)
  802ab4:	dfc02115 	stw	ra,132(sp)
  802ab8:	ddc01f15 	stw	r23,124(sp)
  802abc:	dd801e15 	stw	r22,120(sp)
  802ac0:	dd401d15 	stw	r21,116(sp)
  802ac4:	dd001c15 	stw	r20,112(sp)
  802ac8:	d9c00315 	stw	r7,12(sp)
  802acc:	2039883a 	mov	fp,r4
  802ad0:	3023883a 	mov	r17,r6
  802ad4:	2825883a 	mov	r18,r5
  802ad8:	dc002417 	ldw	r16,144(sp)
  802adc:	3027883a 	mov	r19,r6
  802ae0:	10000826 	beq	r2,zero,802b04 <_dtoa_r+0x6c>
  802ae4:	21801117 	ldw	r6,68(r4)
  802ae8:	00c00044 	movi	r3,1
  802aec:	100b883a 	mov	r5,r2
  802af0:	1986983a 	sll	r3,r3,r6
  802af4:	11800115 	stw	r6,4(r2)
  802af8:	10c00215 	stw	r3,8(r2)
  802afc:	08061dc0 	call	8061dc <_Bfree>
  802b00:	e0001015 	stw	zero,64(fp)
  802b04:	88002e16 	blt	r17,zero,802bc0 <_dtoa_r+0x128>
  802b08:	80000015 	stw	zero,0(r16)
  802b0c:	889ffc2c 	andhi	r2,r17,32752
  802b10:	00dffc34 	movhi	r3,32752
  802b14:	10c01c26 	beq	r2,r3,802b88 <_dtoa_r+0xf0>
  802b18:	000d883a 	mov	r6,zero
  802b1c:	000f883a 	mov	r7,zero
  802b20:	9009883a 	mov	r4,r18
  802b24:	980b883a 	mov	r5,r19
  802b28:	080b6e80 	call	80b6e8 <__eqdf2>
  802b2c:	10002b1e 	bne	r2,zero,802bdc <_dtoa_r+0x144>
  802b30:	d9c02317 	ldw	r7,140(sp)
  802b34:	00800044 	movi	r2,1
  802b38:	38800015 	stw	r2,0(r7)
  802b3c:	d8802517 	ldw	r2,148(sp)
  802b40:	10019e26 	beq	r2,zero,8031bc <_dtoa_r+0x724>
  802b44:	d8c02517 	ldw	r3,148(sp)
  802b48:	00802074 	movhi	r2,129
  802b4c:	10bcce44 	addi	r2,r2,-3271
  802b50:	18800015 	stw	r2,0(r3)
  802b54:	10bfffc4 	addi	r2,r2,-1
  802b58:	dfc02117 	ldw	ra,132(sp)
  802b5c:	df002017 	ldw	fp,128(sp)
  802b60:	ddc01f17 	ldw	r23,124(sp)
  802b64:	dd801e17 	ldw	r22,120(sp)
  802b68:	dd401d17 	ldw	r21,116(sp)
  802b6c:	dd001c17 	ldw	r20,112(sp)
  802b70:	dcc01b17 	ldw	r19,108(sp)
  802b74:	dc801a17 	ldw	r18,104(sp)
  802b78:	dc401917 	ldw	r17,100(sp)
  802b7c:	dc001817 	ldw	r16,96(sp)
  802b80:	dec02204 	addi	sp,sp,136
  802b84:	f800283a 	ret
  802b88:	d8c02317 	ldw	r3,140(sp)
  802b8c:	0089c3c4 	movi	r2,9999
  802b90:	18800015 	stw	r2,0(r3)
  802b94:	90017726 	beq	r18,zero,803174 <_dtoa_r+0x6dc>
  802b98:	00802074 	movhi	r2,129
  802b9c:	10bcda04 	addi	r2,r2,-3224
  802ba0:	d9002517 	ldw	r4,148(sp)
  802ba4:	203fec26 	beq	r4,zero,802b58 <__alt_data_end+0xff802b58>
  802ba8:	10c000c7 	ldb	r3,3(r2)
  802bac:	1801781e 	bne	r3,zero,803190 <_dtoa_r+0x6f8>
  802bb0:	10c000c4 	addi	r3,r2,3
  802bb4:	d9802517 	ldw	r6,148(sp)
  802bb8:	30c00015 	stw	r3,0(r6)
  802bbc:	003fe606 	br	802b58 <__alt_data_end+0xff802b58>
  802bc0:	04e00034 	movhi	r19,32768
  802bc4:	9cffffc4 	addi	r19,r19,-1
  802bc8:	00800044 	movi	r2,1
  802bcc:	8ce6703a 	and	r19,r17,r19
  802bd0:	80800015 	stw	r2,0(r16)
  802bd4:	9823883a 	mov	r17,r19
  802bd8:	003fcc06 	br	802b0c <__alt_data_end+0xff802b0c>
  802bdc:	d8800204 	addi	r2,sp,8
  802be0:	d8800015 	stw	r2,0(sp)
  802be4:	d9c00104 	addi	r7,sp,4
  802be8:	900b883a 	mov	r5,r18
  802bec:	980d883a 	mov	r6,r19
  802bf0:	e009883a 	mov	r4,fp
  802bf4:	8820d53a 	srli	r16,r17,20
  802bf8:	0806dc80 	call	806dc8 <__d2b>
  802bfc:	d8800915 	stw	r2,36(sp)
  802c00:	8001651e 	bne	r16,zero,803198 <_dtoa_r+0x700>
  802c04:	dd800217 	ldw	r22,8(sp)
  802c08:	dc000117 	ldw	r16,4(sp)
  802c0c:	00800804 	movi	r2,32
  802c10:	b421883a 	add	r16,r22,r16
  802c14:	80c10c84 	addi	r3,r16,1074
  802c18:	10c2d10e 	bge	r2,r3,803760 <_dtoa_r+0xcc8>
  802c1c:	00801004 	movi	r2,64
  802c20:	81010484 	addi	r4,r16,1042
  802c24:	10c7c83a 	sub	r3,r2,r3
  802c28:	9108d83a 	srl	r4,r18,r4
  802c2c:	88e2983a 	sll	r17,r17,r3
  802c30:	2448b03a 	or	r4,r4,r17
  802c34:	080cab00 	call	80cab0 <__floatunsidf>
  802c38:	017f8434 	movhi	r5,65040
  802c3c:	01800044 	movi	r6,1
  802c40:	1009883a 	mov	r4,r2
  802c44:	194b883a 	add	r5,r3,r5
  802c48:	843fffc4 	addi	r16,r16,-1
  802c4c:	d9801115 	stw	r6,68(sp)
  802c50:	000d883a 	mov	r6,zero
  802c54:	01cffe34 	movhi	r7,16376
  802c58:	080c0580 	call	80c058 <__subdf3>
  802c5c:	0198dbf4 	movhi	r6,25455
  802c60:	01cff4f4 	movhi	r7,16339
  802c64:	3190d844 	addi	r6,r6,17249
  802c68:	39e1e9c4 	addi	r7,r7,-30809
  802c6c:	1009883a 	mov	r4,r2
  802c70:	180b883a 	mov	r5,r3
  802c74:	080b9400 	call	80b940 <__muldf3>
  802c78:	01a2d874 	movhi	r6,35681
  802c7c:	01cff1f4 	movhi	r7,16327
  802c80:	31b22cc4 	addi	r6,r6,-14157
  802c84:	39e28a04 	addi	r7,r7,-30168
  802c88:	180b883a 	mov	r5,r3
  802c8c:	1009883a 	mov	r4,r2
  802c90:	080a5540 	call	80a554 <__adddf3>
  802c94:	8009883a 	mov	r4,r16
  802c98:	1029883a 	mov	r20,r2
  802c9c:	1823883a 	mov	r17,r3
  802ca0:	080c9d40 	call	80c9d4 <__floatsidf>
  802ca4:	019427f4 	movhi	r6,20639
  802ca8:	01cff4f4 	movhi	r7,16339
  802cac:	319e7ec4 	addi	r6,r6,31227
  802cb0:	39d104c4 	addi	r7,r7,17427
  802cb4:	1009883a 	mov	r4,r2
  802cb8:	180b883a 	mov	r5,r3
  802cbc:	080b9400 	call	80b940 <__muldf3>
  802cc0:	100d883a 	mov	r6,r2
  802cc4:	180f883a 	mov	r7,r3
  802cc8:	a009883a 	mov	r4,r20
  802ccc:	880b883a 	mov	r5,r17
  802cd0:	080a5540 	call	80a554 <__adddf3>
  802cd4:	1009883a 	mov	r4,r2
  802cd8:	180b883a 	mov	r5,r3
  802cdc:	1029883a 	mov	r20,r2
  802ce0:	1823883a 	mov	r17,r3
  802ce4:	080c9540 	call	80c954 <__fixdfsi>
  802ce8:	000d883a 	mov	r6,zero
  802cec:	000f883a 	mov	r7,zero
  802cf0:	a009883a 	mov	r4,r20
  802cf4:	880b883a 	mov	r5,r17
  802cf8:	d8800515 	stw	r2,20(sp)
  802cfc:	080b84c0 	call	80b84c <__ledf2>
  802d00:	10028716 	blt	r2,zero,803720 <_dtoa_r+0xc88>
  802d04:	d8c00517 	ldw	r3,20(sp)
  802d08:	00800584 	movi	r2,22
  802d0c:	10c27536 	bltu	r2,r3,8036e4 <_dtoa_r+0xc4c>
  802d10:	180490fa 	slli	r2,r3,3
  802d14:	00c02074 	movhi	r3,129
  802d18:	18fcf604 	addi	r3,r3,-3112
  802d1c:	1885883a 	add	r2,r3,r2
  802d20:	11000017 	ldw	r4,0(r2)
  802d24:	11400117 	ldw	r5,4(r2)
  802d28:	900d883a 	mov	r6,r18
  802d2c:	980f883a 	mov	r7,r19
  802d30:	080b7700 	call	80b770 <__gedf2>
  802d34:	00828d0e 	bge	zero,r2,80376c <_dtoa_r+0xcd4>
  802d38:	d9000517 	ldw	r4,20(sp)
  802d3c:	d8000e15 	stw	zero,56(sp)
  802d40:	213fffc4 	addi	r4,r4,-1
  802d44:	d9000515 	stw	r4,20(sp)
  802d48:	b42dc83a 	sub	r22,r22,r16
  802d4c:	b5bfffc4 	addi	r22,r22,-1
  802d50:	b0026f16 	blt	r22,zero,803710 <_dtoa_r+0xc78>
  802d54:	d8000815 	stw	zero,32(sp)
  802d58:	d9c00517 	ldw	r7,20(sp)
  802d5c:	38026416 	blt	r7,zero,8036f0 <_dtoa_r+0xc58>
  802d60:	b1ed883a 	add	r22,r22,r7
  802d64:	d9c00d15 	stw	r7,52(sp)
  802d68:	d8000a15 	stw	zero,40(sp)
  802d6c:	d9800317 	ldw	r6,12(sp)
  802d70:	00800244 	movi	r2,9
  802d74:	11811436 	bltu	r2,r6,8031c8 <_dtoa_r+0x730>
  802d78:	00800144 	movi	r2,5
  802d7c:	1184e10e 	bge	r2,r6,804104 <_dtoa_r+0x166c>
  802d80:	31bfff04 	addi	r6,r6,-4
  802d84:	d9800315 	stw	r6,12(sp)
  802d88:	0023883a 	mov	r17,zero
  802d8c:	d9800317 	ldw	r6,12(sp)
  802d90:	008000c4 	movi	r2,3
  802d94:	30836726 	beq	r6,r2,803b34 <_dtoa_r+0x109c>
  802d98:	1183410e 	bge	r2,r6,803aa0 <_dtoa_r+0x1008>
  802d9c:	d9c00317 	ldw	r7,12(sp)
  802da0:	00800104 	movi	r2,4
  802da4:	38827c26 	beq	r7,r2,803798 <_dtoa_r+0xd00>
  802da8:	00800144 	movi	r2,5
  802dac:	3884c41e 	bne	r7,r2,8040c0 <_dtoa_r+0x1628>
  802db0:	00800044 	movi	r2,1
  802db4:	d8800b15 	stw	r2,44(sp)
  802db8:	d8c00517 	ldw	r3,20(sp)
  802dbc:	d9002217 	ldw	r4,136(sp)
  802dc0:	1907883a 	add	r3,r3,r4
  802dc4:	19800044 	addi	r6,r3,1
  802dc8:	d8c00c15 	stw	r3,48(sp)
  802dcc:	d9800615 	stw	r6,24(sp)
  802dd0:	0183a40e 	bge	zero,r6,803c64 <_dtoa_r+0x11cc>
  802dd4:	d9800617 	ldw	r6,24(sp)
  802dd8:	3021883a 	mov	r16,r6
  802ddc:	e0001115 	stw	zero,68(fp)
  802de0:	008005c4 	movi	r2,23
  802de4:	1184c92e 	bgeu	r2,r6,80410c <_dtoa_r+0x1674>
  802de8:	00c00044 	movi	r3,1
  802dec:	00800104 	movi	r2,4
  802df0:	1085883a 	add	r2,r2,r2
  802df4:	11000504 	addi	r4,r2,20
  802df8:	180b883a 	mov	r5,r3
  802dfc:	18c00044 	addi	r3,r3,1
  802e00:	313ffb2e 	bgeu	r6,r4,802df0 <__alt_data_end+0xff802df0>
  802e04:	e1401115 	stw	r5,68(fp)
  802e08:	e009883a 	mov	r4,fp
  802e0c:	08061340 	call	806134 <_Balloc>
  802e10:	d8800715 	stw	r2,28(sp)
  802e14:	e0801015 	stw	r2,64(fp)
  802e18:	00800384 	movi	r2,14
  802e1c:	1400f736 	bltu	r2,r16,8031fc <_dtoa_r+0x764>
  802e20:	8800f626 	beq	r17,zero,8031fc <_dtoa_r+0x764>
  802e24:	d9c00517 	ldw	r7,20(sp)
  802e28:	01c39a0e 	bge	zero,r7,803c94 <_dtoa_r+0x11fc>
  802e2c:	388003cc 	andi	r2,r7,15
  802e30:	100490fa 	slli	r2,r2,3
  802e34:	382bd13a 	srai	r21,r7,4
  802e38:	00c02074 	movhi	r3,129
  802e3c:	18fcf604 	addi	r3,r3,-3112
  802e40:	1885883a 	add	r2,r3,r2
  802e44:	a8c0040c 	andi	r3,r21,16
  802e48:	12400017 	ldw	r9,0(r2)
  802e4c:	12000117 	ldw	r8,4(r2)
  802e50:	18037926 	beq	r3,zero,803c38 <_dtoa_r+0x11a0>
  802e54:	00802074 	movhi	r2,129
  802e58:	10bcec04 	addi	r2,r2,-3152
  802e5c:	11800817 	ldw	r6,32(r2)
  802e60:	11c00917 	ldw	r7,36(r2)
  802e64:	9009883a 	mov	r4,r18
  802e68:	980b883a 	mov	r5,r19
  802e6c:	da001715 	stw	r8,92(sp)
  802e70:	da401615 	stw	r9,88(sp)
  802e74:	080ae000 	call	80ae00 <__divdf3>
  802e78:	da001717 	ldw	r8,92(sp)
  802e7c:	da401617 	ldw	r9,88(sp)
  802e80:	ad4003cc 	andi	r21,r21,15
  802e84:	040000c4 	movi	r16,3
  802e88:	1023883a 	mov	r17,r2
  802e8c:	1829883a 	mov	r20,r3
  802e90:	a8001126 	beq	r21,zero,802ed8 <_dtoa_r+0x440>
  802e94:	05c02074 	movhi	r23,129
  802e98:	bdfcec04 	addi	r23,r23,-3152
  802e9c:	4805883a 	mov	r2,r9
  802ea0:	4007883a 	mov	r3,r8
  802ea4:	a980004c 	andi	r6,r21,1
  802ea8:	1009883a 	mov	r4,r2
  802eac:	a82bd07a 	srai	r21,r21,1
  802eb0:	180b883a 	mov	r5,r3
  802eb4:	30000426 	beq	r6,zero,802ec8 <_dtoa_r+0x430>
  802eb8:	b9800017 	ldw	r6,0(r23)
  802ebc:	b9c00117 	ldw	r7,4(r23)
  802ec0:	84000044 	addi	r16,r16,1
  802ec4:	080b9400 	call	80b940 <__muldf3>
  802ec8:	bdc00204 	addi	r23,r23,8
  802ecc:	a83ff51e 	bne	r21,zero,802ea4 <__alt_data_end+0xff802ea4>
  802ed0:	1013883a 	mov	r9,r2
  802ed4:	1811883a 	mov	r8,r3
  802ed8:	480d883a 	mov	r6,r9
  802edc:	400f883a 	mov	r7,r8
  802ee0:	8809883a 	mov	r4,r17
  802ee4:	a00b883a 	mov	r5,r20
  802ee8:	080ae000 	call	80ae00 <__divdf3>
  802eec:	d8800f15 	stw	r2,60(sp)
  802ef0:	d8c01015 	stw	r3,64(sp)
  802ef4:	d8c00e17 	ldw	r3,56(sp)
  802ef8:	18000626 	beq	r3,zero,802f14 <_dtoa_r+0x47c>
  802efc:	d9000f17 	ldw	r4,60(sp)
  802f00:	d9401017 	ldw	r5,64(sp)
  802f04:	000d883a 	mov	r6,zero
  802f08:	01cffc34 	movhi	r7,16368
  802f0c:	080b84c0 	call	80b84c <__ledf2>
  802f10:	10040b16 	blt	r2,zero,803f40 <_dtoa_r+0x14a8>
  802f14:	8009883a 	mov	r4,r16
  802f18:	080c9d40 	call	80c9d4 <__floatsidf>
  802f1c:	d9800f17 	ldw	r6,60(sp)
  802f20:	d9c01017 	ldw	r7,64(sp)
  802f24:	1009883a 	mov	r4,r2
  802f28:	180b883a 	mov	r5,r3
  802f2c:	080b9400 	call	80b940 <__muldf3>
  802f30:	000d883a 	mov	r6,zero
  802f34:	01d00734 	movhi	r7,16412
  802f38:	1009883a 	mov	r4,r2
  802f3c:	180b883a 	mov	r5,r3
  802f40:	080a5540 	call	80a554 <__adddf3>
  802f44:	1021883a 	mov	r16,r2
  802f48:	d8800617 	ldw	r2,24(sp)
  802f4c:	047f3034 	movhi	r17,64704
  802f50:	1c63883a 	add	r17,r3,r17
  802f54:	10031826 	beq	r2,zero,803bb8 <_dtoa_r+0x1120>
  802f58:	d8c00517 	ldw	r3,20(sp)
  802f5c:	db000617 	ldw	r12,24(sp)
  802f60:	d8c01315 	stw	r3,76(sp)
  802f64:	d9000b17 	ldw	r4,44(sp)
  802f68:	20038f26 	beq	r4,zero,803da8 <_dtoa_r+0x1310>
  802f6c:	60bfffc4 	addi	r2,r12,-1
  802f70:	100490fa 	slli	r2,r2,3
  802f74:	00c02074 	movhi	r3,129
  802f78:	18fcf604 	addi	r3,r3,-3112
  802f7c:	1885883a 	add	r2,r3,r2
  802f80:	11800017 	ldw	r6,0(r2)
  802f84:	11c00117 	ldw	r7,4(r2)
  802f88:	d8800717 	ldw	r2,28(sp)
  802f8c:	0009883a 	mov	r4,zero
  802f90:	014ff834 	movhi	r5,16352
  802f94:	db001615 	stw	r12,88(sp)
  802f98:	15c00044 	addi	r23,r2,1
  802f9c:	080ae000 	call	80ae00 <__divdf3>
  802fa0:	800d883a 	mov	r6,r16
  802fa4:	880f883a 	mov	r7,r17
  802fa8:	1009883a 	mov	r4,r2
  802fac:	180b883a 	mov	r5,r3
  802fb0:	080c0580 	call	80c058 <__subdf3>
  802fb4:	d9401017 	ldw	r5,64(sp)
  802fb8:	d9000f17 	ldw	r4,60(sp)
  802fbc:	102b883a 	mov	r21,r2
  802fc0:	d8c01215 	stw	r3,72(sp)
  802fc4:	080c9540 	call	80c954 <__fixdfsi>
  802fc8:	1009883a 	mov	r4,r2
  802fcc:	1029883a 	mov	r20,r2
  802fd0:	080c9d40 	call	80c9d4 <__floatsidf>
  802fd4:	d9000f17 	ldw	r4,60(sp)
  802fd8:	d9401017 	ldw	r5,64(sp)
  802fdc:	100d883a 	mov	r6,r2
  802fe0:	180f883a 	mov	r7,r3
  802fe4:	080c0580 	call	80c058 <__subdf3>
  802fe8:	1823883a 	mov	r17,r3
  802fec:	d8c00717 	ldw	r3,28(sp)
  802ff0:	d9401217 	ldw	r5,72(sp)
  802ff4:	a2000c04 	addi	r8,r20,48
  802ff8:	1021883a 	mov	r16,r2
  802ffc:	1a000005 	stb	r8,0(r3)
  803000:	800d883a 	mov	r6,r16
  803004:	880f883a 	mov	r7,r17
  803008:	a809883a 	mov	r4,r21
  80300c:	4029883a 	mov	r20,r8
  803010:	080b7700 	call	80b770 <__gedf2>
  803014:	00841d16 	blt	zero,r2,80408c <_dtoa_r+0x15f4>
  803018:	800d883a 	mov	r6,r16
  80301c:	880f883a 	mov	r7,r17
  803020:	0009883a 	mov	r4,zero
  803024:	014ffc34 	movhi	r5,16368
  803028:	080c0580 	call	80c058 <__subdf3>
  80302c:	d9401217 	ldw	r5,72(sp)
  803030:	100d883a 	mov	r6,r2
  803034:	180f883a 	mov	r7,r3
  803038:	a809883a 	mov	r4,r21
  80303c:	080b7700 	call	80b770 <__gedf2>
  803040:	db001617 	ldw	r12,88(sp)
  803044:	00840e16 	blt	zero,r2,804080 <_dtoa_r+0x15e8>
  803048:	00800044 	movi	r2,1
  80304c:	13006b0e 	bge	r2,r12,8031fc <_dtoa_r+0x764>
  803050:	d9000717 	ldw	r4,28(sp)
  803054:	dd800f15 	stw	r22,60(sp)
  803058:	dcc01015 	stw	r19,64(sp)
  80305c:	2319883a 	add	r12,r4,r12
  803060:	dcc01217 	ldw	r19,72(sp)
  803064:	602d883a 	mov	r22,r12
  803068:	dc801215 	stw	r18,72(sp)
  80306c:	b825883a 	mov	r18,r23
  803070:	00000906 	br	803098 <_dtoa_r+0x600>
  803074:	080c0580 	call	80c058 <__subdf3>
  803078:	a80d883a 	mov	r6,r21
  80307c:	980f883a 	mov	r7,r19
  803080:	1009883a 	mov	r4,r2
  803084:	180b883a 	mov	r5,r3
  803088:	080b84c0 	call	80b84c <__ledf2>
  80308c:	1003e816 	blt	r2,zero,804030 <_dtoa_r+0x1598>
  803090:	b825883a 	mov	r18,r23
  803094:	bd83e926 	beq	r23,r22,80403c <_dtoa_r+0x15a4>
  803098:	a809883a 	mov	r4,r21
  80309c:	980b883a 	mov	r5,r19
  8030a0:	000d883a 	mov	r6,zero
  8030a4:	01d00934 	movhi	r7,16420
  8030a8:	080b9400 	call	80b940 <__muldf3>
  8030ac:	000d883a 	mov	r6,zero
  8030b0:	01d00934 	movhi	r7,16420
  8030b4:	8009883a 	mov	r4,r16
  8030b8:	880b883a 	mov	r5,r17
  8030bc:	102b883a 	mov	r21,r2
  8030c0:	1827883a 	mov	r19,r3
  8030c4:	080b9400 	call	80b940 <__muldf3>
  8030c8:	180b883a 	mov	r5,r3
  8030cc:	1009883a 	mov	r4,r2
  8030d0:	1821883a 	mov	r16,r3
  8030d4:	1023883a 	mov	r17,r2
  8030d8:	080c9540 	call	80c954 <__fixdfsi>
  8030dc:	1009883a 	mov	r4,r2
  8030e0:	1029883a 	mov	r20,r2
  8030e4:	080c9d40 	call	80c9d4 <__floatsidf>
  8030e8:	8809883a 	mov	r4,r17
  8030ec:	800b883a 	mov	r5,r16
  8030f0:	100d883a 	mov	r6,r2
  8030f4:	180f883a 	mov	r7,r3
  8030f8:	080c0580 	call	80c058 <__subdf3>
  8030fc:	a5000c04 	addi	r20,r20,48
  803100:	a80d883a 	mov	r6,r21
  803104:	980f883a 	mov	r7,r19
  803108:	1009883a 	mov	r4,r2
  80310c:	180b883a 	mov	r5,r3
  803110:	95000005 	stb	r20,0(r18)
  803114:	1021883a 	mov	r16,r2
  803118:	1823883a 	mov	r17,r3
  80311c:	080b84c0 	call	80b84c <__ledf2>
  803120:	bdc00044 	addi	r23,r23,1
  803124:	800d883a 	mov	r6,r16
  803128:	880f883a 	mov	r7,r17
  80312c:	0009883a 	mov	r4,zero
  803130:	014ffc34 	movhi	r5,16368
  803134:	103fcf0e 	bge	r2,zero,803074 <__alt_data_end+0xff803074>
  803138:	d8c01317 	ldw	r3,76(sp)
  80313c:	d8c00515 	stw	r3,20(sp)
  803140:	d9400917 	ldw	r5,36(sp)
  803144:	e009883a 	mov	r4,fp
  803148:	08061dc0 	call	8061dc <_Bfree>
  80314c:	d9000517 	ldw	r4,20(sp)
  803150:	d9802317 	ldw	r6,140(sp)
  803154:	d9c02517 	ldw	r7,148(sp)
  803158:	b8000005 	stb	zero,0(r23)
  80315c:	20800044 	addi	r2,r4,1
  803160:	30800015 	stw	r2,0(r6)
  803164:	3802aa26 	beq	r7,zero,803c10 <_dtoa_r+0x1178>
  803168:	3dc00015 	stw	r23,0(r7)
  80316c:	d8800717 	ldw	r2,28(sp)
  803170:	003e7906 	br	802b58 <__alt_data_end+0xff802b58>
  803174:	00800434 	movhi	r2,16
  803178:	10bfffc4 	addi	r2,r2,-1
  80317c:	88a2703a 	and	r17,r17,r2
  803180:	883e851e 	bne	r17,zero,802b98 <__alt_data_end+0xff802b98>
  803184:	00802074 	movhi	r2,129
  803188:	10bcd704 	addi	r2,r2,-3236
  80318c:	003e8406 	br	802ba0 <__alt_data_end+0xff802ba0>
  803190:	10c00204 	addi	r3,r2,8
  803194:	003e8706 	br	802bb4 <__alt_data_end+0xff802bb4>
  803198:	01400434 	movhi	r5,16
  80319c:	297fffc4 	addi	r5,r5,-1
  8031a0:	994a703a 	and	r5,r19,r5
  8031a4:	9009883a 	mov	r4,r18
  8031a8:	843f0044 	addi	r16,r16,-1023
  8031ac:	294ffc34 	orhi	r5,r5,16368
  8031b0:	dd800217 	ldw	r22,8(sp)
  8031b4:	d8001115 	stw	zero,68(sp)
  8031b8:	003ea506 	br	802c50 <__alt_data_end+0xff802c50>
  8031bc:	00802074 	movhi	r2,129
  8031c0:	10bcce04 	addi	r2,r2,-3272
  8031c4:	003e6406 	br	802b58 <__alt_data_end+0xff802b58>
  8031c8:	e0001115 	stw	zero,68(fp)
  8031cc:	000b883a 	mov	r5,zero
  8031d0:	e009883a 	mov	r4,fp
  8031d4:	08061340 	call	806134 <_Balloc>
  8031d8:	01bfffc4 	movi	r6,-1
  8031dc:	01c00044 	movi	r7,1
  8031e0:	d8800715 	stw	r2,28(sp)
  8031e4:	d9800c15 	stw	r6,48(sp)
  8031e8:	e0801015 	stw	r2,64(fp)
  8031ec:	d8000315 	stw	zero,12(sp)
  8031f0:	d9c00b15 	stw	r7,44(sp)
  8031f4:	d9800615 	stw	r6,24(sp)
  8031f8:	d8002215 	stw	zero,136(sp)
  8031fc:	d8800117 	ldw	r2,4(sp)
  803200:	10008916 	blt	r2,zero,803428 <_dtoa_r+0x990>
  803204:	d9000517 	ldw	r4,20(sp)
  803208:	00c00384 	movi	r3,14
  80320c:	19008616 	blt	r3,r4,803428 <_dtoa_r+0x990>
  803210:	200490fa 	slli	r2,r4,3
  803214:	00c02074 	movhi	r3,129
  803218:	d9802217 	ldw	r6,136(sp)
  80321c:	18fcf604 	addi	r3,r3,-3112
  803220:	1885883a 	add	r2,r3,r2
  803224:	14000017 	ldw	r16,0(r2)
  803228:	14400117 	ldw	r17,4(r2)
  80322c:	30016316 	blt	r6,zero,8037bc <_dtoa_r+0xd24>
  803230:	800d883a 	mov	r6,r16
  803234:	880f883a 	mov	r7,r17
  803238:	9009883a 	mov	r4,r18
  80323c:	980b883a 	mov	r5,r19
  803240:	080ae000 	call	80ae00 <__divdf3>
  803244:	180b883a 	mov	r5,r3
  803248:	1009883a 	mov	r4,r2
  80324c:	080c9540 	call	80c954 <__fixdfsi>
  803250:	1009883a 	mov	r4,r2
  803254:	102b883a 	mov	r21,r2
  803258:	080c9d40 	call	80c9d4 <__floatsidf>
  80325c:	800d883a 	mov	r6,r16
  803260:	880f883a 	mov	r7,r17
  803264:	1009883a 	mov	r4,r2
  803268:	180b883a 	mov	r5,r3
  80326c:	080b9400 	call	80b940 <__muldf3>
  803270:	100d883a 	mov	r6,r2
  803274:	180f883a 	mov	r7,r3
  803278:	9009883a 	mov	r4,r18
  80327c:	980b883a 	mov	r5,r19
  803280:	080c0580 	call	80c058 <__subdf3>
  803284:	d9c00717 	ldw	r7,28(sp)
  803288:	1009883a 	mov	r4,r2
  80328c:	a8800c04 	addi	r2,r21,48
  803290:	38800005 	stb	r2,0(r7)
  803294:	3dc00044 	addi	r23,r7,1
  803298:	d9c00617 	ldw	r7,24(sp)
  80329c:	01800044 	movi	r6,1
  8032a0:	180b883a 	mov	r5,r3
  8032a4:	2005883a 	mov	r2,r4
  8032a8:	39803826 	beq	r7,r6,80338c <_dtoa_r+0x8f4>
  8032ac:	000d883a 	mov	r6,zero
  8032b0:	01d00934 	movhi	r7,16420
  8032b4:	080b9400 	call	80b940 <__muldf3>
  8032b8:	000d883a 	mov	r6,zero
  8032bc:	000f883a 	mov	r7,zero
  8032c0:	1009883a 	mov	r4,r2
  8032c4:	180b883a 	mov	r5,r3
  8032c8:	1025883a 	mov	r18,r2
  8032cc:	1827883a 	mov	r19,r3
  8032d0:	080b6e80 	call	80b6e8 <__eqdf2>
  8032d4:	103f9a26 	beq	r2,zero,803140 <__alt_data_end+0xff803140>
  8032d8:	d9c00617 	ldw	r7,24(sp)
  8032dc:	d8c00717 	ldw	r3,28(sp)
  8032e0:	b829883a 	mov	r20,r23
  8032e4:	38bfffc4 	addi	r2,r7,-1
  8032e8:	18ad883a 	add	r22,r3,r2
  8032ec:	00000a06 	br	803318 <_dtoa_r+0x880>
  8032f0:	080b9400 	call	80b940 <__muldf3>
  8032f4:	000d883a 	mov	r6,zero
  8032f8:	000f883a 	mov	r7,zero
  8032fc:	1009883a 	mov	r4,r2
  803300:	180b883a 	mov	r5,r3
  803304:	1025883a 	mov	r18,r2
  803308:	1827883a 	mov	r19,r3
  80330c:	b829883a 	mov	r20,r23
  803310:	080b6e80 	call	80b6e8 <__eqdf2>
  803314:	103f8a26 	beq	r2,zero,803140 <__alt_data_end+0xff803140>
  803318:	800d883a 	mov	r6,r16
  80331c:	880f883a 	mov	r7,r17
  803320:	9009883a 	mov	r4,r18
  803324:	980b883a 	mov	r5,r19
  803328:	080ae000 	call	80ae00 <__divdf3>
  80332c:	180b883a 	mov	r5,r3
  803330:	1009883a 	mov	r4,r2
  803334:	080c9540 	call	80c954 <__fixdfsi>
  803338:	1009883a 	mov	r4,r2
  80333c:	102b883a 	mov	r21,r2
  803340:	080c9d40 	call	80c9d4 <__floatsidf>
  803344:	800d883a 	mov	r6,r16
  803348:	880f883a 	mov	r7,r17
  80334c:	1009883a 	mov	r4,r2
  803350:	180b883a 	mov	r5,r3
  803354:	080b9400 	call	80b940 <__muldf3>
  803358:	100d883a 	mov	r6,r2
  80335c:	180f883a 	mov	r7,r3
  803360:	9009883a 	mov	r4,r18
  803364:	980b883a 	mov	r5,r19
  803368:	080c0580 	call	80c058 <__subdf3>
  80336c:	aa000c04 	addi	r8,r21,48
  803370:	a2000005 	stb	r8,0(r20)
  803374:	000d883a 	mov	r6,zero
  803378:	01d00934 	movhi	r7,16420
  80337c:	1009883a 	mov	r4,r2
  803380:	180b883a 	mov	r5,r3
  803384:	a5c00044 	addi	r23,r20,1
  803388:	b53fd91e 	bne	r22,r20,8032f0 <__alt_data_end+0xff8032f0>
  80338c:	100d883a 	mov	r6,r2
  803390:	180f883a 	mov	r7,r3
  803394:	1009883a 	mov	r4,r2
  803398:	180b883a 	mov	r5,r3
  80339c:	080a5540 	call	80a554 <__adddf3>
  8033a0:	100d883a 	mov	r6,r2
  8033a4:	180f883a 	mov	r7,r3
  8033a8:	8009883a 	mov	r4,r16
  8033ac:	880b883a 	mov	r5,r17
  8033b0:	1027883a 	mov	r19,r2
  8033b4:	1825883a 	mov	r18,r3
  8033b8:	080b84c0 	call	80b84c <__ledf2>
  8033bc:	10000816 	blt	r2,zero,8033e0 <_dtoa_r+0x948>
  8033c0:	980d883a 	mov	r6,r19
  8033c4:	900f883a 	mov	r7,r18
  8033c8:	8009883a 	mov	r4,r16
  8033cc:	880b883a 	mov	r5,r17
  8033d0:	080b6e80 	call	80b6e8 <__eqdf2>
  8033d4:	103f5a1e 	bne	r2,zero,803140 <__alt_data_end+0xff803140>
  8033d8:	ad40004c 	andi	r21,r21,1
  8033dc:	a83f5826 	beq	r21,zero,803140 <__alt_data_end+0xff803140>
  8033e0:	bd3fffc3 	ldbu	r20,-1(r23)
  8033e4:	b8bfffc4 	addi	r2,r23,-1
  8033e8:	1007883a 	mov	r3,r2
  8033ec:	01400e44 	movi	r5,57
  8033f0:	d9800717 	ldw	r6,28(sp)
  8033f4:	00000506 	br	80340c <_dtoa_r+0x974>
  8033f8:	18ffffc4 	addi	r3,r3,-1
  8033fc:	11824726 	beq	r2,r6,803d1c <_dtoa_r+0x1284>
  803400:	1d000003 	ldbu	r20,0(r3)
  803404:	102f883a 	mov	r23,r2
  803408:	10bfffc4 	addi	r2,r2,-1
  80340c:	a1003fcc 	andi	r4,r20,255
  803410:	2100201c 	xori	r4,r4,128
  803414:	213fe004 	addi	r4,r4,-128
  803418:	217ff726 	beq	r4,r5,8033f8 <__alt_data_end+0xff8033f8>
  80341c:	a2000044 	addi	r8,r20,1
  803420:	12000005 	stb	r8,0(r2)
  803424:	003f4606 	br	803140 <__alt_data_end+0xff803140>
  803428:	d9000b17 	ldw	r4,44(sp)
  80342c:	2000c826 	beq	r4,zero,803750 <_dtoa_r+0xcb8>
  803430:	d9800317 	ldw	r6,12(sp)
  803434:	00c00044 	movi	r3,1
  803438:	1980f90e 	bge	r3,r6,803820 <_dtoa_r+0xd88>
  80343c:	d8800617 	ldw	r2,24(sp)
  803440:	d8c00a17 	ldw	r3,40(sp)
  803444:	157fffc4 	addi	r21,r2,-1
  803448:	1d41f316 	blt	r3,r21,803c18 <_dtoa_r+0x1180>
  80344c:	1d6bc83a 	sub	r21,r3,r21
  803450:	d9c00617 	ldw	r7,24(sp)
  803454:	3802aa16 	blt	r7,zero,803f00 <_dtoa_r+0x1468>
  803458:	dd000817 	ldw	r20,32(sp)
  80345c:	d8800617 	ldw	r2,24(sp)
  803460:	d8c00817 	ldw	r3,32(sp)
  803464:	01400044 	movi	r5,1
  803468:	e009883a 	mov	r4,fp
  80346c:	1887883a 	add	r3,r3,r2
  803470:	d8c00815 	stw	r3,32(sp)
  803474:	b0ad883a 	add	r22,r22,r2
  803478:	08065400 	call	806540 <__i2b>
  80347c:	1023883a 	mov	r17,r2
  803480:	a0000826 	beq	r20,zero,8034a4 <_dtoa_r+0xa0c>
  803484:	0580070e 	bge	zero,r22,8034a4 <_dtoa_r+0xa0c>
  803488:	a005883a 	mov	r2,r20
  80348c:	b500b916 	blt	r22,r20,803774 <_dtoa_r+0xcdc>
  803490:	d9000817 	ldw	r4,32(sp)
  803494:	a0a9c83a 	sub	r20,r20,r2
  803498:	b0adc83a 	sub	r22,r22,r2
  80349c:	2089c83a 	sub	r4,r4,r2
  8034a0:	d9000815 	stw	r4,32(sp)
  8034a4:	d9800a17 	ldw	r6,40(sp)
  8034a8:	0181810e 	bge	zero,r6,803ab0 <_dtoa_r+0x1018>
  8034ac:	d9c00b17 	ldw	r7,44(sp)
  8034b0:	3800b326 	beq	r7,zero,803780 <_dtoa_r+0xce8>
  8034b4:	a800b226 	beq	r21,zero,803780 <_dtoa_r+0xce8>
  8034b8:	880b883a 	mov	r5,r17
  8034bc:	a80d883a 	mov	r6,r21
  8034c0:	e009883a 	mov	r4,fp
  8034c4:	08067740 	call	806774 <__pow5mult>
  8034c8:	d9800917 	ldw	r6,36(sp)
  8034cc:	100b883a 	mov	r5,r2
  8034d0:	e009883a 	mov	r4,fp
  8034d4:	1023883a 	mov	r17,r2
  8034d8:	080657c0 	call	80657c <__multiply>
  8034dc:	1021883a 	mov	r16,r2
  8034e0:	d8800a17 	ldw	r2,40(sp)
  8034e4:	d9400917 	ldw	r5,36(sp)
  8034e8:	e009883a 	mov	r4,fp
  8034ec:	1545c83a 	sub	r2,r2,r21
  8034f0:	d8800a15 	stw	r2,40(sp)
  8034f4:	08061dc0 	call	8061dc <_Bfree>
  8034f8:	d8c00a17 	ldw	r3,40(sp)
  8034fc:	18009f1e 	bne	r3,zero,80377c <_dtoa_r+0xce4>
  803500:	05c00044 	movi	r23,1
  803504:	e009883a 	mov	r4,fp
  803508:	b80b883a 	mov	r5,r23
  80350c:	08065400 	call	806540 <__i2b>
  803510:	d9000d17 	ldw	r4,52(sp)
  803514:	102b883a 	mov	r21,r2
  803518:	2000ce26 	beq	r4,zero,803854 <_dtoa_r+0xdbc>
  80351c:	200d883a 	mov	r6,r4
  803520:	100b883a 	mov	r5,r2
  803524:	e009883a 	mov	r4,fp
  803528:	08067740 	call	806774 <__pow5mult>
  80352c:	d9800317 	ldw	r6,12(sp)
  803530:	102b883a 	mov	r21,r2
  803534:	b981810e 	bge	r23,r6,803b3c <_dtoa_r+0x10a4>
  803538:	0027883a 	mov	r19,zero
  80353c:	a8800417 	ldw	r2,16(r21)
  803540:	05c00804 	movi	r23,32
  803544:	10800104 	addi	r2,r2,4
  803548:	1085883a 	add	r2,r2,r2
  80354c:	1085883a 	add	r2,r2,r2
  803550:	a885883a 	add	r2,r21,r2
  803554:	11000017 	ldw	r4,0(r2)
  803558:	08064280 	call	806428 <__hi0bits>
  80355c:	b885c83a 	sub	r2,r23,r2
  803560:	1585883a 	add	r2,r2,r22
  803564:	108007cc 	andi	r2,r2,31
  803568:	1000b326 	beq	r2,zero,803838 <_dtoa_r+0xda0>
  80356c:	00c00804 	movi	r3,32
  803570:	1887c83a 	sub	r3,r3,r2
  803574:	01000104 	movi	r4,4
  803578:	20c2cd0e 	bge	r4,r3,8040b0 <_dtoa_r+0x1618>
  80357c:	00c00704 	movi	r3,28
  803580:	1885c83a 	sub	r2,r3,r2
  803584:	d8c00817 	ldw	r3,32(sp)
  803588:	a0a9883a 	add	r20,r20,r2
  80358c:	b0ad883a 	add	r22,r22,r2
  803590:	1887883a 	add	r3,r3,r2
  803594:	d8c00815 	stw	r3,32(sp)
  803598:	d9800817 	ldw	r6,32(sp)
  80359c:	0180040e 	bge	zero,r6,8035b0 <_dtoa_r+0xb18>
  8035a0:	800b883a 	mov	r5,r16
  8035a4:	e009883a 	mov	r4,fp
  8035a8:	08068b40 	call	8068b4 <__lshift>
  8035ac:	1021883a 	mov	r16,r2
  8035b0:	0580050e 	bge	zero,r22,8035c8 <_dtoa_r+0xb30>
  8035b4:	a80b883a 	mov	r5,r21
  8035b8:	b00d883a 	mov	r6,r22
  8035bc:	e009883a 	mov	r4,fp
  8035c0:	08068b40 	call	8068b4 <__lshift>
  8035c4:	102b883a 	mov	r21,r2
  8035c8:	d9c00e17 	ldw	r7,56(sp)
  8035cc:	3801211e 	bne	r7,zero,803a54 <_dtoa_r+0xfbc>
  8035d0:	d9800617 	ldw	r6,24(sp)
  8035d4:	0181380e 	bge	zero,r6,803ab8 <_dtoa_r+0x1020>
  8035d8:	d8c00b17 	ldw	r3,44(sp)
  8035dc:	1800ab1e 	bne	r3,zero,80388c <_dtoa_r+0xdf4>
  8035e0:	dc800717 	ldw	r18,28(sp)
  8035e4:	dcc00617 	ldw	r19,24(sp)
  8035e8:	9029883a 	mov	r20,r18
  8035ec:	00000206 	br	8035f8 <_dtoa_r+0xb60>
  8035f0:	08062040 	call	806204 <__multadd>
  8035f4:	1021883a 	mov	r16,r2
  8035f8:	a80b883a 	mov	r5,r21
  8035fc:	8009883a 	mov	r4,r16
  803600:	08028980 	call	802898 <quorem>
  803604:	10800c04 	addi	r2,r2,48
  803608:	90800005 	stb	r2,0(r18)
  80360c:	94800044 	addi	r18,r18,1
  803610:	9507c83a 	sub	r3,r18,r20
  803614:	000f883a 	mov	r7,zero
  803618:	01800284 	movi	r6,10
  80361c:	800b883a 	mov	r5,r16
  803620:	e009883a 	mov	r4,fp
  803624:	1cfff216 	blt	r3,r19,8035f0 <__alt_data_end+0xff8035f0>
  803628:	1011883a 	mov	r8,r2
  80362c:	d8800617 	ldw	r2,24(sp)
  803630:	0082370e 	bge	zero,r2,803f10 <_dtoa_r+0x1478>
  803634:	d9000717 	ldw	r4,28(sp)
  803638:	0025883a 	mov	r18,zero
  80363c:	20af883a 	add	r23,r4,r2
  803640:	01800044 	movi	r6,1
  803644:	800b883a 	mov	r5,r16
  803648:	e009883a 	mov	r4,fp
  80364c:	da001715 	stw	r8,92(sp)
  803650:	08068b40 	call	8068b4 <__lshift>
  803654:	a80b883a 	mov	r5,r21
  803658:	1009883a 	mov	r4,r2
  80365c:	d8800915 	stw	r2,36(sp)
  803660:	08069fc0 	call	8069fc <__mcmp>
  803664:	da001717 	ldw	r8,92(sp)
  803668:	0081800e 	bge	zero,r2,803c6c <_dtoa_r+0x11d4>
  80366c:	b93fffc3 	ldbu	r4,-1(r23)
  803670:	b8bfffc4 	addi	r2,r23,-1
  803674:	1007883a 	mov	r3,r2
  803678:	01800e44 	movi	r6,57
  80367c:	d9c00717 	ldw	r7,28(sp)
  803680:	00000506 	br	803698 <_dtoa_r+0xc00>
  803684:	18ffffc4 	addi	r3,r3,-1
  803688:	11c12326 	beq	r2,r7,803b18 <_dtoa_r+0x1080>
  80368c:	19000003 	ldbu	r4,0(r3)
  803690:	102f883a 	mov	r23,r2
  803694:	10bfffc4 	addi	r2,r2,-1
  803698:	21403fcc 	andi	r5,r4,255
  80369c:	2940201c 	xori	r5,r5,128
  8036a0:	297fe004 	addi	r5,r5,-128
  8036a4:	29bff726 	beq	r5,r6,803684 <__alt_data_end+0xff803684>
  8036a8:	21000044 	addi	r4,r4,1
  8036ac:	11000005 	stb	r4,0(r2)
  8036b0:	a80b883a 	mov	r5,r21
  8036b4:	e009883a 	mov	r4,fp
  8036b8:	08061dc0 	call	8061dc <_Bfree>
  8036bc:	883ea026 	beq	r17,zero,803140 <__alt_data_end+0xff803140>
  8036c0:	90000426 	beq	r18,zero,8036d4 <_dtoa_r+0xc3c>
  8036c4:	94400326 	beq	r18,r17,8036d4 <_dtoa_r+0xc3c>
  8036c8:	900b883a 	mov	r5,r18
  8036cc:	e009883a 	mov	r4,fp
  8036d0:	08061dc0 	call	8061dc <_Bfree>
  8036d4:	880b883a 	mov	r5,r17
  8036d8:	e009883a 	mov	r4,fp
  8036dc:	08061dc0 	call	8061dc <_Bfree>
  8036e0:	003e9706 	br	803140 <__alt_data_end+0xff803140>
  8036e4:	01800044 	movi	r6,1
  8036e8:	d9800e15 	stw	r6,56(sp)
  8036ec:	003d9606 	br	802d48 <__alt_data_end+0xff802d48>
  8036f0:	d8800817 	ldw	r2,32(sp)
  8036f4:	d8c00517 	ldw	r3,20(sp)
  8036f8:	d8000d15 	stw	zero,52(sp)
  8036fc:	10c5c83a 	sub	r2,r2,r3
  803700:	00c9c83a 	sub	r4,zero,r3
  803704:	d8800815 	stw	r2,32(sp)
  803708:	d9000a15 	stw	r4,40(sp)
  80370c:	003d9706 	br	802d6c <__alt_data_end+0xff802d6c>
  803710:	05adc83a 	sub	r22,zero,r22
  803714:	dd800815 	stw	r22,32(sp)
  803718:	002d883a 	mov	r22,zero
  80371c:	003d8e06 	br	802d58 <__alt_data_end+0xff802d58>
  803720:	d9000517 	ldw	r4,20(sp)
  803724:	080c9d40 	call	80c9d4 <__floatsidf>
  803728:	100d883a 	mov	r6,r2
  80372c:	180f883a 	mov	r7,r3
  803730:	a009883a 	mov	r4,r20
  803734:	880b883a 	mov	r5,r17
  803738:	080b6e80 	call	80b6e8 <__eqdf2>
  80373c:	103d7126 	beq	r2,zero,802d04 <__alt_data_end+0xff802d04>
  803740:	d9c00517 	ldw	r7,20(sp)
  803744:	39ffffc4 	addi	r7,r7,-1
  803748:	d9c00515 	stw	r7,20(sp)
  80374c:	003d6d06 	br	802d04 <__alt_data_end+0xff802d04>
  803750:	dd400a17 	ldw	r21,40(sp)
  803754:	dd000817 	ldw	r20,32(sp)
  803758:	0023883a 	mov	r17,zero
  80375c:	003f4806 	br	803480 <__alt_data_end+0xff803480>
  803760:	10e3c83a 	sub	r17,r2,r3
  803764:	9448983a 	sll	r4,r18,r17
  803768:	003d3206 	br	802c34 <__alt_data_end+0xff802c34>
  80376c:	d8000e15 	stw	zero,56(sp)
  803770:	003d7506 	br	802d48 <__alt_data_end+0xff802d48>
  803774:	b005883a 	mov	r2,r22
  803778:	003f4506 	br	803490 <__alt_data_end+0xff803490>
  80377c:	dc000915 	stw	r16,36(sp)
  803780:	d9800a17 	ldw	r6,40(sp)
  803784:	d9400917 	ldw	r5,36(sp)
  803788:	e009883a 	mov	r4,fp
  80378c:	08067740 	call	806774 <__pow5mult>
  803790:	1021883a 	mov	r16,r2
  803794:	003f5a06 	br	803500 <__alt_data_end+0xff803500>
  803798:	01c00044 	movi	r7,1
  80379c:	d9c00b15 	stw	r7,44(sp)
  8037a0:	d8802217 	ldw	r2,136(sp)
  8037a4:	0081280e 	bge	zero,r2,803c48 <_dtoa_r+0x11b0>
  8037a8:	100d883a 	mov	r6,r2
  8037ac:	1021883a 	mov	r16,r2
  8037b0:	d8800c15 	stw	r2,48(sp)
  8037b4:	d8800615 	stw	r2,24(sp)
  8037b8:	003d8806 	br	802ddc <__alt_data_end+0xff802ddc>
  8037bc:	d8800617 	ldw	r2,24(sp)
  8037c0:	00be9b16 	blt	zero,r2,803230 <__alt_data_end+0xff803230>
  8037c4:	10010f1e 	bne	r2,zero,803c04 <_dtoa_r+0x116c>
  8037c8:	880b883a 	mov	r5,r17
  8037cc:	000d883a 	mov	r6,zero
  8037d0:	01d00534 	movhi	r7,16404
  8037d4:	8009883a 	mov	r4,r16
  8037d8:	080b9400 	call	80b940 <__muldf3>
  8037dc:	900d883a 	mov	r6,r18
  8037e0:	980f883a 	mov	r7,r19
  8037e4:	1009883a 	mov	r4,r2
  8037e8:	180b883a 	mov	r5,r3
  8037ec:	080b7700 	call	80b770 <__gedf2>
  8037f0:	002b883a 	mov	r21,zero
  8037f4:	0023883a 	mov	r17,zero
  8037f8:	1000bf16 	blt	r2,zero,803af8 <_dtoa_r+0x1060>
  8037fc:	d9802217 	ldw	r6,136(sp)
  803800:	ddc00717 	ldw	r23,28(sp)
  803804:	018c303a 	nor	r6,zero,r6
  803808:	d9800515 	stw	r6,20(sp)
  80380c:	a80b883a 	mov	r5,r21
  803810:	e009883a 	mov	r4,fp
  803814:	08061dc0 	call	8061dc <_Bfree>
  803818:	883e4926 	beq	r17,zero,803140 <__alt_data_end+0xff803140>
  80381c:	003fad06 	br	8036d4 <__alt_data_end+0xff8036d4>
  803820:	d9c01117 	ldw	r7,68(sp)
  803824:	3801bc26 	beq	r7,zero,803f18 <_dtoa_r+0x1480>
  803828:	10810cc4 	addi	r2,r2,1075
  80382c:	dd400a17 	ldw	r21,40(sp)
  803830:	dd000817 	ldw	r20,32(sp)
  803834:	003f0a06 	br	803460 <__alt_data_end+0xff803460>
  803838:	00800704 	movi	r2,28
  80383c:	d9000817 	ldw	r4,32(sp)
  803840:	a0a9883a 	add	r20,r20,r2
  803844:	b0ad883a 	add	r22,r22,r2
  803848:	2089883a 	add	r4,r4,r2
  80384c:	d9000815 	stw	r4,32(sp)
  803850:	003f5106 	br	803598 <__alt_data_end+0xff803598>
  803854:	d8c00317 	ldw	r3,12(sp)
  803858:	b8c1fc0e 	bge	r23,r3,80404c <_dtoa_r+0x15b4>
  80385c:	0027883a 	mov	r19,zero
  803860:	b805883a 	mov	r2,r23
  803864:	003f3e06 	br	803560 <__alt_data_end+0xff803560>
  803868:	880b883a 	mov	r5,r17
  80386c:	e009883a 	mov	r4,fp
  803870:	000f883a 	mov	r7,zero
  803874:	01800284 	movi	r6,10
  803878:	08062040 	call	806204 <__multadd>
  80387c:	d9000c17 	ldw	r4,48(sp)
  803880:	1023883a 	mov	r17,r2
  803884:	0102040e 	bge	zero,r4,804098 <_dtoa_r+0x1600>
  803888:	d9000615 	stw	r4,24(sp)
  80388c:	0500050e 	bge	zero,r20,8038a4 <_dtoa_r+0xe0c>
  803890:	880b883a 	mov	r5,r17
  803894:	a00d883a 	mov	r6,r20
  803898:	e009883a 	mov	r4,fp
  80389c:	08068b40 	call	8068b4 <__lshift>
  8038a0:	1023883a 	mov	r17,r2
  8038a4:	9801241e 	bne	r19,zero,803d38 <_dtoa_r+0x12a0>
  8038a8:	8829883a 	mov	r20,r17
  8038ac:	d9000617 	ldw	r4,24(sp)
  8038b0:	dcc00717 	ldw	r19,28(sp)
  8038b4:	9480004c 	andi	r18,r18,1
  8038b8:	20bfffc4 	addi	r2,r4,-1
  8038bc:	9885883a 	add	r2,r19,r2
  8038c0:	d8800415 	stw	r2,16(sp)
  8038c4:	dc800615 	stw	r18,24(sp)
  8038c8:	a80b883a 	mov	r5,r21
  8038cc:	8009883a 	mov	r4,r16
  8038d0:	08028980 	call	802898 <quorem>
  8038d4:	880b883a 	mov	r5,r17
  8038d8:	8009883a 	mov	r4,r16
  8038dc:	102f883a 	mov	r23,r2
  8038e0:	08069fc0 	call	8069fc <__mcmp>
  8038e4:	a80b883a 	mov	r5,r21
  8038e8:	a00d883a 	mov	r6,r20
  8038ec:	e009883a 	mov	r4,fp
  8038f0:	102d883a 	mov	r22,r2
  8038f4:	0806a5c0 	call	806a5c <__mdiff>
  8038f8:	1007883a 	mov	r3,r2
  8038fc:	10800317 	ldw	r2,12(r2)
  803900:	bc800c04 	addi	r18,r23,48
  803904:	180b883a 	mov	r5,r3
  803908:	10004e1e 	bne	r2,zero,803a44 <_dtoa_r+0xfac>
  80390c:	8009883a 	mov	r4,r16
  803910:	d8c01615 	stw	r3,88(sp)
  803914:	08069fc0 	call	8069fc <__mcmp>
  803918:	d8c01617 	ldw	r3,88(sp)
  80391c:	e009883a 	mov	r4,fp
  803920:	d8801615 	stw	r2,88(sp)
  803924:	180b883a 	mov	r5,r3
  803928:	08061dc0 	call	8061dc <_Bfree>
  80392c:	d8801617 	ldw	r2,88(sp)
  803930:	1000041e 	bne	r2,zero,803944 <_dtoa_r+0xeac>
  803934:	d9800317 	ldw	r6,12(sp)
  803938:	3000021e 	bne	r6,zero,803944 <_dtoa_r+0xeac>
  80393c:	d8c00617 	ldw	r3,24(sp)
  803940:	18003726 	beq	r3,zero,803a20 <_dtoa_r+0xf88>
  803944:	b0002016 	blt	r22,zero,8039c8 <_dtoa_r+0xf30>
  803948:	b000041e 	bne	r22,zero,80395c <_dtoa_r+0xec4>
  80394c:	d9000317 	ldw	r4,12(sp)
  803950:	2000021e 	bne	r4,zero,80395c <_dtoa_r+0xec4>
  803954:	d8c00617 	ldw	r3,24(sp)
  803958:	18001b26 	beq	r3,zero,8039c8 <_dtoa_r+0xf30>
  80395c:	00810716 	blt	zero,r2,803d7c <_dtoa_r+0x12e4>
  803960:	d8c00417 	ldw	r3,16(sp)
  803964:	9d800044 	addi	r22,r19,1
  803968:	9c800005 	stb	r18,0(r19)
  80396c:	b02f883a 	mov	r23,r22
  803970:	98c10626 	beq	r19,r3,803d8c <_dtoa_r+0x12f4>
  803974:	800b883a 	mov	r5,r16
  803978:	000f883a 	mov	r7,zero
  80397c:	01800284 	movi	r6,10
  803980:	e009883a 	mov	r4,fp
  803984:	08062040 	call	806204 <__multadd>
  803988:	1021883a 	mov	r16,r2
  80398c:	000f883a 	mov	r7,zero
  803990:	01800284 	movi	r6,10
  803994:	880b883a 	mov	r5,r17
  803998:	e009883a 	mov	r4,fp
  80399c:	8d002526 	beq	r17,r20,803a34 <_dtoa_r+0xf9c>
  8039a0:	08062040 	call	806204 <__multadd>
  8039a4:	a00b883a 	mov	r5,r20
  8039a8:	000f883a 	mov	r7,zero
  8039ac:	01800284 	movi	r6,10
  8039b0:	e009883a 	mov	r4,fp
  8039b4:	1023883a 	mov	r17,r2
  8039b8:	08062040 	call	806204 <__multadd>
  8039bc:	1029883a 	mov	r20,r2
  8039c0:	b027883a 	mov	r19,r22
  8039c4:	003fc006 	br	8038c8 <__alt_data_end+0xff8038c8>
  8039c8:	9011883a 	mov	r8,r18
  8039cc:	00800e0e 	bge	zero,r2,803a08 <_dtoa_r+0xf70>
  8039d0:	800b883a 	mov	r5,r16
  8039d4:	01800044 	movi	r6,1
  8039d8:	e009883a 	mov	r4,fp
  8039dc:	da001715 	stw	r8,92(sp)
  8039e0:	08068b40 	call	8068b4 <__lshift>
  8039e4:	a80b883a 	mov	r5,r21
  8039e8:	1009883a 	mov	r4,r2
  8039ec:	1021883a 	mov	r16,r2
  8039f0:	08069fc0 	call	8069fc <__mcmp>
  8039f4:	da001717 	ldw	r8,92(sp)
  8039f8:	0081960e 	bge	zero,r2,804054 <_dtoa_r+0x15bc>
  8039fc:	00800e44 	movi	r2,57
  803a00:	40817026 	beq	r8,r2,803fc4 <_dtoa_r+0x152c>
  803a04:	ba000c44 	addi	r8,r23,49
  803a08:	8825883a 	mov	r18,r17
  803a0c:	9dc00044 	addi	r23,r19,1
  803a10:	9a000005 	stb	r8,0(r19)
  803a14:	a023883a 	mov	r17,r20
  803a18:	dc000915 	stw	r16,36(sp)
  803a1c:	003f2406 	br	8036b0 <__alt_data_end+0xff8036b0>
  803a20:	00800e44 	movi	r2,57
  803a24:	9011883a 	mov	r8,r18
  803a28:	90816626 	beq	r18,r2,803fc4 <_dtoa_r+0x152c>
  803a2c:	05bff516 	blt	zero,r22,803a04 <__alt_data_end+0xff803a04>
  803a30:	003ff506 	br	803a08 <__alt_data_end+0xff803a08>
  803a34:	08062040 	call	806204 <__multadd>
  803a38:	1023883a 	mov	r17,r2
  803a3c:	1029883a 	mov	r20,r2
  803a40:	003fdf06 	br	8039c0 <__alt_data_end+0xff8039c0>
  803a44:	e009883a 	mov	r4,fp
  803a48:	08061dc0 	call	8061dc <_Bfree>
  803a4c:	00800044 	movi	r2,1
  803a50:	003fbc06 	br	803944 <__alt_data_end+0xff803944>
  803a54:	a80b883a 	mov	r5,r21
  803a58:	8009883a 	mov	r4,r16
  803a5c:	08069fc0 	call	8069fc <__mcmp>
  803a60:	103edb0e 	bge	r2,zero,8035d0 <__alt_data_end+0xff8035d0>
  803a64:	800b883a 	mov	r5,r16
  803a68:	000f883a 	mov	r7,zero
  803a6c:	01800284 	movi	r6,10
  803a70:	e009883a 	mov	r4,fp
  803a74:	08062040 	call	806204 <__multadd>
  803a78:	1021883a 	mov	r16,r2
  803a7c:	d8800517 	ldw	r2,20(sp)
  803a80:	d8c00b17 	ldw	r3,44(sp)
  803a84:	10bfffc4 	addi	r2,r2,-1
  803a88:	d8800515 	stw	r2,20(sp)
  803a8c:	183f761e 	bne	r3,zero,803868 <__alt_data_end+0xff803868>
  803a90:	d9000c17 	ldw	r4,48(sp)
  803a94:	0101730e 	bge	zero,r4,804064 <_dtoa_r+0x15cc>
  803a98:	d9000615 	stw	r4,24(sp)
  803a9c:	003ed006 	br	8035e0 <__alt_data_end+0xff8035e0>
  803aa0:	00800084 	movi	r2,2
  803aa4:	3081861e 	bne	r6,r2,8040c0 <_dtoa_r+0x1628>
  803aa8:	d8000b15 	stw	zero,44(sp)
  803aac:	003f3c06 	br	8037a0 <__alt_data_end+0xff8037a0>
  803ab0:	dc000917 	ldw	r16,36(sp)
  803ab4:	003e9206 	br	803500 <__alt_data_end+0xff803500>
  803ab8:	d9c00317 	ldw	r7,12(sp)
  803abc:	00800084 	movi	r2,2
  803ac0:	11fec50e 	bge	r2,r7,8035d8 <__alt_data_end+0xff8035d8>
  803ac4:	d9000617 	ldw	r4,24(sp)
  803ac8:	20013c1e 	bne	r4,zero,803fbc <_dtoa_r+0x1524>
  803acc:	a80b883a 	mov	r5,r21
  803ad0:	000f883a 	mov	r7,zero
  803ad4:	01800144 	movi	r6,5
  803ad8:	e009883a 	mov	r4,fp
  803adc:	08062040 	call	806204 <__multadd>
  803ae0:	100b883a 	mov	r5,r2
  803ae4:	8009883a 	mov	r4,r16
  803ae8:	102b883a 	mov	r21,r2
  803aec:	08069fc0 	call	8069fc <__mcmp>
  803af0:	dc000915 	stw	r16,36(sp)
  803af4:	00bf410e 	bge	zero,r2,8037fc <__alt_data_end+0xff8037fc>
  803af8:	d9c00717 	ldw	r7,28(sp)
  803afc:	00800c44 	movi	r2,49
  803b00:	38800005 	stb	r2,0(r7)
  803b04:	d8800517 	ldw	r2,20(sp)
  803b08:	3dc00044 	addi	r23,r7,1
  803b0c:	10800044 	addi	r2,r2,1
  803b10:	d8800515 	stw	r2,20(sp)
  803b14:	003f3d06 	br	80380c <__alt_data_end+0xff80380c>
  803b18:	d9800517 	ldw	r6,20(sp)
  803b1c:	d9c00717 	ldw	r7,28(sp)
  803b20:	00800c44 	movi	r2,49
  803b24:	31800044 	addi	r6,r6,1
  803b28:	d9800515 	stw	r6,20(sp)
  803b2c:	38800005 	stb	r2,0(r7)
  803b30:	003edf06 	br	8036b0 <__alt_data_end+0xff8036b0>
  803b34:	d8000b15 	stw	zero,44(sp)
  803b38:	003c9f06 	br	802db8 <__alt_data_end+0xff802db8>
  803b3c:	903e7e1e 	bne	r18,zero,803538 <__alt_data_end+0xff803538>
  803b40:	00800434 	movhi	r2,16
  803b44:	10bfffc4 	addi	r2,r2,-1
  803b48:	9884703a 	and	r2,r19,r2
  803b4c:	1000ea1e 	bne	r2,zero,803ef8 <_dtoa_r+0x1460>
  803b50:	9cdffc2c 	andhi	r19,r19,32752
  803b54:	9800e826 	beq	r19,zero,803ef8 <_dtoa_r+0x1460>
  803b58:	d9c00817 	ldw	r7,32(sp)
  803b5c:	b5800044 	addi	r22,r22,1
  803b60:	04c00044 	movi	r19,1
  803b64:	39c00044 	addi	r7,r7,1
  803b68:	d9c00815 	stw	r7,32(sp)
  803b6c:	d8800d17 	ldw	r2,52(sp)
  803b70:	103e721e 	bne	r2,zero,80353c <__alt_data_end+0xff80353c>
  803b74:	00800044 	movi	r2,1
  803b78:	003e7906 	br	803560 <__alt_data_end+0xff803560>
  803b7c:	8009883a 	mov	r4,r16
  803b80:	080c9d40 	call	80c9d4 <__floatsidf>
  803b84:	d9800f17 	ldw	r6,60(sp)
  803b88:	d9c01017 	ldw	r7,64(sp)
  803b8c:	1009883a 	mov	r4,r2
  803b90:	180b883a 	mov	r5,r3
  803b94:	080b9400 	call	80b940 <__muldf3>
  803b98:	000d883a 	mov	r6,zero
  803b9c:	01d00734 	movhi	r7,16412
  803ba0:	1009883a 	mov	r4,r2
  803ba4:	180b883a 	mov	r5,r3
  803ba8:	080a5540 	call	80a554 <__adddf3>
  803bac:	047f3034 	movhi	r17,64704
  803bb0:	1021883a 	mov	r16,r2
  803bb4:	1c63883a 	add	r17,r3,r17
  803bb8:	d9000f17 	ldw	r4,60(sp)
  803bbc:	d9401017 	ldw	r5,64(sp)
  803bc0:	000d883a 	mov	r6,zero
  803bc4:	01d00534 	movhi	r7,16404
  803bc8:	080c0580 	call	80c058 <__subdf3>
  803bcc:	800d883a 	mov	r6,r16
  803bd0:	880f883a 	mov	r7,r17
  803bd4:	1009883a 	mov	r4,r2
  803bd8:	180b883a 	mov	r5,r3
  803bdc:	102b883a 	mov	r21,r2
  803be0:	1829883a 	mov	r20,r3
  803be4:	080b7700 	call	80b770 <__gedf2>
  803be8:	00806c16 	blt	zero,r2,803d9c <_dtoa_r+0x1304>
  803bec:	89e0003c 	xorhi	r7,r17,32768
  803bf0:	800d883a 	mov	r6,r16
  803bf4:	a809883a 	mov	r4,r21
  803bf8:	a00b883a 	mov	r5,r20
  803bfc:	080b84c0 	call	80b84c <__ledf2>
  803c00:	103d7e0e 	bge	r2,zero,8031fc <__alt_data_end+0xff8031fc>
  803c04:	002b883a 	mov	r21,zero
  803c08:	0023883a 	mov	r17,zero
  803c0c:	003efb06 	br	8037fc <__alt_data_end+0xff8037fc>
  803c10:	d8800717 	ldw	r2,28(sp)
  803c14:	003bd006 	br	802b58 <__alt_data_end+0xff802b58>
  803c18:	d9000a17 	ldw	r4,40(sp)
  803c1c:	d9800d17 	ldw	r6,52(sp)
  803c20:	dd400a15 	stw	r21,40(sp)
  803c24:	a905c83a 	sub	r2,r21,r4
  803c28:	308d883a 	add	r6,r6,r2
  803c2c:	d9800d15 	stw	r6,52(sp)
  803c30:	002b883a 	mov	r21,zero
  803c34:	003e0606 	br	803450 <__alt_data_end+0xff803450>
  803c38:	9023883a 	mov	r17,r18
  803c3c:	9829883a 	mov	r20,r19
  803c40:	04000084 	movi	r16,2
  803c44:	003c9206 	br	802e90 <__alt_data_end+0xff802e90>
  803c48:	04000044 	movi	r16,1
  803c4c:	dc000c15 	stw	r16,48(sp)
  803c50:	dc000615 	stw	r16,24(sp)
  803c54:	dc002215 	stw	r16,136(sp)
  803c58:	e0001115 	stw	zero,68(fp)
  803c5c:	000b883a 	mov	r5,zero
  803c60:	003c6906 	br	802e08 <__alt_data_end+0xff802e08>
  803c64:	3021883a 	mov	r16,r6
  803c68:	003ffb06 	br	803c58 <__alt_data_end+0xff803c58>
  803c6c:	1000021e 	bne	r2,zero,803c78 <_dtoa_r+0x11e0>
  803c70:	4200004c 	andi	r8,r8,1
  803c74:	403e7d1e 	bne	r8,zero,80366c <__alt_data_end+0xff80366c>
  803c78:	01000c04 	movi	r4,48
  803c7c:	00000106 	br	803c84 <_dtoa_r+0x11ec>
  803c80:	102f883a 	mov	r23,r2
  803c84:	b8bfffc4 	addi	r2,r23,-1
  803c88:	10c00007 	ldb	r3,0(r2)
  803c8c:	193ffc26 	beq	r3,r4,803c80 <__alt_data_end+0xff803c80>
  803c90:	003e8706 	br	8036b0 <__alt_data_end+0xff8036b0>
  803c94:	d8800517 	ldw	r2,20(sp)
  803c98:	00a3c83a 	sub	r17,zero,r2
  803c9c:	8800a426 	beq	r17,zero,803f30 <_dtoa_r+0x1498>
  803ca0:	888003cc 	andi	r2,r17,15
  803ca4:	100490fa 	slli	r2,r2,3
  803ca8:	00c02074 	movhi	r3,129
  803cac:	18fcf604 	addi	r3,r3,-3112
  803cb0:	1885883a 	add	r2,r3,r2
  803cb4:	11800017 	ldw	r6,0(r2)
  803cb8:	11c00117 	ldw	r7,4(r2)
  803cbc:	9009883a 	mov	r4,r18
  803cc0:	980b883a 	mov	r5,r19
  803cc4:	8823d13a 	srai	r17,r17,4
  803cc8:	080b9400 	call	80b940 <__muldf3>
  803ccc:	d8800f15 	stw	r2,60(sp)
  803cd0:	d8c01015 	stw	r3,64(sp)
  803cd4:	8800e826 	beq	r17,zero,804078 <_dtoa_r+0x15e0>
  803cd8:	05002074 	movhi	r20,129
  803cdc:	a53cec04 	addi	r20,r20,-3152
  803ce0:	04000084 	movi	r16,2
  803ce4:	8980004c 	andi	r6,r17,1
  803ce8:	1009883a 	mov	r4,r2
  803cec:	8823d07a 	srai	r17,r17,1
  803cf0:	180b883a 	mov	r5,r3
  803cf4:	30000426 	beq	r6,zero,803d08 <_dtoa_r+0x1270>
  803cf8:	a1800017 	ldw	r6,0(r20)
  803cfc:	a1c00117 	ldw	r7,4(r20)
  803d00:	84000044 	addi	r16,r16,1
  803d04:	080b9400 	call	80b940 <__muldf3>
  803d08:	a5000204 	addi	r20,r20,8
  803d0c:	883ff51e 	bne	r17,zero,803ce4 <__alt_data_end+0xff803ce4>
  803d10:	d8800f15 	stw	r2,60(sp)
  803d14:	d8c01015 	stw	r3,64(sp)
  803d18:	003c7606 	br	802ef4 <__alt_data_end+0xff802ef4>
  803d1c:	00c00c04 	movi	r3,48
  803d20:	10c00005 	stb	r3,0(r2)
  803d24:	d8c00517 	ldw	r3,20(sp)
  803d28:	bd3fffc3 	ldbu	r20,-1(r23)
  803d2c:	18c00044 	addi	r3,r3,1
  803d30:	d8c00515 	stw	r3,20(sp)
  803d34:	003db906 	br	80341c <__alt_data_end+0xff80341c>
  803d38:	89400117 	ldw	r5,4(r17)
  803d3c:	e009883a 	mov	r4,fp
  803d40:	08061340 	call	806134 <_Balloc>
  803d44:	89800417 	ldw	r6,16(r17)
  803d48:	89400304 	addi	r5,r17,12
  803d4c:	11000304 	addi	r4,r2,12
  803d50:	31800084 	addi	r6,r6,2
  803d54:	318d883a 	add	r6,r6,r6
  803d58:	318d883a 	add	r6,r6,r6
  803d5c:	1027883a 	mov	r19,r2
  803d60:	0805d680 	call	805d68 <memcpy>
  803d64:	01800044 	movi	r6,1
  803d68:	980b883a 	mov	r5,r19
  803d6c:	e009883a 	mov	r4,fp
  803d70:	08068b40 	call	8068b4 <__lshift>
  803d74:	1029883a 	mov	r20,r2
  803d78:	003ecc06 	br	8038ac <__alt_data_end+0xff8038ac>
  803d7c:	00800e44 	movi	r2,57
  803d80:	90809026 	beq	r18,r2,803fc4 <_dtoa_r+0x152c>
  803d84:	92000044 	addi	r8,r18,1
  803d88:	003f1f06 	br	803a08 <__alt_data_end+0xff803a08>
  803d8c:	9011883a 	mov	r8,r18
  803d90:	8825883a 	mov	r18,r17
  803d94:	a023883a 	mov	r17,r20
  803d98:	003e2906 	br	803640 <__alt_data_end+0xff803640>
  803d9c:	002b883a 	mov	r21,zero
  803da0:	0023883a 	mov	r17,zero
  803da4:	003f5406 	br	803af8 <__alt_data_end+0xff803af8>
  803da8:	61bfffc4 	addi	r6,r12,-1
  803dac:	300490fa 	slli	r2,r6,3
  803db0:	00c02074 	movhi	r3,129
  803db4:	18fcf604 	addi	r3,r3,-3112
  803db8:	1885883a 	add	r2,r3,r2
  803dbc:	11000017 	ldw	r4,0(r2)
  803dc0:	11400117 	ldw	r5,4(r2)
  803dc4:	d8800717 	ldw	r2,28(sp)
  803dc8:	880f883a 	mov	r7,r17
  803dcc:	d9801215 	stw	r6,72(sp)
  803dd0:	800d883a 	mov	r6,r16
  803dd4:	db001615 	stw	r12,88(sp)
  803dd8:	15c00044 	addi	r23,r2,1
  803ddc:	080b9400 	call	80b940 <__muldf3>
  803de0:	d9401017 	ldw	r5,64(sp)
  803de4:	d9000f17 	ldw	r4,60(sp)
  803de8:	d8c01515 	stw	r3,84(sp)
  803dec:	d8801415 	stw	r2,80(sp)
  803df0:	080c9540 	call	80c954 <__fixdfsi>
  803df4:	1009883a 	mov	r4,r2
  803df8:	1021883a 	mov	r16,r2
  803dfc:	080c9d40 	call	80c9d4 <__floatsidf>
  803e00:	d9000f17 	ldw	r4,60(sp)
  803e04:	d9401017 	ldw	r5,64(sp)
  803e08:	100d883a 	mov	r6,r2
  803e0c:	180f883a 	mov	r7,r3
  803e10:	080c0580 	call	80c058 <__subdf3>
  803e14:	1829883a 	mov	r20,r3
  803e18:	d8c00717 	ldw	r3,28(sp)
  803e1c:	84000c04 	addi	r16,r16,48
  803e20:	1023883a 	mov	r17,r2
  803e24:	1c000005 	stb	r16,0(r3)
  803e28:	db001617 	ldw	r12,88(sp)
  803e2c:	00800044 	movi	r2,1
  803e30:	60802226 	beq	r12,r2,803ebc <_dtoa_r+0x1424>
  803e34:	d9c00717 	ldw	r7,28(sp)
  803e38:	8805883a 	mov	r2,r17
  803e3c:	b82b883a 	mov	r21,r23
  803e40:	3b19883a 	add	r12,r7,r12
  803e44:	6023883a 	mov	r17,r12
  803e48:	a007883a 	mov	r3,r20
  803e4c:	dc800f15 	stw	r18,60(sp)
  803e50:	000d883a 	mov	r6,zero
  803e54:	01d00934 	movhi	r7,16420
  803e58:	1009883a 	mov	r4,r2
  803e5c:	180b883a 	mov	r5,r3
  803e60:	080b9400 	call	80b940 <__muldf3>
  803e64:	180b883a 	mov	r5,r3
  803e68:	1009883a 	mov	r4,r2
  803e6c:	1829883a 	mov	r20,r3
  803e70:	1025883a 	mov	r18,r2
  803e74:	080c9540 	call	80c954 <__fixdfsi>
  803e78:	1009883a 	mov	r4,r2
  803e7c:	1021883a 	mov	r16,r2
  803e80:	080c9d40 	call	80c9d4 <__floatsidf>
  803e84:	100d883a 	mov	r6,r2
  803e88:	180f883a 	mov	r7,r3
  803e8c:	9009883a 	mov	r4,r18
  803e90:	a00b883a 	mov	r5,r20
  803e94:	84000c04 	addi	r16,r16,48
  803e98:	080c0580 	call	80c058 <__subdf3>
  803e9c:	ad400044 	addi	r21,r21,1
  803ea0:	ac3fffc5 	stb	r16,-1(r21)
  803ea4:	ac7fea1e 	bne	r21,r17,803e50 <__alt_data_end+0xff803e50>
  803ea8:	1023883a 	mov	r17,r2
  803eac:	d8801217 	ldw	r2,72(sp)
  803eb0:	dc800f17 	ldw	r18,60(sp)
  803eb4:	1829883a 	mov	r20,r3
  803eb8:	b8af883a 	add	r23,r23,r2
  803ebc:	d9001417 	ldw	r4,80(sp)
  803ec0:	d9401517 	ldw	r5,84(sp)
  803ec4:	000d883a 	mov	r6,zero
  803ec8:	01cff834 	movhi	r7,16352
  803ecc:	080a5540 	call	80a554 <__adddf3>
  803ed0:	880d883a 	mov	r6,r17
  803ed4:	a00f883a 	mov	r7,r20
  803ed8:	1009883a 	mov	r4,r2
  803edc:	180b883a 	mov	r5,r3
  803ee0:	080b84c0 	call	80b84c <__ledf2>
  803ee4:	10003e0e 	bge	r2,zero,803fe0 <_dtoa_r+0x1548>
  803ee8:	d9001317 	ldw	r4,76(sp)
  803eec:	bd3fffc3 	ldbu	r20,-1(r23)
  803ef0:	d9000515 	stw	r4,20(sp)
  803ef4:	003d3b06 	br	8033e4 <__alt_data_end+0xff8033e4>
  803ef8:	0027883a 	mov	r19,zero
  803efc:	003f1b06 	br	803b6c <__alt_data_end+0xff803b6c>
  803f00:	d8800817 	ldw	r2,32(sp)
  803f04:	11e9c83a 	sub	r20,r2,r7
  803f08:	0005883a 	mov	r2,zero
  803f0c:	003d5406 	br	803460 <__alt_data_end+0xff803460>
  803f10:	00800044 	movi	r2,1
  803f14:	003dc706 	br	803634 <__alt_data_end+0xff803634>
  803f18:	d8c00217 	ldw	r3,8(sp)
  803f1c:	00800d84 	movi	r2,54
  803f20:	dd400a17 	ldw	r21,40(sp)
  803f24:	10c5c83a 	sub	r2,r2,r3
  803f28:	dd000817 	ldw	r20,32(sp)
  803f2c:	003d4c06 	br	803460 <__alt_data_end+0xff803460>
  803f30:	dc800f15 	stw	r18,60(sp)
  803f34:	dcc01015 	stw	r19,64(sp)
  803f38:	04000084 	movi	r16,2
  803f3c:	003bed06 	br	802ef4 <__alt_data_end+0xff802ef4>
  803f40:	d9000617 	ldw	r4,24(sp)
  803f44:	203f0d26 	beq	r4,zero,803b7c <__alt_data_end+0xff803b7c>
  803f48:	d9800c17 	ldw	r6,48(sp)
  803f4c:	01bcab0e 	bge	zero,r6,8031fc <__alt_data_end+0xff8031fc>
  803f50:	d9401017 	ldw	r5,64(sp)
  803f54:	d9000f17 	ldw	r4,60(sp)
  803f58:	000d883a 	mov	r6,zero
  803f5c:	01d00934 	movhi	r7,16420
  803f60:	080b9400 	call	80b940 <__muldf3>
  803f64:	81000044 	addi	r4,r16,1
  803f68:	d8800f15 	stw	r2,60(sp)
  803f6c:	d8c01015 	stw	r3,64(sp)
  803f70:	080c9d40 	call	80c9d4 <__floatsidf>
  803f74:	d9800f17 	ldw	r6,60(sp)
  803f78:	d9c01017 	ldw	r7,64(sp)
  803f7c:	1009883a 	mov	r4,r2
  803f80:	180b883a 	mov	r5,r3
  803f84:	080b9400 	call	80b940 <__muldf3>
  803f88:	01d00734 	movhi	r7,16412
  803f8c:	000d883a 	mov	r6,zero
  803f90:	1009883a 	mov	r4,r2
  803f94:	180b883a 	mov	r5,r3
  803f98:	080a5540 	call	80a554 <__adddf3>
  803f9c:	d9c00517 	ldw	r7,20(sp)
  803fa0:	047f3034 	movhi	r17,64704
  803fa4:	1021883a 	mov	r16,r2
  803fa8:	39ffffc4 	addi	r7,r7,-1
  803fac:	d9c01315 	stw	r7,76(sp)
  803fb0:	1c63883a 	add	r17,r3,r17
  803fb4:	db000c17 	ldw	r12,48(sp)
  803fb8:	003bea06 	br	802f64 <__alt_data_end+0xff802f64>
  803fbc:	dc000915 	stw	r16,36(sp)
  803fc0:	003e0e06 	br	8037fc <__alt_data_end+0xff8037fc>
  803fc4:	01000e44 	movi	r4,57
  803fc8:	8825883a 	mov	r18,r17
  803fcc:	9dc00044 	addi	r23,r19,1
  803fd0:	99000005 	stb	r4,0(r19)
  803fd4:	a023883a 	mov	r17,r20
  803fd8:	dc000915 	stw	r16,36(sp)
  803fdc:	003da406 	br	803670 <__alt_data_end+0xff803670>
  803fe0:	d9801417 	ldw	r6,80(sp)
  803fe4:	d9c01517 	ldw	r7,84(sp)
  803fe8:	0009883a 	mov	r4,zero
  803fec:	014ff834 	movhi	r5,16352
  803ff0:	080c0580 	call	80c058 <__subdf3>
  803ff4:	880d883a 	mov	r6,r17
  803ff8:	a00f883a 	mov	r7,r20
  803ffc:	1009883a 	mov	r4,r2
  804000:	180b883a 	mov	r5,r3
  804004:	080b7700 	call	80b770 <__gedf2>
  804008:	00bc7c0e 	bge	zero,r2,8031fc <__alt_data_end+0xff8031fc>
  80400c:	01000c04 	movi	r4,48
  804010:	00000106 	br	804018 <_dtoa_r+0x1580>
  804014:	102f883a 	mov	r23,r2
  804018:	b8bfffc4 	addi	r2,r23,-1
  80401c:	10c00007 	ldb	r3,0(r2)
  804020:	193ffc26 	beq	r3,r4,804014 <__alt_data_end+0xff804014>
  804024:	d9801317 	ldw	r6,76(sp)
  804028:	d9800515 	stw	r6,20(sp)
  80402c:	003c4406 	br	803140 <__alt_data_end+0xff803140>
  804030:	d9801317 	ldw	r6,76(sp)
  804034:	d9800515 	stw	r6,20(sp)
  804038:	003cea06 	br	8033e4 <__alt_data_end+0xff8033e4>
  80403c:	dd800f17 	ldw	r22,60(sp)
  804040:	dcc01017 	ldw	r19,64(sp)
  804044:	dc801217 	ldw	r18,72(sp)
  804048:	003c6c06 	br	8031fc <__alt_data_end+0xff8031fc>
  80404c:	903e031e 	bne	r18,zero,80385c <__alt_data_end+0xff80385c>
  804050:	003ebb06 	br	803b40 <__alt_data_end+0xff803b40>
  804054:	103e6c1e 	bne	r2,zero,803a08 <__alt_data_end+0xff803a08>
  804058:	4080004c 	andi	r2,r8,1
  80405c:	103e6a26 	beq	r2,zero,803a08 <__alt_data_end+0xff803a08>
  804060:	003e6606 	br	8039fc <__alt_data_end+0xff8039fc>
  804064:	d8c00317 	ldw	r3,12(sp)
  804068:	00800084 	movi	r2,2
  80406c:	10c02916 	blt	r2,r3,804114 <_dtoa_r+0x167c>
  804070:	d9000c17 	ldw	r4,48(sp)
  804074:	003e8806 	br	803a98 <__alt_data_end+0xff803a98>
  804078:	04000084 	movi	r16,2
  80407c:	003b9d06 	br	802ef4 <__alt_data_end+0xff802ef4>
  804080:	d9001317 	ldw	r4,76(sp)
  804084:	d9000515 	stw	r4,20(sp)
  804088:	003cd606 	br	8033e4 <__alt_data_end+0xff8033e4>
  80408c:	d8801317 	ldw	r2,76(sp)
  804090:	d8800515 	stw	r2,20(sp)
  804094:	003c2a06 	br	803140 <__alt_data_end+0xff803140>
  804098:	d9800317 	ldw	r6,12(sp)
  80409c:	00800084 	movi	r2,2
  8040a0:	11801516 	blt	r2,r6,8040f8 <_dtoa_r+0x1660>
  8040a4:	d9c00c17 	ldw	r7,48(sp)
  8040a8:	d9c00615 	stw	r7,24(sp)
  8040ac:	003df706 	br	80388c <__alt_data_end+0xff80388c>
  8040b0:	193d3926 	beq	r3,r4,803598 <__alt_data_end+0xff803598>
  8040b4:	00c00f04 	movi	r3,60
  8040b8:	1885c83a 	sub	r2,r3,r2
  8040bc:	003ddf06 	br	80383c <__alt_data_end+0xff80383c>
  8040c0:	e009883a 	mov	r4,fp
  8040c4:	e0001115 	stw	zero,68(fp)
  8040c8:	000b883a 	mov	r5,zero
  8040cc:	08061340 	call	806134 <_Balloc>
  8040d0:	d8800715 	stw	r2,28(sp)
  8040d4:	d8c00717 	ldw	r3,28(sp)
  8040d8:	00bfffc4 	movi	r2,-1
  8040dc:	01000044 	movi	r4,1
  8040e0:	d8800c15 	stw	r2,48(sp)
  8040e4:	e0c01015 	stw	r3,64(fp)
  8040e8:	d9000b15 	stw	r4,44(sp)
  8040ec:	d8800615 	stw	r2,24(sp)
  8040f0:	d8002215 	stw	zero,136(sp)
  8040f4:	003c4106 	br	8031fc <__alt_data_end+0xff8031fc>
  8040f8:	d8c00c17 	ldw	r3,48(sp)
  8040fc:	d8c00615 	stw	r3,24(sp)
  804100:	003e7006 	br	803ac4 <__alt_data_end+0xff803ac4>
  804104:	04400044 	movi	r17,1
  804108:	003b2006 	br	802d8c <__alt_data_end+0xff802d8c>
  80410c:	000b883a 	mov	r5,zero
  804110:	003b3d06 	br	802e08 <__alt_data_end+0xff802e08>
  804114:	d8800c17 	ldw	r2,48(sp)
  804118:	d8800615 	stw	r2,24(sp)
  80411c:	003e6906 	br	803ac4 <__alt_data_end+0xff803ac4>

00804120 <__sflush_r>:
  804120:	2880030b 	ldhu	r2,12(r5)
  804124:	defffb04 	addi	sp,sp,-20
  804128:	dcc00315 	stw	r19,12(sp)
  80412c:	dc400115 	stw	r17,4(sp)
  804130:	dfc00415 	stw	ra,16(sp)
  804134:	dc800215 	stw	r18,8(sp)
  804138:	dc000015 	stw	r16,0(sp)
  80413c:	10c0020c 	andi	r3,r2,8
  804140:	2823883a 	mov	r17,r5
  804144:	2027883a 	mov	r19,r4
  804148:	1800311e 	bne	r3,zero,804210 <__sflush_r+0xf0>
  80414c:	28c00117 	ldw	r3,4(r5)
  804150:	10820014 	ori	r2,r2,2048
  804154:	2880030d 	sth	r2,12(r5)
  804158:	00c04b0e 	bge	zero,r3,804288 <__sflush_r+0x168>
  80415c:	8a000a17 	ldw	r8,40(r17)
  804160:	40002326 	beq	r8,zero,8041f0 <__sflush_r+0xd0>
  804164:	9c000017 	ldw	r16,0(r19)
  804168:	10c4000c 	andi	r3,r2,4096
  80416c:	98000015 	stw	zero,0(r19)
  804170:	18004826 	beq	r3,zero,804294 <__sflush_r+0x174>
  804174:	89801417 	ldw	r6,80(r17)
  804178:	10c0010c 	andi	r3,r2,4
  80417c:	18000626 	beq	r3,zero,804198 <__sflush_r+0x78>
  804180:	88c00117 	ldw	r3,4(r17)
  804184:	88800c17 	ldw	r2,48(r17)
  804188:	30cdc83a 	sub	r6,r6,r3
  80418c:	10000226 	beq	r2,zero,804198 <__sflush_r+0x78>
  804190:	88800f17 	ldw	r2,60(r17)
  804194:	308dc83a 	sub	r6,r6,r2
  804198:	89400717 	ldw	r5,28(r17)
  80419c:	000f883a 	mov	r7,zero
  8041a0:	9809883a 	mov	r4,r19
  8041a4:	403ee83a 	callr	r8
  8041a8:	00ffffc4 	movi	r3,-1
  8041ac:	10c04426 	beq	r2,r3,8042c0 <__sflush_r+0x1a0>
  8041b0:	88c0030b 	ldhu	r3,12(r17)
  8041b4:	89000417 	ldw	r4,16(r17)
  8041b8:	88000115 	stw	zero,4(r17)
  8041bc:	197dffcc 	andi	r5,r3,63487
  8041c0:	8940030d 	sth	r5,12(r17)
  8041c4:	89000015 	stw	r4,0(r17)
  8041c8:	18c4000c 	andi	r3,r3,4096
  8041cc:	18002c1e 	bne	r3,zero,804280 <__sflush_r+0x160>
  8041d0:	89400c17 	ldw	r5,48(r17)
  8041d4:	9c000015 	stw	r16,0(r19)
  8041d8:	28000526 	beq	r5,zero,8041f0 <__sflush_r+0xd0>
  8041dc:	88801004 	addi	r2,r17,64
  8041e0:	28800226 	beq	r5,r2,8041ec <__sflush_r+0xcc>
  8041e4:	9809883a 	mov	r4,r19
  8041e8:	080488c0 	call	80488c <_free_r>
  8041ec:	88000c15 	stw	zero,48(r17)
  8041f0:	0005883a 	mov	r2,zero
  8041f4:	dfc00417 	ldw	ra,16(sp)
  8041f8:	dcc00317 	ldw	r19,12(sp)
  8041fc:	dc800217 	ldw	r18,8(sp)
  804200:	dc400117 	ldw	r17,4(sp)
  804204:	dc000017 	ldw	r16,0(sp)
  804208:	dec00504 	addi	sp,sp,20
  80420c:	f800283a 	ret
  804210:	2c800417 	ldw	r18,16(r5)
  804214:	903ff626 	beq	r18,zero,8041f0 <__alt_data_end+0xff8041f0>
  804218:	2c000017 	ldw	r16,0(r5)
  80421c:	108000cc 	andi	r2,r2,3
  804220:	2c800015 	stw	r18,0(r5)
  804224:	84a1c83a 	sub	r16,r16,r18
  804228:	1000131e 	bne	r2,zero,804278 <__sflush_r+0x158>
  80422c:	28800517 	ldw	r2,20(r5)
  804230:	88800215 	stw	r2,8(r17)
  804234:	04000316 	blt	zero,r16,804244 <__sflush_r+0x124>
  804238:	003fed06 	br	8041f0 <__alt_data_end+0xff8041f0>
  80423c:	90a5883a 	add	r18,r18,r2
  804240:	043feb0e 	bge	zero,r16,8041f0 <__alt_data_end+0xff8041f0>
  804244:	88800917 	ldw	r2,36(r17)
  804248:	89400717 	ldw	r5,28(r17)
  80424c:	800f883a 	mov	r7,r16
  804250:	900d883a 	mov	r6,r18
  804254:	9809883a 	mov	r4,r19
  804258:	103ee83a 	callr	r2
  80425c:	80a1c83a 	sub	r16,r16,r2
  804260:	00bff616 	blt	zero,r2,80423c <__alt_data_end+0xff80423c>
  804264:	88c0030b 	ldhu	r3,12(r17)
  804268:	00bfffc4 	movi	r2,-1
  80426c:	18c01014 	ori	r3,r3,64
  804270:	88c0030d 	sth	r3,12(r17)
  804274:	003fdf06 	br	8041f4 <__alt_data_end+0xff8041f4>
  804278:	0005883a 	mov	r2,zero
  80427c:	003fec06 	br	804230 <__alt_data_end+0xff804230>
  804280:	88801415 	stw	r2,80(r17)
  804284:	003fd206 	br	8041d0 <__alt_data_end+0xff8041d0>
  804288:	28c00f17 	ldw	r3,60(r5)
  80428c:	00ffb316 	blt	zero,r3,80415c <__alt_data_end+0xff80415c>
  804290:	003fd706 	br	8041f0 <__alt_data_end+0xff8041f0>
  804294:	89400717 	ldw	r5,28(r17)
  804298:	000d883a 	mov	r6,zero
  80429c:	01c00044 	movi	r7,1
  8042a0:	9809883a 	mov	r4,r19
  8042a4:	403ee83a 	callr	r8
  8042a8:	100d883a 	mov	r6,r2
  8042ac:	00bfffc4 	movi	r2,-1
  8042b0:	30801426 	beq	r6,r2,804304 <__sflush_r+0x1e4>
  8042b4:	8880030b 	ldhu	r2,12(r17)
  8042b8:	8a000a17 	ldw	r8,40(r17)
  8042bc:	003fae06 	br	804178 <__alt_data_end+0xff804178>
  8042c0:	98c00017 	ldw	r3,0(r19)
  8042c4:	183fba26 	beq	r3,zero,8041b0 <__alt_data_end+0xff8041b0>
  8042c8:	01000744 	movi	r4,29
  8042cc:	19000626 	beq	r3,r4,8042e8 <__sflush_r+0x1c8>
  8042d0:	01000584 	movi	r4,22
  8042d4:	19000426 	beq	r3,r4,8042e8 <__sflush_r+0x1c8>
  8042d8:	88c0030b 	ldhu	r3,12(r17)
  8042dc:	18c01014 	ori	r3,r3,64
  8042e0:	88c0030d 	sth	r3,12(r17)
  8042e4:	003fc306 	br	8041f4 <__alt_data_end+0xff8041f4>
  8042e8:	8880030b 	ldhu	r2,12(r17)
  8042ec:	88c00417 	ldw	r3,16(r17)
  8042f0:	88000115 	stw	zero,4(r17)
  8042f4:	10bdffcc 	andi	r2,r2,63487
  8042f8:	8880030d 	sth	r2,12(r17)
  8042fc:	88c00015 	stw	r3,0(r17)
  804300:	003fb306 	br	8041d0 <__alt_data_end+0xff8041d0>
  804304:	98800017 	ldw	r2,0(r19)
  804308:	103fea26 	beq	r2,zero,8042b4 <__alt_data_end+0xff8042b4>
  80430c:	00c00744 	movi	r3,29
  804310:	10c00226 	beq	r2,r3,80431c <__sflush_r+0x1fc>
  804314:	00c00584 	movi	r3,22
  804318:	10c0031e 	bne	r2,r3,804328 <__sflush_r+0x208>
  80431c:	9c000015 	stw	r16,0(r19)
  804320:	0005883a 	mov	r2,zero
  804324:	003fb306 	br	8041f4 <__alt_data_end+0xff8041f4>
  804328:	88c0030b 	ldhu	r3,12(r17)
  80432c:	3005883a 	mov	r2,r6
  804330:	18c01014 	ori	r3,r3,64
  804334:	88c0030d 	sth	r3,12(r17)
  804338:	003fae06 	br	8041f4 <__alt_data_end+0xff8041f4>

0080433c <_fflush_r>:
  80433c:	defffd04 	addi	sp,sp,-12
  804340:	dc000115 	stw	r16,4(sp)
  804344:	dfc00215 	stw	ra,8(sp)
  804348:	2021883a 	mov	r16,r4
  80434c:	20000226 	beq	r4,zero,804358 <_fflush_r+0x1c>
  804350:	20800e17 	ldw	r2,56(r4)
  804354:	10000c26 	beq	r2,zero,804388 <_fflush_r+0x4c>
  804358:	2880030f 	ldh	r2,12(r5)
  80435c:	1000051e 	bne	r2,zero,804374 <_fflush_r+0x38>
  804360:	0005883a 	mov	r2,zero
  804364:	dfc00217 	ldw	ra,8(sp)
  804368:	dc000117 	ldw	r16,4(sp)
  80436c:	dec00304 	addi	sp,sp,12
  804370:	f800283a 	ret
  804374:	8009883a 	mov	r4,r16
  804378:	dfc00217 	ldw	ra,8(sp)
  80437c:	dc000117 	ldw	r16,4(sp)
  804380:	dec00304 	addi	sp,sp,12
  804384:	08041201 	jmpi	804120 <__sflush_r>
  804388:	d9400015 	stw	r5,0(sp)
  80438c:	08047180 	call	804718 <__sinit>
  804390:	d9400017 	ldw	r5,0(sp)
  804394:	003ff006 	br	804358 <__alt_data_end+0xff804358>

00804398 <fflush>:
  804398:	20000526 	beq	r4,zero,8043b0 <fflush+0x18>
  80439c:	00802074 	movhi	r2,129
  8043a0:	10842704 	addi	r2,r2,4252
  8043a4:	200b883a 	mov	r5,r4
  8043a8:	11000017 	ldw	r4,0(r2)
  8043ac:	080433c1 	jmpi	80433c <_fflush_r>
  8043b0:	00802074 	movhi	r2,129
  8043b4:	10842604 	addi	r2,r2,4248
  8043b8:	11000017 	ldw	r4,0(r2)
  8043bc:	01402034 	movhi	r5,128
  8043c0:	2950cf04 	addi	r5,r5,17212
  8043c4:	080511c1 	jmpi	80511c <_fwalk_reent>

008043c8 <__fp_unlock>:
  8043c8:	0005883a 	mov	r2,zero
  8043cc:	f800283a 	ret

008043d0 <_cleanup_r>:
  8043d0:	01402074 	movhi	r5,129
  8043d4:	29644d04 	addi	r5,r5,-28364
  8043d8:	080511c1 	jmpi	80511c <_fwalk_reent>

008043dc <__sinit.part.1>:
  8043dc:	defff704 	addi	sp,sp,-36
  8043e0:	00c02034 	movhi	r3,128
  8043e4:	dfc00815 	stw	ra,32(sp)
  8043e8:	ddc00715 	stw	r23,28(sp)
  8043ec:	dd800615 	stw	r22,24(sp)
  8043f0:	dd400515 	stw	r21,20(sp)
  8043f4:	dd000415 	stw	r20,16(sp)
  8043f8:	dcc00315 	stw	r19,12(sp)
  8043fc:	dc800215 	stw	r18,8(sp)
  804400:	dc400115 	stw	r17,4(sp)
  804404:	dc000015 	stw	r16,0(sp)
  804408:	18d0f404 	addi	r3,r3,17360
  80440c:	24000117 	ldw	r16,4(r4)
  804410:	20c00f15 	stw	r3,60(r4)
  804414:	2080bb04 	addi	r2,r4,748
  804418:	00c000c4 	movi	r3,3
  80441c:	20c0b915 	stw	r3,740(r4)
  804420:	2080ba15 	stw	r2,744(r4)
  804424:	2000b815 	stw	zero,736(r4)
  804428:	05c00204 	movi	r23,8
  80442c:	00800104 	movi	r2,4
  804430:	2025883a 	mov	r18,r4
  804434:	b80d883a 	mov	r6,r23
  804438:	81001704 	addi	r4,r16,92
  80443c:	000b883a 	mov	r5,zero
  804440:	80000015 	stw	zero,0(r16)
  804444:	80000115 	stw	zero,4(r16)
  804448:	80000215 	stw	zero,8(r16)
  80444c:	8080030d 	sth	r2,12(r16)
  804450:	80001915 	stw	zero,100(r16)
  804454:	8000038d 	sth	zero,14(r16)
  804458:	80000415 	stw	zero,16(r16)
  80445c:	80000515 	stw	zero,20(r16)
  804460:	80000615 	stw	zero,24(r16)
  804464:	080600c0 	call	80600c <memset>
  804468:	05802034 	movhi	r22,128
  80446c:	94400217 	ldw	r17,8(r18)
  804470:	05402034 	movhi	r21,128
  804474:	05002034 	movhi	r20,128
  804478:	04c02034 	movhi	r19,128
  80447c:	b59dd704 	addi	r22,r22,30556
  804480:	ad5dee04 	addi	r21,r21,30648
  804484:	a51e0d04 	addi	r20,r20,30772
  804488:	9cde2404 	addi	r19,r19,30864
  80448c:	85800815 	stw	r22,32(r16)
  804490:	85400915 	stw	r21,36(r16)
  804494:	85000a15 	stw	r20,40(r16)
  804498:	84c00b15 	stw	r19,44(r16)
  80449c:	84000715 	stw	r16,28(r16)
  8044a0:	00800284 	movi	r2,10
  8044a4:	8880030d 	sth	r2,12(r17)
  8044a8:	00800044 	movi	r2,1
  8044ac:	b80d883a 	mov	r6,r23
  8044b0:	89001704 	addi	r4,r17,92
  8044b4:	000b883a 	mov	r5,zero
  8044b8:	88000015 	stw	zero,0(r17)
  8044bc:	88000115 	stw	zero,4(r17)
  8044c0:	88000215 	stw	zero,8(r17)
  8044c4:	88001915 	stw	zero,100(r17)
  8044c8:	8880038d 	sth	r2,14(r17)
  8044cc:	88000415 	stw	zero,16(r17)
  8044d0:	88000515 	stw	zero,20(r17)
  8044d4:	88000615 	stw	zero,24(r17)
  8044d8:	080600c0 	call	80600c <memset>
  8044dc:	94000317 	ldw	r16,12(r18)
  8044e0:	00800484 	movi	r2,18
  8044e4:	8c400715 	stw	r17,28(r17)
  8044e8:	8d800815 	stw	r22,32(r17)
  8044ec:	8d400915 	stw	r21,36(r17)
  8044f0:	8d000a15 	stw	r20,40(r17)
  8044f4:	8cc00b15 	stw	r19,44(r17)
  8044f8:	8080030d 	sth	r2,12(r16)
  8044fc:	00800084 	movi	r2,2
  804500:	80000015 	stw	zero,0(r16)
  804504:	80000115 	stw	zero,4(r16)
  804508:	80000215 	stw	zero,8(r16)
  80450c:	80001915 	stw	zero,100(r16)
  804510:	8080038d 	sth	r2,14(r16)
  804514:	80000415 	stw	zero,16(r16)
  804518:	80000515 	stw	zero,20(r16)
  80451c:	80000615 	stw	zero,24(r16)
  804520:	b80d883a 	mov	r6,r23
  804524:	000b883a 	mov	r5,zero
  804528:	81001704 	addi	r4,r16,92
  80452c:	080600c0 	call	80600c <memset>
  804530:	00800044 	movi	r2,1
  804534:	84000715 	stw	r16,28(r16)
  804538:	85800815 	stw	r22,32(r16)
  80453c:	85400915 	stw	r21,36(r16)
  804540:	85000a15 	stw	r20,40(r16)
  804544:	84c00b15 	stw	r19,44(r16)
  804548:	90800e15 	stw	r2,56(r18)
  80454c:	dfc00817 	ldw	ra,32(sp)
  804550:	ddc00717 	ldw	r23,28(sp)
  804554:	dd800617 	ldw	r22,24(sp)
  804558:	dd400517 	ldw	r21,20(sp)
  80455c:	dd000417 	ldw	r20,16(sp)
  804560:	dcc00317 	ldw	r19,12(sp)
  804564:	dc800217 	ldw	r18,8(sp)
  804568:	dc400117 	ldw	r17,4(sp)
  80456c:	dc000017 	ldw	r16,0(sp)
  804570:	dec00904 	addi	sp,sp,36
  804574:	f800283a 	ret

00804578 <__fp_lock>:
  804578:	0005883a 	mov	r2,zero
  80457c:	f800283a 	ret

00804580 <__sfmoreglue>:
  804580:	defffc04 	addi	sp,sp,-16
  804584:	dc400115 	stw	r17,4(sp)
  804588:	2c7fffc4 	addi	r17,r5,-1
  80458c:	8c401a24 	muli	r17,r17,104
  804590:	dc800215 	stw	r18,8(sp)
  804594:	2825883a 	mov	r18,r5
  804598:	89401d04 	addi	r5,r17,116
  80459c:	dc000015 	stw	r16,0(sp)
  8045a0:	dfc00315 	stw	ra,12(sp)
  8045a4:	08054780 	call	805478 <_malloc_r>
  8045a8:	1021883a 	mov	r16,r2
  8045ac:	10000726 	beq	r2,zero,8045cc <__sfmoreglue+0x4c>
  8045b0:	11000304 	addi	r4,r2,12
  8045b4:	10000015 	stw	zero,0(r2)
  8045b8:	14800115 	stw	r18,4(r2)
  8045bc:	11000215 	stw	r4,8(r2)
  8045c0:	89801a04 	addi	r6,r17,104
  8045c4:	000b883a 	mov	r5,zero
  8045c8:	080600c0 	call	80600c <memset>
  8045cc:	8005883a 	mov	r2,r16
  8045d0:	dfc00317 	ldw	ra,12(sp)
  8045d4:	dc800217 	ldw	r18,8(sp)
  8045d8:	dc400117 	ldw	r17,4(sp)
  8045dc:	dc000017 	ldw	r16,0(sp)
  8045e0:	dec00404 	addi	sp,sp,16
  8045e4:	f800283a 	ret

008045e8 <__sfp>:
  8045e8:	defffb04 	addi	sp,sp,-20
  8045ec:	dc000015 	stw	r16,0(sp)
  8045f0:	04002074 	movhi	r16,129
  8045f4:	84042604 	addi	r16,r16,4248
  8045f8:	dcc00315 	stw	r19,12(sp)
  8045fc:	2027883a 	mov	r19,r4
  804600:	81000017 	ldw	r4,0(r16)
  804604:	dfc00415 	stw	ra,16(sp)
  804608:	dc800215 	stw	r18,8(sp)
  80460c:	20800e17 	ldw	r2,56(r4)
  804610:	dc400115 	stw	r17,4(sp)
  804614:	1000021e 	bne	r2,zero,804620 <__sfp+0x38>
  804618:	08043dc0 	call	8043dc <__sinit.part.1>
  80461c:	81000017 	ldw	r4,0(r16)
  804620:	2480b804 	addi	r18,r4,736
  804624:	047fffc4 	movi	r17,-1
  804628:	91000117 	ldw	r4,4(r18)
  80462c:	94000217 	ldw	r16,8(r18)
  804630:	213fffc4 	addi	r4,r4,-1
  804634:	20000a16 	blt	r4,zero,804660 <__sfp+0x78>
  804638:	8080030f 	ldh	r2,12(r16)
  80463c:	10000c26 	beq	r2,zero,804670 <__sfp+0x88>
  804640:	80c01d04 	addi	r3,r16,116
  804644:	00000206 	br	804650 <__sfp+0x68>
  804648:	18bfe60f 	ldh	r2,-104(r3)
  80464c:	10000826 	beq	r2,zero,804670 <__sfp+0x88>
  804650:	213fffc4 	addi	r4,r4,-1
  804654:	1c3ffd04 	addi	r16,r3,-12
  804658:	18c01a04 	addi	r3,r3,104
  80465c:	247ffa1e 	bne	r4,r17,804648 <__alt_data_end+0xff804648>
  804660:	90800017 	ldw	r2,0(r18)
  804664:	10001d26 	beq	r2,zero,8046dc <__sfp+0xf4>
  804668:	1025883a 	mov	r18,r2
  80466c:	003fee06 	br	804628 <__alt_data_end+0xff804628>
  804670:	00bfffc4 	movi	r2,-1
  804674:	8080038d 	sth	r2,14(r16)
  804678:	00800044 	movi	r2,1
  80467c:	8080030d 	sth	r2,12(r16)
  804680:	80001915 	stw	zero,100(r16)
  804684:	80000015 	stw	zero,0(r16)
  804688:	80000215 	stw	zero,8(r16)
  80468c:	80000115 	stw	zero,4(r16)
  804690:	80000415 	stw	zero,16(r16)
  804694:	80000515 	stw	zero,20(r16)
  804698:	80000615 	stw	zero,24(r16)
  80469c:	01800204 	movi	r6,8
  8046a0:	000b883a 	mov	r5,zero
  8046a4:	81001704 	addi	r4,r16,92
  8046a8:	080600c0 	call	80600c <memset>
  8046ac:	8005883a 	mov	r2,r16
  8046b0:	80000c15 	stw	zero,48(r16)
  8046b4:	80000d15 	stw	zero,52(r16)
  8046b8:	80001115 	stw	zero,68(r16)
  8046bc:	80001215 	stw	zero,72(r16)
  8046c0:	dfc00417 	ldw	ra,16(sp)
  8046c4:	dcc00317 	ldw	r19,12(sp)
  8046c8:	dc800217 	ldw	r18,8(sp)
  8046cc:	dc400117 	ldw	r17,4(sp)
  8046d0:	dc000017 	ldw	r16,0(sp)
  8046d4:	dec00504 	addi	sp,sp,20
  8046d8:	f800283a 	ret
  8046dc:	01400104 	movi	r5,4
  8046e0:	9809883a 	mov	r4,r19
  8046e4:	08045800 	call	804580 <__sfmoreglue>
  8046e8:	90800015 	stw	r2,0(r18)
  8046ec:	103fde1e 	bne	r2,zero,804668 <__alt_data_end+0xff804668>
  8046f0:	00800304 	movi	r2,12
  8046f4:	98800015 	stw	r2,0(r19)
  8046f8:	0005883a 	mov	r2,zero
  8046fc:	003ff006 	br	8046c0 <__alt_data_end+0xff8046c0>

00804700 <_cleanup>:
  804700:	00802074 	movhi	r2,129
  804704:	10842604 	addi	r2,r2,4248
  804708:	11000017 	ldw	r4,0(r2)
  80470c:	01402074 	movhi	r5,129
  804710:	29644d04 	addi	r5,r5,-28364
  804714:	080511c1 	jmpi	80511c <_fwalk_reent>

00804718 <__sinit>:
  804718:	20800e17 	ldw	r2,56(r4)
  80471c:	10000126 	beq	r2,zero,804724 <__sinit+0xc>
  804720:	f800283a 	ret
  804724:	08043dc1 	jmpi	8043dc <__sinit.part.1>

00804728 <__sfp_lock_acquire>:
  804728:	f800283a 	ret

0080472c <__sfp_lock_release>:
  80472c:	f800283a 	ret

00804730 <__sinit_lock_acquire>:
  804730:	f800283a 	ret

00804734 <__sinit_lock_release>:
  804734:	f800283a 	ret

00804738 <__fp_lock_all>:
  804738:	00802074 	movhi	r2,129
  80473c:	10842704 	addi	r2,r2,4252
  804740:	11000017 	ldw	r4,0(r2)
  804744:	01402034 	movhi	r5,128
  804748:	29515e04 	addi	r5,r5,17784
  80474c:	08050581 	jmpi	805058 <_fwalk>

00804750 <__fp_unlock_all>:
  804750:	00802074 	movhi	r2,129
  804754:	10842704 	addi	r2,r2,4252
  804758:	11000017 	ldw	r4,0(r2)
  80475c:	01402034 	movhi	r5,128
  804760:	2950f204 	addi	r5,r5,17352
  804764:	08050581 	jmpi	805058 <_fwalk>

00804768 <_malloc_trim_r>:
  804768:	defffb04 	addi	sp,sp,-20
  80476c:	dcc00315 	stw	r19,12(sp)
  804770:	04c02074 	movhi	r19,129
  804774:	dc800215 	stw	r18,8(sp)
  804778:	dc400115 	stw	r17,4(sp)
  80477c:	dc000015 	stw	r16,0(sp)
  804780:	dfc00415 	stw	ra,16(sp)
  804784:	2821883a 	mov	r16,r5
  804788:	9cfea204 	addi	r19,r19,-1400
  80478c:	2025883a 	mov	r18,r4
  804790:	080d1380 	call	80d138 <__malloc_lock>
  804794:	98800217 	ldw	r2,8(r19)
  804798:	14400117 	ldw	r17,4(r2)
  80479c:	00bfff04 	movi	r2,-4
  8047a0:	88a2703a 	and	r17,r17,r2
  8047a4:	8c21c83a 	sub	r16,r17,r16
  8047a8:	8403fbc4 	addi	r16,r16,4079
  8047ac:	8020d33a 	srli	r16,r16,12
  8047b0:	0083ffc4 	movi	r2,4095
  8047b4:	843fffc4 	addi	r16,r16,-1
  8047b8:	8020933a 	slli	r16,r16,12
  8047bc:	1400060e 	bge	r2,r16,8047d8 <_malloc_trim_r+0x70>
  8047c0:	000b883a 	mov	r5,zero
  8047c4:	9009883a 	mov	r4,r18
  8047c8:	08077080 	call	807708 <_sbrk_r>
  8047cc:	98c00217 	ldw	r3,8(r19)
  8047d0:	1c47883a 	add	r3,r3,r17
  8047d4:	10c00a26 	beq	r2,r3,804800 <_malloc_trim_r+0x98>
  8047d8:	9009883a 	mov	r4,r18
  8047dc:	080d15c0 	call	80d15c <__malloc_unlock>
  8047e0:	0005883a 	mov	r2,zero
  8047e4:	dfc00417 	ldw	ra,16(sp)
  8047e8:	dcc00317 	ldw	r19,12(sp)
  8047ec:	dc800217 	ldw	r18,8(sp)
  8047f0:	dc400117 	ldw	r17,4(sp)
  8047f4:	dc000017 	ldw	r16,0(sp)
  8047f8:	dec00504 	addi	sp,sp,20
  8047fc:	f800283a 	ret
  804800:	040bc83a 	sub	r5,zero,r16
  804804:	9009883a 	mov	r4,r18
  804808:	08077080 	call	807708 <_sbrk_r>
  80480c:	00ffffc4 	movi	r3,-1
  804810:	10c00d26 	beq	r2,r3,804848 <_malloc_trim_r+0xe0>
  804814:	00c02074 	movhi	r3,129
  804818:	18cafe04 	addi	r3,r3,11256
  80481c:	18800017 	ldw	r2,0(r3)
  804820:	99000217 	ldw	r4,8(r19)
  804824:	8c23c83a 	sub	r17,r17,r16
  804828:	8c400054 	ori	r17,r17,1
  80482c:	1421c83a 	sub	r16,r2,r16
  804830:	24400115 	stw	r17,4(r4)
  804834:	9009883a 	mov	r4,r18
  804838:	1c000015 	stw	r16,0(r3)
  80483c:	080d15c0 	call	80d15c <__malloc_unlock>
  804840:	00800044 	movi	r2,1
  804844:	003fe706 	br	8047e4 <__alt_data_end+0xff8047e4>
  804848:	000b883a 	mov	r5,zero
  80484c:	9009883a 	mov	r4,r18
  804850:	08077080 	call	807708 <_sbrk_r>
  804854:	99000217 	ldw	r4,8(r19)
  804858:	014003c4 	movi	r5,15
  80485c:	1107c83a 	sub	r3,r2,r4
  804860:	28ffdd0e 	bge	r5,r3,8047d8 <__alt_data_end+0xff8047d8>
  804864:	01402074 	movhi	r5,129
  804868:	29442904 	addi	r5,r5,4260
  80486c:	29400017 	ldw	r5,0(r5)
  804870:	18c00054 	ori	r3,r3,1
  804874:	20c00115 	stw	r3,4(r4)
  804878:	00c02074 	movhi	r3,129
  80487c:	1145c83a 	sub	r2,r2,r5
  804880:	18cafe04 	addi	r3,r3,11256
  804884:	18800015 	stw	r2,0(r3)
  804888:	003fd306 	br	8047d8 <__alt_data_end+0xff8047d8>

0080488c <_free_r>:
  80488c:	28004126 	beq	r5,zero,804994 <_free_r+0x108>
  804890:	defffd04 	addi	sp,sp,-12
  804894:	dc400115 	stw	r17,4(sp)
  804898:	dc000015 	stw	r16,0(sp)
  80489c:	2023883a 	mov	r17,r4
  8048a0:	2821883a 	mov	r16,r5
  8048a4:	dfc00215 	stw	ra,8(sp)
  8048a8:	080d1380 	call	80d138 <__malloc_lock>
  8048ac:	81ffff17 	ldw	r7,-4(r16)
  8048b0:	00bfff84 	movi	r2,-2
  8048b4:	01002074 	movhi	r4,129
  8048b8:	81bffe04 	addi	r6,r16,-8
  8048bc:	3884703a 	and	r2,r7,r2
  8048c0:	213ea204 	addi	r4,r4,-1400
  8048c4:	308b883a 	add	r5,r6,r2
  8048c8:	2a400117 	ldw	r9,4(r5)
  8048cc:	22000217 	ldw	r8,8(r4)
  8048d0:	00ffff04 	movi	r3,-4
  8048d4:	48c6703a 	and	r3,r9,r3
  8048d8:	2a005726 	beq	r5,r8,804a38 <_free_r+0x1ac>
  8048dc:	28c00115 	stw	r3,4(r5)
  8048e0:	39c0004c 	andi	r7,r7,1
  8048e4:	3800091e 	bne	r7,zero,80490c <_free_r+0x80>
  8048e8:	823ffe17 	ldw	r8,-8(r16)
  8048ec:	22400204 	addi	r9,r4,8
  8048f0:	320dc83a 	sub	r6,r6,r8
  8048f4:	31c00217 	ldw	r7,8(r6)
  8048f8:	1205883a 	add	r2,r2,r8
  8048fc:	3a406526 	beq	r7,r9,804a94 <_free_r+0x208>
  804900:	32000317 	ldw	r8,12(r6)
  804904:	3a000315 	stw	r8,12(r7)
  804908:	41c00215 	stw	r7,8(r8)
  80490c:	28cf883a 	add	r7,r5,r3
  804910:	39c00117 	ldw	r7,4(r7)
  804914:	39c0004c 	andi	r7,r7,1
  804918:	38003a26 	beq	r7,zero,804a04 <_free_r+0x178>
  80491c:	10c00054 	ori	r3,r2,1
  804920:	30c00115 	stw	r3,4(r6)
  804924:	3087883a 	add	r3,r6,r2
  804928:	18800015 	stw	r2,0(r3)
  80492c:	00c07fc4 	movi	r3,511
  804930:	18801936 	bltu	r3,r2,804998 <_free_r+0x10c>
  804934:	1004d0fa 	srli	r2,r2,3
  804938:	01c00044 	movi	r7,1
  80493c:	21400117 	ldw	r5,4(r4)
  804940:	10c00044 	addi	r3,r2,1
  804944:	18c7883a 	add	r3,r3,r3
  804948:	1005d0ba 	srai	r2,r2,2
  80494c:	18c7883a 	add	r3,r3,r3
  804950:	18c7883a 	add	r3,r3,r3
  804954:	1907883a 	add	r3,r3,r4
  804958:	3884983a 	sll	r2,r7,r2
  80495c:	19c00017 	ldw	r7,0(r3)
  804960:	1a3ffe04 	addi	r8,r3,-8
  804964:	1144b03a 	or	r2,r2,r5
  804968:	32000315 	stw	r8,12(r6)
  80496c:	31c00215 	stw	r7,8(r6)
  804970:	20800115 	stw	r2,4(r4)
  804974:	19800015 	stw	r6,0(r3)
  804978:	39800315 	stw	r6,12(r7)
  80497c:	8809883a 	mov	r4,r17
  804980:	dfc00217 	ldw	ra,8(sp)
  804984:	dc400117 	ldw	r17,4(sp)
  804988:	dc000017 	ldw	r16,0(sp)
  80498c:	dec00304 	addi	sp,sp,12
  804990:	080d15c1 	jmpi	80d15c <__malloc_unlock>
  804994:	f800283a 	ret
  804998:	100ad27a 	srli	r5,r2,9
  80499c:	00c00104 	movi	r3,4
  8049a0:	19404a36 	bltu	r3,r5,804acc <_free_r+0x240>
  8049a4:	100ad1ba 	srli	r5,r2,6
  8049a8:	28c00e44 	addi	r3,r5,57
  8049ac:	18c7883a 	add	r3,r3,r3
  8049b0:	29400e04 	addi	r5,r5,56
  8049b4:	18c7883a 	add	r3,r3,r3
  8049b8:	18c7883a 	add	r3,r3,r3
  8049bc:	1909883a 	add	r4,r3,r4
  8049c0:	20c00017 	ldw	r3,0(r4)
  8049c4:	01c02074 	movhi	r7,129
  8049c8:	213ffe04 	addi	r4,r4,-8
  8049cc:	39fea204 	addi	r7,r7,-1400
  8049d0:	20c04426 	beq	r4,r3,804ae4 <_free_r+0x258>
  8049d4:	01ffff04 	movi	r7,-4
  8049d8:	19400117 	ldw	r5,4(r3)
  8049dc:	29ca703a 	and	r5,r5,r7
  8049e0:	1140022e 	bgeu	r2,r5,8049ec <_free_r+0x160>
  8049e4:	18c00217 	ldw	r3,8(r3)
  8049e8:	20fffb1e 	bne	r4,r3,8049d8 <__alt_data_end+0xff8049d8>
  8049ec:	19000317 	ldw	r4,12(r3)
  8049f0:	31000315 	stw	r4,12(r6)
  8049f4:	30c00215 	stw	r3,8(r6)
  8049f8:	21800215 	stw	r6,8(r4)
  8049fc:	19800315 	stw	r6,12(r3)
  804a00:	003fde06 	br	80497c <__alt_data_end+0xff80497c>
  804a04:	29c00217 	ldw	r7,8(r5)
  804a08:	10c5883a 	add	r2,r2,r3
  804a0c:	00c02074 	movhi	r3,129
  804a10:	18fea404 	addi	r3,r3,-1392
  804a14:	38c03b26 	beq	r7,r3,804b04 <_free_r+0x278>
  804a18:	2a000317 	ldw	r8,12(r5)
  804a1c:	11400054 	ori	r5,r2,1
  804a20:	3087883a 	add	r3,r6,r2
  804a24:	3a000315 	stw	r8,12(r7)
  804a28:	41c00215 	stw	r7,8(r8)
  804a2c:	31400115 	stw	r5,4(r6)
  804a30:	18800015 	stw	r2,0(r3)
  804a34:	003fbd06 	br	80492c <__alt_data_end+0xff80492c>
  804a38:	39c0004c 	andi	r7,r7,1
  804a3c:	10c5883a 	add	r2,r2,r3
  804a40:	3800071e 	bne	r7,zero,804a60 <_free_r+0x1d4>
  804a44:	81fffe17 	ldw	r7,-8(r16)
  804a48:	31cdc83a 	sub	r6,r6,r7
  804a4c:	30c00317 	ldw	r3,12(r6)
  804a50:	31400217 	ldw	r5,8(r6)
  804a54:	11c5883a 	add	r2,r2,r7
  804a58:	28c00315 	stw	r3,12(r5)
  804a5c:	19400215 	stw	r5,8(r3)
  804a60:	10c00054 	ori	r3,r2,1
  804a64:	30c00115 	stw	r3,4(r6)
  804a68:	00c02074 	movhi	r3,129
  804a6c:	18c42a04 	addi	r3,r3,4264
  804a70:	18c00017 	ldw	r3,0(r3)
  804a74:	21800215 	stw	r6,8(r4)
  804a78:	10ffc036 	bltu	r2,r3,80497c <__alt_data_end+0xff80497c>
  804a7c:	00802074 	movhi	r2,129
  804a80:	108af604 	addi	r2,r2,11224
  804a84:	11400017 	ldw	r5,0(r2)
  804a88:	8809883a 	mov	r4,r17
  804a8c:	08047680 	call	804768 <_malloc_trim_r>
  804a90:	003fba06 	br	80497c <__alt_data_end+0xff80497c>
  804a94:	28c9883a 	add	r4,r5,r3
  804a98:	21000117 	ldw	r4,4(r4)
  804a9c:	2100004c 	andi	r4,r4,1
  804aa0:	2000391e 	bne	r4,zero,804b88 <_free_r+0x2fc>
  804aa4:	29c00217 	ldw	r7,8(r5)
  804aa8:	29000317 	ldw	r4,12(r5)
  804aac:	1885883a 	add	r2,r3,r2
  804ab0:	10c00054 	ori	r3,r2,1
  804ab4:	39000315 	stw	r4,12(r7)
  804ab8:	21c00215 	stw	r7,8(r4)
  804abc:	30c00115 	stw	r3,4(r6)
  804ac0:	308d883a 	add	r6,r6,r2
  804ac4:	30800015 	stw	r2,0(r6)
  804ac8:	003fac06 	br	80497c <__alt_data_end+0xff80497c>
  804acc:	00c00504 	movi	r3,20
  804ad0:	19401536 	bltu	r3,r5,804b28 <_free_r+0x29c>
  804ad4:	28c01704 	addi	r3,r5,92
  804ad8:	18c7883a 	add	r3,r3,r3
  804adc:	294016c4 	addi	r5,r5,91
  804ae0:	003fb406 	br	8049b4 <__alt_data_end+0xff8049b4>
  804ae4:	280bd0ba 	srai	r5,r5,2
  804ae8:	00c00044 	movi	r3,1
  804aec:	38800117 	ldw	r2,4(r7)
  804af0:	194a983a 	sll	r5,r3,r5
  804af4:	2007883a 	mov	r3,r4
  804af8:	2884b03a 	or	r2,r5,r2
  804afc:	38800115 	stw	r2,4(r7)
  804b00:	003fbb06 	br	8049f0 <__alt_data_end+0xff8049f0>
  804b04:	21800515 	stw	r6,20(r4)
  804b08:	21800415 	stw	r6,16(r4)
  804b0c:	10c00054 	ori	r3,r2,1
  804b10:	31c00315 	stw	r7,12(r6)
  804b14:	31c00215 	stw	r7,8(r6)
  804b18:	30c00115 	stw	r3,4(r6)
  804b1c:	308d883a 	add	r6,r6,r2
  804b20:	30800015 	stw	r2,0(r6)
  804b24:	003f9506 	br	80497c <__alt_data_end+0xff80497c>
  804b28:	00c01504 	movi	r3,84
  804b2c:	19400536 	bltu	r3,r5,804b44 <_free_r+0x2b8>
  804b30:	100ad33a 	srli	r5,r2,12
  804b34:	28c01bc4 	addi	r3,r5,111
  804b38:	18c7883a 	add	r3,r3,r3
  804b3c:	29401b84 	addi	r5,r5,110
  804b40:	003f9c06 	br	8049b4 <__alt_data_end+0xff8049b4>
  804b44:	00c05504 	movi	r3,340
  804b48:	19400536 	bltu	r3,r5,804b60 <_free_r+0x2d4>
  804b4c:	100ad3fa 	srli	r5,r2,15
  804b50:	28c01e04 	addi	r3,r5,120
  804b54:	18c7883a 	add	r3,r3,r3
  804b58:	29401dc4 	addi	r5,r5,119
  804b5c:	003f9506 	br	8049b4 <__alt_data_end+0xff8049b4>
  804b60:	00c15504 	movi	r3,1364
  804b64:	19400536 	bltu	r3,r5,804b7c <_free_r+0x2f0>
  804b68:	100ad4ba 	srli	r5,r2,18
  804b6c:	28c01f44 	addi	r3,r5,125
  804b70:	18c7883a 	add	r3,r3,r3
  804b74:	29401f04 	addi	r5,r5,124
  804b78:	003f8e06 	br	8049b4 <__alt_data_end+0xff8049b4>
  804b7c:	00c03f84 	movi	r3,254
  804b80:	01401f84 	movi	r5,126
  804b84:	003f8b06 	br	8049b4 <__alt_data_end+0xff8049b4>
  804b88:	10c00054 	ori	r3,r2,1
  804b8c:	30c00115 	stw	r3,4(r6)
  804b90:	308d883a 	add	r6,r6,r2
  804b94:	30800015 	stw	r2,0(r6)
  804b98:	003f7806 	br	80497c <__alt_data_end+0xff80497c>

00804b9c <__sfvwrite_r>:
  804b9c:	30800217 	ldw	r2,8(r6)
  804ba0:	10006726 	beq	r2,zero,804d40 <__sfvwrite_r+0x1a4>
  804ba4:	28c0030b 	ldhu	r3,12(r5)
  804ba8:	defff404 	addi	sp,sp,-48
  804bac:	dd400715 	stw	r21,28(sp)
  804bb0:	dd000615 	stw	r20,24(sp)
  804bb4:	dc000215 	stw	r16,8(sp)
  804bb8:	dfc00b15 	stw	ra,44(sp)
  804bbc:	df000a15 	stw	fp,40(sp)
  804bc0:	ddc00915 	stw	r23,36(sp)
  804bc4:	dd800815 	stw	r22,32(sp)
  804bc8:	dcc00515 	stw	r19,20(sp)
  804bcc:	dc800415 	stw	r18,16(sp)
  804bd0:	dc400315 	stw	r17,12(sp)
  804bd4:	1880020c 	andi	r2,r3,8
  804bd8:	2821883a 	mov	r16,r5
  804bdc:	202b883a 	mov	r21,r4
  804be0:	3029883a 	mov	r20,r6
  804be4:	10002726 	beq	r2,zero,804c84 <__sfvwrite_r+0xe8>
  804be8:	28800417 	ldw	r2,16(r5)
  804bec:	10002526 	beq	r2,zero,804c84 <__sfvwrite_r+0xe8>
  804bf0:	1880008c 	andi	r2,r3,2
  804bf4:	a4400017 	ldw	r17,0(r20)
  804bf8:	10002a26 	beq	r2,zero,804ca4 <__sfvwrite_r+0x108>
  804bfc:	05a00034 	movhi	r22,32768
  804c00:	0027883a 	mov	r19,zero
  804c04:	0025883a 	mov	r18,zero
  804c08:	b5bf0004 	addi	r22,r22,-1024
  804c0c:	980d883a 	mov	r6,r19
  804c10:	a809883a 	mov	r4,r21
  804c14:	90004626 	beq	r18,zero,804d30 <__sfvwrite_r+0x194>
  804c18:	900f883a 	mov	r7,r18
  804c1c:	b480022e 	bgeu	r22,r18,804c28 <__sfvwrite_r+0x8c>
  804c20:	01e00034 	movhi	r7,32768
  804c24:	39ff0004 	addi	r7,r7,-1024
  804c28:	80800917 	ldw	r2,36(r16)
  804c2c:	81400717 	ldw	r5,28(r16)
  804c30:	103ee83a 	callr	r2
  804c34:	0080570e 	bge	zero,r2,804d94 <__sfvwrite_r+0x1f8>
  804c38:	a0c00217 	ldw	r3,8(r20)
  804c3c:	98a7883a 	add	r19,r19,r2
  804c40:	90a5c83a 	sub	r18,r18,r2
  804c44:	1885c83a 	sub	r2,r3,r2
  804c48:	a0800215 	stw	r2,8(r20)
  804c4c:	103fef1e 	bne	r2,zero,804c0c <__alt_data_end+0xff804c0c>
  804c50:	0005883a 	mov	r2,zero
  804c54:	dfc00b17 	ldw	ra,44(sp)
  804c58:	df000a17 	ldw	fp,40(sp)
  804c5c:	ddc00917 	ldw	r23,36(sp)
  804c60:	dd800817 	ldw	r22,32(sp)
  804c64:	dd400717 	ldw	r21,28(sp)
  804c68:	dd000617 	ldw	r20,24(sp)
  804c6c:	dcc00517 	ldw	r19,20(sp)
  804c70:	dc800417 	ldw	r18,16(sp)
  804c74:	dc400317 	ldw	r17,12(sp)
  804c78:	dc000217 	ldw	r16,8(sp)
  804c7c:	dec00c04 	addi	sp,sp,48
  804c80:	f800283a 	ret
  804c84:	800b883a 	mov	r5,r16
  804c88:	a809883a 	mov	r4,r21
  804c8c:	08027440 	call	802744 <__swsetup_r>
  804c90:	1000eb1e 	bne	r2,zero,805040 <__sfvwrite_r+0x4a4>
  804c94:	80c0030b 	ldhu	r3,12(r16)
  804c98:	a4400017 	ldw	r17,0(r20)
  804c9c:	1880008c 	andi	r2,r3,2
  804ca0:	103fd61e 	bne	r2,zero,804bfc <__alt_data_end+0xff804bfc>
  804ca4:	1880004c 	andi	r2,r3,1
  804ca8:	10003f1e 	bne	r2,zero,804da8 <__sfvwrite_r+0x20c>
  804cac:	0039883a 	mov	fp,zero
  804cb0:	0025883a 	mov	r18,zero
  804cb4:	90001a26 	beq	r18,zero,804d20 <__sfvwrite_r+0x184>
  804cb8:	1880800c 	andi	r2,r3,512
  804cbc:	84c00217 	ldw	r19,8(r16)
  804cc0:	10002126 	beq	r2,zero,804d48 <__sfvwrite_r+0x1ac>
  804cc4:	982f883a 	mov	r23,r19
  804cc8:	94c09336 	bltu	r18,r19,804f18 <__sfvwrite_r+0x37c>
  804ccc:	1881200c 	andi	r2,r3,1152
  804cd0:	10009e1e 	bne	r2,zero,804f4c <__sfvwrite_r+0x3b0>
  804cd4:	81000017 	ldw	r4,0(r16)
  804cd8:	b80d883a 	mov	r6,r23
  804cdc:	e00b883a 	mov	r5,fp
  804ce0:	0805eb00 	call	805eb0 <memmove>
  804ce4:	80c00217 	ldw	r3,8(r16)
  804ce8:	81000017 	ldw	r4,0(r16)
  804cec:	9005883a 	mov	r2,r18
  804cf0:	1ce7c83a 	sub	r19,r3,r19
  804cf4:	25cf883a 	add	r7,r4,r23
  804cf8:	84c00215 	stw	r19,8(r16)
  804cfc:	81c00015 	stw	r7,0(r16)
  804d00:	a0c00217 	ldw	r3,8(r20)
  804d04:	e0b9883a 	add	fp,fp,r2
  804d08:	90a5c83a 	sub	r18,r18,r2
  804d0c:	18a7c83a 	sub	r19,r3,r2
  804d10:	a4c00215 	stw	r19,8(r20)
  804d14:	983fce26 	beq	r19,zero,804c50 <__alt_data_end+0xff804c50>
  804d18:	80c0030b 	ldhu	r3,12(r16)
  804d1c:	903fe61e 	bne	r18,zero,804cb8 <__alt_data_end+0xff804cb8>
  804d20:	8f000017 	ldw	fp,0(r17)
  804d24:	8c800117 	ldw	r18,4(r17)
  804d28:	8c400204 	addi	r17,r17,8
  804d2c:	003fe106 	br	804cb4 <__alt_data_end+0xff804cb4>
  804d30:	8cc00017 	ldw	r19,0(r17)
  804d34:	8c800117 	ldw	r18,4(r17)
  804d38:	8c400204 	addi	r17,r17,8
  804d3c:	003fb306 	br	804c0c <__alt_data_end+0xff804c0c>
  804d40:	0005883a 	mov	r2,zero
  804d44:	f800283a 	ret
  804d48:	81000017 	ldw	r4,0(r16)
  804d4c:	80800417 	ldw	r2,16(r16)
  804d50:	11005736 	bltu	r2,r4,804eb0 <__sfvwrite_r+0x314>
  804d54:	85c00517 	ldw	r23,20(r16)
  804d58:	95c05536 	bltu	r18,r23,804eb0 <__sfvwrite_r+0x314>
  804d5c:	00a00034 	movhi	r2,32768
  804d60:	10bfffc4 	addi	r2,r2,-1
  804d64:	9009883a 	mov	r4,r18
  804d68:	1480012e 	bgeu	r2,r18,804d70 <__sfvwrite_r+0x1d4>
  804d6c:	1009883a 	mov	r4,r2
  804d70:	b80b883a 	mov	r5,r23
  804d74:	080a3a00 	call	80a3a0 <__divsi3>
  804d78:	15cf383a 	mul	r7,r2,r23
  804d7c:	81400717 	ldw	r5,28(r16)
  804d80:	80800917 	ldw	r2,36(r16)
  804d84:	e00d883a 	mov	r6,fp
  804d88:	a809883a 	mov	r4,r21
  804d8c:	103ee83a 	callr	r2
  804d90:	00bfdb16 	blt	zero,r2,804d00 <__alt_data_end+0xff804d00>
  804d94:	8080030b 	ldhu	r2,12(r16)
  804d98:	10801014 	ori	r2,r2,64
  804d9c:	8080030d 	sth	r2,12(r16)
  804da0:	00bfffc4 	movi	r2,-1
  804da4:	003fab06 	br	804c54 <__alt_data_end+0xff804c54>
  804da8:	0027883a 	mov	r19,zero
  804dac:	0011883a 	mov	r8,zero
  804db0:	0039883a 	mov	fp,zero
  804db4:	0025883a 	mov	r18,zero
  804db8:	90001f26 	beq	r18,zero,804e38 <__sfvwrite_r+0x29c>
  804dbc:	40005a26 	beq	r8,zero,804f28 <__sfvwrite_r+0x38c>
  804dc0:	982d883a 	mov	r22,r19
  804dc4:	94c0012e 	bgeu	r18,r19,804dcc <__sfvwrite_r+0x230>
  804dc8:	902d883a 	mov	r22,r18
  804dcc:	81000017 	ldw	r4,0(r16)
  804dd0:	80800417 	ldw	r2,16(r16)
  804dd4:	b02f883a 	mov	r23,r22
  804dd8:	81c00517 	ldw	r7,20(r16)
  804ddc:	1100032e 	bgeu	r2,r4,804dec <__sfvwrite_r+0x250>
  804de0:	80c00217 	ldw	r3,8(r16)
  804de4:	38c7883a 	add	r3,r7,r3
  804de8:	1d801816 	blt	r3,r22,804e4c <__sfvwrite_r+0x2b0>
  804dec:	b1c03e16 	blt	r22,r7,804ee8 <__sfvwrite_r+0x34c>
  804df0:	80800917 	ldw	r2,36(r16)
  804df4:	81400717 	ldw	r5,28(r16)
  804df8:	e00d883a 	mov	r6,fp
  804dfc:	da000115 	stw	r8,4(sp)
  804e00:	a809883a 	mov	r4,r21
  804e04:	103ee83a 	callr	r2
  804e08:	102f883a 	mov	r23,r2
  804e0c:	da000117 	ldw	r8,4(sp)
  804e10:	00bfe00e 	bge	zero,r2,804d94 <__alt_data_end+0xff804d94>
  804e14:	9de7c83a 	sub	r19,r19,r23
  804e18:	98001f26 	beq	r19,zero,804e98 <__sfvwrite_r+0x2fc>
  804e1c:	a0800217 	ldw	r2,8(r20)
  804e20:	e5f9883a 	add	fp,fp,r23
  804e24:	95e5c83a 	sub	r18,r18,r23
  804e28:	15efc83a 	sub	r23,r2,r23
  804e2c:	a5c00215 	stw	r23,8(r20)
  804e30:	b83f8726 	beq	r23,zero,804c50 <__alt_data_end+0xff804c50>
  804e34:	903fe11e 	bne	r18,zero,804dbc <__alt_data_end+0xff804dbc>
  804e38:	8f000017 	ldw	fp,0(r17)
  804e3c:	8c800117 	ldw	r18,4(r17)
  804e40:	0011883a 	mov	r8,zero
  804e44:	8c400204 	addi	r17,r17,8
  804e48:	003fdb06 	br	804db8 <__alt_data_end+0xff804db8>
  804e4c:	180d883a 	mov	r6,r3
  804e50:	e00b883a 	mov	r5,fp
  804e54:	da000115 	stw	r8,4(sp)
  804e58:	d8c00015 	stw	r3,0(sp)
  804e5c:	0805eb00 	call	805eb0 <memmove>
  804e60:	d8c00017 	ldw	r3,0(sp)
  804e64:	80800017 	ldw	r2,0(r16)
  804e68:	800b883a 	mov	r5,r16
  804e6c:	a809883a 	mov	r4,r21
  804e70:	10c5883a 	add	r2,r2,r3
  804e74:	80800015 	stw	r2,0(r16)
  804e78:	d8c00015 	stw	r3,0(sp)
  804e7c:	080433c0 	call	80433c <_fflush_r>
  804e80:	d8c00017 	ldw	r3,0(sp)
  804e84:	da000117 	ldw	r8,4(sp)
  804e88:	103fc21e 	bne	r2,zero,804d94 <__alt_data_end+0xff804d94>
  804e8c:	182f883a 	mov	r23,r3
  804e90:	9de7c83a 	sub	r19,r19,r23
  804e94:	983fe11e 	bne	r19,zero,804e1c <__alt_data_end+0xff804e1c>
  804e98:	800b883a 	mov	r5,r16
  804e9c:	a809883a 	mov	r4,r21
  804ea0:	080433c0 	call	80433c <_fflush_r>
  804ea4:	103fbb1e 	bne	r2,zero,804d94 <__alt_data_end+0xff804d94>
  804ea8:	0011883a 	mov	r8,zero
  804eac:	003fdb06 	br	804e1c <__alt_data_end+0xff804e1c>
  804eb0:	94c0012e 	bgeu	r18,r19,804eb8 <__sfvwrite_r+0x31c>
  804eb4:	9027883a 	mov	r19,r18
  804eb8:	980d883a 	mov	r6,r19
  804ebc:	e00b883a 	mov	r5,fp
  804ec0:	0805eb00 	call	805eb0 <memmove>
  804ec4:	80800217 	ldw	r2,8(r16)
  804ec8:	80c00017 	ldw	r3,0(r16)
  804ecc:	14c5c83a 	sub	r2,r2,r19
  804ed0:	1cc7883a 	add	r3,r3,r19
  804ed4:	80800215 	stw	r2,8(r16)
  804ed8:	80c00015 	stw	r3,0(r16)
  804edc:	10004326 	beq	r2,zero,804fec <__sfvwrite_r+0x450>
  804ee0:	9805883a 	mov	r2,r19
  804ee4:	003f8606 	br	804d00 <__alt_data_end+0xff804d00>
  804ee8:	b00d883a 	mov	r6,r22
  804eec:	e00b883a 	mov	r5,fp
  804ef0:	da000115 	stw	r8,4(sp)
  804ef4:	0805eb00 	call	805eb0 <memmove>
  804ef8:	80800217 	ldw	r2,8(r16)
  804efc:	80c00017 	ldw	r3,0(r16)
  804f00:	da000117 	ldw	r8,4(sp)
  804f04:	1585c83a 	sub	r2,r2,r22
  804f08:	1dad883a 	add	r22,r3,r22
  804f0c:	80800215 	stw	r2,8(r16)
  804f10:	85800015 	stw	r22,0(r16)
  804f14:	003fbf06 	br	804e14 <__alt_data_end+0xff804e14>
  804f18:	81000017 	ldw	r4,0(r16)
  804f1c:	9027883a 	mov	r19,r18
  804f20:	902f883a 	mov	r23,r18
  804f24:	003f6c06 	br	804cd8 <__alt_data_end+0xff804cd8>
  804f28:	900d883a 	mov	r6,r18
  804f2c:	01400284 	movi	r5,10
  804f30:	e009883a 	mov	r4,fp
  804f34:	0805c840 	call	805c84 <memchr>
  804f38:	10003e26 	beq	r2,zero,805034 <__sfvwrite_r+0x498>
  804f3c:	10800044 	addi	r2,r2,1
  804f40:	1727c83a 	sub	r19,r2,fp
  804f44:	02000044 	movi	r8,1
  804f48:	003f9d06 	br	804dc0 <__alt_data_end+0xff804dc0>
  804f4c:	80800517 	ldw	r2,20(r16)
  804f50:	81400417 	ldw	r5,16(r16)
  804f54:	81c00017 	ldw	r7,0(r16)
  804f58:	10a7883a 	add	r19,r2,r2
  804f5c:	9885883a 	add	r2,r19,r2
  804f60:	1026d7fa 	srli	r19,r2,31
  804f64:	396dc83a 	sub	r22,r7,r5
  804f68:	b1000044 	addi	r4,r22,1
  804f6c:	9885883a 	add	r2,r19,r2
  804f70:	1027d07a 	srai	r19,r2,1
  804f74:	2485883a 	add	r2,r4,r18
  804f78:	980d883a 	mov	r6,r19
  804f7c:	9880022e 	bgeu	r19,r2,804f88 <__sfvwrite_r+0x3ec>
  804f80:	1027883a 	mov	r19,r2
  804f84:	100d883a 	mov	r6,r2
  804f88:	18c1000c 	andi	r3,r3,1024
  804f8c:	18001c26 	beq	r3,zero,805000 <__sfvwrite_r+0x464>
  804f90:	300b883a 	mov	r5,r6
  804f94:	a809883a 	mov	r4,r21
  804f98:	08054780 	call	805478 <_malloc_r>
  804f9c:	102f883a 	mov	r23,r2
  804fa0:	10002926 	beq	r2,zero,805048 <__sfvwrite_r+0x4ac>
  804fa4:	81400417 	ldw	r5,16(r16)
  804fa8:	b00d883a 	mov	r6,r22
  804fac:	1009883a 	mov	r4,r2
  804fb0:	0805d680 	call	805d68 <memcpy>
  804fb4:	8080030b 	ldhu	r2,12(r16)
  804fb8:	00fedfc4 	movi	r3,-1153
  804fbc:	10c4703a 	and	r2,r2,r3
  804fc0:	10802014 	ori	r2,r2,128
  804fc4:	8080030d 	sth	r2,12(r16)
  804fc8:	bd89883a 	add	r4,r23,r22
  804fcc:	9d8fc83a 	sub	r7,r19,r22
  804fd0:	85c00415 	stw	r23,16(r16)
  804fd4:	84c00515 	stw	r19,20(r16)
  804fd8:	81000015 	stw	r4,0(r16)
  804fdc:	9027883a 	mov	r19,r18
  804fe0:	81c00215 	stw	r7,8(r16)
  804fe4:	902f883a 	mov	r23,r18
  804fe8:	003f3b06 	br	804cd8 <__alt_data_end+0xff804cd8>
  804fec:	800b883a 	mov	r5,r16
  804ff0:	a809883a 	mov	r4,r21
  804ff4:	080433c0 	call	80433c <_fflush_r>
  804ff8:	103fb926 	beq	r2,zero,804ee0 <__alt_data_end+0xff804ee0>
  804ffc:	003f6506 	br	804d94 <__alt_data_end+0xff804d94>
  805000:	a809883a 	mov	r4,r21
  805004:	08071300 	call	807130 <_realloc_r>
  805008:	102f883a 	mov	r23,r2
  80500c:	103fee1e 	bne	r2,zero,804fc8 <__alt_data_end+0xff804fc8>
  805010:	81400417 	ldw	r5,16(r16)
  805014:	a809883a 	mov	r4,r21
  805018:	080488c0 	call	80488c <_free_r>
  80501c:	8080030b 	ldhu	r2,12(r16)
  805020:	00ffdfc4 	movi	r3,-129
  805024:	1884703a 	and	r2,r3,r2
  805028:	00c00304 	movi	r3,12
  80502c:	a8c00015 	stw	r3,0(r21)
  805030:	003f5906 	br	804d98 <__alt_data_end+0xff804d98>
  805034:	94c00044 	addi	r19,r18,1
  805038:	02000044 	movi	r8,1
  80503c:	003f6006 	br	804dc0 <__alt_data_end+0xff804dc0>
  805040:	00bfffc4 	movi	r2,-1
  805044:	003f0306 	br	804c54 <__alt_data_end+0xff804c54>
  805048:	00800304 	movi	r2,12
  80504c:	a8800015 	stw	r2,0(r21)
  805050:	8080030b 	ldhu	r2,12(r16)
  805054:	003f5006 	br	804d98 <__alt_data_end+0xff804d98>

00805058 <_fwalk>:
  805058:	defff704 	addi	sp,sp,-36
  80505c:	dd000415 	stw	r20,16(sp)
  805060:	dfc00815 	stw	ra,32(sp)
  805064:	ddc00715 	stw	r23,28(sp)
  805068:	dd800615 	stw	r22,24(sp)
  80506c:	dd400515 	stw	r21,20(sp)
  805070:	dcc00315 	stw	r19,12(sp)
  805074:	dc800215 	stw	r18,8(sp)
  805078:	dc400115 	stw	r17,4(sp)
  80507c:	dc000015 	stw	r16,0(sp)
  805080:	2500b804 	addi	r20,r4,736
  805084:	a0002326 	beq	r20,zero,805114 <_fwalk+0xbc>
  805088:	282b883a 	mov	r21,r5
  80508c:	002f883a 	mov	r23,zero
  805090:	05800044 	movi	r22,1
  805094:	04ffffc4 	movi	r19,-1
  805098:	a4400117 	ldw	r17,4(r20)
  80509c:	a4800217 	ldw	r18,8(r20)
  8050a0:	8c7fffc4 	addi	r17,r17,-1
  8050a4:	88000d16 	blt	r17,zero,8050dc <_fwalk+0x84>
  8050a8:	94000304 	addi	r16,r18,12
  8050ac:	94800384 	addi	r18,r18,14
  8050b0:	8080000b 	ldhu	r2,0(r16)
  8050b4:	8c7fffc4 	addi	r17,r17,-1
  8050b8:	813ffd04 	addi	r4,r16,-12
  8050bc:	b080042e 	bgeu	r22,r2,8050d0 <_fwalk+0x78>
  8050c0:	9080000f 	ldh	r2,0(r18)
  8050c4:	14c00226 	beq	r2,r19,8050d0 <_fwalk+0x78>
  8050c8:	a83ee83a 	callr	r21
  8050cc:	b8aeb03a 	or	r23,r23,r2
  8050d0:	84001a04 	addi	r16,r16,104
  8050d4:	94801a04 	addi	r18,r18,104
  8050d8:	8cfff51e 	bne	r17,r19,8050b0 <__alt_data_end+0xff8050b0>
  8050dc:	a5000017 	ldw	r20,0(r20)
  8050e0:	a03fed1e 	bne	r20,zero,805098 <__alt_data_end+0xff805098>
  8050e4:	b805883a 	mov	r2,r23
  8050e8:	dfc00817 	ldw	ra,32(sp)
  8050ec:	ddc00717 	ldw	r23,28(sp)
  8050f0:	dd800617 	ldw	r22,24(sp)
  8050f4:	dd400517 	ldw	r21,20(sp)
  8050f8:	dd000417 	ldw	r20,16(sp)
  8050fc:	dcc00317 	ldw	r19,12(sp)
  805100:	dc800217 	ldw	r18,8(sp)
  805104:	dc400117 	ldw	r17,4(sp)
  805108:	dc000017 	ldw	r16,0(sp)
  80510c:	dec00904 	addi	sp,sp,36
  805110:	f800283a 	ret
  805114:	002f883a 	mov	r23,zero
  805118:	003ff206 	br	8050e4 <__alt_data_end+0xff8050e4>

0080511c <_fwalk_reent>:
  80511c:	defff704 	addi	sp,sp,-36
  805120:	dd000415 	stw	r20,16(sp)
  805124:	dfc00815 	stw	ra,32(sp)
  805128:	ddc00715 	stw	r23,28(sp)
  80512c:	dd800615 	stw	r22,24(sp)
  805130:	dd400515 	stw	r21,20(sp)
  805134:	dcc00315 	stw	r19,12(sp)
  805138:	dc800215 	stw	r18,8(sp)
  80513c:	dc400115 	stw	r17,4(sp)
  805140:	dc000015 	stw	r16,0(sp)
  805144:	2500b804 	addi	r20,r4,736
  805148:	a0002326 	beq	r20,zero,8051d8 <_fwalk_reent+0xbc>
  80514c:	282b883a 	mov	r21,r5
  805150:	2027883a 	mov	r19,r4
  805154:	002f883a 	mov	r23,zero
  805158:	05800044 	movi	r22,1
  80515c:	04bfffc4 	movi	r18,-1
  805160:	a4400117 	ldw	r17,4(r20)
  805164:	a4000217 	ldw	r16,8(r20)
  805168:	8c7fffc4 	addi	r17,r17,-1
  80516c:	88000c16 	blt	r17,zero,8051a0 <_fwalk_reent+0x84>
  805170:	84000304 	addi	r16,r16,12
  805174:	8080000b 	ldhu	r2,0(r16)
  805178:	8c7fffc4 	addi	r17,r17,-1
  80517c:	817ffd04 	addi	r5,r16,-12
  805180:	b080052e 	bgeu	r22,r2,805198 <_fwalk_reent+0x7c>
  805184:	8080008f 	ldh	r2,2(r16)
  805188:	9809883a 	mov	r4,r19
  80518c:	14800226 	beq	r2,r18,805198 <_fwalk_reent+0x7c>
  805190:	a83ee83a 	callr	r21
  805194:	b8aeb03a 	or	r23,r23,r2
  805198:	84001a04 	addi	r16,r16,104
  80519c:	8cbff51e 	bne	r17,r18,805174 <__alt_data_end+0xff805174>
  8051a0:	a5000017 	ldw	r20,0(r20)
  8051a4:	a03fee1e 	bne	r20,zero,805160 <__alt_data_end+0xff805160>
  8051a8:	b805883a 	mov	r2,r23
  8051ac:	dfc00817 	ldw	ra,32(sp)
  8051b0:	ddc00717 	ldw	r23,28(sp)
  8051b4:	dd800617 	ldw	r22,24(sp)
  8051b8:	dd400517 	ldw	r21,20(sp)
  8051bc:	dd000417 	ldw	r20,16(sp)
  8051c0:	dcc00317 	ldw	r19,12(sp)
  8051c4:	dc800217 	ldw	r18,8(sp)
  8051c8:	dc400117 	ldw	r17,4(sp)
  8051cc:	dc000017 	ldw	r16,0(sp)
  8051d0:	dec00904 	addi	sp,sp,36
  8051d4:	f800283a 	ret
  8051d8:	002f883a 	mov	r23,zero
  8051dc:	003ff206 	br	8051a8 <__alt_data_end+0xff8051a8>

008051e0 <_setlocale_r>:
  8051e0:	30001b26 	beq	r6,zero,805250 <_setlocale_r+0x70>
  8051e4:	01402074 	movhi	r5,129
  8051e8:	defffe04 	addi	sp,sp,-8
  8051ec:	297cdc04 	addi	r5,r5,-3216
  8051f0:	3009883a 	mov	r4,r6
  8051f4:	dc000015 	stw	r16,0(sp)
  8051f8:	dfc00115 	stw	ra,4(sp)
  8051fc:	3021883a 	mov	r16,r6
  805200:	08078980 	call	807898 <strcmp>
  805204:	1000061e 	bne	r2,zero,805220 <_setlocale_r+0x40>
  805208:	00802074 	movhi	r2,129
  80520c:	10bcdb04 	addi	r2,r2,-3220
  805210:	dfc00117 	ldw	ra,4(sp)
  805214:	dc000017 	ldw	r16,0(sp)
  805218:	dec00204 	addi	sp,sp,8
  80521c:	f800283a 	ret
  805220:	01402074 	movhi	r5,129
  805224:	297cdb04 	addi	r5,r5,-3220
  805228:	8009883a 	mov	r4,r16
  80522c:	08078980 	call	807898 <strcmp>
  805230:	103ff526 	beq	r2,zero,805208 <__alt_data_end+0xff805208>
  805234:	01402074 	movhi	r5,129
  805238:	297cc604 	addi	r5,r5,-3304
  80523c:	8009883a 	mov	r4,r16
  805240:	08078980 	call	807898 <strcmp>
  805244:	103ff026 	beq	r2,zero,805208 <__alt_data_end+0xff805208>
  805248:	0005883a 	mov	r2,zero
  80524c:	003ff006 	br	805210 <__alt_data_end+0xff805210>
  805250:	00802074 	movhi	r2,129
  805254:	10bcdb04 	addi	r2,r2,-3220
  805258:	f800283a 	ret

0080525c <__locale_charset>:
  80525c:	00802074 	movhi	r2,129
  805260:	10be8c04 	addi	r2,r2,-1488
  805264:	f800283a 	ret

00805268 <__locale_mb_cur_max>:
  805268:	00802074 	movhi	r2,129
  80526c:	10842804 	addi	r2,r2,4256
  805270:	10800017 	ldw	r2,0(r2)
  805274:	f800283a 	ret

00805278 <__locale_msgcharset>:
  805278:	00802074 	movhi	r2,129
  80527c:	10be8404 	addi	r2,r2,-1520
  805280:	f800283a 	ret

00805284 <__locale_cjk_lang>:
  805284:	0005883a 	mov	r2,zero
  805288:	f800283a 	ret

0080528c <_localeconv_r>:
  80528c:	00802074 	movhi	r2,129
  805290:	10be9404 	addi	r2,r2,-1456
  805294:	f800283a 	ret

00805298 <setlocale>:
  805298:	00802074 	movhi	r2,129
  80529c:	10842704 	addi	r2,r2,4252
  8052a0:	280d883a 	mov	r6,r5
  8052a4:	200b883a 	mov	r5,r4
  8052a8:	11000017 	ldw	r4,0(r2)
  8052ac:	08051e01 	jmpi	8051e0 <_setlocale_r>

008052b0 <localeconv>:
  8052b0:	00802074 	movhi	r2,129
  8052b4:	10be9404 	addi	r2,r2,-1456
  8052b8:	f800283a 	ret

008052bc <__smakebuf_r>:
  8052bc:	2880030b 	ldhu	r2,12(r5)
  8052c0:	10c0008c 	andi	r3,r2,2
  8052c4:	1800411e 	bne	r3,zero,8053cc <__smakebuf_r+0x110>
  8052c8:	deffec04 	addi	sp,sp,-80
  8052cc:	dc000f15 	stw	r16,60(sp)
  8052d0:	2821883a 	mov	r16,r5
  8052d4:	2940038f 	ldh	r5,14(r5)
  8052d8:	dc401015 	stw	r17,64(sp)
  8052dc:	dfc01315 	stw	ra,76(sp)
  8052e0:	dcc01215 	stw	r19,72(sp)
  8052e4:	dc801115 	stw	r18,68(sp)
  8052e8:	2023883a 	mov	r17,r4
  8052ec:	28001c16 	blt	r5,zero,805360 <__smakebuf_r+0xa4>
  8052f0:	d80d883a 	mov	r6,sp
  8052f4:	08094400 	call	809440 <_fstat_r>
  8052f8:	10001816 	blt	r2,zero,80535c <__smakebuf_r+0xa0>
  8052fc:	d8800117 	ldw	r2,4(sp)
  805300:	00e00014 	movui	r3,32768
  805304:	10bc000c 	andi	r2,r2,61440
  805308:	14c80020 	cmpeqi	r19,r2,8192
  80530c:	10c03726 	beq	r2,r3,8053ec <__smakebuf_r+0x130>
  805310:	80c0030b 	ldhu	r3,12(r16)
  805314:	18c20014 	ori	r3,r3,2048
  805318:	80c0030d 	sth	r3,12(r16)
  80531c:	00c80004 	movi	r3,8192
  805320:	10c0521e 	bne	r2,r3,80546c <__smakebuf_r+0x1b0>
  805324:	8140038f 	ldh	r5,14(r16)
  805328:	8809883a 	mov	r4,r17
  80532c:	080949c0 	call	80949c <_isatty_r>
  805330:	10004c26 	beq	r2,zero,805464 <__smakebuf_r+0x1a8>
  805334:	8080030b 	ldhu	r2,12(r16)
  805338:	80c010c4 	addi	r3,r16,67
  80533c:	80c00015 	stw	r3,0(r16)
  805340:	10800054 	ori	r2,r2,1
  805344:	8080030d 	sth	r2,12(r16)
  805348:	00800044 	movi	r2,1
  80534c:	80c00415 	stw	r3,16(r16)
  805350:	80800515 	stw	r2,20(r16)
  805354:	04810004 	movi	r18,1024
  805358:	00000706 	br	805378 <__smakebuf_r+0xbc>
  80535c:	8080030b 	ldhu	r2,12(r16)
  805360:	10c0200c 	andi	r3,r2,128
  805364:	18001f1e 	bne	r3,zero,8053e4 <__smakebuf_r+0x128>
  805368:	04810004 	movi	r18,1024
  80536c:	10820014 	ori	r2,r2,2048
  805370:	8080030d 	sth	r2,12(r16)
  805374:	0027883a 	mov	r19,zero
  805378:	900b883a 	mov	r5,r18
  80537c:	8809883a 	mov	r4,r17
  805380:	08054780 	call	805478 <_malloc_r>
  805384:	10002c26 	beq	r2,zero,805438 <__smakebuf_r+0x17c>
  805388:	80c0030b 	ldhu	r3,12(r16)
  80538c:	01002034 	movhi	r4,128
  805390:	2110f404 	addi	r4,r4,17360
  805394:	89000f15 	stw	r4,60(r17)
  805398:	18c02014 	ori	r3,r3,128
  80539c:	80c0030d 	sth	r3,12(r16)
  8053a0:	80800015 	stw	r2,0(r16)
  8053a4:	80800415 	stw	r2,16(r16)
  8053a8:	84800515 	stw	r18,20(r16)
  8053ac:	98001a1e 	bne	r19,zero,805418 <__smakebuf_r+0x15c>
  8053b0:	dfc01317 	ldw	ra,76(sp)
  8053b4:	dcc01217 	ldw	r19,72(sp)
  8053b8:	dc801117 	ldw	r18,68(sp)
  8053bc:	dc401017 	ldw	r17,64(sp)
  8053c0:	dc000f17 	ldw	r16,60(sp)
  8053c4:	dec01404 	addi	sp,sp,80
  8053c8:	f800283a 	ret
  8053cc:	288010c4 	addi	r2,r5,67
  8053d0:	28800015 	stw	r2,0(r5)
  8053d4:	28800415 	stw	r2,16(r5)
  8053d8:	00800044 	movi	r2,1
  8053dc:	28800515 	stw	r2,20(r5)
  8053e0:	f800283a 	ret
  8053e4:	04801004 	movi	r18,64
  8053e8:	003fe006 	br	80536c <__alt_data_end+0xff80536c>
  8053ec:	81000a17 	ldw	r4,40(r16)
  8053f0:	00c02034 	movhi	r3,128
  8053f4:	18de0d04 	addi	r3,r3,30772
  8053f8:	20ffc51e 	bne	r4,r3,805310 <__alt_data_end+0xff805310>
  8053fc:	8080030b 	ldhu	r2,12(r16)
  805400:	04810004 	movi	r18,1024
  805404:	84801315 	stw	r18,76(r16)
  805408:	1484b03a 	or	r2,r2,r18
  80540c:	8080030d 	sth	r2,12(r16)
  805410:	0027883a 	mov	r19,zero
  805414:	003fd806 	br	805378 <__alt_data_end+0xff805378>
  805418:	8140038f 	ldh	r5,14(r16)
  80541c:	8809883a 	mov	r4,r17
  805420:	080949c0 	call	80949c <_isatty_r>
  805424:	103fe226 	beq	r2,zero,8053b0 <__alt_data_end+0xff8053b0>
  805428:	8080030b 	ldhu	r2,12(r16)
  80542c:	10800054 	ori	r2,r2,1
  805430:	8080030d 	sth	r2,12(r16)
  805434:	003fde06 	br	8053b0 <__alt_data_end+0xff8053b0>
  805438:	8080030b 	ldhu	r2,12(r16)
  80543c:	10c0800c 	andi	r3,r2,512
  805440:	183fdb1e 	bne	r3,zero,8053b0 <__alt_data_end+0xff8053b0>
  805444:	10800094 	ori	r2,r2,2
  805448:	80c010c4 	addi	r3,r16,67
  80544c:	8080030d 	sth	r2,12(r16)
  805450:	00800044 	movi	r2,1
  805454:	80c00015 	stw	r3,0(r16)
  805458:	80c00415 	stw	r3,16(r16)
  80545c:	80800515 	stw	r2,20(r16)
  805460:	003fd306 	br	8053b0 <__alt_data_end+0xff8053b0>
  805464:	04810004 	movi	r18,1024
  805468:	003fc306 	br	805378 <__alt_data_end+0xff805378>
  80546c:	0027883a 	mov	r19,zero
  805470:	04810004 	movi	r18,1024
  805474:	003fc006 	br	805378 <__alt_data_end+0xff805378>

00805478 <_malloc_r>:
  805478:	defff504 	addi	sp,sp,-44
  80547c:	dc800315 	stw	r18,12(sp)
  805480:	dfc00a15 	stw	ra,40(sp)
  805484:	df000915 	stw	fp,36(sp)
  805488:	ddc00815 	stw	r23,32(sp)
  80548c:	dd800715 	stw	r22,28(sp)
  805490:	dd400615 	stw	r21,24(sp)
  805494:	dd000515 	stw	r20,20(sp)
  805498:	dcc00415 	stw	r19,16(sp)
  80549c:	dc400215 	stw	r17,8(sp)
  8054a0:	dc000115 	stw	r16,4(sp)
  8054a4:	288002c4 	addi	r2,r5,11
  8054a8:	00c00584 	movi	r3,22
  8054ac:	2025883a 	mov	r18,r4
  8054b0:	18807f2e 	bgeu	r3,r2,8056b0 <_malloc_r+0x238>
  8054b4:	047ffe04 	movi	r17,-8
  8054b8:	1462703a 	and	r17,r2,r17
  8054bc:	8800a316 	blt	r17,zero,80574c <_malloc_r+0x2d4>
  8054c0:	8940a236 	bltu	r17,r5,80574c <_malloc_r+0x2d4>
  8054c4:	080d1380 	call	80d138 <__malloc_lock>
  8054c8:	00807dc4 	movi	r2,503
  8054cc:	1441e92e 	bgeu	r2,r17,805c74 <_malloc_r+0x7fc>
  8054d0:	8804d27a 	srli	r2,r17,9
  8054d4:	1000a126 	beq	r2,zero,80575c <_malloc_r+0x2e4>
  8054d8:	00c00104 	movi	r3,4
  8054dc:	18811e36 	bltu	r3,r2,805958 <_malloc_r+0x4e0>
  8054e0:	8804d1ba 	srli	r2,r17,6
  8054e4:	12000e44 	addi	r8,r2,57
  8054e8:	11c00e04 	addi	r7,r2,56
  8054ec:	4209883a 	add	r4,r8,r8
  8054f0:	04c02074 	movhi	r19,129
  8054f4:	2109883a 	add	r4,r4,r4
  8054f8:	9cfea204 	addi	r19,r19,-1400
  8054fc:	2109883a 	add	r4,r4,r4
  805500:	9909883a 	add	r4,r19,r4
  805504:	24000117 	ldw	r16,4(r4)
  805508:	213ffe04 	addi	r4,r4,-8
  80550c:	24009726 	beq	r4,r16,80576c <_malloc_r+0x2f4>
  805510:	80800117 	ldw	r2,4(r16)
  805514:	01bfff04 	movi	r6,-4
  805518:	014003c4 	movi	r5,15
  80551c:	1184703a 	and	r2,r2,r6
  805520:	1447c83a 	sub	r3,r2,r17
  805524:	28c00716 	blt	r5,r3,805544 <_malloc_r+0xcc>
  805528:	1800920e 	bge	r3,zero,805774 <_malloc_r+0x2fc>
  80552c:	84000317 	ldw	r16,12(r16)
  805530:	24008e26 	beq	r4,r16,80576c <_malloc_r+0x2f4>
  805534:	80800117 	ldw	r2,4(r16)
  805538:	1184703a 	and	r2,r2,r6
  80553c:	1447c83a 	sub	r3,r2,r17
  805540:	28fff90e 	bge	r5,r3,805528 <__alt_data_end+0xff805528>
  805544:	3809883a 	mov	r4,r7
  805548:	01802074 	movhi	r6,129
  80554c:	9c000417 	ldw	r16,16(r19)
  805550:	31bea204 	addi	r6,r6,-1400
  805554:	32000204 	addi	r8,r6,8
  805558:	82013426 	beq	r16,r8,805a2c <_malloc_r+0x5b4>
  80555c:	80c00117 	ldw	r3,4(r16)
  805560:	00bfff04 	movi	r2,-4
  805564:	188e703a 	and	r7,r3,r2
  805568:	3c45c83a 	sub	r2,r7,r17
  80556c:	00c003c4 	movi	r3,15
  805570:	18811f16 	blt	r3,r2,8059f0 <_malloc_r+0x578>
  805574:	32000515 	stw	r8,20(r6)
  805578:	32000415 	stw	r8,16(r6)
  80557c:	10007f0e 	bge	r2,zero,80577c <_malloc_r+0x304>
  805580:	00807fc4 	movi	r2,511
  805584:	11c0fd36 	bltu	r2,r7,80597c <_malloc_r+0x504>
  805588:	3806d0fa 	srli	r3,r7,3
  80558c:	01c00044 	movi	r7,1
  805590:	30800117 	ldw	r2,4(r6)
  805594:	19400044 	addi	r5,r3,1
  805598:	294b883a 	add	r5,r5,r5
  80559c:	1807d0ba 	srai	r3,r3,2
  8055a0:	294b883a 	add	r5,r5,r5
  8055a4:	294b883a 	add	r5,r5,r5
  8055a8:	298b883a 	add	r5,r5,r6
  8055ac:	38c6983a 	sll	r3,r7,r3
  8055b0:	29c00017 	ldw	r7,0(r5)
  8055b4:	2a7ffe04 	addi	r9,r5,-8
  8055b8:	1886b03a 	or	r3,r3,r2
  8055bc:	82400315 	stw	r9,12(r16)
  8055c0:	81c00215 	stw	r7,8(r16)
  8055c4:	30c00115 	stw	r3,4(r6)
  8055c8:	2c000015 	stw	r16,0(r5)
  8055cc:	3c000315 	stw	r16,12(r7)
  8055d0:	2005d0ba 	srai	r2,r4,2
  8055d4:	01400044 	movi	r5,1
  8055d8:	288a983a 	sll	r5,r5,r2
  8055dc:	19406f36 	bltu	r3,r5,80579c <_malloc_r+0x324>
  8055e0:	28c4703a 	and	r2,r5,r3
  8055e4:	10000a1e 	bne	r2,zero,805610 <_malloc_r+0x198>
  8055e8:	00bfff04 	movi	r2,-4
  8055ec:	294b883a 	add	r5,r5,r5
  8055f0:	2088703a 	and	r4,r4,r2
  8055f4:	28c4703a 	and	r2,r5,r3
  8055f8:	21000104 	addi	r4,r4,4
  8055fc:	1000041e 	bne	r2,zero,805610 <_malloc_r+0x198>
  805600:	294b883a 	add	r5,r5,r5
  805604:	28c4703a 	and	r2,r5,r3
  805608:	21000104 	addi	r4,r4,4
  80560c:	103ffc26 	beq	r2,zero,805600 <__alt_data_end+0xff805600>
  805610:	02bfff04 	movi	r10,-4
  805614:	024003c4 	movi	r9,15
  805618:	21800044 	addi	r6,r4,1
  80561c:	318d883a 	add	r6,r6,r6
  805620:	318d883a 	add	r6,r6,r6
  805624:	318d883a 	add	r6,r6,r6
  805628:	998d883a 	add	r6,r19,r6
  80562c:	333ffe04 	addi	r12,r6,-8
  805630:	2017883a 	mov	r11,r4
  805634:	31800104 	addi	r6,r6,4
  805638:	34000017 	ldw	r16,0(r6)
  80563c:	31fffd04 	addi	r7,r6,-12
  805640:	81c0041e 	bne	r16,r7,805654 <_malloc_r+0x1dc>
  805644:	0000fb06 	br	805a34 <_malloc_r+0x5bc>
  805648:	1801030e 	bge	r3,zero,805a58 <_malloc_r+0x5e0>
  80564c:	84000317 	ldw	r16,12(r16)
  805650:	81c0f826 	beq	r16,r7,805a34 <_malloc_r+0x5bc>
  805654:	80800117 	ldw	r2,4(r16)
  805658:	1284703a 	and	r2,r2,r10
  80565c:	1447c83a 	sub	r3,r2,r17
  805660:	48fff90e 	bge	r9,r3,805648 <__alt_data_end+0xff805648>
  805664:	80800317 	ldw	r2,12(r16)
  805668:	81000217 	ldw	r4,8(r16)
  80566c:	89400054 	ori	r5,r17,1
  805670:	81400115 	stw	r5,4(r16)
  805674:	20800315 	stw	r2,12(r4)
  805678:	11000215 	stw	r4,8(r2)
  80567c:	8463883a 	add	r17,r16,r17
  805680:	9c400515 	stw	r17,20(r19)
  805684:	9c400415 	stw	r17,16(r19)
  805688:	18800054 	ori	r2,r3,1
  80568c:	88800115 	stw	r2,4(r17)
  805690:	8a000315 	stw	r8,12(r17)
  805694:	8a000215 	stw	r8,8(r17)
  805698:	88e3883a 	add	r17,r17,r3
  80569c:	88c00015 	stw	r3,0(r17)
  8056a0:	9009883a 	mov	r4,r18
  8056a4:	080d15c0 	call	80d15c <__malloc_unlock>
  8056a8:	80800204 	addi	r2,r16,8
  8056ac:	00001b06 	br	80571c <_malloc_r+0x2a4>
  8056b0:	04400404 	movi	r17,16
  8056b4:	89402536 	bltu	r17,r5,80574c <_malloc_r+0x2d4>
  8056b8:	080d1380 	call	80d138 <__malloc_lock>
  8056bc:	00800184 	movi	r2,6
  8056c0:	01000084 	movi	r4,2
  8056c4:	04c02074 	movhi	r19,129
  8056c8:	1085883a 	add	r2,r2,r2
  8056cc:	9cfea204 	addi	r19,r19,-1400
  8056d0:	1085883a 	add	r2,r2,r2
  8056d4:	9885883a 	add	r2,r19,r2
  8056d8:	14000117 	ldw	r16,4(r2)
  8056dc:	10fffe04 	addi	r3,r2,-8
  8056e0:	80c0d926 	beq	r16,r3,805a48 <_malloc_r+0x5d0>
  8056e4:	80c00117 	ldw	r3,4(r16)
  8056e8:	81000317 	ldw	r4,12(r16)
  8056ec:	00bfff04 	movi	r2,-4
  8056f0:	1884703a 	and	r2,r3,r2
  8056f4:	81400217 	ldw	r5,8(r16)
  8056f8:	8085883a 	add	r2,r16,r2
  8056fc:	10c00117 	ldw	r3,4(r2)
  805700:	29000315 	stw	r4,12(r5)
  805704:	21400215 	stw	r5,8(r4)
  805708:	18c00054 	ori	r3,r3,1
  80570c:	10c00115 	stw	r3,4(r2)
  805710:	9009883a 	mov	r4,r18
  805714:	080d15c0 	call	80d15c <__malloc_unlock>
  805718:	80800204 	addi	r2,r16,8
  80571c:	dfc00a17 	ldw	ra,40(sp)
  805720:	df000917 	ldw	fp,36(sp)
  805724:	ddc00817 	ldw	r23,32(sp)
  805728:	dd800717 	ldw	r22,28(sp)
  80572c:	dd400617 	ldw	r21,24(sp)
  805730:	dd000517 	ldw	r20,20(sp)
  805734:	dcc00417 	ldw	r19,16(sp)
  805738:	dc800317 	ldw	r18,12(sp)
  80573c:	dc400217 	ldw	r17,8(sp)
  805740:	dc000117 	ldw	r16,4(sp)
  805744:	dec00b04 	addi	sp,sp,44
  805748:	f800283a 	ret
  80574c:	00800304 	movi	r2,12
  805750:	90800015 	stw	r2,0(r18)
  805754:	0005883a 	mov	r2,zero
  805758:	003ff006 	br	80571c <__alt_data_end+0xff80571c>
  80575c:	01002004 	movi	r4,128
  805760:	02001004 	movi	r8,64
  805764:	01c00fc4 	movi	r7,63
  805768:	003f6106 	br	8054f0 <__alt_data_end+0xff8054f0>
  80576c:	4009883a 	mov	r4,r8
  805770:	003f7506 	br	805548 <__alt_data_end+0xff805548>
  805774:	81000317 	ldw	r4,12(r16)
  805778:	003fde06 	br	8056f4 <__alt_data_end+0xff8056f4>
  80577c:	81c5883a 	add	r2,r16,r7
  805780:	11400117 	ldw	r5,4(r2)
  805784:	9009883a 	mov	r4,r18
  805788:	29400054 	ori	r5,r5,1
  80578c:	11400115 	stw	r5,4(r2)
  805790:	080d15c0 	call	80d15c <__malloc_unlock>
  805794:	80800204 	addi	r2,r16,8
  805798:	003fe006 	br	80571c <__alt_data_end+0xff80571c>
  80579c:	9c000217 	ldw	r16,8(r19)
  8057a0:	00bfff04 	movi	r2,-4
  8057a4:	85800117 	ldw	r22,4(r16)
  8057a8:	b0ac703a 	and	r22,r22,r2
  8057ac:	b4400336 	bltu	r22,r17,8057bc <_malloc_r+0x344>
  8057b0:	b445c83a 	sub	r2,r22,r17
  8057b4:	00c003c4 	movi	r3,15
  8057b8:	18805d16 	blt	r3,r2,805930 <_malloc_r+0x4b8>
  8057bc:	05c02074 	movhi	r23,129
  8057c0:	00802074 	movhi	r2,129
  8057c4:	108af604 	addi	r2,r2,11224
  8057c8:	bdc42904 	addi	r23,r23,4260
  8057cc:	15400017 	ldw	r21,0(r2)
  8057d0:	b8c00017 	ldw	r3,0(r23)
  8057d4:	00bfffc4 	movi	r2,-1
  8057d8:	858d883a 	add	r6,r16,r22
  8057dc:	8d6b883a 	add	r21,r17,r21
  8057e0:	1880ea26 	beq	r3,r2,805b8c <_malloc_r+0x714>
  8057e4:	ad4403c4 	addi	r21,r21,4111
  8057e8:	00bc0004 	movi	r2,-4096
  8057ec:	a8aa703a 	and	r21,r21,r2
  8057f0:	a80b883a 	mov	r5,r21
  8057f4:	9009883a 	mov	r4,r18
  8057f8:	d9800015 	stw	r6,0(sp)
  8057fc:	08077080 	call	807708 <_sbrk_r>
  805800:	1029883a 	mov	r20,r2
  805804:	00bfffc4 	movi	r2,-1
  805808:	d9800017 	ldw	r6,0(sp)
  80580c:	a080e826 	beq	r20,r2,805bb0 <_malloc_r+0x738>
  805810:	a180a636 	bltu	r20,r6,805aac <_malloc_r+0x634>
  805814:	07002074 	movhi	fp,129
  805818:	e70afe04 	addi	fp,fp,11256
  80581c:	e0800017 	ldw	r2,0(fp)
  805820:	a887883a 	add	r3,r21,r2
  805824:	e0c00015 	stw	r3,0(fp)
  805828:	3500e626 	beq	r6,r20,805bc4 <_malloc_r+0x74c>
  80582c:	b9000017 	ldw	r4,0(r23)
  805830:	00bfffc4 	movi	r2,-1
  805834:	2080ee26 	beq	r4,r2,805bf0 <_malloc_r+0x778>
  805838:	a185c83a 	sub	r2,r20,r6
  80583c:	10c5883a 	add	r2,r2,r3
  805840:	e0800015 	stw	r2,0(fp)
  805844:	a0c001cc 	andi	r3,r20,7
  805848:	1800bc26 	beq	r3,zero,805b3c <_malloc_r+0x6c4>
  80584c:	a0e9c83a 	sub	r20,r20,r3
  805850:	00840204 	movi	r2,4104
  805854:	a5000204 	addi	r20,r20,8
  805858:	10c7c83a 	sub	r3,r2,r3
  80585c:	a545883a 	add	r2,r20,r21
  805860:	1083ffcc 	andi	r2,r2,4095
  805864:	18abc83a 	sub	r21,r3,r2
  805868:	a80b883a 	mov	r5,r21
  80586c:	9009883a 	mov	r4,r18
  805870:	08077080 	call	807708 <_sbrk_r>
  805874:	00ffffc4 	movi	r3,-1
  805878:	10c0e126 	beq	r2,r3,805c00 <_malloc_r+0x788>
  80587c:	1505c83a 	sub	r2,r2,r20
  805880:	1545883a 	add	r2,r2,r21
  805884:	10800054 	ori	r2,r2,1
  805888:	e0c00017 	ldw	r3,0(fp)
  80588c:	9d000215 	stw	r20,8(r19)
  805890:	a0800115 	stw	r2,4(r20)
  805894:	a8c7883a 	add	r3,r21,r3
  805898:	e0c00015 	stw	r3,0(fp)
  80589c:	84c00e26 	beq	r16,r19,8058d8 <_malloc_r+0x460>
  8058a0:	018003c4 	movi	r6,15
  8058a4:	3580a72e 	bgeu	r6,r22,805b44 <_malloc_r+0x6cc>
  8058a8:	81400117 	ldw	r5,4(r16)
  8058ac:	013ffe04 	movi	r4,-8
  8058b0:	b0bffd04 	addi	r2,r22,-12
  8058b4:	1104703a 	and	r2,r2,r4
  8058b8:	2900004c 	andi	r4,r5,1
  8058bc:	2088b03a 	or	r4,r4,r2
  8058c0:	81000115 	stw	r4,4(r16)
  8058c4:	01400144 	movi	r5,5
  8058c8:	8089883a 	add	r4,r16,r2
  8058cc:	21400115 	stw	r5,4(r4)
  8058d0:	21400215 	stw	r5,8(r4)
  8058d4:	3080cd36 	bltu	r6,r2,805c0c <_malloc_r+0x794>
  8058d8:	00802074 	movhi	r2,129
  8058dc:	108af504 	addi	r2,r2,11220
  8058e0:	11000017 	ldw	r4,0(r2)
  8058e4:	20c0012e 	bgeu	r4,r3,8058ec <_malloc_r+0x474>
  8058e8:	10c00015 	stw	r3,0(r2)
  8058ec:	00802074 	movhi	r2,129
  8058f0:	108af404 	addi	r2,r2,11216
  8058f4:	11000017 	ldw	r4,0(r2)
  8058f8:	9c000217 	ldw	r16,8(r19)
  8058fc:	20c0012e 	bgeu	r4,r3,805904 <_malloc_r+0x48c>
  805900:	10c00015 	stw	r3,0(r2)
  805904:	80c00117 	ldw	r3,4(r16)
  805908:	00bfff04 	movi	r2,-4
  80590c:	1886703a 	and	r3,r3,r2
  805910:	1c45c83a 	sub	r2,r3,r17
  805914:	1c400236 	bltu	r3,r17,805920 <_malloc_r+0x4a8>
  805918:	00c003c4 	movi	r3,15
  80591c:	18800416 	blt	r3,r2,805930 <_malloc_r+0x4b8>
  805920:	9009883a 	mov	r4,r18
  805924:	080d15c0 	call	80d15c <__malloc_unlock>
  805928:	0005883a 	mov	r2,zero
  80592c:	003f7b06 	br	80571c <__alt_data_end+0xff80571c>
  805930:	88c00054 	ori	r3,r17,1
  805934:	80c00115 	stw	r3,4(r16)
  805938:	8463883a 	add	r17,r16,r17
  80593c:	10800054 	ori	r2,r2,1
  805940:	9c400215 	stw	r17,8(r19)
  805944:	88800115 	stw	r2,4(r17)
  805948:	9009883a 	mov	r4,r18
  80594c:	080d15c0 	call	80d15c <__malloc_unlock>
  805950:	80800204 	addi	r2,r16,8
  805954:	003f7106 	br	80571c <__alt_data_end+0xff80571c>
  805958:	00c00504 	movi	r3,20
  80595c:	18804a2e 	bgeu	r3,r2,805a88 <_malloc_r+0x610>
  805960:	00c01504 	movi	r3,84
  805964:	18806e36 	bltu	r3,r2,805b20 <_malloc_r+0x6a8>
  805968:	8804d33a 	srli	r2,r17,12
  80596c:	12001bc4 	addi	r8,r2,111
  805970:	11c01b84 	addi	r7,r2,110
  805974:	4209883a 	add	r4,r8,r8
  805978:	003edd06 	br	8054f0 <__alt_data_end+0xff8054f0>
  80597c:	3804d27a 	srli	r2,r7,9
  805980:	00c00104 	movi	r3,4
  805984:	1880442e 	bgeu	r3,r2,805a98 <_malloc_r+0x620>
  805988:	00c00504 	movi	r3,20
  80598c:	18808136 	bltu	r3,r2,805b94 <_malloc_r+0x71c>
  805990:	11401704 	addi	r5,r2,92
  805994:	10c016c4 	addi	r3,r2,91
  805998:	294b883a 	add	r5,r5,r5
  80599c:	294b883a 	add	r5,r5,r5
  8059a0:	294b883a 	add	r5,r5,r5
  8059a4:	994b883a 	add	r5,r19,r5
  8059a8:	28800017 	ldw	r2,0(r5)
  8059ac:	01802074 	movhi	r6,129
  8059b0:	297ffe04 	addi	r5,r5,-8
  8059b4:	31bea204 	addi	r6,r6,-1400
  8059b8:	28806526 	beq	r5,r2,805b50 <_malloc_r+0x6d8>
  8059bc:	01bfff04 	movi	r6,-4
  8059c0:	10c00117 	ldw	r3,4(r2)
  8059c4:	1986703a 	and	r3,r3,r6
  8059c8:	38c0022e 	bgeu	r7,r3,8059d4 <_malloc_r+0x55c>
  8059cc:	10800217 	ldw	r2,8(r2)
  8059d0:	28bffb1e 	bne	r5,r2,8059c0 <__alt_data_end+0xff8059c0>
  8059d4:	11400317 	ldw	r5,12(r2)
  8059d8:	98c00117 	ldw	r3,4(r19)
  8059dc:	81400315 	stw	r5,12(r16)
  8059e0:	80800215 	stw	r2,8(r16)
  8059e4:	2c000215 	stw	r16,8(r5)
  8059e8:	14000315 	stw	r16,12(r2)
  8059ec:	003ef806 	br	8055d0 <__alt_data_end+0xff8055d0>
  8059f0:	88c00054 	ori	r3,r17,1
  8059f4:	80c00115 	stw	r3,4(r16)
  8059f8:	8463883a 	add	r17,r16,r17
  8059fc:	34400515 	stw	r17,20(r6)
  805a00:	34400415 	stw	r17,16(r6)
  805a04:	10c00054 	ori	r3,r2,1
  805a08:	8a000315 	stw	r8,12(r17)
  805a0c:	8a000215 	stw	r8,8(r17)
  805a10:	88c00115 	stw	r3,4(r17)
  805a14:	88a3883a 	add	r17,r17,r2
  805a18:	88800015 	stw	r2,0(r17)
  805a1c:	9009883a 	mov	r4,r18
  805a20:	080d15c0 	call	80d15c <__malloc_unlock>
  805a24:	80800204 	addi	r2,r16,8
  805a28:	003f3c06 	br	80571c <__alt_data_end+0xff80571c>
  805a2c:	30c00117 	ldw	r3,4(r6)
  805a30:	003ee706 	br	8055d0 <__alt_data_end+0xff8055d0>
  805a34:	5ac00044 	addi	r11,r11,1
  805a38:	588000cc 	andi	r2,r11,3
  805a3c:	31800204 	addi	r6,r6,8
  805a40:	103efd1e 	bne	r2,zero,805638 <__alt_data_end+0xff805638>
  805a44:	00002406 	br	805ad8 <_malloc_r+0x660>
  805a48:	14000317 	ldw	r16,12(r2)
  805a4c:	143f251e 	bne	r2,r16,8056e4 <__alt_data_end+0xff8056e4>
  805a50:	21000084 	addi	r4,r4,2
  805a54:	003ebc06 	br	805548 <__alt_data_end+0xff805548>
  805a58:	8085883a 	add	r2,r16,r2
  805a5c:	10c00117 	ldw	r3,4(r2)
  805a60:	81000317 	ldw	r4,12(r16)
  805a64:	81400217 	ldw	r5,8(r16)
  805a68:	18c00054 	ori	r3,r3,1
  805a6c:	10c00115 	stw	r3,4(r2)
  805a70:	29000315 	stw	r4,12(r5)
  805a74:	21400215 	stw	r5,8(r4)
  805a78:	9009883a 	mov	r4,r18
  805a7c:	080d15c0 	call	80d15c <__malloc_unlock>
  805a80:	80800204 	addi	r2,r16,8
  805a84:	003f2506 	br	80571c <__alt_data_end+0xff80571c>
  805a88:	12001704 	addi	r8,r2,92
  805a8c:	11c016c4 	addi	r7,r2,91
  805a90:	4209883a 	add	r4,r8,r8
  805a94:	003e9606 	br	8054f0 <__alt_data_end+0xff8054f0>
  805a98:	3804d1ba 	srli	r2,r7,6
  805a9c:	11400e44 	addi	r5,r2,57
  805aa0:	10c00e04 	addi	r3,r2,56
  805aa4:	294b883a 	add	r5,r5,r5
  805aa8:	003fbc06 	br	80599c <__alt_data_end+0xff80599c>
  805aac:	84ff5926 	beq	r16,r19,805814 <__alt_data_end+0xff805814>
  805ab0:	00802074 	movhi	r2,129
  805ab4:	10bea204 	addi	r2,r2,-1400
  805ab8:	14000217 	ldw	r16,8(r2)
  805abc:	00bfff04 	movi	r2,-4
  805ac0:	80c00117 	ldw	r3,4(r16)
  805ac4:	1886703a 	and	r3,r3,r2
  805ac8:	003f9106 	br	805910 <__alt_data_end+0xff805910>
  805acc:	60800217 	ldw	r2,8(r12)
  805ad0:	213fffc4 	addi	r4,r4,-1
  805ad4:	1300651e 	bne	r2,r12,805c6c <_malloc_r+0x7f4>
  805ad8:	208000cc 	andi	r2,r4,3
  805adc:	633ffe04 	addi	r12,r12,-8
  805ae0:	103ffa1e 	bne	r2,zero,805acc <__alt_data_end+0xff805acc>
  805ae4:	98800117 	ldw	r2,4(r19)
  805ae8:	0146303a 	nor	r3,zero,r5
  805aec:	1884703a 	and	r2,r3,r2
  805af0:	98800115 	stw	r2,4(r19)
  805af4:	294b883a 	add	r5,r5,r5
  805af8:	117f2836 	bltu	r2,r5,80579c <__alt_data_end+0xff80579c>
  805afc:	283f2726 	beq	r5,zero,80579c <__alt_data_end+0xff80579c>
  805b00:	2886703a 	and	r3,r5,r2
  805b04:	5809883a 	mov	r4,r11
  805b08:	183ec31e 	bne	r3,zero,805618 <__alt_data_end+0xff805618>
  805b0c:	294b883a 	add	r5,r5,r5
  805b10:	2886703a 	and	r3,r5,r2
  805b14:	21000104 	addi	r4,r4,4
  805b18:	183ffc26 	beq	r3,zero,805b0c <__alt_data_end+0xff805b0c>
  805b1c:	003ebe06 	br	805618 <__alt_data_end+0xff805618>
  805b20:	00c05504 	movi	r3,340
  805b24:	18801236 	bltu	r3,r2,805b70 <_malloc_r+0x6f8>
  805b28:	8804d3fa 	srli	r2,r17,15
  805b2c:	12001e04 	addi	r8,r2,120
  805b30:	11c01dc4 	addi	r7,r2,119
  805b34:	4209883a 	add	r4,r8,r8
  805b38:	003e6d06 	br	8054f0 <__alt_data_end+0xff8054f0>
  805b3c:	00c40004 	movi	r3,4096
  805b40:	003f4606 	br	80585c <__alt_data_end+0xff80585c>
  805b44:	00800044 	movi	r2,1
  805b48:	a0800115 	stw	r2,4(r20)
  805b4c:	003f7406 	br	805920 <__alt_data_end+0xff805920>
  805b50:	1805d0ba 	srai	r2,r3,2
  805b54:	01c00044 	movi	r7,1
  805b58:	30c00117 	ldw	r3,4(r6)
  805b5c:	388e983a 	sll	r7,r7,r2
  805b60:	2805883a 	mov	r2,r5
  805b64:	38c6b03a 	or	r3,r7,r3
  805b68:	30c00115 	stw	r3,4(r6)
  805b6c:	003f9b06 	br	8059dc <__alt_data_end+0xff8059dc>
  805b70:	00c15504 	movi	r3,1364
  805b74:	18801a36 	bltu	r3,r2,805be0 <_malloc_r+0x768>
  805b78:	8804d4ba 	srli	r2,r17,18
  805b7c:	12001f44 	addi	r8,r2,125
  805b80:	11c01f04 	addi	r7,r2,124
  805b84:	4209883a 	add	r4,r8,r8
  805b88:	003e5906 	br	8054f0 <__alt_data_end+0xff8054f0>
  805b8c:	ad400404 	addi	r21,r21,16
  805b90:	003f1706 	br	8057f0 <__alt_data_end+0xff8057f0>
  805b94:	00c01504 	movi	r3,84
  805b98:	18802336 	bltu	r3,r2,805c28 <_malloc_r+0x7b0>
  805b9c:	3804d33a 	srli	r2,r7,12
  805ba0:	11401bc4 	addi	r5,r2,111
  805ba4:	10c01b84 	addi	r3,r2,110
  805ba8:	294b883a 	add	r5,r5,r5
  805bac:	003f7b06 	br	80599c <__alt_data_end+0xff80599c>
  805bb0:	9c000217 	ldw	r16,8(r19)
  805bb4:	00bfff04 	movi	r2,-4
  805bb8:	80c00117 	ldw	r3,4(r16)
  805bbc:	1886703a 	and	r3,r3,r2
  805bc0:	003f5306 	br	805910 <__alt_data_end+0xff805910>
  805bc4:	3083ffcc 	andi	r2,r6,4095
  805bc8:	103f181e 	bne	r2,zero,80582c <__alt_data_end+0xff80582c>
  805bcc:	99000217 	ldw	r4,8(r19)
  805bd0:	b545883a 	add	r2,r22,r21
  805bd4:	10800054 	ori	r2,r2,1
  805bd8:	20800115 	stw	r2,4(r4)
  805bdc:	003f3e06 	br	8058d8 <__alt_data_end+0xff8058d8>
  805be0:	01003f84 	movi	r4,254
  805be4:	02001fc4 	movi	r8,127
  805be8:	01c01f84 	movi	r7,126
  805bec:	003e4006 	br	8054f0 <__alt_data_end+0xff8054f0>
  805bf0:	00802074 	movhi	r2,129
  805bf4:	10842904 	addi	r2,r2,4260
  805bf8:	15000015 	stw	r20,0(r2)
  805bfc:	003f1106 	br	805844 <__alt_data_end+0xff805844>
  805c00:	00800044 	movi	r2,1
  805c04:	002b883a 	mov	r21,zero
  805c08:	003f1f06 	br	805888 <__alt_data_end+0xff805888>
  805c0c:	81400204 	addi	r5,r16,8
  805c10:	9009883a 	mov	r4,r18
  805c14:	080488c0 	call	80488c <_free_r>
  805c18:	00802074 	movhi	r2,129
  805c1c:	108afe04 	addi	r2,r2,11256
  805c20:	10c00017 	ldw	r3,0(r2)
  805c24:	003f2c06 	br	8058d8 <__alt_data_end+0xff8058d8>
  805c28:	00c05504 	movi	r3,340
  805c2c:	18800536 	bltu	r3,r2,805c44 <_malloc_r+0x7cc>
  805c30:	3804d3fa 	srli	r2,r7,15
  805c34:	11401e04 	addi	r5,r2,120
  805c38:	10c01dc4 	addi	r3,r2,119
  805c3c:	294b883a 	add	r5,r5,r5
  805c40:	003f5606 	br	80599c <__alt_data_end+0xff80599c>
  805c44:	00c15504 	movi	r3,1364
  805c48:	18800536 	bltu	r3,r2,805c60 <_malloc_r+0x7e8>
  805c4c:	3804d4ba 	srli	r2,r7,18
  805c50:	11401f44 	addi	r5,r2,125
  805c54:	10c01f04 	addi	r3,r2,124
  805c58:	294b883a 	add	r5,r5,r5
  805c5c:	003f4f06 	br	80599c <__alt_data_end+0xff80599c>
  805c60:	01403f84 	movi	r5,254
  805c64:	00c01f84 	movi	r3,126
  805c68:	003f4c06 	br	80599c <__alt_data_end+0xff80599c>
  805c6c:	98800117 	ldw	r2,4(r19)
  805c70:	003fa006 	br	805af4 <__alt_data_end+0xff805af4>
  805c74:	8808d0fa 	srli	r4,r17,3
  805c78:	20800044 	addi	r2,r4,1
  805c7c:	1085883a 	add	r2,r2,r2
  805c80:	003e9006 	br	8056c4 <__alt_data_end+0xff8056c4>

00805c84 <memchr>:
  805c84:	208000cc 	andi	r2,r4,3
  805c88:	280f883a 	mov	r7,r5
  805c8c:	10003426 	beq	r2,zero,805d60 <memchr+0xdc>
  805c90:	30bfffc4 	addi	r2,r6,-1
  805c94:	30001a26 	beq	r6,zero,805d00 <memchr+0x7c>
  805c98:	20c00003 	ldbu	r3,0(r4)
  805c9c:	29803fcc 	andi	r6,r5,255
  805ca0:	30c0051e 	bne	r6,r3,805cb8 <memchr+0x34>
  805ca4:	00001806 	br	805d08 <memchr+0x84>
  805ca8:	10001526 	beq	r2,zero,805d00 <memchr+0x7c>
  805cac:	20c00003 	ldbu	r3,0(r4)
  805cb0:	10bfffc4 	addi	r2,r2,-1
  805cb4:	30c01426 	beq	r6,r3,805d08 <memchr+0x84>
  805cb8:	21000044 	addi	r4,r4,1
  805cbc:	20c000cc 	andi	r3,r4,3
  805cc0:	183ff91e 	bne	r3,zero,805ca8 <__alt_data_end+0xff805ca8>
  805cc4:	020000c4 	movi	r8,3
  805cc8:	40801136 	bltu	r8,r2,805d10 <memchr+0x8c>
  805ccc:	10000c26 	beq	r2,zero,805d00 <memchr+0x7c>
  805cd0:	20c00003 	ldbu	r3,0(r4)
  805cd4:	29403fcc 	andi	r5,r5,255
  805cd8:	28c00b26 	beq	r5,r3,805d08 <memchr+0x84>
  805cdc:	20c00044 	addi	r3,r4,1
  805ce0:	39803fcc 	andi	r6,r7,255
  805ce4:	2089883a 	add	r4,r4,r2
  805ce8:	00000306 	br	805cf8 <memchr+0x74>
  805cec:	18c00044 	addi	r3,r3,1
  805cf0:	197fffc3 	ldbu	r5,-1(r3)
  805cf4:	31400526 	beq	r6,r5,805d0c <memchr+0x88>
  805cf8:	1805883a 	mov	r2,r3
  805cfc:	20fffb1e 	bne	r4,r3,805cec <__alt_data_end+0xff805cec>
  805d00:	0005883a 	mov	r2,zero
  805d04:	f800283a 	ret
  805d08:	2005883a 	mov	r2,r4
  805d0c:	f800283a 	ret
  805d10:	28c03fcc 	andi	r3,r5,255
  805d14:	1812923a 	slli	r9,r3,8
  805d18:	02ffbff4 	movhi	r11,65279
  805d1c:	02a02074 	movhi	r10,32897
  805d20:	48d2b03a 	or	r9,r9,r3
  805d24:	4806943a 	slli	r3,r9,16
  805d28:	5affbfc4 	addi	r11,r11,-257
  805d2c:	52a02004 	addi	r10,r10,-32640
  805d30:	48d2b03a 	or	r9,r9,r3
  805d34:	20c00017 	ldw	r3,0(r4)
  805d38:	48c6f03a 	xor	r3,r9,r3
  805d3c:	1acd883a 	add	r6,r3,r11
  805d40:	00c6303a 	nor	r3,zero,r3
  805d44:	30c6703a 	and	r3,r6,r3
  805d48:	1a86703a 	and	r3,r3,r10
  805d4c:	183fe01e 	bne	r3,zero,805cd0 <__alt_data_end+0xff805cd0>
  805d50:	10bfff04 	addi	r2,r2,-4
  805d54:	21000104 	addi	r4,r4,4
  805d58:	40bff636 	bltu	r8,r2,805d34 <__alt_data_end+0xff805d34>
  805d5c:	003fdb06 	br	805ccc <__alt_data_end+0xff805ccc>
  805d60:	3005883a 	mov	r2,r6
  805d64:	003fd706 	br	805cc4 <__alt_data_end+0xff805cc4>

00805d68 <memcpy>:
  805d68:	defffd04 	addi	sp,sp,-12
  805d6c:	dfc00215 	stw	ra,8(sp)
  805d70:	dc400115 	stw	r17,4(sp)
  805d74:	dc000015 	stw	r16,0(sp)
  805d78:	00c003c4 	movi	r3,15
  805d7c:	2005883a 	mov	r2,r4
  805d80:	1980452e 	bgeu	r3,r6,805e98 <memcpy+0x130>
  805d84:	2906b03a 	or	r3,r5,r4
  805d88:	18c000cc 	andi	r3,r3,3
  805d8c:	1800441e 	bne	r3,zero,805ea0 <memcpy+0x138>
  805d90:	347ffc04 	addi	r17,r6,-16
  805d94:	8822d13a 	srli	r17,r17,4
  805d98:	28c00104 	addi	r3,r5,4
  805d9c:	23400104 	addi	r13,r4,4
  805da0:	8820913a 	slli	r16,r17,4
  805da4:	2b000204 	addi	r12,r5,8
  805da8:	22c00204 	addi	r11,r4,8
  805dac:	84000504 	addi	r16,r16,20
  805db0:	2a800304 	addi	r10,r5,12
  805db4:	22400304 	addi	r9,r4,12
  805db8:	2c21883a 	add	r16,r5,r16
  805dbc:	2811883a 	mov	r8,r5
  805dc0:	200f883a 	mov	r7,r4
  805dc4:	41000017 	ldw	r4,0(r8)
  805dc8:	1fc00017 	ldw	ra,0(r3)
  805dcc:	63c00017 	ldw	r15,0(r12)
  805dd0:	39000015 	stw	r4,0(r7)
  805dd4:	53800017 	ldw	r14,0(r10)
  805dd8:	6fc00015 	stw	ra,0(r13)
  805ddc:	5bc00015 	stw	r15,0(r11)
  805de0:	4b800015 	stw	r14,0(r9)
  805de4:	18c00404 	addi	r3,r3,16
  805de8:	39c00404 	addi	r7,r7,16
  805dec:	42000404 	addi	r8,r8,16
  805df0:	6b400404 	addi	r13,r13,16
  805df4:	63000404 	addi	r12,r12,16
  805df8:	5ac00404 	addi	r11,r11,16
  805dfc:	52800404 	addi	r10,r10,16
  805e00:	4a400404 	addi	r9,r9,16
  805e04:	1c3fef1e 	bne	r3,r16,805dc4 <__alt_data_end+0xff805dc4>
  805e08:	89c00044 	addi	r7,r17,1
  805e0c:	380e913a 	slli	r7,r7,4
  805e10:	310003cc 	andi	r4,r6,15
  805e14:	02c000c4 	movi	r11,3
  805e18:	11c7883a 	add	r3,r2,r7
  805e1c:	29cb883a 	add	r5,r5,r7
  805e20:	5900212e 	bgeu	r11,r4,805ea8 <memcpy+0x140>
  805e24:	1813883a 	mov	r9,r3
  805e28:	2811883a 	mov	r8,r5
  805e2c:	200f883a 	mov	r7,r4
  805e30:	42800017 	ldw	r10,0(r8)
  805e34:	4a400104 	addi	r9,r9,4
  805e38:	39ffff04 	addi	r7,r7,-4
  805e3c:	4abfff15 	stw	r10,-4(r9)
  805e40:	42000104 	addi	r8,r8,4
  805e44:	59fffa36 	bltu	r11,r7,805e30 <__alt_data_end+0xff805e30>
  805e48:	213fff04 	addi	r4,r4,-4
  805e4c:	2008d0ba 	srli	r4,r4,2
  805e50:	318000cc 	andi	r6,r6,3
  805e54:	21000044 	addi	r4,r4,1
  805e58:	2109883a 	add	r4,r4,r4
  805e5c:	2109883a 	add	r4,r4,r4
  805e60:	1907883a 	add	r3,r3,r4
  805e64:	290b883a 	add	r5,r5,r4
  805e68:	30000626 	beq	r6,zero,805e84 <memcpy+0x11c>
  805e6c:	198d883a 	add	r6,r3,r6
  805e70:	29c00003 	ldbu	r7,0(r5)
  805e74:	18c00044 	addi	r3,r3,1
  805e78:	29400044 	addi	r5,r5,1
  805e7c:	19ffffc5 	stb	r7,-1(r3)
  805e80:	19bffb1e 	bne	r3,r6,805e70 <__alt_data_end+0xff805e70>
  805e84:	dfc00217 	ldw	ra,8(sp)
  805e88:	dc400117 	ldw	r17,4(sp)
  805e8c:	dc000017 	ldw	r16,0(sp)
  805e90:	dec00304 	addi	sp,sp,12
  805e94:	f800283a 	ret
  805e98:	2007883a 	mov	r3,r4
  805e9c:	003ff206 	br	805e68 <__alt_data_end+0xff805e68>
  805ea0:	2007883a 	mov	r3,r4
  805ea4:	003ff106 	br	805e6c <__alt_data_end+0xff805e6c>
  805ea8:	200d883a 	mov	r6,r4
  805eac:	003fee06 	br	805e68 <__alt_data_end+0xff805e68>

00805eb0 <memmove>:
  805eb0:	2005883a 	mov	r2,r4
  805eb4:	29000b2e 	bgeu	r5,r4,805ee4 <memmove+0x34>
  805eb8:	298f883a 	add	r7,r5,r6
  805ebc:	21c0092e 	bgeu	r4,r7,805ee4 <memmove+0x34>
  805ec0:	2187883a 	add	r3,r4,r6
  805ec4:	198bc83a 	sub	r5,r3,r6
  805ec8:	30004826 	beq	r6,zero,805fec <memmove+0x13c>
  805ecc:	39ffffc4 	addi	r7,r7,-1
  805ed0:	39000003 	ldbu	r4,0(r7)
  805ed4:	18ffffc4 	addi	r3,r3,-1
  805ed8:	19000005 	stb	r4,0(r3)
  805edc:	28fffb1e 	bne	r5,r3,805ecc <__alt_data_end+0xff805ecc>
  805ee0:	f800283a 	ret
  805ee4:	00c003c4 	movi	r3,15
  805ee8:	1980412e 	bgeu	r3,r6,805ff0 <memmove+0x140>
  805eec:	2886b03a 	or	r3,r5,r2
  805ef0:	18c000cc 	andi	r3,r3,3
  805ef4:	1800401e 	bne	r3,zero,805ff8 <memmove+0x148>
  805ef8:	33fffc04 	addi	r15,r6,-16
  805efc:	781ed13a 	srli	r15,r15,4
  805f00:	28c00104 	addi	r3,r5,4
  805f04:	13400104 	addi	r13,r2,4
  805f08:	781c913a 	slli	r14,r15,4
  805f0c:	2b000204 	addi	r12,r5,8
  805f10:	12c00204 	addi	r11,r2,8
  805f14:	73800504 	addi	r14,r14,20
  805f18:	2a800304 	addi	r10,r5,12
  805f1c:	12400304 	addi	r9,r2,12
  805f20:	2b9d883a 	add	r14,r5,r14
  805f24:	2811883a 	mov	r8,r5
  805f28:	100f883a 	mov	r7,r2
  805f2c:	41000017 	ldw	r4,0(r8)
  805f30:	39c00404 	addi	r7,r7,16
  805f34:	18c00404 	addi	r3,r3,16
  805f38:	393ffc15 	stw	r4,-16(r7)
  805f3c:	193ffc17 	ldw	r4,-16(r3)
  805f40:	6b400404 	addi	r13,r13,16
  805f44:	5ac00404 	addi	r11,r11,16
  805f48:	693ffc15 	stw	r4,-16(r13)
  805f4c:	61000017 	ldw	r4,0(r12)
  805f50:	4a400404 	addi	r9,r9,16
  805f54:	42000404 	addi	r8,r8,16
  805f58:	593ffc15 	stw	r4,-16(r11)
  805f5c:	51000017 	ldw	r4,0(r10)
  805f60:	63000404 	addi	r12,r12,16
  805f64:	52800404 	addi	r10,r10,16
  805f68:	493ffc15 	stw	r4,-16(r9)
  805f6c:	1bbfef1e 	bne	r3,r14,805f2c <__alt_data_end+0xff805f2c>
  805f70:	79000044 	addi	r4,r15,1
  805f74:	2008913a 	slli	r4,r4,4
  805f78:	328003cc 	andi	r10,r6,15
  805f7c:	02c000c4 	movi	r11,3
  805f80:	1107883a 	add	r3,r2,r4
  805f84:	290b883a 	add	r5,r5,r4
  805f88:	5a801e2e 	bgeu	r11,r10,806004 <memmove+0x154>
  805f8c:	1813883a 	mov	r9,r3
  805f90:	2811883a 	mov	r8,r5
  805f94:	500f883a 	mov	r7,r10
  805f98:	41000017 	ldw	r4,0(r8)
  805f9c:	4a400104 	addi	r9,r9,4
  805fa0:	39ffff04 	addi	r7,r7,-4
  805fa4:	493fff15 	stw	r4,-4(r9)
  805fa8:	42000104 	addi	r8,r8,4
  805fac:	59fffa36 	bltu	r11,r7,805f98 <__alt_data_end+0xff805f98>
  805fb0:	513fff04 	addi	r4,r10,-4
  805fb4:	2008d0ba 	srli	r4,r4,2
  805fb8:	318000cc 	andi	r6,r6,3
  805fbc:	21000044 	addi	r4,r4,1
  805fc0:	2109883a 	add	r4,r4,r4
  805fc4:	2109883a 	add	r4,r4,r4
  805fc8:	1907883a 	add	r3,r3,r4
  805fcc:	290b883a 	add	r5,r5,r4
  805fd0:	30000b26 	beq	r6,zero,806000 <memmove+0x150>
  805fd4:	198d883a 	add	r6,r3,r6
  805fd8:	29c00003 	ldbu	r7,0(r5)
  805fdc:	18c00044 	addi	r3,r3,1
  805fe0:	29400044 	addi	r5,r5,1
  805fe4:	19ffffc5 	stb	r7,-1(r3)
  805fe8:	19bffb1e 	bne	r3,r6,805fd8 <__alt_data_end+0xff805fd8>
  805fec:	f800283a 	ret
  805ff0:	1007883a 	mov	r3,r2
  805ff4:	003ff606 	br	805fd0 <__alt_data_end+0xff805fd0>
  805ff8:	1007883a 	mov	r3,r2
  805ffc:	003ff506 	br	805fd4 <__alt_data_end+0xff805fd4>
  806000:	f800283a 	ret
  806004:	500d883a 	mov	r6,r10
  806008:	003ff106 	br	805fd0 <__alt_data_end+0xff805fd0>

0080600c <memset>:
  80600c:	20c000cc 	andi	r3,r4,3
  806010:	2005883a 	mov	r2,r4
  806014:	18004426 	beq	r3,zero,806128 <memset+0x11c>
  806018:	31ffffc4 	addi	r7,r6,-1
  80601c:	30004026 	beq	r6,zero,806120 <memset+0x114>
  806020:	2813883a 	mov	r9,r5
  806024:	200d883a 	mov	r6,r4
  806028:	2007883a 	mov	r3,r4
  80602c:	00000406 	br	806040 <memset+0x34>
  806030:	3a3fffc4 	addi	r8,r7,-1
  806034:	31800044 	addi	r6,r6,1
  806038:	38003926 	beq	r7,zero,806120 <memset+0x114>
  80603c:	400f883a 	mov	r7,r8
  806040:	18c00044 	addi	r3,r3,1
  806044:	32400005 	stb	r9,0(r6)
  806048:	1a0000cc 	andi	r8,r3,3
  80604c:	403ff81e 	bne	r8,zero,806030 <__alt_data_end+0xff806030>
  806050:	010000c4 	movi	r4,3
  806054:	21c02d2e 	bgeu	r4,r7,80610c <memset+0x100>
  806058:	29003fcc 	andi	r4,r5,255
  80605c:	200c923a 	slli	r6,r4,8
  806060:	3108b03a 	or	r4,r6,r4
  806064:	200c943a 	slli	r6,r4,16
  806068:	218cb03a 	or	r6,r4,r6
  80606c:	010003c4 	movi	r4,15
  806070:	21c0182e 	bgeu	r4,r7,8060d4 <memset+0xc8>
  806074:	3b3ffc04 	addi	r12,r7,-16
  806078:	6018d13a 	srli	r12,r12,4
  80607c:	1a000104 	addi	r8,r3,4
  806080:	1ac00204 	addi	r11,r3,8
  806084:	6008913a 	slli	r4,r12,4
  806088:	1a800304 	addi	r10,r3,12
  80608c:	1813883a 	mov	r9,r3
  806090:	21000504 	addi	r4,r4,20
  806094:	1909883a 	add	r4,r3,r4
  806098:	49800015 	stw	r6,0(r9)
  80609c:	41800015 	stw	r6,0(r8)
  8060a0:	59800015 	stw	r6,0(r11)
  8060a4:	51800015 	stw	r6,0(r10)
  8060a8:	42000404 	addi	r8,r8,16
  8060ac:	4a400404 	addi	r9,r9,16
  8060b0:	5ac00404 	addi	r11,r11,16
  8060b4:	52800404 	addi	r10,r10,16
  8060b8:	413ff71e 	bne	r8,r4,806098 <__alt_data_end+0xff806098>
  8060bc:	63000044 	addi	r12,r12,1
  8060c0:	6018913a 	slli	r12,r12,4
  8060c4:	39c003cc 	andi	r7,r7,15
  8060c8:	010000c4 	movi	r4,3
  8060cc:	1b07883a 	add	r3,r3,r12
  8060d0:	21c00e2e 	bgeu	r4,r7,80610c <memset+0x100>
  8060d4:	1813883a 	mov	r9,r3
  8060d8:	3811883a 	mov	r8,r7
  8060dc:	010000c4 	movi	r4,3
  8060e0:	49800015 	stw	r6,0(r9)
  8060e4:	423fff04 	addi	r8,r8,-4
  8060e8:	4a400104 	addi	r9,r9,4
  8060ec:	223ffc36 	bltu	r4,r8,8060e0 <__alt_data_end+0xff8060e0>
  8060f0:	393fff04 	addi	r4,r7,-4
  8060f4:	2008d0ba 	srli	r4,r4,2
  8060f8:	39c000cc 	andi	r7,r7,3
  8060fc:	21000044 	addi	r4,r4,1
  806100:	2109883a 	add	r4,r4,r4
  806104:	2109883a 	add	r4,r4,r4
  806108:	1907883a 	add	r3,r3,r4
  80610c:	38000526 	beq	r7,zero,806124 <memset+0x118>
  806110:	19cf883a 	add	r7,r3,r7
  806114:	19400005 	stb	r5,0(r3)
  806118:	18c00044 	addi	r3,r3,1
  80611c:	38fffd1e 	bne	r7,r3,806114 <__alt_data_end+0xff806114>
  806120:	f800283a 	ret
  806124:	f800283a 	ret
  806128:	2007883a 	mov	r3,r4
  80612c:	300f883a 	mov	r7,r6
  806130:	003fc706 	br	806050 <__alt_data_end+0xff806050>

00806134 <_Balloc>:
  806134:	20801317 	ldw	r2,76(r4)
  806138:	defffc04 	addi	sp,sp,-16
  80613c:	dc400115 	stw	r17,4(sp)
  806140:	dc000015 	stw	r16,0(sp)
  806144:	dfc00315 	stw	ra,12(sp)
  806148:	dc800215 	stw	r18,8(sp)
  80614c:	2023883a 	mov	r17,r4
  806150:	2821883a 	mov	r16,r5
  806154:	10000f26 	beq	r2,zero,806194 <_Balloc+0x60>
  806158:	8407883a 	add	r3,r16,r16
  80615c:	18c7883a 	add	r3,r3,r3
  806160:	10c7883a 	add	r3,r2,r3
  806164:	18800017 	ldw	r2,0(r3)
  806168:	10001126 	beq	r2,zero,8061b0 <_Balloc+0x7c>
  80616c:	11000017 	ldw	r4,0(r2)
  806170:	19000015 	stw	r4,0(r3)
  806174:	10000415 	stw	zero,16(r2)
  806178:	10000315 	stw	zero,12(r2)
  80617c:	dfc00317 	ldw	ra,12(sp)
  806180:	dc800217 	ldw	r18,8(sp)
  806184:	dc400117 	ldw	r17,4(sp)
  806188:	dc000017 	ldw	r16,0(sp)
  80618c:	dec00404 	addi	sp,sp,16
  806190:	f800283a 	ret
  806194:	01800844 	movi	r6,33
  806198:	01400104 	movi	r5,4
  80619c:	08090700 	call	809070 <_calloc_r>
  8061a0:	88801315 	stw	r2,76(r17)
  8061a4:	103fec1e 	bne	r2,zero,806158 <__alt_data_end+0xff806158>
  8061a8:	0005883a 	mov	r2,zero
  8061ac:	003ff306 	br	80617c <__alt_data_end+0xff80617c>
  8061b0:	01400044 	movi	r5,1
  8061b4:	2c24983a 	sll	r18,r5,r16
  8061b8:	8809883a 	mov	r4,r17
  8061bc:	91800144 	addi	r6,r18,5
  8061c0:	318d883a 	add	r6,r6,r6
  8061c4:	318d883a 	add	r6,r6,r6
  8061c8:	08090700 	call	809070 <_calloc_r>
  8061cc:	103ff626 	beq	r2,zero,8061a8 <__alt_data_end+0xff8061a8>
  8061d0:	14000115 	stw	r16,4(r2)
  8061d4:	14800215 	stw	r18,8(r2)
  8061d8:	003fe606 	br	806174 <__alt_data_end+0xff806174>

008061dc <_Bfree>:
  8061dc:	28000826 	beq	r5,zero,806200 <_Bfree+0x24>
  8061e0:	28c00117 	ldw	r3,4(r5)
  8061e4:	20801317 	ldw	r2,76(r4)
  8061e8:	18c7883a 	add	r3,r3,r3
  8061ec:	18c7883a 	add	r3,r3,r3
  8061f0:	10c5883a 	add	r2,r2,r3
  8061f4:	10c00017 	ldw	r3,0(r2)
  8061f8:	28c00015 	stw	r3,0(r5)
  8061fc:	11400015 	stw	r5,0(r2)
  806200:	f800283a 	ret

00806204 <__multadd>:
  806204:	defffa04 	addi	sp,sp,-24
  806208:	dc800315 	stw	r18,12(sp)
  80620c:	dc400215 	stw	r17,8(sp)
  806210:	dc000115 	stw	r16,4(sp)
  806214:	2823883a 	mov	r17,r5
  806218:	2c000417 	ldw	r16,16(r5)
  80621c:	dfc00515 	stw	ra,20(sp)
  806220:	dcc00415 	stw	r19,16(sp)
  806224:	2025883a 	mov	r18,r4
  806228:	29400504 	addi	r5,r5,20
  80622c:	0011883a 	mov	r8,zero
  806230:	28c00017 	ldw	r3,0(r5)
  806234:	29400104 	addi	r5,r5,4
  806238:	42000044 	addi	r8,r8,1
  80623c:	18bfffcc 	andi	r2,r3,65535
  806240:	1185383a 	mul	r2,r2,r6
  806244:	1806d43a 	srli	r3,r3,16
  806248:	11cf883a 	add	r7,r2,r7
  80624c:	3808d43a 	srli	r4,r7,16
  806250:	1987383a 	mul	r3,r3,r6
  806254:	38bfffcc 	andi	r2,r7,65535
  806258:	1907883a 	add	r3,r3,r4
  80625c:	1808943a 	slli	r4,r3,16
  806260:	180ed43a 	srli	r7,r3,16
  806264:	2085883a 	add	r2,r4,r2
  806268:	28bfff15 	stw	r2,-4(r5)
  80626c:	443ff016 	blt	r8,r16,806230 <__alt_data_end+0xff806230>
  806270:	38000926 	beq	r7,zero,806298 <__multadd+0x94>
  806274:	88800217 	ldw	r2,8(r17)
  806278:	80800f0e 	bge	r16,r2,8062b8 <__multadd+0xb4>
  80627c:	80800144 	addi	r2,r16,5
  806280:	1085883a 	add	r2,r2,r2
  806284:	1085883a 	add	r2,r2,r2
  806288:	8885883a 	add	r2,r17,r2
  80628c:	11c00015 	stw	r7,0(r2)
  806290:	84000044 	addi	r16,r16,1
  806294:	8c000415 	stw	r16,16(r17)
  806298:	8805883a 	mov	r2,r17
  80629c:	dfc00517 	ldw	ra,20(sp)
  8062a0:	dcc00417 	ldw	r19,16(sp)
  8062a4:	dc800317 	ldw	r18,12(sp)
  8062a8:	dc400217 	ldw	r17,8(sp)
  8062ac:	dc000117 	ldw	r16,4(sp)
  8062b0:	dec00604 	addi	sp,sp,24
  8062b4:	f800283a 	ret
  8062b8:	89400117 	ldw	r5,4(r17)
  8062bc:	9009883a 	mov	r4,r18
  8062c0:	d9c00015 	stw	r7,0(sp)
  8062c4:	29400044 	addi	r5,r5,1
  8062c8:	08061340 	call	806134 <_Balloc>
  8062cc:	89800417 	ldw	r6,16(r17)
  8062d0:	89400304 	addi	r5,r17,12
  8062d4:	11000304 	addi	r4,r2,12
  8062d8:	31800084 	addi	r6,r6,2
  8062dc:	318d883a 	add	r6,r6,r6
  8062e0:	318d883a 	add	r6,r6,r6
  8062e4:	1027883a 	mov	r19,r2
  8062e8:	0805d680 	call	805d68 <memcpy>
  8062ec:	d9c00017 	ldw	r7,0(sp)
  8062f0:	88000a26 	beq	r17,zero,80631c <__multadd+0x118>
  8062f4:	88c00117 	ldw	r3,4(r17)
  8062f8:	90801317 	ldw	r2,76(r18)
  8062fc:	18c7883a 	add	r3,r3,r3
  806300:	18c7883a 	add	r3,r3,r3
  806304:	10c5883a 	add	r2,r2,r3
  806308:	10c00017 	ldw	r3,0(r2)
  80630c:	88c00015 	stw	r3,0(r17)
  806310:	14400015 	stw	r17,0(r2)
  806314:	9823883a 	mov	r17,r19
  806318:	003fd806 	br	80627c <__alt_data_end+0xff80627c>
  80631c:	9823883a 	mov	r17,r19
  806320:	003fd606 	br	80627c <__alt_data_end+0xff80627c>

00806324 <__s2b>:
  806324:	defff904 	addi	sp,sp,-28
  806328:	dc400115 	stw	r17,4(sp)
  80632c:	dc000015 	stw	r16,0(sp)
  806330:	2023883a 	mov	r17,r4
  806334:	2821883a 	mov	r16,r5
  806338:	39000204 	addi	r4,r7,8
  80633c:	01400244 	movi	r5,9
  806340:	dcc00315 	stw	r19,12(sp)
  806344:	dc800215 	stw	r18,8(sp)
  806348:	dfc00615 	stw	ra,24(sp)
  80634c:	dd400515 	stw	r21,20(sp)
  806350:	dd000415 	stw	r20,16(sp)
  806354:	3825883a 	mov	r18,r7
  806358:	3027883a 	mov	r19,r6
  80635c:	080a3a00 	call	80a3a0 <__divsi3>
  806360:	00c00044 	movi	r3,1
  806364:	000b883a 	mov	r5,zero
  806368:	1880030e 	bge	r3,r2,806378 <__s2b+0x54>
  80636c:	18c7883a 	add	r3,r3,r3
  806370:	29400044 	addi	r5,r5,1
  806374:	18bffd16 	blt	r3,r2,80636c <__alt_data_end+0xff80636c>
  806378:	8809883a 	mov	r4,r17
  80637c:	08061340 	call	806134 <_Balloc>
  806380:	d8c00717 	ldw	r3,28(sp)
  806384:	10c00515 	stw	r3,20(r2)
  806388:	00c00044 	movi	r3,1
  80638c:	10c00415 	stw	r3,16(r2)
  806390:	00c00244 	movi	r3,9
  806394:	1cc0210e 	bge	r3,r19,80641c <__s2b+0xf8>
  806398:	80eb883a 	add	r21,r16,r3
  80639c:	a829883a 	mov	r20,r21
  8063a0:	84e1883a 	add	r16,r16,r19
  8063a4:	a1c00007 	ldb	r7,0(r20)
  8063a8:	01800284 	movi	r6,10
  8063ac:	a5000044 	addi	r20,r20,1
  8063b0:	100b883a 	mov	r5,r2
  8063b4:	39fff404 	addi	r7,r7,-48
  8063b8:	8809883a 	mov	r4,r17
  8063bc:	08062040 	call	806204 <__multadd>
  8063c0:	a43ff81e 	bne	r20,r16,8063a4 <__alt_data_end+0xff8063a4>
  8063c4:	ace1883a 	add	r16,r21,r19
  8063c8:	843ffe04 	addi	r16,r16,-8
  8063cc:	9c800a0e 	bge	r19,r18,8063f8 <__s2b+0xd4>
  8063d0:	94e5c83a 	sub	r18,r18,r19
  8063d4:	84a5883a 	add	r18,r16,r18
  8063d8:	81c00007 	ldb	r7,0(r16)
  8063dc:	01800284 	movi	r6,10
  8063e0:	84000044 	addi	r16,r16,1
  8063e4:	100b883a 	mov	r5,r2
  8063e8:	39fff404 	addi	r7,r7,-48
  8063ec:	8809883a 	mov	r4,r17
  8063f0:	08062040 	call	806204 <__multadd>
  8063f4:	84bff81e 	bne	r16,r18,8063d8 <__alt_data_end+0xff8063d8>
  8063f8:	dfc00617 	ldw	ra,24(sp)
  8063fc:	dd400517 	ldw	r21,20(sp)
  806400:	dd000417 	ldw	r20,16(sp)
  806404:	dcc00317 	ldw	r19,12(sp)
  806408:	dc800217 	ldw	r18,8(sp)
  80640c:	dc400117 	ldw	r17,4(sp)
  806410:	dc000017 	ldw	r16,0(sp)
  806414:	dec00704 	addi	sp,sp,28
  806418:	f800283a 	ret
  80641c:	84000284 	addi	r16,r16,10
  806420:	1827883a 	mov	r19,r3
  806424:	003fe906 	br	8063cc <__alt_data_end+0xff8063cc>

00806428 <__hi0bits>:
  806428:	20bfffec 	andhi	r2,r4,65535
  80642c:	1000141e 	bne	r2,zero,806480 <__hi0bits+0x58>
  806430:	2008943a 	slli	r4,r4,16
  806434:	00800404 	movi	r2,16
  806438:	20ffc02c 	andhi	r3,r4,65280
  80643c:	1800021e 	bne	r3,zero,806448 <__hi0bits+0x20>
  806440:	2008923a 	slli	r4,r4,8
  806444:	10800204 	addi	r2,r2,8
  806448:	20fc002c 	andhi	r3,r4,61440
  80644c:	1800021e 	bne	r3,zero,806458 <__hi0bits+0x30>
  806450:	2008913a 	slli	r4,r4,4
  806454:	10800104 	addi	r2,r2,4
  806458:	20f0002c 	andhi	r3,r4,49152
  80645c:	1800031e 	bne	r3,zero,80646c <__hi0bits+0x44>
  806460:	2109883a 	add	r4,r4,r4
  806464:	10800084 	addi	r2,r2,2
  806468:	2109883a 	add	r4,r4,r4
  80646c:	20000316 	blt	r4,zero,80647c <__hi0bits+0x54>
  806470:	2110002c 	andhi	r4,r4,16384
  806474:	2000041e 	bne	r4,zero,806488 <__hi0bits+0x60>
  806478:	00800804 	movi	r2,32
  80647c:	f800283a 	ret
  806480:	0005883a 	mov	r2,zero
  806484:	003fec06 	br	806438 <__alt_data_end+0xff806438>
  806488:	10800044 	addi	r2,r2,1
  80648c:	f800283a 	ret

00806490 <__lo0bits>:
  806490:	20c00017 	ldw	r3,0(r4)
  806494:	188001cc 	andi	r2,r3,7
  806498:	10000826 	beq	r2,zero,8064bc <__lo0bits+0x2c>
  80649c:	1880004c 	andi	r2,r3,1
  8064a0:	1000211e 	bne	r2,zero,806528 <__lo0bits+0x98>
  8064a4:	1880008c 	andi	r2,r3,2
  8064a8:	1000211e 	bne	r2,zero,806530 <__lo0bits+0xa0>
  8064ac:	1806d0ba 	srli	r3,r3,2
  8064b0:	00800084 	movi	r2,2
  8064b4:	20c00015 	stw	r3,0(r4)
  8064b8:	f800283a 	ret
  8064bc:	18bfffcc 	andi	r2,r3,65535
  8064c0:	10001326 	beq	r2,zero,806510 <__lo0bits+0x80>
  8064c4:	0005883a 	mov	r2,zero
  8064c8:	19403fcc 	andi	r5,r3,255
  8064cc:	2800021e 	bne	r5,zero,8064d8 <__lo0bits+0x48>
  8064d0:	1806d23a 	srli	r3,r3,8
  8064d4:	10800204 	addi	r2,r2,8
  8064d8:	194003cc 	andi	r5,r3,15
  8064dc:	2800021e 	bne	r5,zero,8064e8 <__lo0bits+0x58>
  8064e0:	1806d13a 	srli	r3,r3,4
  8064e4:	10800104 	addi	r2,r2,4
  8064e8:	194000cc 	andi	r5,r3,3
  8064ec:	2800021e 	bne	r5,zero,8064f8 <__lo0bits+0x68>
  8064f0:	1806d0ba 	srli	r3,r3,2
  8064f4:	10800084 	addi	r2,r2,2
  8064f8:	1940004c 	andi	r5,r3,1
  8064fc:	2800081e 	bne	r5,zero,806520 <__lo0bits+0x90>
  806500:	1806d07a 	srli	r3,r3,1
  806504:	1800051e 	bne	r3,zero,80651c <__lo0bits+0x8c>
  806508:	00800804 	movi	r2,32
  80650c:	f800283a 	ret
  806510:	1806d43a 	srli	r3,r3,16
  806514:	00800404 	movi	r2,16
  806518:	003feb06 	br	8064c8 <__alt_data_end+0xff8064c8>
  80651c:	10800044 	addi	r2,r2,1
  806520:	20c00015 	stw	r3,0(r4)
  806524:	f800283a 	ret
  806528:	0005883a 	mov	r2,zero
  80652c:	f800283a 	ret
  806530:	1806d07a 	srli	r3,r3,1
  806534:	00800044 	movi	r2,1
  806538:	20c00015 	stw	r3,0(r4)
  80653c:	f800283a 	ret

00806540 <__i2b>:
  806540:	defffd04 	addi	sp,sp,-12
  806544:	dc000015 	stw	r16,0(sp)
  806548:	04000044 	movi	r16,1
  80654c:	dc400115 	stw	r17,4(sp)
  806550:	2823883a 	mov	r17,r5
  806554:	800b883a 	mov	r5,r16
  806558:	dfc00215 	stw	ra,8(sp)
  80655c:	08061340 	call	806134 <_Balloc>
  806560:	14400515 	stw	r17,20(r2)
  806564:	14000415 	stw	r16,16(r2)
  806568:	dfc00217 	ldw	ra,8(sp)
  80656c:	dc400117 	ldw	r17,4(sp)
  806570:	dc000017 	ldw	r16,0(sp)
  806574:	dec00304 	addi	sp,sp,12
  806578:	f800283a 	ret

0080657c <__multiply>:
  80657c:	defffa04 	addi	sp,sp,-24
  806580:	dcc00315 	stw	r19,12(sp)
  806584:	dc800215 	stw	r18,8(sp)
  806588:	34c00417 	ldw	r19,16(r6)
  80658c:	2c800417 	ldw	r18,16(r5)
  806590:	dd000415 	stw	r20,16(sp)
  806594:	dc400115 	stw	r17,4(sp)
  806598:	dfc00515 	stw	ra,20(sp)
  80659c:	dc000015 	stw	r16,0(sp)
  8065a0:	2829883a 	mov	r20,r5
  8065a4:	3023883a 	mov	r17,r6
  8065a8:	94c0050e 	bge	r18,r19,8065c0 <__multiply+0x44>
  8065ac:	9007883a 	mov	r3,r18
  8065b0:	3029883a 	mov	r20,r6
  8065b4:	9825883a 	mov	r18,r19
  8065b8:	2823883a 	mov	r17,r5
  8065bc:	1827883a 	mov	r19,r3
  8065c0:	a0800217 	ldw	r2,8(r20)
  8065c4:	94e1883a 	add	r16,r18,r19
  8065c8:	a1400117 	ldw	r5,4(r20)
  8065cc:	1400010e 	bge	r2,r16,8065d4 <__multiply+0x58>
  8065d0:	29400044 	addi	r5,r5,1
  8065d4:	08061340 	call	806134 <_Balloc>
  8065d8:	8415883a 	add	r10,r16,r16
  8065dc:	12c00504 	addi	r11,r2,20
  8065e0:	5295883a 	add	r10,r10,r10
  8065e4:	5a95883a 	add	r10,r11,r10
  8065e8:	5807883a 	mov	r3,r11
  8065ec:	5a80032e 	bgeu	r11,r10,8065fc <__multiply+0x80>
  8065f0:	18000015 	stw	zero,0(r3)
  8065f4:	18c00104 	addi	r3,r3,4
  8065f8:	1abffd36 	bltu	r3,r10,8065f0 <__alt_data_end+0xff8065f0>
  8065fc:	9ce7883a 	add	r19,r19,r19
  806600:	94a5883a 	add	r18,r18,r18
  806604:	89800504 	addi	r6,r17,20
  806608:	9ce7883a 	add	r19,r19,r19
  80660c:	a3400504 	addi	r13,r20,20
  806610:	94a5883a 	add	r18,r18,r18
  806614:	34d9883a 	add	r12,r6,r19
  806618:	6c93883a 	add	r9,r13,r18
  80661c:	3300422e 	bgeu	r6,r12,806728 <__multiply+0x1ac>
  806620:	37c00017 	ldw	ra,0(r6)
  806624:	fbffffcc 	andi	r15,ra,65535
  806628:	78001b26 	beq	r15,zero,806698 <__multiply+0x11c>
  80662c:	5811883a 	mov	r8,r11
  806630:	681d883a 	mov	r14,r13
  806634:	000f883a 	mov	r7,zero
  806638:	71000017 	ldw	r4,0(r14)
  80663c:	40c00017 	ldw	r3,0(r8)
  806640:	73800104 	addi	r14,r14,4
  806644:	217fffcc 	andi	r5,r4,65535
  806648:	2bcb383a 	mul	r5,r5,r15
  80664c:	2008d43a 	srli	r4,r4,16
  806650:	1c7fffcc 	andi	r17,r3,65535
  806654:	2c4b883a 	add	r5,r5,r17
  806658:	29cb883a 	add	r5,r5,r7
  80665c:	23c9383a 	mul	r4,r4,r15
  806660:	1806d43a 	srli	r3,r3,16
  806664:	280ed43a 	srli	r7,r5,16
  806668:	297fffcc 	andi	r5,r5,65535
  80666c:	20c7883a 	add	r3,r4,r3
  806670:	19c7883a 	add	r3,r3,r7
  806674:	1808943a 	slli	r4,r3,16
  806678:	4023883a 	mov	r17,r8
  80667c:	180ed43a 	srli	r7,r3,16
  806680:	214ab03a 	or	r5,r4,r5
  806684:	41400015 	stw	r5,0(r8)
  806688:	42000104 	addi	r8,r8,4
  80668c:	727fea36 	bltu	r14,r9,806638 <__alt_data_end+0xff806638>
  806690:	89c00115 	stw	r7,4(r17)
  806694:	37c00017 	ldw	ra,0(r6)
  806698:	f83ed43a 	srli	ra,ra,16
  80669c:	f8001f26 	beq	ra,zero,80671c <__multiply+0x1a0>
  8066a0:	58c00017 	ldw	r3,0(r11)
  8066a4:	681d883a 	mov	r14,r13
  8066a8:	581f883a 	mov	r15,r11
  8066ac:	1811883a 	mov	r8,r3
  8066b0:	5825883a 	mov	r18,r11
  8066b4:	000f883a 	mov	r7,zero
  8066b8:	00000106 	br	8066c0 <__multiply+0x144>
  8066bc:	8825883a 	mov	r18,r17
  8066c0:	7140000b 	ldhu	r5,0(r14)
  8066c4:	4010d43a 	srli	r8,r8,16
  8066c8:	193fffcc 	andi	r4,r3,65535
  8066cc:	2fcb383a 	mul	r5,r5,ra
  8066d0:	7bc00104 	addi	r15,r15,4
  8066d4:	73800104 	addi	r14,r14,4
  8066d8:	2a0b883a 	add	r5,r5,r8
  8066dc:	29cb883a 	add	r5,r5,r7
  8066e0:	2806943a 	slli	r3,r5,16
  8066e4:	94400104 	addi	r17,r18,4
  8066e8:	280ad43a 	srli	r5,r5,16
  8066ec:	1908b03a 	or	r4,r3,r4
  8066f0:	793fff15 	stw	r4,-4(r15)
  8066f4:	70ffff17 	ldw	r3,-4(r14)
  8066f8:	8a000017 	ldw	r8,0(r17)
  8066fc:	1806d43a 	srli	r3,r3,16
  806700:	413fffcc 	andi	r4,r8,65535
  806704:	1fc7383a 	mul	r3,r3,ra
  806708:	1907883a 	add	r3,r3,r4
  80670c:	1947883a 	add	r3,r3,r5
  806710:	180ed43a 	srli	r7,r3,16
  806714:	727fe936 	bltu	r14,r9,8066bc <__alt_data_end+0xff8066bc>
  806718:	90c00115 	stw	r3,4(r18)
  80671c:	31800104 	addi	r6,r6,4
  806720:	5ac00104 	addi	r11,r11,4
  806724:	333fbe36 	bltu	r6,r12,806620 <__alt_data_end+0xff806620>
  806728:	0400090e 	bge	zero,r16,806750 <__multiply+0x1d4>
  80672c:	50ffff17 	ldw	r3,-4(r10)
  806730:	52bfff04 	addi	r10,r10,-4
  806734:	18000326 	beq	r3,zero,806744 <__multiply+0x1c8>
  806738:	00000506 	br	806750 <__multiply+0x1d4>
  80673c:	50c00017 	ldw	r3,0(r10)
  806740:	1800031e 	bne	r3,zero,806750 <__multiply+0x1d4>
  806744:	843fffc4 	addi	r16,r16,-1
  806748:	52bfff04 	addi	r10,r10,-4
  80674c:	803ffb1e 	bne	r16,zero,80673c <__alt_data_end+0xff80673c>
  806750:	14000415 	stw	r16,16(r2)
  806754:	dfc00517 	ldw	ra,20(sp)
  806758:	dd000417 	ldw	r20,16(sp)
  80675c:	dcc00317 	ldw	r19,12(sp)
  806760:	dc800217 	ldw	r18,8(sp)
  806764:	dc400117 	ldw	r17,4(sp)
  806768:	dc000017 	ldw	r16,0(sp)
  80676c:	dec00604 	addi	sp,sp,24
  806770:	f800283a 	ret

00806774 <__pow5mult>:
  806774:	defffa04 	addi	sp,sp,-24
  806778:	dcc00315 	stw	r19,12(sp)
  80677c:	dc000015 	stw	r16,0(sp)
  806780:	dfc00515 	stw	ra,20(sp)
  806784:	dd000415 	stw	r20,16(sp)
  806788:	dc800215 	stw	r18,8(sp)
  80678c:	dc400115 	stw	r17,4(sp)
  806790:	308000cc 	andi	r2,r6,3
  806794:	3021883a 	mov	r16,r6
  806798:	2027883a 	mov	r19,r4
  80679c:	10002f1e 	bne	r2,zero,80685c <__pow5mult+0xe8>
  8067a0:	2825883a 	mov	r18,r5
  8067a4:	8021d0ba 	srai	r16,r16,2
  8067a8:	80001a26 	beq	r16,zero,806814 <__pow5mult+0xa0>
  8067ac:	9c401217 	ldw	r17,72(r19)
  8067b0:	8800061e 	bne	r17,zero,8067cc <__pow5mult+0x58>
  8067b4:	00003406 	br	806888 <__pow5mult+0x114>
  8067b8:	8021d07a 	srai	r16,r16,1
  8067bc:	80001526 	beq	r16,zero,806814 <__pow5mult+0xa0>
  8067c0:	88800017 	ldw	r2,0(r17)
  8067c4:	10001c26 	beq	r2,zero,806838 <__pow5mult+0xc4>
  8067c8:	1023883a 	mov	r17,r2
  8067cc:	8080004c 	andi	r2,r16,1
  8067d0:	103ff926 	beq	r2,zero,8067b8 <__alt_data_end+0xff8067b8>
  8067d4:	880d883a 	mov	r6,r17
  8067d8:	900b883a 	mov	r5,r18
  8067dc:	9809883a 	mov	r4,r19
  8067e0:	080657c0 	call	80657c <__multiply>
  8067e4:	90001b26 	beq	r18,zero,806854 <__pow5mult+0xe0>
  8067e8:	91000117 	ldw	r4,4(r18)
  8067ec:	98c01317 	ldw	r3,76(r19)
  8067f0:	8021d07a 	srai	r16,r16,1
  8067f4:	2109883a 	add	r4,r4,r4
  8067f8:	2109883a 	add	r4,r4,r4
  8067fc:	1907883a 	add	r3,r3,r4
  806800:	19000017 	ldw	r4,0(r3)
  806804:	91000015 	stw	r4,0(r18)
  806808:	1c800015 	stw	r18,0(r3)
  80680c:	1025883a 	mov	r18,r2
  806810:	803feb1e 	bne	r16,zero,8067c0 <__alt_data_end+0xff8067c0>
  806814:	9005883a 	mov	r2,r18
  806818:	dfc00517 	ldw	ra,20(sp)
  80681c:	dd000417 	ldw	r20,16(sp)
  806820:	dcc00317 	ldw	r19,12(sp)
  806824:	dc800217 	ldw	r18,8(sp)
  806828:	dc400117 	ldw	r17,4(sp)
  80682c:	dc000017 	ldw	r16,0(sp)
  806830:	dec00604 	addi	sp,sp,24
  806834:	f800283a 	ret
  806838:	880d883a 	mov	r6,r17
  80683c:	880b883a 	mov	r5,r17
  806840:	9809883a 	mov	r4,r19
  806844:	080657c0 	call	80657c <__multiply>
  806848:	88800015 	stw	r2,0(r17)
  80684c:	10000015 	stw	zero,0(r2)
  806850:	003fdd06 	br	8067c8 <__alt_data_end+0xff8067c8>
  806854:	1025883a 	mov	r18,r2
  806858:	003fd706 	br	8067b8 <__alt_data_end+0xff8067b8>
  80685c:	10bfffc4 	addi	r2,r2,-1
  806860:	1085883a 	add	r2,r2,r2
  806864:	00c02074 	movhi	r3,129
  806868:	18fcdf04 	addi	r3,r3,-3204
  80686c:	1085883a 	add	r2,r2,r2
  806870:	1885883a 	add	r2,r3,r2
  806874:	11800017 	ldw	r6,0(r2)
  806878:	000f883a 	mov	r7,zero
  80687c:	08062040 	call	806204 <__multadd>
  806880:	1025883a 	mov	r18,r2
  806884:	003fc706 	br	8067a4 <__alt_data_end+0xff8067a4>
  806888:	05000044 	movi	r20,1
  80688c:	a00b883a 	mov	r5,r20
  806890:	9809883a 	mov	r4,r19
  806894:	08061340 	call	806134 <_Balloc>
  806898:	1023883a 	mov	r17,r2
  80689c:	00809c44 	movi	r2,625
  8068a0:	88800515 	stw	r2,20(r17)
  8068a4:	8d000415 	stw	r20,16(r17)
  8068a8:	9c401215 	stw	r17,72(r19)
  8068ac:	88000015 	stw	zero,0(r17)
  8068b0:	003fc606 	br	8067cc <__alt_data_end+0xff8067cc>

008068b4 <__lshift>:
  8068b4:	defff904 	addi	sp,sp,-28
  8068b8:	dd400515 	stw	r21,20(sp)
  8068bc:	dcc00315 	stw	r19,12(sp)
  8068c0:	302bd17a 	srai	r21,r6,5
  8068c4:	2cc00417 	ldw	r19,16(r5)
  8068c8:	28800217 	ldw	r2,8(r5)
  8068cc:	dd000415 	stw	r20,16(sp)
  8068d0:	ace7883a 	add	r19,r21,r19
  8068d4:	dc800215 	stw	r18,8(sp)
  8068d8:	dc400115 	stw	r17,4(sp)
  8068dc:	dc000015 	stw	r16,0(sp)
  8068e0:	dfc00615 	stw	ra,24(sp)
  8068e4:	9c000044 	addi	r16,r19,1
  8068e8:	2823883a 	mov	r17,r5
  8068ec:	3029883a 	mov	r20,r6
  8068f0:	2025883a 	mov	r18,r4
  8068f4:	29400117 	ldw	r5,4(r5)
  8068f8:	1400030e 	bge	r2,r16,806908 <__lshift+0x54>
  8068fc:	1085883a 	add	r2,r2,r2
  806900:	29400044 	addi	r5,r5,1
  806904:	143ffd16 	blt	r2,r16,8068fc <__alt_data_end+0xff8068fc>
  806908:	9009883a 	mov	r4,r18
  80690c:	08061340 	call	806134 <_Balloc>
  806910:	10c00504 	addi	r3,r2,20
  806914:	0540070e 	bge	zero,r21,806934 <__lshift+0x80>
  806918:	ad6b883a 	add	r21,r21,r21
  80691c:	ad6b883a 	add	r21,r21,r21
  806920:	1809883a 	mov	r4,r3
  806924:	1d47883a 	add	r3,r3,r21
  806928:	20000015 	stw	zero,0(r4)
  80692c:	21000104 	addi	r4,r4,4
  806930:	193ffd1e 	bne	r3,r4,806928 <__alt_data_end+0xff806928>
  806934:	8a000417 	ldw	r8,16(r17)
  806938:	89000504 	addi	r4,r17,20
  80693c:	a18007cc 	andi	r6,r20,31
  806940:	4211883a 	add	r8,r8,r8
  806944:	4211883a 	add	r8,r8,r8
  806948:	2211883a 	add	r8,r4,r8
  80694c:	30002326 	beq	r6,zero,8069dc <__lshift+0x128>
  806950:	02400804 	movi	r9,32
  806954:	4993c83a 	sub	r9,r9,r6
  806958:	000b883a 	mov	r5,zero
  80695c:	21c00017 	ldw	r7,0(r4)
  806960:	1815883a 	mov	r10,r3
  806964:	18c00104 	addi	r3,r3,4
  806968:	398e983a 	sll	r7,r7,r6
  80696c:	21000104 	addi	r4,r4,4
  806970:	394ab03a 	or	r5,r7,r5
  806974:	197fff15 	stw	r5,-4(r3)
  806978:	217fff17 	ldw	r5,-4(r4)
  80697c:	2a4ad83a 	srl	r5,r5,r9
  806980:	223ff636 	bltu	r4,r8,80695c <__alt_data_end+0xff80695c>
  806984:	51400115 	stw	r5,4(r10)
  806988:	28001a1e 	bne	r5,zero,8069f4 <__lshift+0x140>
  80698c:	843fffc4 	addi	r16,r16,-1
  806990:	14000415 	stw	r16,16(r2)
  806994:	88000826 	beq	r17,zero,8069b8 <__lshift+0x104>
  806998:	89000117 	ldw	r4,4(r17)
  80699c:	90c01317 	ldw	r3,76(r18)
  8069a0:	2109883a 	add	r4,r4,r4
  8069a4:	2109883a 	add	r4,r4,r4
  8069a8:	1907883a 	add	r3,r3,r4
  8069ac:	19000017 	ldw	r4,0(r3)
  8069b0:	89000015 	stw	r4,0(r17)
  8069b4:	1c400015 	stw	r17,0(r3)
  8069b8:	dfc00617 	ldw	ra,24(sp)
  8069bc:	dd400517 	ldw	r21,20(sp)
  8069c0:	dd000417 	ldw	r20,16(sp)
  8069c4:	dcc00317 	ldw	r19,12(sp)
  8069c8:	dc800217 	ldw	r18,8(sp)
  8069cc:	dc400117 	ldw	r17,4(sp)
  8069d0:	dc000017 	ldw	r16,0(sp)
  8069d4:	dec00704 	addi	sp,sp,28
  8069d8:	f800283a 	ret
  8069dc:	21400017 	ldw	r5,0(r4)
  8069e0:	18c00104 	addi	r3,r3,4
  8069e4:	21000104 	addi	r4,r4,4
  8069e8:	197fff15 	stw	r5,-4(r3)
  8069ec:	223ffb36 	bltu	r4,r8,8069dc <__alt_data_end+0xff8069dc>
  8069f0:	003fe606 	br	80698c <__alt_data_end+0xff80698c>
  8069f4:	9c000084 	addi	r16,r19,2
  8069f8:	003fe406 	br	80698c <__alt_data_end+0xff80698c>

008069fc <__mcmp>:
  8069fc:	20800417 	ldw	r2,16(r4)
  806a00:	28c00417 	ldw	r3,16(r5)
  806a04:	10c5c83a 	sub	r2,r2,r3
  806a08:	1000111e 	bne	r2,zero,806a50 <__mcmp+0x54>
  806a0c:	18c7883a 	add	r3,r3,r3
  806a10:	18c7883a 	add	r3,r3,r3
  806a14:	21000504 	addi	r4,r4,20
  806a18:	29400504 	addi	r5,r5,20
  806a1c:	20c5883a 	add	r2,r4,r3
  806a20:	28cb883a 	add	r5,r5,r3
  806a24:	00000106 	br	806a2c <__mcmp+0x30>
  806a28:	20800a2e 	bgeu	r4,r2,806a54 <__mcmp+0x58>
  806a2c:	10bfff04 	addi	r2,r2,-4
  806a30:	297fff04 	addi	r5,r5,-4
  806a34:	11800017 	ldw	r6,0(r2)
  806a38:	28c00017 	ldw	r3,0(r5)
  806a3c:	30fffa26 	beq	r6,r3,806a28 <__alt_data_end+0xff806a28>
  806a40:	30c00236 	bltu	r6,r3,806a4c <__mcmp+0x50>
  806a44:	00800044 	movi	r2,1
  806a48:	f800283a 	ret
  806a4c:	00bfffc4 	movi	r2,-1
  806a50:	f800283a 	ret
  806a54:	0005883a 	mov	r2,zero
  806a58:	f800283a 	ret

00806a5c <__mdiff>:
  806a5c:	28c00417 	ldw	r3,16(r5)
  806a60:	30800417 	ldw	r2,16(r6)
  806a64:	defffa04 	addi	sp,sp,-24
  806a68:	dcc00315 	stw	r19,12(sp)
  806a6c:	dc800215 	stw	r18,8(sp)
  806a70:	dfc00515 	stw	ra,20(sp)
  806a74:	dd000415 	stw	r20,16(sp)
  806a78:	dc400115 	stw	r17,4(sp)
  806a7c:	dc000015 	stw	r16,0(sp)
  806a80:	1887c83a 	sub	r3,r3,r2
  806a84:	2825883a 	mov	r18,r5
  806a88:	3027883a 	mov	r19,r6
  806a8c:	1800141e 	bne	r3,zero,806ae0 <__mdiff+0x84>
  806a90:	1085883a 	add	r2,r2,r2
  806a94:	1085883a 	add	r2,r2,r2
  806a98:	2a000504 	addi	r8,r5,20
  806a9c:	34000504 	addi	r16,r6,20
  806aa0:	4087883a 	add	r3,r8,r2
  806aa4:	8085883a 	add	r2,r16,r2
  806aa8:	00000106 	br	806ab0 <__mdiff+0x54>
  806aac:	40c0592e 	bgeu	r8,r3,806c14 <__mdiff+0x1b8>
  806ab0:	18ffff04 	addi	r3,r3,-4
  806ab4:	10bfff04 	addi	r2,r2,-4
  806ab8:	19c00017 	ldw	r7,0(r3)
  806abc:	11400017 	ldw	r5,0(r2)
  806ac0:	397ffa26 	beq	r7,r5,806aac <__alt_data_end+0xff806aac>
  806ac4:	3940592e 	bgeu	r7,r5,806c2c <__mdiff+0x1d0>
  806ac8:	9005883a 	mov	r2,r18
  806acc:	4023883a 	mov	r17,r8
  806ad0:	9825883a 	mov	r18,r19
  806ad4:	05000044 	movi	r20,1
  806ad8:	1027883a 	mov	r19,r2
  806adc:	00000406 	br	806af0 <__mdiff+0x94>
  806ae0:	18005616 	blt	r3,zero,806c3c <__mdiff+0x1e0>
  806ae4:	34400504 	addi	r17,r6,20
  806ae8:	2c000504 	addi	r16,r5,20
  806aec:	0029883a 	mov	r20,zero
  806af0:	91400117 	ldw	r5,4(r18)
  806af4:	08061340 	call	806134 <_Balloc>
  806af8:	92400417 	ldw	r9,16(r18)
  806afc:	9b000417 	ldw	r12,16(r19)
  806b00:	12c00504 	addi	r11,r2,20
  806b04:	4a51883a 	add	r8,r9,r9
  806b08:	6319883a 	add	r12,r12,r12
  806b0c:	4211883a 	add	r8,r8,r8
  806b10:	6319883a 	add	r12,r12,r12
  806b14:	15000315 	stw	r20,12(r2)
  806b18:	8211883a 	add	r8,r16,r8
  806b1c:	8b19883a 	add	r12,r17,r12
  806b20:	0007883a 	mov	r3,zero
  806b24:	81400017 	ldw	r5,0(r16)
  806b28:	89c00017 	ldw	r7,0(r17)
  806b2c:	59800104 	addi	r6,r11,4
  806b30:	293fffcc 	andi	r4,r5,65535
  806b34:	20c7883a 	add	r3,r4,r3
  806b38:	393fffcc 	andi	r4,r7,65535
  806b3c:	1909c83a 	sub	r4,r3,r4
  806b40:	280ad43a 	srli	r5,r5,16
  806b44:	380ed43a 	srli	r7,r7,16
  806b48:	2007d43a 	srai	r3,r4,16
  806b4c:	213fffcc 	andi	r4,r4,65535
  806b50:	29cbc83a 	sub	r5,r5,r7
  806b54:	28c7883a 	add	r3,r5,r3
  806b58:	180a943a 	slli	r5,r3,16
  806b5c:	8c400104 	addi	r17,r17,4
  806b60:	84000104 	addi	r16,r16,4
  806b64:	2908b03a 	or	r4,r5,r4
  806b68:	59000015 	stw	r4,0(r11)
  806b6c:	1807d43a 	srai	r3,r3,16
  806b70:	3015883a 	mov	r10,r6
  806b74:	3017883a 	mov	r11,r6
  806b78:	8b3fea36 	bltu	r17,r12,806b24 <__alt_data_end+0xff806b24>
  806b7c:	8200162e 	bgeu	r16,r8,806bd8 <__mdiff+0x17c>
  806b80:	8017883a 	mov	r11,r16
  806b84:	59400017 	ldw	r5,0(r11)
  806b88:	31800104 	addi	r6,r6,4
  806b8c:	5ac00104 	addi	r11,r11,4
  806b90:	293fffcc 	andi	r4,r5,65535
  806b94:	20c7883a 	add	r3,r4,r3
  806b98:	280ed43a 	srli	r7,r5,16
  806b9c:	180bd43a 	srai	r5,r3,16
  806ba0:	193fffcc 	andi	r4,r3,65535
  806ba4:	3947883a 	add	r3,r7,r5
  806ba8:	180a943a 	slli	r5,r3,16
  806bac:	1807d43a 	srai	r3,r3,16
  806bb0:	2908b03a 	or	r4,r5,r4
  806bb4:	313fff15 	stw	r4,-4(r6)
  806bb8:	5a3ff236 	bltu	r11,r8,806b84 <__alt_data_end+0xff806b84>
  806bbc:	0406303a 	nor	r3,zero,r16
  806bc0:	1a07883a 	add	r3,r3,r8
  806bc4:	1806d0ba 	srli	r3,r3,2
  806bc8:	18c00044 	addi	r3,r3,1
  806bcc:	18c7883a 	add	r3,r3,r3
  806bd0:	18c7883a 	add	r3,r3,r3
  806bd4:	50d5883a 	add	r10,r10,r3
  806bd8:	50ffff04 	addi	r3,r10,-4
  806bdc:	2000041e 	bne	r4,zero,806bf0 <__mdiff+0x194>
  806be0:	18ffff04 	addi	r3,r3,-4
  806be4:	19000017 	ldw	r4,0(r3)
  806be8:	4a7fffc4 	addi	r9,r9,-1
  806bec:	203ffc26 	beq	r4,zero,806be0 <__alt_data_end+0xff806be0>
  806bf0:	12400415 	stw	r9,16(r2)
  806bf4:	dfc00517 	ldw	ra,20(sp)
  806bf8:	dd000417 	ldw	r20,16(sp)
  806bfc:	dcc00317 	ldw	r19,12(sp)
  806c00:	dc800217 	ldw	r18,8(sp)
  806c04:	dc400117 	ldw	r17,4(sp)
  806c08:	dc000017 	ldw	r16,0(sp)
  806c0c:	dec00604 	addi	sp,sp,24
  806c10:	f800283a 	ret
  806c14:	000b883a 	mov	r5,zero
  806c18:	08061340 	call	806134 <_Balloc>
  806c1c:	00c00044 	movi	r3,1
  806c20:	10c00415 	stw	r3,16(r2)
  806c24:	10000515 	stw	zero,20(r2)
  806c28:	003ff206 	br	806bf4 <__alt_data_end+0xff806bf4>
  806c2c:	8023883a 	mov	r17,r16
  806c30:	0029883a 	mov	r20,zero
  806c34:	4021883a 	mov	r16,r8
  806c38:	003fad06 	br	806af0 <__alt_data_end+0xff806af0>
  806c3c:	9005883a 	mov	r2,r18
  806c40:	94400504 	addi	r17,r18,20
  806c44:	9c000504 	addi	r16,r19,20
  806c48:	9825883a 	mov	r18,r19
  806c4c:	05000044 	movi	r20,1
  806c50:	1027883a 	mov	r19,r2
  806c54:	003fa606 	br	806af0 <__alt_data_end+0xff806af0>

00806c58 <__ulp>:
  806c58:	295ffc2c 	andhi	r5,r5,32752
  806c5c:	00bf3034 	movhi	r2,64704
  806c60:	2887883a 	add	r3,r5,r2
  806c64:	00c0020e 	bge	zero,r3,806c70 <__ulp+0x18>
  806c68:	0005883a 	mov	r2,zero
  806c6c:	f800283a 	ret
  806c70:	00c7c83a 	sub	r3,zero,r3
  806c74:	1807d53a 	srai	r3,r3,20
  806c78:	008004c4 	movi	r2,19
  806c7c:	10c00b0e 	bge	r2,r3,806cac <__ulp+0x54>
  806c80:	18bffb04 	addi	r2,r3,-20
  806c84:	01000784 	movi	r4,30
  806c88:	0007883a 	mov	r3,zero
  806c8c:	20800516 	blt	r4,r2,806ca4 <__ulp+0x4c>
  806c90:	010007c4 	movi	r4,31
  806c94:	2089c83a 	sub	r4,r4,r2
  806c98:	00800044 	movi	r2,1
  806c9c:	1104983a 	sll	r2,r2,r4
  806ca0:	f800283a 	ret
  806ca4:	00800044 	movi	r2,1
  806ca8:	f800283a 	ret
  806cac:	01400234 	movhi	r5,8
  806cb0:	28c7d83a 	sra	r3,r5,r3
  806cb4:	0005883a 	mov	r2,zero
  806cb8:	f800283a 	ret

00806cbc <__b2d>:
  806cbc:	defffa04 	addi	sp,sp,-24
  806cc0:	dc000015 	stw	r16,0(sp)
  806cc4:	24000417 	ldw	r16,16(r4)
  806cc8:	dc400115 	stw	r17,4(sp)
  806ccc:	24400504 	addi	r17,r4,20
  806cd0:	8421883a 	add	r16,r16,r16
  806cd4:	8421883a 	add	r16,r16,r16
  806cd8:	8c21883a 	add	r16,r17,r16
  806cdc:	dc800215 	stw	r18,8(sp)
  806ce0:	84bfff17 	ldw	r18,-4(r16)
  806ce4:	dd000415 	stw	r20,16(sp)
  806ce8:	dcc00315 	stw	r19,12(sp)
  806cec:	9009883a 	mov	r4,r18
  806cf0:	2829883a 	mov	r20,r5
  806cf4:	dfc00515 	stw	ra,20(sp)
  806cf8:	08064280 	call	806428 <__hi0bits>
  806cfc:	00c00804 	movi	r3,32
  806d00:	1889c83a 	sub	r4,r3,r2
  806d04:	a1000015 	stw	r4,0(r20)
  806d08:	01000284 	movi	r4,10
  806d0c:	84ffff04 	addi	r19,r16,-4
  806d10:	20801216 	blt	r4,r2,806d5c <__b2d+0xa0>
  806d14:	018002c4 	movi	r6,11
  806d18:	308dc83a 	sub	r6,r6,r2
  806d1c:	9186d83a 	srl	r3,r18,r6
  806d20:	18cffc34 	orhi	r3,r3,16368
  806d24:	8cc0212e 	bgeu	r17,r19,806dac <__b2d+0xf0>
  806d28:	813ffe17 	ldw	r4,-8(r16)
  806d2c:	218cd83a 	srl	r6,r4,r6
  806d30:	10800544 	addi	r2,r2,21
  806d34:	9084983a 	sll	r2,r18,r2
  806d38:	1184b03a 	or	r2,r2,r6
  806d3c:	dfc00517 	ldw	ra,20(sp)
  806d40:	dd000417 	ldw	r20,16(sp)
  806d44:	dcc00317 	ldw	r19,12(sp)
  806d48:	dc800217 	ldw	r18,8(sp)
  806d4c:	dc400117 	ldw	r17,4(sp)
  806d50:	dc000017 	ldw	r16,0(sp)
  806d54:	dec00604 	addi	sp,sp,24
  806d58:	f800283a 	ret
  806d5c:	8cc00f2e 	bgeu	r17,r19,806d9c <__b2d+0xe0>
  806d60:	117ffd44 	addi	r5,r2,-11
  806d64:	80bffe17 	ldw	r2,-8(r16)
  806d68:	28000e26 	beq	r5,zero,806da4 <__b2d+0xe8>
  806d6c:	1949c83a 	sub	r4,r3,r5
  806d70:	9164983a 	sll	r18,r18,r5
  806d74:	1106d83a 	srl	r3,r2,r4
  806d78:	81bffe04 	addi	r6,r16,-8
  806d7c:	948ffc34 	orhi	r18,r18,16368
  806d80:	90c6b03a 	or	r3,r18,r3
  806d84:	89800e2e 	bgeu	r17,r6,806dc0 <__b2d+0x104>
  806d88:	81bffd17 	ldw	r6,-12(r16)
  806d8c:	1144983a 	sll	r2,r2,r5
  806d90:	310ad83a 	srl	r5,r6,r4
  806d94:	2884b03a 	or	r2,r5,r2
  806d98:	003fe806 	br	806d3c <__alt_data_end+0xff806d3c>
  806d9c:	10bffd44 	addi	r2,r2,-11
  806da0:	1000041e 	bne	r2,zero,806db4 <__b2d+0xf8>
  806da4:	90cffc34 	orhi	r3,r18,16368
  806da8:	003fe406 	br	806d3c <__alt_data_end+0xff806d3c>
  806dac:	000d883a 	mov	r6,zero
  806db0:	003fdf06 	br	806d30 <__alt_data_end+0xff806d30>
  806db4:	90a4983a 	sll	r18,r18,r2
  806db8:	0005883a 	mov	r2,zero
  806dbc:	003ff906 	br	806da4 <__alt_data_end+0xff806da4>
  806dc0:	1144983a 	sll	r2,r2,r5
  806dc4:	003fdd06 	br	806d3c <__alt_data_end+0xff806d3c>

00806dc8 <__d2b>:
  806dc8:	defff804 	addi	sp,sp,-32
  806dcc:	dc000215 	stw	r16,8(sp)
  806dd0:	3021883a 	mov	r16,r6
  806dd4:	dc400315 	stw	r17,12(sp)
  806dd8:	8022907a 	slli	r17,r16,1
  806ddc:	dd000615 	stw	r20,24(sp)
  806de0:	2829883a 	mov	r20,r5
  806de4:	01400044 	movi	r5,1
  806de8:	dcc00515 	stw	r19,20(sp)
  806dec:	dc800415 	stw	r18,16(sp)
  806df0:	dfc00715 	stw	ra,28(sp)
  806df4:	3825883a 	mov	r18,r7
  806df8:	8822d57a 	srli	r17,r17,21
  806dfc:	08061340 	call	806134 <_Balloc>
  806e00:	1027883a 	mov	r19,r2
  806e04:	00800434 	movhi	r2,16
  806e08:	10bfffc4 	addi	r2,r2,-1
  806e0c:	808c703a 	and	r6,r16,r2
  806e10:	88000126 	beq	r17,zero,806e18 <__d2b+0x50>
  806e14:	31800434 	orhi	r6,r6,16
  806e18:	d9800015 	stw	r6,0(sp)
  806e1c:	a0002426 	beq	r20,zero,806eb0 <__d2b+0xe8>
  806e20:	d9000104 	addi	r4,sp,4
  806e24:	dd000115 	stw	r20,4(sp)
  806e28:	08064900 	call	806490 <__lo0bits>
  806e2c:	d8c00017 	ldw	r3,0(sp)
  806e30:	10002f1e 	bne	r2,zero,806ef0 <__d2b+0x128>
  806e34:	d9000117 	ldw	r4,4(sp)
  806e38:	99000515 	stw	r4,20(r19)
  806e3c:	1821003a 	cmpeq	r16,r3,zero
  806e40:	01000084 	movi	r4,2
  806e44:	2421c83a 	sub	r16,r4,r16
  806e48:	98c00615 	stw	r3,24(r19)
  806e4c:	9c000415 	stw	r16,16(r19)
  806e50:	88001f1e 	bne	r17,zero,806ed0 <__d2b+0x108>
  806e54:	10bef384 	addi	r2,r2,-1074
  806e58:	90800015 	stw	r2,0(r18)
  806e5c:	00900034 	movhi	r2,16384
  806e60:	10bfffc4 	addi	r2,r2,-1
  806e64:	8085883a 	add	r2,r16,r2
  806e68:	1085883a 	add	r2,r2,r2
  806e6c:	1085883a 	add	r2,r2,r2
  806e70:	9885883a 	add	r2,r19,r2
  806e74:	11000517 	ldw	r4,20(r2)
  806e78:	8020917a 	slli	r16,r16,5
  806e7c:	08064280 	call	806428 <__hi0bits>
  806e80:	d8c00817 	ldw	r3,32(sp)
  806e84:	8085c83a 	sub	r2,r16,r2
  806e88:	18800015 	stw	r2,0(r3)
  806e8c:	9805883a 	mov	r2,r19
  806e90:	dfc00717 	ldw	ra,28(sp)
  806e94:	dd000617 	ldw	r20,24(sp)
  806e98:	dcc00517 	ldw	r19,20(sp)
  806e9c:	dc800417 	ldw	r18,16(sp)
  806ea0:	dc400317 	ldw	r17,12(sp)
  806ea4:	dc000217 	ldw	r16,8(sp)
  806ea8:	dec00804 	addi	sp,sp,32
  806eac:	f800283a 	ret
  806eb0:	d809883a 	mov	r4,sp
  806eb4:	08064900 	call	806490 <__lo0bits>
  806eb8:	d8c00017 	ldw	r3,0(sp)
  806ebc:	04000044 	movi	r16,1
  806ec0:	9c000415 	stw	r16,16(r19)
  806ec4:	98c00515 	stw	r3,20(r19)
  806ec8:	10800804 	addi	r2,r2,32
  806ecc:	883fe126 	beq	r17,zero,806e54 <__alt_data_end+0xff806e54>
  806ed0:	00c00d44 	movi	r3,53
  806ed4:	8c7ef344 	addi	r17,r17,-1075
  806ed8:	88a3883a 	add	r17,r17,r2
  806edc:	1885c83a 	sub	r2,r3,r2
  806ee0:	d8c00817 	ldw	r3,32(sp)
  806ee4:	94400015 	stw	r17,0(r18)
  806ee8:	18800015 	stw	r2,0(r3)
  806eec:	003fe706 	br	806e8c <__alt_data_end+0xff806e8c>
  806ef0:	01000804 	movi	r4,32
  806ef4:	2089c83a 	sub	r4,r4,r2
  806ef8:	1908983a 	sll	r4,r3,r4
  806efc:	d9400117 	ldw	r5,4(sp)
  806f00:	1886d83a 	srl	r3,r3,r2
  806f04:	2148b03a 	or	r4,r4,r5
  806f08:	99000515 	stw	r4,20(r19)
  806f0c:	d8c00015 	stw	r3,0(sp)
  806f10:	003fca06 	br	806e3c <__alt_data_end+0xff806e3c>

00806f14 <__ratio>:
  806f14:	defff904 	addi	sp,sp,-28
  806f18:	dc400315 	stw	r17,12(sp)
  806f1c:	2823883a 	mov	r17,r5
  806f20:	d9400104 	addi	r5,sp,4
  806f24:	dfc00615 	stw	ra,24(sp)
  806f28:	dcc00515 	stw	r19,20(sp)
  806f2c:	dc800415 	stw	r18,16(sp)
  806f30:	2027883a 	mov	r19,r4
  806f34:	dc000215 	stw	r16,8(sp)
  806f38:	0806cbc0 	call	806cbc <__b2d>
  806f3c:	d80b883a 	mov	r5,sp
  806f40:	8809883a 	mov	r4,r17
  806f44:	1025883a 	mov	r18,r2
  806f48:	1821883a 	mov	r16,r3
  806f4c:	0806cbc0 	call	806cbc <__b2d>
  806f50:	8a000417 	ldw	r8,16(r17)
  806f54:	99000417 	ldw	r4,16(r19)
  806f58:	d9400117 	ldw	r5,4(sp)
  806f5c:	2209c83a 	sub	r4,r4,r8
  806f60:	2010917a 	slli	r8,r4,5
  806f64:	d9000017 	ldw	r4,0(sp)
  806f68:	2909c83a 	sub	r4,r5,r4
  806f6c:	4109883a 	add	r4,r8,r4
  806f70:	01000e0e 	bge	zero,r4,806fac <__ratio+0x98>
  806f74:	2008953a 	slli	r4,r4,20
  806f78:	2421883a 	add	r16,r4,r16
  806f7c:	100d883a 	mov	r6,r2
  806f80:	180f883a 	mov	r7,r3
  806f84:	9009883a 	mov	r4,r18
  806f88:	800b883a 	mov	r5,r16
  806f8c:	080ae000 	call	80ae00 <__divdf3>
  806f90:	dfc00617 	ldw	ra,24(sp)
  806f94:	dcc00517 	ldw	r19,20(sp)
  806f98:	dc800417 	ldw	r18,16(sp)
  806f9c:	dc400317 	ldw	r17,12(sp)
  806fa0:	dc000217 	ldw	r16,8(sp)
  806fa4:	dec00704 	addi	sp,sp,28
  806fa8:	f800283a 	ret
  806fac:	2008953a 	slli	r4,r4,20
  806fb0:	1907c83a 	sub	r3,r3,r4
  806fb4:	003ff106 	br	806f7c <__alt_data_end+0xff806f7c>

00806fb8 <_mprec_log10>:
  806fb8:	defffe04 	addi	sp,sp,-8
  806fbc:	dc000015 	stw	r16,0(sp)
  806fc0:	dfc00115 	stw	ra,4(sp)
  806fc4:	008005c4 	movi	r2,23
  806fc8:	2021883a 	mov	r16,r4
  806fcc:	11000d0e 	bge	r2,r4,807004 <_mprec_log10+0x4c>
  806fd0:	0005883a 	mov	r2,zero
  806fd4:	00cffc34 	movhi	r3,16368
  806fd8:	843fffc4 	addi	r16,r16,-1
  806fdc:	000d883a 	mov	r6,zero
  806fe0:	01d00934 	movhi	r7,16420
  806fe4:	1009883a 	mov	r4,r2
  806fe8:	180b883a 	mov	r5,r3
  806fec:	080b9400 	call	80b940 <__muldf3>
  806ff0:	803ff91e 	bne	r16,zero,806fd8 <__alt_data_end+0xff806fd8>
  806ff4:	dfc00117 	ldw	ra,4(sp)
  806ff8:	dc000017 	ldw	r16,0(sp)
  806ffc:	dec00204 	addi	sp,sp,8
  807000:	f800283a 	ret
  807004:	202090fa 	slli	r16,r4,3
  807008:	00802074 	movhi	r2,129
  80700c:	10bcf604 	addi	r2,r2,-3112
  807010:	1421883a 	add	r16,r2,r16
  807014:	80800017 	ldw	r2,0(r16)
  807018:	80c00117 	ldw	r3,4(r16)
  80701c:	dfc00117 	ldw	ra,4(sp)
  807020:	dc000017 	ldw	r16,0(sp)
  807024:	dec00204 	addi	sp,sp,8
  807028:	f800283a 	ret

0080702c <__copybits>:
  80702c:	297fffc4 	addi	r5,r5,-1
  807030:	280fd17a 	srai	r7,r5,5
  807034:	30c00417 	ldw	r3,16(r6)
  807038:	30800504 	addi	r2,r6,20
  80703c:	39c00044 	addi	r7,r7,1
  807040:	18c7883a 	add	r3,r3,r3
  807044:	39cf883a 	add	r7,r7,r7
  807048:	18c7883a 	add	r3,r3,r3
  80704c:	39cf883a 	add	r7,r7,r7
  807050:	10c7883a 	add	r3,r2,r3
  807054:	21cf883a 	add	r7,r4,r7
  807058:	10c00d2e 	bgeu	r2,r3,807090 <__copybits+0x64>
  80705c:	200b883a 	mov	r5,r4
  807060:	12000017 	ldw	r8,0(r2)
  807064:	29400104 	addi	r5,r5,4
  807068:	10800104 	addi	r2,r2,4
  80706c:	2a3fff15 	stw	r8,-4(r5)
  807070:	10fffb36 	bltu	r2,r3,807060 <__alt_data_end+0xff807060>
  807074:	1985c83a 	sub	r2,r3,r6
  807078:	10bffac4 	addi	r2,r2,-21
  80707c:	1004d0ba 	srli	r2,r2,2
  807080:	10800044 	addi	r2,r2,1
  807084:	1085883a 	add	r2,r2,r2
  807088:	1085883a 	add	r2,r2,r2
  80708c:	2089883a 	add	r4,r4,r2
  807090:	21c0032e 	bgeu	r4,r7,8070a0 <__copybits+0x74>
  807094:	20000015 	stw	zero,0(r4)
  807098:	21000104 	addi	r4,r4,4
  80709c:	21fffd36 	bltu	r4,r7,807094 <__alt_data_end+0xff807094>
  8070a0:	f800283a 	ret

008070a4 <__any_on>:
  8070a4:	20c00417 	ldw	r3,16(r4)
  8070a8:	2805d17a 	srai	r2,r5,5
  8070ac:	21000504 	addi	r4,r4,20
  8070b0:	18800d0e 	bge	r3,r2,8070e8 <__any_on+0x44>
  8070b4:	18c7883a 	add	r3,r3,r3
  8070b8:	18c7883a 	add	r3,r3,r3
  8070bc:	20c7883a 	add	r3,r4,r3
  8070c0:	20c0192e 	bgeu	r4,r3,807128 <__any_on+0x84>
  8070c4:	18bfff17 	ldw	r2,-4(r3)
  8070c8:	18ffff04 	addi	r3,r3,-4
  8070cc:	1000041e 	bne	r2,zero,8070e0 <__any_on+0x3c>
  8070d0:	20c0142e 	bgeu	r4,r3,807124 <__any_on+0x80>
  8070d4:	18ffff04 	addi	r3,r3,-4
  8070d8:	19400017 	ldw	r5,0(r3)
  8070dc:	283ffc26 	beq	r5,zero,8070d0 <__alt_data_end+0xff8070d0>
  8070e0:	00800044 	movi	r2,1
  8070e4:	f800283a 	ret
  8070e8:	10c00a0e 	bge	r2,r3,807114 <__any_on+0x70>
  8070ec:	1085883a 	add	r2,r2,r2
  8070f0:	1085883a 	add	r2,r2,r2
  8070f4:	294007cc 	andi	r5,r5,31
  8070f8:	2087883a 	add	r3,r4,r2
  8070fc:	283ff026 	beq	r5,zero,8070c0 <__alt_data_end+0xff8070c0>
  807100:	19800017 	ldw	r6,0(r3)
  807104:	3144d83a 	srl	r2,r6,r5
  807108:	114a983a 	sll	r5,r2,r5
  80710c:	317ff41e 	bne	r6,r5,8070e0 <__alt_data_end+0xff8070e0>
  807110:	003feb06 	br	8070c0 <__alt_data_end+0xff8070c0>
  807114:	1085883a 	add	r2,r2,r2
  807118:	1085883a 	add	r2,r2,r2
  80711c:	2087883a 	add	r3,r4,r2
  807120:	003fe706 	br	8070c0 <__alt_data_end+0xff8070c0>
  807124:	f800283a 	ret
  807128:	0005883a 	mov	r2,zero
  80712c:	f800283a 	ret

00807130 <_realloc_r>:
  807130:	defff604 	addi	sp,sp,-40
  807134:	dc800215 	stw	r18,8(sp)
  807138:	dfc00915 	stw	ra,36(sp)
  80713c:	df000815 	stw	fp,32(sp)
  807140:	ddc00715 	stw	r23,28(sp)
  807144:	dd800615 	stw	r22,24(sp)
  807148:	dd400515 	stw	r21,20(sp)
  80714c:	dd000415 	stw	r20,16(sp)
  807150:	dcc00315 	stw	r19,12(sp)
  807154:	dc400115 	stw	r17,4(sp)
  807158:	dc000015 	stw	r16,0(sp)
  80715c:	3025883a 	mov	r18,r6
  807160:	2800b726 	beq	r5,zero,807440 <_realloc_r+0x310>
  807164:	282b883a 	mov	r21,r5
  807168:	2029883a 	mov	r20,r4
  80716c:	080d1380 	call	80d138 <__malloc_lock>
  807170:	a8bfff17 	ldw	r2,-4(r21)
  807174:	043fff04 	movi	r16,-4
  807178:	90c002c4 	addi	r3,r18,11
  80717c:	01000584 	movi	r4,22
  807180:	acfffe04 	addi	r19,r21,-8
  807184:	1420703a 	and	r16,r2,r16
  807188:	20c0332e 	bgeu	r4,r3,807258 <_realloc_r+0x128>
  80718c:	047ffe04 	movi	r17,-8
  807190:	1c62703a 	and	r17,r3,r17
  807194:	8807883a 	mov	r3,r17
  807198:	88005816 	blt	r17,zero,8072fc <_realloc_r+0x1cc>
  80719c:	8c805736 	bltu	r17,r18,8072fc <_realloc_r+0x1cc>
  8071a0:	80c0300e 	bge	r16,r3,807264 <_realloc_r+0x134>
  8071a4:	07002074 	movhi	fp,129
  8071a8:	e73ea204 	addi	fp,fp,-1400
  8071ac:	e1c00217 	ldw	r7,8(fp)
  8071b0:	9c09883a 	add	r4,r19,r16
  8071b4:	22000117 	ldw	r8,4(r4)
  8071b8:	21c06326 	beq	r4,r7,807348 <_realloc_r+0x218>
  8071bc:	017fff84 	movi	r5,-2
  8071c0:	414a703a 	and	r5,r8,r5
  8071c4:	214b883a 	add	r5,r4,r5
  8071c8:	29800117 	ldw	r6,4(r5)
  8071cc:	3180004c 	andi	r6,r6,1
  8071d0:	30003f26 	beq	r6,zero,8072d0 <_realloc_r+0x1a0>
  8071d4:	1080004c 	andi	r2,r2,1
  8071d8:	10008326 	beq	r2,zero,8073e8 <_realloc_r+0x2b8>
  8071dc:	900b883a 	mov	r5,r18
  8071e0:	a009883a 	mov	r4,r20
  8071e4:	08054780 	call	805478 <_malloc_r>
  8071e8:	1025883a 	mov	r18,r2
  8071ec:	10011e26 	beq	r2,zero,807668 <_realloc_r+0x538>
  8071f0:	a93fff17 	ldw	r4,-4(r21)
  8071f4:	10fffe04 	addi	r3,r2,-8
  8071f8:	00bfff84 	movi	r2,-2
  8071fc:	2084703a 	and	r2,r4,r2
  807200:	9885883a 	add	r2,r19,r2
  807204:	1880ee26 	beq	r3,r2,8075c0 <_realloc_r+0x490>
  807208:	81bfff04 	addi	r6,r16,-4
  80720c:	00800904 	movi	r2,36
  807210:	1180b836 	bltu	r2,r6,8074f4 <_realloc_r+0x3c4>
  807214:	00c004c4 	movi	r3,19
  807218:	19809636 	bltu	r3,r6,807474 <_realloc_r+0x344>
  80721c:	9005883a 	mov	r2,r18
  807220:	a807883a 	mov	r3,r21
  807224:	19000017 	ldw	r4,0(r3)
  807228:	11000015 	stw	r4,0(r2)
  80722c:	19000117 	ldw	r4,4(r3)
  807230:	11000115 	stw	r4,4(r2)
  807234:	18c00217 	ldw	r3,8(r3)
  807238:	10c00215 	stw	r3,8(r2)
  80723c:	a80b883a 	mov	r5,r21
  807240:	a009883a 	mov	r4,r20
  807244:	080488c0 	call	80488c <_free_r>
  807248:	a009883a 	mov	r4,r20
  80724c:	080d15c0 	call	80d15c <__malloc_unlock>
  807250:	9005883a 	mov	r2,r18
  807254:	00001206 	br	8072a0 <_realloc_r+0x170>
  807258:	00c00404 	movi	r3,16
  80725c:	1823883a 	mov	r17,r3
  807260:	003fce06 	br	80719c <__alt_data_end+0xff80719c>
  807264:	a825883a 	mov	r18,r21
  807268:	8445c83a 	sub	r2,r16,r17
  80726c:	00c003c4 	movi	r3,15
  807270:	18802636 	bltu	r3,r2,80730c <_realloc_r+0x1dc>
  807274:	99800117 	ldw	r6,4(r19)
  807278:	9c07883a 	add	r3,r19,r16
  80727c:	3180004c 	andi	r6,r6,1
  807280:	3420b03a 	or	r16,r6,r16
  807284:	9c000115 	stw	r16,4(r19)
  807288:	18800117 	ldw	r2,4(r3)
  80728c:	10800054 	ori	r2,r2,1
  807290:	18800115 	stw	r2,4(r3)
  807294:	a009883a 	mov	r4,r20
  807298:	080d15c0 	call	80d15c <__malloc_unlock>
  80729c:	9005883a 	mov	r2,r18
  8072a0:	dfc00917 	ldw	ra,36(sp)
  8072a4:	df000817 	ldw	fp,32(sp)
  8072a8:	ddc00717 	ldw	r23,28(sp)
  8072ac:	dd800617 	ldw	r22,24(sp)
  8072b0:	dd400517 	ldw	r21,20(sp)
  8072b4:	dd000417 	ldw	r20,16(sp)
  8072b8:	dcc00317 	ldw	r19,12(sp)
  8072bc:	dc800217 	ldw	r18,8(sp)
  8072c0:	dc400117 	ldw	r17,4(sp)
  8072c4:	dc000017 	ldw	r16,0(sp)
  8072c8:	dec00a04 	addi	sp,sp,40
  8072cc:	f800283a 	ret
  8072d0:	017fff04 	movi	r5,-4
  8072d4:	414a703a 	and	r5,r8,r5
  8072d8:	814d883a 	add	r6,r16,r5
  8072dc:	30c01f16 	blt	r6,r3,80735c <_realloc_r+0x22c>
  8072e0:	20800317 	ldw	r2,12(r4)
  8072e4:	20c00217 	ldw	r3,8(r4)
  8072e8:	a825883a 	mov	r18,r21
  8072ec:	3021883a 	mov	r16,r6
  8072f0:	18800315 	stw	r2,12(r3)
  8072f4:	10c00215 	stw	r3,8(r2)
  8072f8:	003fdb06 	br	807268 <__alt_data_end+0xff807268>
  8072fc:	00800304 	movi	r2,12
  807300:	a0800015 	stw	r2,0(r20)
  807304:	0005883a 	mov	r2,zero
  807308:	003fe506 	br	8072a0 <__alt_data_end+0xff8072a0>
  80730c:	98c00117 	ldw	r3,4(r19)
  807310:	9c4b883a 	add	r5,r19,r17
  807314:	11000054 	ori	r4,r2,1
  807318:	18c0004c 	andi	r3,r3,1
  80731c:	1c62b03a 	or	r17,r3,r17
  807320:	9c400115 	stw	r17,4(r19)
  807324:	29000115 	stw	r4,4(r5)
  807328:	2885883a 	add	r2,r5,r2
  80732c:	10c00117 	ldw	r3,4(r2)
  807330:	29400204 	addi	r5,r5,8
  807334:	a009883a 	mov	r4,r20
  807338:	18c00054 	ori	r3,r3,1
  80733c:	10c00115 	stw	r3,4(r2)
  807340:	080488c0 	call	80488c <_free_r>
  807344:	003fd306 	br	807294 <__alt_data_end+0xff807294>
  807348:	017fff04 	movi	r5,-4
  80734c:	414a703a 	and	r5,r8,r5
  807350:	89800404 	addi	r6,r17,16
  807354:	8151883a 	add	r8,r16,r5
  807358:	4180590e 	bge	r8,r6,8074c0 <_realloc_r+0x390>
  80735c:	1080004c 	andi	r2,r2,1
  807360:	103f9e1e 	bne	r2,zero,8071dc <__alt_data_end+0xff8071dc>
  807364:	adbffe17 	ldw	r22,-8(r21)
  807368:	00bfff04 	movi	r2,-4
  80736c:	9dadc83a 	sub	r22,r19,r22
  807370:	b1800117 	ldw	r6,4(r22)
  807374:	3084703a 	and	r2,r6,r2
  807378:	20002026 	beq	r4,zero,8073fc <_realloc_r+0x2cc>
  80737c:	80af883a 	add	r23,r16,r2
  807380:	b96f883a 	add	r23,r23,r5
  807384:	21c05f26 	beq	r4,r7,807504 <_realloc_r+0x3d4>
  807388:	b8c01c16 	blt	r23,r3,8073fc <_realloc_r+0x2cc>
  80738c:	20800317 	ldw	r2,12(r4)
  807390:	20c00217 	ldw	r3,8(r4)
  807394:	81bfff04 	addi	r6,r16,-4
  807398:	01000904 	movi	r4,36
  80739c:	18800315 	stw	r2,12(r3)
  8073a0:	10c00215 	stw	r3,8(r2)
  8073a4:	b0c00217 	ldw	r3,8(r22)
  8073a8:	b0800317 	ldw	r2,12(r22)
  8073ac:	b4800204 	addi	r18,r22,8
  8073b0:	18800315 	stw	r2,12(r3)
  8073b4:	10c00215 	stw	r3,8(r2)
  8073b8:	21801b36 	bltu	r4,r6,807428 <_realloc_r+0x2f8>
  8073bc:	008004c4 	movi	r2,19
  8073c0:	1180352e 	bgeu	r2,r6,807498 <_realloc_r+0x368>
  8073c4:	a8800017 	ldw	r2,0(r21)
  8073c8:	b0800215 	stw	r2,8(r22)
  8073cc:	a8800117 	ldw	r2,4(r21)
  8073d0:	b0800315 	stw	r2,12(r22)
  8073d4:	008006c4 	movi	r2,27
  8073d8:	11807f36 	bltu	r2,r6,8075d8 <_realloc_r+0x4a8>
  8073dc:	b0800404 	addi	r2,r22,16
  8073e0:	ad400204 	addi	r21,r21,8
  8073e4:	00002d06 	br	80749c <_realloc_r+0x36c>
  8073e8:	adbffe17 	ldw	r22,-8(r21)
  8073ec:	00bfff04 	movi	r2,-4
  8073f0:	9dadc83a 	sub	r22,r19,r22
  8073f4:	b1000117 	ldw	r4,4(r22)
  8073f8:	2084703a 	and	r2,r4,r2
  8073fc:	b03f7726 	beq	r22,zero,8071dc <__alt_data_end+0xff8071dc>
  807400:	80af883a 	add	r23,r16,r2
  807404:	b8ff7516 	blt	r23,r3,8071dc <__alt_data_end+0xff8071dc>
  807408:	b0800317 	ldw	r2,12(r22)
  80740c:	b0c00217 	ldw	r3,8(r22)
  807410:	81bfff04 	addi	r6,r16,-4
  807414:	01000904 	movi	r4,36
  807418:	18800315 	stw	r2,12(r3)
  80741c:	10c00215 	stw	r3,8(r2)
  807420:	b4800204 	addi	r18,r22,8
  807424:	21bfe52e 	bgeu	r4,r6,8073bc <__alt_data_end+0xff8073bc>
  807428:	a80b883a 	mov	r5,r21
  80742c:	9009883a 	mov	r4,r18
  807430:	0805eb00 	call	805eb0 <memmove>
  807434:	b821883a 	mov	r16,r23
  807438:	b027883a 	mov	r19,r22
  80743c:	003f8a06 	br	807268 <__alt_data_end+0xff807268>
  807440:	300b883a 	mov	r5,r6
  807444:	dfc00917 	ldw	ra,36(sp)
  807448:	df000817 	ldw	fp,32(sp)
  80744c:	ddc00717 	ldw	r23,28(sp)
  807450:	dd800617 	ldw	r22,24(sp)
  807454:	dd400517 	ldw	r21,20(sp)
  807458:	dd000417 	ldw	r20,16(sp)
  80745c:	dcc00317 	ldw	r19,12(sp)
  807460:	dc800217 	ldw	r18,8(sp)
  807464:	dc400117 	ldw	r17,4(sp)
  807468:	dc000017 	ldw	r16,0(sp)
  80746c:	dec00a04 	addi	sp,sp,40
  807470:	08054781 	jmpi	805478 <_malloc_r>
  807474:	a8c00017 	ldw	r3,0(r21)
  807478:	90c00015 	stw	r3,0(r18)
  80747c:	a8c00117 	ldw	r3,4(r21)
  807480:	90c00115 	stw	r3,4(r18)
  807484:	00c006c4 	movi	r3,27
  807488:	19804536 	bltu	r3,r6,8075a0 <_realloc_r+0x470>
  80748c:	90800204 	addi	r2,r18,8
  807490:	a8c00204 	addi	r3,r21,8
  807494:	003f6306 	br	807224 <__alt_data_end+0xff807224>
  807498:	9005883a 	mov	r2,r18
  80749c:	a8c00017 	ldw	r3,0(r21)
  8074a0:	b821883a 	mov	r16,r23
  8074a4:	b027883a 	mov	r19,r22
  8074a8:	10c00015 	stw	r3,0(r2)
  8074ac:	a8c00117 	ldw	r3,4(r21)
  8074b0:	10c00115 	stw	r3,4(r2)
  8074b4:	a8c00217 	ldw	r3,8(r21)
  8074b8:	10c00215 	stw	r3,8(r2)
  8074bc:	003f6a06 	br	807268 <__alt_data_end+0xff807268>
  8074c0:	9c67883a 	add	r19,r19,r17
  8074c4:	4445c83a 	sub	r2,r8,r17
  8074c8:	e4c00215 	stw	r19,8(fp)
  8074cc:	10800054 	ori	r2,r2,1
  8074d0:	98800115 	stw	r2,4(r19)
  8074d4:	a8bfff17 	ldw	r2,-4(r21)
  8074d8:	a009883a 	mov	r4,r20
  8074dc:	1080004c 	andi	r2,r2,1
  8074e0:	1462b03a 	or	r17,r2,r17
  8074e4:	ac7fff15 	stw	r17,-4(r21)
  8074e8:	080d15c0 	call	80d15c <__malloc_unlock>
  8074ec:	a805883a 	mov	r2,r21
  8074f0:	003f6b06 	br	8072a0 <__alt_data_end+0xff8072a0>
  8074f4:	a80b883a 	mov	r5,r21
  8074f8:	9009883a 	mov	r4,r18
  8074fc:	0805eb00 	call	805eb0 <memmove>
  807500:	003f4e06 	br	80723c <__alt_data_end+0xff80723c>
  807504:	89000404 	addi	r4,r17,16
  807508:	b93fbc16 	blt	r23,r4,8073fc <__alt_data_end+0xff8073fc>
  80750c:	b0800317 	ldw	r2,12(r22)
  807510:	b0c00217 	ldw	r3,8(r22)
  807514:	81bfff04 	addi	r6,r16,-4
  807518:	01000904 	movi	r4,36
  80751c:	18800315 	stw	r2,12(r3)
  807520:	10c00215 	stw	r3,8(r2)
  807524:	b4800204 	addi	r18,r22,8
  807528:	21804336 	bltu	r4,r6,807638 <_realloc_r+0x508>
  80752c:	008004c4 	movi	r2,19
  807530:	11803f2e 	bgeu	r2,r6,807630 <_realloc_r+0x500>
  807534:	a8800017 	ldw	r2,0(r21)
  807538:	b0800215 	stw	r2,8(r22)
  80753c:	a8800117 	ldw	r2,4(r21)
  807540:	b0800315 	stw	r2,12(r22)
  807544:	008006c4 	movi	r2,27
  807548:	11803f36 	bltu	r2,r6,807648 <_realloc_r+0x518>
  80754c:	b0800404 	addi	r2,r22,16
  807550:	ad400204 	addi	r21,r21,8
  807554:	a8c00017 	ldw	r3,0(r21)
  807558:	10c00015 	stw	r3,0(r2)
  80755c:	a8c00117 	ldw	r3,4(r21)
  807560:	10c00115 	stw	r3,4(r2)
  807564:	a8c00217 	ldw	r3,8(r21)
  807568:	10c00215 	stw	r3,8(r2)
  80756c:	b447883a 	add	r3,r22,r17
  807570:	bc45c83a 	sub	r2,r23,r17
  807574:	e0c00215 	stw	r3,8(fp)
  807578:	10800054 	ori	r2,r2,1
  80757c:	18800115 	stw	r2,4(r3)
  807580:	b0800117 	ldw	r2,4(r22)
  807584:	a009883a 	mov	r4,r20
  807588:	1080004c 	andi	r2,r2,1
  80758c:	1462b03a 	or	r17,r2,r17
  807590:	b4400115 	stw	r17,4(r22)
  807594:	080d15c0 	call	80d15c <__malloc_unlock>
  807598:	9005883a 	mov	r2,r18
  80759c:	003f4006 	br	8072a0 <__alt_data_end+0xff8072a0>
  8075a0:	a8c00217 	ldw	r3,8(r21)
  8075a4:	90c00215 	stw	r3,8(r18)
  8075a8:	a8c00317 	ldw	r3,12(r21)
  8075ac:	90c00315 	stw	r3,12(r18)
  8075b0:	30801126 	beq	r6,r2,8075f8 <_realloc_r+0x4c8>
  8075b4:	90800404 	addi	r2,r18,16
  8075b8:	a8c00404 	addi	r3,r21,16
  8075bc:	003f1906 	br	807224 <__alt_data_end+0xff807224>
  8075c0:	90ffff17 	ldw	r3,-4(r18)
  8075c4:	00bfff04 	movi	r2,-4
  8075c8:	a825883a 	mov	r18,r21
  8075cc:	1884703a 	and	r2,r3,r2
  8075d0:	80a1883a 	add	r16,r16,r2
  8075d4:	003f2406 	br	807268 <__alt_data_end+0xff807268>
  8075d8:	a8800217 	ldw	r2,8(r21)
  8075dc:	b0800415 	stw	r2,16(r22)
  8075e0:	a8800317 	ldw	r2,12(r21)
  8075e4:	b0800515 	stw	r2,20(r22)
  8075e8:	31000a26 	beq	r6,r4,807614 <_realloc_r+0x4e4>
  8075ec:	b0800604 	addi	r2,r22,24
  8075f0:	ad400404 	addi	r21,r21,16
  8075f4:	003fa906 	br	80749c <__alt_data_end+0xff80749c>
  8075f8:	a9000417 	ldw	r4,16(r21)
  8075fc:	90800604 	addi	r2,r18,24
  807600:	a8c00604 	addi	r3,r21,24
  807604:	91000415 	stw	r4,16(r18)
  807608:	a9000517 	ldw	r4,20(r21)
  80760c:	91000515 	stw	r4,20(r18)
  807610:	003f0406 	br	807224 <__alt_data_end+0xff807224>
  807614:	a8c00417 	ldw	r3,16(r21)
  807618:	ad400604 	addi	r21,r21,24
  80761c:	b0800804 	addi	r2,r22,32
  807620:	b0c00615 	stw	r3,24(r22)
  807624:	a8ffff17 	ldw	r3,-4(r21)
  807628:	b0c00715 	stw	r3,28(r22)
  80762c:	003f9b06 	br	80749c <__alt_data_end+0xff80749c>
  807630:	9005883a 	mov	r2,r18
  807634:	003fc706 	br	807554 <__alt_data_end+0xff807554>
  807638:	a80b883a 	mov	r5,r21
  80763c:	9009883a 	mov	r4,r18
  807640:	0805eb00 	call	805eb0 <memmove>
  807644:	003fc906 	br	80756c <__alt_data_end+0xff80756c>
  807648:	a8800217 	ldw	r2,8(r21)
  80764c:	b0800415 	stw	r2,16(r22)
  807650:	a8800317 	ldw	r2,12(r21)
  807654:	b0800515 	stw	r2,20(r22)
  807658:	31000726 	beq	r6,r4,807678 <_realloc_r+0x548>
  80765c:	b0800604 	addi	r2,r22,24
  807660:	ad400404 	addi	r21,r21,16
  807664:	003fbb06 	br	807554 <__alt_data_end+0xff807554>
  807668:	a009883a 	mov	r4,r20
  80766c:	080d15c0 	call	80d15c <__malloc_unlock>
  807670:	0005883a 	mov	r2,zero
  807674:	003f0a06 	br	8072a0 <__alt_data_end+0xff8072a0>
  807678:	a8c00417 	ldw	r3,16(r21)
  80767c:	ad400604 	addi	r21,r21,24
  807680:	b0800804 	addi	r2,r22,32
  807684:	b0c00615 	stw	r3,24(r22)
  807688:	a8ffff17 	ldw	r3,-4(r21)
  80768c:	b0c00715 	stw	r3,28(r22)
  807690:	003fb006 	br	807554 <__alt_data_end+0xff807554>

00807694 <__fpclassifyd>:
  807694:	00a00034 	movhi	r2,32768
  807698:	10bfffc4 	addi	r2,r2,-1
  80769c:	2884703a 	and	r2,r5,r2
  8076a0:	10000726 	beq	r2,zero,8076c0 <__fpclassifyd+0x2c>
  8076a4:	00fffc34 	movhi	r3,65520
  8076a8:	019ff834 	movhi	r6,32736
  8076ac:	28c7883a 	add	r3,r5,r3
  8076b0:	31bfffc4 	addi	r6,r6,-1
  8076b4:	30c00536 	bltu	r6,r3,8076cc <__fpclassifyd+0x38>
  8076b8:	00800104 	movi	r2,4
  8076bc:	f800283a 	ret
  8076c0:	2000021e 	bne	r4,zero,8076cc <__fpclassifyd+0x38>
  8076c4:	00800084 	movi	r2,2
  8076c8:	f800283a 	ret
  8076cc:	00dffc34 	movhi	r3,32752
  8076d0:	019ff834 	movhi	r6,32736
  8076d4:	28cb883a 	add	r5,r5,r3
  8076d8:	31bfffc4 	addi	r6,r6,-1
  8076dc:	317ff62e 	bgeu	r6,r5,8076b8 <__alt_data_end+0xff8076b8>
  8076e0:	01400434 	movhi	r5,16
  8076e4:	297fffc4 	addi	r5,r5,-1
  8076e8:	28800236 	bltu	r5,r2,8076f4 <__fpclassifyd+0x60>
  8076ec:	008000c4 	movi	r2,3
  8076f0:	f800283a 	ret
  8076f4:	10c00226 	beq	r2,r3,807700 <__fpclassifyd+0x6c>
  8076f8:	0005883a 	mov	r2,zero
  8076fc:	f800283a 	ret
  807700:	2005003a 	cmpeq	r2,r4,zero
  807704:	f800283a 	ret

00807708 <_sbrk_r>:
  807708:	defffd04 	addi	sp,sp,-12
  80770c:	dc000015 	stw	r16,0(sp)
  807710:	04002074 	movhi	r16,129
  807714:	dc400115 	stw	r17,4(sp)
  807718:	840af704 	addi	r16,r16,11228
  80771c:	2023883a 	mov	r17,r4
  807720:	2809883a 	mov	r4,r5
  807724:	dfc00215 	stw	ra,8(sp)
  807728:	80000015 	stw	zero,0(r16)
  80772c:	080d31c0 	call	80d31c <sbrk>
  807730:	00ffffc4 	movi	r3,-1
  807734:	10c00526 	beq	r2,r3,80774c <_sbrk_r+0x44>
  807738:	dfc00217 	ldw	ra,8(sp)
  80773c:	dc400117 	ldw	r17,4(sp)
  807740:	dc000017 	ldw	r16,0(sp)
  807744:	dec00304 	addi	sp,sp,12
  807748:	f800283a 	ret
  80774c:	80c00017 	ldw	r3,0(r16)
  807750:	183ff926 	beq	r3,zero,807738 <__alt_data_end+0xff807738>
  807754:	88c00015 	stw	r3,0(r17)
  807758:	003ff706 	br	807738 <__alt_data_end+0xff807738>

0080775c <__sread>:
  80775c:	defffe04 	addi	sp,sp,-8
  807760:	dc000015 	stw	r16,0(sp)
  807764:	2821883a 	mov	r16,r5
  807768:	2940038f 	ldh	r5,14(r5)
  80776c:	dfc00115 	stw	ra,4(sp)
  807770:	08095500 	call	809550 <_read_r>
  807774:	10000716 	blt	r2,zero,807794 <__sread+0x38>
  807778:	80c01417 	ldw	r3,80(r16)
  80777c:	1887883a 	add	r3,r3,r2
  807780:	80c01415 	stw	r3,80(r16)
  807784:	dfc00117 	ldw	ra,4(sp)
  807788:	dc000017 	ldw	r16,0(sp)
  80778c:	dec00204 	addi	sp,sp,8
  807790:	f800283a 	ret
  807794:	80c0030b 	ldhu	r3,12(r16)
  807798:	18fbffcc 	andi	r3,r3,61439
  80779c:	80c0030d 	sth	r3,12(r16)
  8077a0:	dfc00117 	ldw	ra,4(sp)
  8077a4:	dc000017 	ldw	r16,0(sp)
  8077a8:	dec00204 	addi	sp,sp,8
  8077ac:	f800283a 	ret

008077b0 <__seofread>:
  8077b0:	0005883a 	mov	r2,zero
  8077b4:	f800283a 	ret

008077b8 <__swrite>:
  8077b8:	2880030b 	ldhu	r2,12(r5)
  8077bc:	defffb04 	addi	sp,sp,-20
  8077c0:	dcc00315 	stw	r19,12(sp)
  8077c4:	dc800215 	stw	r18,8(sp)
  8077c8:	dc400115 	stw	r17,4(sp)
  8077cc:	dc000015 	stw	r16,0(sp)
  8077d0:	dfc00415 	stw	ra,16(sp)
  8077d4:	10c0400c 	andi	r3,r2,256
  8077d8:	2821883a 	mov	r16,r5
  8077dc:	2023883a 	mov	r17,r4
  8077e0:	3025883a 	mov	r18,r6
  8077e4:	3827883a 	mov	r19,r7
  8077e8:	18000526 	beq	r3,zero,807800 <__swrite+0x48>
  8077ec:	2940038f 	ldh	r5,14(r5)
  8077f0:	01c00084 	movi	r7,2
  8077f4:	000d883a 	mov	r6,zero
  8077f8:	08094f00 	call	8094f0 <_lseek_r>
  8077fc:	8080030b 	ldhu	r2,12(r16)
  807800:	8140038f 	ldh	r5,14(r16)
  807804:	10bbffcc 	andi	r2,r2,61439
  807808:	980f883a 	mov	r7,r19
  80780c:	900d883a 	mov	r6,r18
  807810:	8809883a 	mov	r4,r17
  807814:	8080030d 	sth	r2,12(r16)
  807818:	dfc00417 	ldw	ra,16(sp)
  80781c:	dcc00317 	ldw	r19,12(sp)
  807820:	dc800217 	ldw	r18,8(sp)
  807824:	dc400117 	ldw	r17,4(sp)
  807828:	dc000017 	ldw	r16,0(sp)
  80782c:	dec00504 	addi	sp,sp,20
  807830:	0808fbc1 	jmpi	808fbc <_write_r>

00807834 <__sseek>:
  807834:	defffe04 	addi	sp,sp,-8
  807838:	dc000015 	stw	r16,0(sp)
  80783c:	2821883a 	mov	r16,r5
  807840:	2940038f 	ldh	r5,14(r5)
  807844:	dfc00115 	stw	ra,4(sp)
  807848:	08094f00 	call	8094f0 <_lseek_r>
  80784c:	00ffffc4 	movi	r3,-1
  807850:	10c00826 	beq	r2,r3,807874 <__sseek+0x40>
  807854:	80c0030b 	ldhu	r3,12(r16)
  807858:	80801415 	stw	r2,80(r16)
  80785c:	18c40014 	ori	r3,r3,4096
  807860:	80c0030d 	sth	r3,12(r16)
  807864:	dfc00117 	ldw	ra,4(sp)
  807868:	dc000017 	ldw	r16,0(sp)
  80786c:	dec00204 	addi	sp,sp,8
  807870:	f800283a 	ret
  807874:	80c0030b 	ldhu	r3,12(r16)
  807878:	18fbffcc 	andi	r3,r3,61439
  80787c:	80c0030d 	sth	r3,12(r16)
  807880:	dfc00117 	ldw	ra,4(sp)
  807884:	dc000017 	ldw	r16,0(sp)
  807888:	dec00204 	addi	sp,sp,8
  80788c:	f800283a 	ret

00807890 <__sclose>:
  807890:	2940038f 	ldh	r5,14(r5)
  807894:	080901c1 	jmpi	80901c <_close_r>

00807898 <strcmp>:
  807898:	2144b03a 	or	r2,r4,r5
  80789c:	108000cc 	andi	r2,r2,3
  8078a0:	1000171e 	bne	r2,zero,807900 <strcmp+0x68>
  8078a4:	20800017 	ldw	r2,0(r4)
  8078a8:	28c00017 	ldw	r3,0(r5)
  8078ac:	10c0141e 	bne	r2,r3,807900 <strcmp+0x68>
  8078b0:	027fbff4 	movhi	r9,65279
  8078b4:	4a7fbfc4 	addi	r9,r9,-257
  8078b8:	0086303a 	nor	r3,zero,r2
  8078bc:	02202074 	movhi	r8,32897
  8078c0:	1245883a 	add	r2,r2,r9
  8078c4:	42202004 	addi	r8,r8,-32640
  8078c8:	10c4703a 	and	r2,r2,r3
  8078cc:	1204703a 	and	r2,r2,r8
  8078d0:	10000226 	beq	r2,zero,8078dc <strcmp+0x44>
  8078d4:	00002306 	br	807964 <strcmp+0xcc>
  8078d8:	1000221e 	bne	r2,zero,807964 <strcmp+0xcc>
  8078dc:	21000104 	addi	r4,r4,4
  8078e0:	20c00017 	ldw	r3,0(r4)
  8078e4:	29400104 	addi	r5,r5,4
  8078e8:	29800017 	ldw	r6,0(r5)
  8078ec:	1a4f883a 	add	r7,r3,r9
  8078f0:	00c4303a 	nor	r2,zero,r3
  8078f4:	3884703a 	and	r2,r7,r2
  8078f8:	1204703a 	and	r2,r2,r8
  8078fc:	19bff626 	beq	r3,r6,8078d8 <__alt_data_end+0xff8078d8>
  807900:	20800003 	ldbu	r2,0(r4)
  807904:	10c03fcc 	andi	r3,r2,255
  807908:	18c0201c 	xori	r3,r3,128
  80790c:	18ffe004 	addi	r3,r3,-128
  807910:	18000c26 	beq	r3,zero,807944 <strcmp+0xac>
  807914:	29800007 	ldb	r6,0(r5)
  807918:	19800326 	beq	r3,r6,807928 <strcmp+0x90>
  80791c:	00001306 	br	80796c <strcmp+0xd4>
  807920:	29800007 	ldb	r6,0(r5)
  807924:	11800b1e 	bne	r2,r6,807954 <strcmp+0xbc>
  807928:	21000044 	addi	r4,r4,1
  80792c:	20c00003 	ldbu	r3,0(r4)
  807930:	29400044 	addi	r5,r5,1
  807934:	18803fcc 	andi	r2,r3,255
  807938:	1080201c 	xori	r2,r2,128
  80793c:	10bfe004 	addi	r2,r2,-128
  807940:	103ff71e 	bne	r2,zero,807920 <__alt_data_end+0xff807920>
  807944:	0007883a 	mov	r3,zero
  807948:	28800003 	ldbu	r2,0(r5)
  80794c:	1885c83a 	sub	r2,r3,r2
  807950:	f800283a 	ret
  807954:	28800003 	ldbu	r2,0(r5)
  807958:	18c03fcc 	andi	r3,r3,255
  80795c:	1885c83a 	sub	r2,r3,r2
  807960:	f800283a 	ret
  807964:	0005883a 	mov	r2,zero
  807968:	f800283a 	ret
  80796c:	10c03fcc 	andi	r3,r2,255
  807970:	003ff506 	br	807948 <__alt_data_end+0xff807948>

00807974 <__sprint_r.part.0>:
  807974:	28801917 	ldw	r2,100(r5)
  807978:	defff604 	addi	sp,sp,-40
  80797c:	dd400515 	stw	r21,20(sp)
  807980:	dfc00915 	stw	ra,36(sp)
  807984:	df000815 	stw	fp,32(sp)
  807988:	ddc00715 	stw	r23,28(sp)
  80798c:	dd800615 	stw	r22,24(sp)
  807990:	dd000415 	stw	r20,16(sp)
  807994:	dcc00315 	stw	r19,12(sp)
  807998:	dc800215 	stw	r18,8(sp)
  80799c:	dc400115 	stw	r17,4(sp)
  8079a0:	dc000015 	stw	r16,0(sp)
  8079a4:	1088000c 	andi	r2,r2,8192
  8079a8:	302b883a 	mov	r21,r6
  8079ac:	10002e26 	beq	r2,zero,807a68 <__sprint_r.part.0+0xf4>
  8079b0:	30800217 	ldw	r2,8(r6)
  8079b4:	35800017 	ldw	r22,0(r6)
  8079b8:	10002926 	beq	r2,zero,807a60 <__sprint_r.part.0+0xec>
  8079bc:	2827883a 	mov	r19,r5
  8079c0:	2029883a 	mov	r20,r4
  8079c4:	b5c00104 	addi	r23,r22,4
  8079c8:	04bfffc4 	movi	r18,-1
  8079cc:	bc400017 	ldw	r17,0(r23)
  8079d0:	b4000017 	ldw	r16,0(r22)
  8079d4:	0039883a 	mov	fp,zero
  8079d8:	8822d0ba 	srli	r17,r17,2
  8079dc:	8800031e 	bne	r17,zero,8079ec <__sprint_r.part.0+0x78>
  8079e0:	00001806 	br	807a44 <__sprint_r.part.0+0xd0>
  8079e4:	84000104 	addi	r16,r16,4
  8079e8:	8f001526 	beq	r17,fp,807a40 <__sprint_r.part.0+0xcc>
  8079ec:	81400017 	ldw	r5,0(r16)
  8079f0:	980d883a 	mov	r6,r19
  8079f4:	a009883a 	mov	r4,r20
  8079f8:	080939c0 	call	80939c <_fputwc_r>
  8079fc:	e7000044 	addi	fp,fp,1
  807a00:	14bff81e 	bne	r2,r18,8079e4 <__alt_data_end+0xff8079e4>
  807a04:	9005883a 	mov	r2,r18
  807a08:	a8000215 	stw	zero,8(r21)
  807a0c:	a8000115 	stw	zero,4(r21)
  807a10:	dfc00917 	ldw	ra,36(sp)
  807a14:	df000817 	ldw	fp,32(sp)
  807a18:	ddc00717 	ldw	r23,28(sp)
  807a1c:	dd800617 	ldw	r22,24(sp)
  807a20:	dd400517 	ldw	r21,20(sp)
  807a24:	dd000417 	ldw	r20,16(sp)
  807a28:	dcc00317 	ldw	r19,12(sp)
  807a2c:	dc800217 	ldw	r18,8(sp)
  807a30:	dc400117 	ldw	r17,4(sp)
  807a34:	dc000017 	ldw	r16,0(sp)
  807a38:	dec00a04 	addi	sp,sp,40
  807a3c:	f800283a 	ret
  807a40:	a8800217 	ldw	r2,8(r21)
  807a44:	8c63883a 	add	r17,r17,r17
  807a48:	8c63883a 	add	r17,r17,r17
  807a4c:	1445c83a 	sub	r2,r2,r17
  807a50:	a8800215 	stw	r2,8(r21)
  807a54:	b5800204 	addi	r22,r22,8
  807a58:	bdc00204 	addi	r23,r23,8
  807a5c:	103fdb1e 	bne	r2,zero,8079cc <__alt_data_end+0xff8079cc>
  807a60:	0005883a 	mov	r2,zero
  807a64:	003fe806 	br	807a08 <__alt_data_end+0xff807a08>
  807a68:	0804b9c0 	call	804b9c <__sfvwrite_r>
  807a6c:	003fe606 	br	807a08 <__alt_data_end+0xff807a08>

00807a70 <__sprint_r>:
  807a70:	30c00217 	ldw	r3,8(r6)
  807a74:	18000126 	beq	r3,zero,807a7c <__sprint_r+0xc>
  807a78:	08079741 	jmpi	807974 <__sprint_r.part.0>
  807a7c:	30000115 	stw	zero,4(r6)
  807a80:	0005883a 	mov	r2,zero
  807a84:	f800283a 	ret

00807a88 <___vfiprintf_internal_r>:
  807a88:	deffc904 	addi	sp,sp,-220
  807a8c:	df003515 	stw	fp,212(sp)
  807a90:	dd003115 	stw	r20,196(sp)
  807a94:	dfc03615 	stw	ra,216(sp)
  807a98:	ddc03415 	stw	r23,208(sp)
  807a9c:	dd803315 	stw	r22,204(sp)
  807aa0:	dd403215 	stw	r21,200(sp)
  807aa4:	dcc03015 	stw	r19,192(sp)
  807aa8:	dc802f15 	stw	r18,188(sp)
  807aac:	dc402e15 	stw	r17,184(sp)
  807ab0:	dc002d15 	stw	r16,180(sp)
  807ab4:	d9002015 	stw	r4,128(sp)
  807ab8:	d9c02215 	stw	r7,136(sp)
  807abc:	2829883a 	mov	r20,r5
  807ac0:	3039883a 	mov	fp,r6
  807ac4:	20000226 	beq	r4,zero,807ad0 <___vfiprintf_internal_r+0x48>
  807ac8:	20800e17 	ldw	r2,56(r4)
  807acc:	1000cf26 	beq	r2,zero,807e0c <___vfiprintf_internal_r+0x384>
  807ad0:	a080030b 	ldhu	r2,12(r20)
  807ad4:	10c8000c 	andi	r3,r2,8192
  807ad8:	1800061e 	bne	r3,zero,807af4 <___vfiprintf_internal_r+0x6c>
  807adc:	a1001917 	ldw	r4,100(r20)
  807ae0:	00f7ffc4 	movi	r3,-8193
  807ae4:	10880014 	ori	r2,r2,8192
  807ae8:	20c6703a 	and	r3,r4,r3
  807aec:	a080030d 	sth	r2,12(r20)
  807af0:	a0c01915 	stw	r3,100(r20)
  807af4:	10c0020c 	andi	r3,r2,8
  807af8:	1800a926 	beq	r3,zero,807da0 <___vfiprintf_internal_r+0x318>
  807afc:	a0c00417 	ldw	r3,16(r20)
  807b00:	1800a726 	beq	r3,zero,807da0 <___vfiprintf_internal_r+0x318>
  807b04:	1080068c 	andi	r2,r2,26
  807b08:	00c00284 	movi	r3,10
  807b0c:	10c0ac26 	beq	r2,r3,807dc0 <___vfiprintf_internal_r+0x338>
  807b10:	da801a04 	addi	r10,sp,104
  807b14:	da801e15 	stw	r10,120(sp)
  807b18:	d8801e17 	ldw	r2,120(sp)
  807b1c:	da8019c4 	addi	r10,sp,103
  807b20:	05802074 	movhi	r22,129
  807b24:	05c02074 	movhi	r23,129
  807b28:	da801f15 	stw	r10,124(sp)
  807b2c:	1295c83a 	sub	r10,r2,r10
  807b30:	b5bd2c04 	addi	r22,r22,-2896
  807b34:	bdfd2804 	addi	r23,r23,-2912
  807b38:	dec01a15 	stw	sp,104(sp)
  807b3c:	d8001c15 	stw	zero,112(sp)
  807b40:	d8001b15 	stw	zero,108(sp)
  807b44:	d8002615 	stw	zero,152(sp)
  807b48:	d8002315 	stw	zero,140(sp)
  807b4c:	da802715 	stw	r10,156(sp)
  807b50:	d811883a 	mov	r8,sp
  807b54:	dd002115 	stw	r20,132(sp)
  807b58:	e021883a 	mov	r16,fp
  807b5c:	80800007 	ldb	r2,0(r16)
  807b60:	1003ea26 	beq	r2,zero,808b0c <___vfiprintf_internal_r+0x1084>
  807b64:	00c00944 	movi	r3,37
  807b68:	8025883a 	mov	r18,r16
  807b6c:	10c0021e 	bne	r2,r3,807b78 <___vfiprintf_internal_r+0xf0>
  807b70:	00001606 	br	807bcc <___vfiprintf_internal_r+0x144>
  807b74:	10c00326 	beq	r2,r3,807b84 <___vfiprintf_internal_r+0xfc>
  807b78:	94800044 	addi	r18,r18,1
  807b7c:	90800007 	ldb	r2,0(r18)
  807b80:	103ffc1e 	bne	r2,zero,807b74 <__alt_data_end+0xff807b74>
  807b84:	9423c83a 	sub	r17,r18,r16
  807b88:	88001026 	beq	r17,zero,807bcc <___vfiprintf_internal_r+0x144>
  807b8c:	d8c01c17 	ldw	r3,112(sp)
  807b90:	d8801b17 	ldw	r2,108(sp)
  807b94:	44000015 	stw	r16,0(r8)
  807b98:	88c7883a 	add	r3,r17,r3
  807b9c:	10800044 	addi	r2,r2,1
  807ba0:	44400115 	stw	r17,4(r8)
  807ba4:	d8c01c15 	stw	r3,112(sp)
  807ba8:	d8801b15 	stw	r2,108(sp)
  807bac:	010001c4 	movi	r4,7
  807bb0:	2080760e 	bge	r4,r2,807d8c <___vfiprintf_internal_r+0x304>
  807bb4:	1803821e 	bne	r3,zero,8089c0 <___vfiprintf_internal_r+0xf38>
  807bb8:	da802317 	ldw	r10,140(sp)
  807bbc:	d8001b15 	stw	zero,108(sp)
  807bc0:	d811883a 	mov	r8,sp
  807bc4:	5455883a 	add	r10,r10,r17
  807bc8:	da802315 	stw	r10,140(sp)
  807bcc:	90800007 	ldb	r2,0(r18)
  807bd0:	10044626 	beq	r2,zero,808cec <___vfiprintf_internal_r+0x1264>
  807bd4:	90c00047 	ldb	r3,1(r18)
  807bd8:	94000044 	addi	r16,r18,1
  807bdc:	d8001d85 	stb	zero,118(sp)
  807be0:	0009883a 	mov	r4,zero
  807be4:	000f883a 	mov	r7,zero
  807be8:	027fffc4 	movi	r9,-1
  807bec:	0023883a 	mov	r17,zero
  807bf0:	0029883a 	mov	r20,zero
  807bf4:	01401604 	movi	r5,88
  807bf8:	01800244 	movi	r6,9
  807bfc:	03400a84 	movi	r13,42
  807c00:	03001b04 	movi	r12,108
  807c04:	84000044 	addi	r16,r16,1
  807c08:	18bff804 	addi	r2,r3,-32
  807c0c:	28827336 	bltu	r5,r2,8085dc <___vfiprintf_internal_r+0xb54>
  807c10:	100490ba 	slli	r2,r2,2
  807c14:	02802034 	movhi	r10,128
  807c18:	529f0a04 	addi	r10,r10,31784
  807c1c:	1285883a 	add	r2,r2,r10
  807c20:	10800017 	ldw	r2,0(r2)
  807c24:	1000683a 	jmp	r2
  807c28:	00808310 	cmplti	r2,zero,524
  807c2c:	008085dc 	xori	r2,zero,535
  807c30:	008085dc 	xori	r2,zero,535
  807c34:	00808330 	cmpltui	r2,zero,524
  807c38:	008085dc 	xori	r2,zero,535
  807c3c:	008085dc 	xori	r2,zero,535
  807c40:	008085dc 	xori	r2,zero,535
  807c44:	008085dc 	xori	r2,zero,535
  807c48:	008085dc 	xori	r2,zero,535
  807c4c:	008085dc 	xori	r2,zero,535
  807c50:	00808518 	cmpnei	r2,zero,532
  807c54:	00808534 	movhi	r2,532
  807c58:	008085dc 	xori	r2,zero,535
  807c5c:	00807e1c 	xori	r2,zero,504
  807c60:	00808544 	movi	r2,533
  807c64:	008085dc 	xori	r2,zero,535
  807c68:	0080833c 	xorhi	r2,zero,524
  807c6c:	00808348 	cmpgei	r2,zero,525
  807c70:	00808348 	cmpgei	r2,zero,525
  807c74:	00808348 	cmpgei	r2,zero,525
  807c78:	00808348 	cmpgei	r2,zero,525
  807c7c:	00808348 	cmpgei	r2,zero,525
  807c80:	00808348 	cmpgei	r2,zero,525
  807c84:	00808348 	cmpgei	r2,zero,525
  807c88:	00808348 	cmpgei	r2,zero,525
  807c8c:	00808348 	cmpgei	r2,zero,525
  807c90:	008085dc 	xori	r2,zero,535
  807c94:	008085dc 	xori	r2,zero,535
  807c98:	008085dc 	xori	r2,zero,535
  807c9c:	008085dc 	xori	r2,zero,535
  807ca0:	008085dc 	xori	r2,zero,535
  807ca4:	008085dc 	xori	r2,zero,535
  807ca8:	008085dc 	xori	r2,zero,535
  807cac:	008085dc 	xori	r2,zero,535
  807cb0:	008085dc 	xori	r2,zero,535
  807cb4:	008085dc 	xori	r2,zero,535
  807cb8:	00808374 	movhi	r2,525
  807cbc:	008085dc 	xori	r2,zero,535
  807cc0:	008085dc 	xori	r2,zero,535
  807cc4:	008085dc 	xori	r2,zero,535
  807cc8:	008085dc 	xori	r2,zero,535
  807ccc:	008085dc 	xori	r2,zero,535
  807cd0:	008085dc 	xori	r2,zero,535
  807cd4:	008085dc 	xori	r2,zero,535
  807cd8:	008085dc 	xori	r2,zero,535
  807cdc:	008085dc 	xori	r2,zero,535
  807ce0:	008085dc 	xori	r2,zero,535
  807ce4:	008083ac 	andhi	r2,zero,526
  807ce8:	008085dc 	xori	r2,zero,535
  807cec:	008085dc 	xori	r2,zero,535
  807cf0:	008085dc 	xori	r2,zero,535
  807cf4:	008085dc 	xori	r2,zero,535
  807cf8:	008085dc 	xori	r2,zero,535
  807cfc:	00808404 	movi	r2,528
  807d00:	008085dc 	xori	r2,zero,535
  807d04:	008085dc 	xori	r2,zero,535
  807d08:	00808474 	movhi	r2,529
  807d0c:	008085dc 	xori	r2,zero,535
  807d10:	008085dc 	xori	r2,zero,535
  807d14:	008085dc 	xori	r2,zero,535
  807d18:	008085dc 	xori	r2,zero,535
  807d1c:	008085dc 	xori	r2,zero,535
  807d20:	008085dc 	xori	r2,zero,535
  807d24:	008085dc 	xori	r2,zero,535
  807d28:	008085dc 	xori	r2,zero,535
  807d2c:	008085dc 	xori	r2,zero,535
  807d30:	008085dc 	xori	r2,zero,535
  807d34:	00808220 	cmpeqi	r2,zero,520
  807d38:	0080824c 	andi	r2,zero,521
  807d3c:	008085dc 	xori	r2,zero,535
  807d40:	008085dc 	xori	r2,zero,535
  807d44:	008085dc 	xori	r2,zero,535
  807d48:	00808584 	movi	r2,534
  807d4c:	0080824c 	andi	r2,zero,521
  807d50:	008085dc 	xori	r2,zero,535
  807d54:	008085dc 	xori	r2,zero,535
  807d58:	008080e0 	cmpeqi	r2,zero,515
  807d5c:	008085dc 	xori	r2,zero,535
  807d60:	008080f0 	cmpltui	r2,zero,515
  807d64:	0080812c 	andhi	r2,zero,516
  807d68:	00807e28 	cmpgeui	r2,zero,504
  807d6c:	008080d4 	movui	r2,515
  807d70:	008085dc 	xori	r2,zero,535
  807d74:	008084b0 	cmpltui	r2,zero,530
  807d78:	008085dc 	xori	r2,zero,535
  807d7c:	00808508 	cmpgei	r2,zero,532
  807d80:	008085dc 	xori	r2,zero,535
  807d84:	008085dc 	xori	r2,zero,535
  807d88:	008081cc 	andi	r2,zero,519
  807d8c:	42000204 	addi	r8,r8,8
  807d90:	da802317 	ldw	r10,140(sp)
  807d94:	5455883a 	add	r10,r10,r17
  807d98:	da802315 	stw	r10,140(sp)
  807d9c:	003f8b06 	br	807bcc <__alt_data_end+0xff807bcc>
  807da0:	d9002017 	ldw	r4,128(sp)
  807da4:	a00b883a 	mov	r5,r20
  807da8:	08027440 	call	802744 <__swsetup_r>
  807dac:	1003b11e 	bne	r2,zero,808c74 <___vfiprintf_internal_r+0x11ec>
  807db0:	a080030b 	ldhu	r2,12(r20)
  807db4:	00c00284 	movi	r3,10
  807db8:	1080068c 	andi	r2,r2,26
  807dbc:	10ff541e 	bne	r2,r3,807b10 <__alt_data_end+0xff807b10>
  807dc0:	a080038f 	ldh	r2,14(r20)
  807dc4:	103f5216 	blt	r2,zero,807b10 <__alt_data_end+0xff807b10>
  807dc8:	d9c02217 	ldw	r7,136(sp)
  807dcc:	d9002017 	ldw	r4,128(sp)
  807dd0:	e00d883a 	mov	r6,fp
  807dd4:	a00b883a 	mov	r5,r20
  807dd8:	0808f000 	call	808f00 <__sbprintf>
  807ddc:	dfc03617 	ldw	ra,216(sp)
  807de0:	df003517 	ldw	fp,212(sp)
  807de4:	ddc03417 	ldw	r23,208(sp)
  807de8:	dd803317 	ldw	r22,204(sp)
  807dec:	dd403217 	ldw	r21,200(sp)
  807df0:	dd003117 	ldw	r20,196(sp)
  807df4:	dcc03017 	ldw	r19,192(sp)
  807df8:	dc802f17 	ldw	r18,188(sp)
  807dfc:	dc402e17 	ldw	r17,184(sp)
  807e00:	dc002d17 	ldw	r16,180(sp)
  807e04:	dec03704 	addi	sp,sp,220
  807e08:	f800283a 	ret
  807e0c:	08047180 	call	804718 <__sinit>
  807e10:	003f2f06 	br	807ad0 <__alt_data_end+0xff807ad0>
  807e14:	0463c83a 	sub	r17,zero,r17
  807e18:	d8802215 	stw	r2,136(sp)
  807e1c:	a5000114 	ori	r20,r20,4
  807e20:	80c00007 	ldb	r3,0(r16)
  807e24:	003f7706 	br	807c04 <__alt_data_end+0xff807c04>
  807e28:	00800c04 	movi	r2,48
  807e2c:	da802217 	ldw	r10,136(sp)
  807e30:	d8801d05 	stb	r2,116(sp)
  807e34:	00801e04 	movi	r2,120
  807e38:	d8801d45 	stb	r2,117(sp)
  807e3c:	d8001d85 	stb	zero,118(sp)
  807e40:	50c00104 	addi	r3,r10,4
  807e44:	54800017 	ldw	r18,0(r10)
  807e48:	0027883a 	mov	r19,zero
  807e4c:	a0800094 	ori	r2,r20,2
  807e50:	48030b16 	blt	r9,zero,808a80 <___vfiprintf_internal_r+0xff8>
  807e54:	00bfdfc4 	movi	r2,-129
  807e58:	a096703a 	and	r11,r20,r2
  807e5c:	d8c02215 	stw	r3,136(sp)
  807e60:	5d000094 	ori	r20,r11,2
  807e64:	90032b1e 	bne	r18,zero,808b14 <___vfiprintf_internal_r+0x108c>
  807e68:	00802074 	movhi	r2,129
  807e6c:	10bcc704 	addi	r2,r2,-3300
  807e70:	d8802615 	stw	r2,152(sp)
  807e74:	0039883a 	mov	fp,zero
  807e78:	48017b1e 	bne	r9,zero,808468 <___vfiprintf_internal_r+0x9e0>
  807e7c:	0013883a 	mov	r9,zero
  807e80:	0027883a 	mov	r19,zero
  807e84:	dd401a04 	addi	r21,sp,104
  807e88:	4825883a 	mov	r18,r9
  807e8c:	4cc0010e 	bge	r9,r19,807e94 <___vfiprintf_internal_r+0x40c>
  807e90:	9825883a 	mov	r18,r19
  807e94:	e7003fcc 	andi	fp,fp,255
  807e98:	e700201c 	xori	fp,fp,128
  807e9c:	e73fe004 	addi	fp,fp,-128
  807ea0:	e0000126 	beq	fp,zero,807ea8 <___vfiprintf_internal_r+0x420>
  807ea4:	94800044 	addi	r18,r18,1
  807ea8:	a380008c 	andi	r14,r20,2
  807eac:	70000126 	beq	r14,zero,807eb4 <___vfiprintf_internal_r+0x42c>
  807eb0:	94800084 	addi	r18,r18,2
  807eb4:	a700210c 	andi	fp,r20,132
  807eb8:	e001df1e 	bne	fp,zero,808638 <___vfiprintf_internal_r+0xbb0>
  807ebc:	8c87c83a 	sub	r3,r17,r18
  807ec0:	00c1dd0e 	bge	zero,r3,808638 <___vfiprintf_internal_r+0xbb0>
  807ec4:	01c00404 	movi	r7,16
  807ec8:	d8801c17 	ldw	r2,112(sp)
  807ecc:	38c3ad0e 	bge	r7,r3,808d84 <___vfiprintf_internal_r+0x12fc>
  807ed0:	02802074 	movhi	r10,129
  807ed4:	52bd2c04 	addi	r10,r10,-2896
  807ed8:	dc002915 	stw	r16,164(sp)
  807edc:	d9801b17 	ldw	r6,108(sp)
  807ee0:	da802415 	stw	r10,144(sp)
  807ee4:	03c001c4 	movi	r15,7
  807ee8:	da402515 	stw	r9,148(sp)
  807eec:	db802815 	stw	r14,160(sp)
  807ef0:	1821883a 	mov	r16,r3
  807ef4:	00000506 	br	807f0c <___vfiprintf_internal_r+0x484>
  807ef8:	31400084 	addi	r5,r6,2
  807efc:	42000204 	addi	r8,r8,8
  807f00:	200d883a 	mov	r6,r4
  807f04:	843ffc04 	addi	r16,r16,-16
  807f08:	3c000d0e 	bge	r7,r16,807f40 <___vfiprintf_internal_r+0x4b8>
  807f0c:	10800404 	addi	r2,r2,16
  807f10:	31000044 	addi	r4,r6,1
  807f14:	45800015 	stw	r22,0(r8)
  807f18:	41c00115 	stw	r7,4(r8)
  807f1c:	d8801c15 	stw	r2,112(sp)
  807f20:	d9001b15 	stw	r4,108(sp)
  807f24:	793ff40e 	bge	r15,r4,807ef8 <__alt_data_end+0xff807ef8>
  807f28:	1001b51e 	bne	r2,zero,808600 <___vfiprintf_internal_r+0xb78>
  807f2c:	843ffc04 	addi	r16,r16,-16
  807f30:	000d883a 	mov	r6,zero
  807f34:	01400044 	movi	r5,1
  807f38:	d811883a 	mov	r8,sp
  807f3c:	3c3ff316 	blt	r7,r16,807f0c <__alt_data_end+0xff807f0c>
  807f40:	8007883a 	mov	r3,r16
  807f44:	da402517 	ldw	r9,148(sp)
  807f48:	db802817 	ldw	r14,160(sp)
  807f4c:	dc002917 	ldw	r16,164(sp)
  807f50:	da802417 	ldw	r10,144(sp)
  807f54:	1885883a 	add	r2,r3,r2
  807f58:	40c00115 	stw	r3,4(r8)
  807f5c:	42800015 	stw	r10,0(r8)
  807f60:	d8801c15 	stw	r2,112(sp)
  807f64:	d9401b15 	stw	r5,108(sp)
  807f68:	00c001c4 	movi	r3,7
  807f6c:	19426016 	blt	r3,r5,8088f0 <___vfiprintf_internal_r+0xe68>
  807f70:	d8c01d87 	ldb	r3,118(sp)
  807f74:	42000204 	addi	r8,r8,8
  807f78:	29000044 	addi	r4,r5,1
  807f7c:	1801b31e 	bne	r3,zero,80864c <___vfiprintf_internal_r+0xbc4>
  807f80:	7001c026 	beq	r14,zero,808684 <___vfiprintf_internal_r+0xbfc>
  807f84:	d8c01d04 	addi	r3,sp,116
  807f88:	10800084 	addi	r2,r2,2
  807f8c:	40c00015 	stw	r3,0(r8)
  807f90:	00c00084 	movi	r3,2
  807f94:	40c00115 	stw	r3,4(r8)
  807f98:	d8801c15 	stw	r2,112(sp)
  807f9c:	d9001b15 	stw	r4,108(sp)
  807fa0:	00c001c4 	movi	r3,7
  807fa4:	1902650e 	bge	r3,r4,80893c <___vfiprintf_internal_r+0xeb4>
  807fa8:	10029a1e 	bne	r2,zero,808a14 <___vfiprintf_internal_r+0xf8c>
  807fac:	00c02004 	movi	r3,128
  807fb0:	01000044 	movi	r4,1
  807fb4:	000b883a 	mov	r5,zero
  807fb8:	d811883a 	mov	r8,sp
  807fbc:	e0c1b31e 	bne	fp,r3,80868c <___vfiprintf_internal_r+0xc04>
  807fc0:	8cb9c83a 	sub	fp,r17,r18
  807fc4:	0701b10e 	bge	zero,fp,80868c <___vfiprintf_internal_r+0xc04>
  807fc8:	01c00404 	movi	r7,16
  807fcc:	3f03890e 	bge	r7,fp,808df4 <___vfiprintf_internal_r+0x136c>
  807fd0:	00c02074 	movhi	r3,129
  807fd4:	18fd2804 	addi	r3,r3,-2912
  807fd8:	d8c02415 	stw	r3,144(sp)
  807fdc:	8007883a 	mov	r3,r16
  807fe0:	034001c4 	movi	r13,7
  807fe4:	e021883a 	mov	r16,fp
  807fe8:	da402515 	stw	r9,148(sp)
  807fec:	1839883a 	mov	fp,r3
  807ff0:	00000506 	br	808008 <___vfiprintf_internal_r+0x580>
  807ff4:	29800084 	addi	r6,r5,2
  807ff8:	42000204 	addi	r8,r8,8
  807ffc:	180b883a 	mov	r5,r3
  808000:	843ffc04 	addi	r16,r16,-16
  808004:	3c000d0e 	bge	r7,r16,80803c <___vfiprintf_internal_r+0x5b4>
  808008:	10800404 	addi	r2,r2,16
  80800c:	28c00044 	addi	r3,r5,1
  808010:	45c00015 	stw	r23,0(r8)
  808014:	41c00115 	stw	r7,4(r8)
  808018:	d8801c15 	stw	r2,112(sp)
  80801c:	d8c01b15 	stw	r3,108(sp)
  808020:	68fff40e 	bge	r13,r3,807ff4 <__alt_data_end+0xff807ff4>
  808024:	1002241e 	bne	r2,zero,8088b8 <___vfiprintf_internal_r+0xe30>
  808028:	843ffc04 	addi	r16,r16,-16
  80802c:	01800044 	movi	r6,1
  808030:	000b883a 	mov	r5,zero
  808034:	d811883a 	mov	r8,sp
  808038:	3c3ff316 	blt	r7,r16,808008 <__alt_data_end+0xff808008>
  80803c:	da402517 	ldw	r9,148(sp)
  808040:	e007883a 	mov	r3,fp
  808044:	8039883a 	mov	fp,r16
  808048:	1821883a 	mov	r16,r3
  80804c:	d8c02417 	ldw	r3,144(sp)
  808050:	1705883a 	add	r2,r2,fp
  808054:	47000115 	stw	fp,4(r8)
  808058:	40c00015 	stw	r3,0(r8)
  80805c:	d8801c15 	stw	r2,112(sp)
  808060:	d9801b15 	stw	r6,108(sp)
  808064:	00c001c4 	movi	r3,7
  808068:	19827616 	blt	r3,r6,808a44 <___vfiprintf_internal_r+0xfbc>
  80806c:	4cf9c83a 	sub	fp,r9,r19
  808070:	42000204 	addi	r8,r8,8
  808074:	31000044 	addi	r4,r6,1
  808078:	300b883a 	mov	r5,r6
  80807c:	07018516 	blt	zero,fp,808694 <___vfiprintf_internal_r+0xc0c>
  808080:	9885883a 	add	r2,r19,r2
  808084:	45400015 	stw	r21,0(r8)
  808088:	44c00115 	stw	r19,4(r8)
  80808c:	d8801c15 	stw	r2,112(sp)
  808090:	d9001b15 	stw	r4,108(sp)
  808094:	00c001c4 	movi	r3,7
  808098:	1901dd0e 	bge	r3,r4,808810 <___vfiprintf_internal_r+0xd88>
  80809c:	1002401e 	bne	r2,zero,8089a0 <___vfiprintf_internal_r+0xf18>
  8080a0:	d8001b15 	stw	zero,108(sp)
  8080a4:	a2c0010c 	andi	r11,r20,4
  8080a8:	58000226 	beq	r11,zero,8080b4 <___vfiprintf_internal_r+0x62c>
  8080ac:	8ca7c83a 	sub	r19,r17,r18
  8080b0:	04c2f216 	blt	zero,r19,808c7c <___vfiprintf_internal_r+0x11f4>
  8080b4:	8c80010e 	bge	r17,r18,8080bc <___vfiprintf_internal_r+0x634>
  8080b8:	9023883a 	mov	r17,r18
  8080bc:	da802317 	ldw	r10,140(sp)
  8080c0:	5455883a 	add	r10,r10,r17
  8080c4:	da802315 	stw	r10,140(sp)
  8080c8:	d8001b15 	stw	zero,108(sp)
  8080cc:	d811883a 	mov	r8,sp
  8080d0:	003ea206 	br	807b5c <__alt_data_end+0xff807b5c>
  8080d4:	a5000814 	ori	r20,r20,32
  8080d8:	80c00007 	ldb	r3,0(r16)
  8080dc:	003ec906 	br	807c04 <__alt_data_end+0xff807c04>
  8080e0:	80c00007 	ldb	r3,0(r16)
  8080e4:	1b030926 	beq	r3,r12,808d0c <___vfiprintf_internal_r+0x1284>
  8080e8:	a5000414 	ori	r20,r20,16
  8080ec:	003ec506 	br	807c04 <__alt_data_end+0xff807c04>
  8080f0:	21003fcc 	andi	r4,r4,255
  8080f4:	20035e1e 	bne	r4,zero,808e70 <___vfiprintf_internal_r+0x13e8>
  8080f8:	a080080c 	andi	r2,r20,32
  8080fc:	1002a526 	beq	r2,zero,808b94 <___vfiprintf_internal_r+0x110c>
  808100:	da802217 	ldw	r10,136(sp)
  808104:	50800017 	ldw	r2,0(r10)
  808108:	da802317 	ldw	r10,140(sp)
  80810c:	5007d7fa 	srai	r3,r10,31
  808110:	da802217 	ldw	r10,136(sp)
  808114:	10c00115 	stw	r3,4(r2)
  808118:	52800104 	addi	r10,r10,4
  80811c:	da802215 	stw	r10,136(sp)
  808120:	da802317 	ldw	r10,140(sp)
  808124:	12800015 	stw	r10,0(r2)
  808128:	003e8c06 	br	807b5c <__alt_data_end+0xff807b5c>
  80812c:	21003fcc 	andi	r4,r4,255
  808130:	2003511e 	bne	r4,zero,808e78 <___vfiprintf_internal_r+0x13f0>
  808134:	a080080c 	andi	r2,r20,32
  808138:	1000a126 	beq	r2,zero,8083c0 <___vfiprintf_internal_r+0x938>
  80813c:	da802217 	ldw	r10,136(sp)
  808140:	d8001d85 	stb	zero,118(sp)
  808144:	50800204 	addi	r2,r10,8
  808148:	54800017 	ldw	r18,0(r10)
  80814c:	54c00117 	ldw	r19,4(r10)
  808150:	4802b416 	blt	r9,zero,808c24 <___vfiprintf_internal_r+0x119c>
  808154:	013fdfc4 	movi	r4,-129
  808158:	94c6b03a 	or	r3,r18,r19
  80815c:	d8802215 	stw	r2,136(sp)
  808160:	a128703a 	and	r20,r20,r4
  808164:	1800a226 	beq	r3,zero,8083f0 <___vfiprintf_internal_r+0x968>
  808168:	0039883a 	mov	fp,zero
  80816c:	dd401a04 	addi	r21,sp,104
  808170:	9006d0fa 	srli	r3,r18,3
  808174:	9808977a 	slli	r4,r19,29
  808178:	9826d0fa 	srli	r19,r19,3
  80817c:	948001cc 	andi	r18,r18,7
  808180:	90800c04 	addi	r2,r18,48
  808184:	ad7fffc4 	addi	r21,r21,-1
  808188:	20e4b03a 	or	r18,r4,r3
  80818c:	a8800005 	stb	r2,0(r21)
  808190:	94c6b03a 	or	r3,r18,r19
  808194:	183ff61e 	bne	r3,zero,808170 <__alt_data_end+0xff808170>
  808198:	a0c0004c 	andi	r3,r20,1
  80819c:	18005926 	beq	r3,zero,808304 <___vfiprintf_internal_r+0x87c>
  8081a0:	10803fcc 	andi	r2,r2,255
  8081a4:	1080201c 	xori	r2,r2,128
  8081a8:	10bfe004 	addi	r2,r2,-128
  8081ac:	00c00c04 	movi	r3,48
  8081b0:	10c05426 	beq	r2,r3,808304 <___vfiprintf_internal_r+0x87c>
  8081b4:	da801e17 	ldw	r10,120(sp)
  8081b8:	a8bfffc4 	addi	r2,r21,-1
  8081bc:	a8ffffc5 	stb	r3,-1(r21)
  8081c0:	50a7c83a 	sub	r19,r10,r2
  8081c4:	102b883a 	mov	r21,r2
  8081c8:	003f2f06 	br	807e88 <__alt_data_end+0xff807e88>
  8081cc:	21003fcc 	andi	r4,r4,255
  8081d0:	2003421e 	bne	r4,zero,808edc <___vfiprintf_internal_r+0x1454>
  8081d4:	00802074 	movhi	r2,129
  8081d8:	10bcc704 	addi	r2,r2,-3300
  8081dc:	d8802615 	stw	r2,152(sp)
  8081e0:	a080080c 	andi	r2,r20,32
  8081e4:	1000aa26 	beq	r2,zero,808490 <___vfiprintf_internal_r+0xa08>
  8081e8:	da802217 	ldw	r10,136(sp)
  8081ec:	54800017 	ldw	r18,0(r10)
  8081f0:	54c00117 	ldw	r19,4(r10)
  8081f4:	52800204 	addi	r10,r10,8
  8081f8:	da802215 	stw	r10,136(sp)
  8081fc:	a080004c 	andi	r2,r20,1
  808200:	1001d226 	beq	r2,zero,80894c <___vfiprintf_internal_r+0xec4>
  808204:	94c4b03a 	or	r2,r18,r19
  808208:	1002351e 	bne	r2,zero,808ae0 <___vfiprintf_internal_r+0x1058>
  80820c:	d8001d85 	stb	zero,118(sp)
  808210:	48022216 	blt	r9,zero,808a9c <___vfiprintf_internal_r+0x1014>
  808214:	00bfdfc4 	movi	r2,-129
  808218:	a0a8703a 	and	r20,r20,r2
  80821c:	003f1506 	br	807e74 <__alt_data_end+0xff807e74>
  808220:	da802217 	ldw	r10,136(sp)
  808224:	04800044 	movi	r18,1
  808228:	d8001d85 	stb	zero,118(sp)
  80822c:	50800017 	ldw	r2,0(r10)
  808230:	52800104 	addi	r10,r10,4
  808234:	da802215 	stw	r10,136(sp)
  808238:	d8801005 	stb	r2,64(sp)
  80823c:	9027883a 	mov	r19,r18
  808240:	dd401004 	addi	r21,sp,64
  808244:	0013883a 	mov	r9,zero
  808248:	003f1706 	br	807ea8 <__alt_data_end+0xff807ea8>
  80824c:	21003fcc 	andi	r4,r4,255
  808250:	2003201e 	bne	r4,zero,808ed4 <___vfiprintf_internal_r+0x144c>
  808254:	a080080c 	andi	r2,r20,32
  808258:	10004b26 	beq	r2,zero,808388 <___vfiprintf_internal_r+0x900>
  80825c:	da802217 	ldw	r10,136(sp)
  808260:	50800117 	ldw	r2,4(r10)
  808264:	54800017 	ldw	r18,0(r10)
  808268:	52800204 	addi	r10,r10,8
  80826c:	da802215 	stw	r10,136(sp)
  808270:	1027883a 	mov	r19,r2
  808274:	10022c16 	blt	r2,zero,808b28 <___vfiprintf_internal_r+0x10a0>
  808278:	df001d83 	ldbu	fp,118(sp)
  80827c:	48007216 	blt	r9,zero,808448 <___vfiprintf_internal_r+0x9c0>
  808280:	00ffdfc4 	movi	r3,-129
  808284:	94c4b03a 	or	r2,r18,r19
  808288:	a0e8703a 	and	r20,r20,r3
  80828c:	1000cc26 	beq	r2,zero,8085c0 <___vfiprintf_internal_r+0xb38>
  808290:	98021026 	beq	r19,zero,808ad4 <___vfiprintf_internal_r+0x104c>
  808294:	dc402415 	stw	r17,144(sp)
  808298:	dc002515 	stw	r16,148(sp)
  80829c:	9823883a 	mov	r17,r19
  8082a0:	9021883a 	mov	r16,r18
  8082a4:	dd401a04 	addi	r21,sp,104
  8082a8:	4825883a 	mov	r18,r9
  8082ac:	4027883a 	mov	r19,r8
  8082b0:	8009883a 	mov	r4,r16
  8082b4:	880b883a 	mov	r5,r17
  8082b8:	01800284 	movi	r6,10
  8082bc:	000f883a 	mov	r7,zero
  8082c0:	0809e680 	call	809e68 <__umoddi3>
  8082c4:	10800c04 	addi	r2,r2,48
  8082c8:	ad7fffc4 	addi	r21,r21,-1
  8082cc:	8009883a 	mov	r4,r16
  8082d0:	880b883a 	mov	r5,r17
  8082d4:	a8800005 	stb	r2,0(r21)
  8082d8:	01800284 	movi	r6,10
  8082dc:	000f883a 	mov	r7,zero
  8082e0:	08098f00 	call	8098f0 <__udivdi3>
  8082e4:	1021883a 	mov	r16,r2
  8082e8:	10c4b03a 	or	r2,r2,r3
  8082ec:	1823883a 	mov	r17,r3
  8082f0:	103fef1e 	bne	r2,zero,8082b0 <__alt_data_end+0xff8082b0>
  8082f4:	dc402417 	ldw	r17,144(sp)
  8082f8:	dc002517 	ldw	r16,148(sp)
  8082fc:	9013883a 	mov	r9,r18
  808300:	9811883a 	mov	r8,r19
  808304:	da801e17 	ldw	r10,120(sp)
  808308:	5567c83a 	sub	r19,r10,r21
  80830c:	003ede06 	br	807e88 <__alt_data_end+0xff807e88>
  808310:	38803fcc 	andi	r2,r7,255
  808314:	1080201c 	xori	r2,r2,128
  808318:	10bfe004 	addi	r2,r2,-128
  80831c:	1002371e 	bne	r2,zero,808bfc <___vfiprintf_internal_r+0x1174>
  808320:	01000044 	movi	r4,1
  808324:	01c00804 	movi	r7,32
  808328:	80c00007 	ldb	r3,0(r16)
  80832c:	003e3506 	br	807c04 <__alt_data_end+0xff807c04>
  808330:	a5000054 	ori	r20,r20,1
  808334:	80c00007 	ldb	r3,0(r16)
  808338:	003e3206 	br	807c04 <__alt_data_end+0xff807c04>
  80833c:	a5002014 	ori	r20,r20,128
  808340:	80c00007 	ldb	r3,0(r16)
  808344:	003e2f06 	br	807c04 <__alt_data_end+0xff807c04>
  808348:	8015883a 	mov	r10,r16
  80834c:	0023883a 	mov	r17,zero
  808350:	18bff404 	addi	r2,r3,-48
  808354:	50c00007 	ldb	r3,0(r10)
  808358:	8c4002a4 	muli	r17,r17,10
  80835c:	84000044 	addi	r16,r16,1
  808360:	8015883a 	mov	r10,r16
  808364:	1463883a 	add	r17,r2,r17
  808368:	18bff404 	addi	r2,r3,-48
  80836c:	30bff92e 	bgeu	r6,r2,808354 <__alt_data_end+0xff808354>
  808370:	003e2506 	br	807c08 <__alt_data_end+0xff807c08>
  808374:	21003fcc 	andi	r4,r4,255
  808378:	2002d41e 	bne	r4,zero,808ecc <___vfiprintf_internal_r+0x1444>
  80837c:	a5000414 	ori	r20,r20,16
  808380:	a080080c 	andi	r2,r20,32
  808384:	103fb51e 	bne	r2,zero,80825c <__alt_data_end+0xff80825c>
  808388:	a080040c 	andi	r2,r20,16
  80838c:	1001f826 	beq	r2,zero,808b70 <___vfiprintf_internal_r+0x10e8>
  808390:	da802217 	ldw	r10,136(sp)
  808394:	54800017 	ldw	r18,0(r10)
  808398:	52800104 	addi	r10,r10,4
  80839c:	da802215 	stw	r10,136(sp)
  8083a0:	9027d7fa 	srai	r19,r18,31
  8083a4:	9805883a 	mov	r2,r19
  8083a8:	003fb206 	br	808274 <__alt_data_end+0xff808274>
  8083ac:	21003fcc 	andi	r4,r4,255
  8083b0:	2002c41e 	bne	r4,zero,808ec4 <___vfiprintf_internal_r+0x143c>
  8083b4:	a5000414 	ori	r20,r20,16
  8083b8:	a080080c 	andi	r2,r20,32
  8083bc:	103f5f1e 	bne	r2,zero,80813c <__alt_data_end+0xff80813c>
  8083c0:	a080040c 	andi	r2,r20,16
  8083c4:	10020f26 	beq	r2,zero,808c04 <___vfiprintf_internal_r+0x117c>
  8083c8:	da802217 	ldw	r10,136(sp)
  8083cc:	d8001d85 	stb	zero,118(sp)
  8083d0:	0027883a 	mov	r19,zero
  8083d4:	50800104 	addi	r2,r10,4
  8083d8:	54800017 	ldw	r18,0(r10)
  8083dc:	48021116 	blt	r9,zero,808c24 <___vfiprintf_internal_r+0x119c>
  8083e0:	00ffdfc4 	movi	r3,-129
  8083e4:	d8802215 	stw	r2,136(sp)
  8083e8:	a0e8703a 	and	r20,r20,r3
  8083ec:	903f5e1e 	bne	r18,zero,808168 <__alt_data_end+0xff808168>
  8083f0:	0039883a 	mov	fp,zero
  8083f4:	4802a626 	beq	r9,zero,808e90 <___vfiprintf_internal_r+0x1408>
  8083f8:	0025883a 	mov	r18,zero
  8083fc:	0027883a 	mov	r19,zero
  808400:	003f5a06 	br	80816c <__alt_data_end+0xff80816c>
  808404:	21003fcc 	andi	r4,r4,255
  808408:	20029f1e 	bne	r4,zero,808e88 <___vfiprintf_internal_r+0x1400>
  80840c:	a5000414 	ori	r20,r20,16
  808410:	a080080c 	andi	r2,r20,32
  808414:	10005e1e 	bne	r2,zero,808590 <___vfiprintf_internal_r+0xb08>
  808418:	a080040c 	andi	r2,r20,16
  80841c:	1001a21e 	bne	r2,zero,808aa8 <___vfiprintf_internal_r+0x1020>
  808420:	a080100c 	andi	r2,r20,64
  808424:	d8001d85 	stb	zero,118(sp)
  808428:	da802217 	ldw	r10,136(sp)
  80842c:	1002231e 	bne	r2,zero,808cbc <___vfiprintf_internal_r+0x1234>
  808430:	50800104 	addi	r2,r10,4
  808434:	54800017 	ldw	r18,0(r10)
  808438:	0027883a 	mov	r19,zero
  80843c:	4801a00e 	bge	r9,zero,808ac0 <___vfiprintf_internal_r+0x1038>
  808440:	d8802215 	stw	r2,136(sp)
  808444:	0039883a 	mov	fp,zero
  808448:	94c4b03a 	or	r2,r18,r19
  80844c:	103f901e 	bne	r2,zero,808290 <__alt_data_end+0xff808290>
  808450:	00800044 	movi	r2,1
  808454:	10803fcc 	andi	r2,r2,255
  808458:	00c00044 	movi	r3,1
  80845c:	10c05926 	beq	r2,r3,8085c4 <___vfiprintf_internal_r+0xb3c>
  808460:	00c00084 	movi	r3,2
  808464:	10ffe41e 	bne	r2,r3,8083f8 <__alt_data_end+0xff8083f8>
  808468:	0025883a 	mov	r18,zero
  80846c:	0027883a 	mov	r19,zero
  808470:	00013d06 	br	808968 <___vfiprintf_internal_r+0xee0>
  808474:	21003fcc 	andi	r4,r4,255
  808478:	2002811e 	bne	r4,zero,808e80 <___vfiprintf_internal_r+0x13f8>
  80847c:	00802074 	movhi	r2,129
  808480:	10bcc204 	addi	r2,r2,-3320
  808484:	d8802615 	stw	r2,152(sp)
  808488:	a080080c 	andi	r2,r20,32
  80848c:	103f561e 	bne	r2,zero,8081e8 <__alt_data_end+0xff8081e8>
  808490:	a080040c 	andi	r2,r20,16
  808494:	1001d126 	beq	r2,zero,808bdc <___vfiprintf_internal_r+0x1154>
  808498:	da802217 	ldw	r10,136(sp)
  80849c:	0027883a 	mov	r19,zero
  8084a0:	54800017 	ldw	r18,0(r10)
  8084a4:	52800104 	addi	r10,r10,4
  8084a8:	da802215 	stw	r10,136(sp)
  8084ac:	003f5306 	br	8081fc <__alt_data_end+0xff8081fc>
  8084b0:	da802217 	ldw	r10,136(sp)
  8084b4:	d8001d85 	stb	zero,118(sp)
  8084b8:	55400017 	ldw	r21,0(r10)
  8084bc:	50c00104 	addi	r3,r10,4
  8084c0:	a8024226 	beq	r21,zero,808dcc <___vfiprintf_internal_r+0x1344>
  8084c4:	48021816 	blt	r9,zero,808d28 <___vfiprintf_internal_r+0x12a0>
  8084c8:	480d883a 	mov	r6,r9
  8084cc:	000b883a 	mov	r5,zero
  8084d0:	a809883a 	mov	r4,r21
  8084d4:	d8c02a15 	stw	r3,168(sp)
  8084d8:	da002b15 	stw	r8,172(sp)
  8084dc:	da402c15 	stw	r9,176(sp)
  8084e0:	0805c840 	call	805c84 <memchr>
  8084e4:	d8c02a17 	ldw	r3,168(sp)
  8084e8:	da002b17 	ldw	r8,172(sp)
  8084ec:	da402c17 	ldw	r9,176(sp)
  8084f0:	10024826 	beq	r2,zero,808e14 <___vfiprintf_internal_r+0x138c>
  8084f4:	1567c83a 	sub	r19,r2,r21
  8084f8:	df001d83 	ldbu	fp,118(sp)
  8084fc:	d8c02215 	stw	r3,136(sp)
  808500:	0013883a 	mov	r9,zero
  808504:	003e6006 	br	807e88 <__alt_data_end+0xff807e88>
  808508:	21003fcc 	andi	r4,r4,255
  80850c:	203fc026 	beq	r4,zero,808410 <__alt_data_end+0xff808410>
  808510:	d9c01d85 	stb	r7,118(sp)
  808514:	003fbe06 	br	808410 <__alt_data_end+0xff808410>
  808518:	da802217 	ldw	r10,136(sp)
  80851c:	54400017 	ldw	r17,0(r10)
  808520:	50800104 	addi	r2,r10,4
  808524:	883e3b16 	blt	r17,zero,807e14 <__alt_data_end+0xff807e14>
  808528:	d8802215 	stw	r2,136(sp)
  80852c:	80c00007 	ldb	r3,0(r16)
  808530:	003db406 	br	807c04 <__alt_data_end+0xff807c04>
  808534:	01000044 	movi	r4,1
  808538:	01c00ac4 	movi	r7,43
  80853c:	80c00007 	ldb	r3,0(r16)
  808540:	003db006 	br	807c04 <__alt_data_end+0xff807c04>
  808544:	80c00007 	ldb	r3,0(r16)
  808548:	82800044 	addi	r10,r16,1
  80854c:	1b423c26 	beq	r3,r13,808e40 <___vfiprintf_internal_r+0x13b8>
  808550:	18bff404 	addi	r2,r3,-48
  808554:	0013883a 	mov	r9,zero
  808558:	30822b36 	bltu	r6,r2,808e08 <___vfiprintf_internal_r+0x1380>
  80855c:	50c00007 	ldb	r3,0(r10)
  808560:	4a4002a4 	muli	r9,r9,10
  808564:	54000044 	addi	r16,r10,1
  808568:	8015883a 	mov	r10,r16
  80856c:	4893883a 	add	r9,r9,r2
  808570:	18bff404 	addi	r2,r3,-48
  808574:	30bff92e 	bgeu	r6,r2,80855c <__alt_data_end+0xff80855c>
  808578:	483da30e 	bge	r9,zero,807c08 <__alt_data_end+0xff807c08>
  80857c:	027fffc4 	movi	r9,-1
  808580:	003da106 	br	807c08 <__alt_data_end+0xff807c08>
  808584:	a5001014 	ori	r20,r20,64
  808588:	80c00007 	ldb	r3,0(r16)
  80858c:	003d9d06 	br	807c04 <__alt_data_end+0xff807c04>
  808590:	da802217 	ldw	r10,136(sp)
  808594:	d8001d85 	stb	zero,118(sp)
  808598:	50c00204 	addi	r3,r10,8
  80859c:	54800017 	ldw	r18,0(r10)
  8085a0:	54c00117 	ldw	r19,4(r10)
  8085a4:	4801ca16 	blt	r9,zero,808cd0 <___vfiprintf_internal_r+0x1248>
  8085a8:	013fdfc4 	movi	r4,-129
  8085ac:	94c4b03a 	or	r2,r18,r19
  8085b0:	d8c02215 	stw	r3,136(sp)
  8085b4:	a128703a 	and	r20,r20,r4
  8085b8:	0039883a 	mov	fp,zero
  8085bc:	103f341e 	bne	r2,zero,808290 <__alt_data_end+0xff808290>
  8085c0:	483e2e26 	beq	r9,zero,807e7c <__alt_data_end+0xff807e7c>
  8085c4:	0025883a 	mov	r18,zero
  8085c8:	94800c04 	addi	r18,r18,48
  8085cc:	dc8019c5 	stb	r18,103(sp)
  8085d0:	dcc02717 	ldw	r19,156(sp)
  8085d4:	dd4019c4 	addi	r21,sp,103
  8085d8:	003e2b06 	br	807e88 <__alt_data_end+0xff807e88>
  8085dc:	21003fcc 	andi	r4,r4,255
  8085e0:	2002361e 	bne	r4,zero,808ebc <___vfiprintf_internal_r+0x1434>
  8085e4:	1801c126 	beq	r3,zero,808cec <___vfiprintf_internal_r+0x1264>
  8085e8:	04800044 	movi	r18,1
  8085ec:	d8c01005 	stb	r3,64(sp)
  8085f0:	d8001d85 	stb	zero,118(sp)
  8085f4:	9027883a 	mov	r19,r18
  8085f8:	dd401004 	addi	r21,sp,64
  8085fc:	003f1106 	br	808244 <__alt_data_end+0xff808244>
  808600:	d9402117 	ldw	r5,132(sp)
  808604:	d9002017 	ldw	r4,128(sp)
  808608:	d9801a04 	addi	r6,sp,104
  80860c:	d9c02b15 	stw	r7,172(sp)
  808610:	dbc02a15 	stw	r15,168(sp)
  808614:	08079740 	call	807974 <__sprint_r.part.0>
  808618:	d9c02b17 	ldw	r7,172(sp)
  80861c:	dbc02a17 	ldw	r15,168(sp)
  808620:	10006d1e 	bne	r2,zero,8087d8 <___vfiprintf_internal_r+0xd50>
  808624:	d9801b17 	ldw	r6,108(sp)
  808628:	d8801c17 	ldw	r2,112(sp)
  80862c:	d811883a 	mov	r8,sp
  808630:	31400044 	addi	r5,r6,1
  808634:	003e3306 	br	807f04 <__alt_data_end+0xff807f04>
  808638:	d9401b17 	ldw	r5,108(sp)
  80863c:	d8801c17 	ldw	r2,112(sp)
  808640:	29000044 	addi	r4,r5,1
  808644:	d8c01d87 	ldb	r3,118(sp)
  808648:	183e4d26 	beq	r3,zero,807f80 <__alt_data_end+0xff807f80>
  80864c:	00c00044 	movi	r3,1
  808650:	d9401d84 	addi	r5,sp,118
  808654:	10c5883a 	add	r2,r2,r3
  808658:	41400015 	stw	r5,0(r8)
  80865c:	40c00115 	stw	r3,4(r8)
  808660:	d8801c15 	stw	r2,112(sp)
  808664:	d9001b15 	stw	r4,108(sp)
  808668:	014001c4 	movi	r5,7
  80866c:	2900a90e 	bge	r5,r4,808914 <___vfiprintf_internal_r+0xe8c>
  808670:	1000da1e 	bne	r2,zero,8089dc <___vfiprintf_internal_r+0xf54>
  808674:	7000ab1e 	bne	r14,zero,808924 <___vfiprintf_internal_r+0xe9c>
  808678:	000b883a 	mov	r5,zero
  80867c:	1809883a 	mov	r4,r3
  808680:	d811883a 	mov	r8,sp
  808684:	00c02004 	movi	r3,128
  808688:	e0fe4d26 	beq	fp,r3,807fc0 <__alt_data_end+0xff807fc0>
  80868c:	4cf9c83a 	sub	fp,r9,r19
  808690:	073e7b0e 	bge	zero,fp,808080 <__alt_data_end+0xff808080>
  808694:	01c00404 	movi	r7,16
  808698:	3f01900e 	bge	r7,fp,808cdc <___vfiprintf_internal_r+0x1254>
  80869c:	00c02074 	movhi	r3,129
  8086a0:	18fd2804 	addi	r3,r3,-2912
  8086a4:	d8c02415 	stw	r3,144(sp)
  8086a8:	034001c4 	movi	r13,7
  8086ac:	00000506 	br	8086c4 <___vfiprintf_internal_r+0xc3c>
  8086b0:	29000084 	addi	r4,r5,2
  8086b4:	42000204 	addi	r8,r8,8
  8086b8:	180b883a 	mov	r5,r3
  8086bc:	e73ffc04 	addi	fp,fp,-16
  8086c0:	3f000d0e 	bge	r7,fp,8086f8 <___vfiprintf_internal_r+0xc70>
  8086c4:	10800404 	addi	r2,r2,16
  8086c8:	28c00044 	addi	r3,r5,1
  8086cc:	45c00015 	stw	r23,0(r8)
  8086d0:	41c00115 	stw	r7,4(r8)
  8086d4:	d8801c15 	stw	r2,112(sp)
  8086d8:	d8c01b15 	stw	r3,108(sp)
  8086dc:	68fff40e 	bge	r13,r3,8086b0 <__alt_data_end+0xff8086b0>
  8086e0:	1000101e 	bne	r2,zero,808724 <___vfiprintf_internal_r+0xc9c>
  8086e4:	e73ffc04 	addi	fp,fp,-16
  8086e8:	01000044 	movi	r4,1
  8086ec:	000b883a 	mov	r5,zero
  8086f0:	d811883a 	mov	r8,sp
  8086f4:	3f3ff316 	blt	r7,fp,8086c4 <__alt_data_end+0xff8086c4>
  8086f8:	da802417 	ldw	r10,144(sp)
  8086fc:	1705883a 	add	r2,r2,fp
  808700:	47000115 	stw	fp,4(r8)
  808704:	42800015 	stw	r10,0(r8)
  808708:	d8801c15 	stw	r2,112(sp)
  80870c:	d9001b15 	stw	r4,108(sp)
  808710:	00c001c4 	movi	r3,7
  808714:	19003616 	blt	r3,r4,8087f0 <___vfiprintf_internal_r+0xd68>
  808718:	42000204 	addi	r8,r8,8
  80871c:	21000044 	addi	r4,r4,1
  808720:	003e5706 	br	808080 <__alt_data_end+0xff808080>
  808724:	d9402117 	ldw	r5,132(sp)
  808728:	d9002017 	ldw	r4,128(sp)
  80872c:	d9801a04 	addi	r6,sp,104
  808730:	d9c02b15 	stw	r7,172(sp)
  808734:	db402a15 	stw	r13,168(sp)
  808738:	08079740 	call	807974 <__sprint_r.part.0>
  80873c:	d9c02b17 	ldw	r7,172(sp)
  808740:	db402a17 	ldw	r13,168(sp)
  808744:	1000241e 	bne	r2,zero,8087d8 <___vfiprintf_internal_r+0xd50>
  808748:	d9401b17 	ldw	r5,108(sp)
  80874c:	d8801c17 	ldw	r2,112(sp)
  808750:	d811883a 	mov	r8,sp
  808754:	29000044 	addi	r4,r5,1
  808758:	003fd806 	br	8086bc <__alt_data_end+0xff8086bc>
  80875c:	d9401b17 	ldw	r5,108(sp)
  808760:	00c02074 	movhi	r3,129
  808764:	18fd2c04 	addi	r3,r3,-2896
  808768:	d8c02415 	stw	r3,144(sp)
  80876c:	29400044 	addi	r5,r5,1
  808770:	d8c02417 	ldw	r3,144(sp)
  808774:	14c5883a 	add	r2,r2,r19
  808778:	44c00115 	stw	r19,4(r8)
  80877c:	40c00015 	stw	r3,0(r8)
  808780:	d8801c15 	stw	r2,112(sp)
  808784:	d9401b15 	stw	r5,108(sp)
  808788:	00c001c4 	movi	r3,7
  80878c:	1940070e 	bge	r3,r5,8087ac <___vfiprintf_internal_r+0xd24>
  808790:	103e4826 	beq	r2,zero,8080b4 <__alt_data_end+0xff8080b4>
  808794:	d9402117 	ldw	r5,132(sp)
  808798:	d9002017 	ldw	r4,128(sp)
  80879c:	d9801a04 	addi	r6,sp,104
  8087a0:	08079740 	call	807974 <__sprint_r.part.0>
  8087a4:	10000c1e 	bne	r2,zero,8087d8 <___vfiprintf_internal_r+0xd50>
  8087a8:	d8801c17 	ldw	r2,112(sp)
  8087ac:	8c80010e 	bge	r17,r18,8087b4 <___vfiprintf_internal_r+0xd2c>
  8087b0:	9023883a 	mov	r17,r18
  8087b4:	da802317 	ldw	r10,140(sp)
  8087b8:	5455883a 	add	r10,r10,r17
  8087bc:	da802315 	stw	r10,140(sp)
  8087c0:	103e4126 	beq	r2,zero,8080c8 <__alt_data_end+0xff8080c8>
  8087c4:	d9402117 	ldw	r5,132(sp)
  8087c8:	d9002017 	ldw	r4,128(sp)
  8087cc:	d9801a04 	addi	r6,sp,104
  8087d0:	08079740 	call	807974 <__sprint_r.part.0>
  8087d4:	103e3c26 	beq	r2,zero,8080c8 <__alt_data_end+0xff8080c8>
  8087d8:	dd002117 	ldw	r20,132(sp)
  8087dc:	a080030b 	ldhu	r2,12(r20)
  8087e0:	1080100c 	andi	r2,r2,64
  8087e4:	1001231e 	bne	r2,zero,808c74 <___vfiprintf_internal_r+0x11ec>
  8087e8:	d8802317 	ldw	r2,140(sp)
  8087ec:	003d7b06 	br	807ddc <__alt_data_end+0xff807ddc>
  8087f0:	1000991e 	bne	r2,zero,808a58 <___vfiprintf_internal_r+0xfd0>
  8087f4:	00c00044 	movi	r3,1
  8087f8:	9805883a 	mov	r2,r19
  8087fc:	dd400015 	stw	r21,0(sp)
  808800:	dcc00115 	stw	r19,4(sp)
  808804:	dcc01c15 	stw	r19,112(sp)
  808808:	d8c01b15 	stw	r3,108(sp)
  80880c:	d811883a 	mov	r8,sp
  808810:	42000204 	addi	r8,r8,8
  808814:	a2c0010c 	andi	r11,r20,4
  808818:	583fe426 	beq	r11,zero,8087ac <__alt_data_end+0xff8087ac>
  80881c:	8ca7c83a 	sub	r19,r17,r18
  808820:	04ffe20e 	bge	zero,r19,8087ac <__alt_data_end+0xff8087ac>
  808824:	01c00404 	movi	r7,16
  808828:	3cffcc0e 	bge	r7,r19,80875c <__alt_data_end+0xff80875c>
  80882c:	02802074 	movhi	r10,129
  808830:	52bd2c04 	addi	r10,r10,-2896
  808834:	d9001b17 	ldw	r4,108(sp)
  808838:	da802415 	stw	r10,144(sp)
  80883c:	382b883a 	mov	r21,r7
  808840:	050001c4 	movi	r20,7
  808844:	df002017 	ldw	fp,128(sp)
  808848:	00000506 	br	808860 <___vfiprintf_internal_r+0xdd8>
  80884c:	21400084 	addi	r5,r4,2
  808850:	42000204 	addi	r8,r8,8
  808854:	1809883a 	mov	r4,r3
  808858:	9cfffc04 	addi	r19,r19,-16
  80885c:	acffc40e 	bge	r21,r19,808770 <__alt_data_end+0xff808770>
  808860:	10800404 	addi	r2,r2,16
  808864:	20c00044 	addi	r3,r4,1
  808868:	45800015 	stw	r22,0(r8)
  80886c:	45400115 	stw	r21,4(r8)
  808870:	d8801c15 	stw	r2,112(sp)
  808874:	d8c01b15 	stw	r3,108(sp)
  808878:	a0fff40e 	bge	r20,r3,80884c <__alt_data_end+0xff80884c>
  80887c:	1000041e 	bne	r2,zero,808890 <___vfiprintf_internal_r+0xe08>
  808880:	01400044 	movi	r5,1
  808884:	0009883a 	mov	r4,zero
  808888:	d811883a 	mov	r8,sp
  80888c:	003ff206 	br	808858 <__alt_data_end+0xff808858>
  808890:	d9402117 	ldw	r5,132(sp)
  808894:	d9801a04 	addi	r6,sp,104
  808898:	e009883a 	mov	r4,fp
  80889c:	08079740 	call	807974 <__sprint_r.part.0>
  8088a0:	103fcd1e 	bne	r2,zero,8087d8 <__alt_data_end+0xff8087d8>
  8088a4:	d9001b17 	ldw	r4,108(sp)
  8088a8:	d8801c17 	ldw	r2,112(sp)
  8088ac:	d811883a 	mov	r8,sp
  8088b0:	21400044 	addi	r5,r4,1
  8088b4:	003fe806 	br	808858 <__alt_data_end+0xff808858>
  8088b8:	d9402117 	ldw	r5,132(sp)
  8088bc:	d9002017 	ldw	r4,128(sp)
  8088c0:	d9801a04 	addi	r6,sp,104
  8088c4:	d9c02b15 	stw	r7,172(sp)
  8088c8:	db402a15 	stw	r13,168(sp)
  8088cc:	08079740 	call	807974 <__sprint_r.part.0>
  8088d0:	d9c02b17 	ldw	r7,172(sp)
  8088d4:	db402a17 	ldw	r13,168(sp)
  8088d8:	103fbf1e 	bne	r2,zero,8087d8 <__alt_data_end+0xff8087d8>
  8088dc:	d9401b17 	ldw	r5,108(sp)
  8088e0:	d8801c17 	ldw	r2,112(sp)
  8088e4:	d811883a 	mov	r8,sp
  8088e8:	29800044 	addi	r6,r5,1
  8088ec:	003dc406 	br	808000 <__alt_data_end+0xff808000>
  8088f0:	1000d21e 	bne	r2,zero,808c3c <___vfiprintf_internal_r+0x11b4>
  8088f4:	d8c01d87 	ldb	r3,118(sp)
  8088f8:	18009526 	beq	r3,zero,808b50 <___vfiprintf_internal_r+0x10c8>
  8088fc:	00800044 	movi	r2,1
  808900:	d8c01d84 	addi	r3,sp,118
  808904:	1009883a 	mov	r4,r2
  808908:	d8c00015 	stw	r3,0(sp)
  80890c:	d8800115 	stw	r2,4(sp)
  808910:	d811883a 	mov	r8,sp
  808914:	200b883a 	mov	r5,r4
  808918:	42000204 	addi	r8,r8,8
  80891c:	21000044 	addi	r4,r4,1
  808920:	003d9706 	br	807f80 <__alt_data_end+0xff807f80>
  808924:	d9001d04 	addi	r4,sp,116
  808928:	00800084 	movi	r2,2
  80892c:	d9000015 	stw	r4,0(sp)
  808930:	d8800115 	stw	r2,4(sp)
  808934:	1809883a 	mov	r4,r3
  808938:	d811883a 	mov	r8,sp
  80893c:	200b883a 	mov	r5,r4
  808940:	42000204 	addi	r8,r8,8
  808944:	21000044 	addi	r4,r4,1
  808948:	003f4e06 	br	808684 <__alt_data_end+0xff808684>
  80894c:	d8001d85 	stb	zero,118(sp)
  808950:	48005016 	blt	r9,zero,808a94 <___vfiprintf_internal_r+0x100c>
  808954:	00ffdfc4 	movi	r3,-129
  808958:	94c4b03a 	or	r2,r18,r19
  80895c:	a0e8703a 	and	r20,r20,r3
  808960:	103d4426 	beq	r2,zero,807e74 <__alt_data_end+0xff807e74>
  808964:	0039883a 	mov	fp,zero
  808968:	d9002617 	ldw	r4,152(sp)
  80896c:	dd401a04 	addi	r21,sp,104
  808970:	908003cc 	andi	r2,r18,15
  808974:	9806973a 	slli	r3,r19,28
  808978:	2085883a 	add	r2,r4,r2
  80897c:	9024d13a 	srli	r18,r18,4
  808980:	10800003 	ldbu	r2,0(r2)
  808984:	9826d13a 	srli	r19,r19,4
  808988:	ad7fffc4 	addi	r21,r21,-1
  80898c:	1ca4b03a 	or	r18,r3,r18
  808990:	a8800005 	stb	r2,0(r21)
  808994:	94c4b03a 	or	r2,r18,r19
  808998:	103ff51e 	bne	r2,zero,808970 <__alt_data_end+0xff808970>
  80899c:	003e5906 	br	808304 <__alt_data_end+0xff808304>
  8089a0:	d9402117 	ldw	r5,132(sp)
  8089a4:	d9002017 	ldw	r4,128(sp)
  8089a8:	d9801a04 	addi	r6,sp,104
  8089ac:	08079740 	call	807974 <__sprint_r.part.0>
  8089b0:	103f891e 	bne	r2,zero,8087d8 <__alt_data_end+0xff8087d8>
  8089b4:	d8801c17 	ldw	r2,112(sp)
  8089b8:	d811883a 	mov	r8,sp
  8089bc:	003f9506 	br	808814 <__alt_data_end+0xff808814>
  8089c0:	d9402117 	ldw	r5,132(sp)
  8089c4:	d9002017 	ldw	r4,128(sp)
  8089c8:	d9801a04 	addi	r6,sp,104
  8089cc:	08079740 	call	807974 <__sprint_r.part.0>
  8089d0:	103f811e 	bne	r2,zero,8087d8 <__alt_data_end+0xff8087d8>
  8089d4:	d811883a 	mov	r8,sp
  8089d8:	003ced06 	br	807d90 <__alt_data_end+0xff807d90>
  8089dc:	d9402117 	ldw	r5,132(sp)
  8089e0:	d9002017 	ldw	r4,128(sp)
  8089e4:	d9801a04 	addi	r6,sp,104
  8089e8:	da402c15 	stw	r9,176(sp)
  8089ec:	db802a15 	stw	r14,168(sp)
  8089f0:	08079740 	call	807974 <__sprint_r.part.0>
  8089f4:	da402c17 	ldw	r9,176(sp)
  8089f8:	db802a17 	ldw	r14,168(sp)
  8089fc:	103f761e 	bne	r2,zero,8087d8 <__alt_data_end+0xff8087d8>
  808a00:	d9401b17 	ldw	r5,108(sp)
  808a04:	d8801c17 	ldw	r2,112(sp)
  808a08:	d811883a 	mov	r8,sp
  808a0c:	29000044 	addi	r4,r5,1
  808a10:	003d5b06 	br	807f80 <__alt_data_end+0xff807f80>
  808a14:	d9402117 	ldw	r5,132(sp)
  808a18:	d9002017 	ldw	r4,128(sp)
  808a1c:	d9801a04 	addi	r6,sp,104
  808a20:	da402c15 	stw	r9,176(sp)
  808a24:	08079740 	call	807974 <__sprint_r.part.0>
  808a28:	da402c17 	ldw	r9,176(sp)
  808a2c:	103f6a1e 	bne	r2,zero,8087d8 <__alt_data_end+0xff8087d8>
  808a30:	d9401b17 	ldw	r5,108(sp)
  808a34:	d8801c17 	ldw	r2,112(sp)
  808a38:	d811883a 	mov	r8,sp
  808a3c:	29000044 	addi	r4,r5,1
  808a40:	003f1006 	br	808684 <__alt_data_end+0xff808684>
  808a44:	1000c31e 	bne	r2,zero,808d54 <___vfiprintf_internal_r+0x12cc>
  808a48:	01000044 	movi	r4,1
  808a4c:	000b883a 	mov	r5,zero
  808a50:	d811883a 	mov	r8,sp
  808a54:	003f0d06 	br	80868c <__alt_data_end+0xff80868c>
  808a58:	d9402117 	ldw	r5,132(sp)
  808a5c:	d9002017 	ldw	r4,128(sp)
  808a60:	d9801a04 	addi	r6,sp,104
  808a64:	08079740 	call	807974 <__sprint_r.part.0>
  808a68:	103f5b1e 	bne	r2,zero,8087d8 <__alt_data_end+0xff8087d8>
  808a6c:	d9001b17 	ldw	r4,108(sp)
  808a70:	d8801c17 	ldw	r2,112(sp)
  808a74:	d811883a 	mov	r8,sp
  808a78:	21000044 	addi	r4,r4,1
  808a7c:	003d8006 	br	808080 <__alt_data_end+0xff808080>
  808a80:	01002074 	movhi	r4,129
  808a84:	213cc704 	addi	r4,r4,-3300
  808a88:	d9002615 	stw	r4,152(sp)
  808a8c:	d8c02215 	stw	r3,136(sp)
  808a90:	1029883a 	mov	r20,r2
  808a94:	94c4b03a 	or	r2,r18,r19
  808a98:	103fb21e 	bne	r2,zero,808964 <__alt_data_end+0xff808964>
  808a9c:	0039883a 	mov	fp,zero
  808aa0:	00800084 	movi	r2,2
  808aa4:	003e6b06 	br	808454 <__alt_data_end+0xff808454>
  808aa8:	da802217 	ldw	r10,136(sp)
  808aac:	d8001d85 	stb	zero,118(sp)
  808ab0:	0027883a 	mov	r19,zero
  808ab4:	50800104 	addi	r2,r10,4
  808ab8:	54800017 	ldw	r18,0(r10)
  808abc:	483e6016 	blt	r9,zero,808440 <__alt_data_end+0xff808440>
  808ac0:	00ffdfc4 	movi	r3,-129
  808ac4:	d8802215 	stw	r2,136(sp)
  808ac8:	a0e8703a 	and	r20,r20,r3
  808acc:	0039883a 	mov	fp,zero
  808ad0:	903ebb26 	beq	r18,zero,8085c0 <__alt_data_end+0xff8085c0>
  808ad4:	00800244 	movi	r2,9
  808ad8:	14bdee36 	bltu	r2,r18,808294 <__alt_data_end+0xff808294>
  808adc:	003eba06 	br	8085c8 <__alt_data_end+0xff8085c8>
  808ae0:	00800c04 	movi	r2,48
  808ae4:	d8c01d45 	stb	r3,117(sp)
  808ae8:	d8801d05 	stb	r2,116(sp)
  808aec:	d8001d85 	stb	zero,118(sp)
  808af0:	a0c00094 	ori	r3,r20,2
  808af4:	4800a916 	blt	r9,zero,808d9c <___vfiprintf_internal_r+0x1314>
  808af8:	00bfdfc4 	movi	r2,-129
  808afc:	a096703a 	and	r11,r20,r2
  808b00:	5d000094 	ori	r20,r11,2
  808b04:	0039883a 	mov	fp,zero
  808b08:	003f9706 	br	808968 <__alt_data_end+0xff808968>
  808b0c:	8025883a 	mov	r18,r16
  808b10:	003c2e06 	br	807bcc <__alt_data_end+0xff807bcc>
  808b14:	00802074 	movhi	r2,129
  808b18:	10bcc704 	addi	r2,r2,-3300
  808b1c:	0039883a 	mov	fp,zero
  808b20:	d8802615 	stw	r2,152(sp)
  808b24:	003f9006 	br	808968 <__alt_data_end+0xff808968>
  808b28:	04a5c83a 	sub	r18,zero,r18
  808b2c:	07000b44 	movi	fp,45
  808b30:	9004c03a 	cmpne	r2,r18,zero
  808b34:	04e7c83a 	sub	r19,zero,r19
  808b38:	df001d85 	stb	fp,118(sp)
  808b3c:	98a7c83a 	sub	r19,r19,r2
  808b40:	48009f16 	blt	r9,zero,808dc0 <___vfiprintf_internal_r+0x1338>
  808b44:	00bfdfc4 	movi	r2,-129
  808b48:	a0a8703a 	and	r20,r20,r2
  808b4c:	003dd006 	br	808290 <__alt_data_end+0xff808290>
  808b50:	70004c26 	beq	r14,zero,808c84 <___vfiprintf_internal_r+0x11fc>
  808b54:	00800084 	movi	r2,2
  808b58:	d8c01d04 	addi	r3,sp,116
  808b5c:	d8c00015 	stw	r3,0(sp)
  808b60:	d8800115 	stw	r2,4(sp)
  808b64:	01000044 	movi	r4,1
  808b68:	d811883a 	mov	r8,sp
  808b6c:	003f7306 	br	80893c <__alt_data_end+0xff80893c>
  808b70:	a080100c 	andi	r2,r20,64
  808b74:	da802217 	ldw	r10,136(sp)
  808b78:	103e0626 	beq	r2,zero,808394 <__alt_data_end+0xff808394>
  808b7c:	5480000f 	ldh	r18,0(r10)
  808b80:	52800104 	addi	r10,r10,4
  808b84:	da802215 	stw	r10,136(sp)
  808b88:	9027d7fa 	srai	r19,r18,31
  808b8c:	9805883a 	mov	r2,r19
  808b90:	003db806 	br	808274 <__alt_data_end+0xff808274>
  808b94:	a080040c 	andi	r2,r20,16
  808b98:	1000091e 	bne	r2,zero,808bc0 <___vfiprintf_internal_r+0x1138>
  808b9c:	a2c0100c 	andi	r11,r20,64
  808ba0:	58000726 	beq	r11,zero,808bc0 <___vfiprintf_internal_r+0x1138>
  808ba4:	da802217 	ldw	r10,136(sp)
  808ba8:	50800017 	ldw	r2,0(r10)
  808bac:	52800104 	addi	r10,r10,4
  808bb0:	da802215 	stw	r10,136(sp)
  808bb4:	da802317 	ldw	r10,140(sp)
  808bb8:	1280000d 	sth	r10,0(r2)
  808bbc:	003be706 	br	807b5c <__alt_data_end+0xff807b5c>
  808bc0:	da802217 	ldw	r10,136(sp)
  808bc4:	50800017 	ldw	r2,0(r10)
  808bc8:	52800104 	addi	r10,r10,4
  808bcc:	da802215 	stw	r10,136(sp)
  808bd0:	da802317 	ldw	r10,140(sp)
  808bd4:	12800015 	stw	r10,0(r2)
  808bd8:	003be006 	br	807b5c <__alt_data_end+0xff807b5c>
  808bdc:	a080100c 	andi	r2,r20,64
  808be0:	da802217 	ldw	r10,136(sp)
  808be4:	10003026 	beq	r2,zero,808ca8 <___vfiprintf_internal_r+0x1220>
  808be8:	5480000b 	ldhu	r18,0(r10)
  808bec:	52800104 	addi	r10,r10,4
  808bf0:	0027883a 	mov	r19,zero
  808bf4:	da802215 	stw	r10,136(sp)
  808bf8:	003d8006 	br	8081fc <__alt_data_end+0xff8081fc>
  808bfc:	80c00007 	ldb	r3,0(r16)
  808c00:	003c0006 	br	807c04 <__alt_data_end+0xff807c04>
  808c04:	a080100c 	andi	r2,r20,64
  808c08:	d8001d85 	stb	zero,118(sp)
  808c0c:	da802217 	ldw	r10,136(sp)
  808c10:	1000201e 	bne	r2,zero,808c94 <___vfiprintf_internal_r+0x120c>
  808c14:	50800104 	addi	r2,r10,4
  808c18:	54800017 	ldw	r18,0(r10)
  808c1c:	0027883a 	mov	r19,zero
  808c20:	483def0e 	bge	r9,zero,8083e0 <__alt_data_end+0xff8083e0>
  808c24:	94c6b03a 	or	r3,r18,r19
  808c28:	d8802215 	stw	r2,136(sp)
  808c2c:	183d4e1e 	bne	r3,zero,808168 <__alt_data_end+0xff808168>
  808c30:	0039883a 	mov	fp,zero
  808c34:	0005883a 	mov	r2,zero
  808c38:	003e0606 	br	808454 <__alt_data_end+0xff808454>
  808c3c:	d9402117 	ldw	r5,132(sp)
  808c40:	d9002017 	ldw	r4,128(sp)
  808c44:	d9801a04 	addi	r6,sp,104
  808c48:	da402c15 	stw	r9,176(sp)
  808c4c:	db802a15 	stw	r14,168(sp)
  808c50:	08079740 	call	807974 <__sprint_r.part.0>
  808c54:	da402c17 	ldw	r9,176(sp)
  808c58:	db802a17 	ldw	r14,168(sp)
  808c5c:	103ede1e 	bne	r2,zero,8087d8 <__alt_data_end+0xff8087d8>
  808c60:	d9401b17 	ldw	r5,108(sp)
  808c64:	d8801c17 	ldw	r2,112(sp)
  808c68:	d811883a 	mov	r8,sp
  808c6c:	29000044 	addi	r4,r5,1
  808c70:	003e7406 	br	808644 <__alt_data_end+0xff808644>
  808c74:	00bfffc4 	movi	r2,-1
  808c78:	003c5806 	br	807ddc <__alt_data_end+0xff807ddc>
  808c7c:	d811883a 	mov	r8,sp
  808c80:	003ee806 	br	808824 <__alt_data_end+0xff808824>
  808c84:	000b883a 	mov	r5,zero
  808c88:	01000044 	movi	r4,1
  808c8c:	d811883a 	mov	r8,sp
  808c90:	003e7c06 	br	808684 <__alt_data_end+0xff808684>
  808c94:	50800104 	addi	r2,r10,4
  808c98:	5480000b 	ldhu	r18,0(r10)
  808c9c:	0027883a 	mov	r19,zero
  808ca0:	483dcf0e 	bge	r9,zero,8083e0 <__alt_data_end+0xff8083e0>
  808ca4:	003fdf06 	br	808c24 <__alt_data_end+0xff808c24>
  808ca8:	54800017 	ldw	r18,0(r10)
  808cac:	52800104 	addi	r10,r10,4
  808cb0:	0027883a 	mov	r19,zero
  808cb4:	da802215 	stw	r10,136(sp)
  808cb8:	003d5006 	br	8081fc <__alt_data_end+0xff8081fc>
  808cbc:	50800104 	addi	r2,r10,4
  808cc0:	5480000b 	ldhu	r18,0(r10)
  808cc4:	0027883a 	mov	r19,zero
  808cc8:	483f7d0e 	bge	r9,zero,808ac0 <__alt_data_end+0xff808ac0>
  808ccc:	003ddc06 	br	808440 <__alt_data_end+0xff808440>
  808cd0:	d8c02215 	stw	r3,136(sp)
  808cd4:	0039883a 	mov	fp,zero
  808cd8:	003ddb06 	br	808448 <__alt_data_end+0xff808448>
  808cdc:	02802074 	movhi	r10,129
  808ce0:	52bd2804 	addi	r10,r10,-2912
  808ce4:	da802415 	stw	r10,144(sp)
  808ce8:	003e8306 	br	8086f8 <__alt_data_end+0xff8086f8>
  808cec:	d8801c17 	ldw	r2,112(sp)
  808cf0:	dd002117 	ldw	r20,132(sp)
  808cf4:	103eb926 	beq	r2,zero,8087dc <__alt_data_end+0xff8087dc>
  808cf8:	d9002017 	ldw	r4,128(sp)
  808cfc:	d9801a04 	addi	r6,sp,104
  808d00:	a00b883a 	mov	r5,r20
  808d04:	08079740 	call	807974 <__sprint_r.part.0>
  808d08:	003eb406 	br	8087dc <__alt_data_end+0xff8087dc>
  808d0c:	80c00043 	ldbu	r3,1(r16)
  808d10:	a5000814 	ori	r20,r20,32
  808d14:	84000044 	addi	r16,r16,1
  808d18:	18c03fcc 	andi	r3,r3,255
  808d1c:	18c0201c 	xori	r3,r3,128
  808d20:	18ffe004 	addi	r3,r3,-128
  808d24:	003bb706 	br	807c04 <__alt_data_end+0xff807c04>
  808d28:	a809883a 	mov	r4,r21
  808d2c:	d8c02a15 	stw	r3,168(sp)
  808d30:	da002b15 	stw	r8,172(sp)
  808d34:	08003dc0 	call	8003dc <strlen>
  808d38:	d8c02a17 	ldw	r3,168(sp)
  808d3c:	1027883a 	mov	r19,r2
  808d40:	df001d83 	ldbu	fp,118(sp)
  808d44:	d8c02215 	stw	r3,136(sp)
  808d48:	0013883a 	mov	r9,zero
  808d4c:	da002b17 	ldw	r8,172(sp)
  808d50:	003c4d06 	br	807e88 <__alt_data_end+0xff807e88>
  808d54:	d9402117 	ldw	r5,132(sp)
  808d58:	d9002017 	ldw	r4,128(sp)
  808d5c:	d9801a04 	addi	r6,sp,104
  808d60:	da402c15 	stw	r9,176(sp)
  808d64:	08079740 	call	807974 <__sprint_r.part.0>
  808d68:	da402c17 	ldw	r9,176(sp)
  808d6c:	103e9a1e 	bne	r2,zero,8087d8 <__alt_data_end+0xff8087d8>
  808d70:	d9401b17 	ldw	r5,108(sp)
  808d74:	d8801c17 	ldw	r2,112(sp)
  808d78:	d811883a 	mov	r8,sp
  808d7c:	29000044 	addi	r4,r5,1
  808d80:	003e4206 	br	80868c <__alt_data_end+0xff80868c>
  808d84:	d9401b17 	ldw	r5,108(sp)
  808d88:	01002074 	movhi	r4,129
  808d8c:	213d2c04 	addi	r4,r4,-2896
  808d90:	d9002415 	stw	r4,144(sp)
  808d94:	29400044 	addi	r5,r5,1
  808d98:	003c6d06 	br	807f50 <__alt_data_end+0xff807f50>
  808d9c:	0039883a 	mov	fp,zero
  808da0:	00800084 	movi	r2,2
  808da4:	10803fcc 	andi	r2,r2,255
  808da8:	01000044 	movi	r4,1
  808dac:	11001e26 	beq	r2,r4,808e28 <___vfiprintf_internal_r+0x13a0>
  808db0:	01000084 	movi	r4,2
  808db4:	11001e1e 	bne	r2,r4,808e30 <___vfiprintf_internal_r+0x13a8>
  808db8:	1829883a 	mov	r20,r3
  808dbc:	003eea06 	br	808968 <__alt_data_end+0xff808968>
  808dc0:	a007883a 	mov	r3,r20
  808dc4:	00800044 	movi	r2,1
  808dc8:	003ff606 	br	808da4 <__alt_data_end+0xff808da4>
  808dcc:	00800184 	movi	r2,6
  808dd0:	1240012e 	bgeu	r2,r9,808dd8 <___vfiprintf_internal_r+0x1350>
  808dd4:	1013883a 	mov	r9,r2
  808dd8:	4827883a 	mov	r19,r9
  808ddc:	4825883a 	mov	r18,r9
  808de0:	48001516 	blt	r9,zero,808e38 <___vfiprintf_internal_r+0x13b0>
  808de4:	05402074 	movhi	r21,129
  808de8:	d8c02215 	stw	r3,136(sp)
  808dec:	ad7ccc04 	addi	r21,r21,-3280
  808df0:	003d1406 	br	808244 <__alt_data_end+0xff808244>
  808df4:	02802074 	movhi	r10,129
  808df8:	52bd2804 	addi	r10,r10,-2912
  808dfc:	da802415 	stw	r10,144(sp)
  808e00:	200d883a 	mov	r6,r4
  808e04:	003c9106 	br	80804c <__alt_data_end+0xff80804c>
  808e08:	5021883a 	mov	r16,r10
  808e0c:	0013883a 	mov	r9,zero
  808e10:	003b7d06 	br	807c08 <__alt_data_end+0xff807c08>
  808e14:	4827883a 	mov	r19,r9
  808e18:	df001d83 	ldbu	fp,118(sp)
  808e1c:	d8c02215 	stw	r3,136(sp)
  808e20:	0013883a 	mov	r9,zero
  808e24:	003c1806 	br	807e88 <__alt_data_end+0xff807e88>
  808e28:	1829883a 	mov	r20,r3
  808e2c:	003d1806 	br	808290 <__alt_data_end+0xff808290>
  808e30:	1829883a 	mov	r20,r3
  808e34:	003ccd06 	br	80816c <__alt_data_end+0xff80816c>
  808e38:	0025883a 	mov	r18,zero
  808e3c:	003fe906 	br	808de4 <__alt_data_end+0xff808de4>
  808e40:	d8802217 	ldw	r2,136(sp)
  808e44:	80c00043 	ldbu	r3,1(r16)
  808e48:	5021883a 	mov	r16,r10
  808e4c:	12400017 	ldw	r9,0(r2)
  808e50:	10800104 	addi	r2,r2,4
  808e54:	d8802215 	stw	r2,136(sp)
  808e58:	483faf0e 	bge	r9,zero,808d18 <__alt_data_end+0xff808d18>
  808e5c:	18c03fcc 	andi	r3,r3,255
  808e60:	18c0201c 	xori	r3,r3,128
  808e64:	027fffc4 	movi	r9,-1
  808e68:	18ffe004 	addi	r3,r3,-128
  808e6c:	003b6506 	br	807c04 <__alt_data_end+0xff807c04>
  808e70:	d9c01d85 	stb	r7,118(sp)
  808e74:	003ca006 	br	8080f8 <__alt_data_end+0xff8080f8>
  808e78:	d9c01d85 	stb	r7,118(sp)
  808e7c:	003cad06 	br	808134 <__alt_data_end+0xff808134>
  808e80:	d9c01d85 	stb	r7,118(sp)
  808e84:	003d7d06 	br	80847c <__alt_data_end+0xff80847c>
  808e88:	d9c01d85 	stb	r7,118(sp)
  808e8c:	003d5f06 	br	80840c <__alt_data_end+0xff80840c>
  808e90:	a080004c 	andi	r2,r20,1
  808e94:	0039883a 	mov	fp,zero
  808e98:	10000526 	beq	r2,zero,808eb0 <___vfiprintf_internal_r+0x1428>
  808e9c:	00800c04 	movi	r2,48
  808ea0:	d88019c5 	stb	r2,103(sp)
  808ea4:	dcc02717 	ldw	r19,156(sp)
  808ea8:	dd4019c4 	addi	r21,sp,103
  808eac:	003bf606 	br	807e88 <__alt_data_end+0xff807e88>
  808eb0:	0027883a 	mov	r19,zero
  808eb4:	dd401a04 	addi	r21,sp,104
  808eb8:	003bf306 	br	807e88 <__alt_data_end+0xff807e88>
  808ebc:	d9c01d85 	stb	r7,118(sp)
  808ec0:	003dc806 	br	8085e4 <__alt_data_end+0xff8085e4>
  808ec4:	d9c01d85 	stb	r7,118(sp)
  808ec8:	003d3a06 	br	8083b4 <__alt_data_end+0xff8083b4>
  808ecc:	d9c01d85 	stb	r7,118(sp)
  808ed0:	003d2a06 	br	80837c <__alt_data_end+0xff80837c>
  808ed4:	d9c01d85 	stb	r7,118(sp)
  808ed8:	003cde06 	br	808254 <__alt_data_end+0xff808254>
  808edc:	d9c01d85 	stb	r7,118(sp)
  808ee0:	003cbc06 	br	8081d4 <__alt_data_end+0xff8081d4>

00808ee4 <__vfiprintf_internal>:
  808ee4:	00802074 	movhi	r2,129
  808ee8:	10842704 	addi	r2,r2,4252
  808eec:	300f883a 	mov	r7,r6
  808ef0:	280d883a 	mov	r6,r5
  808ef4:	200b883a 	mov	r5,r4
  808ef8:	11000017 	ldw	r4,0(r2)
  808efc:	0807a881 	jmpi	807a88 <___vfiprintf_internal_r>

00808f00 <__sbprintf>:
  808f00:	2880030b 	ldhu	r2,12(r5)
  808f04:	2ac01917 	ldw	r11,100(r5)
  808f08:	2a80038b 	ldhu	r10,14(r5)
  808f0c:	2a400717 	ldw	r9,28(r5)
  808f10:	2a000917 	ldw	r8,36(r5)
  808f14:	defee204 	addi	sp,sp,-1144
  808f18:	00c10004 	movi	r3,1024
  808f1c:	dc011a15 	stw	r16,1128(sp)
  808f20:	10bfff4c 	andi	r2,r2,65533
  808f24:	2821883a 	mov	r16,r5
  808f28:	d8cb883a 	add	r5,sp,r3
  808f2c:	dc811c15 	stw	r18,1136(sp)
  808f30:	dc411b15 	stw	r17,1132(sp)
  808f34:	dfc11d15 	stw	ra,1140(sp)
  808f38:	2025883a 	mov	r18,r4
  808f3c:	d881030d 	sth	r2,1036(sp)
  808f40:	dac11915 	stw	r11,1124(sp)
  808f44:	da81038d 	sth	r10,1038(sp)
  808f48:	da410715 	stw	r9,1052(sp)
  808f4c:	da010915 	stw	r8,1060(sp)
  808f50:	dec10015 	stw	sp,1024(sp)
  808f54:	dec10415 	stw	sp,1040(sp)
  808f58:	d8c10215 	stw	r3,1032(sp)
  808f5c:	d8c10515 	stw	r3,1044(sp)
  808f60:	d8010615 	stw	zero,1048(sp)
  808f64:	0807a880 	call	807a88 <___vfiprintf_internal_r>
  808f68:	1023883a 	mov	r17,r2
  808f6c:	10000416 	blt	r2,zero,808f80 <__sbprintf+0x80>
  808f70:	d9410004 	addi	r5,sp,1024
  808f74:	9009883a 	mov	r4,r18
  808f78:	080433c0 	call	80433c <_fflush_r>
  808f7c:	10000d1e 	bne	r2,zero,808fb4 <__sbprintf+0xb4>
  808f80:	d881030b 	ldhu	r2,1036(sp)
  808f84:	1080100c 	andi	r2,r2,64
  808f88:	10000326 	beq	r2,zero,808f98 <__sbprintf+0x98>
  808f8c:	8080030b 	ldhu	r2,12(r16)
  808f90:	10801014 	ori	r2,r2,64
  808f94:	8080030d 	sth	r2,12(r16)
  808f98:	8805883a 	mov	r2,r17
  808f9c:	dfc11d17 	ldw	ra,1140(sp)
  808fa0:	dc811c17 	ldw	r18,1136(sp)
  808fa4:	dc411b17 	ldw	r17,1132(sp)
  808fa8:	dc011a17 	ldw	r16,1128(sp)
  808fac:	dec11e04 	addi	sp,sp,1144
  808fb0:	f800283a 	ret
  808fb4:	047fffc4 	movi	r17,-1
  808fb8:	003ff106 	br	808f80 <__alt_data_end+0xff808f80>

00808fbc <_write_r>:
  808fbc:	defffd04 	addi	sp,sp,-12
  808fc0:	2805883a 	mov	r2,r5
  808fc4:	dc000015 	stw	r16,0(sp)
  808fc8:	04002074 	movhi	r16,129
  808fcc:	dc400115 	stw	r17,4(sp)
  808fd0:	300b883a 	mov	r5,r6
  808fd4:	840af704 	addi	r16,r16,11228
  808fd8:	2023883a 	mov	r17,r4
  808fdc:	380d883a 	mov	r6,r7
  808fe0:	1009883a 	mov	r4,r2
  808fe4:	dfc00215 	stw	ra,8(sp)
  808fe8:	80000015 	stw	zero,0(r16)
  808fec:	080d4080 	call	80d408 <write>
  808ff0:	00ffffc4 	movi	r3,-1
  808ff4:	10c00526 	beq	r2,r3,80900c <_write_r+0x50>
  808ff8:	dfc00217 	ldw	ra,8(sp)
  808ffc:	dc400117 	ldw	r17,4(sp)
  809000:	dc000017 	ldw	r16,0(sp)
  809004:	dec00304 	addi	sp,sp,12
  809008:	f800283a 	ret
  80900c:	80c00017 	ldw	r3,0(r16)
  809010:	183ff926 	beq	r3,zero,808ff8 <__alt_data_end+0xff808ff8>
  809014:	88c00015 	stw	r3,0(r17)
  809018:	003ff706 	br	808ff8 <__alt_data_end+0xff808ff8>

0080901c <_close_r>:
  80901c:	defffd04 	addi	sp,sp,-12
  809020:	dc000015 	stw	r16,0(sp)
  809024:	04002074 	movhi	r16,129
  809028:	dc400115 	stw	r17,4(sp)
  80902c:	840af704 	addi	r16,r16,11228
  809030:	2023883a 	mov	r17,r4
  809034:	2809883a 	mov	r4,r5
  809038:	dfc00215 	stw	ra,8(sp)
  80903c:	80000015 	stw	zero,0(r16)
  809040:	080cbf80 	call	80cbf8 <close>
  809044:	00ffffc4 	movi	r3,-1
  809048:	10c00526 	beq	r2,r3,809060 <_close_r+0x44>
  80904c:	dfc00217 	ldw	ra,8(sp)
  809050:	dc400117 	ldw	r17,4(sp)
  809054:	dc000017 	ldw	r16,0(sp)
  809058:	dec00304 	addi	sp,sp,12
  80905c:	f800283a 	ret
  809060:	80c00017 	ldw	r3,0(r16)
  809064:	183ff926 	beq	r3,zero,80904c <__alt_data_end+0xff80904c>
  809068:	88c00015 	stw	r3,0(r17)
  80906c:	003ff706 	br	80904c <__alt_data_end+0xff80904c>

00809070 <_calloc_r>:
  809070:	298b383a 	mul	r5,r5,r6
  809074:	defffe04 	addi	sp,sp,-8
  809078:	dfc00115 	stw	ra,4(sp)
  80907c:	dc000015 	stw	r16,0(sp)
  809080:	08054780 	call	805478 <_malloc_r>
  809084:	10002926 	beq	r2,zero,80912c <_calloc_r+0xbc>
  809088:	11bfff17 	ldw	r6,-4(r2)
  80908c:	1021883a 	mov	r16,r2
  809090:	00bfff04 	movi	r2,-4
  809094:	308c703a 	and	r6,r6,r2
  809098:	00c00904 	movi	r3,36
  80909c:	308d883a 	add	r6,r6,r2
  8090a0:	19801636 	bltu	r3,r6,8090fc <_calloc_r+0x8c>
  8090a4:	008004c4 	movi	r2,19
  8090a8:	11800b2e 	bgeu	r2,r6,8090d8 <_calloc_r+0x68>
  8090ac:	80000015 	stw	zero,0(r16)
  8090b0:	80000115 	stw	zero,4(r16)
  8090b4:	008006c4 	movi	r2,27
  8090b8:	11801a2e 	bgeu	r2,r6,809124 <_calloc_r+0xb4>
  8090bc:	80000215 	stw	zero,8(r16)
  8090c0:	80000315 	stw	zero,12(r16)
  8090c4:	30c0151e 	bne	r6,r3,80911c <_calloc_r+0xac>
  8090c8:	80000415 	stw	zero,16(r16)
  8090cc:	80800604 	addi	r2,r16,24
  8090d0:	80000515 	stw	zero,20(r16)
  8090d4:	00000106 	br	8090dc <_calloc_r+0x6c>
  8090d8:	8005883a 	mov	r2,r16
  8090dc:	10000015 	stw	zero,0(r2)
  8090e0:	10000115 	stw	zero,4(r2)
  8090e4:	10000215 	stw	zero,8(r2)
  8090e8:	8005883a 	mov	r2,r16
  8090ec:	dfc00117 	ldw	ra,4(sp)
  8090f0:	dc000017 	ldw	r16,0(sp)
  8090f4:	dec00204 	addi	sp,sp,8
  8090f8:	f800283a 	ret
  8090fc:	000b883a 	mov	r5,zero
  809100:	8009883a 	mov	r4,r16
  809104:	080600c0 	call	80600c <memset>
  809108:	8005883a 	mov	r2,r16
  80910c:	dfc00117 	ldw	ra,4(sp)
  809110:	dc000017 	ldw	r16,0(sp)
  809114:	dec00204 	addi	sp,sp,8
  809118:	f800283a 	ret
  80911c:	80800404 	addi	r2,r16,16
  809120:	003fee06 	br	8090dc <__alt_data_end+0xff8090dc>
  809124:	80800204 	addi	r2,r16,8
  809128:	003fec06 	br	8090dc <__alt_data_end+0xff8090dc>
  80912c:	0005883a 	mov	r2,zero
  809130:	003fee06 	br	8090ec <__alt_data_end+0xff8090ec>

00809134 <_fclose_r>:
  809134:	28003926 	beq	r5,zero,80921c <_fclose_r+0xe8>
  809138:	defffc04 	addi	sp,sp,-16
  80913c:	dc400115 	stw	r17,4(sp)
  809140:	dc000015 	stw	r16,0(sp)
  809144:	dfc00315 	stw	ra,12(sp)
  809148:	dc800215 	stw	r18,8(sp)
  80914c:	2023883a 	mov	r17,r4
  809150:	2821883a 	mov	r16,r5
  809154:	20000226 	beq	r4,zero,809160 <_fclose_r+0x2c>
  809158:	20800e17 	ldw	r2,56(r4)
  80915c:	10002726 	beq	r2,zero,8091fc <_fclose_r+0xc8>
  809160:	8080030f 	ldh	r2,12(r16)
  809164:	1000071e 	bne	r2,zero,809184 <_fclose_r+0x50>
  809168:	0005883a 	mov	r2,zero
  80916c:	dfc00317 	ldw	ra,12(sp)
  809170:	dc800217 	ldw	r18,8(sp)
  809174:	dc400117 	ldw	r17,4(sp)
  809178:	dc000017 	ldw	r16,0(sp)
  80917c:	dec00404 	addi	sp,sp,16
  809180:	f800283a 	ret
  809184:	800b883a 	mov	r5,r16
  809188:	8809883a 	mov	r4,r17
  80918c:	08041200 	call	804120 <__sflush_r>
  809190:	1025883a 	mov	r18,r2
  809194:	80800b17 	ldw	r2,44(r16)
  809198:	10000426 	beq	r2,zero,8091ac <_fclose_r+0x78>
  80919c:	81400717 	ldw	r5,28(r16)
  8091a0:	8809883a 	mov	r4,r17
  8091a4:	103ee83a 	callr	r2
  8091a8:	10001616 	blt	r2,zero,809204 <_fclose_r+0xd0>
  8091ac:	8080030b 	ldhu	r2,12(r16)
  8091b0:	1080200c 	andi	r2,r2,128
  8091b4:	1000151e 	bne	r2,zero,80920c <_fclose_r+0xd8>
  8091b8:	81400c17 	ldw	r5,48(r16)
  8091bc:	28000526 	beq	r5,zero,8091d4 <_fclose_r+0xa0>
  8091c0:	80801004 	addi	r2,r16,64
  8091c4:	28800226 	beq	r5,r2,8091d0 <_fclose_r+0x9c>
  8091c8:	8809883a 	mov	r4,r17
  8091cc:	080488c0 	call	80488c <_free_r>
  8091d0:	80000c15 	stw	zero,48(r16)
  8091d4:	81401117 	ldw	r5,68(r16)
  8091d8:	28000326 	beq	r5,zero,8091e8 <_fclose_r+0xb4>
  8091dc:	8809883a 	mov	r4,r17
  8091e0:	080488c0 	call	80488c <_free_r>
  8091e4:	80001115 	stw	zero,68(r16)
  8091e8:	08047280 	call	804728 <__sfp_lock_acquire>
  8091ec:	8000030d 	sth	zero,12(r16)
  8091f0:	080472c0 	call	80472c <__sfp_lock_release>
  8091f4:	9005883a 	mov	r2,r18
  8091f8:	003fdc06 	br	80916c <__alt_data_end+0xff80916c>
  8091fc:	08047180 	call	804718 <__sinit>
  809200:	003fd706 	br	809160 <__alt_data_end+0xff809160>
  809204:	04bfffc4 	movi	r18,-1
  809208:	003fe806 	br	8091ac <__alt_data_end+0xff8091ac>
  80920c:	81400417 	ldw	r5,16(r16)
  809210:	8809883a 	mov	r4,r17
  809214:	080488c0 	call	80488c <_free_r>
  809218:	003fe706 	br	8091b8 <__alt_data_end+0xff8091b8>
  80921c:	0005883a 	mov	r2,zero
  809220:	f800283a 	ret

00809224 <fclose>:
  809224:	00802074 	movhi	r2,129
  809228:	10842704 	addi	r2,r2,4252
  80922c:	200b883a 	mov	r5,r4
  809230:	11000017 	ldw	r4,0(r2)
  809234:	08091341 	jmpi	809134 <_fclose_r>

00809238 <__fputwc>:
  809238:	defff804 	addi	sp,sp,-32
  80923c:	dcc00415 	stw	r19,16(sp)
  809240:	dc800315 	stw	r18,12(sp)
  809244:	dc000115 	stw	r16,4(sp)
  809248:	dfc00715 	stw	ra,28(sp)
  80924c:	dd400615 	stw	r21,24(sp)
  809250:	dd000515 	stw	r20,20(sp)
  809254:	dc400215 	stw	r17,8(sp)
  809258:	2027883a 	mov	r19,r4
  80925c:	2825883a 	mov	r18,r5
  809260:	3021883a 	mov	r16,r6
  809264:	08052680 	call	805268 <__locale_mb_cur_max>
  809268:	00c00044 	movi	r3,1
  80926c:	10c03e26 	beq	r2,r3,809368 <__fputwc+0x130>
  809270:	81c01704 	addi	r7,r16,92
  809274:	900d883a 	mov	r6,r18
  809278:	d80b883a 	mov	r5,sp
  80927c:	9809883a 	mov	r4,r19
  809280:	08097080 	call	809708 <_wcrtomb_r>
  809284:	1029883a 	mov	r20,r2
  809288:	00bfffc4 	movi	r2,-1
  80928c:	a0802026 	beq	r20,r2,809310 <__fputwc+0xd8>
  809290:	d9400003 	ldbu	r5,0(sp)
  809294:	a0001c26 	beq	r20,zero,809308 <__fputwc+0xd0>
  809298:	0023883a 	mov	r17,zero
  80929c:	05400284 	movi	r21,10
  8092a0:	00000906 	br	8092c8 <__fputwc+0x90>
  8092a4:	80800017 	ldw	r2,0(r16)
  8092a8:	11400005 	stb	r5,0(r2)
  8092ac:	80c00017 	ldw	r3,0(r16)
  8092b0:	18c00044 	addi	r3,r3,1
  8092b4:	80c00015 	stw	r3,0(r16)
  8092b8:	8c400044 	addi	r17,r17,1
  8092bc:	dc45883a 	add	r2,sp,r17
  8092c0:	8d00112e 	bgeu	r17,r20,809308 <__fputwc+0xd0>
  8092c4:	11400003 	ldbu	r5,0(r2)
  8092c8:	80c00217 	ldw	r3,8(r16)
  8092cc:	18ffffc4 	addi	r3,r3,-1
  8092d0:	80c00215 	stw	r3,8(r16)
  8092d4:	183ff30e 	bge	r3,zero,8092a4 <__alt_data_end+0xff8092a4>
  8092d8:	80800617 	ldw	r2,24(r16)
  8092dc:	18801916 	blt	r3,r2,809344 <__fputwc+0x10c>
  8092e0:	80800017 	ldw	r2,0(r16)
  8092e4:	11400005 	stb	r5,0(r2)
  8092e8:	80800017 	ldw	r2,0(r16)
  8092ec:	10c00003 	ldbu	r3,0(r2)
  8092f0:	10800044 	addi	r2,r2,1
  8092f4:	1d402326 	beq	r3,r21,809384 <__fputwc+0x14c>
  8092f8:	80800015 	stw	r2,0(r16)
  8092fc:	8c400044 	addi	r17,r17,1
  809300:	dc45883a 	add	r2,sp,r17
  809304:	8d3fef36 	bltu	r17,r20,8092c4 <__alt_data_end+0xff8092c4>
  809308:	9005883a 	mov	r2,r18
  80930c:	00000406 	br	809320 <__fputwc+0xe8>
  809310:	80c0030b 	ldhu	r3,12(r16)
  809314:	a005883a 	mov	r2,r20
  809318:	18c01014 	ori	r3,r3,64
  80931c:	80c0030d 	sth	r3,12(r16)
  809320:	dfc00717 	ldw	ra,28(sp)
  809324:	dd400617 	ldw	r21,24(sp)
  809328:	dd000517 	ldw	r20,20(sp)
  80932c:	dcc00417 	ldw	r19,16(sp)
  809330:	dc800317 	ldw	r18,12(sp)
  809334:	dc400217 	ldw	r17,8(sp)
  809338:	dc000117 	ldw	r16,4(sp)
  80933c:	dec00804 	addi	sp,sp,32
  809340:	f800283a 	ret
  809344:	800d883a 	mov	r6,r16
  809348:	29403fcc 	andi	r5,r5,255
  80934c:	9809883a 	mov	r4,r19
  809350:	08095b00 	call	8095b0 <__swbuf_r>
  809354:	10bfffe0 	cmpeqi	r2,r2,-1
  809358:	10803fcc 	andi	r2,r2,255
  80935c:	103fd626 	beq	r2,zero,8092b8 <__alt_data_end+0xff8092b8>
  809360:	00bfffc4 	movi	r2,-1
  809364:	003fee06 	br	809320 <__alt_data_end+0xff809320>
  809368:	90ffffc4 	addi	r3,r18,-1
  80936c:	01003f84 	movi	r4,254
  809370:	20ffbf36 	bltu	r4,r3,809270 <__alt_data_end+0xff809270>
  809374:	900b883a 	mov	r5,r18
  809378:	dc800005 	stb	r18,0(sp)
  80937c:	1029883a 	mov	r20,r2
  809380:	003fc506 	br	809298 <__alt_data_end+0xff809298>
  809384:	800d883a 	mov	r6,r16
  809388:	a80b883a 	mov	r5,r21
  80938c:	9809883a 	mov	r4,r19
  809390:	08095b00 	call	8095b0 <__swbuf_r>
  809394:	10bfffe0 	cmpeqi	r2,r2,-1
  809398:	003fef06 	br	809358 <__alt_data_end+0xff809358>

0080939c <_fputwc_r>:
  80939c:	3080030b 	ldhu	r2,12(r6)
  8093a0:	10c8000c 	andi	r3,r2,8192
  8093a4:	1800051e 	bne	r3,zero,8093bc <_fputwc_r+0x20>
  8093a8:	30c01917 	ldw	r3,100(r6)
  8093ac:	10880014 	ori	r2,r2,8192
  8093b0:	3080030d 	sth	r2,12(r6)
  8093b4:	18880014 	ori	r2,r3,8192
  8093b8:	30801915 	stw	r2,100(r6)
  8093bc:	08092381 	jmpi	809238 <__fputwc>

008093c0 <fputwc>:
  8093c0:	00802074 	movhi	r2,129
  8093c4:	defffc04 	addi	sp,sp,-16
  8093c8:	10842704 	addi	r2,r2,4252
  8093cc:	dc000115 	stw	r16,4(sp)
  8093d0:	14000017 	ldw	r16,0(r2)
  8093d4:	dc400215 	stw	r17,8(sp)
  8093d8:	dfc00315 	stw	ra,12(sp)
  8093dc:	2023883a 	mov	r17,r4
  8093e0:	80000226 	beq	r16,zero,8093ec <fputwc+0x2c>
  8093e4:	80800e17 	ldw	r2,56(r16)
  8093e8:	10001026 	beq	r2,zero,80942c <fputwc+0x6c>
  8093ec:	2880030b 	ldhu	r2,12(r5)
  8093f0:	10c8000c 	andi	r3,r2,8192
  8093f4:	1800051e 	bne	r3,zero,80940c <fputwc+0x4c>
  8093f8:	28c01917 	ldw	r3,100(r5)
  8093fc:	10880014 	ori	r2,r2,8192
  809400:	2880030d 	sth	r2,12(r5)
  809404:	18880014 	ori	r2,r3,8192
  809408:	28801915 	stw	r2,100(r5)
  80940c:	280d883a 	mov	r6,r5
  809410:	8009883a 	mov	r4,r16
  809414:	880b883a 	mov	r5,r17
  809418:	dfc00317 	ldw	ra,12(sp)
  80941c:	dc400217 	ldw	r17,8(sp)
  809420:	dc000117 	ldw	r16,4(sp)
  809424:	dec00404 	addi	sp,sp,16
  809428:	08092381 	jmpi	809238 <__fputwc>
  80942c:	8009883a 	mov	r4,r16
  809430:	d9400015 	stw	r5,0(sp)
  809434:	08047180 	call	804718 <__sinit>
  809438:	d9400017 	ldw	r5,0(sp)
  80943c:	003feb06 	br	8093ec <__alt_data_end+0xff8093ec>

00809440 <_fstat_r>:
  809440:	defffd04 	addi	sp,sp,-12
  809444:	2805883a 	mov	r2,r5
  809448:	dc000015 	stw	r16,0(sp)
  80944c:	04002074 	movhi	r16,129
  809450:	dc400115 	stw	r17,4(sp)
  809454:	840af704 	addi	r16,r16,11228
  809458:	2023883a 	mov	r17,r4
  80945c:	300b883a 	mov	r5,r6
  809460:	1009883a 	mov	r4,r2
  809464:	dfc00215 	stw	ra,8(sp)
  809468:	80000015 	stw	zero,0(r16)
  80946c:	080cd300 	call	80cd30 <fstat>
  809470:	00ffffc4 	movi	r3,-1
  809474:	10c00526 	beq	r2,r3,80948c <_fstat_r+0x4c>
  809478:	dfc00217 	ldw	ra,8(sp)
  80947c:	dc400117 	ldw	r17,4(sp)
  809480:	dc000017 	ldw	r16,0(sp)
  809484:	dec00304 	addi	sp,sp,12
  809488:	f800283a 	ret
  80948c:	80c00017 	ldw	r3,0(r16)
  809490:	183ff926 	beq	r3,zero,809478 <__alt_data_end+0xff809478>
  809494:	88c00015 	stw	r3,0(r17)
  809498:	003ff706 	br	809478 <__alt_data_end+0xff809478>

0080949c <_isatty_r>:
  80949c:	defffd04 	addi	sp,sp,-12
  8094a0:	dc000015 	stw	r16,0(sp)
  8094a4:	04002074 	movhi	r16,129
  8094a8:	dc400115 	stw	r17,4(sp)
  8094ac:	840af704 	addi	r16,r16,11228
  8094b0:	2023883a 	mov	r17,r4
  8094b4:	2809883a 	mov	r4,r5
  8094b8:	dfc00215 	stw	ra,8(sp)
  8094bc:	80000015 	stw	zero,0(r16)
  8094c0:	080ce1c0 	call	80ce1c <isatty>
  8094c4:	00ffffc4 	movi	r3,-1
  8094c8:	10c00526 	beq	r2,r3,8094e0 <_isatty_r+0x44>
  8094cc:	dfc00217 	ldw	ra,8(sp)
  8094d0:	dc400117 	ldw	r17,4(sp)
  8094d4:	dc000017 	ldw	r16,0(sp)
  8094d8:	dec00304 	addi	sp,sp,12
  8094dc:	f800283a 	ret
  8094e0:	80c00017 	ldw	r3,0(r16)
  8094e4:	183ff926 	beq	r3,zero,8094cc <__alt_data_end+0xff8094cc>
  8094e8:	88c00015 	stw	r3,0(r17)
  8094ec:	003ff706 	br	8094cc <__alt_data_end+0xff8094cc>

008094f0 <_lseek_r>:
  8094f0:	defffd04 	addi	sp,sp,-12
  8094f4:	2805883a 	mov	r2,r5
  8094f8:	dc000015 	stw	r16,0(sp)
  8094fc:	04002074 	movhi	r16,129
  809500:	dc400115 	stw	r17,4(sp)
  809504:	300b883a 	mov	r5,r6
  809508:	840af704 	addi	r16,r16,11228
  80950c:	2023883a 	mov	r17,r4
  809510:	380d883a 	mov	r6,r7
  809514:	1009883a 	mov	r4,r2
  809518:	dfc00215 	stw	ra,8(sp)
  80951c:	80000015 	stw	zero,0(r16)
  809520:	080cfe80 	call	80cfe8 <lseek>
  809524:	00ffffc4 	movi	r3,-1
  809528:	10c00526 	beq	r2,r3,809540 <_lseek_r+0x50>
  80952c:	dfc00217 	ldw	ra,8(sp)
  809530:	dc400117 	ldw	r17,4(sp)
  809534:	dc000017 	ldw	r16,0(sp)
  809538:	dec00304 	addi	sp,sp,12
  80953c:	f800283a 	ret
  809540:	80c00017 	ldw	r3,0(r16)
  809544:	183ff926 	beq	r3,zero,80952c <__alt_data_end+0xff80952c>
  809548:	88c00015 	stw	r3,0(r17)
  80954c:	003ff706 	br	80952c <__alt_data_end+0xff80952c>

00809550 <_read_r>:
  809550:	defffd04 	addi	sp,sp,-12
  809554:	2805883a 	mov	r2,r5
  809558:	dc000015 	stw	r16,0(sp)
  80955c:	04002074 	movhi	r16,129
  809560:	dc400115 	stw	r17,4(sp)
  809564:	300b883a 	mov	r5,r6
  809568:	840af704 	addi	r16,r16,11228
  80956c:	2023883a 	mov	r17,r4
  809570:	380d883a 	mov	r6,r7
  809574:	1009883a 	mov	r4,r2
  809578:	dfc00215 	stw	ra,8(sp)
  80957c:	80000015 	stw	zero,0(r16)
  809580:	080d1bc0 	call	80d1bc <read>
  809584:	00ffffc4 	movi	r3,-1
  809588:	10c00526 	beq	r2,r3,8095a0 <_read_r+0x50>
  80958c:	dfc00217 	ldw	ra,8(sp)
  809590:	dc400117 	ldw	r17,4(sp)
  809594:	dc000017 	ldw	r16,0(sp)
  809598:	dec00304 	addi	sp,sp,12
  80959c:	f800283a 	ret
  8095a0:	80c00017 	ldw	r3,0(r16)
  8095a4:	183ff926 	beq	r3,zero,80958c <__alt_data_end+0xff80958c>
  8095a8:	88c00015 	stw	r3,0(r17)
  8095ac:	003ff706 	br	80958c <__alt_data_end+0xff80958c>

008095b0 <__swbuf_r>:
  8095b0:	defffb04 	addi	sp,sp,-20
  8095b4:	dcc00315 	stw	r19,12(sp)
  8095b8:	dc800215 	stw	r18,8(sp)
  8095bc:	dc000015 	stw	r16,0(sp)
  8095c0:	dfc00415 	stw	ra,16(sp)
  8095c4:	dc400115 	stw	r17,4(sp)
  8095c8:	2025883a 	mov	r18,r4
  8095cc:	2827883a 	mov	r19,r5
  8095d0:	3021883a 	mov	r16,r6
  8095d4:	20000226 	beq	r4,zero,8095e0 <__swbuf_r+0x30>
  8095d8:	20800e17 	ldw	r2,56(r4)
  8095dc:	10004226 	beq	r2,zero,8096e8 <__swbuf_r+0x138>
  8095e0:	80800617 	ldw	r2,24(r16)
  8095e4:	8100030b 	ldhu	r4,12(r16)
  8095e8:	80800215 	stw	r2,8(r16)
  8095ec:	2080020c 	andi	r2,r4,8
  8095f0:	10003626 	beq	r2,zero,8096cc <__swbuf_r+0x11c>
  8095f4:	80c00417 	ldw	r3,16(r16)
  8095f8:	18003426 	beq	r3,zero,8096cc <__swbuf_r+0x11c>
  8095fc:	2088000c 	andi	r2,r4,8192
  809600:	9c403fcc 	andi	r17,r19,255
  809604:	10001a26 	beq	r2,zero,809670 <__swbuf_r+0xc0>
  809608:	80800017 	ldw	r2,0(r16)
  80960c:	81000517 	ldw	r4,20(r16)
  809610:	10c7c83a 	sub	r3,r2,r3
  809614:	1900200e 	bge	r3,r4,809698 <__swbuf_r+0xe8>
  809618:	18c00044 	addi	r3,r3,1
  80961c:	81000217 	ldw	r4,8(r16)
  809620:	11400044 	addi	r5,r2,1
  809624:	81400015 	stw	r5,0(r16)
  809628:	213fffc4 	addi	r4,r4,-1
  80962c:	81000215 	stw	r4,8(r16)
  809630:	14c00005 	stb	r19,0(r2)
  809634:	80800517 	ldw	r2,20(r16)
  809638:	10c01e26 	beq	r2,r3,8096b4 <__swbuf_r+0x104>
  80963c:	8080030b 	ldhu	r2,12(r16)
  809640:	1080004c 	andi	r2,r2,1
  809644:	10000226 	beq	r2,zero,809650 <__swbuf_r+0xa0>
  809648:	00800284 	movi	r2,10
  80964c:	88801926 	beq	r17,r2,8096b4 <__swbuf_r+0x104>
  809650:	8805883a 	mov	r2,r17
  809654:	dfc00417 	ldw	ra,16(sp)
  809658:	dcc00317 	ldw	r19,12(sp)
  80965c:	dc800217 	ldw	r18,8(sp)
  809660:	dc400117 	ldw	r17,4(sp)
  809664:	dc000017 	ldw	r16,0(sp)
  809668:	dec00504 	addi	sp,sp,20
  80966c:	f800283a 	ret
  809670:	81401917 	ldw	r5,100(r16)
  809674:	00b7ffc4 	movi	r2,-8193
  809678:	21080014 	ori	r4,r4,8192
  80967c:	2884703a 	and	r2,r5,r2
  809680:	80801915 	stw	r2,100(r16)
  809684:	80800017 	ldw	r2,0(r16)
  809688:	8100030d 	sth	r4,12(r16)
  80968c:	81000517 	ldw	r4,20(r16)
  809690:	10c7c83a 	sub	r3,r2,r3
  809694:	193fe016 	blt	r3,r4,809618 <__alt_data_end+0xff809618>
  809698:	800b883a 	mov	r5,r16
  80969c:	9009883a 	mov	r4,r18
  8096a0:	080433c0 	call	80433c <_fflush_r>
  8096a4:	1000071e 	bne	r2,zero,8096c4 <__swbuf_r+0x114>
  8096a8:	80800017 	ldw	r2,0(r16)
  8096ac:	00c00044 	movi	r3,1
  8096b0:	003fda06 	br	80961c <__alt_data_end+0xff80961c>
  8096b4:	800b883a 	mov	r5,r16
  8096b8:	9009883a 	mov	r4,r18
  8096bc:	080433c0 	call	80433c <_fflush_r>
  8096c0:	103fe326 	beq	r2,zero,809650 <__alt_data_end+0xff809650>
  8096c4:	00bfffc4 	movi	r2,-1
  8096c8:	003fe206 	br	809654 <__alt_data_end+0xff809654>
  8096cc:	800b883a 	mov	r5,r16
  8096d0:	9009883a 	mov	r4,r18
  8096d4:	08027440 	call	802744 <__swsetup_r>
  8096d8:	103ffa1e 	bne	r2,zero,8096c4 <__alt_data_end+0xff8096c4>
  8096dc:	8100030b 	ldhu	r4,12(r16)
  8096e0:	80c00417 	ldw	r3,16(r16)
  8096e4:	003fc506 	br	8095fc <__alt_data_end+0xff8095fc>
  8096e8:	08047180 	call	804718 <__sinit>
  8096ec:	003fbc06 	br	8095e0 <__alt_data_end+0xff8095e0>

008096f0 <__swbuf>:
  8096f0:	00802074 	movhi	r2,129
  8096f4:	10842704 	addi	r2,r2,4252
  8096f8:	280d883a 	mov	r6,r5
  8096fc:	200b883a 	mov	r5,r4
  809700:	11000017 	ldw	r4,0(r2)
  809704:	08095b01 	jmpi	8095b0 <__swbuf_r>

00809708 <_wcrtomb_r>:
  809708:	defff604 	addi	sp,sp,-40
  80970c:	00802074 	movhi	r2,129
  809710:	dc800815 	stw	r18,32(sp)
  809714:	dc400715 	stw	r17,28(sp)
  809718:	dc000615 	stw	r16,24(sp)
  80971c:	10842b04 	addi	r2,r2,4268
  809720:	dfc00915 	stw	ra,36(sp)
  809724:	2021883a 	mov	r16,r4
  809728:	3823883a 	mov	r17,r7
  80972c:	14800017 	ldw	r18,0(r2)
  809730:	28001426 	beq	r5,zero,809784 <_wcrtomb_r+0x7c>
  809734:	d9400415 	stw	r5,16(sp)
  809738:	d9800515 	stw	r6,20(sp)
  80973c:	080525c0 	call	80525c <__locale_charset>
  809740:	d9800517 	ldw	r6,20(sp)
  809744:	d9400417 	ldw	r5,16(sp)
  809748:	100f883a 	mov	r7,r2
  80974c:	dc400015 	stw	r17,0(sp)
  809750:	8009883a 	mov	r4,r16
  809754:	903ee83a 	callr	r18
  809758:	00ffffc4 	movi	r3,-1
  80975c:	10c0031e 	bne	r2,r3,80976c <_wcrtomb_r+0x64>
  809760:	88000015 	stw	zero,0(r17)
  809764:	00c02284 	movi	r3,138
  809768:	80c00015 	stw	r3,0(r16)
  80976c:	dfc00917 	ldw	ra,36(sp)
  809770:	dc800817 	ldw	r18,32(sp)
  809774:	dc400717 	ldw	r17,28(sp)
  809778:	dc000617 	ldw	r16,24(sp)
  80977c:	dec00a04 	addi	sp,sp,40
  809780:	f800283a 	ret
  809784:	080525c0 	call	80525c <__locale_charset>
  809788:	100f883a 	mov	r7,r2
  80978c:	dc400015 	stw	r17,0(sp)
  809790:	000d883a 	mov	r6,zero
  809794:	d9400104 	addi	r5,sp,4
  809798:	8009883a 	mov	r4,r16
  80979c:	903ee83a 	callr	r18
  8097a0:	003fed06 	br	809758 <__alt_data_end+0xff809758>

008097a4 <wcrtomb>:
  8097a4:	defff604 	addi	sp,sp,-40
  8097a8:	00802074 	movhi	r2,129
  8097ac:	dc800615 	stw	r18,24(sp)
  8097b0:	dc400515 	stw	r17,20(sp)
  8097b4:	10842704 	addi	r2,r2,4252
  8097b8:	dfc00915 	stw	ra,36(sp)
  8097bc:	dd000815 	stw	r20,32(sp)
  8097c0:	dcc00715 	stw	r19,28(sp)
  8097c4:	dc000415 	stw	r16,16(sp)
  8097c8:	3025883a 	mov	r18,r6
  8097cc:	14400017 	ldw	r17,0(r2)
  8097d0:	20001926 	beq	r4,zero,809838 <wcrtomb+0x94>
  8097d4:	00802074 	movhi	r2,129
  8097d8:	10842b04 	addi	r2,r2,4268
  8097dc:	15000017 	ldw	r20,0(r2)
  8097e0:	2021883a 	mov	r16,r4
  8097e4:	2827883a 	mov	r19,r5
  8097e8:	080525c0 	call	80525c <__locale_charset>
  8097ec:	100f883a 	mov	r7,r2
  8097f0:	dc800015 	stw	r18,0(sp)
  8097f4:	980d883a 	mov	r6,r19
  8097f8:	800b883a 	mov	r5,r16
  8097fc:	8809883a 	mov	r4,r17
  809800:	a03ee83a 	callr	r20
  809804:	00ffffc4 	movi	r3,-1
  809808:	10c0031e 	bne	r2,r3,809818 <wcrtomb+0x74>
  80980c:	90000015 	stw	zero,0(r18)
  809810:	00c02284 	movi	r3,138
  809814:	88c00015 	stw	r3,0(r17)
  809818:	dfc00917 	ldw	ra,36(sp)
  80981c:	dd000817 	ldw	r20,32(sp)
  809820:	dcc00717 	ldw	r19,28(sp)
  809824:	dc800617 	ldw	r18,24(sp)
  809828:	dc400517 	ldw	r17,20(sp)
  80982c:	dc000417 	ldw	r16,16(sp)
  809830:	dec00a04 	addi	sp,sp,40
  809834:	f800283a 	ret
  809838:	00802074 	movhi	r2,129
  80983c:	10842b04 	addi	r2,r2,4268
  809840:	14000017 	ldw	r16,0(r2)
  809844:	080525c0 	call	80525c <__locale_charset>
  809848:	100f883a 	mov	r7,r2
  80984c:	dc800015 	stw	r18,0(sp)
  809850:	000d883a 	mov	r6,zero
  809854:	d9400104 	addi	r5,sp,4
  809858:	8809883a 	mov	r4,r17
  80985c:	803ee83a 	callr	r16
  809860:	003fe806 	br	809804 <__alt_data_end+0xff809804>

00809864 <__ascii_wctomb>:
  809864:	28000526 	beq	r5,zero,80987c <__ascii_wctomb+0x18>
  809868:	00803fc4 	movi	r2,255
  80986c:	11800536 	bltu	r2,r6,809884 <__ascii_wctomb+0x20>
  809870:	29800005 	stb	r6,0(r5)
  809874:	00800044 	movi	r2,1
  809878:	f800283a 	ret
  80987c:	0005883a 	mov	r2,zero
  809880:	f800283a 	ret
  809884:	00802284 	movi	r2,138
  809888:	20800015 	stw	r2,0(r4)
  80988c:	00bfffc4 	movi	r2,-1
  809890:	f800283a 	ret

00809894 <_wctomb_r>:
  809894:	00802074 	movhi	r2,129
  809898:	defff904 	addi	sp,sp,-28
  80989c:	10842b04 	addi	r2,r2,4268
  8098a0:	dfc00615 	stw	ra,24(sp)
  8098a4:	dc400515 	stw	r17,20(sp)
  8098a8:	dc000415 	stw	r16,16(sp)
  8098ac:	3823883a 	mov	r17,r7
  8098b0:	14000017 	ldw	r16,0(r2)
  8098b4:	d9000115 	stw	r4,4(sp)
  8098b8:	d9400215 	stw	r5,8(sp)
  8098bc:	d9800315 	stw	r6,12(sp)
  8098c0:	080525c0 	call	80525c <__locale_charset>
  8098c4:	d9800317 	ldw	r6,12(sp)
  8098c8:	d9400217 	ldw	r5,8(sp)
  8098cc:	d9000117 	ldw	r4,4(sp)
  8098d0:	100f883a 	mov	r7,r2
  8098d4:	dc400015 	stw	r17,0(sp)
  8098d8:	803ee83a 	callr	r16
  8098dc:	dfc00617 	ldw	ra,24(sp)
  8098e0:	dc400517 	ldw	r17,20(sp)
  8098e4:	dc000417 	ldw	r16,16(sp)
  8098e8:	dec00704 	addi	sp,sp,28
  8098ec:	f800283a 	ret

008098f0 <__udivdi3>:
  8098f0:	defff504 	addi	sp,sp,-44
  8098f4:	dcc00415 	stw	r19,16(sp)
  8098f8:	dc000115 	stw	r16,4(sp)
  8098fc:	dfc00a15 	stw	ra,40(sp)
  809900:	df000915 	stw	fp,36(sp)
  809904:	ddc00815 	stw	r23,32(sp)
  809908:	dd800715 	stw	r22,28(sp)
  80990c:	dd400615 	stw	r21,24(sp)
  809910:	dd000515 	stw	r20,20(sp)
  809914:	dc800315 	stw	r18,12(sp)
  809918:	dc400215 	stw	r17,8(sp)
  80991c:	2027883a 	mov	r19,r4
  809920:	2821883a 	mov	r16,r5
  809924:	3800411e 	bne	r7,zero,809a2c <__udivdi3+0x13c>
  809928:	3023883a 	mov	r17,r6
  80992c:	2025883a 	mov	r18,r4
  809930:	2980522e 	bgeu	r5,r6,809a7c <__udivdi3+0x18c>
  809934:	00bfffd4 	movui	r2,65535
  809938:	282d883a 	mov	r22,r5
  80993c:	1180a836 	bltu	r2,r6,809be0 <__udivdi3+0x2f0>
  809940:	00803fc4 	movi	r2,255
  809944:	1185803a 	cmpltu	r2,r2,r6
  809948:	100490fa 	slli	r2,r2,3
  80994c:	3086d83a 	srl	r3,r6,r2
  809950:	01002074 	movhi	r4,129
  809954:	213d3004 	addi	r4,r4,-2880
  809958:	20c7883a 	add	r3,r4,r3
  80995c:	18c00003 	ldbu	r3,0(r3)
  809960:	1885883a 	add	r2,r3,r2
  809964:	00c00804 	movi	r3,32
  809968:	1887c83a 	sub	r3,r3,r2
  80996c:	18000526 	beq	r3,zero,809984 <__udivdi3+0x94>
  809970:	80e0983a 	sll	r16,r16,r3
  809974:	9884d83a 	srl	r2,r19,r2
  809978:	30e2983a 	sll	r17,r6,r3
  80997c:	98e4983a 	sll	r18,r19,r3
  809980:	142cb03a 	or	r22,r2,r16
  809984:	882ad43a 	srli	r21,r17,16
  809988:	b009883a 	mov	r4,r22
  80998c:	8d3fffcc 	andi	r20,r17,65535
  809990:	a80b883a 	mov	r5,r21
  809994:	080a4fc0 	call	80a4fc <__umodsi3>
  809998:	b009883a 	mov	r4,r22
  80999c:	a80b883a 	mov	r5,r21
  8099a0:	1027883a 	mov	r19,r2
  8099a4:	080a4980 	call	80a498 <__udivsi3>
  8099a8:	102d883a 	mov	r22,r2
  8099ac:	9826943a 	slli	r19,r19,16
  8099b0:	9004d43a 	srli	r2,r18,16
  8099b4:	a5a1383a 	mul	r16,r20,r22
  8099b8:	14c4b03a 	or	r2,r2,r19
  8099bc:	1400052e 	bgeu	r2,r16,8099d4 <__udivdi3+0xe4>
  8099c0:	1445883a 	add	r2,r2,r17
  8099c4:	b0ffffc4 	addi	r3,r22,-1
  8099c8:	14400136 	bltu	r2,r17,8099d0 <__udivdi3+0xe0>
  8099cc:	14012336 	bltu	r2,r16,809e5c <__udivdi3+0x56c>
  8099d0:	182d883a 	mov	r22,r3
  8099d4:	1421c83a 	sub	r16,r2,r16
  8099d8:	a80b883a 	mov	r5,r21
  8099dc:	8009883a 	mov	r4,r16
  8099e0:	080a4fc0 	call	80a4fc <__umodsi3>
  8099e4:	1027883a 	mov	r19,r2
  8099e8:	a80b883a 	mov	r5,r21
  8099ec:	8009883a 	mov	r4,r16
  8099f0:	080a4980 	call	80a498 <__udivsi3>
  8099f4:	9826943a 	slli	r19,r19,16
  8099f8:	a0a9383a 	mul	r20,r20,r2
  8099fc:	94bfffcc 	andi	r18,r18,65535
  809a00:	94e4b03a 	or	r18,r18,r19
  809a04:	9500052e 	bgeu	r18,r20,809a1c <__udivdi3+0x12c>
  809a08:	8ca5883a 	add	r18,r17,r18
  809a0c:	10ffffc4 	addi	r3,r2,-1
  809a10:	9440f136 	bltu	r18,r17,809dd8 <__udivdi3+0x4e8>
  809a14:	9500f02e 	bgeu	r18,r20,809dd8 <__udivdi3+0x4e8>
  809a18:	10bfff84 	addi	r2,r2,-2
  809a1c:	b00c943a 	slli	r6,r22,16
  809a20:	0007883a 	mov	r3,zero
  809a24:	3084b03a 	or	r2,r6,r2
  809a28:	00005906 	br	809b90 <__udivdi3+0x2a0>
  809a2c:	29c05636 	bltu	r5,r7,809b88 <__udivdi3+0x298>
  809a30:	00bfffd4 	movui	r2,65535
  809a34:	11c0622e 	bgeu	r2,r7,809bc0 <__udivdi3+0x2d0>
  809a38:	00804034 	movhi	r2,256
  809a3c:	10bfffc4 	addi	r2,r2,-1
  809a40:	11c0ee36 	bltu	r2,r7,809dfc <__udivdi3+0x50c>
  809a44:	00800404 	movi	r2,16
  809a48:	3886d83a 	srl	r3,r7,r2
  809a4c:	01002074 	movhi	r4,129
  809a50:	213d3004 	addi	r4,r4,-2880
  809a54:	20c7883a 	add	r3,r4,r3
  809a58:	18c00003 	ldbu	r3,0(r3)
  809a5c:	05400804 	movi	r21,32
  809a60:	1885883a 	add	r2,r3,r2
  809a64:	a8abc83a 	sub	r21,r21,r2
  809a68:	a800621e 	bne	r21,zero,809bf4 <__udivdi3+0x304>
  809a6c:	3c00e936 	bltu	r7,r16,809e14 <__udivdi3+0x524>
  809a70:	9985403a 	cmpgeu	r2,r19,r6
  809a74:	0007883a 	mov	r3,zero
  809a78:	00004506 	br	809b90 <__udivdi3+0x2a0>
  809a7c:	3000041e 	bne	r6,zero,809a90 <__udivdi3+0x1a0>
  809a80:	000b883a 	mov	r5,zero
  809a84:	01000044 	movi	r4,1
  809a88:	080a4980 	call	80a498 <__udivsi3>
  809a8c:	1023883a 	mov	r17,r2
  809a90:	00bfffd4 	movui	r2,65535
  809a94:	14404e2e 	bgeu	r2,r17,809bd0 <__udivdi3+0x2e0>
  809a98:	00804034 	movhi	r2,256
  809a9c:	10bfffc4 	addi	r2,r2,-1
  809aa0:	1440d836 	bltu	r2,r17,809e04 <__udivdi3+0x514>
  809aa4:	00800404 	movi	r2,16
  809aa8:	8886d83a 	srl	r3,r17,r2
  809aac:	01002074 	movhi	r4,129
  809ab0:	213d3004 	addi	r4,r4,-2880
  809ab4:	20c7883a 	add	r3,r4,r3
  809ab8:	18c00003 	ldbu	r3,0(r3)
  809abc:	1885883a 	add	r2,r3,r2
  809ac0:	00c00804 	movi	r3,32
  809ac4:	1887c83a 	sub	r3,r3,r2
  809ac8:	18008f1e 	bne	r3,zero,809d08 <__udivdi3+0x418>
  809acc:	882ad43a 	srli	r21,r17,16
  809ad0:	8461c83a 	sub	r16,r16,r17
  809ad4:	8d3fffcc 	andi	r20,r17,65535
  809ad8:	00c00044 	movi	r3,1
  809adc:	8009883a 	mov	r4,r16
  809ae0:	a80b883a 	mov	r5,r21
  809ae4:	d8c00015 	stw	r3,0(sp)
  809ae8:	080a4fc0 	call	80a4fc <__umodsi3>
  809aec:	8009883a 	mov	r4,r16
  809af0:	a80b883a 	mov	r5,r21
  809af4:	1027883a 	mov	r19,r2
  809af8:	080a4980 	call	80a498 <__udivsi3>
  809afc:	9826943a 	slli	r19,r19,16
  809b00:	9008d43a 	srli	r4,r18,16
  809b04:	1521383a 	mul	r16,r2,r20
  809b08:	102d883a 	mov	r22,r2
  809b0c:	24c8b03a 	or	r4,r4,r19
  809b10:	d8c00017 	ldw	r3,0(sp)
  809b14:	2400052e 	bgeu	r4,r16,809b2c <__udivdi3+0x23c>
  809b18:	2449883a 	add	r4,r4,r17
  809b1c:	b0bfffc4 	addi	r2,r22,-1
  809b20:	24400136 	bltu	r4,r17,809b28 <__udivdi3+0x238>
  809b24:	2400ca36 	bltu	r4,r16,809e50 <__udivdi3+0x560>
  809b28:	102d883a 	mov	r22,r2
  809b2c:	2421c83a 	sub	r16,r4,r16
  809b30:	a80b883a 	mov	r5,r21
  809b34:	8009883a 	mov	r4,r16
  809b38:	d8c00015 	stw	r3,0(sp)
  809b3c:	080a4fc0 	call	80a4fc <__umodsi3>
  809b40:	1027883a 	mov	r19,r2
  809b44:	a80b883a 	mov	r5,r21
  809b48:	8009883a 	mov	r4,r16
  809b4c:	080a4980 	call	80a498 <__udivsi3>
  809b50:	9826943a 	slli	r19,r19,16
  809b54:	1529383a 	mul	r20,r2,r20
  809b58:	94bfffcc 	andi	r18,r18,65535
  809b5c:	94e4b03a 	or	r18,r18,r19
  809b60:	d8c00017 	ldw	r3,0(sp)
  809b64:	9500052e 	bgeu	r18,r20,809b7c <__udivdi3+0x28c>
  809b68:	8ca5883a 	add	r18,r17,r18
  809b6c:	113fffc4 	addi	r4,r2,-1
  809b70:	94409736 	bltu	r18,r17,809dd0 <__udivdi3+0x4e0>
  809b74:	9500962e 	bgeu	r18,r20,809dd0 <__udivdi3+0x4e0>
  809b78:	10bfff84 	addi	r2,r2,-2
  809b7c:	b00c943a 	slli	r6,r22,16
  809b80:	3084b03a 	or	r2,r6,r2
  809b84:	00000206 	br	809b90 <__udivdi3+0x2a0>
  809b88:	0007883a 	mov	r3,zero
  809b8c:	0005883a 	mov	r2,zero
  809b90:	dfc00a17 	ldw	ra,40(sp)
  809b94:	df000917 	ldw	fp,36(sp)
  809b98:	ddc00817 	ldw	r23,32(sp)
  809b9c:	dd800717 	ldw	r22,28(sp)
  809ba0:	dd400617 	ldw	r21,24(sp)
  809ba4:	dd000517 	ldw	r20,20(sp)
  809ba8:	dcc00417 	ldw	r19,16(sp)
  809bac:	dc800317 	ldw	r18,12(sp)
  809bb0:	dc400217 	ldw	r17,8(sp)
  809bb4:	dc000117 	ldw	r16,4(sp)
  809bb8:	dec00b04 	addi	sp,sp,44
  809bbc:	f800283a 	ret
  809bc0:	00803fc4 	movi	r2,255
  809bc4:	11c5803a 	cmpltu	r2,r2,r7
  809bc8:	100490fa 	slli	r2,r2,3
  809bcc:	003f9e06 	br	809a48 <__alt_data_end+0xff809a48>
  809bd0:	00803fc4 	movi	r2,255
  809bd4:	1445803a 	cmpltu	r2,r2,r17
  809bd8:	100490fa 	slli	r2,r2,3
  809bdc:	003fb206 	br	809aa8 <__alt_data_end+0xff809aa8>
  809be0:	00804034 	movhi	r2,256
  809be4:	10bfffc4 	addi	r2,r2,-1
  809be8:	11808836 	bltu	r2,r6,809e0c <__udivdi3+0x51c>
  809bec:	00800404 	movi	r2,16
  809bf0:	003f5606 	br	80994c <__alt_data_end+0xff80994c>
  809bf4:	30aed83a 	srl	r23,r6,r2
  809bf8:	3d4e983a 	sll	r7,r7,r21
  809bfc:	80acd83a 	srl	r22,r16,r2
  809c00:	9884d83a 	srl	r2,r19,r2
  809c04:	3deeb03a 	or	r23,r7,r23
  809c08:	b824d43a 	srli	r18,r23,16
  809c0c:	8560983a 	sll	r16,r16,r21
  809c10:	b009883a 	mov	r4,r22
  809c14:	900b883a 	mov	r5,r18
  809c18:	3568983a 	sll	r20,r6,r21
  809c1c:	1420b03a 	or	r16,r2,r16
  809c20:	080a4fc0 	call	80a4fc <__umodsi3>
  809c24:	b009883a 	mov	r4,r22
  809c28:	900b883a 	mov	r5,r18
  809c2c:	1023883a 	mov	r17,r2
  809c30:	080a4980 	call	80a498 <__udivsi3>
  809c34:	8808943a 	slli	r4,r17,16
  809c38:	bf3fffcc 	andi	fp,r23,65535
  809c3c:	8006d43a 	srli	r3,r16,16
  809c40:	e0a3383a 	mul	r17,fp,r2
  809c44:	100d883a 	mov	r6,r2
  809c48:	1906b03a 	or	r3,r3,r4
  809c4c:	1c40042e 	bgeu	r3,r17,809c60 <__udivdi3+0x370>
  809c50:	1dc7883a 	add	r3,r3,r23
  809c54:	10bfffc4 	addi	r2,r2,-1
  809c58:	1dc0752e 	bgeu	r3,r23,809e30 <__udivdi3+0x540>
  809c5c:	100d883a 	mov	r6,r2
  809c60:	1c63c83a 	sub	r17,r3,r17
  809c64:	900b883a 	mov	r5,r18
  809c68:	8809883a 	mov	r4,r17
  809c6c:	d9800015 	stw	r6,0(sp)
  809c70:	080a4fc0 	call	80a4fc <__umodsi3>
  809c74:	102d883a 	mov	r22,r2
  809c78:	8809883a 	mov	r4,r17
  809c7c:	900b883a 	mov	r5,r18
  809c80:	080a4980 	call	80a498 <__udivsi3>
  809c84:	b02c943a 	slli	r22,r22,16
  809c88:	e089383a 	mul	r4,fp,r2
  809c8c:	843fffcc 	andi	r16,r16,65535
  809c90:	85a0b03a 	or	r16,r16,r22
  809c94:	d9800017 	ldw	r6,0(sp)
  809c98:	8100042e 	bgeu	r16,r4,809cac <__udivdi3+0x3bc>
  809c9c:	85e1883a 	add	r16,r16,r23
  809ca0:	10ffffc4 	addi	r3,r2,-1
  809ca4:	85c05e2e 	bgeu	r16,r23,809e20 <__udivdi3+0x530>
  809ca8:	1805883a 	mov	r2,r3
  809cac:	300c943a 	slli	r6,r6,16
  809cb0:	a17fffcc 	andi	r5,r20,65535
  809cb4:	a028d43a 	srli	r20,r20,16
  809cb8:	3084b03a 	or	r2,r6,r2
  809cbc:	10ffffcc 	andi	r3,r2,65535
  809cc0:	100cd43a 	srli	r6,r2,16
  809cc4:	194f383a 	mul	r7,r3,r5
  809cc8:	1d07383a 	mul	r3,r3,r20
  809ccc:	314b383a 	mul	r5,r6,r5
  809cd0:	3810d43a 	srli	r8,r7,16
  809cd4:	8121c83a 	sub	r16,r16,r4
  809cd8:	1947883a 	add	r3,r3,r5
  809cdc:	40c7883a 	add	r3,r8,r3
  809ce0:	350d383a 	mul	r6,r6,r20
  809ce4:	1940022e 	bgeu	r3,r5,809cf0 <__udivdi3+0x400>
  809ce8:	01000074 	movhi	r4,1
  809cec:	310d883a 	add	r6,r6,r4
  809cf0:	1828d43a 	srli	r20,r3,16
  809cf4:	a18d883a 	add	r6,r20,r6
  809cf8:	81803e36 	bltu	r16,r6,809df4 <__udivdi3+0x504>
  809cfc:	81803826 	beq	r16,r6,809de0 <__udivdi3+0x4f0>
  809d00:	0007883a 	mov	r3,zero
  809d04:	003fa206 	br	809b90 <__alt_data_end+0xff809b90>
  809d08:	88e2983a 	sll	r17,r17,r3
  809d0c:	80a8d83a 	srl	r20,r16,r2
  809d10:	80e0983a 	sll	r16,r16,r3
  809d14:	882ad43a 	srli	r21,r17,16
  809d18:	9884d83a 	srl	r2,r19,r2
  809d1c:	a009883a 	mov	r4,r20
  809d20:	a80b883a 	mov	r5,r21
  809d24:	142eb03a 	or	r23,r2,r16
  809d28:	98e4983a 	sll	r18,r19,r3
  809d2c:	080a4fc0 	call	80a4fc <__umodsi3>
  809d30:	a009883a 	mov	r4,r20
  809d34:	a80b883a 	mov	r5,r21
  809d38:	1021883a 	mov	r16,r2
  809d3c:	080a4980 	call	80a498 <__udivsi3>
  809d40:	1039883a 	mov	fp,r2
  809d44:	8d3fffcc 	andi	r20,r17,65535
  809d48:	8020943a 	slli	r16,r16,16
  809d4c:	b804d43a 	srli	r2,r23,16
  809d50:	a72d383a 	mul	r22,r20,fp
  809d54:	1404b03a 	or	r2,r2,r16
  809d58:	1580062e 	bgeu	r2,r22,809d74 <__udivdi3+0x484>
  809d5c:	1445883a 	add	r2,r2,r17
  809d60:	e0ffffc4 	addi	r3,fp,-1
  809d64:	14403836 	bltu	r2,r17,809e48 <__udivdi3+0x558>
  809d68:	1580372e 	bgeu	r2,r22,809e48 <__udivdi3+0x558>
  809d6c:	e73fff84 	addi	fp,fp,-2
  809d70:	1445883a 	add	r2,r2,r17
  809d74:	15adc83a 	sub	r22,r2,r22
  809d78:	a80b883a 	mov	r5,r21
  809d7c:	b009883a 	mov	r4,r22
  809d80:	080a4fc0 	call	80a4fc <__umodsi3>
  809d84:	1027883a 	mov	r19,r2
  809d88:	b009883a 	mov	r4,r22
  809d8c:	a80b883a 	mov	r5,r21
  809d90:	080a4980 	call	80a498 <__udivsi3>
  809d94:	9826943a 	slli	r19,r19,16
  809d98:	a0a1383a 	mul	r16,r20,r2
  809d9c:	b93fffcc 	andi	r4,r23,65535
  809da0:	24c8b03a 	or	r4,r4,r19
  809da4:	2400062e 	bgeu	r4,r16,809dc0 <__udivdi3+0x4d0>
  809da8:	2449883a 	add	r4,r4,r17
  809dac:	10ffffc4 	addi	r3,r2,-1
  809db0:	24402336 	bltu	r4,r17,809e40 <__udivdi3+0x550>
  809db4:	2400222e 	bgeu	r4,r16,809e40 <__udivdi3+0x550>
  809db8:	10bfff84 	addi	r2,r2,-2
  809dbc:	2449883a 	add	r4,r4,r17
  809dc0:	e038943a 	slli	fp,fp,16
  809dc4:	2421c83a 	sub	r16,r4,r16
  809dc8:	e086b03a 	or	r3,fp,r2
  809dcc:	003f4306 	br	809adc <__alt_data_end+0xff809adc>
  809dd0:	2005883a 	mov	r2,r4
  809dd4:	003f6906 	br	809b7c <__alt_data_end+0xff809b7c>
  809dd8:	1805883a 	mov	r2,r3
  809ddc:	003f0f06 	br	809a1c <__alt_data_end+0xff809a1c>
  809de0:	1806943a 	slli	r3,r3,16
  809de4:	9d66983a 	sll	r19,r19,r21
  809de8:	39ffffcc 	andi	r7,r7,65535
  809dec:	19c7883a 	add	r3,r3,r7
  809df0:	98ffc32e 	bgeu	r19,r3,809d00 <__alt_data_end+0xff809d00>
  809df4:	10bfffc4 	addi	r2,r2,-1
  809df8:	003fc106 	br	809d00 <__alt_data_end+0xff809d00>
  809dfc:	00800604 	movi	r2,24
  809e00:	003f1106 	br	809a48 <__alt_data_end+0xff809a48>
  809e04:	00800604 	movi	r2,24
  809e08:	003f2706 	br	809aa8 <__alt_data_end+0xff809aa8>
  809e0c:	00800604 	movi	r2,24
  809e10:	003ece06 	br	80994c <__alt_data_end+0xff80994c>
  809e14:	0007883a 	mov	r3,zero
  809e18:	00800044 	movi	r2,1
  809e1c:	003f5c06 	br	809b90 <__alt_data_end+0xff809b90>
  809e20:	813fa12e 	bgeu	r16,r4,809ca8 <__alt_data_end+0xff809ca8>
  809e24:	10bfff84 	addi	r2,r2,-2
  809e28:	85e1883a 	add	r16,r16,r23
  809e2c:	003f9f06 	br	809cac <__alt_data_end+0xff809cac>
  809e30:	1c7f8a2e 	bgeu	r3,r17,809c5c <__alt_data_end+0xff809c5c>
  809e34:	31bfff84 	addi	r6,r6,-2
  809e38:	1dc7883a 	add	r3,r3,r23
  809e3c:	003f8806 	br	809c60 <__alt_data_end+0xff809c60>
  809e40:	1805883a 	mov	r2,r3
  809e44:	003fde06 	br	809dc0 <__alt_data_end+0xff809dc0>
  809e48:	1839883a 	mov	fp,r3
  809e4c:	003fc906 	br	809d74 <__alt_data_end+0xff809d74>
  809e50:	b5bfff84 	addi	r22,r22,-2
  809e54:	2449883a 	add	r4,r4,r17
  809e58:	003f3406 	br	809b2c <__alt_data_end+0xff809b2c>
  809e5c:	b5bfff84 	addi	r22,r22,-2
  809e60:	1445883a 	add	r2,r2,r17
  809e64:	003edb06 	br	8099d4 <__alt_data_end+0xff8099d4>

00809e68 <__umoddi3>:
  809e68:	defff404 	addi	sp,sp,-48
  809e6c:	df000a15 	stw	fp,40(sp)
  809e70:	dc400315 	stw	r17,12(sp)
  809e74:	dc000215 	stw	r16,8(sp)
  809e78:	dfc00b15 	stw	ra,44(sp)
  809e7c:	ddc00915 	stw	r23,36(sp)
  809e80:	dd800815 	stw	r22,32(sp)
  809e84:	dd400715 	stw	r21,28(sp)
  809e88:	dd000615 	stw	r20,24(sp)
  809e8c:	dcc00515 	stw	r19,20(sp)
  809e90:	dc800415 	stw	r18,16(sp)
  809e94:	2021883a 	mov	r16,r4
  809e98:	2823883a 	mov	r17,r5
  809e9c:	2839883a 	mov	fp,r5
  809ea0:	38003c1e 	bne	r7,zero,809f94 <__umoddi3+0x12c>
  809ea4:	3027883a 	mov	r19,r6
  809ea8:	2029883a 	mov	r20,r4
  809eac:	2980512e 	bgeu	r5,r6,809ff4 <__umoddi3+0x18c>
  809eb0:	00bfffd4 	movui	r2,65535
  809eb4:	11809a36 	bltu	r2,r6,80a120 <__umoddi3+0x2b8>
  809eb8:	01003fc4 	movi	r4,255
  809ebc:	2189803a 	cmpltu	r4,r4,r6
  809ec0:	200890fa 	slli	r4,r4,3
  809ec4:	3104d83a 	srl	r2,r6,r4
  809ec8:	00c02074 	movhi	r3,129
  809ecc:	18fd3004 	addi	r3,r3,-2880
  809ed0:	1885883a 	add	r2,r3,r2
  809ed4:	10c00003 	ldbu	r3,0(r2)
  809ed8:	00800804 	movi	r2,32
  809edc:	1909883a 	add	r4,r3,r4
  809ee0:	1125c83a 	sub	r18,r2,r4
  809ee4:	90000526 	beq	r18,zero,809efc <__umoddi3+0x94>
  809ee8:	8ca2983a 	sll	r17,r17,r18
  809eec:	8108d83a 	srl	r4,r16,r4
  809ef0:	34a6983a 	sll	r19,r6,r18
  809ef4:	84a8983a 	sll	r20,r16,r18
  809ef8:	2478b03a 	or	fp,r4,r17
  809efc:	982ed43a 	srli	r23,r19,16
  809f00:	e009883a 	mov	r4,fp
  809f04:	9dbfffcc 	andi	r22,r19,65535
  809f08:	b80b883a 	mov	r5,r23
  809f0c:	080a4fc0 	call	80a4fc <__umodsi3>
  809f10:	e009883a 	mov	r4,fp
  809f14:	b80b883a 	mov	r5,r23
  809f18:	102b883a 	mov	r21,r2
  809f1c:	080a4980 	call	80a498 <__udivsi3>
  809f20:	a806943a 	slli	r3,r21,16
  809f24:	a008d43a 	srli	r4,r20,16
  809f28:	b085383a 	mul	r2,r22,r2
  809f2c:	20c8b03a 	or	r4,r4,r3
  809f30:	2080032e 	bgeu	r4,r2,809f40 <__umoddi3+0xd8>
  809f34:	24c9883a 	add	r4,r4,r19
  809f38:	24c00136 	bltu	r4,r19,809f40 <__umoddi3+0xd8>
  809f3c:	20811036 	bltu	r4,r2,80a380 <__umoddi3+0x518>
  809f40:	20abc83a 	sub	r21,r4,r2
  809f44:	b80b883a 	mov	r5,r23
  809f48:	a809883a 	mov	r4,r21
  809f4c:	080a4fc0 	call	80a4fc <__umodsi3>
  809f50:	1023883a 	mov	r17,r2
  809f54:	b80b883a 	mov	r5,r23
  809f58:	a809883a 	mov	r4,r21
  809f5c:	080a4980 	call	80a498 <__udivsi3>
  809f60:	8822943a 	slli	r17,r17,16
  809f64:	b085383a 	mul	r2,r22,r2
  809f68:	a0ffffcc 	andi	r3,r20,65535
  809f6c:	1c46b03a 	or	r3,r3,r17
  809f70:	1880042e 	bgeu	r3,r2,809f84 <__umoddi3+0x11c>
  809f74:	1cc7883a 	add	r3,r3,r19
  809f78:	1cc00236 	bltu	r3,r19,809f84 <__umoddi3+0x11c>
  809f7c:	1880012e 	bgeu	r3,r2,809f84 <__umoddi3+0x11c>
  809f80:	1cc7883a 	add	r3,r3,r19
  809f84:	1885c83a 	sub	r2,r3,r2
  809f88:	1484d83a 	srl	r2,r2,r18
  809f8c:	0007883a 	mov	r3,zero
  809f90:	00004f06 	br	80a0d0 <__umoddi3+0x268>
  809f94:	29c04c36 	bltu	r5,r7,80a0c8 <__umoddi3+0x260>
  809f98:	00bfffd4 	movui	r2,65535
  809f9c:	11c0582e 	bgeu	r2,r7,80a100 <__umoddi3+0x298>
  809fa0:	00804034 	movhi	r2,256
  809fa4:	10bfffc4 	addi	r2,r2,-1
  809fa8:	11c0e736 	bltu	r2,r7,80a348 <__umoddi3+0x4e0>
  809fac:	01000404 	movi	r4,16
  809fb0:	3904d83a 	srl	r2,r7,r4
  809fb4:	00c02074 	movhi	r3,129
  809fb8:	18fd3004 	addi	r3,r3,-2880
  809fbc:	1885883a 	add	r2,r3,r2
  809fc0:	14c00003 	ldbu	r19,0(r2)
  809fc4:	00c00804 	movi	r3,32
  809fc8:	9927883a 	add	r19,r19,r4
  809fcc:	1ce9c83a 	sub	r20,r3,r19
  809fd0:	a000581e 	bne	r20,zero,80a134 <__umoddi3+0x2cc>
  809fd4:	3c400136 	bltu	r7,r17,809fdc <__umoddi3+0x174>
  809fd8:	8180eb36 	bltu	r16,r6,80a388 <__umoddi3+0x520>
  809fdc:	8185c83a 	sub	r2,r16,r6
  809fe0:	89e3c83a 	sub	r17,r17,r7
  809fe4:	8089803a 	cmpltu	r4,r16,r2
  809fe8:	8939c83a 	sub	fp,r17,r4
  809fec:	e007883a 	mov	r3,fp
  809ff0:	00003706 	br	80a0d0 <__umoddi3+0x268>
  809ff4:	3000041e 	bne	r6,zero,80a008 <__umoddi3+0x1a0>
  809ff8:	000b883a 	mov	r5,zero
  809ffc:	01000044 	movi	r4,1
  80a000:	080a4980 	call	80a498 <__udivsi3>
  80a004:	1027883a 	mov	r19,r2
  80a008:	00bfffd4 	movui	r2,65535
  80a00c:	14c0402e 	bgeu	r2,r19,80a110 <__umoddi3+0x2a8>
  80a010:	00804034 	movhi	r2,256
  80a014:	10bfffc4 	addi	r2,r2,-1
  80a018:	14c0cd36 	bltu	r2,r19,80a350 <__umoddi3+0x4e8>
  80a01c:	00800404 	movi	r2,16
  80a020:	9886d83a 	srl	r3,r19,r2
  80a024:	01002074 	movhi	r4,129
  80a028:	213d3004 	addi	r4,r4,-2880
  80a02c:	20c7883a 	add	r3,r4,r3
  80a030:	18c00003 	ldbu	r3,0(r3)
  80a034:	1887883a 	add	r3,r3,r2
  80a038:	00800804 	movi	r2,32
  80a03c:	10e5c83a 	sub	r18,r2,r3
  80a040:	9000901e 	bne	r18,zero,80a284 <__umoddi3+0x41c>
  80a044:	982cd43a 	srli	r22,r19,16
  80a048:	8ce3c83a 	sub	r17,r17,r19
  80a04c:	9d7fffcc 	andi	r21,r19,65535
  80a050:	b00b883a 	mov	r5,r22
  80a054:	8809883a 	mov	r4,r17
  80a058:	080a4fc0 	call	80a4fc <__umodsi3>
  80a05c:	8809883a 	mov	r4,r17
  80a060:	b00b883a 	mov	r5,r22
  80a064:	1021883a 	mov	r16,r2
  80a068:	080a4980 	call	80a498 <__udivsi3>
  80a06c:	8006943a 	slli	r3,r16,16
  80a070:	a008d43a 	srli	r4,r20,16
  80a074:	1545383a 	mul	r2,r2,r21
  80a078:	20c8b03a 	or	r4,r4,r3
  80a07c:	2080042e 	bgeu	r4,r2,80a090 <__umoddi3+0x228>
  80a080:	24c9883a 	add	r4,r4,r19
  80a084:	24c00236 	bltu	r4,r19,80a090 <__umoddi3+0x228>
  80a088:	2080012e 	bgeu	r4,r2,80a090 <__umoddi3+0x228>
  80a08c:	24c9883a 	add	r4,r4,r19
  80a090:	20a1c83a 	sub	r16,r4,r2
  80a094:	b00b883a 	mov	r5,r22
  80a098:	8009883a 	mov	r4,r16
  80a09c:	080a4fc0 	call	80a4fc <__umodsi3>
  80a0a0:	1023883a 	mov	r17,r2
  80a0a4:	b00b883a 	mov	r5,r22
  80a0a8:	8009883a 	mov	r4,r16
  80a0ac:	080a4980 	call	80a498 <__udivsi3>
  80a0b0:	8822943a 	slli	r17,r17,16
  80a0b4:	1545383a 	mul	r2,r2,r21
  80a0b8:	a53fffcc 	andi	r20,r20,65535
  80a0bc:	a446b03a 	or	r3,r20,r17
  80a0c0:	18bfb02e 	bgeu	r3,r2,809f84 <__alt_data_end+0xff809f84>
  80a0c4:	003fab06 	br	809f74 <__alt_data_end+0xff809f74>
  80a0c8:	2005883a 	mov	r2,r4
  80a0cc:	2807883a 	mov	r3,r5
  80a0d0:	dfc00b17 	ldw	ra,44(sp)
  80a0d4:	df000a17 	ldw	fp,40(sp)
  80a0d8:	ddc00917 	ldw	r23,36(sp)
  80a0dc:	dd800817 	ldw	r22,32(sp)
  80a0e0:	dd400717 	ldw	r21,28(sp)
  80a0e4:	dd000617 	ldw	r20,24(sp)
  80a0e8:	dcc00517 	ldw	r19,20(sp)
  80a0ec:	dc800417 	ldw	r18,16(sp)
  80a0f0:	dc400317 	ldw	r17,12(sp)
  80a0f4:	dc000217 	ldw	r16,8(sp)
  80a0f8:	dec00c04 	addi	sp,sp,48
  80a0fc:	f800283a 	ret
  80a100:	04c03fc4 	movi	r19,255
  80a104:	99c9803a 	cmpltu	r4,r19,r7
  80a108:	200890fa 	slli	r4,r4,3
  80a10c:	003fa806 	br	809fb0 <__alt_data_end+0xff809fb0>
  80a110:	00803fc4 	movi	r2,255
  80a114:	14c5803a 	cmpltu	r2,r2,r19
  80a118:	100490fa 	slli	r2,r2,3
  80a11c:	003fc006 	br	80a020 <__alt_data_end+0xff80a020>
  80a120:	00804034 	movhi	r2,256
  80a124:	10bfffc4 	addi	r2,r2,-1
  80a128:	11808b36 	bltu	r2,r6,80a358 <__umoddi3+0x4f0>
  80a12c:	01000404 	movi	r4,16
  80a130:	003f6406 	br	809ec4 <__alt_data_end+0xff809ec4>
  80a134:	34c4d83a 	srl	r2,r6,r19
  80a138:	3d0e983a 	sll	r7,r7,r20
  80a13c:	8cf8d83a 	srl	fp,r17,r19
  80a140:	8d10983a 	sll	r8,r17,r20
  80a144:	38aab03a 	or	r21,r7,r2
  80a148:	a82cd43a 	srli	r22,r21,16
  80a14c:	84e2d83a 	srl	r17,r16,r19
  80a150:	e009883a 	mov	r4,fp
  80a154:	b00b883a 	mov	r5,r22
  80a158:	8a22b03a 	or	r17,r17,r8
  80a15c:	3524983a 	sll	r18,r6,r20
  80a160:	080a4fc0 	call	80a4fc <__umodsi3>
  80a164:	e009883a 	mov	r4,fp
  80a168:	b00b883a 	mov	r5,r22
  80a16c:	102f883a 	mov	r23,r2
  80a170:	080a4980 	call	80a498 <__udivsi3>
  80a174:	100d883a 	mov	r6,r2
  80a178:	b808943a 	slli	r4,r23,16
  80a17c:	aa3fffcc 	andi	r8,r21,65535
  80a180:	8804d43a 	srli	r2,r17,16
  80a184:	41af383a 	mul	r23,r8,r6
  80a188:	8520983a 	sll	r16,r16,r20
  80a18c:	1104b03a 	or	r2,r2,r4
  80a190:	15c0042e 	bgeu	r2,r23,80a1a4 <__umoddi3+0x33c>
  80a194:	1545883a 	add	r2,r2,r21
  80a198:	30ffffc4 	addi	r3,r6,-1
  80a19c:	1540742e 	bgeu	r2,r21,80a370 <__umoddi3+0x508>
  80a1a0:	180d883a 	mov	r6,r3
  80a1a4:	15efc83a 	sub	r23,r2,r23
  80a1a8:	b00b883a 	mov	r5,r22
  80a1ac:	b809883a 	mov	r4,r23
  80a1b0:	d9800115 	stw	r6,4(sp)
  80a1b4:	da000015 	stw	r8,0(sp)
  80a1b8:	080a4fc0 	call	80a4fc <__umodsi3>
  80a1bc:	b00b883a 	mov	r5,r22
  80a1c0:	b809883a 	mov	r4,r23
  80a1c4:	1039883a 	mov	fp,r2
  80a1c8:	080a4980 	call	80a498 <__udivsi3>
  80a1cc:	da000017 	ldw	r8,0(sp)
  80a1d0:	e038943a 	slli	fp,fp,16
  80a1d4:	100b883a 	mov	r5,r2
  80a1d8:	4089383a 	mul	r4,r8,r2
  80a1dc:	8a3fffcc 	andi	r8,r17,65535
  80a1e0:	4710b03a 	or	r8,r8,fp
  80a1e4:	d9800117 	ldw	r6,4(sp)
  80a1e8:	4100042e 	bgeu	r8,r4,80a1fc <__umoddi3+0x394>
  80a1ec:	4551883a 	add	r8,r8,r21
  80a1f0:	10bfffc4 	addi	r2,r2,-1
  80a1f4:	45405a2e 	bgeu	r8,r21,80a360 <__umoddi3+0x4f8>
  80a1f8:	100b883a 	mov	r5,r2
  80a1fc:	300c943a 	slli	r6,r6,16
  80a200:	91ffffcc 	andi	r7,r18,65535
  80a204:	9004d43a 	srli	r2,r18,16
  80a208:	314cb03a 	or	r6,r6,r5
  80a20c:	317fffcc 	andi	r5,r6,65535
  80a210:	300cd43a 	srli	r6,r6,16
  80a214:	29d3383a 	mul	r9,r5,r7
  80a218:	288b383a 	mul	r5,r5,r2
  80a21c:	31cf383a 	mul	r7,r6,r7
  80a220:	4806d43a 	srli	r3,r9,16
  80a224:	4111c83a 	sub	r8,r8,r4
  80a228:	29cb883a 	add	r5,r5,r7
  80a22c:	194b883a 	add	r5,r3,r5
  80a230:	3085383a 	mul	r2,r6,r2
  80a234:	29c0022e 	bgeu	r5,r7,80a240 <__umoddi3+0x3d8>
  80a238:	00c00074 	movhi	r3,1
  80a23c:	10c5883a 	add	r2,r2,r3
  80a240:	2808d43a 	srli	r4,r5,16
  80a244:	280a943a 	slli	r5,r5,16
  80a248:	4a7fffcc 	andi	r9,r9,65535
  80a24c:	2085883a 	add	r2,r4,r2
  80a250:	2a4b883a 	add	r5,r5,r9
  80a254:	40803636 	bltu	r8,r2,80a330 <__umoddi3+0x4c8>
  80a258:	40804d26 	beq	r8,r2,80a390 <__umoddi3+0x528>
  80a25c:	4089c83a 	sub	r4,r8,r2
  80a260:	280f883a 	mov	r7,r5
  80a264:	81cfc83a 	sub	r7,r16,r7
  80a268:	81c7803a 	cmpltu	r3,r16,r7
  80a26c:	20c7c83a 	sub	r3,r4,r3
  80a270:	1cc4983a 	sll	r2,r3,r19
  80a274:	3d0ed83a 	srl	r7,r7,r20
  80a278:	1d06d83a 	srl	r3,r3,r20
  80a27c:	11c4b03a 	or	r2,r2,r7
  80a280:	003f9306 	br	80a0d0 <__alt_data_end+0xff80a0d0>
  80a284:	9ca6983a 	sll	r19,r19,r18
  80a288:	88e8d83a 	srl	r20,r17,r3
  80a28c:	80c4d83a 	srl	r2,r16,r3
  80a290:	982cd43a 	srli	r22,r19,16
  80a294:	8ca2983a 	sll	r17,r17,r18
  80a298:	a009883a 	mov	r4,r20
  80a29c:	b00b883a 	mov	r5,r22
  80a2a0:	1478b03a 	or	fp,r2,r17
  80a2a4:	080a4fc0 	call	80a4fc <__umodsi3>
  80a2a8:	a009883a 	mov	r4,r20
  80a2ac:	b00b883a 	mov	r5,r22
  80a2b0:	1023883a 	mov	r17,r2
  80a2b4:	080a4980 	call	80a498 <__udivsi3>
  80a2b8:	9d7fffcc 	andi	r21,r19,65535
  80a2bc:	880a943a 	slli	r5,r17,16
  80a2c0:	e008d43a 	srli	r4,fp,16
  80a2c4:	a885383a 	mul	r2,r21,r2
  80a2c8:	84a8983a 	sll	r20,r16,r18
  80a2cc:	2148b03a 	or	r4,r4,r5
  80a2d0:	2080042e 	bgeu	r4,r2,80a2e4 <__umoddi3+0x47c>
  80a2d4:	24c9883a 	add	r4,r4,r19
  80a2d8:	24c00236 	bltu	r4,r19,80a2e4 <__umoddi3+0x47c>
  80a2dc:	2080012e 	bgeu	r4,r2,80a2e4 <__umoddi3+0x47c>
  80a2e0:	24c9883a 	add	r4,r4,r19
  80a2e4:	20a3c83a 	sub	r17,r4,r2
  80a2e8:	b00b883a 	mov	r5,r22
  80a2ec:	8809883a 	mov	r4,r17
  80a2f0:	080a4fc0 	call	80a4fc <__umodsi3>
  80a2f4:	102f883a 	mov	r23,r2
  80a2f8:	8809883a 	mov	r4,r17
  80a2fc:	b00b883a 	mov	r5,r22
  80a300:	080a4980 	call	80a498 <__udivsi3>
  80a304:	b82e943a 	slli	r23,r23,16
  80a308:	a885383a 	mul	r2,r21,r2
  80a30c:	e13fffcc 	andi	r4,fp,65535
  80a310:	25c8b03a 	or	r4,r4,r23
  80a314:	2080042e 	bgeu	r4,r2,80a328 <__umoddi3+0x4c0>
  80a318:	24c9883a 	add	r4,r4,r19
  80a31c:	24c00236 	bltu	r4,r19,80a328 <__umoddi3+0x4c0>
  80a320:	2080012e 	bgeu	r4,r2,80a328 <__umoddi3+0x4c0>
  80a324:	24c9883a 	add	r4,r4,r19
  80a328:	20a3c83a 	sub	r17,r4,r2
  80a32c:	003f4806 	br	80a050 <__alt_data_end+0xff80a050>
  80a330:	2c8fc83a 	sub	r7,r5,r18
  80a334:	1545c83a 	sub	r2,r2,r21
  80a338:	29cb803a 	cmpltu	r5,r5,r7
  80a33c:	1145c83a 	sub	r2,r2,r5
  80a340:	4089c83a 	sub	r4,r8,r2
  80a344:	003fc706 	br	80a264 <__alt_data_end+0xff80a264>
  80a348:	01000604 	movi	r4,24
  80a34c:	003f1806 	br	809fb0 <__alt_data_end+0xff809fb0>
  80a350:	00800604 	movi	r2,24
  80a354:	003f3206 	br	80a020 <__alt_data_end+0xff80a020>
  80a358:	01000604 	movi	r4,24
  80a35c:	003ed906 	br	809ec4 <__alt_data_end+0xff809ec4>
  80a360:	413fa52e 	bgeu	r8,r4,80a1f8 <__alt_data_end+0xff80a1f8>
  80a364:	297fff84 	addi	r5,r5,-2
  80a368:	4551883a 	add	r8,r8,r21
  80a36c:	003fa306 	br	80a1fc <__alt_data_end+0xff80a1fc>
  80a370:	15ff8b2e 	bgeu	r2,r23,80a1a0 <__alt_data_end+0xff80a1a0>
  80a374:	31bfff84 	addi	r6,r6,-2
  80a378:	1545883a 	add	r2,r2,r21
  80a37c:	003f8906 	br	80a1a4 <__alt_data_end+0xff80a1a4>
  80a380:	24c9883a 	add	r4,r4,r19
  80a384:	003eee06 	br	809f40 <__alt_data_end+0xff809f40>
  80a388:	8005883a 	mov	r2,r16
  80a38c:	003f1706 	br	809fec <__alt_data_end+0xff809fec>
  80a390:	817fe736 	bltu	r16,r5,80a330 <__alt_data_end+0xff80a330>
  80a394:	280f883a 	mov	r7,r5
  80a398:	0009883a 	mov	r4,zero
  80a39c:	003fb106 	br	80a264 <__alt_data_end+0xff80a264>

0080a3a0 <__divsi3>:
  80a3a0:	20001b16 	blt	r4,zero,80a410 <__divsi3+0x70>
  80a3a4:	000f883a 	mov	r7,zero
  80a3a8:	28001616 	blt	r5,zero,80a404 <__divsi3+0x64>
  80a3ac:	200d883a 	mov	r6,r4
  80a3b0:	29001a2e 	bgeu	r5,r4,80a41c <__divsi3+0x7c>
  80a3b4:	00800804 	movi	r2,32
  80a3b8:	00c00044 	movi	r3,1
  80a3bc:	00000106 	br	80a3c4 <__divsi3+0x24>
  80a3c0:	10000d26 	beq	r2,zero,80a3f8 <__divsi3+0x58>
  80a3c4:	294b883a 	add	r5,r5,r5
  80a3c8:	10bfffc4 	addi	r2,r2,-1
  80a3cc:	18c7883a 	add	r3,r3,r3
  80a3d0:	293ffb36 	bltu	r5,r4,80a3c0 <__alt_data_end+0xff80a3c0>
  80a3d4:	0005883a 	mov	r2,zero
  80a3d8:	18000726 	beq	r3,zero,80a3f8 <__divsi3+0x58>
  80a3dc:	0005883a 	mov	r2,zero
  80a3e0:	31400236 	bltu	r6,r5,80a3ec <__divsi3+0x4c>
  80a3e4:	314dc83a 	sub	r6,r6,r5
  80a3e8:	10c4b03a 	or	r2,r2,r3
  80a3ec:	1806d07a 	srli	r3,r3,1
  80a3f0:	280ad07a 	srli	r5,r5,1
  80a3f4:	183ffa1e 	bne	r3,zero,80a3e0 <__alt_data_end+0xff80a3e0>
  80a3f8:	38000126 	beq	r7,zero,80a400 <__divsi3+0x60>
  80a3fc:	0085c83a 	sub	r2,zero,r2
  80a400:	f800283a 	ret
  80a404:	014bc83a 	sub	r5,zero,r5
  80a408:	39c0005c 	xori	r7,r7,1
  80a40c:	003fe706 	br	80a3ac <__alt_data_end+0xff80a3ac>
  80a410:	0109c83a 	sub	r4,zero,r4
  80a414:	01c00044 	movi	r7,1
  80a418:	003fe306 	br	80a3a8 <__alt_data_end+0xff80a3a8>
  80a41c:	00c00044 	movi	r3,1
  80a420:	003fee06 	br	80a3dc <__alt_data_end+0xff80a3dc>

0080a424 <__modsi3>:
  80a424:	20001716 	blt	r4,zero,80a484 <__modsi3+0x60>
  80a428:	000f883a 	mov	r7,zero
  80a42c:	2005883a 	mov	r2,r4
  80a430:	28001216 	blt	r5,zero,80a47c <__modsi3+0x58>
  80a434:	2900162e 	bgeu	r5,r4,80a490 <__modsi3+0x6c>
  80a438:	01800804 	movi	r6,32
  80a43c:	00c00044 	movi	r3,1
  80a440:	00000106 	br	80a448 <__modsi3+0x24>
  80a444:	30000a26 	beq	r6,zero,80a470 <__modsi3+0x4c>
  80a448:	294b883a 	add	r5,r5,r5
  80a44c:	31bfffc4 	addi	r6,r6,-1
  80a450:	18c7883a 	add	r3,r3,r3
  80a454:	293ffb36 	bltu	r5,r4,80a444 <__alt_data_end+0xff80a444>
  80a458:	18000526 	beq	r3,zero,80a470 <__modsi3+0x4c>
  80a45c:	1806d07a 	srli	r3,r3,1
  80a460:	11400136 	bltu	r2,r5,80a468 <__modsi3+0x44>
  80a464:	1145c83a 	sub	r2,r2,r5
  80a468:	280ad07a 	srli	r5,r5,1
  80a46c:	183ffb1e 	bne	r3,zero,80a45c <__alt_data_end+0xff80a45c>
  80a470:	38000126 	beq	r7,zero,80a478 <__modsi3+0x54>
  80a474:	0085c83a 	sub	r2,zero,r2
  80a478:	f800283a 	ret
  80a47c:	014bc83a 	sub	r5,zero,r5
  80a480:	003fec06 	br	80a434 <__alt_data_end+0xff80a434>
  80a484:	0109c83a 	sub	r4,zero,r4
  80a488:	01c00044 	movi	r7,1
  80a48c:	003fe706 	br	80a42c <__alt_data_end+0xff80a42c>
  80a490:	00c00044 	movi	r3,1
  80a494:	003ff106 	br	80a45c <__alt_data_end+0xff80a45c>

0080a498 <__udivsi3>:
  80a498:	200d883a 	mov	r6,r4
  80a49c:	2900152e 	bgeu	r5,r4,80a4f4 <__udivsi3+0x5c>
  80a4a0:	28001416 	blt	r5,zero,80a4f4 <__udivsi3+0x5c>
  80a4a4:	00800804 	movi	r2,32
  80a4a8:	00c00044 	movi	r3,1
  80a4ac:	00000206 	br	80a4b8 <__udivsi3+0x20>
  80a4b0:	10000e26 	beq	r2,zero,80a4ec <__udivsi3+0x54>
  80a4b4:	28000516 	blt	r5,zero,80a4cc <__udivsi3+0x34>
  80a4b8:	294b883a 	add	r5,r5,r5
  80a4bc:	10bfffc4 	addi	r2,r2,-1
  80a4c0:	18c7883a 	add	r3,r3,r3
  80a4c4:	293ffa36 	bltu	r5,r4,80a4b0 <__alt_data_end+0xff80a4b0>
  80a4c8:	18000826 	beq	r3,zero,80a4ec <__udivsi3+0x54>
  80a4cc:	0005883a 	mov	r2,zero
  80a4d0:	31400236 	bltu	r6,r5,80a4dc <__udivsi3+0x44>
  80a4d4:	314dc83a 	sub	r6,r6,r5
  80a4d8:	10c4b03a 	or	r2,r2,r3
  80a4dc:	1806d07a 	srli	r3,r3,1
  80a4e0:	280ad07a 	srli	r5,r5,1
  80a4e4:	183ffa1e 	bne	r3,zero,80a4d0 <__alt_data_end+0xff80a4d0>
  80a4e8:	f800283a 	ret
  80a4ec:	0005883a 	mov	r2,zero
  80a4f0:	f800283a 	ret
  80a4f4:	00c00044 	movi	r3,1
  80a4f8:	003ff406 	br	80a4cc <__alt_data_end+0xff80a4cc>

0080a4fc <__umodsi3>:
  80a4fc:	2005883a 	mov	r2,r4
  80a500:	2900122e 	bgeu	r5,r4,80a54c <__umodsi3+0x50>
  80a504:	28001116 	blt	r5,zero,80a54c <__umodsi3+0x50>
  80a508:	01800804 	movi	r6,32
  80a50c:	00c00044 	movi	r3,1
  80a510:	00000206 	br	80a51c <__umodsi3+0x20>
  80a514:	30000c26 	beq	r6,zero,80a548 <__umodsi3+0x4c>
  80a518:	28000516 	blt	r5,zero,80a530 <__umodsi3+0x34>
  80a51c:	294b883a 	add	r5,r5,r5
  80a520:	31bfffc4 	addi	r6,r6,-1
  80a524:	18c7883a 	add	r3,r3,r3
  80a528:	293ffa36 	bltu	r5,r4,80a514 <__alt_data_end+0xff80a514>
  80a52c:	18000626 	beq	r3,zero,80a548 <__umodsi3+0x4c>
  80a530:	1806d07a 	srli	r3,r3,1
  80a534:	11400136 	bltu	r2,r5,80a53c <__umodsi3+0x40>
  80a538:	1145c83a 	sub	r2,r2,r5
  80a53c:	280ad07a 	srli	r5,r5,1
  80a540:	183ffb1e 	bne	r3,zero,80a530 <__alt_data_end+0xff80a530>
  80a544:	f800283a 	ret
  80a548:	f800283a 	ret
  80a54c:	00c00044 	movi	r3,1
  80a550:	003ff706 	br	80a530 <__alt_data_end+0xff80a530>

0080a554 <__adddf3>:
  80a554:	02c00434 	movhi	r11,16
  80a558:	5affffc4 	addi	r11,r11,-1
  80a55c:	2806d7fa 	srli	r3,r5,31
  80a560:	2ad4703a 	and	r10,r5,r11
  80a564:	3ad2703a 	and	r9,r7,r11
  80a568:	3804d53a 	srli	r2,r7,20
  80a56c:	3018d77a 	srli	r12,r6,29
  80a570:	280ad53a 	srli	r5,r5,20
  80a574:	501490fa 	slli	r10,r10,3
  80a578:	2010d77a 	srli	r8,r4,29
  80a57c:	481290fa 	slli	r9,r9,3
  80a580:	380ed7fa 	srli	r7,r7,31
  80a584:	defffb04 	addi	sp,sp,-20
  80a588:	dc800215 	stw	r18,8(sp)
  80a58c:	dc400115 	stw	r17,4(sp)
  80a590:	dc000015 	stw	r16,0(sp)
  80a594:	dfc00415 	stw	ra,16(sp)
  80a598:	dcc00315 	stw	r19,12(sp)
  80a59c:	1c803fcc 	andi	r18,r3,255
  80a5a0:	2c01ffcc 	andi	r16,r5,2047
  80a5a4:	5210b03a 	or	r8,r10,r8
  80a5a8:	202290fa 	slli	r17,r4,3
  80a5ac:	1081ffcc 	andi	r2,r2,2047
  80a5b0:	4b12b03a 	or	r9,r9,r12
  80a5b4:	300c90fa 	slli	r6,r6,3
  80a5b8:	91c07526 	beq	r18,r7,80a790 <__adddf3+0x23c>
  80a5bc:	8087c83a 	sub	r3,r16,r2
  80a5c0:	00c0ab0e 	bge	zero,r3,80a870 <__adddf3+0x31c>
  80a5c4:	10002a1e 	bne	r2,zero,80a670 <__adddf3+0x11c>
  80a5c8:	4984b03a 	or	r2,r9,r6
  80a5cc:	1000961e 	bne	r2,zero,80a828 <__adddf3+0x2d4>
  80a5d0:	888001cc 	andi	r2,r17,7
  80a5d4:	10000726 	beq	r2,zero,80a5f4 <__adddf3+0xa0>
  80a5d8:	888003cc 	andi	r2,r17,15
  80a5dc:	00c00104 	movi	r3,4
  80a5e0:	10c00426 	beq	r2,r3,80a5f4 <__adddf3+0xa0>
  80a5e4:	88c7883a 	add	r3,r17,r3
  80a5e8:	1c63803a 	cmpltu	r17,r3,r17
  80a5ec:	4451883a 	add	r8,r8,r17
  80a5f0:	1823883a 	mov	r17,r3
  80a5f4:	4080202c 	andhi	r2,r8,128
  80a5f8:	10005926 	beq	r2,zero,80a760 <__adddf3+0x20c>
  80a5fc:	84000044 	addi	r16,r16,1
  80a600:	0081ffc4 	movi	r2,2047
  80a604:	8080ba26 	beq	r16,r2,80a8f0 <__adddf3+0x39c>
  80a608:	00bfe034 	movhi	r2,65408
  80a60c:	10bfffc4 	addi	r2,r2,-1
  80a610:	4090703a 	and	r8,r8,r2
  80a614:	4004977a 	slli	r2,r8,29
  80a618:	4010927a 	slli	r8,r8,9
  80a61c:	8822d0fa 	srli	r17,r17,3
  80a620:	8401ffcc 	andi	r16,r16,2047
  80a624:	4010d33a 	srli	r8,r8,12
  80a628:	9007883a 	mov	r3,r18
  80a62c:	1444b03a 	or	r2,r2,r17
  80a630:	8401ffcc 	andi	r16,r16,2047
  80a634:	8020953a 	slli	r16,r16,20
  80a638:	18c03fcc 	andi	r3,r3,255
  80a63c:	01000434 	movhi	r4,16
  80a640:	213fffc4 	addi	r4,r4,-1
  80a644:	180697fa 	slli	r3,r3,31
  80a648:	4110703a 	and	r8,r8,r4
  80a64c:	4410b03a 	or	r8,r8,r16
  80a650:	40c6b03a 	or	r3,r8,r3
  80a654:	dfc00417 	ldw	ra,16(sp)
  80a658:	dcc00317 	ldw	r19,12(sp)
  80a65c:	dc800217 	ldw	r18,8(sp)
  80a660:	dc400117 	ldw	r17,4(sp)
  80a664:	dc000017 	ldw	r16,0(sp)
  80a668:	dec00504 	addi	sp,sp,20
  80a66c:	f800283a 	ret
  80a670:	0081ffc4 	movi	r2,2047
  80a674:	80bfd626 	beq	r16,r2,80a5d0 <__alt_data_end+0xff80a5d0>
  80a678:	4a402034 	orhi	r9,r9,128
  80a67c:	00800e04 	movi	r2,56
  80a680:	10c09f16 	blt	r2,r3,80a900 <__adddf3+0x3ac>
  80a684:	008007c4 	movi	r2,31
  80a688:	10c0c216 	blt	r2,r3,80a994 <__adddf3+0x440>
  80a68c:	00800804 	movi	r2,32
  80a690:	10c5c83a 	sub	r2,r2,r3
  80a694:	488a983a 	sll	r5,r9,r2
  80a698:	30c8d83a 	srl	r4,r6,r3
  80a69c:	3084983a 	sll	r2,r6,r2
  80a6a0:	48c6d83a 	srl	r3,r9,r3
  80a6a4:	290cb03a 	or	r6,r5,r4
  80a6a8:	1004c03a 	cmpne	r2,r2,zero
  80a6ac:	308cb03a 	or	r6,r6,r2
  80a6b0:	898dc83a 	sub	r6,r17,r6
  80a6b4:	89a3803a 	cmpltu	r17,r17,r6
  80a6b8:	40d1c83a 	sub	r8,r8,r3
  80a6bc:	4451c83a 	sub	r8,r8,r17
  80a6c0:	3023883a 	mov	r17,r6
  80a6c4:	4080202c 	andhi	r2,r8,128
  80a6c8:	10002326 	beq	r2,zero,80a758 <__adddf3+0x204>
  80a6cc:	04c02034 	movhi	r19,128
  80a6d0:	9cffffc4 	addi	r19,r19,-1
  80a6d4:	44e6703a 	and	r19,r8,r19
  80a6d8:	98007626 	beq	r19,zero,80a8b4 <__adddf3+0x360>
  80a6dc:	9809883a 	mov	r4,r19
  80a6e0:	080cb580 	call	80cb58 <__clzsi2>
  80a6e4:	10fffe04 	addi	r3,r2,-8
  80a6e8:	010007c4 	movi	r4,31
  80a6ec:	20c07716 	blt	r4,r3,80a8cc <__adddf3+0x378>
  80a6f0:	00800804 	movi	r2,32
  80a6f4:	10c5c83a 	sub	r2,r2,r3
  80a6f8:	8884d83a 	srl	r2,r17,r2
  80a6fc:	98d0983a 	sll	r8,r19,r3
  80a700:	88e2983a 	sll	r17,r17,r3
  80a704:	1204b03a 	or	r2,r2,r8
  80a708:	1c007416 	blt	r3,r16,80a8dc <__adddf3+0x388>
  80a70c:	1c21c83a 	sub	r16,r3,r16
  80a710:	82000044 	addi	r8,r16,1
  80a714:	00c007c4 	movi	r3,31
  80a718:	1a009116 	blt	r3,r8,80a960 <__adddf3+0x40c>
  80a71c:	00c00804 	movi	r3,32
  80a720:	1a07c83a 	sub	r3,r3,r8
  80a724:	8a08d83a 	srl	r4,r17,r8
  80a728:	88e2983a 	sll	r17,r17,r3
  80a72c:	10c6983a 	sll	r3,r2,r3
  80a730:	1210d83a 	srl	r8,r2,r8
  80a734:	8804c03a 	cmpne	r2,r17,zero
  80a738:	1906b03a 	or	r3,r3,r4
  80a73c:	18a2b03a 	or	r17,r3,r2
  80a740:	0021883a 	mov	r16,zero
  80a744:	003fa206 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80a748:	1890b03a 	or	r8,r3,r2
  80a74c:	40017d26 	beq	r8,zero,80ad44 <__adddf3+0x7f0>
  80a750:	1011883a 	mov	r8,r2
  80a754:	1823883a 	mov	r17,r3
  80a758:	888001cc 	andi	r2,r17,7
  80a75c:	103f9e1e 	bne	r2,zero,80a5d8 <__alt_data_end+0xff80a5d8>
  80a760:	4004977a 	slli	r2,r8,29
  80a764:	8822d0fa 	srli	r17,r17,3
  80a768:	4010d0fa 	srli	r8,r8,3
  80a76c:	9007883a 	mov	r3,r18
  80a770:	1444b03a 	or	r2,r2,r17
  80a774:	0101ffc4 	movi	r4,2047
  80a778:	81002426 	beq	r16,r4,80a80c <__adddf3+0x2b8>
  80a77c:	8120703a 	and	r16,r16,r4
  80a780:	01000434 	movhi	r4,16
  80a784:	213fffc4 	addi	r4,r4,-1
  80a788:	4110703a 	and	r8,r8,r4
  80a78c:	003fa806 	br	80a630 <__alt_data_end+0xff80a630>
  80a790:	8089c83a 	sub	r4,r16,r2
  80a794:	01005e0e 	bge	zero,r4,80a910 <__adddf3+0x3bc>
  80a798:	10002b26 	beq	r2,zero,80a848 <__adddf3+0x2f4>
  80a79c:	0081ffc4 	movi	r2,2047
  80a7a0:	80bf8b26 	beq	r16,r2,80a5d0 <__alt_data_end+0xff80a5d0>
  80a7a4:	4a402034 	orhi	r9,r9,128
  80a7a8:	00800e04 	movi	r2,56
  80a7ac:	1100a40e 	bge	r2,r4,80aa40 <__adddf3+0x4ec>
  80a7b0:	498cb03a 	or	r6,r9,r6
  80a7b4:	300ac03a 	cmpne	r5,r6,zero
  80a7b8:	0013883a 	mov	r9,zero
  80a7bc:	2c4b883a 	add	r5,r5,r17
  80a7c0:	2c63803a 	cmpltu	r17,r5,r17
  80a7c4:	4a11883a 	add	r8,r9,r8
  80a7c8:	8a11883a 	add	r8,r17,r8
  80a7cc:	2823883a 	mov	r17,r5
  80a7d0:	4080202c 	andhi	r2,r8,128
  80a7d4:	103fe026 	beq	r2,zero,80a758 <__alt_data_end+0xff80a758>
  80a7d8:	84000044 	addi	r16,r16,1
  80a7dc:	0081ffc4 	movi	r2,2047
  80a7e0:	8080d226 	beq	r16,r2,80ab2c <__adddf3+0x5d8>
  80a7e4:	00bfe034 	movhi	r2,65408
  80a7e8:	10bfffc4 	addi	r2,r2,-1
  80a7ec:	4090703a 	and	r8,r8,r2
  80a7f0:	880ad07a 	srli	r5,r17,1
  80a7f4:	400897fa 	slli	r4,r8,31
  80a7f8:	88c0004c 	andi	r3,r17,1
  80a7fc:	28e2b03a 	or	r17,r5,r3
  80a800:	4010d07a 	srli	r8,r8,1
  80a804:	2462b03a 	or	r17,r4,r17
  80a808:	003f7106 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80a80c:	4088b03a 	or	r4,r8,r2
  80a810:	20014526 	beq	r4,zero,80ad28 <__adddf3+0x7d4>
  80a814:	01000434 	movhi	r4,16
  80a818:	42000234 	orhi	r8,r8,8
  80a81c:	213fffc4 	addi	r4,r4,-1
  80a820:	4110703a 	and	r8,r8,r4
  80a824:	003f8206 	br	80a630 <__alt_data_end+0xff80a630>
  80a828:	18ffffc4 	addi	r3,r3,-1
  80a82c:	1800491e 	bne	r3,zero,80a954 <__adddf3+0x400>
  80a830:	898bc83a 	sub	r5,r17,r6
  80a834:	8963803a 	cmpltu	r17,r17,r5
  80a838:	4251c83a 	sub	r8,r8,r9
  80a83c:	4451c83a 	sub	r8,r8,r17
  80a840:	2823883a 	mov	r17,r5
  80a844:	003f9f06 	br	80a6c4 <__alt_data_end+0xff80a6c4>
  80a848:	4984b03a 	or	r2,r9,r6
  80a84c:	103f6026 	beq	r2,zero,80a5d0 <__alt_data_end+0xff80a5d0>
  80a850:	213fffc4 	addi	r4,r4,-1
  80a854:	2000931e 	bne	r4,zero,80aaa4 <__adddf3+0x550>
  80a858:	898d883a 	add	r6,r17,r6
  80a85c:	3463803a 	cmpltu	r17,r6,r17
  80a860:	4251883a 	add	r8,r8,r9
  80a864:	8a11883a 	add	r8,r17,r8
  80a868:	3023883a 	mov	r17,r6
  80a86c:	003fd806 	br	80a7d0 <__alt_data_end+0xff80a7d0>
  80a870:	1800541e 	bne	r3,zero,80a9c4 <__adddf3+0x470>
  80a874:	80800044 	addi	r2,r16,1
  80a878:	1081ffcc 	andi	r2,r2,2047
  80a87c:	00c00044 	movi	r3,1
  80a880:	1880a00e 	bge	r3,r2,80ab04 <__adddf3+0x5b0>
  80a884:	8989c83a 	sub	r4,r17,r6
  80a888:	8905803a 	cmpltu	r2,r17,r4
  80a88c:	4267c83a 	sub	r19,r8,r9
  80a890:	98a7c83a 	sub	r19,r19,r2
  80a894:	9880202c 	andhi	r2,r19,128
  80a898:	10006326 	beq	r2,zero,80aa28 <__adddf3+0x4d4>
  80a89c:	3463c83a 	sub	r17,r6,r17
  80a8a0:	4a07c83a 	sub	r3,r9,r8
  80a8a4:	344d803a 	cmpltu	r6,r6,r17
  80a8a8:	19a7c83a 	sub	r19,r3,r6
  80a8ac:	3825883a 	mov	r18,r7
  80a8b0:	983f8a1e 	bne	r19,zero,80a6dc <__alt_data_end+0xff80a6dc>
  80a8b4:	8809883a 	mov	r4,r17
  80a8b8:	080cb580 	call	80cb58 <__clzsi2>
  80a8bc:	10800804 	addi	r2,r2,32
  80a8c0:	10fffe04 	addi	r3,r2,-8
  80a8c4:	010007c4 	movi	r4,31
  80a8c8:	20ff890e 	bge	r4,r3,80a6f0 <__alt_data_end+0xff80a6f0>
  80a8cc:	10bff604 	addi	r2,r2,-40
  80a8d0:	8884983a 	sll	r2,r17,r2
  80a8d4:	0023883a 	mov	r17,zero
  80a8d8:	1c3f8c0e 	bge	r3,r16,80a70c <__alt_data_end+0xff80a70c>
  80a8dc:	023fe034 	movhi	r8,65408
  80a8e0:	423fffc4 	addi	r8,r8,-1
  80a8e4:	80e1c83a 	sub	r16,r16,r3
  80a8e8:	1210703a 	and	r8,r2,r8
  80a8ec:	003f3806 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80a8f0:	9007883a 	mov	r3,r18
  80a8f4:	0011883a 	mov	r8,zero
  80a8f8:	0005883a 	mov	r2,zero
  80a8fc:	003f4c06 	br	80a630 <__alt_data_end+0xff80a630>
  80a900:	498cb03a 	or	r6,r9,r6
  80a904:	300cc03a 	cmpne	r6,r6,zero
  80a908:	0007883a 	mov	r3,zero
  80a90c:	003f6806 	br	80a6b0 <__alt_data_end+0xff80a6b0>
  80a910:	20009c1e 	bne	r4,zero,80ab84 <__adddf3+0x630>
  80a914:	80800044 	addi	r2,r16,1
  80a918:	1141ffcc 	andi	r5,r2,2047
  80a91c:	01000044 	movi	r4,1
  80a920:	2140670e 	bge	r4,r5,80aac0 <__adddf3+0x56c>
  80a924:	0101ffc4 	movi	r4,2047
  80a928:	11007f26 	beq	r2,r4,80ab28 <__adddf3+0x5d4>
  80a92c:	898d883a 	add	r6,r17,r6
  80a930:	4247883a 	add	r3,r8,r9
  80a934:	3451803a 	cmpltu	r8,r6,r17
  80a938:	40d1883a 	add	r8,r8,r3
  80a93c:	402297fa 	slli	r17,r8,31
  80a940:	300cd07a 	srli	r6,r6,1
  80a944:	4010d07a 	srli	r8,r8,1
  80a948:	1021883a 	mov	r16,r2
  80a94c:	89a2b03a 	or	r17,r17,r6
  80a950:	003f1f06 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80a954:	0081ffc4 	movi	r2,2047
  80a958:	80bf481e 	bne	r16,r2,80a67c <__alt_data_end+0xff80a67c>
  80a95c:	003f1c06 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80a960:	843ff844 	addi	r16,r16,-31
  80a964:	01000804 	movi	r4,32
  80a968:	1406d83a 	srl	r3,r2,r16
  80a96c:	41005026 	beq	r8,r4,80aab0 <__adddf3+0x55c>
  80a970:	01001004 	movi	r4,64
  80a974:	2211c83a 	sub	r8,r4,r8
  80a978:	1204983a 	sll	r2,r2,r8
  80a97c:	88a2b03a 	or	r17,r17,r2
  80a980:	8822c03a 	cmpne	r17,r17,zero
  80a984:	1c62b03a 	or	r17,r3,r17
  80a988:	0011883a 	mov	r8,zero
  80a98c:	0021883a 	mov	r16,zero
  80a990:	003f7106 	br	80a758 <__alt_data_end+0xff80a758>
  80a994:	193ff804 	addi	r4,r3,-32
  80a998:	00800804 	movi	r2,32
  80a99c:	4908d83a 	srl	r4,r9,r4
  80a9a0:	18804526 	beq	r3,r2,80aab8 <__adddf3+0x564>
  80a9a4:	00801004 	movi	r2,64
  80a9a8:	10c5c83a 	sub	r2,r2,r3
  80a9ac:	4886983a 	sll	r3,r9,r2
  80a9b0:	198cb03a 	or	r6,r3,r6
  80a9b4:	300cc03a 	cmpne	r6,r6,zero
  80a9b8:	218cb03a 	or	r6,r4,r6
  80a9bc:	0007883a 	mov	r3,zero
  80a9c0:	003f3b06 	br	80a6b0 <__alt_data_end+0xff80a6b0>
  80a9c4:	80002a26 	beq	r16,zero,80aa70 <__adddf3+0x51c>
  80a9c8:	0101ffc4 	movi	r4,2047
  80a9cc:	11006826 	beq	r2,r4,80ab70 <__adddf3+0x61c>
  80a9d0:	00c7c83a 	sub	r3,zero,r3
  80a9d4:	42002034 	orhi	r8,r8,128
  80a9d8:	01000e04 	movi	r4,56
  80a9dc:	20c07c16 	blt	r4,r3,80abd0 <__adddf3+0x67c>
  80a9e0:	010007c4 	movi	r4,31
  80a9e4:	20c0da16 	blt	r4,r3,80ad50 <__adddf3+0x7fc>
  80a9e8:	01000804 	movi	r4,32
  80a9ec:	20c9c83a 	sub	r4,r4,r3
  80a9f0:	4114983a 	sll	r10,r8,r4
  80a9f4:	88cad83a 	srl	r5,r17,r3
  80a9f8:	8908983a 	sll	r4,r17,r4
  80a9fc:	40c6d83a 	srl	r3,r8,r3
  80aa00:	5162b03a 	or	r17,r10,r5
  80aa04:	2008c03a 	cmpne	r4,r4,zero
  80aa08:	8922b03a 	or	r17,r17,r4
  80aa0c:	3463c83a 	sub	r17,r6,r17
  80aa10:	48c7c83a 	sub	r3,r9,r3
  80aa14:	344d803a 	cmpltu	r6,r6,r17
  80aa18:	1991c83a 	sub	r8,r3,r6
  80aa1c:	1021883a 	mov	r16,r2
  80aa20:	3825883a 	mov	r18,r7
  80aa24:	003f2706 	br	80a6c4 <__alt_data_end+0xff80a6c4>
  80aa28:	24d0b03a 	or	r8,r4,r19
  80aa2c:	40001b1e 	bne	r8,zero,80aa9c <__adddf3+0x548>
  80aa30:	0005883a 	mov	r2,zero
  80aa34:	0007883a 	mov	r3,zero
  80aa38:	0021883a 	mov	r16,zero
  80aa3c:	003f4d06 	br	80a774 <__alt_data_end+0xff80a774>
  80aa40:	008007c4 	movi	r2,31
  80aa44:	11003c16 	blt	r2,r4,80ab38 <__adddf3+0x5e4>
  80aa48:	00800804 	movi	r2,32
  80aa4c:	1105c83a 	sub	r2,r2,r4
  80aa50:	488e983a 	sll	r7,r9,r2
  80aa54:	310ad83a 	srl	r5,r6,r4
  80aa58:	3084983a 	sll	r2,r6,r2
  80aa5c:	4912d83a 	srl	r9,r9,r4
  80aa60:	394ab03a 	or	r5,r7,r5
  80aa64:	1004c03a 	cmpne	r2,r2,zero
  80aa68:	288ab03a 	or	r5,r5,r2
  80aa6c:	003f5306 	br	80a7bc <__alt_data_end+0xff80a7bc>
  80aa70:	4448b03a 	or	r4,r8,r17
  80aa74:	20003e26 	beq	r4,zero,80ab70 <__adddf3+0x61c>
  80aa78:	00c6303a 	nor	r3,zero,r3
  80aa7c:	18003a1e 	bne	r3,zero,80ab68 <__adddf3+0x614>
  80aa80:	3463c83a 	sub	r17,r6,r17
  80aa84:	4a07c83a 	sub	r3,r9,r8
  80aa88:	344d803a 	cmpltu	r6,r6,r17
  80aa8c:	1991c83a 	sub	r8,r3,r6
  80aa90:	1021883a 	mov	r16,r2
  80aa94:	3825883a 	mov	r18,r7
  80aa98:	003f0a06 	br	80a6c4 <__alt_data_end+0xff80a6c4>
  80aa9c:	2023883a 	mov	r17,r4
  80aaa0:	003f0d06 	br	80a6d8 <__alt_data_end+0xff80a6d8>
  80aaa4:	0081ffc4 	movi	r2,2047
  80aaa8:	80bf3f1e 	bne	r16,r2,80a7a8 <__alt_data_end+0xff80a7a8>
  80aaac:	003ec806 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80aab0:	0005883a 	mov	r2,zero
  80aab4:	003fb106 	br	80a97c <__alt_data_end+0xff80a97c>
  80aab8:	0007883a 	mov	r3,zero
  80aabc:	003fbc06 	br	80a9b0 <__alt_data_end+0xff80a9b0>
  80aac0:	4444b03a 	or	r2,r8,r17
  80aac4:	8000871e 	bne	r16,zero,80ace4 <__adddf3+0x790>
  80aac8:	1000ba26 	beq	r2,zero,80adb4 <__adddf3+0x860>
  80aacc:	4984b03a 	or	r2,r9,r6
  80aad0:	103ebf26 	beq	r2,zero,80a5d0 <__alt_data_end+0xff80a5d0>
  80aad4:	8985883a 	add	r2,r17,r6
  80aad8:	4247883a 	add	r3,r8,r9
  80aadc:	1451803a 	cmpltu	r8,r2,r17
  80aae0:	40d1883a 	add	r8,r8,r3
  80aae4:	40c0202c 	andhi	r3,r8,128
  80aae8:	1023883a 	mov	r17,r2
  80aaec:	183f1a26 	beq	r3,zero,80a758 <__alt_data_end+0xff80a758>
  80aaf0:	00bfe034 	movhi	r2,65408
  80aaf4:	10bfffc4 	addi	r2,r2,-1
  80aaf8:	2021883a 	mov	r16,r4
  80aafc:	4090703a 	and	r8,r8,r2
  80ab00:	003eb306 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80ab04:	4444b03a 	or	r2,r8,r17
  80ab08:	8000291e 	bne	r16,zero,80abb0 <__adddf3+0x65c>
  80ab0c:	10004b1e 	bne	r2,zero,80ac3c <__adddf3+0x6e8>
  80ab10:	4990b03a 	or	r8,r9,r6
  80ab14:	40008b26 	beq	r8,zero,80ad44 <__adddf3+0x7f0>
  80ab18:	4811883a 	mov	r8,r9
  80ab1c:	3023883a 	mov	r17,r6
  80ab20:	3825883a 	mov	r18,r7
  80ab24:	003eaa06 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80ab28:	1021883a 	mov	r16,r2
  80ab2c:	0011883a 	mov	r8,zero
  80ab30:	0005883a 	mov	r2,zero
  80ab34:	003f0f06 	br	80a774 <__alt_data_end+0xff80a774>
  80ab38:	217ff804 	addi	r5,r4,-32
  80ab3c:	00800804 	movi	r2,32
  80ab40:	494ad83a 	srl	r5,r9,r5
  80ab44:	20807d26 	beq	r4,r2,80ad3c <__adddf3+0x7e8>
  80ab48:	00801004 	movi	r2,64
  80ab4c:	1109c83a 	sub	r4,r2,r4
  80ab50:	4912983a 	sll	r9,r9,r4
  80ab54:	498cb03a 	or	r6,r9,r6
  80ab58:	300cc03a 	cmpne	r6,r6,zero
  80ab5c:	298ab03a 	or	r5,r5,r6
  80ab60:	0013883a 	mov	r9,zero
  80ab64:	003f1506 	br	80a7bc <__alt_data_end+0xff80a7bc>
  80ab68:	0101ffc4 	movi	r4,2047
  80ab6c:	113f9a1e 	bne	r2,r4,80a9d8 <__alt_data_end+0xff80a9d8>
  80ab70:	4811883a 	mov	r8,r9
  80ab74:	3023883a 	mov	r17,r6
  80ab78:	1021883a 	mov	r16,r2
  80ab7c:	3825883a 	mov	r18,r7
  80ab80:	003e9306 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80ab84:	8000161e 	bne	r16,zero,80abe0 <__adddf3+0x68c>
  80ab88:	444ab03a 	or	r5,r8,r17
  80ab8c:	28005126 	beq	r5,zero,80acd4 <__adddf3+0x780>
  80ab90:	0108303a 	nor	r4,zero,r4
  80ab94:	20004d1e 	bne	r4,zero,80accc <__adddf3+0x778>
  80ab98:	89a3883a 	add	r17,r17,r6
  80ab9c:	4253883a 	add	r9,r8,r9
  80aba0:	898d803a 	cmpltu	r6,r17,r6
  80aba4:	3251883a 	add	r8,r6,r9
  80aba8:	1021883a 	mov	r16,r2
  80abac:	003f0806 	br	80a7d0 <__alt_data_end+0xff80a7d0>
  80abb0:	1000301e 	bne	r2,zero,80ac74 <__adddf3+0x720>
  80abb4:	4984b03a 	or	r2,r9,r6
  80abb8:	10007126 	beq	r2,zero,80ad80 <__adddf3+0x82c>
  80abbc:	4811883a 	mov	r8,r9
  80abc0:	3023883a 	mov	r17,r6
  80abc4:	3825883a 	mov	r18,r7
  80abc8:	0401ffc4 	movi	r16,2047
  80abcc:	003e8006 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80abd0:	4462b03a 	or	r17,r8,r17
  80abd4:	8822c03a 	cmpne	r17,r17,zero
  80abd8:	0007883a 	mov	r3,zero
  80abdc:	003f8b06 	br	80aa0c <__alt_data_end+0xff80aa0c>
  80abe0:	0141ffc4 	movi	r5,2047
  80abe4:	11403b26 	beq	r2,r5,80acd4 <__adddf3+0x780>
  80abe8:	0109c83a 	sub	r4,zero,r4
  80abec:	42002034 	orhi	r8,r8,128
  80abf0:	01400e04 	movi	r5,56
  80abf4:	29006716 	blt	r5,r4,80ad94 <__adddf3+0x840>
  80abf8:	014007c4 	movi	r5,31
  80abfc:	29007016 	blt	r5,r4,80adc0 <__adddf3+0x86c>
  80ac00:	01400804 	movi	r5,32
  80ac04:	290bc83a 	sub	r5,r5,r4
  80ac08:	4154983a 	sll	r10,r8,r5
  80ac0c:	890ed83a 	srl	r7,r17,r4
  80ac10:	894a983a 	sll	r5,r17,r5
  80ac14:	4108d83a 	srl	r4,r8,r4
  80ac18:	51e2b03a 	or	r17,r10,r7
  80ac1c:	280ac03a 	cmpne	r5,r5,zero
  80ac20:	8962b03a 	or	r17,r17,r5
  80ac24:	89a3883a 	add	r17,r17,r6
  80ac28:	2253883a 	add	r9,r4,r9
  80ac2c:	898d803a 	cmpltu	r6,r17,r6
  80ac30:	3251883a 	add	r8,r6,r9
  80ac34:	1021883a 	mov	r16,r2
  80ac38:	003ee506 	br	80a7d0 <__alt_data_end+0xff80a7d0>
  80ac3c:	4984b03a 	or	r2,r9,r6
  80ac40:	103e6326 	beq	r2,zero,80a5d0 <__alt_data_end+0xff80a5d0>
  80ac44:	8987c83a 	sub	r3,r17,r6
  80ac48:	88c9803a 	cmpltu	r4,r17,r3
  80ac4c:	4245c83a 	sub	r2,r8,r9
  80ac50:	1105c83a 	sub	r2,r2,r4
  80ac54:	1100202c 	andhi	r4,r2,128
  80ac58:	203ebb26 	beq	r4,zero,80a748 <__alt_data_end+0xff80a748>
  80ac5c:	3463c83a 	sub	r17,r6,r17
  80ac60:	4a07c83a 	sub	r3,r9,r8
  80ac64:	344d803a 	cmpltu	r6,r6,r17
  80ac68:	1991c83a 	sub	r8,r3,r6
  80ac6c:	3825883a 	mov	r18,r7
  80ac70:	003e5706 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80ac74:	4984b03a 	or	r2,r9,r6
  80ac78:	10002e26 	beq	r2,zero,80ad34 <__adddf3+0x7e0>
  80ac7c:	4004d0fa 	srli	r2,r8,3
  80ac80:	8822d0fa 	srli	r17,r17,3
  80ac84:	4010977a 	slli	r8,r8,29
  80ac88:	10c0022c 	andhi	r3,r2,8
  80ac8c:	4462b03a 	or	r17,r8,r17
  80ac90:	18000826 	beq	r3,zero,80acb4 <__adddf3+0x760>
  80ac94:	4808d0fa 	srli	r4,r9,3
  80ac98:	20c0022c 	andhi	r3,r4,8
  80ac9c:	1800051e 	bne	r3,zero,80acb4 <__adddf3+0x760>
  80aca0:	300cd0fa 	srli	r6,r6,3
  80aca4:	4806977a 	slli	r3,r9,29
  80aca8:	2005883a 	mov	r2,r4
  80acac:	3825883a 	mov	r18,r7
  80acb0:	19a2b03a 	or	r17,r3,r6
  80acb4:	8810d77a 	srli	r8,r17,29
  80acb8:	100490fa 	slli	r2,r2,3
  80acbc:	882290fa 	slli	r17,r17,3
  80acc0:	0401ffc4 	movi	r16,2047
  80acc4:	4090b03a 	or	r8,r8,r2
  80acc8:	003e4106 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80accc:	0141ffc4 	movi	r5,2047
  80acd0:	117fc71e 	bne	r2,r5,80abf0 <__alt_data_end+0xff80abf0>
  80acd4:	4811883a 	mov	r8,r9
  80acd8:	3023883a 	mov	r17,r6
  80acdc:	1021883a 	mov	r16,r2
  80ace0:	003e3b06 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80ace4:	10002f26 	beq	r2,zero,80ada4 <__adddf3+0x850>
  80ace8:	4984b03a 	or	r2,r9,r6
  80acec:	10001126 	beq	r2,zero,80ad34 <__adddf3+0x7e0>
  80acf0:	4004d0fa 	srli	r2,r8,3
  80acf4:	8822d0fa 	srli	r17,r17,3
  80acf8:	4010977a 	slli	r8,r8,29
  80acfc:	10c0022c 	andhi	r3,r2,8
  80ad00:	4462b03a 	or	r17,r8,r17
  80ad04:	183feb26 	beq	r3,zero,80acb4 <__alt_data_end+0xff80acb4>
  80ad08:	4808d0fa 	srli	r4,r9,3
  80ad0c:	20c0022c 	andhi	r3,r4,8
  80ad10:	183fe81e 	bne	r3,zero,80acb4 <__alt_data_end+0xff80acb4>
  80ad14:	300cd0fa 	srli	r6,r6,3
  80ad18:	4806977a 	slli	r3,r9,29
  80ad1c:	2005883a 	mov	r2,r4
  80ad20:	19a2b03a 	or	r17,r3,r6
  80ad24:	003fe306 	br	80acb4 <__alt_data_end+0xff80acb4>
  80ad28:	0011883a 	mov	r8,zero
  80ad2c:	0005883a 	mov	r2,zero
  80ad30:	003e3f06 	br	80a630 <__alt_data_end+0xff80a630>
  80ad34:	0401ffc4 	movi	r16,2047
  80ad38:	003e2506 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80ad3c:	0013883a 	mov	r9,zero
  80ad40:	003f8406 	br	80ab54 <__alt_data_end+0xff80ab54>
  80ad44:	0005883a 	mov	r2,zero
  80ad48:	0007883a 	mov	r3,zero
  80ad4c:	003e8906 	br	80a774 <__alt_data_end+0xff80a774>
  80ad50:	197ff804 	addi	r5,r3,-32
  80ad54:	01000804 	movi	r4,32
  80ad58:	414ad83a 	srl	r5,r8,r5
  80ad5c:	19002426 	beq	r3,r4,80adf0 <__adddf3+0x89c>
  80ad60:	01001004 	movi	r4,64
  80ad64:	20c7c83a 	sub	r3,r4,r3
  80ad68:	40c6983a 	sll	r3,r8,r3
  80ad6c:	1c46b03a 	or	r3,r3,r17
  80ad70:	1806c03a 	cmpne	r3,r3,zero
  80ad74:	28e2b03a 	or	r17,r5,r3
  80ad78:	0007883a 	mov	r3,zero
  80ad7c:	003f2306 	br	80aa0c <__alt_data_end+0xff80aa0c>
  80ad80:	0007883a 	mov	r3,zero
  80ad84:	5811883a 	mov	r8,r11
  80ad88:	00bfffc4 	movi	r2,-1
  80ad8c:	0401ffc4 	movi	r16,2047
  80ad90:	003e7806 	br	80a774 <__alt_data_end+0xff80a774>
  80ad94:	4462b03a 	or	r17,r8,r17
  80ad98:	8822c03a 	cmpne	r17,r17,zero
  80ad9c:	0009883a 	mov	r4,zero
  80ada0:	003fa006 	br	80ac24 <__alt_data_end+0xff80ac24>
  80ada4:	4811883a 	mov	r8,r9
  80ada8:	3023883a 	mov	r17,r6
  80adac:	0401ffc4 	movi	r16,2047
  80adb0:	003e0706 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80adb4:	4811883a 	mov	r8,r9
  80adb8:	3023883a 	mov	r17,r6
  80adbc:	003e0406 	br	80a5d0 <__alt_data_end+0xff80a5d0>
  80adc0:	21fff804 	addi	r7,r4,-32
  80adc4:	01400804 	movi	r5,32
  80adc8:	41ced83a 	srl	r7,r8,r7
  80adcc:	21400a26 	beq	r4,r5,80adf8 <__adddf3+0x8a4>
  80add0:	01401004 	movi	r5,64
  80add4:	2909c83a 	sub	r4,r5,r4
  80add8:	4108983a 	sll	r4,r8,r4
  80addc:	2448b03a 	or	r4,r4,r17
  80ade0:	2008c03a 	cmpne	r4,r4,zero
  80ade4:	3922b03a 	or	r17,r7,r4
  80ade8:	0009883a 	mov	r4,zero
  80adec:	003f8d06 	br	80ac24 <__alt_data_end+0xff80ac24>
  80adf0:	0007883a 	mov	r3,zero
  80adf4:	003fdd06 	br	80ad6c <__alt_data_end+0xff80ad6c>
  80adf8:	0009883a 	mov	r4,zero
  80adfc:	003ff706 	br	80addc <__alt_data_end+0xff80addc>

0080ae00 <__divdf3>:
  80ae00:	defff204 	addi	sp,sp,-56
  80ae04:	dd400915 	stw	r21,36(sp)
  80ae08:	282ad53a 	srli	r21,r5,20
  80ae0c:	dd000815 	stw	r20,32(sp)
  80ae10:	2828d7fa 	srli	r20,r5,31
  80ae14:	dc000415 	stw	r16,16(sp)
  80ae18:	04000434 	movhi	r16,16
  80ae1c:	df000c15 	stw	fp,48(sp)
  80ae20:	843fffc4 	addi	r16,r16,-1
  80ae24:	dfc00d15 	stw	ra,52(sp)
  80ae28:	ddc00b15 	stw	r23,44(sp)
  80ae2c:	dd800a15 	stw	r22,40(sp)
  80ae30:	dcc00715 	stw	r19,28(sp)
  80ae34:	dc800615 	stw	r18,24(sp)
  80ae38:	dc400515 	stw	r17,20(sp)
  80ae3c:	ad41ffcc 	andi	r21,r21,2047
  80ae40:	2c20703a 	and	r16,r5,r16
  80ae44:	a7003fcc 	andi	fp,r20,255
  80ae48:	a8006126 	beq	r21,zero,80afd0 <__divdf3+0x1d0>
  80ae4c:	0081ffc4 	movi	r2,2047
  80ae50:	2025883a 	mov	r18,r4
  80ae54:	a8803726 	beq	r21,r2,80af34 <__divdf3+0x134>
  80ae58:	80800434 	orhi	r2,r16,16
  80ae5c:	100490fa 	slli	r2,r2,3
  80ae60:	2020d77a 	srli	r16,r4,29
  80ae64:	202490fa 	slli	r18,r4,3
  80ae68:	ad7f0044 	addi	r21,r21,-1023
  80ae6c:	80a0b03a 	or	r16,r16,r2
  80ae70:	0027883a 	mov	r19,zero
  80ae74:	0013883a 	mov	r9,zero
  80ae78:	3804d53a 	srli	r2,r7,20
  80ae7c:	382cd7fa 	srli	r22,r7,31
  80ae80:	04400434 	movhi	r17,16
  80ae84:	8c7fffc4 	addi	r17,r17,-1
  80ae88:	1081ffcc 	andi	r2,r2,2047
  80ae8c:	3011883a 	mov	r8,r6
  80ae90:	3c62703a 	and	r17,r7,r17
  80ae94:	b5c03fcc 	andi	r23,r22,255
  80ae98:	10006c26 	beq	r2,zero,80b04c <__divdf3+0x24c>
  80ae9c:	00c1ffc4 	movi	r3,2047
  80aea0:	10c06426 	beq	r2,r3,80b034 <__divdf3+0x234>
  80aea4:	88c00434 	orhi	r3,r17,16
  80aea8:	180690fa 	slli	r3,r3,3
  80aeac:	3022d77a 	srli	r17,r6,29
  80aeb0:	301090fa 	slli	r8,r6,3
  80aeb4:	10bf0044 	addi	r2,r2,-1023
  80aeb8:	88e2b03a 	or	r17,r17,r3
  80aebc:	000f883a 	mov	r7,zero
  80aec0:	a58cf03a 	xor	r6,r20,r22
  80aec4:	3cc8b03a 	or	r4,r7,r19
  80aec8:	a8abc83a 	sub	r21,r21,r2
  80aecc:	008003c4 	movi	r2,15
  80aed0:	3007883a 	mov	r3,r6
  80aed4:	34c03fcc 	andi	r19,r6,255
  80aed8:	11009036 	bltu	r2,r4,80b11c <__divdf3+0x31c>
  80aedc:	200890ba 	slli	r4,r4,2
  80aee0:	00802074 	movhi	r2,129
  80aee4:	10abbd04 	addi	r2,r2,-20748
  80aee8:	2089883a 	add	r4,r4,r2
  80aeec:	20800017 	ldw	r2,0(r4)
  80aef0:	1000683a 	jmp	r2
  80aef4:	0080b11c 	xori	r2,zero,708
  80aef8:	0080af6c 	andhi	r2,zero,701
  80aefc:	0080b10c 	andi	r2,zero,708
  80af00:	0080af60 	cmpeqi	r2,zero,701
  80af04:	0080b10c 	andi	r2,zero,708
  80af08:	0080b0e0 	cmpeqi	r2,zero,707
  80af0c:	0080b10c 	andi	r2,zero,708
  80af10:	0080af60 	cmpeqi	r2,zero,701
  80af14:	0080af6c 	andhi	r2,zero,701
  80af18:	0080af6c 	andhi	r2,zero,701
  80af1c:	0080b0e0 	cmpeqi	r2,zero,707
  80af20:	0080af60 	cmpeqi	r2,zero,701
  80af24:	0080af50 	cmplti	r2,zero,701
  80af28:	0080af50 	cmplti	r2,zero,701
  80af2c:	0080af50 	cmplti	r2,zero,701
  80af30:	0080b400 	call	80b40 <__alt_mem_sdram-0x77f4c0>
  80af34:	2404b03a 	or	r2,r4,r16
  80af38:	1000661e 	bne	r2,zero,80b0d4 <__divdf3+0x2d4>
  80af3c:	04c00204 	movi	r19,8
  80af40:	0021883a 	mov	r16,zero
  80af44:	0025883a 	mov	r18,zero
  80af48:	02400084 	movi	r9,2
  80af4c:	003fca06 	br	80ae78 <__alt_data_end+0xff80ae78>
  80af50:	8023883a 	mov	r17,r16
  80af54:	9011883a 	mov	r8,r18
  80af58:	e02f883a 	mov	r23,fp
  80af5c:	480f883a 	mov	r7,r9
  80af60:	00800084 	movi	r2,2
  80af64:	3881311e 	bne	r7,r2,80b42c <__divdf3+0x62c>
  80af68:	b827883a 	mov	r19,r23
  80af6c:	98c0004c 	andi	r3,r19,1
  80af70:	0081ffc4 	movi	r2,2047
  80af74:	000b883a 	mov	r5,zero
  80af78:	0025883a 	mov	r18,zero
  80af7c:	1004953a 	slli	r2,r2,20
  80af80:	18c03fcc 	andi	r3,r3,255
  80af84:	04400434 	movhi	r17,16
  80af88:	8c7fffc4 	addi	r17,r17,-1
  80af8c:	180697fa 	slli	r3,r3,31
  80af90:	2c4a703a 	and	r5,r5,r17
  80af94:	288ab03a 	or	r5,r5,r2
  80af98:	28c6b03a 	or	r3,r5,r3
  80af9c:	9005883a 	mov	r2,r18
  80afa0:	dfc00d17 	ldw	ra,52(sp)
  80afa4:	df000c17 	ldw	fp,48(sp)
  80afa8:	ddc00b17 	ldw	r23,44(sp)
  80afac:	dd800a17 	ldw	r22,40(sp)
  80afb0:	dd400917 	ldw	r21,36(sp)
  80afb4:	dd000817 	ldw	r20,32(sp)
  80afb8:	dcc00717 	ldw	r19,28(sp)
  80afbc:	dc800617 	ldw	r18,24(sp)
  80afc0:	dc400517 	ldw	r17,20(sp)
  80afc4:	dc000417 	ldw	r16,16(sp)
  80afc8:	dec00e04 	addi	sp,sp,56
  80afcc:	f800283a 	ret
  80afd0:	2404b03a 	or	r2,r4,r16
  80afd4:	2027883a 	mov	r19,r4
  80afd8:	10003926 	beq	r2,zero,80b0c0 <__divdf3+0x2c0>
  80afdc:	80012e26 	beq	r16,zero,80b498 <__divdf3+0x698>
  80afe0:	8009883a 	mov	r4,r16
  80afe4:	d9800315 	stw	r6,12(sp)
  80afe8:	d9c00215 	stw	r7,8(sp)
  80afec:	080cb580 	call	80cb58 <__clzsi2>
  80aff0:	d9800317 	ldw	r6,12(sp)
  80aff4:	d9c00217 	ldw	r7,8(sp)
  80aff8:	113ffd44 	addi	r4,r2,-11
  80affc:	00c00704 	movi	r3,28
  80b000:	19012116 	blt	r3,r4,80b488 <__divdf3+0x688>
  80b004:	00c00744 	movi	r3,29
  80b008:	147ffe04 	addi	r17,r2,-8
  80b00c:	1907c83a 	sub	r3,r3,r4
  80b010:	8460983a 	sll	r16,r16,r17
  80b014:	98c6d83a 	srl	r3,r19,r3
  80b018:	9c64983a 	sll	r18,r19,r17
  80b01c:	1c20b03a 	or	r16,r3,r16
  80b020:	1080fcc4 	addi	r2,r2,1011
  80b024:	00abc83a 	sub	r21,zero,r2
  80b028:	0027883a 	mov	r19,zero
  80b02c:	0013883a 	mov	r9,zero
  80b030:	003f9106 	br	80ae78 <__alt_data_end+0xff80ae78>
  80b034:	3446b03a 	or	r3,r6,r17
  80b038:	18001f1e 	bne	r3,zero,80b0b8 <__divdf3+0x2b8>
  80b03c:	0023883a 	mov	r17,zero
  80b040:	0011883a 	mov	r8,zero
  80b044:	01c00084 	movi	r7,2
  80b048:	003f9d06 	br	80aec0 <__alt_data_end+0xff80aec0>
  80b04c:	3446b03a 	or	r3,r6,r17
  80b050:	18001526 	beq	r3,zero,80b0a8 <__divdf3+0x2a8>
  80b054:	88011b26 	beq	r17,zero,80b4c4 <__divdf3+0x6c4>
  80b058:	8809883a 	mov	r4,r17
  80b05c:	d9800315 	stw	r6,12(sp)
  80b060:	da400115 	stw	r9,4(sp)
  80b064:	080cb580 	call	80cb58 <__clzsi2>
  80b068:	d9800317 	ldw	r6,12(sp)
  80b06c:	da400117 	ldw	r9,4(sp)
  80b070:	113ffd44 	addi	r4,r2,-11
  80b074:	00c00704 	movi	r3,28
  80b078:	19010e16 	blt	r3,r4,80b4b4 <__divdf3+0x6b4>
  80b07c:	00c00744 	movi	r3,29
  80b080:	123ffe04 	addi	r8,r2,-8
  80b084:	1907c83a 	sub	r3,r3,r4
  80b088:	8a22983a 	sll	r17,r17,r8
  80b08c:	30c6d83a 	srl	r3,r6,r3
  80b090:	3210983a 	sll	r8,r6,r8
  80b094:	1c62b03a 	or	r17,r3,r17
  80b098:	1080fcc4 	addi	r2,r2,1011
  80b09c:	0085c83a 	sub	r2,zero,r2
  80b0a0:	000f883a 	mov	r7,zero
  80b0a4:	003f8606 	br	80aec0 <__alt_data_end+0xff80aec0>
  80b0a8:	0023883a 	mov	r17,zero
  80b0ac:	0011883a 	mov	r8,zero
  80b0b0:	01c00044 	movi	r7,1
  80b0b4:	003f8206 	br	80aec0 <__alt_data_end+0xff80aec0>
  80b0b8:	01c000c4 	movi	r7,3
  80b0bc:	003f8006 	br	80aec0 <__alt_data_end+0xff80aec0>
  80b0c0:	04c00104 	movi	r19,4
  80b0c4:	0021883a 	mov	r16,zero
  80b0c8:	0025883a 	mov	r18,zero
  80b0cc:	02400044 	movi	r9,1
  80b0d0:	003f6906 	br	80ae78 <__alt_data_end+0xff80ae78>
  80b0d4:	04c00304 	movi	r19,12
  80b0d8:	024000c4 	movi	r9,3
  80b0dc:	003f6606 	br	80ae78 <__alt_data_end+0xff80ae78>
  80b0e0:	01400434 	movhi	r5,16
  80b0e4:	0007883a 	mov	r3,zero
  80b0e8:	297fffc4 	addi	r5,r5,-1
  80b0ec:	04bfffc4 	movi	r18,-1
  80b0f0:	0081ffc4 	movi	r2,2047
  80b0f4:	003fa106 	br	80af7c <__alt_data_end+0xff80af7c>
  80b0f8:	00c00044 	movi	r3,1
  80b0fc:	1887c83a 	sub	r3,r3,r2
  80b100:	01000e04 	movi	r4,56
  80b104:	20c1210e 	bge	r4,r3,80b58c <__divdf3+0x78c>
  80b108:	98c0004c 	andi	r3,r19,1
  80b10c:	0005883a 	mov	r2,zero
  80b110:	000b883a 	mov	r5,zero
  80b114:	0025883a 	mov	r18,zero
  80b118:	003f9806 	br	80af7c <__alt_data_end+0xff80af7c>
  80b11c:	8c00fd36 	bltu	r17,r16,80b514 <__divdf3+0x714>
  80b120:	8440fb26 	beq	r16,r17,80b510 <__divdf3+0x710>
  80b124:	8007883a 	mov	r3,r16
  80b128:	ad7fffc4 	addi	r21,r21,-1
  80b12c:	0021883a 	mov	r16,zero
  80b130:	4004d63a 	srli	r2,r8,24
  80b134:	8822923a 	slli	r17,r17,8
  80b138:	1809883a 	mov	r4,r3
  80b13c:	402c923a 	slli	r22,r8,8
  80b140:	88b8b03a 	or	fp,r17,r2
  80b144:	e028d43a 	srli	r20,fp,16
  80b148:	d8c00015 	stw	r3,0(sp)
  80b14c:	e5ffffcc 	andi	r23,fp,65535
  80b150:	a00b883a 	mov	r5,r20
  80b154:	080a4980 	call	80a498 <__udivsi3>
  80b158:	d8c00017 	ldw	r3,0(sp)
  80b15c:	a00b883a 	mov	r5,r20
  80b160:	d8800315 	stw	r2,12(sp)
  80b164:	1809883a 	mov	r4,r3
  80b168:	080a4fc0 	call	80a4fc <__umodsi3>
  80b16c:	d9800317 	ldw	r6,12(sp)
  80b170:	1006943a 	slli	r3,r2,16
  80b174:	9004d43a 	srli	r2,r18,16
  80b178:	b9a3383a 	mul	r17,r23,r6
  80b17c:	10c4b03a 	or	r2,r2,r3
  80b180:	1440062e 	bgeu	r2,r17,80b19c <__divdf3+0x39c>
  80b184:	1705883a 	add	r2,r2,fp
  80b188:	30ffffc4 	addi	r3,r6,-1
  80b18c:	1700ee36 	bltu	r2,fp,80b548 <__divdf3+0x748>
  80b190:	1440ed2e 	bgeu	r2,r17,80b548 <__divdf3+0x748>
  80b194:	31bfff84 	addi	r6,r6,-2
  80b198:	1705883a 	add	r2,r2,fp
  80b19c:	1463c83a 	sub	r17,r2,r17
  80b1a0:	a00b883a 	mov	r5,r20
  80b1a4:	8809883a 	mov	r4,r17
  80b1a8:	d9800315 	stw	r6,12(sp)
  80b1ac:	080a4980 	call	80a498 <__udivsi3>
  80b1b0:	a00b883a 	mov	r5,r20
  80b1b4:	8809883a 	mov	r4,r17
  80b1b8:	d8800215 	stw	r2,8(sp)
  80b1bc:	080a4fc0 	call	80a4fc <__umodsi3>
  80b1c0:	d9c00217 	ldw	r7,8(sp)
  80b1c4:	1004943a 	slli	r2,r2,16
  80b1c8:	94bfffcc 	andi	r18,r18,65535
  80b1cc:	b9d1383a 	mul	r8,r23,r7
  80b1d0:	90a4b03a 	or	r18,r18,r2
  80b1d4:	d9800317 	ldw	r6,12(sp)
  80b1d8:	9200062e 	bgeu	r18,r8,80b1f4 <__divdf3+0x3f4>
  80b1dc:	9725883a 	add	r18,r18,fp
  80b1e0:	38bfffc4 	addi	r2,r7,-1
  80b1e4:	9700d636 	bltu	r18,fp,80b540 <__divdf3+0x740>
  80b1e8:	9200d52e 	bgeu	r18,r8,80b540 <__divdf3+0x740>
  80b1ec:	39ffff84 	addi	r7,r7,-2
  80b1f0:	9725883a 	add	r18,r18,fp
  80b1f4:	3004943a 	slli	r2,r6,16
  80b1f8:	b012d43a 	srli	r9,r22,16
  80b1fc:	b1bfffcc 	andi	r6,r22,65535
  80b200:	11e2b03a 	or	r17,r2,r7
  80b204:	8806d43a 	srli	r3,r17,16
  80b208:	893fffcc 	andi	r4,r17,65535
  80b20c:	218b383a 	mul	r5,r4,r6
  80b210:	30c5383a 	mul	r2,r6,r3
  80b214:	2249383a 	mul	r4,r4,r9
  80b218:	280ed43a 	srli	r7,r5,16
  80b21c:	9225c83a 	sub	r18,r18,r8
  80b220:	2089883a 	add	r4,r4,r2
  80b224:	3909883a 	add	r4,r7,r4
  80b228:	1a47383a 	mul	r3,r3,r9
  80b22c:	2080022e 	bgeu	r4,r2,80b238 <__divdf3+0x438>
  80b230:	00800074 	movhi	r2,1
  80b234:	1887883a 	add	r3,r3,r2
  80b238:	2004d43a 	srli	r2,r4,16
  80b23c:	2008943a 	slli	r4,r4,16
  80b240:	297fffcc 	andi	r5,r5,65535
  80b244:	10c7883a 	add	r3,r2,r3
  80b248:	2149883a 	add	r4,r4,r5
  80b24c:	90c0a536 	bltu	r18,r3,80b4e4 <__divdf3+0x6e4>
  80b250:	90c0bf26 	beq	r18,r3,80b550 <__divdf3+0x750>
  80b254:	90c7c83a 	sub	r3,r18,r3
  80b258:	810fc83a 	sub	r7,r16,r4
  80b25c:	81e5803a 	cmpltu	r18,r16,r7
  80b260:	1ca5c83a 	sub	r18,r3,r18
  80b264:	e480c126 	beq	fp,r18,80b56c <__divdf3+0x76c>
  80b268:	a00b883a 	mov	r5,r20
  80b26c:	9009883a 	mov	r4,r18
  80b270:	d9800315 	stw	r6,12(sp)
  80b274:	d9c00215 	stw	r7,8(sp)
  80b278:	da400115 	stw	r9,4(sp)
  80b27c:	080a4980 	call	80a498 <__udivsi3>
  80b280:	a00b883a 	mov	r5,r20
  80b284:	9009883a 	mov	r4,r18
  80b288:	d8800015 	stw	r2,0(sp)
  80b28c:	080a4fc0 	call	80a4fc <__umodsi3>
  80b290:	d9c00217 	ldw	r7,8(sp)
  80b294:	da000017 	ldw	r8,0(sp)
  80b298:	1006943a 	slli	r3,r2,16
  80b29c:	3804d43a 	srli	r2,r7,16
  80b2a0:	ba21383a 	mul	r16,r23,r8
  80b2a4:	d9800317 	ldw	r6,12(sp)
  80b2a8:	10c4b03a 	or	r2,r2,r3
  80b2ac:	da400117 	ldw	r9,4(sp)
  80b2b0:	1400062e 	bgeu	r2,r16,80b2cc <__divdf3+0x4cc>
  80b2b4:	1705883a 	add	r2,r2,fp
  80b2b8:	40ffffc4 	addi	r3,r8,-1
  80b2bc:	1700ad36 	bltu	r2,fp,80b574 <__divdf3+0x774>
  80b2c0:	1400ac2e 	bgeu	r2,r16,80b574 <__divdf3+0x774>
  80b2c4:	423fff84 	addi	r8,r8,-2
  80b2c8:	1705883a 	add	r2,r2,fp
  80b2cc:	1421c83a 	sub	r16,r2,r16
  80b2d0:	a00b883a 	mov	r5,r20
  80b2d4:	8009883a 	mov	r4,r16
  80b2d8:	d9800315 	stw	r6,12(sp)
  80b2dc:	d9c00215 	stw	r7,8(sp)
  80b2e0:	da000015 	stw	r8,0(sp)
  80b2e4:	da400115 	stw	r9,4(sp)
  80b2e8:	080a4980 	call	80a498 <__udivsi3>
  80b2ec:	8009883a 	mov	r4,r16
  80b2f0:	a00b883a 	mov	r5,r20
  80b2f4:	1025883a 	mov	r18,r2
  80b2f8:	080a4fc0 	call	80a4fc <__umodsi3>
  80b2fc:	d9c00217 	ldw	r7,8(sp)
  80b300:	1004943a 	slli	r2,r2,16
  80b304:	bcaf383a 	mul	r23,r23,r18
  80b308:	393fffcc 	andi	r4,r7,65535
  80b30c:	2088b03a 	or	r4,r4,r2
  80b310:	d9800317 	ldw	r6,12(sp)
  80b314:	da000017 	ldw	r8,0(sp)
  80b318:	da400117 	ldw	r9,4(sp)
  80b31c:	25c0062e 	bgeu	r4,r23,80b338 <__divdf3+0x538>
  80b320:	2709883a 	add	r4,r4,fp
  80b324:	90bfffc4 	addi	r2,r18,-1
  80b328:	27009436 	bltu	r4,fp,80b57c <__divdf3+0x77c>
  80b32c:	25c0932e 	bgeu	r4,r23,80b57c <__divdf3+0x77c>
  80b330:	94bfff84 	addi	r18,r18,-2
  80b334:	2709883a 	add	r4,r4,fp
  80b338:	4004943a 	slli	r2,r8,16
  80b33c:	25efc83a 	sub	r23,r4,r23
  80b340:	1490b03a 	or	r8,r2,r18
  80b344:	4008d43a 	srli	r4,r8,16
  80b348:	40ffffcc 	andi	r3,r8,65535
  80b34c:	30c5383a 	mul	r2,r6,r3
  80b350:	1a47383a 	mul	r3,r3,r9
  80b354:	310d383a 	mul	r6,r6,r4
  80b358:	100ad43a 	srli	r5,r2,16
  80b35c:	4913383a 	mul	r9,r9,r4
  80b360:	1987883a 	add	r3,r3,r6
  80b364:	28c7883a 	add	r3,r5,r3
  80b368:	1980022e 	bgeu	r3,r6,80b374 <__divdf3+0x574>
  80b36c:	01000074 	movhi	r4,1
  80b370:	4913883a 	add	r9,r9,r4
  80b374:	1808d43a 	srli	r4,r3,16
  80b378:	1806943a 	slli	r3,r3,16
  80b37c:	10bfffcc 	andi	r2,r2,65535
  80b380:	2253883a 	add	r9,r4,r9
  80b384:	1887883a 	add	r3,r3,r2
  80b388:	ba403836 	bltu	r23,r9,80b46c <__divdf3+0x66c>
  80b38c:	ba403626 	beq	r23,r9,80b468 <__divdf3+0x668>
  80b390:	42000054 	ori	r8,r8,1
  80b394:	a880ffc4 	addi	r2,r21,1023
  80b398:	00bf570e 	bge	zero,r2,80b0f8 <__alt_data_end+0xff80b0f8>
  80b39c:	40c001cc 	andi	r3,r8,7
  80b3a0:	18000726 	beq	r3,zero,80b3c0 <__divdf3+0x5c0>
  80b3a4:	40c003cc 	andi	r3,r8,15
  80b3a8:	01000104 	movi	r4,4
  80b3ac:	19000426 	beq	r3,r4,80b3c0 <__divdf3+0x5c0>
  80b3b0:	4107883a 	add	r3,r8,r4
  80b3b4:	1a11803a 	cmpltu	r8,r3,r8
  80b3b8:	8a23883a 	add	r17,r17,r8
  80b3bc:	1811883a 	mov	r8,r3
  80b3c0:	88c0402c 	andhi	r3,r17,256
  80b3c4:	18000426 	beq	r3,zero,80b3d8 <__divdf3+0x5d8>
  80b3c8:	00ffc034 	movhi	r3,65280
  80b3cc:	18ffffc4 	addi	r3,r3,-1
  80b3d0:	a8810004 	addi	r2,r21,1024
  80b3d4:	88e2703a 	and	r17,r17,r3
  80b3d8:	00c1ff84 	movi	r3,2046
  80b3dc:	18bee316 	blt	r3,r2,80af6c <__alt_data_end+0xff80af6c>
  80b3e0:	8824977a 	slli	r18,r17,29
  80b3e4:	4010d0fa 	srli	r8,r8,3
  80b3e8:	8822927a 	slli	r17,r17,9
  80b3ec:	1081ffcc 	andi	r2,r2,2047
  80b3f0:	9224b03a 	or	r18,r18,r8
  80b3f4:	880ad33a 	srli	r5,r17,12
  80b3f8:	98c0004c 	andi	r3,r19,1
  80b3fc:	003edf06 	br	80af7c <__alt_data_end+0xff80af7c>
  80b400:	8080022c 	andhi	r2,r16,8
  80b404:	10001226 	beq	r2,zero,80b450 <__divdf3+0x650>
  80b408:	8880022c 	andhi	r2,r17,8
  80b40c:	1000101e 	bne	r2,zero,80b450 <__divdf3+0x650>
  80b410:	00800434 	movhi	r2,16
  80b414:	89400234 	orhi	r5,r17,8
  80b418:	10bfffc4 	addi	r2,r2,-1
  80b41c:	b007883a 	mov	r3,r22
  80b420:	288a703a 	and	r5,r5,r2
  80b424:	4025883a 	mov	r18,r8
  80b428:	003f3106 	br	80b0f0 <__alt_data_end+0xff80b0f0>
  80b42c:	008000c4 	movi	r2,3
  80b430:	3880a626 	beq	r7,r2,80b6cc <__divdf3+0x8cc>
  80b434:	00800044 	movi	r2,1
  80b438:	3880521e 	bne	r7,r2,80b584 <__divdf3+0x784>
  80b43c:	b807883a 	mov	r3,r23
  80b440:	0005883a 	mov	r2,zero
  80b444:	000b883a 	mov	r5,zero
  80b448:	0025883a 	mov	r18,zero
  80b44c:	003ecb06 	br	80af7c <__alt_data_end+0xff80af7c>
  80b450:	00800434 	movhi	r2,16
  80b454:	81400234 	orhi	r5,r16,8
  80b458:	10bfffc4 	addi	r2,r2,-1
  80b45c:	a007883a 	mov	r3,r20
  80b460:	288a703a 	and	r5,r5,r2
  80b464:	003f2206 	br	80b0f0 <__alt_data_end+0xff80b0f0>
  80b468:	183fca26 	beq	r3,zero,80b394 <__alt_data_end+0xff80b394>
  80b46c:	e5ef883a 	add	r23,fp,r23
  80b470:	40bfffc4 	addi	r2,r8,-1
  80b474:	bf00392e 	bgeu	r23,fp,80b55c <__divdf3+0x75c>
  80b478:	1011883a 	mov	r8,r2
  80b47c:	ba7fc41e 	bne	r23,r9,80b390 <__alt_data_end+0xff80b390>
  80b480:	b0ffc31e 	bne	r22,r3,80b390 <__alt_data_end+0xff80b390>
  80b484:	003fc306 	br	80b394 <__alt_data_end+0xff80b394>
  80b488:	143ff604 	addi	r16,r2,-40
  80b48c:	9c20983a 	sll	r16,r19,r16
  80b490:	0025883a 	mov	r18,zero
  80b494:	003ee206 	br	80b020 <__alt_data_end+0xff80b020>
  80b498:	d9800315 	stw	r6,12(sp)
  80b49c:	d9c00215 	stw	r7,8(sp)
  80b4a0:	080cb580 	call	80cb58 <__clzsi2>
  80b4a4:	10800804 	addi	r2,r2,32
  80b4a8:	d9c00217 	ldw	r7,8(sp)
  80b4ac:	d9800317 	ldw	r6,12(sp)
  80b4b0:	003ed106 	br	80aff8 <__alt_data_end+0xff80aff8>
  80b4b4:	147ff604 	addi	r17,r2,-40
  80b4b8:	3462983a 	sll	r17,r6,r17
  80b4bc:	0011883a 	mov	r8,zero
  80b4c0:	003ef506 	br	80b098 <__alt_data_end+0xff80b098>
  80b4c4:	3009883a 	mov	r4,r6
  80b4c8:	d9800315 	stw	r6,12(sp)
  80b4cc:	da400115 	stw	r9,4(sp)
  80b4d0:	080cb580 	call	80cb58 <__clzsi2>
  80b4d4:	10800804 	addi	r2,r2,32
  80b4d8:	da400117 	ldw	r9,4(sp)
  80b4dc:	d9800317 	ldw	r6,12(sp)
  80b4e0:	003ee306 	br	80b070 <__alt_data_end+0xff80b070>
  80b4e4:	85a1883a 	add	r16,r16,r22
  80b4e8:	8585803a 	cmpltu	r2,r16,r22
  80b4ec:	1705883a 	add	r2,r2,fp
  80b4f0:	14a5883a 	add	r18,r2,r18
  80b4f4:	88bfffc4 	addi	r2,r17,-1
  80b4f8:	e4800c2e 	bgeu	fp,r18,80b52c <__divdf3+0x72c>
  80b4fc:	90c03e36 	bltu	r18,r3,80b5f8 <__divdf3+0x7f8>
  80b500:	1c806926 	beq	r3,r18,80b6a8 <__divdf3+0x8a8>
  80b504:	90c7c83a 	sub	r3,r18,r3
  80b508:	1023883a 	mov	r17,r2
  80b50c:	003f5206 	br	80b258 <__alt_data_end+0xff80b258>
  80b510:	923f0436 	bltu	r18,r8,80b124 <__alt_data_end+0xff80b124>
  80b514:	800897fa 	slli	r4,r16,31
  80b518:	9004d07a 	srli	r2,r18,1
  80b51c:	8006d07a 	srli	r3,r16,1
  80b520:	902097fa 	slli	r16,r18,31
  80b524:	20a4b03a 	or	r18,r4,r2
  80b528:	003f0106 	br	80b130 <__alt_data_end+0xff80b130>
  80b52c:	e4bff51e 	bne	fp,r18,80b504 <__alt_data_end+0xff80b504>
  80b530:	85bff22e 	bgeu	r16,r22,80b4fc <__alt_data_end+0xff80b4fc>
  80b534:	e0c7c83a 	sub	r3,fp,r3
  80b538:	1023883a 	mov	r17,r2
  80b53c:	003f4606 	br	80b258 <__alt_data_end+0xff80b258>
  80b540:	100f883a 	mov	r7,r2
  80b544:	003f2b06 	br	80b1f4 <__alt_data_end+0xff80b1f4>
  80b548:	180d883a 	mov	r6,r3
  80b54c:	003f1306 	br	80b19c <__alt_data_end+0xff80b19c>
  80b550:	813fe436 	bltu	r16,r4,80b4e4 <__alt_data_end+0xff80b4e4>
  80b554:	0007883a 	mov	r3,zero
  80b558:	003f3f06 	br	80b258 <__alt_data_end+0xff80b258>
  80b55c:	ba402c36 	bltu	r23,r9,80b610 <__divdf3+0x810>
  80b560:	4dc05426 	beq	r9,r23,80b6b4 <__divdf3+0x8b4>
  80b564:	1011883a 	mov	r8,r2
  80b568:	003f8906 	br	80b390 <__alt_data_end+0xff80b390>
  80b56c:	023fffc4 	movi	r8,-1
  80b570:	003f8806 	br	80b394 <__alt_data_end+0xff80b394>
  80b574:	1811883a 	mov	r8,r3
  80b578:	003f5406 	br	80b2cc <__alt_data_end+0xff80b2cc>
  80b57c:	1025883a 	mov	r18,r2
  80b580:	003f6d06 	br	80b338 <__alt_data_end+0xff80b338>
  80b584:	b827883a 	mov	r19,r23
  80b588:	003f8206 	br	80b394 <__alt_data_end+0xff80b394>
  80b58c:	010007c4 	movi	r4,31
  80b590:	20c02616 	blt	r4,r3,80b62c <__divdf3+0x82c>
  80b594:	00800804 	movi	r2,32
  80b598:	10c5c83a 	sub	r2,r2,r3
  80b59c:	888a983a 	sll	r5,r17,r2
  80b5a0:	40c8d83a 	srl	r4,r8,r3
  80b5a4:	4084983a 	sll	r2,r8,r2
  80b5a8:	88e2d83a 	srl	r17,r17,r3
  80b5ac:	2906b03a 	or	r3,r5,r4
  80b5b0:	1004c03a 	cmpne	r2,r2,zero
  80b5b4:	1886b03a 	or	r3,r3,r2
  80b5b8:	188001cc 	andi	r2,r3,7
  80b5bc:	10000726 	beq	r2,zero,80b5dc <__divdf3+0x7dc>
  80b5c0:	188003cc 	andi	r2,r3,15
  80b5c4:	01000104 	movi	r4,4
  80b5c8:	11000426 	beq	r2,r4,80b5dc <__divdf3+0x7dc>
  80b5cc:	1805883a 	mov	r2,r3
  80b5d0:	10c00104 	addi	r3,r2,4
  80b5d4:	1885803a 	cmpltu	r2,r3,r2
  80b5d8:	88a3883a 	add	r17,r17,r2
  80b5dc:	8880202c 	andhi	r2,r17,128
  80b5e0:	10002726 	beq	r2,zero,80b680 <__divdf3+0x880>
  80b5e4:	98c0004c 	andi	r3,r19,1
  80b5e8:	00800044 	movi	r2,1
  80b5ec:	000b883a 	mov	r5,zero
  80b5f0:	0025883a 	mov	r18,zero
  80b5f4:	003e6106 	br	80af7c <__alt_data_end+0xff80af7c>
  80b5f8:	85a1883a 	add	r16,r16,r22
  80b5fc:	8585803a 	cmpltu	r2,r16,r22
  80b600:	1705883a 	add	r2,r2,fp
  80b604:	14a5883a 	add	r18,r2,r18
  80b608:	8c7fff84 	addi	r17,r17,-2
  80b60c:	003f1106 	br	80b254 <__alt_data_end+0xff80b254>
  80b610:	b589883a 	add	r4,r22,r22
  80b614:	25ad803a 	cmpltu	r22,r4,r22
  80b618:	b739883a 	add	fp,r22,fp
  80b61c:	40bfff84 	addi	r2,r8,-2
  80b620:	bf2f883a 	add	r23,r23,fp
  80b624:	202d883a 	mov	r22,r4
  80b628:	003f9306 	br	80b478 <__alt_data_end+0xff80b478>
  80b62c:	013ff844 	movi	r4,-31
  80b630:	2085c83a 	sub	r2,r4,r2
  80b634:	8888d83a 	srl	r4,r17,r2
  80b638:	00800804 	movi	r2,32
  80b63c:	18802126 	beq	r3,r2,80b6c4 <__divdf3+0x8c4>
  80b640:	00801004 	movi	r2,64
  80b644:	10c5c83a 	sub	r2,r2,r3
  80b648:	8884983a 	sll	r2,r17,r2
  80b64c:	1204b03a 	or	r2,r2,r8
  80b650:	1004c03a 	cmpne	r2,r2,zero
  80b654:	2084b03a 	or	r2,r4,r2
  80b658:	144001cc 	andi	r17,r2,7
  80b65c:	88000d1e 	bne	r17,zero,80b694 <__divdf3+0x894>
  80b660:	000b883a 	mov	r5,zero
  80b664:	1024d0fa 	srli	r18,r2,3
  80b668:	98c0004c 	andi	r3,r19,1
  80b66c:	0005883a 	mov	r2,zero
  80b670:	9464b03a 	or	r18,r18,r17
  80b674:	003e4106 	br	80af7c <__alt_data_end+0xff80af7c>
  80b678:	1007883a 	mov	r3,r2
  80b67c:	0023883a 	mov	r17,zero
  80b680:	880a927a 	slli	r5,r17,9
  80b684:	1805883a 	mov	r2,r3
  80b688:	8822977a 	slli	r17,r17,29
  80b68c:	280ad33a 	srli	r5,r5,12
  80b690:	003ff406 	br	80b664 <__alt_data_end+0xff80b664>
  80b694:	10c003cc 	andi	r3,r2,15
  80b698:	01000104 	movi	r4,4
  80b69c:	193ff626 	beq	r3,r4,80b678 <__alt_data_end+0xff80b678>
  80b6a0:	0023883a 	mov	r17,zero
  80b6a4:	003fca06 	br	80b5d0 <__alt_data_end+0xff80b5d0>
  80b6a8:	813fd336 	bltu	r16,r4,80b5f8 <__alt_data_end+0xff80b5f8>
  80b6ac:	1023883a 	mov	r17,r2
  80b6b0:	003fa806 	br	80b554 <__alt_data_end+0xff80b554>
  80b6b4:	b0ffd636 	bltu	r22,r3,80b610 <__alt_data_end+0xff80b610>
  80b6b8:	1011883a 	mov	r8,r2
  80b6bc:	b0ff341e 	bne	r22,r3,80b390 <__alt_data_end+0xff80b390>
  80b6c0:	003f3406 	br	80b394 <__alt_data_end+0xff80b394>
  80b6c4:	0005883a 	mov	r2,zero
  80b6c8:	003fe006 	br	80b64c <__alt_data_end+0xff80b64c>
  80b6cc:	00800434 	movhi	r2,16
  80b6d0:	89400234 	orhi	r5,r17,8
  80b6d4:	10bfffc4 	addi	r2,r2,-1
  80b6d8:	b807883a 	mov	r3,r23
  80b6dc:	288a703a 	and	r5,r5,r2
  80b6e0:	4025883a 	mov	r18,r8
  80b6e4:	003e8206 	br	80b0f0 <__alt_data_end+0xff80b0f0>

0080b6e8 <__eqdf2>:
  80b6e8:	2804d53a 	srli	r2,r5,20
  80b6ec:	3806d53a 	srli	r3,r7,20
  80b6f0:	02000434 	movhi	r8,16
  80b6f4:	423fffc4 	addi	r8,r8,-1
  80b6f8:	1081ffcc 	andi	r2,r2,2047
  80b6fc:	0281ffc4 	movi	r10,2047
  80b700:	2a12703a 	and	r9,r5,r8
  80b704:	18c1ffcc 	andi	r3,r3,2047
  80b708:	3a10703a 	and	r8,r7,r8
  80b70c:	280ad7fa 	srli	r5,r5,31
  80b710:	380ed7fa 	srli	r7,r7,31
  80b714:	12801026 	beq	r2,r10,80b758 <__eqdf2+0x70>
  80b718:	0281ffc4 	movi	r10,2047
  80b71c:	1a800a26 	beq	r3,r10,80b748 <__eqdf2+0x60>
  80b720:	10c00226 	beq	r2,r3,80b72c <__eqdf2+0x44>
  80b724:	00800044 	movi	r2,1
  80b728:	f800283a 	ret
  80b72c:	4a3ffd1e 	bne	r9,r8,80b724 <__alt_data_end+0xff80b724>
  80b730:	21bffc1e 	bne	r4,r6,80b724 <__alt_data_end+0xff80b724>
  80b734:	29c00c26 	beq	r5,r7,80b768 <__eqdf2+0x80>
  80b738:	103ffa1e 	bne	r2,zero,80b724 <__alt_data_end+0xff80b724>
  80b73c:	2244b03a 	or	r2,r4,r9
  80b740:	1004c03a 	cmpne	r2,r2,zero
  80b744:	f800283a 	ret
  80b748:	3214b03a 	or	r10,r6,r8
  80b74c:	503ff426 	beq	r10,zero,80b720 <__alt_data_end+0xff80b720>
  80b750:	00800044 	movi	r2,1
  80b754:	f800283a 	ret
  80b758:	2254b03a 	or	r10,r4,r9
  80b75c:	503fee26 	beq	r10,zero,80b718 <__alt_data_end+0xff80b718>
  80b760:	00800044 	movi	r2,1
  80b764:	f800283a 	ret
  80b768:	0005883a 	mov	r2,zero
  80b76c:	f800283a 	ret

0080b770 <__gedf2>:
  80b770:	2804d53a 	srli	r2,r5,20
  80b774:	3806d53a 	srli	r3,r7,20
  80b778:	02000434 	movhi	r8,16
  80b77c:	423fffc4 	addi	r8,r8,-1
  80b780:	1081ffcc 	andi	r2,r2,2047
  80b784:	0241ffc4 	movi	r9,2047
  80b788:	2a14703a 	and	r10,r5,r8
  80b78c:	18c1ffcc 	andi	r3,r3,2047
  80b790:	3a10703a 	and	r8,r7,r8
  80b794:	280ad7fa 	srli	r5,r5,31
  80b798:	380ed7fa 	srli	r7,r7,31
  80b79c:	12401d26 	beq	r2,r9,80b814 <__gedf2+0xa4>
  80b7a0:	0241ffc4 	movi	r9,2047
  80b7a4:	1a401226 	beq	r3,r9,80b7f0 <__gedf2+0x80>
  80b7a8:	1000081e 	bne	r2,zero,80b7cc <__gedf2+0x5c>
  80b7ac:	2296b03a 	or	r11,r4,r10
  80b7b0:	5813003a 	cmpeq	r9,r11,zero
  80b7b4:	1800091e 	bne	r3,zero,80b7dc <__gedf2+0x6c>
  80b7b8:	3218b03a 	or	r12,r6,r8
  80b7bc:	6000071e 	bne	r12,zero,80b7dc <__gedf2+0x6c>
  80b7c0:	0005883a 	mov	r2,zero
  80b7c4:	5800101e 	bne	r11,zero,80b808 <__gedf2+0x98>
  80b7c8:	f800283a 	ret
  80b7cc:	18000c1e 	bne	r3,zero,80b800 <__gedf2+0x90>
  80b7d0:	3212b03a 	or	r9,r6,r8
  80b7d4:	48000c26 	beq	r9,zero,80b808 <__gedf2+0x98>
  80b7d8:	0013883a 	mov	r9,zero
  80b7dc:	39c03fcc 	andi	r7,r7,255
  80b7e0:	48000826 	beq	r9,zero,80b804 <__gedf2+0x94>
  80b7e4:	38000926 	beq	r7,zero,80b80c <__gedf2+0x9c>
  80b7e8:	00800044 	movi	r2,1
  80b7ec:	f800283a 	ret
  80b7f0:	3212b03a 	or	r9,r6,r8
  80b7f4:	483fec26 	beq	r9,zero,80b7a8 <__alt_data_end+0xff80b7a8>
  80b7f8:	00bfff84 	movi	r2,-2
  80b7fc:	f800283a 	ret
  80b800:	39c03fcc 	andi	r7,r7,255
  80b804:	29c00626 	beq	r5,r7,80b820 <__gedf2+0xb0>
  80b808:	283ff726 	beq	r5,zero,80b7e8 <__alt_data_end+0xff80b7e8>
  80b80c:	00bfffc4 	movi	r2,-1
  80b810:	f800283a 	ret
  80b814:	2292b03a 	or	r9,r4,r10
  80b818:	483fe126 	beq	r9,zero,80b7a0 <__alt_data_end+0xff80b7a0>
  80b81c:	003ff606 	br	80b7f8 <__alt_data_end+0xff80b7f8>
  80b820:	18bff916 	blt	r3,r2,80b808 <__alt_data_end+0xff80b808>
  80b824:	10c00316 	blt	r2,r3,80b834 <__gedf2+0xc4>
  80b828:	42bff736 	bltu	r8,r10,80b808 <__alt_data_end+0xff80b808>
  80b82c:	52000326 	beq	r10,r8,80b83c <__gedf2+0xcc>
  80b830:	5200042e 	bgeu	r10,r8,80b844 <__gedf2+0xd4>
  80b834:	283fec1e 	bne	r5,zero,80b7e8 <__alt_data_end+0xff80b7e8>
  80b838:	003ff406 	br	80b80c <__alt_data_end+0xff80b80c>
  80b83c:	313ff236 	bltu	r6,r4,80b808 <__alt_data_end+0xff80b808>
  80b840:	21bffc36 	bltu	r4,r6,80b834 <__alt_data_end+0xff80b834>
  80b844:	0005883a 	mov	r2,zero
  80b848:	f800283a 	ret

0080b84c <__ledf2>:
  80b84c:	2804d53a 	srli	r2,r5,20
  80b850:	3810d53a 	srli	r8,r7,20
  80b854:	00c00434 	movhi	r3,16
  80b858:	18ffffc4 	addi	r3,r3,-1
  80b85c:	1081ffcc 	andi	r2,r2,2047
  80b860:	0241ffc4 	movi	r9,2047
  80b864:	28d4703a 	and	r10,r5,r3
  80b868:	4201ffcc 	andi	r8,r8,2047
  80b86c:	38c6703a 	and	r3,r7,r3
  80b870:	280ad7fa 	srli	r5,r5,31
  80b874:	380ed7fa 	srli	r7,r7,31
  80b878:	12401f26 	beq	r2,r9,80b8f8 <__ledf2+0xac>
  80b87c:	0241ffc4 	movi	r9,2047
  80b880:	42401426 	beq	r8,r9,80b8d4 <__ledf2+0x88>
  80b884:	1000091e 	bne	r2,zero,80b8ac <__ledf2+0x60>
  80b888:	2296b03a 	or	r11,r4,r10
  80b88c:	5813003a 	cmpeq	r9,r11,zero
  80b890:	29403fcc 	andi	r5,r5,255
  80b894:	40000a1e 	bne	r8,zero,80b8c0 <__ledf2+0x74>
  80b898:	30d8b03a 	or	r12,r6,r3
  80b89c:	6000081e 	bne	r12,zero,80b8c0 <__ledf2+0x74>
  80b8a0:	0005883a 	mov	r2,zero
  80b8a4:	5800111e 	bne	r11,zero,80b8ec <__ledf2+0xa0>
  80b8a8:	f800283a 	ret
  80b8ac:	29403fcc 	andi	r5,r5,255
  80b8b0:	40000c1e 	bne	r8,zero,80b8e4 <__ledf2+0x98>
  80b8b4:	30d2b03a 	or	r9,r6,r3
  80b8b8:	48000c26 	beq	r9,zero,80b8ec <__ledf2+0xa0>
  80b8bc:	0013883a 	mov	r9,zero
  80b8c0:	39c03fcc 	andi	r7,r7,255
  80b8c4:	48000826 	beq	r9,zero,80b8e8 <__ledf2+0x9c>
  80b8c8:	38001126 	beq	r7,zero,80b910 <__ledf2+0xc4>
  80b8cc:	00800044 	movi	r2,1
  80b8d0:	f800283a 	ret
  80b8d4:	30d2b03a 	or	r9,r6,r3
  80b8d8:	483fea26 	beq	r9,zero,80b884 <__alt_data_end+0xff80b884>
  80b8dc:	00800084 	movi	r2,2
  80b8e0:	f800283a 	ret
  80b8e4:	39c03fcc 	andi	r7,r7,255
  80b8e8:	39400726 	beq	r7,r5,80b908 <__ledf2+0xbc>
  80b8ec:	2800081e 	bne	r5,zero,80b910 <__ledf2+0xc4>
  80b8f0:	00800044 	movi	r2,1
  80b8f4:	f800283a 	ret
  80b8f8:	2292b03a 	or	r9,r4,r10
  80b8fc:	483fdf26 	beq	r9,zero,80b87c <__alt_data_end+0xff80b87c>
  80b900:	00800084 	movi	r2,2
  80b904:	f800283a 	ret
  80b908:	4080030e 	bge	r8,r2,80b918 <__ledf2+0xcc>
  80b90c:	383fef26 	beq	r7,zero,80b8cc <__alt_data_end+0xff80b8cc>
  80b910:	00bfffc4 	movi	r2,-1
  80b914:	f800283a 	ret
  80b918:	123feb16 	blt	r2,r8,80b8c8 <__alt_data_end+0xff80b8c8>
  80b91c:	1abff336 	bltu	r3,r10,80b8ec <__alt_data_end+0xff80b8ec>
  80b920:	50c00326 	beq	r10,r3,80b930 <__ledf2+0xe4>
  80b924:	50c0042e 	bgeu	r10,r3,80b938 <__ledf2+0xec>
  80b928:	283fe81e 	bne	r5,zero,80b8cc <__alt_data_end+0xff80b8cc>
  80b92c:	003ff806 	br	80b910 <__alt_data_end+0xff80b910>
  80b930:	313fee36 	bltu	r6,r4,80b8ec <__alt_data_end+0xff80b8ec>
  80b934:	21bffc36 	bltu	r4,r6,80b928 <__alt_data_end+0xff80b928>
  80b938:	0005883a 	mov	r2,zero
  80b93c:	f800283a 	ret

0080b940 <__muldf3>:
  80b940:	defff304 	addi	sp,sp,-52
  80b944:	2804d53a 	srli	r2,r5,20
  80b948:	dd800915 	stw	r22,36(sp)
  80b94c:	282cd7fa 	srli	r22,r5,31
  80b950:	dc000315 	stw	r16,12(sp)
  80b954:	04000434 	movhi	r16,16
  80b958:	dd400815 	stw	r21,32(sp)
  80b95c:	dc800515 	stw	r18,20(sp)
  80b960:	843fffc4 	addi	r16,r16,-1
  80b964:	dfc00c15 	stw	ra,48(sp)
  80b968:	df000b15 	stw	fp,44(sp)
  80b96c:	ddc00a15 	stw	r23,40(sp)
  80b970:	dd000715 	stw	r20,28(sp)
  80b974:	dcc00615 	stw	r19,24(sp)
  80b978:	dc400415 	stw	r17,16(sp)
  80b97c:	1481ffcc 	andi	r18,r2,2047
  80b980:	2c20703a 	and	r16,r5,r16
  80b984:	b02b883a 	mov	r21,r22
  80b988:	b2403fcc 	andi	r9,r22,255
  80b98c:	90006026 	beq	r18,zero,80bb10 <__muldf3+0x1d0>
  80b990:	0081ffc4 	movi	r2,2047
  80b994:	2029883a 	mov	r20,r4
  80b998:	90803626 	beq	r18,r2,80ba74 <__muldf3+0x134>
  80b99c:	80800434 	orhi	r2,r16,16
  80b9a0:	100490fa 	slli	r2,r2,3
  80b9a4:	2020d77a 	srli	r16,r4,29
  80b9a8:	202890fa 	slli	r20,r4,3
  80b9ac:	94bf0044 	addi	r18,r18,-1023
  80b9b0:	80a0b03a 	or	r16,r16,r2
  80b9b4:	0027883a 	mov	r19,zero
  80b9b8:	0039883a 	mov	fp,zero
  80b9bc:	3804d53a 	srli	r2,r7,20
  80b9c0:	382ed7fa 	srli	r23,r7,31
  80b9c4:	04400434 	movhi	r17,16
  80b9c8:	8c7fffc4 	addi	r17,r17,-1
  80b9cc:	1081ffcc 	andi	r2,r2,2047
  80b9d0:	3011883a 	mov	r8,r6
  80b9d4:	3c62703a 	and	r17,r7,r17
  80b9d8:	ba803fcc 	andi	r10,r23,255
  80b9dc:	10006d26 	beq	r2,zero,80bb94 <__muldf3+0x254>
  80b9e0:	00c1ffc4 	movi	r3,2047
  80b9e4:	10c06526 	beq	r2,r3,80bb7c <__muldf3+0x23c>
  80b9e8:	88c00434 	orhi	r3,r17,16
  80b9ec:	180690fa 	slli	r3,r3,3
  80b9f0:	3022d77a 	srli	r17,r6,29
  80b9f4:	301090fa 	slli	r8,r6,3
  80b9f8:	10bf0044 	addi	r2,r2,-1023
  80b9fc:	88e2b03a 	or	r17,r17,r3
  80ba00:	000b883a 	mov	r5,zero
  80ba04:	9085883a 	add	r2,r18,r2
  80ba08:	2cc8b03a 	or	r4,r5,r19
  80ba0c:	00c003c4 	movi	r3,15
  80ba10:	bdacf03a 	xor	r22,r23,r22
  80ba14:	12c00044 	addi	r11,r2,1
  80ba18:	19009936 	bltu	r3,r4,80bc80 <__muldf3+0x340>
  80ba1c:	200890ba 	slli	r4,r4,2
  80ba20:	00c02074 	movhi	r3,129
  80ba24:	18ee8d04 	addi	r3,r3,-17868
  80ba28:	20c9883a 	add	r4,r4,r3
  80ba2c:	20c00017 	ldw	r3,0(r4)
  80ba30:	1800683a 	jmp	r3
  80ba34:	0080bc80 	call	80bc8 <__alt_mem_sdram-0x77f438>
  80ba38:	0080ba94 	movui	r2,746
  80ba3c:	0080ba94 	movui	r2,746
  80ba40:	0080ba90 	cmplti	r2,zero,746
  80ba44:	0080bc5c 	xori	r2,zero,753
  80ba48:	0080bc5c 	xori	r2,zero,753
  80ba4c:	0080bc44 	movi	r2,753
  80ba50:	0080ba90 	cmplti	r2,zero,746
  80ba54:	0080bc5c 	xori	r2,zero,753
  80ba58:	0080bc44 	movi	r2,753
  80ba5c:	0080bc5c 	xori	r2,zero,753
  80ba60:	0080ba90 	cmplti	r2,zero,746
  80ba64:	0080bc6c 	andhi	r2,zero,753
  80ba68:	0080bc6c 	andhi	r2,zero,753
  80ba6c:	0080bc6c 	andhi	r2,zero,753
  80ba70:	0080be88 	cmpgei	r2,zero,762
  80ba74:	2404b03a 	or	r2,r4,r16
  80ba78:	10006f1e 	bne	r2,zero,80bc38 <__muldf3+0x2f8>
  80ba7c:	04c00204 	movi	r19,8
  80ba80:	0021883a 	mov	r16,zero
  80ba84:	0029883a 	mov	r20,zero
  80ba88:	07000084 	movi	fp,2
  80ba8c:	003fcb06 	br	80b9bc <__alt_data_end+0xff80b9bc>
  80ba90:	502d883a 	mov	r22,r10
  80ba94:	00800084 	movi	r2,2
  80ba98:	28805726 	beq	r5,r2,80bbf8 <__muldf3+0x2b8>
  80ba9c:	008000c4 	movi	r2,3
  80baa0:	28816626 	beq	r5,r2,80c03c <__muldf3+0x6fc>
  80baa4:	00800044 	movi	r2,1
  80baa8:	2881411e 	bne	r5,r2,80bfb0 <__muldf3+0x670>
  80baac:	b02b883a 	mov	r21,r22
  80bab0:	0005883a 	mov	r2,zero
  80bab4:	000b883a 	mov	r5,zero
  80bab8:	0029883a 	mov	r20,zero
  80babc:	1004953a 	slli	r2,r2,20
  80bac0:	a8c03fcc 	andi	r3,r21,255
  80bac4:	04400434 	movhi	r17,16
  80bac8:	8c7fffc4 	addi	r17,r17,-1
  80bacc:	180697fa 	slli	r3,r3,31
  80bad0:	2c4a703a 	and	r5,r5,r17
  80bad4:	288ab03a 	or	r5,r5,r2
  80bad8:	28c6b03a 	or	r3,r5,r3
  80badc:	a005883a 	mov	r2,r20
  80bae0:	dfc00c17 	ldw	ra,48(sp)
  80bae4:	df000b17 	ldw	fp,44(sp)
  80bae8:	ddc00a17 	ldw	r23,40(sp)
  80baec:	dd800917 	ldw	r22,36(sp)
  80baf0:	dd400817 	ldw	r21,32(sp)
  80baf4:	dd000717 	ldw	r20,28(sp)
  80baf8:	dcc00617 	ldw	r19,24(sp)
  80bafc:	dc800517 	ldw	r18,20(sp)
  80bb00:	dc400417 	ldw	r17,16(sp)
  80bb04:	dc000317 	ldw	r16,12(sp)
  80bb08:	dec00d04 	addi	sp,sp,52
  80bb0c:	f800283a 	ret
  80bb10:	2404b03a 	or	r2,r4,r16
  80bb14:	2027883a 	mov	r19,r4
  80bb18:	10004226 	beq	r2,zero,80bc24 <__muldf3+0x2e4>
  80bb1c:	8000fc26 	beq	r16,zero,80bf10 <__muldf3+0x5d0>
  80bb20:	8009883a 	mov	r4,r16
  80bb24:	d9800215 	stw	r6,8(sp)
  80bb28:	d9c00015 	stw	r7,0(sp)
  80bb2c:	da400115 	stw	r9,4(sp)
  80bb30:	080cb580 	call	80cb58 <__clzsi2>
  80bb34:	d9800217 	ldw	r6,8(sp)
  80bb38:	d9c00017 	ldw	r7,0(sp)
  80bb3c:	da400117 	ldw	r9,4(sp)
  80bb40:	113ffd44 	addi	r4,r2,-11
  80bb44:	00c00704 	movi	r3,28
  80bb48:	1900ed16 	blt	r3,r4,80bf00 <__muldf3+0x5c0>
  80bb4c:	00c00744 	movi	r3,29
  80bb50:	147ffe04 	addi	r17,r2,-8
  80bb54:	1907c83a 	sub	r3,r3,r4
  80bb58:	8460983a 	sll	r16,r16,r17
  80bb5c:	98c6d83a 	srl	r3,r19,r3
  80bb60:	9c68983a 	sll	r20,r19,r17
  80bb64:	1c20b03a 	or	r16,r3,r16
  80bb68:	1080fcc4 	addi	r2,r2,1011
  80bb6c:	00a5c83a 	sub	r18,zero,r2
  80bb70:	0027883a 	mov	r19,zero
  80bb74:	0039883a 	mov	fp,zero
  80bb78:	003f9006 	br	80b9bc <__alt_data_end+0xff80b9bc>
  80bb7c:	3446b03a 	or	r3,r6,r17
  80bb80:	1800261e 	bne	r3,zero,80bc1c <__muldf3+0x2dc>
  80bb84:	0023883a 	mov	r17,zero
  80bb88:	0011883a 	mov	r8,zero
  80bb8c:	01400084 	movi	r5,2
  80bb90:	003f9c06 	br	80ba04 <__alt_data_end+0xff80ba04>
  80bb94:	3446b03a 	or	r3,r6,r17
  80bb98:	18001c26 	beq	r3,zero,80bc0c <__muldf3+0x2cc>
  80bb9c:	8800ce26 	beq	r17,zero,80bed8 <__muldf3+0x598>
  80bba0:	8809883a 	mov	r4,r17
  80bba4:	d9800215 	stw	r6,8(sp)
  80bba8:	da400115 	stw	r9,4(sp)
  80bbac:	da800015 	stw	r10,0(sp)
  80bbb0:	080cb580 	call	80cb58 <__clzsi2>
  80bbb4:	d9800217 	ldw	r6,8(sp)
  80bbb8:	da400117 	ldw	r9,4(sp)
  80bbbc:	da800017 	ldw	r10,0(sp)
  80bbc0:	113ffd44 	addi	r4,r2,-11
  80bbc4:	00c00704 	movi	r3,28
  80bbc8:	1900bf16 	blt	r3,r4,80bec8 <__muldf3+0x588>
  80bbcc:	00c00744 	movi	r3,29
  80bbd0:	123ffe04 	addi	r8,r2,-8
  80bbd4:	1907c83a 	sub	r3,r3,r4
  80bbd8:	8a22983a 	sll	r17,r17,r8
  80bbdc:	30c6d83a 	srl	r3,r6,r3
  80bbe0:	3210983a 	sll	r8,r6,r8
  80bbe4:	1c62b03a 	or	r17,r3,r17
  80bbe8:	1080fcc4 	addi	r2,r2,1011
  80bbec:	0085c83a 	sub	r2,zero,r2
  80bbf0:	000b883a 	mov	r5,zero
  80bbf4:	003f8306 	br	80ba04 <__alt_data_end+0xff80ba04>
  80bbf8:	b02b883a 	mov	r21,r22
  80bbfc:	0081ffc4 	movi	r2,2047
  80bc00:	000b883a 	mov	r5,zero
  80bc04:	0029883a 	mov	r20,zero
  80bc08:	003fac06 	br	80babc <__alt_data_end+0xff80babc>
  80bc0c:	0023883a 	mov	r17,zero
  80bc10:	0011883a 	mov	r8,zero
  80bc14:	01400044 	movi	r5,1
  80bc18:	003f7a06 	br	80ba04 <__alt_data_end+0xff80ba04>
  80bc1c:	014000c4 	movi	r5,3
  80bc20:	003f7806 	br	80ba04 <__alt_data_end+0xff80ba04>
  80bc24:	04c00104 	movi	r19,4
  80bc28:	0021883a 	mov	r16,zero
  80bc2c:	0029883a 	mov	r20,zero
  80bc30:	07000044 	movi	fp,1
  80bc34:	003f6106 	br	80b9bc <__alt_data_end+0xff80b9bc>
  80bc38:	04c00304 	movi	r19,12
  80bc3c:	070000c4 	movi	fp,3
  80bc40:	003f5e06 	br	80b9bc <__alt_data_end+0xff80b9bc>
  80bc44:	01400434 	movhi	r5,16
  80bc48:	002b883a 	mov	r21,zero
  80bc4c:	297fffc4 	addi	r5,r5,-1
  80bc50:	053fffc4 	movi	r20,-1
  80bc54:	0081ffc4 	movi	r2,2047
  80bc58:	003f9806 	br	80babc <__alt_data_end+0xff80babc>
  80bc5c:	8023883a 	mov	r17,r16
  80bc60:	a011883a 	mov	r8,r20
  80bc64:	e00b883a 	mov	r5,fp
  80bc68:	003f8a06 	br	80ba94 <__alt_data_end+0xff80ba94>
  80bc6c:	8023883a 	mov	r17,r16
  80bc70:	a011883a 	mov	r8,r20
  80bc74:	482d883a 	mov	r22,r9
  80bc78:	e00b883a 	mov	r5,fp
  80bc7c:	003f8506 	br	80ba94 <__alt_data_end+0xff80ba94>
  80bc80:	a00ad43a 	srli	r5,r20,16
  80bc84:	401ad43a 	srli	r13,r8,16
  80bc88:	a53fffcc 	andi	r20,r20,65535
  80bc8c:	423fffcc 	andi	r8,r8,65535
  80bc90:	4519383a 	mul	r12,r8,r20
  80bc94:	4147383a 	mul	r3,r8,r5
  80bc98:	6d09383a 	mul	r4,r13,r20
  80bc9c:	600cd43a 	srli	r6,r12,16
  80bca0:	2b5d383a 	mul	r14,r5,r13
  80bca4:	20c9883a 	add	r4,r4,r3
  80bca8:	310d883a 	add	r6,r6,r4
  80bcac:	30c0022e 	bgeu	r6,r3,80bcb8 <__muldf3+0x378>
  80bcb0:	00c00074 	movhi	r3,1
  80bcb4:	70dd883a 	add	r14,r14,r3
  80bcb8:	8826d43a 	srli	r19,r17,16
  80bcbc:	8bffffcc 	andi	r15,r17,65535
  80bcc0:	7d23383a 	mul	r17,r15,r20
  80bcc4:	7949383a 	mul	r4,r15,r5
  80bcc8:	9d29383a 	mul	r20,r19,r20
  80bccc:	8814d43a 	srli	r10,r17,16
  80bcd0:	3012943a 	slli	r9,r6,16
  80bcd4:	a129883a 	add	r20,r20,r4
  80bcd8:	633fffcc 	andi	r12,r12,65535
  80bcdc:	5515883a 	add	r10,r10,r20
  80bce0:	3006d43a 	srli	r3,r6,16
  80bce4:	4b13883a 	add	r9,r9,r12
  80bce8:	2ccb383a 	mul	r5,r5,r19
  80bcec:	5100022e 	bgeu	r10,r4,80bcf8 <__muldf3+0x3b8>
  80bcf0:	01000074 	movhi	r4,1
  80bcf4:	290b883a 	add	r5,r5,r4
  80bcf8:	802ad43a 	srli	r21,r16,16
  80bcfc:	843fffcc 	andi	r16,r16,65535
  80bd00:	440d383a 	mul	r6,r8,r16
  80bd04:	4565383a 	mul	r18,r8,r21
  80bd08:	8349383a 	mul	r4,r16,r13
  80bd0c:	500e943a 	slli	r7,r10,16
  80bd10:	3010d43a 	srli	r8,r6,16
  80bd14:	5028d43a 	srli	r20,r10,16
  80bd18:	2489883a 	add	r4,r4,r18
  80bd1c:	8abfffcc 	andi	r10,r17,65535
  80bd20:	3a95883a 	add	r10,r7,r10
  80bd24:	4119883a 	add	r12,r8,r4
  80bd28:	a169883a 	add	r20,r20,r5
  80bd2c:	1a87883a 	add	r3,r3,r10
  80bd30:	6d5b383a 	mul	r13,r13,r21
  80bd34:	6480022e 	bgeu	r12,r18,80bd40 <__muldf3+0x400>
  80bd38:	01000074 	movhi	r4,1
  80bd3c:	691b883a 	add	r13,r13,r4
  80bd40:	7c25383a 	mul	r18,r15,r16
  80bd44:	7d4b383a 	mul	r5,r15,r21
  80bd48:	84cf383a 	mul	r7,r16,r19
  80bd4c:	901ed43a 	srli	r15,r18,16
  80bd50:	6008d43a 	srli	r4,r12,16
  80bd54:	6010943a 	slli	r8,r12,16
  80bd58:	394f883a 	add	r7,r7,r5
  80bd5c:	333fffcc 	andi	r12,r6,65535
  80bd60:	79df883a 	add	r15,r15,r7
  80bd64:	235b883a 	add	r13,r4,r13
  80bd68:	9d63383a 	mul	r17,r19,r21
  80bd6c:	4309883a 	add	r4,r8,r12
  80bd70:	7940022e 	bgeu	r15,r5,80bd7c <__muldf3+0x43c>
  80bd74:	01400074 	movhi	r5,1
  80bd78:	8963883a 	add	r17,r17,r5
  80bd7c:	780a943a 	slli	r5,r15,16
  80bd80:	91bfffcc 	andi	r6,r18,65535
  80bd84:	70c7883a 	add	r3,r14,r3
  80bd88:	298d883a 	add	r6,r5,r6
  80bd8c:	1a8f803a 	cmpltu	r7,r3,r10
  80bd90:	350b883a 	add	r5,r6,r20
  80bd94:	20c7883a 	add	r3,r4,r3
  80bd98:	3955883a 	add	r10,r7,r5
  80bd9c:	1909803a 	cmpltu	r4,r3,r4
  80bda0:	6a91883a 	add	r8,r13,r10
  80bda4:	780cd43a 	srli	r6,r15,16
  80bda8:	2219883a 	add	r12,r4,r8
  80bdac:	2d0b803a 	cmpltu	r5,r5,r20
  80bdb0:	51cf803a 	cmpltu	r7,r10,r7
  80bdb4:	29ceb03a 	or	r7,r5,r7
  80bdb8:	4351803a 	cmpltu	r8,r8,r13
  80bdbc:	610b803a 	cmpltu	r5,r12,r4
  80bdc0:	4148b03a 	or	r4,r8,r5
  80bdc4:	398f883a 	add	r7,r7,r6
  80bdc8:	3909883a 	add	r4,r7,r4
  80bdcc:	1810927a 	slli	r8,r3,9
  80bdd0:	2449883a 	add	r4,r4,r17
  80bdd4:	2008927a 	slli	r4,r4,9
  80bdd8:	6022d5fa 	srli	r17,r12,23
  80bddc:	1806d5fa 	srli	r3,r3,23
  80bde0:	4252b03a 	or	r9,r8,r9
  80bde4:	600a927a 	slli	r5,r12,9
  80bde8:	4810c03a 	cmpne	r8,r9,zero
  80bdec:	2462b03a 	or	r17,r4,r17
  80bdf0:	40c6b03a 	or	r3,r8,r3
  80bdf4:	8900402c 	andhi	r4,r17,256
  80bdf8:	1950b03a 	or	r8,r3,r5
  80bdfc:	20000726 	beq	r4,zero,80be1c <__muldf3+0x4dc>
  80be00:	4006d07a 	srli	r3,r8,1
  80be04:	880497fa 	slli	r2,r17,31
  80be08:	4200004c 	andi	r8,r8,1
  80be0c:	8822d07a 	srli	r17,r17,1
  80be10:	1a10b03a 	or	r8,r3,r8
  80be14:	1210b03a 	or	r8,r2,r8
  80be18:	5805883a 	mov	r2,r11
  80be1c:	1140ffc4 	addi	r5,r2,1023
  80be20:	0140440e 	bge	zero,r5,80bf34 <__muldf3+0x5f4>
  80be24:	40c001cc 	andi	r3,r8,7
  80be28:	18000726 	beq	r3,zero,80be48 <__muldf3+0x508>
  80be2c:	40c003cc 	andi	r3,r8,15
  80be30:	01000104 	movi	r4,4
  80be34:	19000426 	beq	r3,r4,80be48 <__muldf3+0x508>
  80be38:	4107883a 	add	r3,r8,r4
  80be3c:	1a11803a 	cmpltu	r8,r3,r8
  80be40:	8a23883a 	add	r17,r17,r8
  80be44:	1811883a 	mov	r8,r3
  80be48:	88c0402c 	andhi	r3,r17,256
  80be4c:	18000426 	beq	r3,zero,80be60 <__muldf3+0x520>
  80be50:	11410004 	addi	r5,r2,1024
  80be54:	00bfc034 	movhi	r2,65280
  80be58:	10bfffc4 	addi	r2,r2,-1
  80be5c:	88a2703a 	and	r17,r17,r2
  80be60:	0081ff84 	movi	r2,2046
  80be64:	117f6416 	blt	r2,r5,80bbf8 <__alt_data_end+0xff80bbf8>
  80be68:	8828977a 	slli	r20,r17,29
  80be6c:	4010d0fa 	srli	r8,r8,3
  80be70:	8822927a 	slli	r17,r17,9
  80be74:	2881ffcc 	andi	r2,r5,2047
  80be78:	a228b03a 	or	r20,r20,r8
  80be7c:	880ad33a 	srli	r5,r17,12
  80be80:	b02b883a 	mov	r21,r22
  80be84:	003f0d06 	br	80babc <__alt_data_end+0xff80babc>
  80be88:	8080022c 	andhi	r2,r16,8
  80be8c:	10000926 	beq	r2,zero,80beb4 <__muldf3+0x574>
  80be90:	8880022c 	andhi	r2,r17,8
  80be94:	1000071e 	bne	r2,zero,80beb4 <__muldf3+0x574>
  80be98:	00800434 	movhi	r2,16
  80be9c:	89400234 	orhi	r5,r17,8
  80bea0:	10bfffc4 	addi	r2,r2,-1
  80bea4:	b82b883a 	mov	r21,r23
  80bea8:	288a703a 	and	r5,r5,r2
  80beac:	4029883a 	mov	r20,r8
  80beb0:	003f6806 	br	80bc54 <__alt_data_end+0xff80bc54>
  80beb4:	00800434 	movhi	r2,16
  80beb8:	81400234 	orhi	r5,r16,8
  80bebc:	10bfffc4 	addi	r2,r2,-1
  80bec0:	288a703a 	and	r5,r5,r2
  80bec4:	003f6306 	br	80bc54 <__alt_data_end+0xff80bc54>
  80bec8:	147ff604 	addi	r17,r2,-40
  80becc:	3462983a 	sll	r17,r6,r17
  80bed0:	0011883a 	mov	r8,zero
  80bed4:	003f4406 	br	80bbe8 <__alt_data_end+0xff80bbe8>
  80bed8:	3009883a 	mov	r4,r6
  80bedc:	d9800215 	stw	r6,8(sp)
  80bee0:	da400115 	stw	r9,4(sp)
  80bee4:	da800015 	stw	r10,0(sp)
  80bee8:	080cb580 	call	80cb58 <__clzsi2>
  80beec:	10800804 	addi	r2,r2,32
  80bef0:	da800017 	ldw	r10,0(sp)
  80bef4:	da400117 	ldw	r9,4(sp)
  80bef8:	d9800217 	ldw	r6,8(sp)
  80befc:	003f3006 	br	80bbc0 <__alt_data_end+0xff80bbc0>
  80bf00:	143ff604 	addi	r16,r2,-40
  80bf04:	9c20983a 	sll	r16,r19,r16
  80bf08:	0029883a 	mov	r20,zero
  80bf0c:	003f1606 	br	80bb68 <__alt_data_end+0xff80bb68>
  80bf10:	d9800215 	stw	r6,8(sp)
  80bf14:	d9c00015 	stw	r7,0(sp)
  80bf18:	da400115 	stw	r9,4(sp)
  80bf1c:	080cb580 	call	80cb58 <__clzsi2>
  80bf20:	10800804 	addi	r2,r2,32
  80bf24:	da400117 	ldw	r9,4(sp)
  80bf28:	d9c00017 	ldw	r7,0(sp)
  80bf2c:	d9800217 	ldw	r6,8(sp)
  80bf30:	003f0306 	br	80bb40 <__alt_data_end+0xff80bb40>
  80bf34:	00c00044 	movi	r3,1
  80bf38:	1947c83a 	sub	r3,r3,r5
  80bf3c:	00800e04 	movi	r2,56
  80bf40:	10feda16 	blt	r2,r3,80baac <__alt_data_end+0xff80baac>
  80bf44:	008007c4 	movi	r2,31
  80bf48:	10c01b16 	blt	r2,r3,80bfb8 <__muldf3+0x678>
  80bf4c:	00800804 	movi	r2,32
  80bf50:	10c5c83a 	sub	r2,r2,r3
  80bf54:	888a983a 	sll	r5,r17,r2
  80bf58:	40c8d83a 	srl	r4,r8,r3
  80bf5c:	4084983a 	sll	r2,r8,r2
  80bf60:	88e2d83a 	srl	r17,r17,r3
  80bf64:	2906b03a 	or	r3,r5,r4
  80bf68:	1004c03a 	cmpne	r2,r2,zero
  80bf6c:	1886b03a 	or	r3,r3,r2
  80bf70:	188001cc 	andi	r2,r3,7
  80bf74:	10000726 	beq	r2,zero,80bf94 <__muldf3+0x654>
  80bf78:	188003cc 	andi	r2,r3,15
  80bf7c:	01000104 	movi	r4,4
  80bf80:	11000426 	beq	r2,r4,80bf94 <__muldf3+0x654>
  80bf84:	1805883a 	mov	r2,r3
  80bf88:	10c00104 	addi	r3,r2,4
  80bf8c:	1885803a 	cmpltu	r2,r3,r2
  80bf90:	88a3883a 	add	r17,r17,r2
  80bf94:	8880202c 	andhi	r2,r17,128
  80bf98:	10001c26 	beq	r2,zero,80c00c <__muldf3+0x6cc>
  80bf9c:	b02b883a 	mov	r21,r22
  80bfa0:	00800044 	movi	r2,1
  80bfa4:	000b883a 	mov	r5,zero
  80bfa8:	0029883a 	mov	r20,zero
  80bfac:	003ec306 	br	80babc <__alt_data_end+0xff80babc>
  80bfb0:	5805883a 	mov	r2,r11
  80bfb4:	003f9906 	br	80be1c <__alt_data_end+0xff80be1c>
  80bfb8:	00bff844 	movi	r2,-31
  80bfbc:	1145c83a 	sub	r2,r2,r5
  80bfc0:	8888d83a 	srl	r4,r17,r2
  80bfc4:	00800804 	movi	r2,32
  80bfc8:	18801a26 	beq	r3,r2,80c034 <__muldf3+0x6f4>
  80bfcc:	00801004 	movi	r2,64
  80bfd0:	10c5c83a 	sub	r2,r2,r3
  80bfd4:	8884983a 	sll	r2,r17,r2
  80bfd8:	1204b03a 	or	r2,r2,r8
  80bfdc:	1004c03a 	cmpne	r2,r2,zero
  80bfe0:	2084b03a 	or	r2,r4,r2
  80bfe4:	144001cc 	andi	r17,r2,7
  80bfe8:	88000d1e 	bne	r17,zero,80c020 <__muldf3+0x6e0>
  80bfec:	000b883a 	mov	r5,zero
  80bff0:	1028d0fa 	srli	r20,r2,3
  80bff4:	b02b883a 	mov	r21,r22
  80bff8:	0005883a 	mov	r2,zero
  80bffc:	a468b03a 	or	r20,r20,r17
  80c000:	003eae06 	br	80babc <__alt_data_end+0xff80babc>
  80c004:	1007883a 	mov	r3,r2
  80c008:	0023883a 	mov	r17,zero
  80c00c:	880a927a 	slli	r5,r17,9
  80c010:	1805883a 	mov	r2,r3
  80c014:	8822977a 	slli	r17,r17,29
  80c018:	280ad33a 	srli	r5,r5,12
  80c01c:	003ff406 	br	80bff0 <__alt_data_end+0xff80bff0>
  80c020:	10c003cc 	andi	r3,r2,15
  80c024:	01000104 	movi	r4,4
  80c028:	193ff626 	beq	r3,r4,80c004 <__alt_data_end+0xff80c004>
  80c02c:	0023883a 	mov	r17,zero
  80c030:	003fd506 	br	80bf88 <__alt_data_end+0xff80bf88>
  80c034:	0005883a 	mov	r2,zero
  80c038:	003fe706 	br	80bfd8 <__alt_data_end+0xff80bfd8>
  80c03c:	00800434 	movhi	r2,16
  80c040:	89400234 	orhi	r5,r17,8
  80c044:	10bfffc4 	addi	r2,r2,-1
  80c048:	b02b883a 	mov	r21,r22
  80c04c:	288a703a 	and	r5,r5,r2
  80c050:	4029883a 	mov	r20,r8
  80c054:	003eff06 	br	80bc54 <__alt_data_end+0xff80bc54>

0080c058 <__subdf3>:
  80c058:	02000434 	movhi	r8,16
  80c05c:	423fffc4 	addi	r8,r8,-1
  80c060:	defffb04 	addi	sp,sp,-20
  80c064:	2a14703a 	and	r10,r5,r8
  80c068:	3812d53a 	srli	r9,r7,20
  80c06c:	3a10703a 	and	r8,r7,r8
  80c070:	2006d77a 	srli	r3,r4,29
  80c074:	3004d77a 	srli	r2,r6,29
  80c078:	dc000015 	stw	r16,0(sp)
  80c07c:	501490fa 	slli	r10,r10,3
  80c080:	2820d53a 	srli	r16,r5,20
  80c084:	401090fa 	slli	r8,r8,3
  80c088:	dc800215 	stw	r18,8(sp)
  80c08c:	dc400115 	stw	r17,4(sp)
  80c090:	dfc00415 	stw	ra,16(sp)
  80c094:	202290fa 	slli	r17,r4,3
  80c098:	dcc00315 	stw	r19,12(sp)
  80c09c:	4a41ffcc 	andi	r9,r9,2047
  80c0a0:	0101ffc4 	movi	r4,2047
  80c0a4:	2824d7fa 	srli	r18,r5,31
  80c0a8:	8401ffcc 	andi	r16,r16,2047
  80c0ac:	50c6b03a 	or	r3,r10,r3
  80c0b0:	380ed7fa 	srli	r7,r7,31
  80c0b4:	408ab03a 	or	r5,r8,r2
  80c0b8:	300c90fa 	slli	r6,r6,3
  80c0bc:	49009626 	beq	r9,r4,80c318 <__subdf3+0x2c0>
  80c0c0:	39c0005c 	xori	r7,r7,1
  80c0c4:	8245c83a 	sub	r2,r16,r9
  80c0c8:	3c807426 	beq	r7,r18,80c29c <__subdf3+0x244>
  80c0cc:	0080af0e 	bge	zero,r2,80c38c <__subdf3+0x334>
  80c0d0:	48002a1e 	bne	r9,zero,80c17c <__subdf3+0x124>
  80c0d4:	2988b03a 	or	r4,r5,r6
  80c0d8:	20009a1e 	bne	r4,zero,80c344 <__subdf3+0x2ec>
  80c0dc:	888001cc 	andi	r2,r17,7
  80c0e0:	10000726 	beq	r2,zero,80c100 <__subdf3+0xa8>
  80c0e4:	888003cc 	andi	r2,r17,15
  80c0e8:	01000104 	movi	r4,4
  80c0ec:	11000426 	beq	r2,r4,80c100 <__subdf3+0xa8>
  80c0f0:	890b883a 	add	r5,r17,r4
  80c0f4:	2c63803a 	cmpltu	r17,r5,r17
  80c0f8:	1c47883a 	add	r3,r3,r17
  80c0fc:	2823883a 	mov	r17,r5
  80c100:	1880202c 	andhi	r2,r3,128
  80c104:	10005926 	beq	r2,zero,80c26c <__subdf3+0x214>
  80c108:	84000044 	addi	r16,r16,1
  80c10c:	0081ffc4 	movi	r2,2047
  80c110:	8080be26 	beq	r16,r2,80c40c <__subdf3+0x3b4>
  80c114:	017fe034 	movhi	r5,65408
  80c118:	297fffc4 	addi	r5,r5,-1
  80c11c:	1946703a 	and	r3,r3,r5
  80c120:	1804977a 	slli	r2,r3,29
  80c124:	1806927a 	slli	r3,r3,9
  80c128:	8822d0fa 	srli	r17,r17,3
  80c12c:	8401ffcc 	andi	r16,r16,2047
  80c130:	180ad33a 	srli	r5,r3,12
  80c134:	9100004c 	andi	r4,r18,1
  80c138:	1444b03a 	or	r2,r2,r17
  80c13c:	80c1ffcc 	andi	r3,r16,2047
  80c140:	1820953a 	slli	r16,r3,20
  80c144:	20c03fcc 	andi	r3,r4,255
  80c148:	180897fa 	slli	r4,r3,31
  80c14c:	00c00434 	movhi	r3,16
  80c150:	18ffffc4 	addi	r3,r3,-1
  80c154:	28c6703a 	and	r3,r5,r3
  80c158:	1c06b03a 	or	r3,r3,r16
  80c15c:	1906b03a 	or	r3,r3,r4
  80c160:	dfc00417 	ldw	ra,16(sp)
  80c164:	dcc00317 	ldw	r19,12(sp)
  80c168:	dc800217 	ldw	r18,8(sp)
  80c16c:	dc400117 	ldw	r17,4(sp)
  80c170:	dc000017 	ldw	r16,0(sp)
  80c174:	dec00504 	addi	sp,sp,20
  80c178:	f800283a 	ret
  80c17c:	0101ffc4 	movi	r4,2047
  80c180:	813fd626 	beq	r16,r4,80c0dc <__alt_data_end+0xff80c0dc>
  80c184:	29402034 	orhi	r5,r5,128
  80c188:	01000e04 	movi	r4,56
  80c18c:	2080a316 	blt	r4,r2,80c41c <__subdf3+0x3c4>
  80c190:	010007c4 	movi	r4,31
  80c194:	2080c616 	blt	r4,r2,80c4b0 <__subdf3+0x458>
  80c198:	01000804 	movi	r4,32
  80c19c:	2089c83a 	sub	r4,r4,r2
  80c1a0:	2910983a 	sll	r8,r5,r4
  80c1a4:	308ed83a 	srl	r7,r6,r2
  80c1a8:	3108983a 	sll	r4,r6,r4
  80c1ac:	2884d83a 	srl	r2,r5,r2
  80c1b0:	41ccb03a 	or	r6,r8,r7
  80c1b4:	2008c03a 	cmpne	r4,r4,zero
  80c1b8:	310cb03a 	or	r6,r6,r4
  80c1bc:	898dc83a 	sub	r6,r17,r6
  80c1c0:	89a3803a 	cmpltu	r17,r17,r6
  80c1c4:	1887c83a 	sub	r3,r3,r2
  80c1c8:	1c47c83a 	sub	r3,r3,r17
  80c1cc:	3023883a 	mov	r17,r6
  80c1d0:	1880202c 	andhi	r2,r3,128
  80c1d4:	10002326 	beq	r2,zero,80c264 <__subdf3+0x20c>
  80c1d8:	04c02034 	movhi	r19,128
  80c1dc:	9cffffc4 	addi	r19,r19,-1
  80c1e0:	1ce6703a 	and	r19,r3,r19
  80c1e4:	98007a26 	beq	r19,zero,80c3d0 <__subdf3+0x378>
  80c1e8:	9809883a 	mov	r4,r19
  80c1ec:	080cb580 	call	80cb58 <__clzsi2>
  80c1f0:	113ffe04 	addi	r4,r2,-8
  80c1f4:	00c007c4 	movi	r3,31
  80c1f8:	19007b16 	blt	r3,r4,80c3e8 <__subdf3+0x390>
  80c1fc:	00800804 	movi	r2,32
  80c200:	1105c83a 	sub	r2,r2,r4
  80c204:	8884d83a 	srl	r2,r17,r2
  80c208:	9906983a 	sll	r3,r19,r4
  80c20c:	8922983a 	sll	r17,r17,r4
  80c210:	10c4b03a 	or	r2,r2,r3
  80c214:	24007816 	blt	r4,r16,80c3f8 <__subdf3+0x3a0>
  80c218:	2421c83a 	sub	r16,r4,r16
  80c21c:	80c00044 	addi	r3,r16,1
  80c220:	010007c4 	movi	r4,31
  80c224:	20c09516 	blt	r4,r3,80c47c <__subdf3+0x424>
  80c228:	01400804 	movi	r5,32
  80c22c:	28cbc83a 	sub	r5,r5,r3
  80c230:	88c8d83a 	srl	r4,r17,r3
  80c234:	8962983a 	sll	r17,r17,r5
  80c238:	114a983a 	sll	r5,r2,r5
  80c23c:	10c6d83a 	srl	r3,r2,r3
  80c240:	8804c03a 	cmpne	r2,r17,zero
  80c244:	290ab03a 	or	r5,r5,r4
  80c248:	28a2b03a 	or	r17,r5,r2
  80c24c:	0021883a 	mov	r16,zero
  80c250:	003fa206 	br	80c0dc <__alt_data_end+0xff80c0dc>
  80c254:	2090b03a 	or	r8,r4,r2
  80c258:	40018e26 	beq	r8,zero,80c894 <__subdf3+0x83c>
  80c25c:	1007883a 	mov	r3,r2
  80c260:	2023883a 	mov	r17,r4
  80c264:	888001cc 	andi	r2,r17,7
  80c268:	103f9e1e 	bne	r2,zero,80c0e4 <__alt_data_end+0xff80c0e4>
  80c26c:	1804977a 	slli	r2,r3,29
  80c270:	8822d0fa 	srli	r17,r17,3
  80c274:	1810d0fa 	srli	r8,r3,3
  80c278:	9100004c 	andi	r4,r18,1
  80c27c:	1444b03a 	or	r2,r2,r17
  80c280:	00c1ffc4 	movi	r3,2047
  80c284:	80c02826 	beq	r16,r3,80c328 <__subdf3+0x2d0>
  80c288:	01400434 	movhi	r5,16
  80c28c:	297fffc4 	addi	r5,r5,-1
  80c290:	80e0703a 	and	r16,r16,r3
  80c294:	414a703a 	and	r5,r8,r5
  80c298:	003fa806 	br	80c13c <__alt_data_end+0xff80c13c>
  80c29c:	0080630e 	bge	zero,r2,80c42c <__subdf3+0x3d4>
  80c2a0:	48003026 	beq	r9,zero,80c364 <__subdf3+0x30c>
  80c2a4:	0101ffc4 	movi	r4,2047
  80c2a8:	813f8c26 	beq	r16,r4,80c0dc <__alt_data_end+0xff80c0dc>
  80c2ac:	29402034 	orhi	r5,r5,128
  80c2b0:	01000e04 	movi	r4,56
  80c2b4:	2080a90e 	bge	r4,r2,80c55c <__subdf3+0x504>
  80c2b8:	298cb03a 	or	r6,r5,r6
  80c2bc:	3012c03a 	cmpne	r9,r6,zero
  80c2c0:	0005883a 	mov	r2,zero
  80c2c4:	4c53883a 	add	r9,r9,r17
  80c2c8:	4c63803a 	cmpltu	r17,r9,r17
  80c2cc:	10c7883a 	add	r3,r2,r3
  80c2d0:	88c7883a 	add	r3,r17,r3
  80c2d4:	4823883a 	mov	r17,r9
  80c2d8:	1880202c 	andhi	r2,r3,128
  80c2dc:	1000d026 	beq	r2,zero,80c620 <__subdf3+0x5c8>
  80c2e0:	84000044 	addi	r16,r16,1
  80c2e4:	0081ffc4 	movi	r2,2047
  80c2e8:	8080fe26 	beq	r16,r2,80c6e4 <__subdf3+0x68c>
  80c2ec:	00bfe034 	movhi	r2,65408
  80c2f0:	10bfffc4 	addi	r2,r2,-1
  80c2f4:	1886703a 	and	r3,r3,r2
  80c2f8:	880ad07a 	srli	r5,r17,1
  80c2fc:	180497fa 	slli	r2,r3,31
  80c300:	8900004c 	andi	r4,r17,1
  80c304:	2922b03a 	or	r17,r5,r4
  80c308:	1806d07a 	srli	r3,r3,1
  80c30c:	1462b03a 	or	r17,r2,r17
  80c310:	3825883a 	mov	r18,r7
  80c314:	003f7106 	br	80c0dc <__alt_data_end+0xff80c0dc>
  80c318:	2984b03a 	or	r2,r5,r6
  80c31c:	103f6826 	beq	r2,zero,80c0c0 <__alt_data_end+0xff80c0c0>
  80c320:	39c03fcc 	andi	r7,r7,255
  80c324:	003f6706 	br	80c0c4 <__alt_data_end+0xff80c0c4>
  80c328:	4086b03a 	or	r3,r8,r2
  80c32c:	18015226 	beq	r3,zero,80c878 <__subdf3+0x820>
  80c330:	00c00434 	movhi	r3,16
  80c334:	41400234 	orhi	r5,r8,8
  80c338:	18ffffc4 	addi	r3,r3,-1
  80c33c:	28ca703a 	and	r5,r5,r3
  80c340:	003f7e06 	br	80c13c <__alt_data_end+0xff80c13c>
  80c344:	10bfffc4 	addi	r2,r2,-1
  80c348:	1000491e 	bne	r2,zero,80c470 <__subdf3+0x418>
  80c34c:	898fc83a 	sub	r7,r17,r6
  80c350:	89e3803a 	cmpltu	r17,r17,r7
  80c354:	1947c83a 	sub	r3,r3,r5
  80c358:	1c47c83a 	sub	r3,r3,r17
  80c35c:	3823883a 	mov	r17,r7
  80c360:	003f9b06 	br	80c1d0 <__alt_data_end+0xff80c1d0>
  80c364:	2988b03a 	or	r4,r5,r6
  80c368:	203f5c26 	beq	r4,zero,80c0dc <__alt_data_end+0xff80c0dc>
  80c36c:	10bfffc4 	addi	r2,r2,-1
  80c370:	1000931e 	bne	r2,zero,80c5c0 <__subdf3+0x568>
  80c374:	898d883a 	add	r6,r17,r6
  80c378:	3463803a 	cmpltu	r17,r6,r17
  80c37c:	1947883a 	add	r3,r3,r5
  80c380:	88c7883a 	add	r3,r17,r3
  80c384:	3023883a 	mov	r17,r6
  80c388:	003fd306 	br	80c2d8 <__alt_data_end+0xff80c2d8>
  80c38c:	1000541e 	bne	r2,zero,80c4e0 <__subdf3+0x488>
  80c390:	80800044 	addi	r2,r16,1
  80c394:	1081ffcc 	andi	r2,r2,2047
  80c398:	01000044 	movi	r4,1
  80c39c:	2080a20e 	bge	r4,r2,80c628 <__subdf3+0x5d0>
  80c3a0:	8989c83a 	sub	r4,r17,r6
  80c3a4:	8905803a 	cmpltu	r2,r17,r4
  80c3a8:	1967c83a 	sub	r19,r3,r5
  80c3ac:	98a7c83a 	sub	r19,r19,r2
  80c3b0:	9880202c 	andhi	r2,r19,128
  80c3b4:	10006326 	beq	r2,zero,80c544 <__subdf3+0x4ec>
  80c3b8:	3463c83a 	sub	r17,r6,r17
  80c3bc:	28c7c83a 	sub	r3,r5,r3
  80c3c0:	344d803a 	cmpltu	r6,r6,r17
  80c3c4:	19a7c83a 	sub	r19,r3,r6
  80c3c8:	3825883a 	mov	r18,r7
  80c3cc:	983f861e 	bne	r19,zero,80c1e8 <__alt_data_end+0xff80c1e8>
  80c3d0:	8809883a 	mov	r4,r17
  80c3d4:	080cb580 	call	80cb58 <__clzsi2>
  80c3d8:	10800804 	addi	r2,r2,32
  80c3dc:	113ffe04 	addi	r4,r2,-8
  80c3e0:	00c007c4 	movi	r3,31
  80c3e4:	193f850e 	bge	r3,r4,80c1fc <__alt_data_end+0xff80c1fc>
  80c3e8:	10bff604 	addi	r2,r2,-40
  80c3ec:	8884983a 	sll	r2,r17,r2
  80c3f0:	0023883a 	mov	r17,zero
  80c3f4:	243f880e 	bge	r4,r16,80c218 <__alt_data_end+0xff80c218>
  80c3f8:	00ffe034 	movhi	r3,65408
  80c3fc:	18ffffc4 	addi	r3,r3,-1
  80c400:	8121c83a 	sub	r16,r16,r4
  80c404:	10c6703a 	and	r3,r2,r3
  80c408:	003f3406 	br	80c0dc <__alt_data_end+0xff80c0dc>
  80c40c:	9100004c 	andi	r4,r18,1
  80c410:	000b883a 	mov	r5,zero
  80c414:	0005883a 	mov	r2,zero
  80c418:	003f4806 	br	80c13c <__alt_data_end+0xff80c13c>
  80c41c:	298cb03a 	or	r6,r5,r6
  80c420:	300cc03a 	cmpne	r6,r6,zero
  80c424:	0005883a 	mov	r2,zero
  80c428:	003f6406 	br	80c1bc <__alt_data_end+0xff80c1bc>
  80c42c:	10009a1e 	bne	r2,zero,80c698 <__subdf3+0x640>
  80c430:	82400044 	addi	r9,r16,1
  80c434:	4881ffcc 	andi	r2,r9,2047
  80c438:	02800044 	movi	r10,1
  80c43c:	5080670e 	bge	r10,r2,80c5dc <__subdf3+0x584>
  80c440:	0081ffc4 	movi	r2,2047
  80c444:	4880af26 	beq	r9,r2,80c704 <__subdf3+0x6ac>
  80c448:	898d883a 	add	r6,r17,r6
  80c44c:	1945883a 	add	r2,r3,r5
  80c450:	3447803a 	cmpltu	r3,r6,r17
  80c454:	1887883a 	add	r3,r3,r2
  80c458:	182297fa 	slli	r17,r3,31
  80c45c:	300cd07a 	srli	r6,r6,1
  80c460:	1806d07a 	srli	r3,r3,1
  80c464:	4821883a 	mov	r16,r9
  80c468:	89a2b03a 	or	r17,r17,r6
  80c46c:	003f1b06 	br	80c0dc <__alt_data_end+0xff80c0dc>
  80c470:	0101ffc4 	movi	r4,2047
  80c474:	813f441e 	bne	r16,r4,80c188 <__alt_data_end+0xff80c188>
  80c478:	003f1806 	br	80c0dc <__alt_data_end+0xff80c0dc>
  80c47c:	843ff844 	addi	r16,r16,-31
  80c480:	01400804 	movi	r5,32
  80c484:	1408d83a 	srl	r4,r2,r16
  80c488:	19405026 	beq	r3,r5,80c5cc <__subdf3+0x574>
  80c48c:	01401004 	movi	r5,64
  80c490:	28c7c83a 	sub	r3,r5,r3
  80c494:	10c4983a 	sll	r2,r2,r3
  80c498:	88a2b03a 	or	r17,r17,r2
  80c49c:	8822c03a 	cmpne	r17,r17,zero
  80c4a0:	2462b03a 	or	r17,r4,r17
  80c4a4:	0007883a 	mov	r3,zero
  80c4a8:	0021883a 	mov	r16,zero
  80c4ac:	003f6d06 	br	80c264 <__alt_data_end+0xff80c264>
  80c4b0:	11fff804 	addi	r7,r2,-32
  80c4b4:	01000804 	movi	r4,32
  80c4b8:	29ced83a 	srl	r7,r5,r7
  80c4bc:	11004526 	beq	r2,r4,80c5d4 <__subdf3+0x57c>
  80c4c0:	01001004 	movi	r4,64
  80c4c4:	2089c83a 	sub	r4,r4,r2
  80c4c8:	2904983a 	sll	r2,r5,r4
  80c4cc:	118cb03a 	or	r6,r2,r6
  80c4d0:	300cc03a 	cmpne	r6,r6,zero
  80c4d4:	398cb03a 	or	r6,r7,r6
  80c4d8:	0005883a 	mov	r2,zero
  80c4dc:	003f3706 	br	80c1bc <__alt_data_end+0xff80c1bc>
  80c4e0:	80002a26 	beq	r16,zero,80c58c <__subdf3+0x534>
  80c4e4:	0101ffc4 	movi	r4,2047
  80c4e8:	49006626 	beq	r9,r4,80c684 <__subdf3+0x62c>
  80c4ec:	0085c83a 	sub	r2,zero,r2
  80c4f0:	18c02034 	orhi	r3,r3,128
  80c4f4:	01000e04 	movi	r4,56
  80c4f8:	20807e16 	blt	r4,r2,80c6f4 <__subdf3+0x69c>
  80c4fc:	010007c4 	movi	r4,31
  80c500:	2080e716 	blt	r4,r2,80c8a0 <__subdf3+0x848>
  80c504:	01000804 	movi	r4,32
  80c508:	2089c83a 	sub	r4,r4,r2
  80c50c:	1914983a 	sll	r10,r3,r4
  80c510:	8890d83a 	srl	r8,r17,r2
  80c514:	8908983a 	sll	r4,r17,r4
  80c518:	1884d83a 	srl	r2,r3,r2
  80c51c:	5222b03a 	or	r17,r10,r8
  80c520:	2006c03a 	cmpne	r3,r4,zero
  80c524:	88e2b03a 	or	r17,r17,r3
  80c528:	3463c83a 	sub	r17,r6,r17
  80c52c:	2885c83a 	sub	r2,r5,r2
  80c530:	344d803a 	cmpltu	r6,r6,r17
  80c534:	1187c83a 	sub	r3,r2,r6
  80c538:	4821883a 	mov	r16,r9
  80c53c:	3825883a 	mov	r18,r7
  80c540:	003f2306 	br	80c1d0 <__alt_data_end+0xff80c1d0>
  80c544:	24d0b03a 	or	r8,r4,r19
  80c548:	40001b1e 	bne	r8,zero,80c5b8 <__subdf3+0x560>
  80c54c:	0005883a 	mov	r2,zero
  80c550:	0009883a 	mov	r4,zero
  80c554:	0021883a 	mov	r16,zero
  80c558:	003f4906 	br	80c280 <__alt_data_end+0xff80c280>
  80c55c:	010007c4 	movi	r4,31
  80c560:	20803a16 	blt	r4,r2,80c64c <__subdf3+0x5f4>
  80c564:	01000804 	movi	r4,32
  80c568:	2089c83a 	sub	r4,r4,r2
  80c56c:	2912983a 	sll	r9,r5,r4
  80c570:	3090d83a 	srl	r8,r6,r2
  80c574:	3108983a 	sll	r4,r6,r4
  80c578:	2884d83a 	srl	r2,r5,r2
  80c57c:	4a12b03a 	or	r9,r9,r8
  80c580:	2008c03a 	cmpne	r4,r4,zero
  80c584:	4912b03a 	or	r9,r9,r4
  80c588:	003f4e06 	br	80c2c4 <__alt_data_end+0xff80c2c4>
  80c58c:	1c48b03a 	or	r4,r3,r17
  80c590:	20003c26 	beq	r4,zero,80c684 <__subdf3+0x62c>
  80c594:	0084303a 	nor	r2,zero,r2
  80c598:	1000381e 	bne	r2,zero,80c67c <__subdf3+0x624>
  80c59c:	3463c83a 	sub	r17,r6,r17
  80c5a0:	28c5c83a 	sub	r2,r5,r3
  80c5a4:	344d803a 	cmpltu	r6,r6,r17
  80c5a8:	1187c83a 	sub	r3,r2,r6
  80c5ac:	4821883a 	mov	r16,r9
  80c5b0:	3825883a 	mov	r18,r7
  80c5b4:	003f0606 	br	80c1d0 <__alt_data_end+0xff80c1d0>
  80c5b8:	2023883a 	mov	r17,r4
  80c5bc:	003f0906 	br	80c1e4 <__alt_data_end+0xff80c1e4>
  80c5c0:	0101ffc4 	movi	r4,2047
  80c5c4:	813f3a1e 	bne	r16,r4,80c2b0 <__alt_data_end+0xff80c2b0>
  80c5c8:	003ec406 	br	80c0dc <__alt_data_end+0xff80c0dc>
  80c5cc:	0005883a 	mov	r2,zero
  80c5d0:	003fb106 	br	80c498 <__alt_data_end+0xff80c498>
  80c5d4:	0005883a 	mov	r2,zero
  80c5d8:	003fbc06 	br	80c4cc <__alt_data_end+0xff80c4cc>
  80c5dc:	1c44b03a 	or	r2,r3,r17
  80c5e0:	80008e1e 	bne	r16,zero,80c81c <__subdf3+0x7c4>
  80c5e4:	1000c826 	beq	r2,zero,80c908 <__subdf3+0x8b0>
  80c5e8:	2984b03a 	or	r2,r5,r6
  80c5ec:	103ebb26 	beq	r2,zero,80c0dc <__alt_data_end+0xff80c0dc>
  80c5f0:	8989883a 	add	r4,r17,r6
  80c5f4:	1945883a 	add	r2,r3,r5
  80c5f8:	2447803a 	cmpltu	r3,r4,r17
  80c5fc:	1887883a 	add	r3,r3,r2
  80c600:	1880202c 	andhi	r2,r3,128
  80c604:	2023883a 	mov	r17,r4
  80c608:	103f1626 	beq	r2,zero,80c264 <__alt_data_end+0xff80c264>
  80c60c:	00bfe034 	movhi	r2,65408
  80c610:	10bfffc4 	addi	r2,r2,-1
  80c614:	5021883a 	mov	r16,r10
  80c618:	1886703a 	and	r3,r3,r2
  80c61c:	003eaf06 	br	80c0dc <__alt_data_end+0xff80c0dc>
  80c620:	3825883a 	mov	r18,r7
  80c624:	003f0f06 	br	80c264 <__alt_data_end+0xff80c264>
  80c628:	1c44b03a 	or	r2,r3,r17
  80c62c:	8000251e 	bne	r16,zero,80c6c4 <__subdf3+0x66c>
  80c630:	1000661e 	bne	r2,zero,80c7cc <__subdf3+0x774>
  80c634:	2990b03a 	or	r8,r5,r6
  80c638:	40009626 	beq	r8,zero,80c894 <__subdf3+0x83c>
  80c63c:	2807883a 	mov	r3,r5
  80c640:	3023883a 	mov	r17,r6
  80c644:	3825883a 	mov	r18,r7
  80c648:	003ea406 	br	80c0dc <__alt_data_end+0xff80c0dc>
  80c64c:	127ff804 	addi	r9,r2,-32
  80c650:	01000804 	movi	r4,32
  80c654:	2a52d83a 	srl	r9,r5,r9
  80c658:	11008c26 	beq	r2,r4,80c88c <__subdf3+0x834>
  80c65c:	01001004 	movi	r4,64
  80c660:	2085c83a 	sub	r2,r4,r2
  80c664:	2884983a 	sll	r2,r5,r2
  80c668:	118cb03a 	or	r6,r2,r6
  80c66c:	300cc03a 	cmpne	r6,r6,zero
  80c670:	4992b03a 	or	r9,r9,r6
  80c674:	0005883a 	mov	r2,zero
  80c678:	003f1206 	br	80c2c4 <__alt_data_end+0xff80c2c4>
  80c67c:	0101ffc4 	movi	r4,2047
  80c680:	493f9c1e 	bne	r9,r4,80c4f4 <__alt_data_end+0xff80c4f4>
  80c684:	2807883a 	mov	r3,r5
  80c688:	3023883a 	mov	r17,r6
  80c68c:	4821883a 	mov	r16,r9
  80c690:	3825883a 	mov	r18,r7
  80c694:	003e9106 	br	80c0dc <__alt_data_end+0xff80c0dc>
  80c698:	80001f1e 	bne	r16,zero,80c718 <__subdf3+0x6c0>
  80c69c:	1c48b03a 	or	r4,r3,r17
  80c6a0:	20005a26 	beq	r4,zero,80c80c <__subdf3+0x7b4>
  80c6a4:	0084303a 	nor	r2,zero,r2
  80c6a8:	1000561e 	bne	r2,zero,80c804 <__subdf3+0x7ac>
  80c6ac:	89a3883a 	add	r17,r17,r6
  80c6b0:	1945883a 	add	r2,r3,r5
  80c6b4:	898d803a 	cmpltu	r6,r17,r6
  80c6b8:	3087883a 	add	r3,r6,r2
  80c6bc:	4821883a 	mov	r16,r9
  80c6c0:	003f0506 	br	80c2d8 <__alt_data_end+0xff80c2d8>
  80c6c4:	10002b1e 	bne	r2,zero,80c774 <__subdf3+0x71c>
  80c6c8:	2984b03a 	or	r2,r5,r6
  80c6cc:	10008026 	beq	r2,zero,80c8d0 <__subdf3+0x878>
  80c6d0:	2807883a 	mov	r3,r5
  80c6d4:	3023883a 	mov	r17,r6
  80c6d8:	3825883a 	mov	r18,r7
  80c6dc:	0401ffc4 	movi	r16,2047
  80c6e0:	003e7e06 	br	80c0dc <__alt_data_end+0xff80c0dc>
  80c6e4:	3809883a 	mov	r4,r7
  80c6e8:	0011883a 	mov	r8,zero
  80c6ec:	0005883a 	mov	r2,zero
  80c6f0:	003ee306 	br	80c280 <__alt_data_end+0xff80c280>
  80c6f4:	1c62b03a 	or	r17,r3,r17
  80c6f8:	8822c03a 	cmpne	r17,r17,zero
  80c6fc:	0005883a 	mov	r2,zero
  80c700:	003f8906 	br	80c528 <__alt_data_end+0xff80c528>
  80c704:	3809883a 	mov	r4,r7
  80c708:	4821883a 	mov	r16,r9
  80c70c:	0011883a 	mov	r8,zero
  80c710:	0005883a 	mov	r2,zero
  80c714:	003eda06 	br	80c280 <__alt_data_end+0xff80c280>
  80c718:	0101ffc4 	movi	r4,2047
  80c71c:	49003b26 	beq	r9,r4,80c80c <__subdf3+0x7b4>
  80c720:	0085c83a 	sub	r2,zero,r2
  80c724:	18c02034 	orhi	r3,r3,128
  80c728:	01000e04 	movi	r4,56
  80c72c:	20806e16 	blt	r4,r2,80c8e8 <__subdf3+0x890>
  80c730:	010007c4 	movi	r4,31
  80c734:	20807716 	blt	r4,r2,80c914 <__subdf3+0x8bc>
  80c738:	01000804 	movi	r4,32
  80c73c:	2089c83a 	sub	r4,r4,r2
  80c740:	1914983a 	sll	r10,r3,r4
  80c744:	8890d83a 	srl	r8,r17,r2
  80c748:	8908983a 	sll	r4,r17,r4
  80c74c:	1884d83a 	srl	r2,r3,r2
  80c750:	5222b03a 	or	r17,r10,r8
  80c754:	2006c03a 	cmpne	r3,r4,zero
  80c758:	88e2b03a 	or	r17,r17,r3
  80c75c:	89a3883a 	add	r17,r17,r6
  80c760:	1145883a 	add	r2,r2,r5
  80c764:	898d803a 	cmpltu	r6,r17,r6
  80c768:	3087883a 	add	r3,r6,r2
  80c76c:	4821883a 	mov	r16,r9
  80c770:	003ed906 	br	80c2d8 <__alt_data_end+0xff80c2d8>
  80c774:	2984b03a 	or	r2,r5,r6
  80c778:	10004226 	beq	r2,zero,80c884 <__subdf3+0x82c>
  80c77c:	1808d0fa 	srli	r4,r3,3
  80c780:	8822d0fa 	srli	r17,r17,3
  80c784:	1806977a 	slli	r3,r3,29
  80c788:	2080022c 	andhi	r2,r4,8
  80c78c:	1c62b03a 	or	r17,r3,r17
  80c790:	10000826 	beq	r2,zero,80c7b4 <__subdf3+0x75c>
  80c794:	2812d0fa 	srli	r9,r5,3
  80c798:	4880022c 	andhi	r2,r9,8
  80c79c:	1000051e 	bne	r2,zero,80c7b4 <__subdf3+0x75c>
  80c7a0:	300cd0fa 	srli	r6,r6,3
  80c7a4:	2804977a 	slli	r2,r5,29
  80c7a8:	4809883a 	mov	r4,r9
  80c7ac:	3825883a 	mov	r18,r7
  80c7b0:	11a2b03a 	or	r17,r2,r6
  80c7b4:	8806d77a 	srli	r3,r17,29
  80c7b8:	200890fa 	slli	r4,r4,3
  80c7bc:	882290fa 	slli	r17,r17,3
  80c7c0:	0401ffc4 	movi	r16,2047
  80c7c4:	1906b03a 	or	r3,r3,r4
  80c7c8:	003e4406 	br	80c0dc <__alt_data_end+0xff80c0dc>
  80c7cc:	2984b03a 	or	r2,r5,r6
  80c7d0:	103e4226 	beq	r2,zero,80c0dc <__alt_data_end+0xff80c0dc>
  80c7d4:	8989c83a 	sub	r4,r17,r6
  80c7d8:	8911803a 	cmpltu	r8,r17,r4
  80c7dc:	1945c83a 	sub	r2,r3,r5
  80c7e0:	1205c83a 	sub	r2,r2,r8
  80c7e4:	1200202c 	andhi	r8,r2,128
  80c7e8:	403e9a26 	beq	r8,zero,80c254 <__alt_data_end+0xff80c254>
  80c7ec:	3463c83a 	sub	r17,r6,r17
  80c7f0:	28c5c83a 	sub	r2,r5,r3
  80c7f4:	344d803a 	cmpltu	r6,r6,r17
  80c7f8:	1187c83a 	sub	r3,r2,r6
  80c7fc:	3825883a 	mov	r18,r7
  80c800:	003e3606 	br	80c0dc <__alt_data_end+0xff80c0dc>
  80c804:	0101ffc4 	movi	r4,2047
  80c808:	493fc71e 	bne	r9,r4,80c728 <__alt_data_end+0xff80c728>
  80c80c:	2807883a 	mov	r3,r5
  80c810:	3023883a 	mov	r17,r6
  80c814:	4821883a 	mov	r16,r9
  80c818:	003e3006 	br	80c0dc <__alt_data_end+0xff80c0dc>
  80c81c:	10003626 	beq	r2,zero,80c8f8 <__subdf3+0x8a0>
  80c820:	2984b03a 	or	r2,r5,r6
  80c824:	10001726 	beq	r2,zero,80c884 <__subdf3+0x82c>
  80c828:	1808d0fa 	srli	r4,r3,3
  80c82c:	8822d0fa 	srli	r17,r17,3
  80c830:	1806977a 	slli	r3,r3,29
  80c834:	2080022c 	andhi	r2,r4,8
  80c838:	1c62b03a 	or	r17,r3,r17
  80c83c:	10000726 	beq	r2,zero,80c85c <__subdf3+0x804>
  80c840:	2812d0fa 	srli	r9,r5,3
  80c844:	4880022c 	andhi	r2,r9,8
  80c848:	1000041e 	bne	r2,zero,80c85c <__subdf3+0x804>
  80c84c:	300cd0fa 	srli	r6,r6,3
  80c850:	2804977a 	slli	r2,r5,29
  80c854:	4809883a 	mov	r4,r9
  80c858:	11a2b03a 	or	r17,r2,r6
  80c85c:	8806d77a 	srli	r3,r17,29
  80c860:	200890fa 	slli	r4,r4,3
  80c864:	882290fa 	slli	r17,r17,3
  80c868:	3825883a 	mov	r18,r7
  80c86c:	1906b03a 	or	r3,r3,r4
  80c870:	0401ffc4 	movi	r16,2047
  80c874:	003e1906 	br	80c0dc <__alt_data_end+0xff80c0dc>
  80c878:	000b883a 	mov	r5,zero
  80c87c:	0005883a 	mov	r2,zero
  80c880:	003e2e06 	br	80c13c <__alt_data_end+0xff80c13c>
  80c884:	0401ffc4 	movi	r16,2047
  80c888:	003e1406 	br	80c0dc <__alt_data_end+0xff80c0dc>
  80c88c:	0005883a 	mov	r2,zero
  80c890:	003f7506 	br	80c668 <__alt_data_end+0xff80c668>
  80c894:	0005883a 	mov	r2,zero
  80c898:	0009883a 	mov	r4,zero
  80c89c:	003e7806 	br	80c280 <__alt_data_end+0xff80c280>
  80c8a0:	123ff804 	addi	r8,r2,-32
  80c8a4:	01000804 	movi	r4,32
  80c8a8:	1a10d83a 	srl	r8,r3,r8
  80c8ac:	11002526 	beq	r2,r4,80c944 <__subdf3+0x8ec>
  80c8b0:	01001004 	movi	r4,64
  80c8b4:	2085c83a 	sub	r2,r4,r2
  80c8b8:	1884983a 	sll	r2,r3,r2
  80c8bc:	1444b03a 	or	r2,r2,r17
  80c8c0:	1004c03a 	cmpne	r2,r2,zero
  80c8c4:	40a2b03a 	or	r17,r8,r2
  80c8c8:	0005883a 	mov	r2,zero
  80c8cc:	003f1606 	br	80c528 <__alt_data_end+0xff80c528>
  80c8d0:	02000434 	movhi	r8,16
  80c8d4:	0009883a 	mov	r4,zero
  80c8d8:	423fffc4 	addi	r8,r8,-1
  80c8dc:	00bfffc4 	movi	r2,-1
  80c8e0:	0401ffc4 	movi	r16,2047
  80c8e4:	003e6606 	br	80c280 <__alt_data_end+0xff80c280>
  80c8e8:	1c62b03a 	or	r17,r3,r17
  80c8ec:	8822c03a 	cmpne	r17,r17,zero
  80c8f0:	0005883a 	mov	r2,zero
  80c8f4:	003f9906 	br	80c75c <__alt_data_end+0xff80c75c>
  80c8f8:	2807883a 	mov	r3,r5
  80c8fc:	3023883a 	mov	r17,r6
  80c900:	0401ffc4 	movi	r16,2047
  80c904:	003df506 	br	80c0dc <__alt_data_end+0xff80c0dc>
  80c908:	2807883a 	mov	r3,r5
  80c90c:	3023883a 	mov	r17,r6
  80c910:	003df206 	br	80c0dc <__alt_data_end+0xff80c0dc>
  80c914:	123ff804 	addi	r8,r2,-32
  80c918:	01000804 	movi	r4,32
  80c91c:	1a10d83a 	srl	r8,r3,r8
  80c920:	11000a26 	beq	r2,r4,80c94c <__subdf3+0x8f4>
  80c924:	01001004 	movi	r4,64
  80c928:	2085c83a 	sub	r2,r4,r2
  80c92c:	1884983a 	sll	r2,r3,r2
  80c930:	1444b03a 	or	r2,r2,r17
  80c934:	1004c03a 	cmpne	r2,r2,zero
  80c938:	40a2b03a 	or	r17,r8,r2
  80c93c:	0005883a 	mov	r2,zero
  80c940:	003f8606 	br	80c75c <__alt_data_end+0xff80c75c>
  80c944:	0005883a 	mov	r2,zero
  80c948:	003fdc06 	br	80c8bc <__alt_data_end+0xff80c8bc>
  80c94c:	0005883a 	mov	r2,zero
  80c950:	003ff706 	br	80c930 <__alt_data_end+0xff80c930>

0080c954 <__fixdfsi>:
  80c954:	280cd53a 	srli	r6,r5,20
  80c958:	00c00434 	movhi	r3,16
  80c95c:	18ffffc4 	addi	r3,r3,-1
  80c960:	3181ffcc 	andi	r6,r6,2047
  80c964:	01c0ff84 	movi	r7,1022
  80c968:	28c6703a 	and	r3,r5,r3
  80c96c:	280ad7fa 	srli	r5,r5,31
  80c970:	3980120e 	bge	r7,r6,80c9bc <__fixdfsi+0x68>
  80c974:	00810744 	movi	r2,1053
  80c978:	11800c16 	blt	r2,r6,80c9ac <__fixdfsi+0x58>
  80c97c:	00810cc4 	movi	r2,1075
  80c980:	1185c83a 	sub	r2,r2,r6
  80c984:	01c007c4 	movi	r7,31
  80c988:	18c00434 	orhi	r3,r3,16
  80c98c:	38800d16 	blt	r7,r2,80c9c4 <__fixdfsi+0x70>
  80c990:	31befb44 	addi	r6,r6,-1043
  80c994:	2084d83a 	srl	r2,r4,r2
  80c998:	1986983a 	sll	r3,r3,r6
  80c99c:	1884b03a 	or	r2,r3,r2
  80c9a0:	28000726 	beq	r5,zero,80c9c0 <__fixdfsi+0x6c>
  80c9a4:	0085c83a 	sub	r2,zero,r2
  80c9a8:	f800283a 	ret
  80c9ac:	00a00034 	movhi	r2,32768
  80c9b0:	10bfffc4 	addi	r2,r2,-1
  80c9b4:	2885883a 	add	r2,r5,r2
  80c9b8:	f800283a 	ret
  80c9bc:	0005883a 	mov	r2,zero
  80c9c0:	f800283a 	ret
  80c9c4:	008104c4 	movi	r2,1043
  80c9c8:	1185c83a 	sub	r2,r2,r6
  80c9cc:	1884d83a 	srl	r2,r3,r2
  80c9d0:	003ff306 	br	80c9a0 <__alt_data_end+0xff80c9a0>

0080c9d4 <__floatsidf>:
  80c9d4:	defffd04 	addi	sp,sp,-12
  80c9d8:	dfc00215 	stw	ra,8(sp)
  80c9dc:	dc400115 	stw	r17,4(sp)
  80c9e0:	dc000015 	stw	r16,0(sp)
  80c9e4:	20002b26 	beq	r4,zero,80ca94 <__floatsidf+0xc0>
  80c9e8:	2023883a 	mov	r17,r4
  80c9ec:	2020d7fa 	srli	r16,r4,31
  80c9f0:	20002d16 	blt	r4,zero,80caa8 <__floatsidf+0xd4>
  80c9f4:	8809883a 	mov	r4,r17
  80c9f8:	080cb580 	call	80cb58 <__clzsi2>
  80c9fc:	01410784 	movi	r5,1054
  80ca00:	288bc83a 	sub	r5,r5,r2
  80ca04:	01010cc4 	movi	r4,1075
  80ca08:	2149c83a 	sub	r4,r4,r5
  80ca0c:	00c007c4 	movi	r3,31
  80ca10:	1900160e 	bge	r3,r4,80ca6c <__floatsidf+0x98>
  80ca14:	00c104c4 	movi	r3,1043
  80ca18:	1947c83a 	sub	r3,r3,r5
  80ca1c:	88c6983a 	sll	r3,r17,r3
  80ca20:	00800434 	movhi	r2,16
  80ca24:	10bfffc4 	addi	r2,r2,-1
  80ca28:	1886703a 	and	r3,r3,r2
  80ca2c:	2941ffcc 	andi	r5,r5,2047
  80ca30:	800d883a 	mov	r6,r16
  80ca34:	0005883a 	mov	r2,zero
  80ca38:	280a953a 	slli	r5,r5,20
  80ca3c:	31803fcc 	andi	r6,r6,255
  80ca40:	01000434 	movhi	r4,16
  80ca44:	300c97fa 	slli	r6,r6,31
  80ca48:	213fffc4 	addi	r4,r4,-1
  80ca4c:	1906703a 	and	r3,r3,r4
  80ca50:	1946b03a 	or	r3,r3,r5
  80ca54:	1986b03a 	or	r3,r3,r6
  80ca58:	dfc00217 	ldw	ra,8(sp)
  80ca5c:	dc400117 	ldw	r17,4(sp)
  80ca60:	dc000017 	ldw	r16,0(sp)
  80ca64:	dec00304 	addi	sp,sp,12
  80ca68:	f800283a 	ret
  80ca6c:	00c002c4 	movi	r3,11
  80ca70:	1887c83a 	sub	r3,r3,r2
  80ca74:	88c6d83a 	srl	r3,r17,r3
  80ca78:	8904983a 	sll	r2,r17,r4
  80ca7c:	01000434 	movhi	r4,16
  80ca80:	213fffc4 	addi	r4,r4,-1
  80ca84:	2941ffcc 	andi	r5,r5,2047
  80ca88:	1906703a 	and	r3,r3,r4
  80ca8c:	800d883a 	mov	r6,r16
  80ca90:	003fe906 	br	80ca38 <__alt_data_end+0xff80ca38>
  80ca94:	000d883a 	mov	r6,zero
  80ca98:	000b883a 	mov	r5,zero
  80ca9c:	0007883a 	mov	r3,zero
  80caa0:	0005883a 	mov	r2,zero
  80caa4:	003fe406 	br	80ca38 <__alt_data_end+0xff80ca38>
  80caa8:	0123c83a 	sub	r17,zero,r4
  80caac:	003fd106 	br	80c9f4 <__alt_data_end+0xff80c9f4>

0080cab0 <__floatunsidf>:
  80cab0:	defffe04 	addi	sp,sp,-8
  80cab4:	dc000015 	stw	r16,0(sp)
  80cab8:	dfc00115 	stw	ra,4(sp)
  80cabc:	2021883a 	mov	r16,r4
  80cac0:	20002226 	beq	r4,zero,80cb4c <__floatunsidf+0x9c>
  80cac4:	080cb580 	call	80cb58 <__clzsi2>
  80cac8:	01010784 	movi	r4,1054
  80cacc:	2089c83a 	sub	r4,r4,r2
  80cad0:	01810cc4 	movi	r6,1075
  80cad4:	310dc83a 	sub	r6,r6,r4
  80cad8:	00c007c4 	movi	r3,31
  80cadc:	1980120e 	bge	r3,r6,80cb28 <__floatunsidf+0x78>
  80cae0:	00c104c4 	movi	r3,1043
  80cae4:	1907c83a 	sub	r3,r3,r4
  80cae8:	80ca983a 	sll	r5,r16,r3
  80caec:	00800434 	movhi	r2,16
  80caf0:	10bfffc4 	addi	r2,r2,-1
  80caf4:	2101ffcc 	andi	r4,r4,2047
  80caf8:	0021883a 	mov	r16,zero
  80cafc:	288a703a 	and	r5,r5,r2
  80cb00:	2008953a 	slli	r4,r4,20
  80cb04:	00c00434 	movhi	r3,16
  80cb08:	18ffffc4 	addi	r3,r3,-1
  80cb0c:	28c6703a 	and	r3,r5,r3
  80cb10:	8005883a 	mov	r2,r16
  80cb14:	1906b03a 	or	r3,r3,r4
  80cb18:	dfc00117 	ldw	ra,4(sp)
  80cb1c:	dc000017 	ldw	r16,0(sp)
  80cb20:	dec00204 	addi	sp,sp,8
  80cb24:	f800283a 	ret
  80cb28:	00c002c4 	movi	r3,11
  80cb2c:	188bc83a 	sub	r5,r3,r2
  80cb30:	814ad83a 	srl	r5,r16,r5
  80cb34:	00c00434 	movhi	r3,16
  80cb38:	18ffffc4 	addi	r3,r3,-1
  80cb3c:	81a0983a 	sll	r16,r16,r6
  80cb40:	2101ffcc 	andi	r4,r4,2047
  80cb44:	28ca703a 	and	r5,r5,r3
  80cb48:	003fed06 	br	80cb00 <__alt_data_end+0xff80cb00>
  80cb4c:	0009883a 	mov	r4,zero
  80cb50:	000b883a 	mov	r5,zero
  80cb54:	003fea06 	br	80cb00 <__alt_data_end+0xff80cb00>

0080cb58 <__clzsi2>:
  80cb58:	00bfffd4 	movui	r2,65535
  80cb5c:	11000536 	bltu	r2,r4,80cb74 <__clzsi2+0x1c>
  80cb60:	00803fc4 	movi	r2,255
  80cb64:	11000f36 	bltu	r2,r4,80cba4 <__clzsi2+0x4c>
  80cb68:	00800804 	movi	r2,32
  80cb6c:	0007883a 	mov	r3,zero
  80cb70:	00000506 	br	80cb88 <__clzsi2+0x30>
  80cb74:	00804034 	movhi	r2,256
  80cb78:	10bfffc4 	addi	r2,r2,-1
  80cb7c:	11000c2e 	bgeu	r2,r4,80cbb0 <__clzsi2+0x58>
  80cb80:	00800204 	movi	r2,8
  80cb84:	00c00604 	movi	r3,24
  80cb88:	20c8d83a 	srl	r4,r4,r3
  80cb8c:	00c02074 	movhi	r3,129
  80cb90:	18fd3004 	addi	r3,r3,-2880
  80cb94:	1909883a 	add	r4,r3,r4
  80cb98:	20c00003 	ldbu	r3,0(r4)
  80cb9c:	10c5c83a 	sub	r2,r2,r3
  80cba0:	f800283a 	ret
  80cba4:	00800604 	movi	r2,24
  80cba8:	00c00204 	movi	r3,8
  80cbac:	003ff606 	br	80cb88 <__alt_data_end+0xff80cb88>
  80cbb0:	00800404 	movi	r2,16
  80cbb4:	1007883a 	mov	r3,r2
  80cbb8:	003ff306 	br	80cb88 <__alt_data_end+0xff80cb88>

0080cbbc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80cbbc:	defffe04 	addi	sp,sp,-8
  80cbc0:	dfc00115 	stw	ra,4(sp)
  80cbc4:	df000015 	stw	fp,0(sp)
  80cbc8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80cbcc:	d0a00b17 	ldw	r2,-32724(gp)
  80cbd0:	10000326 	beq	r2,zero,80cbe0 <alt_get_errno+0x24>
  80cbd4:	d0a00b17 	ldw	r2,-32724(gp)
  80cbd8:	103ee83a 	callr	r2
  80cbdc:	00000106 	br	80cbe4 <alt_get_errno+0x28>
  80cbe0:	d0a6d104 	addi	r2,gp,-25788
}
  80cbe4:	e037883a 	mov	sp,fp
  80cbe8:	dfc00117 	ldw	ra,4(sp)
  80cbec:	df000017 	ldw	fp,0(sp)
  80cbf0:	dec00204 	addi	sp,sp,8
  80cbf4:	f800283a 	ret

0080cbf8 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80cbf8:	defffb04 	addi	sp,sp,-20
  80cbfc:	dfc00415 	stw	ra,16(sp)
  80cc00:	df000315 	stw	fp,12(sp)
  80cc04:	df000304 	addi	fp,sp,12
  80cc08:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80cc0c:	e0bfff17 	ldw	r2,-4(fp)
  80cc10:	10000616 	blt	r2,zero,80cc2c <close+0x34>
  80cc14:	e0bfff17 	ldw	r2,-4(fp)
  80cc18:	10c00324 	muli	r3,r2,12
  80cc1c:	00802074 	movhi	r2,129
  80cc20:	10bfae04 	addi	r2,r2,-328
  80cc24:	1885883a 	add	r2,r3,r2
  80cc28:	00000106 	br	80cc30 <close+0x38>
  80cc2c:	0005883a 	mov	r2,zero
  80cc30:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  80cc34:	e0bffd17 	ldw	r2,-12(fp)
  80cc38:	10001926 	beq	r2,zero,80cca0 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80cc3c:	e0bffd17 	ldw	r2,-12(fp)
  80cc40:	10800017 	ldw	r2,0(r2)
  80cc44:	10800417 	ldw	r2,16(r2)
  80cc48:	10000626 	beq	r2,zero,80cc64 <close+0x6c>
  80cc4c:	e0bffd17 	ldw	r2,-12(fp)
  80cc50:	10800017 	ldw	r2,0(r2)
  80cc54:	10800417 	ldw	r2,16(r2)
  80cc58:	e13ffd17 	ldw	r4,-12(fp)
  80cc5c:	103ee83a 	callr	r2
  80cc60:	00000106 	br	80cc68 <close+0x70>
  80cc64:	0005883a 	mov	r2,zero
  80cc68:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80cc6c:	e13fff17 	ldw	r4,-4(fp)
  80cc70:	080d2b80 	call	80d2b8 <alt_release_fd>
    if (rval < 0)
  80cc74:	e0bffe17 	ldw	r2,-8(fp)
  80cc78:	1000070e 	bge	r2,zero,80cc98 <close+0xa0>
    {
      ALT_ERRNO = -rval;
  80cc7c:	080cbbc0 	call	80cbbc <alt_get_errno>
  80cc80:	1007883a 	mov	r3,r2
  80cc84:	e0bffe17 	ldw	r2,-8(fp)
  80cc88:	0085c83a 	sub	r2,zero,r2
  80cc8c:	18800015 	stw	r2,0(r3)
      return -1;
  80cc90:	00bfffc4 	movi	r2,-1
  80cc94:	00000706 	br	80ccb4 <close+0xbc>
    }
    return 0;
  80cc98:	0005883a 	mov	r2,zero
  80cc9c:	00000506 	br	80ccb4 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80cca0:	080cbbc0 	call	80cbbc <alt_get_errno>
  80cca4:	1007883a 	mov	r3,r2
  80cca8:	00801444 	movi	r2,81
  80ccac:	18800015 	stw	r2,0(r3)
    return -1;
  80ccb0:	00bfffc4 	movi	r2,-1
  }
}
  80ccb4:	e037883a 	mov	sp,fp
  80ccb8:	dfc00117 	ldw	ra,4(sp)
  80ccbc:	df000017 	ldw	fp,0(sp)
  80ccc0:	dec00204 	addi	sp,sp,8
  80ccc4:	f800283a 	ret

0080ccc8 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80ccc8:	defffc04 	addi	sp,sp,-16
  80cccc:	df000315 	stw	fp,12(sp)
  80ccd0:	df000304 	addi	fp,sp,12
  80ccd4:	e13ffd15 	stw	r4,-12(fp)
  80ccd8:	e17ffe15 	stw	r5,-8(fp)
  80ccdc:	e1bfff15 	stw	r6,-4(fp)
  return len;
  80cce0:	e0bfff17 	ldw	r2,-4(fp)
}
  80cce4:	e037883a 	mov	sp,fp
  80cce8:	df000017 	ldw	fp,0(sp)
  80ccec:	dec00104 	addi	sp,sp,4
  80ccf0:	f800283a 	ret

0080ccf4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80ccf4:	defffe04 	addi	sp,sp,-8
  80ccf8:	dfc00115 	stw	ra,4(sp)
  80ccfc:	df000015 	stw	fp,0(sp)
  80cd00:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80cd04:	d0a00b17 	ldw	r2,-32724(gp)
  80cd08:	10000326 	beq	r2,zero,80cd18 <alt_get_errno+0x24>
  80cd0c:	d0a00b17 	ldw	r2,-32724(gp)
  80cd10:	103ee83a 	callr	r2
  80cd14:	00000106 	br	80cd1c <alt_get_errno+0x28>
  80cd18:	d0a6d104 	addi	r2,gp,-25788
}
  80cd1c:	e037883a 	mov	sp,fp
  80cd20:	dfc00117 	ldw	ra,4(sp)
  80cd24:	df000017 	ldw	fp,0(sp)
  80cd28:	dec00204 	addi	sp,sp,8
  80cd2c:	f800283a 	ret

0080cd30 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80cd30:	defffb04 	addi	sp,sp,-20
  80cd34:	dfc00415 	stw	ra,16(sp)
  80cd38:	df000315 	stw	fp,12(sp)
  80cd3c:	df000304 	addi	fp,sp,12
  80cd40:	e13ffe15 	stw	r4,-8(fp)
  80cd44:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80cd48:	e0bffe17 	ldw	r2,-8(fp)
  80cd4c:	10000616 	blt	r2,zero,80cd68 <fstat+0x38>
  80cd50:	e0bffe17 	ldw	r2,-8(fp)
  80cd54:	10c00324 	muli	r3,r2,12
  80cd58:	00802074 	movhi	r2,129
  80cd5c:	10bfae04 	addi	r2,r2,-328
  80cd60:	1885883a 	add	r2,r3,r2
  80cd64:	00000106 	br	80cd6c <fstat+0x3c>
  80cd68:	0005883a 	mov	r2,zero
  80cd6c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  80cd70:	e0bffd17 	ldw	r2,-12(fp)
  80cd74:	10001026 	beq	r2,zero,80cdb8 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80cd78:	e0bffd17 	ldw	r2,-12(fp)
  80cd7c:	10800017 	ldw	r2,0(r2)
  80cd80:	10800817 	ldw	r2,32(r2)
  80cd84:	10000726 	beq	r2,zero,80cda4 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
  80cd88:	e0bffd17 	ldw	r2,-12(fp)
  80cd8c:	10800017 	ldw	r2,0(r2)
  80cd90:	10800817 	ldw	r2,32(r2)
  80cd94:	e17fff17 	ldw	r5,-4(fp)
  80cd98:	e13ffd17 	ldw	r4,-12(fp)
  80cd9c:	103ee83a 	callr	r2
  80cda0:	00000a06 	br	80cdcc <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80cda4:	e0bfff17 	ldw	r2,-4(fp)
  80cda8:	00c80004 	movi	r3,8192
  80cdac:	10c00115 	stw	r3,4(r2)
      return 0;
  80cdb0:	0005883a 	mov	r2,zero
  80cdb4:	00000506 	br	80cdcc <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80cdb8:	080ccf40 	call	80ccf4 <alt_get_errno>
  80cdbc:	1007883a 	mov	r3,r2
  80cdc0:	00801444 	movi	r2,81
  80cdc4:	18800015 	stw	r2,0(r3)
    return -1;
  80cdc8:	00bfffc4 	movi	r2,-1
  }
}
  80cdcc:	e037883a 	mov	sp,fp
  80cdd0:	dfc00117 	ldw	ra,4(sp)
  80cdd4:	df000017 	ldw	fp,0(sp)
  80cdd8:	dec00204 	addi	sp,sp,8
  80cddc:	f800283a 	ret

0080cde0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80cde0:	defffe04 	addi	sp,sp,-8
  80cde4:	dfc00115 	stw	ra,4(sp)
  80cde8:	df000015 	stw	fp,0(sp)
  80cdec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80cdf0:	d0a00b17 	ldw	r2,-32724(gp)
  80cdf4:	10000326 	beq	r2,zero,80ce04 <alt_get_errno+0x24>
  80cdf8:	d0a00b17 	ldw	r2,-32724(gp)
  80cdfc:	103ee83a 	callr	r2
  80ce00:	00000106 	br	80ce08 <alt_get_errno+0x28>
  80ce04:	d0a6d104 	addi	r2,gp,-25788
}
  80ce08:	e037883a 	mov	sp,fp
  80ce0c:	dfc00117 	ldw	ra,4(sp)
  80ce10:	df000017 	ldw	fp,0(sp)
  80ce14:	dec00204 	addi	sp,sp,8
  80ce18:	f800283a 	ret

0080ce1c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80ce1c:	deffed04 	addi	sp,sp,-76
  80ce20:	dfc01215 	stw	ra,72(sp)
  80ce24:	df001115 	stw	fp,68(sp)
  80ce28:	df001104 	addi	fp,sp,68
  80ce2c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80ce30:	e0bfff17 	ldw	r2,-4(fp)
  80ce34:	10000616 	blt	r2,zero,80ce50 <isatty+0x34>
  80ce38:	e0bfff17 	ldw	r2,-4(fp)
  80ce3c:	10c00324 	muli	r3,r2,12
  80ce40:	00802074 	movhi	r2,129
  80ce44:	10bfae04 	addi	r2,r2,-328
  80ce48:	1885883a 	add	r2,r3,r2
  80ce4c:	00000106 	br	80ce54 <isatty+0x38>
  80ce50:	0005883a 	mov	r2,zero
  80ce54:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  80ce58:	e0bfef17 	ldw	r2,-68(fp)
  80ce5c:	10000e26 	beq	r2,zero,80ce98 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80ce60:	e0bfef17 	ldw	r2,-68(fp)
  80ce64:	10800017 	ldw	r2,0(r2)
  80ce68:	10800817 	ldw	r2,32(r2)
  80ce6c:	1000021e 	bne	r2,zero,80ce78 <isatty+0x5c>
    {
      return 1;
  80ce70:	00800044 	movi	r2,1
  80ce74:	00000d06 	br	80ceac <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80ce78:	e0bff004 	addi	r2,fp,-64
  80ce7c:	100b883a 	mov	r5,r2
  80ce80:	e13fff17 	ldw	r4,-4(fp)
  80ce84:	080cd300 	call	80cd30 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80ce88:	e0bff117 	ldw	r2,-60(fp)
  80ce8c:	10880020 	cmpeqi	r2,r2,8192
  80ce90:	10803fcc 	andi	r2,r2,255
  80ce94:	00000506 	br	80ceac <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80ce98:	080cde00 	call	80cde0 <alt_get_errno>
  80ce9c:	1007883a 	mov	r3,r2
  80cea0:	00801444 	movi	r2,81
  80cea4:	18800015 	stw	r2,0(r3)
    return 0;
  80cea8:	0005883a 	mov	r2,zero
  }
}
  80ceac:	e037883a 	mov	sp,fp
  80ceb0:	dfc00117 	ldw	ra,4(sp)
  80ceb4:	df000017 	ldw	fp,0(sp)
  80ceb8:	dec00204 	addi	sp,sp,8
  80cebc:	f800283a 	ret

0080cec0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  80cec0:	defffc04 	addi	sp,sp,-16
  80cec4:	df000315 	stw	fp,12(sp)
  80cec8:	df000304 	addi	fp,sp,12
  80cecc:	e13ffd15 	stw	r4,-12(fp)
  80ced0:	e17ffe15 	stw	r5,-8(fp)
  80ced4:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  80ced8:	e0fffe17 	ldw	r3,-8(fp)
  80cedc:	e0bffd17 	ldw	r2,-12(fp)
  80cee0:	18800c26 	beq	r3,r2,80cf14 <alt_load_section+0x54>
  {
    while( to != end )
  80cee4:	00000806 	br	80cf08 <alt_load_section+0x48>
    {
      *to++ = *from++;
  80cee8:	e0bffe17 	ldw	r2,-8(fp)
  80ceec:	10c00104 	addi	r3,r2,4
  80cef0:	e0fffe15 	stw	r3,-8(fp)
  80cef4:	e0fffd17 	ldw	r3,-12(fp)
  80cef8:	19000104 	addi	r4,r3,4
  80cefc:	e13ffd15 	stw	r4,-12(fp)
  80cf00:	18c00017 	ldw	r3,0(r3)
  80cf04:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  80cf08:	e0fffe17 	ldw	r3,-8(fp)
  80cf0c:	e0bfff17 	ldw	r2,-4(fp)
  80cf10:	18bff51e 	bne	r3,r2,80cee8 <__alt_data_end+0xff80cee8>
    {
      *to++ = *from++;
    }
  }
}
  80cf14:	0001883a 	nop
  80cf18:	e037883a 	mov	sp,fp
  80cf1c:	df000017 	ldw	fp,0(sp)
  80cf20:	dec00104 	addi	sp,sp,4
  80cf24:	f800283a 	ret

0080cf28 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  80cf28:	defffe04 	addi	sp,sp,-8
  80cf2c:	dfc00115 	stw	ra,4(sp)
  80cf30:	df000015 	stw	fp,0(sp)
  80cf34:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  80cf38:	01802074 	movhi	r6,129
  80cf3c:	31843604 	addi	r6,r6,4312
  80cf40:	01402074 	movhi	r5,129
  80cf44:	297d7b04 	addi	r5,r5,-2580
  80cf48:	01002074 	movhi	r4,129
  80cf4c:	21043604 	addi	r4,r4,4312
  80cf50:	080cec00 	call	80cec0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80cf54:	01802034 	movhi	r6,128
  80cf58:	31807004 	addi	r6,r6,448
  80cf5c:	01402034 	movhi	r5,128
  80cf60:	29400804 	addi	r5,r5,32
  80cf64:	01002034 	movhi	r4,128
  80cf68:	21000804 	addi	r4,r4,32
  80cf6c:	080cec00 	call	80cec0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  80cf70:	01802074 	movhi	r6,129
  80cf74:	31bd7b04 	addi	r6,r6,-2580
  80cf78:	01402074 	movhi	r5,129
  80cf7c:	297cb404 	addi	r5,r5,-3376
  80cf80:	01002074 	movhi	r4,129
  80cf84:	213cb404 	addi	r4,r4,-3376
  80cf88:	080cec00 	call	80cec0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  80cf8c:	080e2580 	call	80e258 <alt_dcache_flush_all>
  alt_icache_flush_all();
  80cf90:	080e4400 	call	80e440 <alt_icache_flush_all>
}
  80cf94:	0001883a 	nop
  80cf98:	e037883a 	mov	sp,fp
  80cf9c:	dfc00117 	ldw	ra,4(sp)
  80cfa0:	df000017 	ldw	fp,0(sp)
  80cfa4:	dec00204 	addi	sp,sp,8
  80cfa8:	f800283a 	ret

0080cfac <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80cfac:	defffe04 	addi	sp,sp,-8
  80cfb0:	dfc00115 	stw	ra,4(sp)
  80cfb4:	df000015 	stw	fp,0(sp)
  80cfb8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80cfbc:	d0a00b17 	ldw	r2,-32724(gp)
  80cfc0:	10000326 	beq	r2,zero,80cfd0 <alt_get_errno+0x24>
  80cfc4:	d0a00b17 	ldw	r2,-32724(gp)
  80cfc8:	103ee83a 	callr	r2
  80cfcc:	00000106 	br	80cfd4 <alt_get_errno+0x28>
  80cfd0:	d0a6d104 	addi	r2,gp,-25788
}
  80cfd4:	e037883a 	mov	sp,fp
  80cfd8:	dfc00117 	ldw	ra,4(sp)
  80cfdc:	df000017 	ldw	fp,0(sp)
  80cfe0:	dec00204 	addi	sp,sp,8
  80cfe4:	f800283a 	ret

0080cfe8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80cfe8:	defff904 	addi	sp,sp,-28
  80cfec:	dfc00615 	stw	ra,24(sp)
  80cff0:	df000515 	stw	fp,20(sp)
  80cff4:	df000504 	addi	fp,sp,20
  80cff8:	e13ffd15 	stw	r4,-12(fp)
  80cffc:	e17ffe15 	stw	r5,-8(fp)
  80d000:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80d004:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d008:	e0bffd17 	ldw	r2,-12(fp)
  80d00c:	10000616 	blt	r2,zero,80d028 <lseek+0x40>
  80d010:	e0bffd17 	ldw	r2,-12(fp)
  80d014:	10c00324 	muli	r3,r2,12
  80d018:	00802074 	movhi	r2,129
  80d01c:	10bfae04 	addi	r2,r2,-328
  80d020:	1885883a 	add	r2,r3,r2
  80d024:	00000106 	br	80d02c <lseek+0x44>
  80d028:	0005883a 	mov	r2,zero
  80d02c:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  80d030:	e0bffc17 	ldw	r2,-16(fp)
  80d034:	10001026 	beq	r2,zero,80d078 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80d038:	e0bffc17 	ldw	r2,-16(fp)
  80d03c:	10800017 	ldw	r2,0(r2)
  80d040:	10800717 	ldw	r2,28(r2)
  80d044:	10000926 	beq	r2,zero,80d06c <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80d048:	e0bffc17 	ldw	r2,-16(fp)
  80d04c:	10800017 	ldw	r2,0(r2)
  80d050:	10800717 	ldw	r2,28(r2)
  80d054:	e1bfff17 	ldw	r6,-4(fp)
  80d058:	e17ffe17 	ldw	r5,-8(fp)
  80d05c:	e13ffc17 	ldw	r4,-16(fp)
  80d060:	103ee83a 	callr	r2
  80d064:	e0bffb15 	stw	r2,-20(fp)
  80d068:	00000506 	br	80d080 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80d06c:	00bfde84 	movi	r2,-134
  80d070:	e0bffb15 	stw	r2,-20(fp)
  80d074:	00000206 	br	80d080 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
  80d078:	00bfebc4 	movi	r2,-81
  80d07c:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  80d080:	e0bffb17 	ldw	r2,-20(fp)
  80d084:	1000070e 	bge	r2,zero,80d0a4 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
  80d088:	080cfac0 	call	80cfac <alt_get_errno>
  80d08c:	1007883a 	mov	r3,r2
  80d090:	e0bffb17 	ldw	r2,-20(fp)
  80d094:	0085c83a 	sub	r2,zero,r2
  80d098:	18800015 	stw	r2,0(r3)
    rc = -1;
  80d09c:	00bfffc4 	movi	r2,-1
  80d0a0:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  80d0a4:	e0bffb17 	ldw	r2,-20(fp)
}
  80d0a8:	e037883a 	mov	sp,fp
  80d0ac:	dfc00117 	ldw	ra,4(sp)
  80d0b0:	df000017 	ldw	fp,0(sp)
  80d0b4:	dec00204 	addi	sp,sp,8
  80d0b8:	f800283a 	ret

0080d0bc <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80d0bc:	defffd04 	addi	sp,sp,-12
  80d0c0:	dfc00215 	stw	ra,8(sp)
  80d0c4:	df000115 	stw	fp,4(sp)
  80d0c8:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80d0cc:	0009883a 	mov	r4,zero
  80d0d0:	080d5340 	call	80d534 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  80d0d4:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80d0d8:	080d56c0 	call	80d56c <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80d0dc:	01802074 	movhi	r6,129
  80d0e0:	31bd7304 	addi	r6,r6,-2612
  80d0e4:	01402074 	movhi	r5,129
  80d0e8:	297d7304 	addi	r5,r5,-2612
  80d0ec:	01002074 	movhi	r4,129
  80d0f0:	213d7304 	addi	r4,r4,-2612
  80d0f4:	080e7d80 	call	80e7d8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80d0f8:	080e3800 	call	80e380 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80d0fc:	01002074 	movhi	r4,129
  80d100:	2138f804 	addi	r4,r4,-7200
  80d104:	080ef3c0 	call	80ef3c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80d108:	d0a6d217 	ldw	r2,-25784(gp)
  80d10c:	d0e6d317 	ldw	r3,-25780(gp)
  80d110:	d126d417 	ldw	r4,-25776(gp)
  80d114:	200d883a 	mov	r6,r4
  80d118:	180b883a 	mov	r5,r3
  80d11c:	1009883a 	mov	r4,r2
  80d120:	080020c0 	call	80020c <main>
  80d124:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80d128:	01000044 	movi	r4,1
  80d12c:	080cbf80 	call	80cbf8 <close>
  exit (result);
  80d130:	e13fff17 	ldw	r4,-4(fp)
  80d134:	080ef500 	call	80ef50 <exit>

0080d138 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  80d138:	defffe04 	addi	sp,sp,-8
  80d13c:	df000115 	stw	fp,4(sp)
  80d140:	df000104 	addi	fp,sp,4
  80d144:	e13fff15 	stw	r4,-4(fp)
}
  80d148:	0001883a 	nop
  80d14c:	e037883a 	mov	sp,fp
  80d150:	df000017 	ldw	fp,0(sp)
  80d154:	dec00104 	addi	sp,sp,4
  80d158:	f800283a 	ret

0080d15c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  80d15c:	defffe04 	addi	sp,sp,-8
  80d160:	df000115 	stw	fp,4(sp)
  80d164:	df000104 	addi	fp,sp,4
  80d168:	e13fff15 	stw	r4,-4(fp)
}
  80d16c:	0001883a 	nop
  80d170:	e037883a 	mov	sp,fp
  80d174:	df000017 	ldw	fp,0(sp)
  80d178:	dec00104 	addi	sp,sp,4
  80d17c:	f800283a 	ret

0080d180 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d180:	defffe04 	addi	sp,sp,-8
  80d184:	dfc00115 	stw	ra,4(sp)
  80d188:	df000015 	stw	fp,0(sp)
  80d18c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d190:	d0a00b17 	ldw	r2,-32724(gp)
  80d194:	10000326 	beq	r2,zero,80d1a4 <alt_get_errno+0x24>
  80d198:	d0a00b17 	ldw	r2,-32724(gp)
  80d19c:	103ee83a 	callr	r2
  80d1a0:	00000106 	br	80d1a8 <alt_get_errno+0x28>
  80d1a4:	d0a6d104 	addi	r2,gp,-25788
}
  80d1a8:	e037883a 	mov	sp,fp
  80d1ac:	dfc00117 	ldw	ra,4(sp)
  80d1b0:	df000017 	ldw	fp,0(sp)
  80d1b4:	dec00204 	addi	sp,sp,8
  80d1b8:	f800283a 	ret

0080d1bc <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80d1bc:	defff904 	addi	sp,sp,-28
  80d1c0:	dfc00615 	stw	ra,24(sp)
  80d1c4:	df000515 	stw	fp,20(sp)
  80d1c8:	df000504 	addi	fp,sp,20
  80d1cc:	e13ffd15 	stw	r4,-12(fp)
  80d1d0:	e17ffe15 	stw	r5,-8(fp)
  80d1d4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d1d8:	e0bffd17 	ldw	r2,-12(fp)
  80d1dc:	10000616 	blt	r2,zero,80d1f8 <read+0x3c>
  80d1e0:	e0bffd17 	ldw	r2,-12(fp)
  80d1e4:	10c00324 	muli	r3,r2,12
  80d1e8:	00802074 	movhi	r2,129
  80d1ec:	10bfae04 	addi	r2,r2,-328
  80d1f0:	1885883a 	add	r2,r3,r2
  80d1f4:	00000106 	br	80d1fc <read+0x40>
  80d1f8:	0005883a 	mov	r2,zero
  80d1fc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80d200:	e0bffb17 	ldw	r2,-20(fp)
  80d204:	10002226 	beq	r2,zero,80d290 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80d208:	e0bffb17 	ldw	r2,-20(fp)
  80d20c:	10800217 	ldw	r2,8(r2)
  80d210:	108000cc 	andi	r2,r2,3
  80d214:	10800060 	cmpeqi	r2,r2,1
  80d218:	1000181e 	bne	r2,zero,80d27c <read+0xc0>
        (fd->dev->read))
  80d21c:	e0bffb17 	ldw	r2,-20(fp)
  80d220:	10800017 	ldw	r2,0(r2)
  80d224:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80d228:	10001426 	beq	r2,zero,80d27c <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80d22c:	e0bffb17 	ldw	r2,-20(fp)
  80d230:	10800017 	ldw	r2,0(r2)
  80d234:	10800517 	ldw	r2,20(r2)
  80d238:	e0ffff17 	ldw	r3,-4(fp)
  80d23c:	180d883a 	mov	r6,r3
  80d240:	e17ffe17 	ldw	r5,-8(fp)
  80d244:	e13ffb17 	ldw	r4,-20(fp)
  80d248:	103ee83a 	callr	r2
  80d24c:	e0bffc15 	stw	r2,-16(fp)
  80d250:	e0bffc17 	ldw	r2,-16(fp)
  80d254:	1000070e 	bge	r2,zero,80d274 <read+0xb8>
        {
          ALT_ERRNO = -rval;
  80d258:	080d1800 	call	80d180 <alt_get_errno>
  80d25c:	1007883a 	mov	r3,r2
  80d260:	e0bffc17 	ldw	r2,-16(fp)
  80d264:	0085c83a 	sub	r2,zero,r2
  80d268:	18800015 	stw	r2,0(r3)
          return -1;
  80d26c:	00bfffc4 	movi	r2,-1
  80d270:	00000c06 	br	80d2a4 <read+0xe8>
        }
        return rval;
  80d274:	e0bffc17 	ldw	r2,-16(fp)
  80d278:	00000a06 	br	80d2a4 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80d27c:	080d1800 	call	80d180 <alt_get_errno>
  80d280:	1007883a 	mov	r3,r2
  80d284:	00800344 	movi	r2,13
  80d288:	18800015 	stw	r2,0(r3)
  80d28c:	00000406 	br	80d2a0 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80d290:	080d1800 	call	80d180 <alt_get_errno>
  80d294:	1007883a 	mov	r3,r2
  80d298:	00801444 	movi	r2,81
  80d29c:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80d2a0:	00bfffc4 	movi	r2,-1
}
  80d2a4:	e037883a 	mov	sp,fp
  80d2a8:	dfc00117 	ldw	ra,4(sp)
  80d2ac:	df000017 	ldw	fp,0(sp)
  80d2b0:	dec00204 	addi	sp,sp,8
  80d2b4:	f800283a 	ret

0080d2b8 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80d2b8:	defffe04 	addi	sp,sp,-8
  80d2bc:	df000115 	stw	fp,4(sp)
  80d2c0:	df000104 	addi	fp,sp,4
  80d2c4:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  80d2c8:	e0bfff17 	ldw	r2,-4(fp)
  80d2cc:	108000d0 	cmplti	r2,r2,3
  80d2d0:	10000d1e 	bne	r2,zero,80d308 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
  80d2d4:	00802074 	movhi	r2,129
  80d2d8:	10bfae04 	addi	r2,r2,-328
  80d2dc:	e0ffff17 	ldw	r3,-4(fp)
  80d2e0:	18c00324 	muli	r3,r3,12
  80d2e4:	10c5883a 	add	r2,r2,r3
  80d2e8:	10800204 	addi	r2,r2,8
  80d2ec:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  80d2f0:	00802074 	movhi	r2,129
  80d2f4:	10bfae04 	addi	r2,r2,-328
  80d2f8:	e0ffff17 	ldw	r3,-4(fp)
  80d2fc:	18c00324 	muli	r3,r3,12
  80d300:	10c5883a 	add	r2,r2,r3
  80d304:	10000015 	stw	zero,0(r2)
  }
}
  80d308:	0001883a 	nop
  80d30c:	e037883a 	mov	sp,fp
  80d310:	df000017 	ldw	fp,0(sp)
  80d314:	dec00104 	addi	sp,sp,4
  80d318:	f800283a 	ret

0080d31c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80d31c:	defff904 	addi	sp,sp,-28
  80d320:	df000615 	stw	fp,24(sp)
  80d324:	df000604 	addi	fp,sp,24
  80d328:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80d32c:	0005303a 	rdctl	r2,status
  80d330:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80d334:	e0fffe17 	ldw	r3,-8(fp)
  80d338:	00bfff84 	movi	r2,-2
  80d33c:	1884703a 	and	r2,r3,r2
  80d340:	1001703a 	wrctl	status,r2
  
  return context;
  80d344:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  80d348:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  80d34c:	d0a00c17 	ldw	r2,-32720(gp)
  80d350:	10c000c4 	addi	r3,r2,3
  80d354:	00bfff04 	movi	r2,-4
  80d358:	1884703a 	and	r2,r3,r2
  80d35c:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  80d360:	d0e00c17 	ldw	r3,-32720(gp)
  80d364:	e0bfff17 	ldw	r2,-4(fp)
  80d368:	1887883a 	add	r3,r3,r2
  80d36c:	00804034 	movhi	r2,256
  80d370:	10800004 	addi	r2,r2,0
  80d374:	10c0062e 	bgeu	r2,r3,80d390 <sbrk+0x74>
  80d378:	e0bffb17 	ldw	r2,-20(fp)
  80d37c:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80d380:	e0bffa17 	ldw	r2,-24(fp)
  80d384:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  80d388:	00bfffc4 	movi	r2,-1
  80d38c:	00000b06 	br	80d3bc <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  80d390:	d0a00c17 	ldw	r2,-32720(gp)
  80d394:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
  80d398:	d0e00c17 	ldw	r3,-32720(gp)
  80d39c:	e0bfff17 	ldw	r2,-4(fp)
  80d3a0:	1885883a 	add	r2,r3,r2
  80d3a4:	d0a00c15 	stw	r2,-32720(gp)
  80d3a8:	e0bffb17 	ldw	r2,-20(fp)
  80d3ac:	e0bffc15 	stw	r2,-16(fp)
  80d3b0:	e0bffc17 	ldw	r2,-16(fp)
  80d3b4:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  80d3b8:	e0bffd17 	ldw	r2,-12(fp)
} 
  80d3bc:	e037883a 	mov	sp,fp
  80d3c0:	df000017 	ldw	fp,0(sp)
  80d3c4:	dec00104 	addi	sp,sp,4
  80d3c8:	f800283a 	ret

0080d3cc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d3cc:	defffe04 	addi	sp,sp,-8
  80d3d0:	dfc00115 	stw	ra,4(sp)
  80d3d4:	df000015 	stw	fp,0(sp)
  80d3d8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d3dc:	d0a00b17 	ldw	r2,-32724(gp)
  80d3e0:	10000326 	beq	r2,zero,80d3f0 <alt_get_errno+0x24>
  80d3e4:	d0a00b17 	ldw	r2,-32724(gp)
  80d3e8:	103ee83a 	callr	r2
  80d3ec:	00000106 	br	80d3f4 <alt_get_errno+0x28>
  80d3f0:	d0a6d104 	addi	r2,gp,-25788
}
  80d3f4:	e037883a 	mov	sp,fp
  80d3f8:	dfc00117 	ldw	ra,4(sp)
  80d3fc:	df000017 	ldw	fp,0(sp)
  80d400:	dec00204 	addi	sp,sp,8
  80d404:	f800283a 	ret

0080d408 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80d408:	defff904 	addi	sp,sp,-28
  80d40c:	dfc00615 	stw	ra,24(sp)
  80d410:	df000515 	stw	fp,20(sp)
  80d414:	df000504 	addi	fp,sp,20
  80d418:	e13ffd15 	stw	r4,-12(fp)
  80d41c:	e17ffe15 	stw	r5,-8(fp)
  80d420:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d424:	e0bffd17 	ldw	r2,-12(fp)
  80d428:	10000616 	blt	r2,zero,80d444 <write+0x3c>
  80d42c:	e0bffd17 	ldw	r2,-12(fp)
  80d430:	10c00324 	muli	r3,r2,12
  80d434:	00802074 	movhi	r2,129
  80d438:	10bfae04 	addi	r2,r2,-328
  80d43c:	1885883a 	add	r2,r3,r2
  80d440:	00000106 	br	80d448 <write+0x40>
  80d444:	0005883a 	mov	r2,zero
  80d448:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80d44c:	e0bffb17 	ldw	r2,-20(fp)
  80d450:	10002126 	beq	r2,zero,80d4d8 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  80d454:	e0bffb17 	ldw	r2,-20(fp)
  80d458:	10800217 	ldw	r2,8(r2)
  80d45c:	108000cc 	andi	r2,r2,3
  80d460:	10001826 	beq	r2,zero,80d4c4 <write+0xbc>
  80d464:	e0bffb17 	ldw	r2,-20(fp)
  80d468:	10800017 	ldw	r2,0(r2)
  80d46c:	10800617 	ldw	r2,24(r2)
  80d470:	10001426 	beq	r2,zero,80d4c4 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  80d474:	e0bffb17 	ldw	r2,-20(fp)
  80d478:	10800017 	ldw	r2,0(r2)
  80d47c:	10800617 	ldw	r2,24(r2)
  80d480:	e0ffff17 	ldw	r3,-4(fp)
  80d484:	180d883a 	mov	r6,r3
  80d488:	e17ffe17 	ldw	r5,-8(fp)
  80d48c:	e13ffb17 	ldw	r4,-20(fp)
  80d490:	103ee83a 	callr	r2
  80d494:	e0bffc15 	stw	r2,-16(fp)
  80d498:	e0bffc17 	ldw	r2,-16(fp)
  80d49c:	1000070e 	bge	r2,zero,80d4bc <write+0xb4>
      {
        ALT_ERRNO = -rval;
  80d4a0:	080d3cc0 	call	80d3cc <alt_get_errno>
  80d4a4:	1007883a 	mov	r3,r2
  80d4a8:	e0bffc17 	ldw	r2,-16(fp)
  80d4ac:	0085c83a 	sub	r2,zero,r2
  80d4b0:	18800015 	stw	r2,0(r3)
        return -1;
  80d4b4:	00bfffc4 	movi	r2,-1
  80d4b8:	00000c06 	br	80d4ec <write+0xe4>
      }
      return rval;
  80d4bc:	e0bffc17 	ldw	r2,-16(fp)
  80d4c0:	00000a06 	br	80d4ec <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
  80d4c4:	080d3cc0 	call	80d3cc <alt_get_errno>
  80d4c8:	1007883a 	mov	r3,r2
  80d4cc:	00800344 	movi	r2,13
  80d4d0:	18800015 	stw	r2,0(r3)
  80d4d4:	00000406 	br	80d4e8 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  80d4d8:	080d3cc0 	call	80d3cc <alt_get_errno>
  80d4dc:	1007883a 	mov	r3,r2
  80d4e0:	00801444 	movi	r2,81
  80d4e4:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80d4e8:	00bfffc4 	movi	r2,-1
}
  80d4ec:	e037883a 	mov	sp,fp
  80d4f0:	dfc00117 	ldw	ra,4(sp)
  80d4f4:	df000017 	ldw	fp,0(sp)
  80d4f8:	dec00204 	addi	sp,sp,8
  80d4fc:	f800283a 	ret

0080d500 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  80d500:	defffd04 	addi	sp,sp,-12
  80d504:	dfc00215 	stw	ra,8(sp)
  80d508:	df000115 	stw	fp,4(sp)
  80d50c:	df000104 	addi	fp,sp,4
  80d510:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  80d514:	d1600804 	addi	r5,gp,-32736
  80d518:	e13fff17 	ldw	r4,-4(fp)
  80d51c:	080e2dc0 	call	80e2dc <alt_dev_llist_insert>
}
  80d520:	e037883a 	mov	sp,fp
  80d524:	dfc00117 	ldw	ra,4(sp)
  80d528:	df000017 	ldw	fp,0(sp)
  80d52c:	dec00204 	addi	sp,sp,8
  80d530:	f800283a 	ret

0080d534 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  80d534:	defffd04 	addi	sp,sp,-12
  80d538:	dfc00215 	stw	ra,8(sp)
  80d53c:	df000115 	stw	fp,4(sp)
  80d540:	df000104 	addi	fp,sp,4
  80d544:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU, cpu);
  80d548:	080ec4c0 	call	80ec4c <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  80d54c:	00800044 	movi	r2,1
  80d550:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  80d554:	0001883a 	nop
  80d558:	e037883a 	mov	sp,fp
  80d55c:	dfc00117 	ldw	ra,4(sp)
  80d560:	df000017 	ldw	fp,0(sp)
  80d564:	dec00204 	addi	sp,sp,8
  80d568:	f800283a 	ret

0080d56c <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  80d56c:	defffe04 	addi	sp,sp,-8
  80d570:	dfc00115 	stw	ra,4(sp)
  80d574:	df000015 	stw	fp,0(sp)
  80d578:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  80d57c:	01c0fa04 	movi	r7,1000
  80d580:	01800044 	movi	r6,1
  80d584:	000b883a 	mov	r5,zero
  80d588:	01004034 	movhi	r4,256
  80d58c:	21040004 	addi	r4,r4,4096
  80d590:	080e0b00 	call	80e0b0 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  80d594:	01800404 	movi	r6,16
  80d598:	000b883a 	mov	r5,zero
  80d59c:	01002074 	movhi	r4,129
  80d5a0:	21001804 	addi	r4,r4,96
  80d5a4:	080d7340 	call	80d734 <altera_avalon_jtag_uart_init>
  80d5a8:	01002074 	movhi	r4,129
  80d5ac:	21000e04 	addi	r4,r4,56
  80d5b0:	080d5000 	call	80d500 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
  80d5b4:	0001883a 	nop
}
  80d5b8:	0001883a 	nop
  80d5bc:	e037883a 	mov	sp,fp
  80d5c0:	dfc00117 	ldw	ra,4(sp)
  80d5c4:	df000017 	ldw	fp,0(sp)
  80d5c8:	dec00204 	addi	sp,sp,8
  80d5cc:	f800283a 	ret

0080d5d0 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80d5d0:	defffa04 	addi	sp,sp,-24
  80d5d4:	dfc00515 	stw	ra,20(sp)
  80d5d8:	df000415 	stw	fp,16(sp)
  80d5dc:	df000404 	addi	fp,sp,16
  80d5e0:	e13ffd15 	stw	r4,-12(fp)
  80d5e4:	e17ffe15 	stw	r5,-8(fp)
  80d5e8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80d5ec:	e0bffd17 	ldw	r2,-12(fp)
  80d5f0:	10800017 	ldw	r2,0(r2)
  80d5f4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  80d5f8:	e0bffc17 	ldw	r2,-16(fp)
  80d5fc:	10c00a04 	addi	r3,r2,40
  80d600:	e0bffd17 	ldw	r2,-12(fp)
  80d604:	10800217 	ldw	r2,8(r2)
  80d608:	100f883a 	mov	r7,r2
  80d60c:	e1bfff17 	ldw	r6,-4(fp)
  80d610:	e17ffe17 	ldw	r5,-8(fp)
  80d614:	1809883a 	mov	r4,r3
  80d618:	080dbf80 	call	80dbf8 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  80d61c:	e037883a 	mov	sp,fp
  80d620:	dfc00117 	ldw	ra,4(sp)
  80d624:	df000017 	ldw	fp,0(sp)
  80d628:	dec00204 	addi	sp,sp,8
  80d62c:	f800283a 	ret

0080d630 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  80d630:	defffa04 	addi	sp,sp,-24
  80d634:	dfc00515 	stw	ra,20(sp)
  80d638:	df000415 	stw	fp,16(sp)
  80d63c:	df000404 	addi	fp,sp,16
  80d640:	e13ffd15 	stw	r4,-12(fp)
  80d644:	e17ffe15 	stw	r5,-8(fp)
  80d648:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80d64c:	e0bffd17 	ldw	r2,-12(fp)
  80d650:	10800017 	ldw	r2,0(r2)
  80d654:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  80d658:	e0bffc17 	ldw	r2,-16(fp)
  80d65c:	10c00a04 	addi	r3,r2,40
  80d660:	e0bffd17 	ldw	r2,-12(fp)
  80d664:	10800217 	ldw	r2,8(r2)
  80d668:	100f883a 	mov	r7,r2
  80d66c:	e1bfff17 	ldw	r6,-4(fp)
  80d670:	e17ffe17 	ldw	r5,-8(fp)
  80d674:	1809883a 	mov	r4,r3
  80d678:	080de140 	call	80de14 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  80d67c:	e037883a 	mov	sp,fp
  80d680:	dfc00117 	ldw	ra,4(sp)
  80d684:	df000017 	ldw	fp,0(sp)
  80d688:	dec00204 	addi	sp,sp,8
  80d68c:	f800283a 	ret

0080d690 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  80d690:	defffc04 	addi	sp,sp,-16
  80d694:	dfc00315 	stw	ra,12(sp)
  80d698:	df000215 	stw	fp,8(sp)
  80d69c:	df000204 	addi	fp,sp,8
  80d6a0:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80d6a4:	e0bfff17 	ldw	r2,-4(fp)
  80d6a8:	10800017 	ldw	r2,0(r2)
  80d6ac:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  80d6b0:	e0bffe17 	ldw	r2,-8(fp)
  80d6b4:	10c00a04 	addi	r3,r2,40
  80d6b8:	e0bfff17 	ldw	r2,-4(fp)
  80d6bc:	10800217 	ldw	r2,8(r2)
  80d6c0:	100b883a 	mov	r5,r2
  80d6c4:	1809883a 	mov	r4,r3
  80d6c8:	080daa00 	call	80daa0 <altera_avalon_jtag_uart_close>
}
  80d6cc:	e037883a 	mov	sp,fp
  80d6d0:	dfc00117 	ldw	ra,4(sp)
  80d6d4:	df000017 	ldw	fp,0(sp)
  80d6d8:	dec00204 	addi	sp,sp,8
  80d6dc:	f800283a 	ret

0080d6e0 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  80d6e0:	defffa04 	addi	sp,sp,-24
  80d6e4:	dfc00515 	stw	ra,20(sp)
  80d6e8:	df000415 	stw	fp,16(sp)
  80d6ec:	df000404 	addi	fp,sp,16
  80d6f0:	e13ffd15 	stw	r4,-12(fp)
  80d6f4:	e17ffe15 	stw	r5,-8(fp)
  80d6f8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  80d6fc:	e0bffd17 	ldw	r2,-12(fp)
  80d700:	10800017 	ldw	r2,0(r2)
  80d704:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  80d708:	e0bffc17 	ldw	r2,-16(fp)
  80d70c:	10800a04 	addi	r2,r2,40
  80d710:	e1bfff17 	ldw	r6,-4(fp)
  80d714:	e17ffe17 	ldw	r5,-8(fp)
  80d718:	1009883a 	mov	r4,r2
  80d71c:	080db080 	call	80db08 <altera_avalon_jtag_uart_ioctl>
}
  80d720:	e037883a 	mov	sp,fp
  80d724:	dfc00117 	ldw	ra,4(sp)
  80d728:	df000017 	ldw	fp,0(sp)
  80d72c:	dec00204 	addi	sp,sp,8
  80d730:	f800283a 	ret

0080d734 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  80d734:	defffa04 	addi	sp,sp,-24
  80d738:	dfc00515 	stw	ra,20(sp)
  80d73c:	df000415 	stw	fp,16(sp)
  80d740:	df000404 	addi	fp,sp,16
  80d744:	e13ffd15 	stw	r4,-12(fp)
  80d748:	e17ffe15 	stw	r5,-8(fp)
  80d74c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80d750:	e0bffd17 	ldw	r2,-12(fp)
  80d754:	00c00044 	movi	r3,1
  80d758:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  80d75c:	e0bffd17 	ldw	r2,-12(fp)
  80d760:	10800017 	ldw	r2,0(r2)
  80d764:	10800104 	addi	r2,r2,4
  80d768:	1007883a 	mov	r3,r2
  80d76c:	e0bffd17 	ldw	r2,-12(fp)
  80d770:	10800817 	ldw	r2,32(r2)
  80d774:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  80d778:	e0bffe17 	ldw	r2,-8(fp)
  80d77c:	e0ffff17 	ldw	r3,-4(fp)
  80d780:	d8000015 	stw	zero,0(sp)
  80d784:	e1fffd17 	ldw	r7,-12(fp)
  80d788:	01802074 	movhi	r6,129
  80d78c:	31b5fd04 	addi	r6,r6,-10252
  80d790:	180b883a 	mov	r5,r3
  80d794:	1009883a 	mov	r4,r2
  80d798:	080e4740 	call	80e474 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  80d79c:	e0bffd17 	ldw	r2,-12(fp)
  80d7a0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  80d7a4:	e0bffd17 	ldw	r2,-12(fp)
  80d7a8:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80d7ac:	d0e6d617 	ldw	r3,-25768(gp)
  80d7b0:	e1fffd17 	ldw	r7,-12(fp)
  80d7b4:	01802074 	movhi	r6,129
  80d7b8:	31b68004 	addi	r6,r6,-9728
  80d7bc:	180b883a 	mov	r5,r3
  80d7c0:	1009883a 	mov	r4,r2
  80d7c4:	080e12c0 	call	80e12c <alt_alarm_start>
  80d7c8:	1000040e 	bge	r2,zero,80d7dc <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  80d7cc:	e0fffd17 	ldw	r3,-12(fp)
  80d7d0:	00a00034 	movhi	r2,32768
  80d7d4:	10bfffc4 	addi	r2,r2,-1
  80d7d8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  80d7dc:	0001883a 	nop
  80d7e0:	e037883a 	mov	sp,fp
  80d7e4:	dfc00117 	ldw	ra,4(sp)
  80d7e8:	df000017 	ldw	fp,0(sp)
  80d7ec:	dec00204 	addi	sp,sp,8
  80d7f0:	f800283a 	ret

0080d7f4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  80d7f4:	defff804 	addi	sp,sp,-32
  80d7f8:	df000715 	stw	fp,28(sp)
  80d7fc:	df000704 	addi	fp,sp,28
  80d800:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  80d804:	e0bfff17 	ldw	r2,-4(fp)
  80d808:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
  80d80c:	e0bffb17 	ldw	r2,-20(fp)
  80d810:	10800017 	ldw	r2,0(r2)
  80d814:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80d818:	e0bffc17 	ldw	r2,-16(fp)
  80d81c:	10800104 	addi	r2,r2,4
  80d820:	10800037 	ldwio	r2,0(r2)
  80d824:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  80d828:	e0bffd17 	ldw	r2,-12(fp)
  80d82c:	1080c00c 	andi	r2,r2,768
  80d830:	10006d26 	beq	r2,zero,80d9e8 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  80d834:	e0bffd17 	ldw	r2,-12(fp)
  80d838:	1080400c 	andi	r2,r2,256
  80d83c:	10003526 	beq	r2,zero,80d914 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  80d840:	00800074 	movhi	r2,1
  80d844:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80d848:	e0bffb17 	ldw	r2,-20(fp)
  80d84c:	10800a17 	ldw	r2,40(r2)
  80d850:	10800044 	addi	r2,r2,1
  80d854:	1081ffcc 	andi	r2,r2,2047
  80d858:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
  80d85c:	e0bffb17 	ldw	r2,-20(fp)
  80d860:	10c00b17 	ldw	r3,44(r2)
  80d864:	e0bffe17 	ldw	r2,-8(fp)
  80d868:	18801526 	beq	r3,r2,80d8c0 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  80d86c:	e0bffc17 	ldw	r2,-16(fp)
  80d870:	10800037 	ldwio	r2,0(r2)
  80d874:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  80d878:	e0bff917 	ldw	r2,-28(fp)
  80d87c:	10a0000c 	andi	r2,r2,32768
  80d880:	10001126 	beq	r2,zero,80d8c8 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  80d884:	e0bffb17 	ldw	r2,-20(fp)
  80d888:	10800a17 	ldw	r2,40(r2)
  80d88c:	e0fff917 	ldw	r3,-28(fp)
  80d890:	1809883a 	mov	r4,r3
  80d894:	e0fffb17 	ldw	r3,-20(fp)
  80d898:	1885883a 	add	r2,r3,r2
  80d89c:	10800e04 	addi	r2,r2,56
  80d8a0:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80d8a4:	e0bffb17 	ldw	r2,-20(fp)
  80d8a8:	10800a17 	ldw	r2,40(r2)
  80d8ac:	10800044 	addi	r2,r2,1
  80d8b0:	10c1ffcc 	andi	r3,r2,2047
  80d8b4:	e0bffb17 	ldw	r2,-20(fp)
  80d8b8:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  80d8bc:	003fe206 	br	80d848 <__alt_data_end+0xff80d848>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
  80d8c0:	0001883a 	nop
  80d8c4:	00000106 	br	80d8cc <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
  80d8c8:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  80d8cc:	e0bff917 	ldw	r2,-28(fp)
  80d8d0:	10bfffec 	andhi	r2,r2,65535
  80d8d4:	10000f26 	beq	r2,zero,80d914 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80d8d8:	e0bffb17 	ldw	r2,-20(fp)
  80d8dc:	10c00817 	ldw	r3,32(r2)
  80d8e0:	00bfff84 	movi	r2,-2
  80d8e4:	1886703a 	and	r3,r3,r2
  80d8e8:	e0bffb17 	ldw	r2,-20(fp)
  80d8ec:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  80d8f0:	e0bffc17 	ldw	r2,-16(fp)
  80d8f4:	10800104 	addi	r2,r2,4
  80d8f8:	1007883a 	mov	r3,r2
  80d8fc:	e0bffb17 	ldw	r2,-20(fp)
  80d900:	10800817 	ldw	r2,32(r2)
  80d904:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80d908:	e0bffc17 	ldw	r2,-16(fp)
  80d90c:	10800104 	addi	r2,r2,4
  80d910:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  80d914:	e0bffd17 	ldw	r2,-12(fp)
  80d918:	1080800c 	andi	r2,r2,512
  80d91c:	103fbe26 	beq	r2,zero,80d818 <__alt_data_end+0xff80d818>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  80d920:	e0bffd17 	ldw	r2,-12(fp)
  80d924:	1004d43a 	srli	r2,r2,16
  80d928:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  80d92c:	00001406 	br	80d980 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  80d930:	e0bffc17 	ldw	r2,-16(fp)
  80d934:	e0fffb17 	ldw	r3,-20(fp)
  80d938:	18c00d17 	ldw	r3,52(r3)
  80d93c:	e13ffb17 	ldw	r4,-20(fp)
  80d940:	20c7883a 	add	r3,r4,r3
  80d944:	18c20e04 	addi	r3,r3,2104
  80d948:	18c00003 	ldbu	r3,0(r3)
  80d94c:	18c03fcc 	andi	r3,r3,255
  80d950:	18c0201c 	xori	r3,r3,128
  80d954:	18ffe004 	addi	r3,r3,-128
  80d958:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80d95c:	e0bffb17 	ldw	r2,-20(fp)
  80d960:	10800d17 	ldw	r2,52(r2)
  80d964:	10800044 	addi	r2,r2,1
  80d968:	10c1ffcc 	andi	r3,r2,2047
  80d96c:	e0bffb17 	ldw	r2,-20(fp)
  80d970:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  80d974:	e0bffa17 	ldw	r2,-24(fp)
  80d978:	10bfffc4 	addi	r2,r2,-1
  80d97c:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  80d980:	e0bffa17 	ldw	r2,-24(fp)
  80d984:	10000526 	beq	r2,zero,80d99c <altera_avalon_jtag_uart_irq+0x1a8>
  80d988:	e0bffb17 	ldw	r2,-20(fp)
  80d98c:	10c00d17 	ldw	r3,52(r2)
  80d990:	e0bffb17 	ldw	r2,-20(fp)
  80d994:	10800c17 	ldw	r2,48(r2)
  80d998:	18bfe51e 	bne	r3,r2,80d930 <__alt_data_end+0xff80d930>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  80d99c:	e0bffa17 	ldw	r2,-24(fp)
  80d9a0:	103f9d26 	beq	r2,zero,80d818 <__alt_data_end+0xff80d818>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80d9a4:	e0bffb17 	ldw	r2,-20(fp)
  80d9a8:	10c00817 	ldw	r3,32(r2)
  80d9ac:	00bfff44 	movi	r2,-3
  80d9b0:	1886703a 	and	r3,r3,r2
  80d9b4:	e0bffb17 	ldw	r2,-20(fp)
  80d9b8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80d9bc:	e0bffb17 	ldw	r2,-20(fp)
  80d9c0:	10800017 	ldw	r2,0(r2)
  80d9c4:	10800104 	addi	r2,r2,4
  80d9c8:	1007883a 	mov	r3,r2
  80d9cc:	e0bffb17 	ldw	r2,-20(fp)
  80d9d0:	10800817 	ldw	r2,32(r2)
  80d9d4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80d9d8:	e0bffc17 	ldw	r2,-16(fp)
  80d9dc:	10800104 	addi	r2,r2,4
  80d9e0:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  80d9e4:	003f8c06 	br	80d818 <__alt_data_end+0xff80d818>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
  80d9e8:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
  80d9ec:	0001883a 	nop
  80d9f0:	e037883a 	mov	sp,fp
  80d9f4:	df000017 	ldw	fp,0(sp)
  80d9f8:	dec00104 	addi	sp,sp,4
  80d9fc:	f800283a 	ret

0080da00 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  80da00:	defff804 	addi	sp,sp,-32
  80da04:	df000715 	stw	fp,28(sp)
  80da08:	df000704 	addi	fp,sp,28
  80da0c:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  80da10:	e0bffb17 	ldw	r2,-20(fp)
  80da14:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  80da18:	e0bff917 	ldw	r2,-28(fp)
  80da1c:	10800017 	ldw	r2,0(r2)
  80da20:	10800104 	addi	r2,r2,4
  80da24:	10800037 	ldwio	r2,0(r2)
  80da28:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  80da2c:	e0bffa17 	ldw	r2,-24(fp)
  80da30:	1081000c 	andi	r2,r2,1024
  80da34:	10000b26 	beq	r2,zero,80da64 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  80da38:	e0bff917 	ldw	r2,-28(fp)
  80da3c:	10800017 	ldw	r2,0(r2)
  80da40:	10800104 	addi	r2,r2,4
  80da44:	1007883a 	mov	r3,r2
  80da48:	e0bff917 	ldw	r2,-28(fp)
  80da4c:	10800817 	ldw	r2,32(r2)
  80da50:	10810014 	ori	r2,r2,1024
  80da54:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  80da58:	e0bff917 	ldw	r2,-28(fp)
  80da5c:	10000915 	stw	zero,36(r2)
  80da60:	00000a06 	br	80da8c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  80da64:	e0bff917 	ldw	r2,-28(fp)
  80da68:	10c00917 	ldw	r3,36(r2)
  80da6c:	00a00034 	movhi	r2,32768
  80da70:	10bfff04 	addi	r2,r2,-4
  80da74:	10c00536 	bltu	r2,r3,80da8c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  80da78:	e0bff917 	ldw	r2,-28(fp)
  80da7c:	10800917 	ldw	r2,36(r2)
  80da80:	10c00044 	addi	r3,r2,1
  80da84:	e0bff917 	ldw	r2,-28(fp)
  80da88:	10c00915 	stw	r3,36(r2)
  80da8c:	d0a6d617 	ldw	r2,-25768(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  80da90:	e037883a 	mov	sp,fp
  80da94:	df000017 	ldw	fp,0(sp)
  80da98:	dec00104 	addi	sp,sp,4
  80da9c:	f800283a 	ret

0080daa0 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  80daa0:	defffd04 	addi	sp,sp,-12
  80daa4:	df000215 	stw	fp,8(sp)
  80daa8:	df000204 	addi	fp,sp,8
  80daac:	e13ffe15 	stw	r4,-8(fp)
  80dab0:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80dab4:	00000506 	br	80dacc <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  80dab8:	e0bfff17 	ldw	r2,-4(fp)
  80dabc:	1090000c 	andi	r2,r2,16384
  80dac0:	10000226 	beq	r2,zero,80dacc <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  80dac4:	00bffd44 	movi	r2,-11
  80dac8:	00000b06 	br	80daf8 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80dacc:	e0bffe17 	ldw	r2,-8(fp)
  80dad0:	10c00d17 	ldw	r3,52(r2)
  80dad4:	e0bffe17 	ldw	r2,-8(fp)
  80dad8:	10800c17 	ldw	r2,48(r2)
  80dadc:	18800526 	beq	r3,r2,80daf4 <altera_avalon_jtag_uart_close+0x54>
  80dae0:	e0bffe17 	ldw	r2,-8(fp)
  80dae4:	10c00917 	ldw	r3,36(r2)
  80dae8:	e0bffe17 	ldw	r2,-8(fp)
  80daec:	10800117 	ldw	r2,4(r2)
  80daf0:	18bff136 	bltu	r3,r2,80dab8 <__alt_data_end+0xff80dab8>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  80daf4:	0005883a 	mov	r2,zero
}
  80daf8:	e037883a 	mov	sp,fp
  80dafc:	df000017 	ldw	fp,0(sp)
  80db00:	dec00104 	addi	sp,sp,4
  80db04:	f800283a 	ret

0080db08 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  80db08:	defffa04 	addi	sp,sp,-24
  80db0c:	df000515 	stw	fp,20(sp)
  80db10:	df000504 	addi	fp,sp,20
  80db14:	e13ffd15 	stw	r4,-12(fp)
  80db18:	e17ffe15 	stw	r5,-8(fp)
  80db1c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  80db20:	00bff9c4 	movi	r2,-25
  80db24:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  80db28:	e0bffe17 	ldw	r2,-8(fp)
  80db2c:	10da8060 	cmpeqi	r3,r2,27137
  80db30:	1800031e 	bne	r3,zero,80db40 <altera_avalon_jtag_uart_ioctl+0x38>
  80db34:	109a80a0 	cmpeqi	r2,r2,27138
  80db38:	1000181e 	bne	r2,zero,80db9c <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
  80db3c:	00002906 	br	80dbe4 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  80db40:	e0bffd17 	ldw	r2,-12(fp)
  80db44:	10c00117 	ldw	r3,4(r2)
  80db48:	00a00034 	movhi	r2,32768
  80db4c:	10bfffc4 	addi	r2,r2,-1
  80db50:	18802126 	beq	r3,r2,80dbd8 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
  80db54:	e0bfff17 	ldw	r2,-4(fp)
  80db58:	10800017 	ldw	r2,0(r2)
  80db5c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  80db60:	e0bffc17 	ldw	r2,-16(fp)
  80db64:	10800090 	cmplti	r2,r2,2
  80db68:	1000061e 	bne	r2,zero,80db84 <altera_avalon_jtag_uart_ioctl+0x7c>
  80db6c:	e0fffc17 	ldw	r3,-16(fp)
  80db70:	00a00034 	movhi	r2,32768
  80db74:	10bfffc4 	addi	r2,r2,-1
  80db78:	18800226 	beq	r3,r2,80db84 <altera_avalon_jtag_uart_ioctl+0x7c>
  80db7c:	e0bffc17 	ldw	r2,-16(fp)
  80db80:	00000206 	br	80db8c <altera_avalon_jtag_uart_ioctl+0x84>
  80db84:	00a00034 	movhi	r2,32768
  80db88:	10bfff84 	addi	r2,r2,-2
  80db8c:	e0fffd17 	ldw	r3,-12(fp)
  80db90:	18800115 	stw	r2,4(r3)
      rc = 0;
  80db94:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  80db98:	00000f06 	br	80dbd8 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  80db9c:	e0bffd17 	ldw	r2,-12(fp)
  80dba0:	10c00117 	ldw	r3,4(r2)
  80dba4:	00a00034 	movhi	r2,32768
  80dba8:	10bfffc4 	addi	r2,r2,-1
  80dbac:	18800c26 	beq	r3,r2,80dbe0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  80dbb0:	e0bffd17 	ldw	r2,-12(fp)
  80dbb4:	10c00917 	ldw	r3,36(r2)
  80dbb8:	e0bffd17 	ldw	r2,-12(fp)
  80dbbc:	10800117 	ldw	r2,4(r2)
  80dbc0:	1885803a 	cmpltu	r2,r3,r2
  80dbc4:	10c03fcc 	andi	r3,r2,255
  80dbc8:	e0bfff17 	ldw	r2,-4(fp)
  80dbcc:	10c00015 	stw	r3,0(r2)
      rc = 0;
  80dbd0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  80dbd4:	00000206 	br	80dbe0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
  80dbd8:	0001883a 	nop
  80dbdc:	00000106 	br	80dbe4 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
  80dbe0:	0001883a 	nop

  default:
    break;
  }

  return rc;
  80dbe4:	e0bffb17 	ldw	r2,-20(fp)
}
  80dbe8:	e037883a 	mov	sp,fp
  80dbec:	df000017 	ldw	fp,0(sp)
  80dbf0:	dec00104 	addi	sp,sp,4
  80dbf4:	f800283a 	ret

0080dbf8 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  80dbf8:	defff304 	addi	sp,sp,-52
  80dbfc:	dfc00c15 	stw	ra,48(sp)
  80dc00:	df000b15 	stw	fp,44(sp)
  80dc04:	df000b04 	addi	fp,sp,44
  80dc08:	e13ffc15 	stw	r4,-16(fp)
  80dc0c:	e17ffd15 	stw	r5,-12(fp)
  80dc10:	e1bffe15 	stw	r6,-8(fp)
  80dc14:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  80dc18:	e0bffd17 	ldw	r2,-12(fp)
  80dc1c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80dc20:	00004706 	br	80dd40 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  80dc24:	e0bffc17 	ldw	r2,-16(fp)
  80dc28:	10800a17 	ldw	r2,40(r2)
  80dc2c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  80dc30:	e0bffc17 	ldw	r2,-16(fp)
  80dc34:	10800b17 	ldw	r2,44(r2)
  80dc38:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
  80dc3c:	e0fff717 	ldw	r3,-36(fp)
  80dc40:	e0bff817 	ldw	r2,-32(fp)
  80dc44:	18800536 	bltu	r3,r2,80dc5c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  80dc48:	e0fff717 	ldw	r3,-36(fp)
  80dc4c:	e0bff817 	ldw	r2,-32(fp)
  80dc50:	1885c83a 	sub	r2,r3,r2
  80dc54:	e0bff615 	stw	r2,-40(fp)
  80dc58:	00000406 	br	80dc6c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  80dc5c:	00c20004 	movi	r3,2048
  80dc60:	e0bff817 	ldw	r2,-32(fp)
  80dc64:	1885c83a 	sub	r2,r3,r2
  80dc68:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  80dc6c:	e0bff617 	ldw	r2,-40(fp)
  80dc70:	10001e26 	beq	r2,zero,80dcec <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  80dc74:	e0fffe17 	ldw	r3,-8(fp)
  80dc78:	e0bff617 	ldw	r2,-40(fp)
  80dc7c:	1880022e 	bgeu	r3,r2,80dc88 <altera_avalon_jtag_uart_read+0x90>
        n = space;
  80dc80:	e0bffe17 	ldw	r2,-8(fp)
  80dc84:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  80dc88:	e0bffc17 	ldw	r2,-16(fp)
  80dc8c:	10c00e04 	addi	r3,r2,56
  80dc90:	e0bff817 	ldw	r2,-32(fp)
  80dc94:	1885883a 	add	r2,r3,r2
  80dc98:	e1bff617 	ldw	r6,-40(fp)
  80dc9c:	100b883a 	mov	r5,r2
  80dca0:	e13ff517 	ldw	r4,-44(fp)
  80dca4:	0805d680 	call	805d68 <memcpy>
      ptr   += n;
  80dca8:	e0fff517 	ldw	r3,-44(fp)
  80dcac:	e0bff617 	ldw	r2,-40(fp)
  80dcb0:	1885883a 	add	r2,r3,r2
  80dcb4:	e0bff515 	stw	r2,-44(fp)
      space -= n;
  80dcb8:	e0fffe17 	ldw	r3,-8(fp)
  80dcbc:	e0bff617 	ldw	r2,-40(fp)
  80dcc0:	1885c83a 	sub	r2,r3,r2
  80dcc4:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80dcc8:	e0fff817 	ldw	r3,-32(fp)
  80dccc:	e0bff617 	ldw	r2,-40(fp)
  80dcd0:	1885883a 	add	r2,r3,r2
  80dcd4:	10c1ffcc 	andi	r3,r2,2047
  80dcd8:	e0bffc17 	ldw	r2,-16(fp)
  80dcdc:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  80dce0:	e0bffe17 	ldw	r2,-8(fp)
  80dce4:	00bfcf16 	blt	zero,r2,80dc24 <__alt_data_end+0xff80dc24>
  80dce8:	00000106 	br	80dcf0 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
  80dcec:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
  80dcf0:	e0fff517 	ldw	r3,-44(fp)
  80dcf4:	e0bffd17 	ldw	r2,-12(fp)
  80dcf8:	1880141e 	bne	r3,r2,80dd4c <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  80dcfc:	e0bfff17 	ldw	r2,-4(fp)
  80dd00:	1090000c 	andi	r2,r2,16384
  80dd04:	1000131e 	bne	r2,zero,80dd54 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  80dd08:	0001883a 	nop
  80dd0c:	e0bffc17 	ldw	r2,-16(fp)
  80dd10:	10c00a17 	ldw	r3,40(r2)
  80dd14:	e0bff717 	ldw	r2,-36(fp)
  80dd18:	1880051e 	bne	r3,r2,80dd30 <altera_avalon_jtag_uart_read+0x138>
  80dd1c:	e0bffc17 	ldw	r2,-16(fp)
  80dd20:	10c00917 	ldw	r3,36(r2)
  80dd24:	e0bffc17 	ldw	r2,-16(fp)
  80dd28:	10800117 	ldw	r2,4(r2)
  80dd2c:	18bff736 	bltu	r3,r2,80dd0c <__alt_data_end+0xff80dd0c>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  80dd30:	e0bffc17 	ldw	r2,-16(fp)
  80dd34:	10c00a17 	ldw	r3,40(r2)
  80dd38:	e0bff717 	ldw	r2,-36(fp)
  80dd3c:	18800726 	beq	r3,r2,80dd5c <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80dd40:	e0bffe17 	ldw	r2,-8(fp)
  80dd44:	00bfb716 	blt	zero,r2,80dc24 <__alt_data_end+0xff80dc24>
  80dd48:	00000506 	br	80dd60 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
  80dd4c:	0001883a 	nop
  80dd50:	00000306 	br	80dd60 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
  80dd54:	0001883a 	nop
  80dd58:	00000106 	br	80dd60 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
  80dd5c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  80dd60:	e0fff517 	ldw	r3,-44(fp)
  80dd64:	e0bffd17 	ldw	r2,-12(fp)
  80dd68:	18801826 	beq	r3,r2,80ddcc <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80dd6c:	0005303a 	rdctl	r2,status
  80dd70:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80dd74:	e0fffb17 	ldw	r3,-20(fp)
  80dd78:	00bfff84 	movi	r2,-2
  80dd7c:	1884703a 	and	r2,r3,r2
  80dd80:	1001703a 	wrctl	status,r2
  
  return context;
  80dd84:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  80dd88:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80dd8c:	e0bffc17 	ldw	r2,-16(fp)
  80dd90:	10800817 	ldw	r2,32(r2)
  80dd94:	10c00054 	ori	r3,r2,1
  80dd98:	e0bffc17 	ldw	r2,-16(fp)
  80dd9c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80dda0:	e0bffc17 	ldw	r2,-16(fp)
  80dda4:	10800017 	ldw	r2,0(r2)
  80dda8:	10800104 	addi	r2,r2,4
  80ddac:	1007883a 	mov	r3,r2
  80ddb0:	e0bffc17 	ldw	r2,-16(fp)
  80ddb4:	10800817 	ldw	r2,32(r2)
  80ddb8:	18800035 	stwio	r2,0(r3)
  80ddbc:	e0bffa17 	ldw	r2,-24(fp)
  80ddc0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80ddc4:	e0bff917 	ldw	r2,-28(fp)
  80ddc8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  80ddcc:	e0fff517 	ldw	r3,-44(fp)
  80ddd0:	e0bffd17 	ldw	r2,-12(fp)
  80ddd4:	18800426 	beq	r3,r2,80dde8 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
  80ddd8:	e0fff517 	ldw	r3,-44(fp)
  80dddc:	e0bffd17 	ldw	r2,-12(fp)
  80dde0:	1885c83a 	sub	r2,r3,r2
  80dde4:	00000606 	br	80de00 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
  80dde8:	e0bfff17 	ldw	r2,-4(fp)
  80ddec:	1090000c 	andi	r2,r2,16384
  80ddf0:	10000226 	beq	r2,zero,80ddfc <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
  80ddf4:	00bffd44 	movi	r2,-11
  80ddf8:	00000106 	br	80de00 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
  80ddfc:	00bffec4 	movi	r2,-5
}
  80de00:	e037883a 	mov	sp,fp
  80de04:	dfc00117 	ldw	ra,4(sp)
  80de08:	df000017 	ldw	fp,0(sp)
  80de0c:	dec00204 	addi	sp,sp,8
  80de10:	f800283a 	ret

0080de14 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  80de14:	defff304 	addi	sp,sp,-52
  80de18:	dfc00c15 	stw	ra,48(sp)
  80de1c:	df000b15 	stw	fp,44(sp)
  80de20:	df000b04 	addi	fp,sp,44
  80de24:	e13ffc15 	stw	r4,-16(fp)
  80de28:	e17ffd15 	stw	r5,-12(fp)
  80de2c:	e1bffe15 	stw	r6,-8(fp)
  80de30:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  80de34:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  80de38:	e0bffd17 	ldw	r2,-12(fp)
  80de3c:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80de40:	00003706 	br	80df20 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  80de44:	e0bffc17 	ldw	r2,-16(fp)
  80de48:	10800c17 	ldw	r2,48(r2)
  80de4c:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
  80de50:	e0bffc17 	ldw	r2,-16(fp)
  80de54:	10800d17 	ldw	r2,52(r2)
  80de58:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
  80de5c:	e0fff917 	ldw	r3,-28(fp)
  80de60:	e0bff517 	ldw	r2,-44(fp)
  80de64:	1880062e 	bgeu	r3,r2,80de80 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  80de68:	e0fff517 	ldw	r3,-44(fp)
  80de6c:	e0bff917 	ldw	r2,-28(fp)
  80de70:	1885c83a 	sub	r2,r3,r2
  80de74:	10bfffc4 	addi	r2,r2,-1
  80de78:	e0bff615 	stw	r2,-40(fp)
  80de7c:	00000b06 	br	80deac <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  80de80:	e0bff517 	ldw	r2,-44(fp)
  80de84:	10000526 	beq	r2,zero,80de9c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  80de88:	00c20004 	movi	r3,2048
  80de8c:	e0bff917 	ldw	r2,-28(fp)
  80de90:	1885c83a 	sub	r2,r3,r2
  80de94:	e0bff615 	stw	r2,-40(fp)
  80de98:	00000406 	br	80deac <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  80de9c:	00c1ffc4 	movi	r3,2047
  80dea0:	e0bff917 	ldw	r2,-28(fp)
  80dea4:	1885c83a 	sub	r2,r3,r2
  80dea8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  80deac:	e0bff617 	ldw	r2,-40(fp)
  80deb0:	10001e26 	beq	r2,zero,80df2c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  80deb4:	e0fffe17 	ldw	r3,-8(fp)
  80deb8:	e0bff617 	ldw	r2,-40(fp)
  80debc:	1880022e 	bgeu	r3,r2,80dec8 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  80dec0:	e0bffe17 	ldw	r2,-8(fp)
  80dec4:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  80dec8:	e0bffc17 	ldw	r2,-16(fp)
  80decc:	10c20e04 	addi	r3,r2,2104
  80ded0:	e0bff917 	ldw	r2,-28(fp)
  80ded4:	1885883a 	add	r2,r3,r2
  80ded8:	e1bff617 	ldw	r6,-40(fp)
  80dedc:	e17ffd17 	ldw	r5,-12(fp)
  80dee0:	1009883a 	mov	r4,r2
  80dee4:	0805d680 	call	805d68 <memcpy>
      ptr   += n;
  80dee8:	e0fffd17 	ldw	r3,-12(fp)
  80deec:	e0bff617 	ldw	r2,-40(fp)
  80def0:	1885883a 	add	r2,r3,r2
  80def4:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  80def8:	e0fffe17 	ldw	r3,-8(fp)
  80defc:	e0bff617 	ldw	r2,-40(fp)
  80df00:	1885c83a 	sub	r2,r3,r2
  80df04:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80df08:	e0fff917 	ldw	r3,-28(fp)
  80df0c:	e0bff617 	ldw	r2,-40(fp)
  80df10:	1885883a 	add	r2,r3,r2
  80df14:	10c1ffcc 	andi	r3,r2,2047
  80df18:	e0bffc17 	ldw	r2,-16(fp)
  80df1c:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80df20:	e0bffe17 	ldw	r2,-8(fp)
  80df24:	00bfc716 	blt	zero,r2,80de44 <__alt_data_end+0xff80de44>
  80df28:	00000106 	br	80df30 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
  80df2c:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80df30:	0005303a 	rdctl	r2,status
  80df34:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80df38:	e0fffb17 	ldw	r3,-20(fp)
  80df3c:	00bfff84 	movi	r2,-2
  80df40:	1884703a 	and	r2,r3,r2
  80df44:	1001703a 	wrctl	status,r2
  
  return context;
  80df48:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  80df4c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80df50:	e0bffc17 	ldw	r2,-16(fp)
  80df54:	10800817 	ldw	r2,32(r2)
  80df58:	10c00094 	ori	r3,r2,2
  80df5c:	e0bffc17 	ldw	r2,-16(fp)
  80df60:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80df64:	e0bffc17 	ldw	r2,-16(fp)
  80df68:	10800017 	ldw	r2,0(r2)
  80df6c:	10800104 	addi	r2,r2,4
  80df70:	1007883a 	mov	r3,r2
  80df74:	e0bffc17 	ldw	r2,-16(fp)
  80df78:	10800817 	ldw	r2,32(r2)
  80df7c:	18800035 	stwio	r2,0(r3)
  80df80:	e0bffa17 	ldw	r2,-24(fp)
  80df84:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80df88:	e0bff817 	ldw	r2,-32(fp)
  80df8c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  80df90:	e0bffe17 	ldw	r2,-8(fp)
  80df94:	0080100e 	bge	zero,r2,80dfd8 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
  80df98:	e0bfff17 	ldw	r2,-4(fp)
  80df9c:	1090000c 	andi	r2,r2,16384
  80dfa0:	1000101e 	bne	r2,zero,80dfe4 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  80dfa4:	0001883a 	nop
  80dfa8:	e0bffc17 	ldw	r2,-16(fp)
  80dfac:	10c00d17 	ldw	r3,52(r2)
  80dfb0:	e0bff517 	ldw	r2,-44(fp)
  80dfb4:	1880051e 	bne	r3,r2,80dfcc <altera_avalon_jtag_uart_write+0x1b8>
  80dfb8:	e0bffc17 	ldw	r2,-16(fp)
  80dfbc:	10c00917 	ldw	r3,36(r2)
  80dfc0:	e0bffc17 	ldw	r2,-16(fp)
  80dfc4:	10800117 	ldw	r2,4(r2)
  80dfc8:	18bff736 	bltu	r3,r2,80dfa8 <__alt_data_end+0xff80dfa8>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  80dfcc:	e0bffc17 	ldw	r2,-16(fp)
  80dfd0:	10800917 	ldw	r2,36(r2)
  80dfd4:	1000051e 	bne	r2,zero,80dfec <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
  80dfd8:	e0bffe17 	ldw	r2,-8(fp)
  80dfdc:	00bfd016 	blt	zero,r2,80df20 <__alt_data_end+0xff80df20>
  80dfe0:	00000306 	br	80dff0 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
  80dfe4:	0001883a 	nop
  80dfe8:	00000106 	br	80dff0 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
  80dfec:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  80dff0:	e0fffd17 	ldw	r3,-12(fp)
  80dff4:	e0bff717 	ldw	r2,-36(fp)
  80dff8:	18800426 	beq	r3,r2,80e00c <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
  80dffc:	e0fffd17 	ldw	r3,-12(fp)
  80e000:	e0bff717 	ldw	r2,-36(fp)
  80e004:	1885c83a 	sub	r2,r3,r2
  80e008:	00000606 	br	80e024 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
  80e00c:	e0bfff17 	ldw	r2,-4(fp)
  80e010:	1090000c 	andi	r2,r2,16384
  80e014:	10000226 	beq	r2,zero,80e020 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
  80e018:	00bffd44 	movi	r2,-11
  80e01c:	00000106 	br	80e024 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  80e020:	00bffec4 	movi	r2,-5
}
  80e024:	e037883a 	mov	sp,fp
  80e028:	dfc00117 	ldw	ra,4(sp)
  80e02c:	df000017 	ldw	fp,0(sp)
  80e030:	dec00204 	addi	sp,sp,8
  80e034:	f800283a 	ret

0080e038 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  80e038:	defffa04 	addi	sp,sp,-24
  80e03c:	dfc00515 	stw	ra,20(sp)
  80e040:	df000415 	stw	fp,16(sp)
  80e044:	df000404 	addi	fp,sp,16
  80e048:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  80e04c:	0007883a 	mov	r3,zero
  80e050:	e0bfff17 	ldw	r2,-4(fp)
  80e054:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  80e058:	e0bfff17 	ldw	r2,-4(fp)
  80e05c:	10800104 	addi	r2,r2,4
  80e060:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e064:	0005303a 	rdctl	r2,status
  80e068:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e06c:	e0fffd17 	ldw	r3,-12(fp)
  80e070:	00bfff84 	movi	r2,-2
  80e074:	1884703a 	and	r2,r3,r2
  80e078:	1001703a 	wrctl	status,r2
  
  return context;
  80e07c:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  80e080:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
  80e084:	080eb440 	call	80eb44 <alt_tick>
  80e088:	e0bffc17 	ldw	r2,-16(fp)
  80e08c:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e090:	e0bffe17 	ldw	r2,-8(fp)
  80e094:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  80e098:	0001883a 	nop
  80e09c:	e037883a 	mov	sp,fp
  80e0a0:	dfc00117 	ldw	ra,4(sp)
  80e0a4:	df000017 	ldw	fp,0(sp)
  80e0a8:	dec00204 	addi	sp,sp,8
  80e0ac:	f800283a 	ret

0080e0b0 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  80e0b0:	defff804 	addi	sp,sp,-32
  80e0b4:	dfc00715 	stw	ra,28(sp)
  80e0b8:	df000615 	stw	fp,24(sp)
  80e0bc:	df000604 	addi	fp,sp,24
  80e0c0:	e13ffc15 	stw	r4,-16(fp)
  80e0c4:	e17ffd15 	stw	r5,-12(fp)
  80e0c8:	e1bffe15 	stw	r6,-8(fp)
  80e0cc:	e1ffff15 	stw	r7,-4(fp)
  80e0d0:	e0bfff17 	ldw	r2,-4(fp)
  80e0d4:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  80e0d8:	d0a6d617 	ldw	r2,-25768(gp)
  80e0dc:	1000021e 	bne	r2,zero,80e0e8 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
  80e0e0:	e0bffb17 	ldw	r2,-20(fp)
  80e0e4:	d0a6d615 	stw	r2,-25768(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  80e0e8:	e0bffc17 	ldw	r2,-16(fp)
  80e0ec:	10800104 	addi	r2,r2,4
  80e0f0:	00c001c4 	movi	r3,7
  80e0f4:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  80e0f8:	d8000015 	stw	zero,0(sp)
  80e0fc:	e1fffc17 	ldw	r7,-16(fp)
  80e100:	01802074 	movhi	r6,129
  80e104:	31b80e04 	addi	r6,r6,-8136
  80e108:	e17ffe17 	ldw	r5,-8(fp)
  80e10c:	e13ffd17 	ldw	r4,-12(fp)
  80e110:	080e4740 	call	80e474 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  80e114:	0001883a 	nop
  80e118:	e037883a 	mov	sp,fp
  80e11c:	dfc00117 	ldw	ra,4(sp)
  80e120:	df000017 	ldw	fp,0(sp)
  80e124:	dec00204 	addi	sp,sp,8
  80e128:	f800283a 	ret

0080e12c <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  80e12c:	defff504 	addi	sp,sp,-44
  80e130:	df000a15 	stw	fp,40(sp)
  80e134:	df000a04 	addi	fp,sp,40
  80e138:	e13ffc15 	stw	r4,-16(fp)
  80e13c:	e17ffd15 	stw	r5,-12(fp)
  80e140:	e1bffe15 	stw	r6,-8(fp)
  80e144:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  80e148:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80e14c:	d0a6d617 	ldw	r2,-25768(gp)
  
  if (alt_ticks_per_second ())
  80e150:	10003c26 	beq	r2,zero,80e244 <alt_alarm_start+0x118>
  {
    if (alarm)
  80e154:	e0bffc17 	ldw	r2,-16(fp)
  80e158:	10003826 	beq	r2,zero,80e23c <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
  80e15c:	e0bffc17 	ldw	r2,-16(fp)
  80e160:	e0fffe17 	ldw	r3,-8(fp)
  80e164:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  80e168:	e0bffc17 	ldw	r2,-16(fp)
  80e16c:	e0ffff17 	ldw	r3,-4(fp)
  80e170:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e174:	0005303a 	rdctl	r2,status
  80e178:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e17c:	e0fff917 	ldw	r3,-28(fp)
  80e180:	00bfff84 	movi	r2,-2
  80e184:	1884703a 	and	r2,r3,r2
  80e188:	1001703a 	wrctl	status,r2
  
  return context;
  80e18c:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
  80e190:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80e194:	d0a6d717 	ldw	r2,-25764(gp)
      
      current_nticks = alt_nticks();
  80e198:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  80e19c:	e0fffd17 	ldw	r3,-12(fp)
  80e1a0:	e0bff617 	ldw	r2,-40(fp)
  80e1a4:	1885883a 	add	r2,r3,r2
  80e1a8:	10c00044 	addi	r3,r2,1
  80e1ac:	e0bffc17 	ldw	r2,-16(fp)
  80e1b0:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  80e1b4:	e0bffc17 	ldw	r2,-16(fp)
  80e1b8:	10c00217 	ldw	r3,8(r2)
  80e1bc:	e0bff617 	ldw	r2,-40(fp)
  80e1c0:	1880042e 	bgeu	r3,r2,80e1d4 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  80e1c4:	e0bffc17 	ldw	r2,-16(fp)
  80e1c8:	00c00044 	movi	r3,1
  80e1cc:	10c00405 	stb	r3,16(r2)
  80e1d0:	00000206 	br	80e1dc <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  80e1d4:	e0bffc17 	ldw	r2,-16(fp)
  80e1d8:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  80e1dc:	e0bffc17 	ldw	r2,-16(fp)
  80e1e0:	d0e00e04 	addi	r3,gp,-32712
  80e1e4:	e0fffa15 	stw	r3,-24(fp)
  80e1e8:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80e1ec:	e0bffb17 	ldw	r2,-20(fp)
  80e1f0:	e0fffa17 	ldw	r3,-24(fp)
  80e1f4:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80e1f8:	e0bffa17 	ldw	r2,-24(fp)
  80e1fc:	10c00017 	ldw	r3,0(r2)
  80e200:	e0bffb17 	ldw	r2,-20(fp)
  80e204:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80e208:	e0bffa17 	ldw	r2,-24(fp)
  80e20c:	10800017 	ldw	r2,0(r2)
  80e210:	e0fffb17 	ldw	r3,-20(fp)
  80e214:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80e218:	e0bffa17 	ldw	r2,-24(fp)
  80e21c:	e0fffb17 	ldw	r3,-20(fp)
  80e220:	10c00015 	stw	r3,0(r2)
  80e224:	e0bff817 	ldw	r2,-32(fp)
  80e228:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e22c:	e0bff717 	ldw	r2,-36(fp)
  80e230:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  80e234:	0005883a 	mov	r2,zero
  80e238:	00000306 	br	80e248 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
  80e23c:	00bffa84 	movi	r2,-22
  80e240:	00000106 	br	80e248 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
  80e244:	00bfde84 	movi	r2,-134
  }
}
  80e248:	e037883a 	mov	sp,fp
  80e24c:	df000017 	ldw	fp,0(sp)
  80e250:	dec00104 	addi	sp,sp,4
  80e254:	f800283a 	ret

0080e258 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  80e258:	defffe04 	addi	sp,sp,-8
  80e25c:	df000115 	stw	fp,4(sp)
  80e260:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80e264:	e03fff15 	stw	zero,-4(fp)
  80e268:	00000506 	br	80e280 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  80e26c:	e0bfff17 	ldw	r2,-4(fp)
  80e270:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80e274:	e0bfff17 	ldw	r2,-4(fp)
  80e278:	10800804 	addi	r2,r2,32
  80e27c:	e0bfff15 	stw	r2,-4(fp)
  80e280:	e0bfff17 	ldw	r2,-4(fp)
  80e284:	00ffffd4 	movui	r3,65535
  80e288:	18bff82e 	bgeu	r3,r2,80e26c <__alt_data_end+0xff80e26c>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  80e28c:	0001883a 	nop
  80e290:	e037883a 	mov	sp,fp
  80e294:	df000017 	ldw	fp,0(sp)
  80e298:	dec00104 	addi	sp,sp,4
  80e29c:	f800283a 	ret

0080e2a0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e2a0:	defffe04 	addi	sp,sp,-8
  80e2a4:	dfc00115 	stw	ra,4(sp)
  80e2a8:	df000015 	stw	fp,0(sp)
  80e2ac:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e2b0:	d0a00b17 	ldw	r2,-32724(gp)
  80e2b4:	10000326 	beq	r2,zero,80e2c4 <alt_get_errno+0x24>
  80e2b8:	d0a00b17 	ldw	r2,-32724(gp)
  80e2bc:	103ee83a 	callr	r2
  80e2c0:	00000106 	br	80e2c8 <alt_get_errno+0x28>
  80e2c4:	d0a6d104 	addi	r2,gp,-25788
}
  80e2c8:	e037883a 	mov	sp,fp
  80e2cc:	dfc00117 	ldw	ra,4(sp)
  80e2d0:	df000017 	ldw	fp,0(sp)
  80e2d4:	dec00204 	addi	sp,sp,8
  80e2d8:	f800283a 	ret

0080e2dc <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  80e2dc:	defffa04 	addi	sp,sp,-24
  80e2e0:	dfc00515 	stw	ra,20(sp)
  80e2e4:	df000415 	stw	fp,16(sp)
  80e2e8:	df000404 	addi	fp,sp,16
  80e2ec:	e13ffe15 	stw	r4,-8(fp)
  80e2f0:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  80e2f4:	e0bffe17 	ldw	r2,-8(fp)
  80e2f8:	10000326 	beq	r2,zero,80e308 <alt_dev_llist_insert+0x2c>
  80e2fc:	e0bffe17 	ldw	r2,-8(fp)
  80e300:	10800217 	ldw	r2,8(r2)
  80e304:	1000061e 	bne	r2,zero,80e320 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  80e308:	080e2a00 	call	80e2a0 <alt_get_errno>
  80e30c:	1007883a 	mov	r3,r2
  80e310:	00800584 	movi	r2,22
  80e314:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  80e318:	00bffa84 	movi	r2,-22
  80e31c:	00001306 	br	80e36c <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  80e320:	e0bffe17 	ldw	r2,-8(fp)
  80e324:	e0ffff17 	ldw	r3,-4(fp)
  80e328:	e0fffc15 	stw	r3,-16(fp)
  80e32c:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80e330:	e0bffd17 	ldw	r2,-12(fp)
  80e334:	e0fffc17 	ldw	r3,-16(fp)
  80e338:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80e33c:	e0bffc17 	ldw	r2,-16(fp)
  80e340:	10c00017 	ldw	r3,0(r2)
  80e344:	e0bffd17 	ldw	r2,-12(fp)
  80e348:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80e34c:	e0bffc17 	ldw	r2,-16(fp)
  80e350:	10800017 	ldw	r2,0(r2)
  80e354:	e0fffd17 	ldw	r3,-12(fp)
  80e358:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80e35c:	e0bffc17 	ldw	r2,-16(fp)
  80e360:	e0fffd17 	ldw	r3,-12(fp)
  80e364:	10c00015 	stw	r3,0(r2)

  return 0;  
  80e368:	0005883a 	mov	r2,zero
}
  80e36c:	e037883a 	mov	sp,fp
  80e370:	dfc00117 	ldw	ra,4(sp)
  80e374:	df000017 	ldw	fp,0(sp)
  80e378:	dec00204 	addi	sp,sp,8
  80e37c:	f800283a 	ret

0080e380 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  80e380:	defffd04 	addi	sp,sp,-12
  80e384:	dfc00215 	stw	ra,8(sp)
  80e388:	df000115 	stw	fp,4(sp)
  80e38c:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80e390:	00802074 	movhi	r2,129
  80e394:	10bcb304 	addi	r2,r2,-3380
  80e398:	e0bfff15 	stw	r2,-4(fp)
  80e39c:	00000606 	br	80e3b8 <_do_ctors+0x38>
        (*ctor) (); 
  80e3a0:	e0bfff17 	ldw	r2,-4(fp)
  80e3a4:	10800017 	ldw	r2,0(r2)
  80e3a8:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80e3ac:	e0bfff17 	ldw	r2,-4(fp)
  80e3b0:	10bfff04 	addi	r2,r2,-4
  80e3b4:	e0bfff15 	stw	r2,-4(fp)
  80e3b8:	e0ffff17 	ldw	r3,-4(fp)
  80e3bc:	00802074 	movhi	r2,129
  80e3c0:	10bcb404 	addi	r2,r2,-3376
  80e3c4:	18bff62e 	bgeu	r3,r2,80e3a0 <__alt_data_end+0xff80e3a0>
        (*ctor) (); 
}
  80e3c8:	0001883a 	nop
  80e3cc:	e037883a 	mov	sp,fp
  80e3d0:	dfc00117 	ldw	ra,4(sp)
  80e3d4:	df000017 	ldw	fp,0(sp)
  80e3d8:	dec00204 	addi	sp,sp,8
  80e3dc:	f800283a 	ret

0080e3e0 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  80e3e0:	defffd04 	addi	sp,sp,-12
  80e3e4:	dfc00215 	stw	ra,8(sp)
  80e3e8:	df000115 	stw	fp,4(sp)
  80e3ec:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80e3f0:	00802074 	movhi	r2,129
  80e3f4:	10bcb304 	addi	r2,r2,-3380
  80e3f8:	e0bfff15 	stw	r2,-4(fp)
  80e3fc:	00000606 	br	80e418 <_do_dtors+0x38>
        (*dtor) (); 
  80e400:	e0bfff17 	ldw	r2,-4(fp)
  80e404:	10800017 	ldw	r2,0(r2)
  80e408:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80e40c:	e0bfff17 	ldw	r2,-4(fp)
  80e410:	10bfff04 	addi	r2,r2,-4
  80e414:	e0bfff15 	stw	r2,-4(fp)
  80e418:	e0ffff17 	ldw	r3,-4(fp)
  80e41c:	00802074 	movhi	r2,129
  80e420:	10bcb404 	addi	r2,r2,-3376
  80e424:	18bff62e 	bgeu	r3,r2,80e400 <__alt_data_end+0xff80e400>
        (*dtor) (); 
}
  80e428:	0001883a 	nop
  80e42c:	e037883a 	mov	sp,fp
  80e430:	dfc00117 	ldw	ra,4(sp)
  80e434:	df000017 	ldw	fp,0(sp)
  80e438:	dec00204 	addi	sp,sp,8
  80e43c:	f800283a 	ret

0080e440 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  80e440:	defffe04 	addi	sp,sp,-8
  80e444:	dfc00115 	stw	ra,4(sp)
  80e448:	df000015 	stw	fp,0(sp)
  80e44c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  80e450:	01420004 	movi	r5,2048
  80e454:	0009883a 	mov	r4,zero
  80e458:	080eeac0 	call	80eeac <alt_icache_flush>
#endif
}
  80e45c:	0001883a 	nop
  80e460:	e037883a 	mov	sp,fp
  80e464:	dfc00117 	ldw	ra,4(sp)
  80e468:	df000017 	ldw	fp,0(sp)
  80e46c:	dec00204 	addi	sp,sp,8
  80e470:	f800283a 	ret

0080e474 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80e474:	defff904 	addi	sp,sp,-28
  80e478:	dfc00615 	stw	ra,24(sp)
  80e47c:	df000515 	stw	fp,20(sp)
  80e480:	df000504 	addi	fp,sp,20
  80e484:	e13ffc15 	stw	r4,-16(fp)
  80e488:	e17ffd15 	stw	r5,-12(fp)
  80e48c:	e1bffe15 	stw	r6,-8(fp)
  80e490:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  80e494:	e0800217 	ldw	r2,8(fp)
  80e498:	d8800015 	stw	r2,0(sp)
  80e49c:	e1ffff17 	ldw	r7,-4(fp)
  80e4a0:	e1bffe17 	ldw	r6,-8(fp)
  80e4a4:	e17ffd17 	ldw	r5,-12(fp)
  80e4a8:	e13ffc17 	ldw	r4,-16(fp)
  80e4ac:	080e6240 	call	80e624 <alt_iic_isr_register>
}  
  80e4b0:	e037883a 	mov	sp,fp
  80e4b4:	dfc00117 	ldw	ra,4(sp)
  80e4b8:	df000017 	ldw	fp,0(sp)
  80e4bc:	dec00204 	addi	sp,sp,8
  80e4c0:	f800283a 	ret

0080e4c4 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  80e4c4:	defff904 	addi	sp,sp,-28
  80e4c8:	df000615 	stw	fp,24(sp)
  80e4cc:	df000604 	addi	fp,sp,24
  80e4d0:	e13ffe15 	stw	r4,-8(fp)
  80e4d4:	e17fff15 	stw	r5,-4(fp)
  80e4d8:	e0bfff17 	ldw	r2,-4(fp)
  80e4dc:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e4e0:	0005303a 	rdctl	r2,status
  80e4e4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e4e8:	e0fffb17 	ldw	r3,-20(fp)
  80e4ec:	00bfff84 	movi	r2,-2
  80e4f0:	1884703a 	and	r2,r3,r2
  80e4f4:	1001703a 	wrctl	status,r2
  
  return context;
  80e4f8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80e4fc:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
  80e500:	00c00044 	movi	r3,1
  80e504:	e0bffa17 	ldw	r2,-24(fp)
  80e508:	1884983a 	sll	r2,r3,r2
  80e50c:	1007883a 	mov	r3,r2
  80e510:	d0a6d517 	ldw	r2,-25772(gp)
  80e514:	1884b03a 	or	r2,r3,r2
  80e518:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80e51c:	d0a6d517 	ldw	r2,-25772(gp)
  80e520:	100170fa 	wrctl	ienable,r2
  80e524:	e0bffc17 	ldw	r2,-16(fp)
  80e528:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e52c:	e0bffd17 	ldw	r2,-12(fp)
  80e530:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80e534:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
  80e538:	0001883a 	nop
}
  80e53c:	e037883a 	mov	sp,fp
  80e540:	df000017 	ldw	fp,0(sp)
  80e544:	dec00104 	addi	sp,sp,4
  80e548:	f800283a 	ret

0080e54c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  80e54c:	defff904 	addi	sp,sp,-28
  80e550:	df000615 	stw	fp,24(sp)
  80e554:	df000604 	addi	fp,sp,24
  80e558:	e13ffe15 	stw	r4,-8(fp)
  80e55c:	e17fff15 	stw	r5,-4(fp)
  80e560:	e0bfff17 	ldw	r2,-4(fp)
  80e564:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e568:	0005303a 	rdctl	r2,status
  80e56c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e570:	e0fffb17 	ldw	r3,-20(fp)
  80e574:	00bfff84 	movi	r2,-2
  80e578:	1884703a 	and	r2,r3,r2
  80e57c:	1001703a 	wrctl	status,r2
  
  return context;
  80e580:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80e584:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
  80e588:	00c00044 	movi	r3,1
  80e58c:	e0bffa17 	ldw	r2,-24(fp)
  80e590:	1884983a 	sll	r2,r3,r2
  80e594:	0084303a 	nor	r2,zero,r2
  80e598:	1007883a 	mov	r3,r2
  80e59c:	d0a6d517 	ldw	r2,-25772(gp)
  80e5a0:	1884703a 	and	r2,r3,r2
  80e5a4:	d0a6d515 	stw	r2,-25772(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80e5a8:	d0a6d517 	ldw	r2,-25772(gp)
  80e5ac:	100170fa 	wrctl	ienable,r2
  80e5b0:	e0bffc17 	ldw	r2,-16(fp)
  80e5b4:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e5b8:	e0bffd17 	ldw	r2,-12(fp)
  80e5bc:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80e5c0:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
  80e5c4:	0001883a 	nop
}
  80e5c8:	e037883a 	mov	sp,fp
  80e5cc:	df000017 	ldw	fp,0(sp)
  80e5d0:	dec00104 	addi	sp,sp,4
  80e5d4:	f800283a 	ret

0080e5d8 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  80e5d8:	defffc04 	addi	sp,sp,-16
  80e5dc:	df000315 	stw	fp,12(sp)
  80e5e0:	df000304 	addi	fp,sp,12
  80e5e4:	e13ffe15 	stw	r4,-8(fp)
  80e5e8:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  80e5ec:	000530fa 	rdctl	r2,ienable
  80e5f0:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  80e5f4:	00c00044 	movi	r3,1
  80e5f8:	e0bfff17 	ldw	r2,-4(fp)
  80e5fc:	1884983a 	sll	r2,r3,r2
  80e600:	1007883a 	mov	r3,r2
  80e604:	e0bffd17 	ldw	r2,-12(fp)
  80e608:	1884703a 	and	r2,r3,r2
  80e60c:	1004c03a 	cmpne	r2,r2,zero
  80e610:	10803fcc 	andi	r2,r2,255
}
  80e614:	e037883a 	mov	sp,fp
  80e618:	df000017 	ldw	fp,0(sp)
  80e61c:	dec00104 	addi	sp,sp,4
  80e620:	f800283a 	ret

0080e624 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80e624:	defff504 	addi	sp,sp,-44
  80e628:	dfc00a15 	stw	ra,40(sp)
  80e62c:	df000915 	stw	fp,36(sp)
  80e630:	df000904 	addi	fp,sp,36
  80e634:	e13ffc15 	stw	r4,-16(fp)
  80e638:	e17ffd15 	stw	r5,-12(fp)
  80e63c:	e1bffe15 	stw	r6,-8(fp)
  80e640:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
  80e644:	00bffa84 	movi	r2,-22
  80e648:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  80e64c:	e0bffd17 	ldw	r2,-12(fp)
  80e650:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  80e654:	e0bff817 	ldw	r2,-32(fp)
  80e658:	10800808 	cmpgei	r2,r2,32
  80e65c:	1000271e 	bne	r2,zero,80e6fc <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e660:	0005303a 	rdctl	r2,status
  80e664:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e668:	e0fffb17 	ldw	r3,-20(fp)
  80e66c:	00bfff84 	movi	r2,-2
  80e670:	1884703a 	and	r2,r3,r2
  80e674:	1001703a 	wrctl	status,r2
  
  return context;
  80e678:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  80e67c:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
  80e680:	00802074 	movhi	r2,129
  80e684:	108b0804 	addi	r2,r2,11296
  80e688:	e0fff817 	ldw	r3,-32(fp)
  80e68c:	180690fa 	slli	r3,r3,3
  80e690:	10c5883a 	add	r2,r2,r3
  80e694:	e0fffe17 	ldw	r3,-8(fp)
  80e698:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
  80e69c:	00802074 	movhi	r2,129
  80e6a0:	108b0804 	addi	r2,r2,11296
  80e6a4:	e0fff817 	ldw	r3,-32(fp)
  80e6a8:	180690fa 	slli	r3,r3,3
  80e6ac:	10c5883a 	add	r2,r2,r3
  80e6b0:	10800104 	addi	r2,r2,4
  80e6b4:	e0ffff17 	ldw	r3,-4(fp)
  80e6b8:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  80e6bc:	e0bffe17 	ldw	r2,-8(fp)
  80e6c0:	10000526 	beq	r2,zero,80e6d8 <alt_iic_isr_register+0xb4>
  80e6c4:	e0bff817 	ldw	r2,-32(fp)
  80e6c8:	100b883a 	mov	r5,r2
  80e6cc:	e13ffc17 	ldw	r4,-16(fp)
  80e6d0:	080e4c40 	call	80e4c4 <alt_ic_irq_enable>
  80e6d4:	00000406 	br	80e6e8 <alt_iic_isr_register+0xc4>
  80e6d8:	e0bff817 	ldw	r2,-32(fp)
  80e6dc:	100b883a 	mov	r5,r2
  80e6e0:	e13ffc17 	ldw	r4,-16(fp)
  80e6e4:	080e54c0 	call	80e54c <alt_ic_irq_disable>
  80e6e8:	e0bff715 	stw	r2,-36(fp)
  80e6ec:	e0bffa17 	ldw	r2,-24(fp)
  80e6f0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e6f4:	e0bff917 	ldw	r2,-28(fp)
  80e6f8:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  80e6fc:	e0bff717 	ldw	r2,-36(fp)
}
  80e700:	e037883a 	mov	sp,fp
  80e704:	dfc00117 	ldw	ra,4(sp)
  80e708:	df000017 	ldw	fp,0(sp)
  80e70c:	dec00204 	addi	sp,sp,8
  80e710:	f800283a 	ret

0080e714 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  80e714:	defff904 	addi	sp,sp,-28
  80e718:	dfc00615 	stw	ra,24(sp)
  80e71c:	df000515 	stw	fp,20(sp)
  80e720:	df000504 	addi	fp,sp,20
  80e724:	e13ffc15 	stw	r4,-16(fp)
  80e728:	e17ffd15 	stw	r5,-12(fp)
  80e72c:	e1bffe15 	stw	r6,-8(fp)
  80e730:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  80e734:	e1bfff17 	ldw	r6,-4(fp)
  80e738:	e17ffe17 	ldw	r5,-8(fp)
  80e73c:	e13ffd17 	ldw	r4,-12(fp)
  80e740:	080e9540 	call	80e954 <open>
  80e744:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  80e748:	e0bffb17 	ldw	r2,-20(fp)
  80e74c:	10001c16 	blt	r2,zero,80e7c0 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
  80e750:	00802074 	movhi	r2,129
  80e754:	10bfae04 	addi	r2,r2,-328
  80e758:	e0fffb17 	ldw	r3,-20(fp)
  80e75c:	18c00324 	muli	r3,r3,12
  80e760:	10c5883a 	add	r2,r2,r3
  80e764:	10c00017 	ldw	r3,0(r2)
  80e768:	e0bffc17 	ldw	r2,-16(fp)
  80e76c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  80e770:	00802074 	movhi	r2,129
  80e774:	10bfae04 	addi	r2,r2,-328
  80e778:	e0fffb17 	ldw	r3,-20(fp)
  80e77c:	18c00324 	muli	r3,r3,12
  80e780:	10c5883a 	add	r2,r2,r3
  80e784:	10800104 	addi	r2,r2,4
  80e788:	10c00017 	ldw	r3,0(r2)
  80e78c:	e0bffc17 	ldw	r2,-16(fp)
  80e790:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  80e794:	00802074 	movhi	r2,129
  80e798:	10bfae04 	addi	r2,r2,-328
  80e79c:	e0fffb17 	ldw	r3,-20(fp)
  80e7a0:	18c00324 	muli	r3,r3,12
  80e7a4:	10c5883a 	add	r2,r2,r3
  80e7a8:	10800204 	addi	r2,r2,8
  80e7ac:	10c00017 	ldw	r3,0(r2)
  80e7b0:	e0bffc17 	ldw	r2,-16(fp)
  80e7b4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  80e7b8:	e13ffb17 	ldw	r4,-20(fp)
  80e7bc:	080d2b80 	call	80d2b8 <alt_release_fd>
  }
} 
  80e7c0:	0001883a 	nop
  80e7c4:	e037883a 	mov	sp,fp
  80e7c8:	dfc00117 	ldw	ra,4(sp)
  80e7cc:	df000017 	ldw	fp,0(sp)
  80e7d0:	dec00204 	addi	sp,sp,8
  80e7d4:	f800283a 	ret

0080e7d8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  80e7d8:	defffb04 	addi	sp,sp,-20
  80e7dc:	dfc00415 	stw	ra,16(sp)
  80e7e0:	df000315 	stw	fp,12(sp)
  80e7e4:	df000304 	addi	fp,sp,12
  80e7e8:	e13ffd15 	stw	r4,-12(fp)
  80e7ec:	e17ffe15 	stw	r5,-8(fp)
  80e7f0:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  80e7f4:	01c07fc4 	movi	r7,511
  80e7f8:	01800044 	movi	r6,1
  80e7fc:	e17ffd17 	ldw	r5,-12(fp)
  80e800:	01002074 	movhi	r4,129
  80e804:	213fb104 	addi	r4,r4,-316
  80e808:	080e7140 	call	80e714 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  80e80c:	01c07fc4 	movi	r7,511
  80e810:	000d883a 	mov	r6,zero
  80e814:	e17ffe17 	ldw	r5,-8(fp)
  80e818:	01002074 	movhi	r4,129
  80e81c:	213fae04 	addi	r4,r4,-328
  80e820:	080e7140 	call	80e714 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  80e824:	01c07fc4 	movi	r7,511
  80e828:	01800044 	movi	r6,1
  80e82c:	e17fff17 	ldw	r5,-4(fp)
  80e830:	01002074 	movhi	r4,129
  80e834:	213fb404 	addi	r4,r4,-304
  80e838:	080e7140 	call	80e714 <alt_open_fd>
}  
  80e83c:	0001883a 	nop
  80e840:	e037883a 	mov	sp,fp
  80e844:	dfc00117 	ldw	ra,4(sp)
  80e848:	df000017 	ldw	fp,0(sp)
  80e84c:	dec00204 	addi	sp,sp,8
  80e850:	f800283a 	ret

0080e854 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e854:	defffe04 	addi	sp,sp,-8
  80e858:	dfc00115 	stw	ra,4(sp)
  80e85c:	df000015 	stw	fp,0(sp)
  80e860:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e864:	d0a00b17 	ldw	r2,-32724(gp)
  80e868:	10000326 	beq	r2,zero,80e878 <alt_get_errno+0x24>
  80e86c:	d0a00b17 	ldw	r2,-32724(gp)
  80e870:	103ee83a 	callr	r2
  80e874:	00000106 	br	80e87c <alt_get_errno+0x28>
  80e878:	d0a6d104 	addi	r2,gp,-25788
}
  80e87c:	e037883a 	mov	sp,fp
  80e880:	dfc00117 	ldw	ra,4(sp)
  80e884:	df000017 	ldw	fp,0(sp)
  80e888:	dec00204 	addi	sp,sp,8
  80e88c:	f800283a 	ret

0080e890 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  80e890:	defffd04 	addi	sp,sp,-12
  80e894:	df000215 	stw	fp,8(sp)
  80e898:	df000204 	addi	fp,sp,8
  80e89c:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  80e8a0:	e0bfff17 	ldw	r2,-4(fp)
  80e8a4:	10800217 	ldw	r2,8(r2)
  80e8a8:	10d00034 	orhi	r3,r2,16384
  80e8ac:	e0bfff17 	ldw	r2,-4(fp)
  80e8b0:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80e8b4:	e03ffe15 	stw	zero,-8(fp)
  80e8b8:	00001d06 	br	80e930 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80e8bc:	00802074 	movhi	r2,129
  80e8c0:	10bfae04 	addi	r2,r2,-328
  80e8c4:	e0fffe17 	ldw	r3,-8(fp)
  80e8c8:	18c00324 	muli	r3,r3,12
  80e8cc:	10c5883a 	add	r2,r2,r3
  80e8d0:	10c00017 	ldw	r3,0(r2)
  80e8d4:	e0bfff17 	ldw	r2,-4(fp)
  80e8d8:	10800017 	ldw	r2,0(r2)
  80e8dc:	1880111e 	bne	r3,r2,80e924 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80e8e0:	00802074 	movhi	r2,129
  80e8e4:	10bfae04 	addi	r2,r2,-328
  80e8e8:	e0fffe17 	ldw	r3,-8(fp)
  80e8ec:	18c00324 	muli	r3,r3,12
  80e8f0:	10c5883a 	add	r2,r2,r3
  80e8f4:	10800204 	addi	r2,r2,8
  80e8f8:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80e8fc:	1000090e 	bge	r2,zero,80e924 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  80e900:	e0bffe17 	ldw	r2,-8(fp)
  80e904:	10c00324 	muli	r3,r2,12
  80e908:	00802074 	movhi	r2,129
  80e90c:	10bfae04 	addi	r2,r2,-328
  80e910:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80e914:	e0bfff17 	ldw	r2,-4(fp)
  80e918:	18800226 	beq	r3,r2,80e924 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  80e91c:	00bffcc4 	movi	r2,-13
  80e920:	00000806 	br	80e944 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80e924:	e0bffe17 	ldw	r2,-8(fp)
  80e928:	10800044 	addi	r2,r2,1
  80e92c:	e0bffe15 	stw	r2,-8(fp)
  80e930:	d0a00a17 	ldw	r2,-32728(gp)
  80e934:	1007883a 	mov	r3,r2
  80e938:	e0bffe17 	ldw	r2,-8(fp)
  80e93c:	18bfdf2e 	bgeu	r3,r2,80e8bc <__alt_data_end+0xff80e8bc>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  80e940:	0005883a 	mov	r2,zero
}
  80e944:	e037883a 	mov	sp,fp
  80e948:	df000017 	ldw	fp,0(sp)
  80e94c:	dec00104 	addi	sp,sp,4
  80e950:	f800283a 	ret

0080e954 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  80e954:	defff604 	addi	sp,sp,-40
  80e958:	dfc00915 	stw	ra,36(sp)
  80e95c:	df000815 	stw	fp,32(sp)
  80e960:	df000804 	addi	fp,sp,32
  80e964:	e13ffd15 	stw	r4,-12(fp)
  80e968:	e17ffe15 	stw	r5,-8(fp)
  80e96c:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  80e970:	00bfffc4 	movi	r2,-1
  80e974:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  80e978:	00bffb44 	movi	r2,-19
  80e97c:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  80e980:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  80e984:	d1600804 	addi	r5,gp,-32736
  80e988:	e13ffd17 	ldw	r4,-12(fp)
  80e98c:	080ec700 	call	80ec70 <alt_find_dev>
  80e990:	e0bff815 	stw	r2,-32(fp)
  80e994:	e0bff817 	ldw	r2,-32(fp)
  80e998:	1000051e 	bne	r2,zero,80e9b0 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  80e99c:	e13ffd17 	ldw	r4,-12(fp)
  80e9a0:	080ed000 	call	80ed00 <alt_find_file>
  80e9a4:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  80e9a8:	00800044 	movi	r2,1
  80e9ac:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  80e9b0:	e0bff817 	ldw	r2,-32(fp)
  80e9b4:	10002926 	beq	r2,zero,80ea5c <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
  80e9b8:	e13ff817 	ldw	r4,-32(fp)
  80e9bc:	080ee080 	call	80ee08 <alt_get_fd>
  80e9c0:	e0bff915 	stw	r2,-28(fp)
  80e9c4:	e0bff917 	ldw	r2,-28(fp)
  80e9c8:	1000030e 	bge	r2,zero,80e9d8 <open+0x84>
    {
      status = index;
  80e9cc:	e0bff917 	ldw	r2,-28(fp)
  80e9d0:	e0bffa15 	stw	r2,-24(fp)
  80e9d4:	00002306 	br	80ea64 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
  80e9d8:	e0bff917 	ldw	r2,-28(fp)
  80e9dc:	10c00324 	muli	r3,r2,12
  80e9e0:	00802074 	movhi	r2,129
  80e9e4:	10bfae04 	addi	r2,r2,-328
  80e9e8:	1885883a 	add	r2,r3,r2
  80e9ec:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  80e9f0:	e0fffe17 	ldw	r3,-8(fp)
  80e9f4:	00900034 	movhi	r2,16384
  80e9f8:	10bfffc4 	addi	r2,r2,-1
  80e9fc:	1886703a 	and	r3,r3,r2
  80ea00:	e0bffc17 	ldw	r2,-16(fp)
  80ea04:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  80ea08:	e0bffb17 	ldw	r2,-20(fp)
  80ea0c:	1000051e 	bne	r2,zero,80ea24 <open+0xd0>
  80ea10:	e13ffc17 	ldw	r4,-16(fp)
  80ea14:	080e8900 	call	80e890 <alt_file_locked>
  80ea18:	e0bffa15 	stw	r2,-24(fp)
  80ea1c:	e0bffa17 	ldw	r2,-24(fp)
  80ea20:	10001016 	blt	r2,zero,80ea64 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  80ea24:	e0bff817 	ldw	r2,-32(fp)
  80ea28:	10800317 	ldw	r2,12(r2)
  80ea2c:	10000826 	beq	r2,zero,80ea50 <open+0xfc>
  80ea30:	e0bff817 	ldw	r2,-32(fp)
  80ea34:	10800317 	ldw	r2,12(r2)
  80ea38:	e1ffff17 	ldw	r7,-4(fp)
  80ea3c:	e1bffe17 	ldw	r6,-8(fp)
  80ea40:	e17ffd17 	ldw	r5,-12(fp)
  80ea44:	e13ffc17 	ldw	r4,-16(fp)
  80ea48:	103ee83a 	callr	r2
  80ea4c:	00000106 	br	80ea54 <open+0x100>
  80ea50:	0005883a 	mov	r2,zero
  80ea54:	e0bffa15 	stw	r2,-24(fp)
  80ea58:	00000206 	br	80ea64 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
  80ea5c:	00bffb44 	movi	r2,-19
  80ea60:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  80ea64:	e0bffa17 	ldw	r2,-24(fp)
  80ea68:	1000090e 	bge	r2,zero,80ea90 <open+0x13c>
  {
    alt_release_fd (index);  
  80ea6c:	e13ff917 	ldw	r4,-28(fp)
  80ea70:	080d2b80 	call	80d2b8 <alt_release_fd>
    ALT_ERRNO = -status;
  80ea74:	080e8540 	call	80e854 <alt_get_errno>
  80ea78:	1007883a 	mov	r3,r2
  80ea7c:	e0bffa17 	ldw	r2,-24(fp)
  80ea80:	0085c83a 	sub	r2,zero,r2
  80ea84:	18800015 	stw	r2,0(r3)
    return -1;
  80ea88:	00bfffc4 	movi	r2,-1
  80ea8c:	00000106 	br	80ea94 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
  80ea90:	e0bff917 	ldw	r2,-28(fp)
}
  80ea94:	e037883a 	mov	sp,fp
  80ea98:	dfc00117 	ldw	ra,4(sp)
  80ea9c:	df000017 	ldw	fp,0(sp)
  80eaa0:	dec00204 	addi	sp,sp,8
  80eaa4:	f800283a 	ret

0080eaa8 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  80eaa8:	defffa04 	addi	sp,sp,-24
  80eaac:	df000515 	stw	fp,20(sp)
  80eab0:	df000504 	addi	fp,sp,20
  80eab4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80eab8:	0005303a 	rdctl	r2,status
  80eabc:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80eac0:	e0fffc17 	ldw	r3,-16(fp)
  80eac4:	00bfff84 	movi	r2,-2
  80eac8:	1884703a 	and	r2,r3,r2
  80eacc:	1001703a 	wrctl	status,r2
  
  return context;
  80ead0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  80ead4:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  80ead8:	e0bfff17 	ldw	r2,-4(fp)
  80eadc:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  80eae0:	e0bffd17 	ldw	r2,-12(fp)
  80eae4:	10800017 	ldw	r2,0(r2)
  80eae8:	e0fffd17 	ldw	r3,-12(fp)
  80eaec:	18c00117 	ldw	r3,4(r3)
  80eaf0:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  80eaf4:	e0bffd17 	ldw	r2,-12(fp)
  80eaf8:	10800117 	ldw	r2,4(r2)
  80eafc:	e0fffd17 	ldw	r3,-12(fp)
  80eb00:	18c00017 	ldw	r3,0(r3)
  80eb04:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  80eb08:	e0bffd17 	ldw	r2,-12(fp)
  80eb0c:	e0fffd17 	ldw	r3,-12(fp)
  80eb10:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  80eb14:	e0bffd17 	ldw	r2,-12(fp)
  80eb18:	e0fffd17 	ldw	r3,-12(fp)
  80eb1c:	10c00015 	stw	r3,0(r2)
  80eb20:	e0bffb17 	ldw	r2,-20(fp)
  80eb24:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80eb28:	e0bffe17 	ldw	r2,-8(fp)
  80eb2c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  80eb30:	0001883a 	nop
  80eb34:	e037883a 	mov	sp,fp
  80eb38:	df000017 	ldw	fp,0(sp)
  80eb3c:	dec00104 	addi	sp,sp,4
  80eb40:	f800283a 	ret

0080eb44 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  80eb44:	defffb04 	addi	sp,sp,-20
  80eb48:	dfc00415 	stw	ra,16(sp)
  80eb4c:	df000315 	stw	fp,12(sp)
  80eb50:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  80eb54:	d0a00e17 	ldw	r2,-32712(gp)
  80eb58:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  80eb5c:	d0a6d717 	ldw	r2,-25764(gp)
  80eb60:	10800044 	addi	r2,r2,1
  80eb64:	d0a6d715 	stw	r2,-25764(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80eb68:	00002e06 	br	80ec24 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  80eb6c:	e0bffd17 	ldw	r2,-12(fp)
  80eb70:	10800017 	ldw	r2,0(r2)
  80eb74:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  80eb78:	e0bffd17 	ldw	r2,-12(fp)
  80eb7c:	10800403 	ldbu	r2,16(r2)
  80eb80:	10803fcc 	andi	r2,r2,255
  80eb84:	10000426 	beq	r2,zero,80eb98 <alt_tick+0x54>
  80eb88:	d0a6d717 	ldw	r2,-25764(gp)
  80eb8c:	1000021e 	bne	r2,zero,80eb98 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  80eb90:	e0bffd17 	ldw	r2,-12(fp)
  80eb94:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  80eb98:	e0bffd17 	ldw	r2,-12(fp)
  80eb9c:	10800217 	ldw	r2,8(r2)
  80eba0:	d0e6d717 	ldw	r3,-25764(gp)
  80eba4:	18801d36 	bltu	r3,r2,80ec1c <alt_tick+0xd8>
  80eba8:	e0bffd17 	ldw	r2,-12(fp)
  80ebac:	10800403 	ldbu	r2,16(r2)
  80ebb0:	10803fcc 	andi	r2,r2,255
  80ebb4:	1000191e 	bne	r2,zero,80ec1c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  80ebb8:	e0bffd17 	ldw	r2,-12(fp)
  80ebbc:	10800317 	ldw	r2,12(r2)
  80ebc0:	e0fffd17 	ldw	r3,-12(fp)
  80ebc4:	18c00517 	ldw	r3,20(r3)
  80ebc8:	1809883a 	mov	r4,r3
  80ebcc:	103ee83a 	callr	r2
  80ebd0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  80ebd4:	e0bfff17 	ldw	r2,-4(fp)
  80ebd8:	1000031e 	bne	r2,zero,80ebe8 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  80ebdc:	e13ffd17 	ldw	r4,-12(fp)
  80ebe0:	080eaa80 	call	80eaa8 <alt_alarm_stop>
  80ebe4:	00000d06 	br	80ec1c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  80ebe8:	e0bffd17 	ldw	r2,-12(fp)
  80ebec:	10c00217 	ldw	r3,8(r2)
  80ebf0:	e0bfff17 	ldw	r2,-4(fp)
  80ebf4:	1887883a 	add	r3,r3,r2
  80ebf8:	e0bffd17 	ldw	r2,-12(fp)
  80ebfc:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  80ec00:	e0bffd17 	ldw	r2,-12(fp)
  80ec04:	10c00217 	ldw	r3,8(r2)
  80ec08:	d0a6d717 	ldw	r2,-25764(gp)
  80ec0c:	1880032e 	bgeu	r3,r2,80ec1c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  80ec10:	e0bffd17 	ldw	r2,-12(fp)
  80ec14:	00c00044 	movi	r3,1
  80ec18:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  80ec1c:	e0bffe17 	ldw	r2,-8(fp)
  80ec20:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80ec24:	e0fffd17 	ldw	r3,-12(fp)
  80ec28:	d0a00e04 	addi	r2,gp,-32712
  80ec2c:	18bfcf1e 	bne	r3,r2,80eb6c <__alt_data_end+0xff80eb6c>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  80ec30:	0001883a 	nop
}
  80ec34:	0001883a 	nop
  80ec38:	e037883a 	mov	sp,fp
  80ec3c:	dfc00117 	ldw	ra,4(sp)
  80ec40:	df000017 	ldw	fp,0(sp)
  80ec44:	dec00204 	addi	sp,sp,8
  80ec48:	f800283a 	ret

0080ec4c <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
  80ec4c:	deffff04 	addi	sp,sp,-4
  80ec50:	df000015 	stw	fp,0(sp)
  80ec54:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  80ec58:	000170fa 	wrctl	ienable,zero
}
  80ec5c:	0001883a 	nop
  80ec60:	e037883a 	mov	sp,fp
  80ec64:	df000017 	ldw	fp,0(sp)
  80ec68:	dec00104 	addi	sp,sp,4
  80ec6c:	f800283a 	ret

0080ec70 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  80ec70:	defffa04 	addi	sp,sp,-24
  80ec74:	dfc00515 	stw	ra,20(sp)
  80ec78:	df000415 	stw	fp,16(sp)
  80ec7c:	df000404 	addi	fp,sp,16
  80ec80:	e13ffe15 	stw	r4,-8(fp)
  80ec84:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  80ec88:	e0bfff17 	ldw	r2,-4(fp)
  80ec8c:	10800017 	ldw	r2,0(r2)
  80ec90:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  80ec94:	e13ffe17 	ldw	r4,-8(fp)
  80ec98:	08003dc0 	call	8003dc <strlen>
  80ec9c:	10800044 	addi	r2,r2,1
  80eca0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80eca4:	00000d06 	br	80ecdc <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  80eca8:	e0bffc17 	ldw	r2,-16(fp)
  80ecac:	10800217 	ldw	r2,8(r2)
  80ecb0:	e0fffd17 	ldw	r3,-12(fp)
  80ecb4:	180d883a 	mov	r6,r3
  80ecb8:	e17ffe17 	ldw	r5,-8(fp)
  80ecbc:	1009883a 	mov	r4,r2
  80ecc0:	080ef880 	call	80ef88 <memcmp>
  80ecc4:	1000021e 	bne	r2,zero,80ecd0 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  80ecc8:	e0bffc17 	ldw	r2,-16(fp)
  80eccc:	00000706 	br	80ecec <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  80ecd0:	e0bffc17 	ldw	r2,-16(fp)
  80ecd4:	10800017 	ldw	r2,0(r2)
  80ecd8:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80ecdc:	e0fffc17 	ldw	r3,-16(fp)
  80ece0:	e0bfff17 	ldw	r2,-4(fp)
  80ece4:	18bff01e 	bne	r3,r2,80eca8 <__alt_data_end+0xff80eca8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  80ece8:	0005883a 	mov	r2,zero
}
  80ecec:	e037883a 	mov	sp,fp
  80ecf0:	dfc00117 	ldw	ra,4(sp)
  80ecf4:	df000017 	ldw	fp,0(sp)
  80ecf8:	dec00204 	addi	sp,sp,8
  80ecfc:	f800283a 	ret

0080ed00 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  80ed00:	defffb04 	addi	sp,sp,-20
  80ed04:	dfc00415 	stw	ra,16(sp)
  80ed08:	df000315 	stw	fp,12(sp)
  80ed0c:	df000304 	addi	fp,sp,12
  80ed10:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  80ed14:	d0a00617 	ldw	r2,-32744(gp)
  80ed18:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  80ed1c:	00003106 	br	80ede4 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  80ed20:	e0bffd17 	ldw	r2,-12(fp)
  80ed24:	10800217 	ldw	r2,8(r2)
  80ed28:	1009883a 	mov	r4,r2
  80ed2c:	08003dc0 	call	8003dc <strlen>
  80ed30:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  80ed34:	e0bffd17 	ldw	r2,-12(fp)
  80ed38:	10c00217 	ldw	r3,8(r2)
  80ed3c:	e0bffe17 	ldw	r2,-8(fp)
  80ed40:	10bfffc4 	addi	r2,r2,-1
  80ed44:	1885883a 	add	r2,r3,r2
  80ed48:	10800003 	ldbu	r2,0(r2)
  80ed4c:	10803fcc 	andi	r2,r2,255
  80ed50:	1080201c 	xori	r2,r2,128
  80ed54:	10bfe004 	addi	r2,r2,-128
  80ed58:	10800bd8 	cmpnei	r2,r2,47
  80ed5c:	1000031e 	bne	r2,zero,80ed6c <alt_find_file+0x6c>
    {
      len -= 1;
  80ed60:	e0bffe17 	ldw	r2,-8(fp)
  80ed64:	10bfffc4 	addi	r2,r2,-1
  80ed68:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  80ed6c:	e0bffe17 	ldw	r2,-8(fp)
  80ed70:	e0ffff17 	ldw	r3,-4(fp)
  80ed74:	1885883a 	add	r2,r3,r2
  80ed78:	10800003 	ldbu	r2,0(r2)
  80ed7c:	10803fcc 	andi	r2,r2,255
  80ed80:	1080201c 	xori	r2,r2,128
  80ed84:	10bfe004 	addi	r2,r2,-128
  80ed88:	10800be0 	cmpeqi	r2,r2,47
  80ed8c:	1000081e 	bne	r2,zero,80edb0 <alt_find_file+0xb0>
  80ed90:	e0bffe17 	ldw	r2,-8(fp)
  80ed94:	e0ffff17 	ldw	r3,-4(fp)
  80ed98:	1885883a 	add	r2,r3,r2
  80ed9c:	10800003 	ldbu	r2,0(r2)
  80eda0:	10803fcc 	andi	r2,r2,255
  80eda4:	1080201c 	xori	r2,r2,128
  80eda8:	10bfe004 	addi	r2,r2,-128
  80edac:	10000a1e 	bne	r2,zero,80edd8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  80edb0:	e0bffd17 	ldw	r2,-12(fp)
  80edb4:	10800217 	ldw	r2,8(r2)
  80edb8:	e0fffe17 	ldw	r3,-8(fp)
  80edbc:	180d883a 	mov	r6,r3
  80edc0:	e17fff17 	ldw	r5,-4(fp)
  80edc4:	1009883a 	mov	r4,r2
  80edc8:	080ef880 	call	80ef88 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  80edcc:	1000021e 	bne	r2,zero,80edd8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  80edd0:	e0bffd17 	ldw	r2,-12(fp)
  80edd4:	00000706 	br	80edf4 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  80edd8:	e0bffd17 	ldw	r2,-12(fp)
  80eddc:	10800017 	ldw	r2,0(r2)
  80ede0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  80ede4:	e0fffd17 	ldw	r3,-12(fp)
  80ede8:	d0a00604 	addi	r2,gp,-32744
  80edec:	18bfcc1e 	bne	r3,r2,80ed20 <__alt_data_end+0xff80ed20>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  80edf0:	0005883a 	mov	r2,zero
}
  80edf4:	e037883a 	mov	sp,fp
  80edf8:	dfc00117 	ldw	ra,4(sp)
  80edfc:	df000017 	ldw	fp,0(sp)
  80ee00:	dec00204 	addi	sp,sp,8
  80ee04:	f800283a 	ret

0080ee08 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  80ee08:	defffc04 	addi	sp,sp,-16
  80ee0c:	df000315 	stw	fp,12(sp)
  80ee10:	df000304 	addi	fp,sp,12
  80ee14:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  80ee18:	00bffa04 	movi	r2,-24
  80ee1c:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  80ee20:	e03ffd15 	stw	zero,-12(fp)
  80ee24:	00001906 	br	80ee8c <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
  80ee28:	00802074 	movhi	r2,129
  80ee2c:	10bfae04 	addi	r2,r2,-328
  80ee30:	e0fffd17 	ldw	r3,-12(fp)
  80ee34:	18c00324 	muli	r3,r3,12
  80ee38:	10c5883a 	add	r2,r2,r3
  80ee3c:	10800017 	ldw	r2,0(r2)
  80ee40:	10000f1e 	bne	r2,zero,80ee80 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
  80ee44:	00802074 	movhi	r2,129
  80ee48:	10bfae04 	addi	r2,r2,-328
  80ee4c:	e0fffd17 	ldw	r3,-12(fp)
  80ee50:	18c00324 	muli	r3,r3,12
  80ee54:	10c5883a 	add	r2,r2,r3
  80ee58:	e0ffff17 	ldw	r3,-4(fp)
  80ee5c:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  80ee60:	d0e00a17 	ldw	r3,-32728(gp)
  80ee64:	e0bffd17 	ldw	r2,-12(fp)
  80ee68:	1880020e 	bge	r3,r2,80ee74 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
  80ee6c:	e0bffd17 	ldw	r2,-12(fp)
  80ee70:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
  80ee74:	e0bffd17 	ldw	r2,-12(fp)
  80ee78:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  80ee7c:	00000606 	br	80ee98 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  80ee80:	e0bffd17 	ldw	r2,-12(fp)
  80ee84:	10800044 	addi	r2,r2,1
  80ee88:	e0bffd15 	stw	r2,-12(fp)
  80ee8c:	e0bffd17 	ldw	r2,-12(fp)
  80ee90:	10800810 	cmplti	r2,r2,32
  80ee94:	103fe41e 	bne	r2,zero,80ee28 <__alt_data_end+0xff80ee28>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  80ee98:	e0bffe17 	ldw	r2,-8(fp)
}
  80ee9c:	e037883a 	mov	sp,fp
  80eea0:	df000017 	ldw	fp,0(sp)
  80eea4:	dec00104 	addi	sp,sp,4
  80eea8:	f800283a 	ret

0080eeac <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  80eeac:	defffb04 	addi	sp,sp,-20
  80eeb0:	df000415 	stw	fp,16(sp)
  80eeb4:	df000404 	addi	fp,sp,16
  80eeb8:	e13ffe15 	stw	r4,-8(fp)
  80eebc:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  80eec0:	e0bfff17 	ldw	r2,-4(fp)
  80eec4:	10820070 	cmpltui	r2,r2,2049
  80eec8:	1000021e 	bne	r2,zero,80eed4 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  80eecc:	00820004 	movi	r2,2048
  80eed0:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  80eed4:	e0fffe17 	ldw	r3,-8(fp)
  80eed8:	e0bfff17 	ldw	r2,-4(fp)
  80eedc:	1885883a 	add	r2,r3,r2
  80eee0:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80eee4:	e0bffe17 	ldw	r2,-8(fp)
  80eee8:	e0bffc15 	stw	r2,-16(fp)
  80eeec:	00000506 	br	80ef04 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  80eef0:	e0bffc17 	ldw	r2,-16(fp)
  80eef4:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80eef8:	e0bffc17 	ldw	r2,-16(fp)
  80eefc:	10800804 	addi	r2,r2,32
  80ef00:	e0bffc15 	stw	r2,-16(fp)
  80ef04:	e0fffc17 	ldw	r3,-16(fp)
  80ef08:	e0bffd17 	ldw	r2,-12(fp)
  80ef0c:	18bff836 	bltu	r3,r2,80eef0 <__alt_data_end+0xff80eef0>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  80ef10:	e0bffe17 	ldw	r2,-8(fp)
  80ef14:	108007cc 	andi	r2,r2,31
  80ef18:	10000226 	beq	r2,zero,80ef24 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  80ef1c:	e0bffc17 	ldw	r2,-16(fp)
  80ef20:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  80ef24:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  80ef28:	0001883a 	nop
  80ef2c:	e037883a 	mov	sp,fp
  80ef30:	df000017 	ldw	fp,0(sp)
  80ef34:	dec00104 	addi	sp,sp,4
  80ef38:	f800283a 	ret

0080ef3c <atexit>:
  80ef3c:	200b883a 	mov	r5,r4
  80ef40:	000f883a 	mov	r7,zero
  80ef44:	000d883a 	mov	r6,zero
  80ef48:	0009883a 	mov	r4,zero
  80ef4c:	080f0041 	jmpi	80f004 <__register_exitproc>

0080ef50 <exit>:
  80ef50:	defffe04 	addi	sp,sp,-8
  80ef54:	000b883a 	mov	r5,zero
  80ef58:	dc000015 	stw	r16,0(sp)
  80ef5c:	dfc00115 	stw	ra,4(sp)
  80ef60:	2021883a 	mov	r16,r4
  80ef64:	080f11c0 	call	80f11c <__call_exitprocs>
  80ef68:	00802074 	movhi	r2,129
  80ef6c:	10842604 	addi	r2,r2,4248
  80ef70:	11000017 	ldw	r4,0(r2)
  80ef74:	20800f17 	ldw	r2,60(r4)
  80ef78:	10000126 	beq	r2,zero,80ef80 <exit+0x30>
  80ef7c:	103ee83a 	callr	r2
  80ef80:	8009883a 	mov	r4,r16
  80ef84:	080f29c0 	call	80f29c <_exit>

0080ef88 <memcmp>:
  80ef88:	01c000c4 	movi	r7,3
  80ef8c:	3980192e 	bgeu	r7,r6,80eff4 <memcmp+0x6c>
  80ef90:	2144b03a 	or	r2,r4,r5
  80ef94:	11c4703a 	and	r2,r2,r7
  80ef98:	10000f26 	beq	r2,zero,80efd8 <memcmp+0x50>
  80ef9c:	20800003 	ldbu	r2,0(r4)
  80efa0:	28c00003 	ldbu	r3,0(r5)
  80efa4:	10c0151e 	bne	r2,r3,80effc <memcmp+0x74>
  80efa8:	31bfff84 	addi	r6,r6,-2
  80efac:	01ffffc4 	movi	r7,-1
  80efb0:	00000406 	br	80efc4 <memcmp+0x3c>
  80efb4:	20800003 	ldbu	r2,0(r4)
  80efb8:	28c00003 	ldbu	r3,0(r5)
  80efbc:	31bfffc4 	addi	r6,r6,-1
  80efc0:	10c00e1e 	bne	r2,r3,80effc <memcmp+0x74>
  80efc4:	21000044 	addi	r4,r4,1
  80efc8:	29400044 	addi	r5,r5,1
  80efcc:	31fff91e 	bne	r6,r7,80efb4 <__alt_data_end+0xff80efb4>
  80efd0:	0005883a 	mov	r2,zero
  80efd4:	f800283a 	ret
  80efd8:	20c00017 	ldw	r3,0(r4)
  80efdc:	28800017 	ldw	r2,0(r5)
  80efe0:	18bfee1e 	bne	r3,r2,80ef9c <__alt_data_end+0xff80ef9c>
  80efe4:	31bfff04 	addi	r6,r6,-4
  80efe8:	21000104 	addi	r4,r4,4
  80efec:	29400104 	addi	r5,r5,4
  80eff0:	39bff936 	bltu	r7,r6,80efd8 <__alt_data_end+0xff80efd8>
  80eff4:	303fe91e 	bne	r6,zero,80ef9c <__alt_data_end+0xff80ef9c>
  80eff8:	003ff506 	br	80efd0 <__alt_data_end+0xff80efd0>
  80effc:	10c5c83a 	sub	r2,r2,r3
  80f000:	f800283a 	ret

0080f004 <__register_exitproc>:
  80f004:	defffa04 	addi	sp,sp,-24
  80f008:	dc000315 	stw	r16,12(sp)
  80f00c:	04002074 	movhi	r16,129
  80f010:	84042604 	addi	r16,r16,4248
  80f014:	80c00017 	ldw	r3,0(r16)
  80f018:	dc400415 	stw	r17,16(sp)
  80f01c:	dfc00515 	stw	ra,20(sp)
  80f020:	18805217 	ldw	r2,328(r3)
  80f024:	2023883a 	mov	r17,r4
  80f028:	10003726 	beq	r2,zero,80f108 <__register_exitproc+0x104>
  80f02c:	10c00117 	ldw	r3,4(r2)
  80f030:	010007c4 	movi	r4,31
  80f034:	20c00e16 	blt	r4,r3,80f070 <__register_exitproc+0x6c>
  80f038:	1a000044 	addi	r8,r3,1
  80f03c:	8800221e 	bne	r17,zero,80f0c8 <__register_exitproc+0xc4>
  80f040:	18c00084 	addi	r3,r3,2
  80f044:	18c7883a 	add	r3,r3,r3
  80f048:	18c7883a 	add	r3,r3,r3
  80f04c:	12000115 	stw	r8,4(r2)
  80f050:	10c7883a 	add	r3,r2,r3
  80f054:	19400015 	stw	r5,0(r3)
  80f058:	0005883a 	mov	r2,zero
  80f05c:	dfc00517 	ldw	ra,20(sp)
  80f060:	dc400417 	ldw	r17,16(sp)
  80f064:	dc000317 	ldw	r16,12(sp)
  80f068:	dec00604 	addi	sp,sp,24
  80f06c:	f800283a 	ret
  80f070:	00800034 	movhi	r2,0
  80f074:	10800004 	addi	r2,r2,0
  80f078:	10002626 	beq	r2,zero,80f114 <__register_exitproc+0x110>
  80f07c:	01006404 	movi	r4,400
  80f080:	d9400015 	stw	r5,0(sp)
  80f084:	d9800115 	stw	r6,4(sp)
  80f088:	d9c00215 	stw	r7,8(sp)
  80f08c:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  80f090:	d9400017 	ldw	r5,0(sp)
  80f094:	d9800117 	ldw	r6,4(sp)
  80f098:	d9c00217 	ldw	r7,8(sp)
  80f09c:	10001d26 	beq	r2,zero,80f114 <__register_exitproc+0x110>
  80f0a0:	81000017 	ldw	r4,0(r16)
  80f0a4:	10000115 	stw	zero,4(r2)
  80f0a8:	02000044 	movi	r8,1
  80f0ac:	22405217 	ldw	r9,328(r4)
  80f0b0:	0007883a 	mov	r3,zero
  80f0b4:	12400015 	stw	r9,0(r2)
  80f0b8:	20805215 	stw	r2,328(r4)
  80f0bc:	10006215 	stw	zero,392(r2)
  80f0c0:	10006315 	stw	zero,396(r2)
  80f0c4:	883fde26 	beq	r17,zero,80f040 <__alt_data_end+0xff80f040>
  80f0c8:	18c9883a 	add	r4,r3,r3
  80f0cc:	2109883a 	add	r4,r4,r4
  80f0d0:	1109883a 	add	r4,r2,r4
  80f0d4:	21802215 	stw	r6,136(r4)
  80f0d8:	01800044 	movi	r6,1
  80f0dc:	12406217 	ldw	r9,392(r2)
  80f0e0:	30cc983a 	sll	r6,r6,r3
  80f0e4:	4992b03a 	or	r9,r9,r6
  80f0e8:	12406215 	stw	r9,392(r2)
  80f0ec:	21c04215 	stw	r7,264(r4)
  80f0f0:	01000084 	movi	r4,2
  80f0f4:	893fd21e 	bne	r17,r4,80f040 <__alt_data_end+0xff80f040>
  80f0f8:	11006317 	ldw	r4,396(r2)
  80f0fc:	218cb03a 	or	r6,r4,r6
  80f100:	11806315 	stw	r6,396(r2)
  80f104:	003fce06 	br	80f040 <__alt_data_end+0xff80f040>
  80f108:	18805304 	addi	r2,r3,332
  80f10c:	18805215 	stw	r2,328(r3)
  80f110:	003fc606 	br	80f02c <__alt_data_end+0xff80f02c>
  80f114:	00bfffc4 	movi	r2,-1
  80f118:	003fd006 	br	80f05c <__alt_data_end+0xff80f05c>

0080f11c <__call_exitprocs>:
  80f11c:	defff504 	addi	sp,sp,-44
  80f120:	df000915 	stw	fp,36(sp)
  80f124:	dd400615 	stw	r21,24(sp)
  80f128:	dc800315 	stw	r18,12(sp)
  80f12c:	dfc00a15 	stw	ra,40(sp)
  80f130:	ddc00815 	stw	r23,32(sp)
  80f134:	dd800715 	stw	r22,28(sp)
  80f138:	dd000515 	stw	r20,20(sp)
  80f13c:	dcc00415 	stw	r19,16(sp)
  80f140:	dc400215 	stw	r17,8(sp)
  80f144:	dc000115 	stw	r16,4(sp)
  80f148:	d9000015 	stw	r4,0(sp)
  80f14c:	2839883a 	mov	fp,r5
  80f150:	04800044 	movi	r18,1
  80f154:	057fffc4 	movi	r21,-1
  80f158:	00802074 	movhi	r2,129
  80f15c:	10842604 	addi	r2,r2,4248
  80f160:	12000017 	ldw	r8,0(r2)
  80f164:	45005217 	ldw	r20,328(r8)
  80f168:	44c05204 	addi	r19,r8,328
  80f16c:	a0001c26 	beq	r20,zero,80f1e0 <__call_exitprocs+0xc4>
  80f170:	a0800117 	ldw	r2,4(r20)
  80f174:	15ffffc4 	addi	r23,r2,-1
  80f178:	b8000d16 	blt	r23,zero,80f1b0 <__call_exitprocs+0x94>
  80f17c:	14000044 	addi	r16,r2,1
  80f180:	8421883a 	add	r16,r16,r16
  80f184:	8421883a 	add	r16,r16,r16
  80f188:	84402004 	addi	r17,r16,128
  80f18c:	a463883a 	add	r17,r20,r17
  80f190:	a421883a 	add	r16,r20,r16
  80f194:	e0001e26 	beq	fp,zero,80f210 <__call_exitprocs+0xf4>
  80f198:	80804017 	ldw	r2,256(r16)
  80f19c:	e0801c26 	beq	fp,r2,80f210 <__call_exitprocs+0xf4>
  80f1a0:	bdffffc4 	addi	r23,r23,-1
  80f1a4:	843fff04 	addi	r16,r16,-4
  80f1a8:	8c7fff04 	addi	r17,r17,-4
  80f1ac:	bd7ff91e 	bne	r23,r21,80f194 <__alt_data_end+0xff80f194>
  80f1b0:	00800034 	movhi	r2,0
  80f1b4:	10800004 	addi	r2,r2,0
  80f1b8:	10000926 	beq	r2,zero,80f1e0 <__call_exitprocs+0xc4>
  80f1bc:	a0800117 	ldw	r2,4(r20)
  80f1c0:	1000301e 	bne	r2,zero,80f284 <__call_exitprocs+0x168>
  80f1c4:	a0800017 	ldw	r2,0(r20)
  80f1c8:	10003226 	beq	r2,zero,80f294 <__call_exitprocs+0x178>
  80f1cc:	a009883a 	mov	r4,r20
  80f1d0:	98800015 	stw	r2,0(r19)
  80f1d4:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  80f1d8:	9d000017 	ldw	r20,0(r19)
  80f1dc:	a03fe41e 	bne	r20,zero,80f170 <__alt_data_end+0xff80f170>
  80f1e0:	dfc00a17 	ldw	ra,40(sp)
  80f1e4:	df000917 	ldw	fp,36(sp)
  80f1e8:	ddc00817 	ldw	r23,32(sp)
  80f1ec:	dd800717 	ldw	r22,28(sp)
  80f1f0:	dd400617 	ldw	r21,24(sp)
  80f1f4:	dd000517 	ldw	r20,20(sp)
  80f1f8:	dcc00417 	ldw	r19,16(sp)
  80f1fc:	dc800317 	ldw	r18,12(sp)
  80f200:	dc400217 	ldw	r17,8(sp)
  80f204:	dc000117 	ldw	r16,4(sp)
  80f208:	dec00b04 	addi	sp,sp,44
  80f20c:	f800283a 	ret
  80f210:	a0800117 	ldw	r2,4(r20)
  80f214:	80c00017 	ldw	r3,0(r16)
  80f218:	10bfffc4 	addi	r2,r2,-1
  80f21c:	15c01426 	beq	r2,r23,80f270 <__call_exitprocs+0x154>
  80f220:	80000015 	stw	zero,0(r16)
  80f224:	183fde26 	beq	r3,zero,80f1a0 <__alt_data_end+0xff80f1a0>
  80f228:	95c8983a 	sll	r4,r18,r23
  80f22c:	a0806217 	ldw	r2,392(r20)
  80f230:	a5800117 	ldw	r22,4(r20)
  80f234:	2084703a 	and	r2,r4,r2
  80f238:	10000b26 	beq	r2,zero,80f268 <__call_exitprocs+0x14c>
  80f23c:	a0806317 	ldw	r2,396(r20)
  80f240:	2088703a 	and	r4,r4,r2
  80f244:	20000c1e 	bne	r4,zero,80f278 <__call_exitprocs+0x15c>
  80f248:	89400017 	ldw	r5,0(r17)
  80f24c:	d9000017 	ldw	r4,0(sp)
  80f250:	183ee83a 	callr	r3
  80f254:	a0800117 	ldw	r2,4(r20)
  80f258:	15bfbf1e 	bne	r2,r22,80f158 <__alt_data_end+0xff80f158>
  80f25c:	98800017 	ldw	r2,0(r19)
  80f260:	153fcf26 	beq	r2,r20,80f1a0 <__alt_data_end+0xff80f1a0>
  80f264:	003fbc06 	br	80f158 <__alt_data_end+0xff80f158>
  80f268:	183ee83a 	callr	r3
  80f26c:	003ff906 	br	80f254 <__alt_data_end+0xff80f254>
  80f270:	a5c00115 	stw	r23,4(r20)
  80f274:	003feb06 	br	80f224 <__alt_data_end+0xff80f224>
  80f278:	89000017 	ldw	r4,0(r17)
  80f27c:	183ee83a 	callr	r3
  80f280:	003ff406 	br	80f254 <__alt_data_end+0xff80f254>
  80f284:	a0800017 	ldw	r2,0(r20)
  80f288:	a027883a 	mov	r19,r20
  80f28c:	1029883a 	mov	r20,r2
  80f290:	003fb606 	br	80f16c <__alt_data_end+0xff80f16c>
  80f294:	0005883a 	mov	r2,zero
  80f298:	003ffb06 	br	80f288 <__alt_data_end+0xff80f288>

0080f29c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  80f29c:	defffd04 	addi	sp,sp,-12
  80f2a0:	df000215 	stw	fp,8(sp)
  80f2a4:	df000204 	addi	fp,sp,8
  80f2a8:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  80f2ac:	0001883a 	nop
  80f2b0:	e0bfff17 	ldw	r2,-4(fp)
  80f2b4:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  80f2b8:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  80f2bc:	10000226 	beq	r2,zero,80f2c8 <_exit+0x2c>
    ALT_SIM_FAIL();
  80f2c0:	002af070 	cmpltui	zero,zero,43969
  80f2c4:	00000106 	br	80f2cc <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  80f2c8:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  80f2cc:	003fff06 	br	80f2cc <__alt_data_end+0xff80f2cc>
