
count_binary.elf:     file format elf32-littlenios2
count_binary.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x008001c0

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x0000fc94 memsz 0x0000fc94 flags r-x
    LOAD off    0x00010cb4 vaddr 0x0080fcb4 paddr 0x008117a0 align 2**12
         filesz 0x00001aec memsz 0x00001aec flags rw-
    LOAD off    0x0001328c vaddr 0x0081328c paddr 0x0081328c align 2**12
         filesz 0x00000000 memsz 0x00000164 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   000001a0  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f71c  008001c0  008001c0  000011c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000003d8  0080f8dc  0080f8dc  000108dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  0080fcb4  008117a0  00010cb4  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000164  0081328c  0081328c  0001328c  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  008133f0  008133f0  000127a0  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  000127a0  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000f20  00000000  00000000  000127c8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0002503c  00000000  00000000  000136e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 000095fb  00000000  00000000  00038724  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   0000b9d8  00000000  00000000  00041d1f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  00002224  00000000  00000000  0004d6f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000034c4  00000000  00000000  0004f91c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017b0d  00000000  00000000  00052de0  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000060  00000000  00000000  0006a8f0  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001908  00000000  00000000  0006a950  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  0006f4aa  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  0006f4ad  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0006f4b0  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0006f4b1  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0006f4b2  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0006f4b6  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0006f4ba  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  0006f4be  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0006f4c7  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  0006f4d0  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  0006f4d9  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000043  00000000  00000000  0006f4eb  2**0
                  CONTENTS, READONLY
 29 .jdi          00004f66  00000000  00000000  0006f52e  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     000384b8  00000000  00000000  00074494  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
008001c0 l    d  .text	00000000 .text
0080f8dc l    d  .rodata	00000000 .rodata
0080fcb4 l    d  .rwdata	00000000 .rwdata
0081328c l    d  .bss	00000000 .bss
008133f0 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../count_binary_bsp//obj/HAL/src/crt0.o
00800208 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
00800094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 count_binary.c
0081328c l     O .bss	00000001 count
0080020c l     F .text	00000024 lcd_init
00800230 l     F .text	00000058 initial_message
00800288 l     F .text	00000034 count_led
008002bc l     F .text	00000020 count_sevenseg
008002dc l     F .text	0000002c count_lcd
00800308 l     F .text	00000054 count_all
0080035c l     F .text	0000013c handle_button_press
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0080fa02 l     O .rodata	00000010 zeroes.4404
00802b58 l     F .text	000000bc __sbprintf
0080fa12 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00802d68 l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00804898 l     F .text	00000008 __fp_unlock
008048ac l     F .text	0000019c __sinit.part.1
00804a48 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0080fcb4 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
008100f8 l     O .rwdata	00000020 lc_ctype_charset
008100d8 l     O .rwdata	00000020 lc_message_charset
00810118 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
0080fa44 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
00807fac l     F .text	000000fc __sprint_r.part.0
0080fb78 l     O .rodata	00000010 blanks.4348
0080fb68 l     O .rodata	00000010 zeroes.4349
00809538 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0080d040 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080d14c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080d178 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0080d264 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080d344 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080d430 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0080d604 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00811790 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0080d880 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0080d9b4 l     F .text	00000034 alt_dev_reg
00810700 l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0080dca8 l     F .text	0000020c altera_avalon_jtag_uart_irq
0080deb4 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0080e4ec l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0080e8ac l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0080ed20 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0080ee60 l     F .text	0000003c alt_get_errno
0080ee9c l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
008007c0 g     F .text	00000018 putchar
00807488 g     F .text	00000074 _mprec_log10
00807574 g     F .text	0000008c __any_on
00809c2c g     F .text	00000054 _isatty_r
0080fa50 g     O .rodata	00000028 __mprec_tinytens
0080d540 g     F .text	0000007c alt_main
008007d8 g     F .text	000000c0 _puts_r
008132f0 g     O .bss	00000100 alt_irq
00809c80 g     F .text	00000060 _lseek_r
008117a0 g       *ABS*	00000000 __flash_rwdata_start
0080bb6c g     F .text	00000088 .hidden __eqdf2
008133f0 g       *ABS*	00000000 __alt_heap_start
0080077c g     F .text	0000003c printf
00809d40 g     F .text	0000009c _wcrtomb_r
00807e6c g     F .text	0000005c __sseek
00804be8 g     F .text	00000010 __sinit
008095f4 g     F .text	00000140 __swbuf_r
008056b0 g     F .text	0000007c _setlocale_r
00804a50 g     F .text	00000068 __sfmoreglue
0080d5e0 g     F .text	00000024 __malloc_unlock
00806380 g     F .text	0000015c memmove
00804bd0 g     F .text	00000018 _cleanup
00806604 g     F .text	000000a8 _Balloc
0080bbf4 g     F .text	000000dc .hidden __gtdf2
00800000 g     F .entry	0000001c __reset
00813290 g     O .bss	00000004 edge_capture
00800020 g       *ABS*	00000000 __flash_exceptions_start
00809bd0 g     F .text	0000005c _fstat_r
008132ac g     O .bss	00000004 errno
00807de8 g     F .text	00000008 __seofread
008132b4 g     O .bss	00000004 alt_argv
00819760 g       *ABS*	00000000 _gp
0080d850 g     F .text	00000030 usleep
00810580 g     O .rwdata	00000180 alt_fd_list
008007b8 g     F .text	00000008 _putchar_r
0080f27c g     F .text	00000090 alt_find_dev
00806238 g     F .text	00000148 memcpy
008048a0 g     F .text	0000000c _cleanup_r
0080ce58 g     F .text	000000dc .hidden __floatsidf
0080ede4 g     F .text	0000007c alt_io_redirect
0080bcd0 g     F .text	000000f4 .hidden __ltdf2
0080f8dc g       *ABS*	00000000 __DTOR_END__
00800898 g     F .text	00000014 puts
00807ccc g     F .text	00000074 __fpclassifyd
008073e4 g     F .text	000000a4 __ratio
0080951c g     F .text	0000001c __vfiprintf_internal
0080e0ac g     F .text	0000021c altera_avalon_jtag_uart_read
0080074c g     F .text	00000030 _printf_r
00800690 g     F .text	00000064 .hidden __udivsi3
0080d2a0 g     F .text	000000a4 isatty
0080faa0 g     O .rodata	000000c8 __mprec_tens
0080572c g     F .text	0000000c __locale_charset
0080f4b8 g     F .text	00000090 alt_icache_flush
008132a8 g     O .bss	00000004 __malloc_top_pad
00811768 g     O .rwdata	00000004 __mb_cur_max
0080575c g     F .text	0000000c _localeconv_r
00806a10 g     F .text	0000003c __i2b
0080506c g     F .text	000004bc __sfvwrite_r
00807d40 g     F .text	00000054 _sbrk_r
00809ce0 g     F .text	00000060 _read_r
00811788 g     O .rwdata	00000004 alt_max_fd
008098c4 g     F .text	000000f0 _fclose_r
00804868 g     F .text	00000030 fflush
008132a4 g     O .bss	00000004 __malloc_max_sbrked_mem
0080a9d8 g     F .text	000008ac .hidden __adddf3
0080718c g     F .text	0000010c __b2d
0080a4a0 g     F .text	00000538 .hidden __umoddi3
0080d46c g     F .text	000000d4 lseek
00811760 g     O .rwdata	00000004 _global_impure_ptr
00807768 g     F .text	00000564 _realloc_r
008133f0 g       *ABS*	00000000 __bss_end
0080ec30 g     F .text	000000f0 alt_iic_isr_register
0080f150 g     F .text	00000108 alt_tick
00809f28 g     F .text	00000578 .hidden __udivdi3
00809b2c g     F .text	00000024 _fputwc_r
0080fa78 g     O .rodata	00000028 __mprec_bigtens
008067f4 g     F .text	00000104 __s2b
0080cf34 g     F .text	000000a8 .hidden __floatunsidf
00806ecc g     F .text	00000060 __mcmp
00804c08 g     F .text	00000018 __fp_lock_all
0080ebe4 g     F .text	0000004c alt_ic_irq_enabled
0080f0b4 g     F .text	0000009c alt_alarm_stop
008132bc g     O .bss	00000004 alt_irq_active
008000ec g     F .exceptions	000000d4 alt_irq_handler
00810558 g     O .rwdata	00000028 alt_dev_null
0080e864 g     F .text	00000048 alt_dcache_flush_all
008068f8 g     F .text	00000068 __hi0bits
0080cdd8 g     F .text	00000080 .hidden __fixdfsi
008117a0 g       *ABS*	00000000 __ram_rwdata_end
00811780 g     O .rwdata	00000008 alt_dev_list
0080d8bc g     F .text	000000f8 write
00807600 g     F .text	000000a0 _putc_r
0080fcb4 g       *ABS*	00000000 __ram_rodata_end
0080d1b4 g     F .text	000000b0 fstat
0080bcd0 g     F .text	000000f4 .hidden __ledf2
00806c44 g     F .text	00000140 __pow5mult
008080c0 g     F .text	0000145c ___vfiprintf_internal_r
0081329c g     O .bss	00000004 __nlocale_changed
008006f4 g     F .text	00000058 .hidden __umodsi3
008133f0 g       *ABS*	00000000 end
0080dbe8 g     F .text	000000c0 altera_avalon_jtag_uart_init
0080f8dc g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
0080e564 g     F .text	0000007c alt_avalon_timer_sc_init
0080cfdc g     F .text	00000064 .hidden __clzsi2
0080e2c8 g     F .text	00000224 altera_avalon_jtag_uart_write
00804bf8 g     F .text	00000004 __sfp_lock_acquire
00806154 g     F .text	000000e4 memchr
00800944 g     F .text	000021f8 ___vfprintf_internal_r
00804d5c g     F .text	00000310 _free_r
00805738 g     F .text	00000010 __locale_mb_cur_max
0080f728 g     F .text	00000180 __call_exitprocs
00813298 g     O .bss	00000004 __mlocale_changed
0081176c g     O .rwdata	00000004 __malloc_sbrk_base
008001c0 g     F .text	0000004c _start
008132c0 g     O .bss	00000004 _alt_tick_rate
00806d84 g     F .text	00000148 __lshift
008132c4 g     O .bss	00000004 _alt_nticks
0080d640 g     F .text	000000fc read
0080da20 g     F .text	00000064 alt_sys_init
0080f610 g     F .text	00000118 __register_exitproc
00806a4c g     F .text	000001f8 __multiply
0080df54 g     F .text	00000068 altera_avalon_jtag_uart_close
0080fcb4 g       *ABS*	00000000 __ram_rwdata_start
0080f8dc g       *ABS*	00000000 __ram_rodata_start
008132c8 g     O .bss	00000028 __malloc_current_mallinfo
00807298 g     F .text	0000014c __d2b
0080da84 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0080f414 g     F .text	000000a4 alt_get_fd
0080e70c g     F .text	00000158 alt_busy_sleep
008097ac g     F .text	00000054 _close_r
0080f594 g     F .text	0000007c memcmp
0080db44 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
008133f0 g       *ABS*	00000000 __alt_stack_base
0080db94 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00802c14 g     F .text	00000154 __swsetup_r
0080b284 g     F .text	000008e8 .hidden __divdf3
00804ab8 g     F .text	00000118 __sfp
008074fc g     F .text	00000078 __copybits
00810150 g     O .rwdata	00000408 __malloc_av_
00804c04 g     F .text	00000004 __sinit_lock_release
0080bdc4 g     F .text	00000718 .hidden __muldf3
00807d94 g     F .text	00000054 __sread
0080f30c g     F .text	00000108 alt_find_file
0080e8e8 g     F .text	000000a4 alt_dev_llist_insert
0080d5bc g     F .text	00000024 __malloc_lock
0080d7a0 g     F .text	000000b0 sbrk
0080480c g     F .text	0000005c _fflush_r
00809800 g     F .text	000000c4 _calloc_r
0081328c g       *ABS*	00000000 __bss_start
008064dc g     F .text	00000128 memset
00800498 g     F .text	00000100 main
008132b8 g     O .bss	00000004 alt_envp
008132a0 g     O .bss	00000004 __malloc_max_total_mem
0080dae4 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00809734 g     F .text	00000018 __swbuf
00807ec8 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
008099b4 g     F .text	00000014 fclose
00802f68 g     F .text	00001688 _dtoa_r
00805948 g     F .text	0000080c _malloc_r
00809e9c g     F .text	00000030 __ascii_wctomb
0081178c g     O .rwdata	00000004 alt_errno
00805528 g     F .text	000000c4 _fwalk
008076a0 g     F .text	000000c8 putc
00800598 g     F .text	00000084 .hidden __divsi3
00804c38 g     F .text	00000124 _malloc_trim_r
0080f8dc g       *ABS*	00000000 __CTOR_END__
00807ed0 g     F .text	000000dc strcmp
0080f8dc g       *ABS*	00000000 __flash_rodata_start
0080f8dc g       *ABS*	00000000 __DTOR_LIST__
0080bb6c g     F .text	00000088 .hidden __nedf2
0080d9e8 g     F .text	00000038 alt_irq_init
0080d73c g     F .text	00000064 alt_release_fd
0080fb88 g     O .rodata	00000100 .hidden __clz_tab
00813294 g     O .bss	00000004 _PathLocale
0080f548 g     F .text	00000014 atexit
0080974c g     F .text	00000060 _write_r
00805768 g     F .text	00000018 setlocale
00811764 g     O .rwdata	00000004 _impure_ptr
008132b0 g     O .bss	00000004 alt_argc
008045f0 g     F .text	0000021c __sflush_r
0080e9ec g     F .text	00000060 _do_dtors
00805754 g     F .text	00000008 __locale_cjk_lang
00800020 g       .exceptions	00000000 alt_irq_entry
00807128 g     F .text	00000064 __ulp
00804c20 g     F .text	00000018 __fp_unlock_all
00811778 g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
00805780 g     F .text	0000000c localeconv
0080ea80 g     F .text	00000050 alt_ic_isr_register
008117a0 g       *ABS*	00000000 _edata
008133f0 g       *ABS*	00000000 _end
008099c8 g     F .text	00000164 __fputwc
008001c0 g       *ABS*	00000000 __ram_exceptions_end
0080dfbc g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0080eb58 g     F .text	0000008c alt_ic_irq_disable
00807df0 g     F .text	0000007c __swrite
00811770 g     O .rwdata	00000004 __malloc_trim_threshold
0080f258 g     F .text	00000024 altera_nios2_qsys_irq_init
00805748 g     F .text	0000000c __locale_msgcharset
0080f55c g     F .text	00000038 exit
008055ec g     F .text	000000c4 _fwalk_reent
00806f2c g     F .text	000001fc __mdiff
0080061c g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
00804bfc g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
0080f8a8 g     F .text	00000034 _exit
0080e5e0 g     F .text	0000012c alt_alarm_start
0080578c g     F .text	000001bc __smakebuf_r
008008ac g     F .text	00000098 strlen
0080ef60 g     F .text	00000154 open
0080bbf4 g     F .text	000000dc .hidden __gedf2
00811774 g     O .rwdata	00000004 __wctomb
008080a8 g     F .text	00000018 __sprint_r
0080ea4c g     F .text	00000034 alt_icache_flush_all
00811794 g     O .rwdata	00000004 alt_priority_mask
0080ead0 g     F .text	00000088 alt_ic_irq_enable
00802b3c g     F .text	0000001c __vfprintf_internal
00809ecc g     F .text	0000005c _wctomb_r
0080c4dc g     F .text	000008fc .hidden __subdf3
00806960 g     F .text	000000b0 __lo0bits
00811798 g     O .rwdata	00000008 alt_alarm_list
0080e98c g     F .text	00000060 _do_ctors
00809ddc g     F .text	000000c0 wcrtomb
0080d07c g     F .text	000000d0 close
0080d3ac g     F .text	00000084 alt_load
00809b50 g     F .text	00000080 fputwc
00804c00 g     F .text	00000004 __sinit_lock_acquire
008066d4 g     F .text	00000120 __multadd
008066ac g     F .text	00000028 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00820014 	movui	r2,2048
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__alt_data_end+0xff800004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08407014 	ori	at,at,448
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__alt_mem_sdram-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000ec0 	call	8000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000306 	br	800098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  80008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)

00800094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
  800094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  800098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  80009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000e8:	ef80083a 	eret

008000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000ec:	defff904 	addi	sp,sp,-28
  8000f0:	dfc00615 	stw	ra,24(sp)
  8000f4:	df000515 	stw	fp,20(sp)
  8000f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  8000fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800100:	0005313a 	rdctl	r2,ipending
  800104:	e0bffe15 	stw	r2,-8(fp)

  return active;
  800108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  800110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800114:	00800044 	movi	r2,1
  800118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80011c:	e0fffb17 	ldw	r3,-20(fp)
  800120:	e0bffc17 	ldw	r2,-16(fp)
  800124:	1884703a 	and	r2,r3,r2
  800128:	10001426 	beq	r2,zero,80017c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80012c:	00802074 	movhi	r2,129
  800130:	108cbc04 	addi	r2,r2,13040
  800134:	e0fffd17 	ldw	r3,-12(fp)
  800138:	180690fa 	slli	r3,r3,3
  80013c:	10c5883a 	add	r2,r2,r3
  800140:	10c00017 	ldw	r3,0(r2)
  800144:	00802074 	movhi	r2,129
  800148:	108cbc04 	addi	r2,r2,13040
  80014c:	e13ffd17 	ldw	r4,-12(fp)
  800150:	200890fa 	slli	r4,r4,3
  800154:	1105883a 	add	r2,r2,r4
  800158:	10800104 	addi	r2,r2,4
  80015c:	10800017 	ldw	r2,0(r2)
  800160:	1009883a 	mov	r4,r2
  800164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  800168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  80016c:	0005313a 	rdctl	r2,ipending
  800170:	e0bfff15 	stw	r2,-4(fp)

  return active;
  800174:	e0bfff17 	ldw	r2,-4(fp)
  800178:	00000706 	br	800198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
  80017c:	e0bffc17 	ldw	r2,-16(fp)
  800180:	1085883a 	add	r2,r2,r2
  800184:	e0bffc15 	stw	r2,-16(fp)
      i++;
  800188:	e0bffd17 	ldw	r2,-12(fp)
  80018c:	10800044 	addi	r2,r2,1
  800190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  800194:	003fe106 	br	80011c <__alt_data_end+0xff80011c>

    active = alt_irq_pending ();
  800198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  80019c:	e0bffb17 	ldw	r2,-20(fp)
  8001a0:	103fdb1e 	bne	r2,zero,800110 <__alt_data_end+0xff800110>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001a4:	0001883a 	nop
}
  8001a8:	0001883a 	nop
  8001ac:	e037883a 	mov	sp,fp
  8001b0:	dfc00117 	ldw	ra,4(sp)
  8001b4:	df000017 	ldw	fp,0(sp)
  8001b8:	dec00204 	addi	sp,sp,8
  8001bc:	f800283a 	ret

Disassembly of section .text:

008001c0 <_start>:

#if NIOS2_DCACHE_SIZE > 0 && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
  8001c0:	00800074 	movhi	r2,1
#else
    movui r2, NIOS2_DCACHE_SIZE
#endif

0:
    initd 0(r2)
  8001c4:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  8001c8:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  8001cc:	00bffd16 	blt	zero,r2,8001c4 <__alt_data_end+0xff8001c4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  8001d0:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  8001d4:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  8001d8:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  8001dc:	d6a5d814 	ori	gp,gp,38752
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  8001e0:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  8001e4:	108ca314 	ori	r2,r2,12940

    movhi r3, %hi(__bss_end)
  8001e8:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  8001ec:	18ccfc14 	ori	r3,r3,13296

    beq r2, r3, 1f
  8001f0:	10c00326 	beq	r2,r3,800200 <_start+0x40>

0:
    stw zero, (r2)
  8001f4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  8001f8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  8001fc:	10fffd36 	bltu	r2,r3,8001f4 <__alt_data_end+0xff8001f4>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800200:	080d3ac0 	call	80d3ac <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  800204:	080d5400 	call	80d540 <alt_main>

00800208 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  800208:	003fff06 	br	800208 <__alt_data_end+0xff800208>

0080020c <lcd_init>:
 * count_<device>() -- Implements the counting on the respective device.
 * handle_button_press() -- Determines what to do when one of the buttons
 * is pressed.
 */
static void lcd_init( FILE *lcd )
{
  80020c:	defffe04 	addi	sp,sp,-8
  800210:	df000115 	stw	fp,4(sp)
  800214:	df000104 	addi	fp,sp,4
  800218:	e13fff15 	stw	r4,-4(fp)
    /* If the LCD Display exists, write a simple message on the first line. */
    LCD_PRINTF(lcd, "%c%s Counting will be displayed below...", ESC,
               ESC_TOP_LEFT);
}
  80021c:	0001883a 	nop
  800220:	e037883a 	mov	sp,fp
  800224:	df000017 	ldw	fp,0(sp)
  800228:	dec00104 	addi	sp,sp,4
  80022c:	f800283a 	ret

00800230 <initial_message>:

static void initial_message()
{
  800230:	defffe04 	addi	sp,sp,-8
  800234:	dfc00115 	stw	ra,4(sp)
  800238:	df000015 	stw	fp,0(sp)
  80023c:	d839883a 	mov	fp,sp
    printf("\n\n**************************\n");
  800240:	01002074 	movhi	r4,129
  800244:	213e3704 	addi	r4,r4,-1828
  800248:	08008980 	call	800898 <puts>
    printf("* Hello from Nios II!    *\n");
  80024c:	01002074 	movhi	r4,129
  800250:	213e3f04 	addi	r4,r4,-1796
  800254:	08008980 	call	800898 <puts>
    printf("* Counting from 00 to ff *\n");
  800258:	01002074 	movhi	r4,129
  80025c:	213e4604 	addi	r4,r4,-1768
  800260:	08008980 	call	800898 <puts>
    printf("**************************\n");
  800264:	01002074 	movhi	r4,129
  800268:	213e4d04 	addi	r4,r4,-1740
  80026c:	08008980 	call	800898 <puts>
}
  800270:	0001883a 	nop
  800274:	e037883a 	mov	sp,fp
  800278:	dfc00117 	ldw	ra,4(sp)
  80027c:	df000017 	ldw	fp,0(sp)
  800280:	dec00204 	addi	sp,sp,8
  800284:	f800283a 	ret

00800288 <count_led>:
 * Illuminate LEDs with the value of 'count', if they
 * exist in the system
 */

static void count_led()
{
  800288:	deffff04 	addi	sp,sp,-4
  80028c:	df000015 	stw	fp,0(sp)
  800290:	d839883a 	mov	fp,sp
#ifdef LED_PIO_BASE
    IOWR_ALTERA_AVALON_PIO_DATA(
  800294:	d0a6cb03 	ldbu	r2,-25812(gp)
  800298:	10c03fcc 	andi	r3,r2,255
  80029c:	00804034 	movhi	r2,256
  8002a0:	10840804 	addi	r2,r2,4128
  8002a4:	10c00035 	stwio	r3,0(r2)
        LED_PIO_BASE,
        count
        );
#endif
}
  8002a8:	0001883a 	nop
  8002ac:	e037883a 	mov	sp,fp
  8002b0:	df000017 	ldw	fp,0(sp)
  8002b4:	dec00104 	addi	sp,sp,4
  8002b8:	f800283a 	ret

008002bc <count_sevenseg>:
 * 
 * Display value of 'count' on the Seven Segment Display
 */

static void count_sevenseg()
{
  8002bc:	deffff04 	addi	sp,sp,-4
  8002c0:	df000015 	stw	fp,0(sp)
  8002c4:	d839883a 	mov	fp,sp
#ifdef SEVEN_SEG_PIO_BASE
    sevenseg_set_hex(count);
#endif
}
  8002c8:	0001883a 	nop
  8002cc:	e037883a 	mov	sp,fp
  8002d0:	df000017 	ldw	fp,0(sp)
  8002d4:	dec00104 	addi	sp,sp,4
  8002d8:	f800283a 	ret

008002dc <count_lcd>:
 * is treated as an I/O device (i.e.: using fprintf).  You
 * can read more about HAL drivers <link/reference here>.
 */

static void count_lcd( void* arg )
{
  8002dc:	defffd04 	addi	sp,sp,-12
  8002e0:	df000215 	stw	fp,8(sp)
  8002e4:	df000204 	addi	fp,sp,8
  8002e8:	e13fff15 	stw	r4,-4(fp)
    FILE* __attribute__ ((unused))  lcd;  /* Attribute suppresses "unused variable" warning. */
    lcd = (FILE*) arg;
  8002ec:	e0bfff17 	ldw	r2,-4(fp)
  8002f0:	e0bffe15 	stw	r2,-8(fp)
    LCD_PRINTF(lcd, "%c%s 0x%x\n", ESC, ESC_COL2_INDENT5, count);
}
  8002f4:	0001883a 	nop
  8002f8:	e037883a 	mov	sp,fp
  8002fc:	df000017 	ldw	fp,0(sp)
  800300:	dec00104 	addi	sp,sp,4
  800304:	f800283a 	ret

00800308 <count_all>:

/* count_all merely combines all three peripherals counting */

static void count_all( void* arg )
{
  800308:	defffd04 	addi	sp,sp,-12
  80030c:	dfc00215 	stw	ra,8(sp)
  800310:	df000115 	stw	fp,4(sp)
  800314:	df000104 	addi	fp,sp,4
  800318:	e13fff15 	stw	r4,-4(fp)
    count_led();
  80031c:	08002880 	call	800288 <count_led>
    count_sevenseg();
  800320:	08002bc0 	call	8002bc <count_sevenseg>
    count_lcd( arg );
  800324:	e13fff17 	ldw	r4,-4(fp)
  800328:	08002dc0 	call	8002dc <count_lcd>
    printf("%02x,  ", count);
  80032c:	d0a6cb03 	ldbu	r2,-25812(gp)
  800330:	10803fcc 	andi	r2,r2,255
  800334:	100b883a 	mov	r5,r2
  800338:	01002074 	movhi	r4,129
  80033c:	213e5404 	addi	r4,r4,-1712
  800340:	080077c0 	call	80077c <printf>
}
  800344:	0001883a 	nop
  800348:	e037883a 	mov	sp,fp
  80034c:	dfc00117 	ldw	ra,4(sp)
  800350:	df000017 	ldw	fp,0(sp)
  800354:	dec00204 	addi	sp,sp,8
  800358:	f800283a 	ret

0080035c <handle_button_press>:
  

static void handle_button_press(alt_u8 type, FILE *lcd)
{
  80035c:	defffc04 	addi	sp,sp,-16
  800360:	dfc00315 	stw	ra,12(sp)
  800364:	df000215 	stw	fp,8(sp)
  800368:	df000204 	addi	fp,sp,8
  80036c:	2005883a 	mov	r2,r4
  800370:	e17fff15 	stw	r5,-4(fp)
  800374:	e0bffe05 	stb	r2,-8(fp)
    /* Button press actions while counting. */
    if (type == 'c')
  800378:	e0bffe03 	ldbu	r2,-8(fp)
  80037c:	108018d8 	cmpnei	r2,r2,99
  800380:	10001b1e 	bne	r2,zero,8003f0 <handle_button_press+0x94>
    {
        switch (edge_capture) 
  800384:	d0a6cc17 	ldw	r2,-25808(gp)
  800388:	10c000a0 	cmpeqi	r3,r2,2
  80038c:	18000c1e 	bne	r3,zero,8003c0 <handle_button_press+0x64>
  800390:	10c000c8 	cmpgei	r3,r2,3
  800394:	1800031e 	bne	r3,zero,8003a4 <handle_button_press+0x48>
  800398:	10800060 	cmpeqi	r2,r2,1
  80039c:	1000061e 	bne	r2,zero,8003b8 <handle_button_press+0x5c>
  8003a0:	00000f06 	br	8003e0 <handle_button_press+0x84>
  8003a4:	10c00120 	cmpeqi	r3,r2,4
  8003a8:	1800071e 	bne	r3,zero,8003c8 <handle_button_press+0x6c>
  8003ac:	10800220 	cmpeqi	r2,r2,8
  8003b0:	1000081e 	bne	r2,zero,8003d4 <handle_button_press+0x78>
  8003b4:	00000a06 	br	8003e0 <handle_button_press+0x84>
        {
            /* Button 1:  Output counting to LED only. */
        case 0x1:
            count_led();
  8003b8:	08002880 	call	800288 <count_led>
            break;
  8003bc:	00003006 	br	800480 <handle_button_press+0x124>
            /* Button 2:  Output counting to SEVEN SEG only. */
        case 0x2:
            count_sevenseg();
  8003c0:	08002bc0 	call	8002bc <count_sevenseg>
            break;
  8003c4:	00002e06 	br	800480 <handle_button_press+0x124>
            /* Button 3:  Output counting to D only. */
        case 0x4:
            count_lcd( lcd );
  8003c8:	e13fff17 	ldw	r4,-4(fp)
  8003cc:	08002dc0 	call	8002dc <count_lcd>
            break;
  8003d0:	00002b06 	br	800480 <handle_button_press+0x124>
            /* Button 4:  Output counting to LED, SEVEN_SEG, and D. */ 
        case 0x8:
            count_all( lcd );
  8003d4:	e13fff17 	ldw	r4,-4(fp)
  8003d8:	08003080 	call	800308 <count_all>
            break;
  8003dc:	00002806 	br	800480 <handle_button_press+0x124>
            /* If value ends up being something different (shouldn't) do
               same as 8. */
        default:
            count_all( lcd );
  8003e0:	e13fff17 	ldw	r4,-4(fp)
  8003e4:	08003080 	call	800308 <count_all>
            break;
  8003e8:	0001883a 	nop
  8003ec:	00002406 	br	800480 <handle_button_press+0x124>
        }
    }
    /* If 'type' is anything else, assume we're "waiting"...*/
    else
    {
        switch (edge_capture)
  8003f0:	d0a6cc17 	ldw	r2,-25808(gp)
  8003f4:	10c000a0 	cmpeqi	r3,r2,2
  8003f8:	18000f1e 	bne	r3,zero,800438 <handle_button_press+0xdc>
  8003fc:	10c000c8 	cmpgei	r3,r2,3
  800400:	1800031e 	bne	r3,zero,800410 <handle_button_press+0xb4>
  800404:	10800060 	cmpeqi	r2,r2,1
  800408:	1000061e 	bne	r2,zero,800424 <handle_button_press+0xc8>
  80040c:	00001906 	br	800474 <handle_button_press+0x118>
  800410:	10c00120 	cmpeqi	r3,r2,4
  800414:	18000d1e 	bne	r3,zero,80044c <handle_button_press+0xf0>
  800418:	10800220 	cmpeqi	r2,r2,8
  80041c:	1000101e 	bne	r2,zero,800460 <handle_button_press+0x104>
  800420:	00001406 	br	800474 <handle_button_press+0x118>
        {
        case 0x1:
            printf( "Button 1\n");
  800424:	01002074 	movhi	r4,129
  800428:	213e5604 	addi	r4,r4,-1704
  80042c:	08008980 	call	800898 <puts>
            edge_capture = 0;
  800430:	d026cc15 	stw	zero,-25808(gp)
            break;
  800434:	00001206 	br	800480 <handle_button_press+0x124>
        case 0x2:
            printf( "Button 2\n");
  800438:	01002074 	movhi	r4,129
  80043c:	213e5904 	addi	r4,r4,-1692
  800440:	08008980 	call	800898 <puts>
            edge_capture = 0;
  800444:	d026cc15 	stw	zero,-25808(gp)
            break;
  800448:	00000d06 	br	800480 <handle_button_press+0x124>
        case 0x4:
            printf( "Button 3\n");
  80044c:	01002074 	movhi	r4,129
  800450:	213e5c04 	addi	r4,r4,-1680
  800454:	08008980 	call	800898 <puts>
            edge_capture = 0;
  800458:	d026cc15 	stw	zero,-25808(gp)
            break;
  80045c:	00000806 	br	800480 <handle_button_press+0x124>
        case 0x8:
            printf( "Button 4\n");
  800460:	01002074 	movhi	r4,129
  800464:	213e5f04 	addi	r4,r4,-1668
  800468:	08008980 	call	800898 <puts>
            edge_capture = 0;
  80046c:	d026cc15 	stw	zero,-25808(gp)
            break;
  800470:	00000306 	br	800480 <handle_button_press+0x124>
        default:
            printf( "Button press UNKNOWN!!\n");
  800474:	01002074 	movhi	r4,129
  800478:	213e6204 	addi	r4,r4,-1656
  80047c:	08008980 	call	800898 <puts>
        }
    }
}
  800480:	0001883a 	nop
  800484:	e037883a 	mov	sp,fp
  800488:	dfc00117 	ldw	ra,4(sp)
  80048c:	df000017 	ldw	fp,0(sp)
  800490:	dec00204 	addi	sp,sp,8
  800494:	f800283a 	ret

00800498 <main>:
 * NOTE:  References to Buttons 1-4 correspond to SW0-SW3 on the Development   *
 * Board.                                                                      *
 ******************************************************************************/

int main(void)
{ 
  800498:	defffb04 	addi	sp,sp,-20
  80049c:	dfc00415 	stw	ra,16(sp)
  8004a0:	df000315 	stw	fp,12(sp)
  8004a4:	df000304 	addi	fp,sp,12
    int i;
    int  __attribute__ ((unused))  wait_time;  /* Attribute suppresses "var set but not used" warning. */
    FILE * lcd;

    count = 0;
  8004a8:	d026cb05 	stb	zero,-25812(gp)

    /* Initialize the LCD, if there is one.
     */
    lcd = LCD_OPEN();
  8004ac:	e03ffe15 	stw	zero,-8(fp)
    if(lcd != NULL) {lcd_init( lcd );}
  8004b0:	e0bffe17 	ldw	r2,-8(fp)
  8004b4:	10000226 	beq	r2,zero,8004c0 <main+0x28>
  8004b8:	e13ffe17 	ldw	r4,-8(fp)
  8004bc:	080020c0 	call	80020c <lcd_init>
    init_button_pio();
#endif

/* Initial message to output. */

    initial_message();
  8004c0:	08002300 	call	800230 <initial_message>

/* Continue 0-ff counting loop. */

    while( 1 ) 
    {
        usleep(100000);
  8004c4:	010000b4 	movhi	r4,2
  8004c8:	2121a804 	addi	r4,r4,-31072
  8004cc:	080d8500 	call	80d850 <usleep>
        if (edge_capture != 0)
  8004d0:	d0a6cc17 	ldw	r2,-25808(gp)
  8004d4:	10000426 	beq	r2,zero,8004e8 <main+0x50>
        {
            /* Handle button presses while counting... */
            handle_button_press('c', lcd);
  8004d8:	e17ffe17 	ldw	r5,-8(fp)
  8004dc:	010018c4 	movi	r4,99
  8004e0:	080035c0 	call	80035c <handle_button_press>
  8004e4:	00000206 	br	8004f0 <main+0x58>
        }
        /* If no button presses, try to output counting to all. */
        else
        {
            count_all( lcd );
  8004e8:	e13ffe17 	ldw	r4,-8(fp)
  8004ec:	08003080 	call	800308 <count_all>
        }
        /*
         * If done counting, wait about 7 seconds...
         * detect button presses while waiting.
         */
        if( count == 0xff )
  8004f0:	d0a6cb03 	ldbu	r2,-25812(gp)
  8004f4:	10803fcc 	andi	r2,r2,255
  8004f8:	10803fd8 	cmpnei	r2,r2,255
  8004fc:	1000221e 	bne	r2,zero,800588 <main+0xf0>
        {
            LCD_PRINTF(lcd, "%c%s %c%s %c%s Waiting...\n", ESC, ESC_TOP_LEFT,
                       ESC, ESC_CLEAR, ESC, ESC_COL1_INDENT5);
            printf("\nWaiting...");
  800500:	01002074 	movhi	r4,129
  800504:	213e6804 	addi	r4,r4,-1632
  800508:	080077c0 	call	80077c <printf>
            edge_capture = 0; /* Reset to 0 during wait/pause period. */
  80050c:	d026cc15 	stw	zero,-25808(gp)

            /* Clear the 2nd. line of the LCD screen. */
            LCD_PRINTF(lcd, "%c%s, %c%s", ESC, ESC_COL2_INDENT5, ESC,
                       ESC_CLEAR);
            wait_time = 0;
  800510:	e03fff15 	stw	zero,-4(fp)
            for (i = 0; i<70; ++i)
  800514:	e03ffd15 	stw	zero,-12(fp)
  800518:	00001506 	br	800570 <main+0xd8>
            {
                printf(".");
  80051c:	01000b84 	movi	r4,46
  800520:	08007c00 	call	8007c0 <putchar>
                wait_time = i/10;
  800524:	e0bffd17 	ldw	r2,-12(fp)
  800528:	01400284 	movi	r5,10
  80052c:	1009883a 	mov	r4,r2
  800530:	08005980 	call	800598 <__divsi3>
  800534:	e0bfff15 	stw	r2,-4(fp)
                LCD_PRINTF(lcd, "%c%s %ds\n", ESC, ESC_COL2_INDENT5,
                    wait_time+1);

                if (edge_capture != 0) 
  800538:	d0a6cc17 	ldw	r2,-25808(gp)
  80053c:	10000626 	beq	r2,zero,800558 <main+0xc0>
                {
                    printf( "\nYou pushed:  " );
  800540:	01002074 	movhi	r4,129
  800544:	213e6b04 	addi	r4,r4,-1620
  800548:	080077c0 	call	80077c <printf>
                    handle_button_press('w', lcd);
  80054c:	e17ffe17 	ldw	r5,-8(fp)
  800550:	01001dc4 	movi	r4,119
  800554:	080035c0 	call	80035c <handle_button_press>
                }
                usleep(100000); /* Sleep for 0.1s. */
  800558:	010000b4 	movhi	r4,2
  80055c:	2121a804 	addi	r4,r4,-31072
  800560:	080d8500 	call	80d850 <usleep>

            /* Clear the 2nd. line of the LCD screen. */
            LCD_PRINTF(lcd, "%c%s, %c%s", ESC, ESC_COL2_INDENT5, ESC,
                       ESC_CLEAR);
            wait_time = 0;
            for (i = 0; i<70; ++i)
  800564:	e0bffd17 	ldw	r2,-12(fp)
  800568:	10800044 	addi	r2,r2,1
  80056c:	e0bffd15 	stw	r2,-12(fp)
  800570:	e0bffd17 	ldw	r2,-12(fp)
  800574:	10801190 	cmplti	r2,r2,70
  800578:	103fe81e 	bne	r2,zero,80051c <__alt_data_end+0xff80051c>
                }
                usleep(100000); /* Sleep for 0.1s. */
            }
            /*  Output the "loop start" messages before looping, again.
             */
            initial_message();
  80057c:	08002300 	call	800230 <initial_message>
            lcd_init( lcd );
  800580:	e13ffe17 	ldw	r4,-8(fp)
  800584:	080020c0 	call	80020c <lcd_init>
        }
        count++;
  800588:	d0a6cb03 	ldbu	r2,-25812(gp)
  80058c:	10800044 	addi	r2,r2,1
  800590:	d0a6cb05 	stb	r2,-25812(gp)
    }
  800594:	003fcb06 	br	8004c4 <__alt_data_end+0xff8004c4>

00800598 <__divsi3>:
  800598:	20001b16 	blt	r4,zero,800608 <__divsi3+0x70>
  80059c:	000f883a 	mov	r7,zero
  8005a0:	28001616 	blt	r5,zero,8005fc <__divsi3+0x64>
  8005a4:	200d883a 	mov	r6,r4
  8005a8:	29001a2e 	bgeu	r5,r4,800614 <__divsi3+0x7c>
  8005ac:	00800804 	movi	r2,32
  8005b0:	00c00044 	movi	r3,1
  8005b4:	00000106 	br	8005bc <__divsi3+0x24>
  8005b8:	10000d26 	beq	r2,zero,8005f0 <__divsi3+0x58>
  8005bc:	294b883a 	add	r5,r5,r5
  8005c0:	10bfffc4 	addi	r2,r2,-1
  8005c4:	18c7883a 	add	r3,r3,r3
  8005c8:	293ffb36 	bltu	r5,r4,8005b8 <__alt_data_end+0xff8005b8>
  8005cc:	0005883a 	mov	r2,zero
  8005d0:	18000726 	beq	r3,zero,8005f0 <__divsi3+0x58>
  8005d4:	0005883a 	mov	r2,zero
  8005d8:	31400236 	bltu	r6,r5,8005e4 <__divsi3+0x4c>
  8005dc:	314dc83a 	sub	r6,r6,r5
  8005e0:	10c4b03a 	or	r2,r2,r3
  8005e4:	1806d07a 	srli	r3,r3,1
  8005e8:	280ad07a 	srli	r5,r5,1
  8005ec:	183ffa1e 	bne	r3,zero,8005d8 <__alt_data_end+0xff8005d8>
  8005f0:	38000126 	beq	r7,zero,8005f8 <__divsi3+0x60>
  8005f4:	0085c83a 	sub	r2,zero,r2
  8005f8:	f800283a 	ret
  8005fc:	014bc83a 	sub	r5,zero,r5
  800600:	39c0005c 	xori	r7,r7,1
  800604:	003fe706 	br	8005a4 <__alt_data_end+0xff8005a4>
  800608:	0109c83a 	sub	r4,zero,r4
  80060c:	01c00044 	movi	r7,1
  800610:	003fe306 	br	8005a0 <__alt_data_end+0xff8005a0>
  800614:	00c00044 	movi	r3,1
  800618:	003fee06 	br	8005d4 <__alt_data_end+0xff8005d4>

0080061c <__modsi3>:
  80061c:	20001716 	blt	r4,zero,80067c <__modsi3+0x60>
  800620:	000f883a 	mov	r7,zero
  800624:	2005883a 	mov	r2,r4
  800628:	28001216 	blt	r5,zero,800674 <__modsi3+0x58>
  80062c:	2900162e 	bgeu	r5,r4,800688 <__modsi3+0x6c>
  800630:	01800804 	movi	r6,32
  800634:	00c00044 	movi	r3,1
  800638:	00000106 	br	800640 <__modsi3+0x24>
  80063c:	30000a26 	beq	r6,zero,800668 <__modsi3+0x4c>
  800640:	294b883a 	add	r5,r5,r5
  800644:	31bfffc4 	addi	r6,r6,-1
  800648:	18c7883a 	add	r3,r3,r3
  80064c:	293ffb36 	bltu	r5,r4,80063c <__alt_data_end+0xff80063c>
  800650:	18000526 	beq	r3,zero,800668 <__modsi3+0x4c>
  800654:	1806d07a 	srli	r3,r3,1
  800658:	11400136 	bltu	r2,r5,800660 <__modsi3+0x44>
  80065c:	1145c83a 	sub	r2,r2,r5
  800660:	280ad07a 	srli	r5,r5,1
  800664:	183ffb1e 	bne	r3,zero,800654 <__alt_data_end+0xff800654>
  800668:	38000126 	beq	r7,zero,800670 <__modsi3+0x54>
  80066c:	0085c83a 	sub	r2,zero,r2
  800670:	f800283a 	ret
  800674:	014bc83a 	sub	r5,zero,r5
  800678:	003fec06 	br	80062c <__alt_data_end+0xff80062c>
  80067c:	0109c83a 	sub	r4,zero,r4
  800680:	01c00044 	movi	r7,1
  800684:	003fe706 	br	800624 <__alt_data_end+0xff800624>
  800688:	00c00044 	movi	r3,1
  80068c:	003ff106 	br	800654 <__alt_data_end+0xff800654>

00800690 <__udivsi3>:
  800690:	200d883a 	mov	r6,r4
  800694:	2900152e 	bgeu	r5,r4,8006ec <__udivsi3+0x5c>
  800698:	28001416 	blt	r5,zero,8006ec <__udivsi3+0x5c>
  80069c:	00800804 	movi	r2,32
  8006a0:	00c00044 	movi	r3,1
  8006a4:	00000206 	br	8006b0 <__udivsi3+0x20>
  8006a8:	10000e26 	beq	r2,zero,8006e4 <__udivsi3+0x54>
  8006ac:	28000516 	blt	r5,zero,8006c4 <__udivsi3+0x34>
  8006b0:	294b883a 	add	r5,r5,r5
  8006b4:	10bfffc4 	addi	r2,r2,-1
  8006b8:	18c7883a 	add	r3,r3,r3
  8006bc:	293ffa36 	bltu	r5,r4,8006a8 <__alt_data_end+0xff8006a8>
  8006c0:	18000826 	beq	r3,zero,8006e4 <__udivsi3+0x54>
  8006c4:	0005883a 	mov	r2,zero
  8006c8:	31400236 	bltu	r6,r5,8006d4 <__udivsi3+0x44>
  8006cc:	314dc83a 	sub	r6,r6,r5
  8006d0:	10c4b03a 	or	r2,r2,r3
  8006d4:	1806d07a 	srli	r3,r3,1
  8006d8:	280ad07a 	srli	r5,r5,1
  8006dc:	183ffa1e 	bne	r3,zero,8006c8 <__alt_data_end+0xff8006c8>
  8006e0:	f800283a 	ret
  8006e4:	0005883a 	mov	r2,zero
  8006e8:	f800283a 	ret
  8006ec:	00c00044 	movi	r3,1
  8006f0:	003ff406 	br	8006c4 <__alt_data_end+0xff8006c4>

008006f4 <__umodsi3>:
  8006f4:	2005883a 	mov	r2,r4
  8006f8:	2900122e 	bgeu	r5,r4,800744 <__umodsi3+0x50>
  8006fc:	28001116 	blt	r5,zero,800744 <__umodsi3+0x50>
  800700:	01800804 	movi	r6,32
  800704:	00c00044 	movi	r3,1
  800708:	00000206 	br	800714 <__umodsi3+0x20>
  80070c:	30000c26 	beq	r6,zero,800740 <__umodsi3+0x4c>
  800710:	28000516 	blt	r5,zero,800728 <__umodsi3+0x34>
  800714:	294b883a 	add	r5,r5,r5
  800718:	31bfffc4 	addi	r6,r6,-1
  80071c:	18c7883a 	add	r3,r3,r3
  800720:	293ffa36 	bltu	r5,r4,80070c <__alt_data_end+0xff80070c>
  800724:	18000626 	beq	r3,zero,800740 <__umodsi3+0x4c>
  800728:	1806d07a 	srli	r3,r3,1
  80072c:	11400136 	bltu	r2,r5,800734 <__umodsi3+0x40>
  800730:	1145c83a 	sub	r2,r2,r5
  800734:	280ad07a 	srli	r5,r5,1
  800738:	183ffb1e 	bne	r3,zero,800728 <__alt_data_end+0xff800728>
  80073c:	f800283a 	ret
  800740:	f800283a 	ret
  800744:	00c00044 	movi	r3,1
  800748:	003ff706 	br	800728 <__alt_data_end+0xff800728>

0080074c <_printf_r>:
  80074c:	defffd04 	addi	sp,sp,-12
  800750:	2805883a 	mov	r2,r5
  800754:	dfc00015 	stw	ra,0(sp)
  800758:	d9800115 	stw	r6,4(sp)
  80075c:	d9c00215 	stw	r7,8(sp)
  800760:	21400217 	ldw	r5,8(r4)
  800764:	d9c00104 	addi	r7,sp,4
  800768:	100d883a 	mov	r6,r2
  80076c:	08009440 	call	800944 <___vfprintf_internal_r>
  800770:	dfc00017 	ldw	ra,0(sp)
  800774:	dec00304 	addi	sp,sp,12
  800778:	f800283a 	ret

0080077c <printf>:
  80077c:	defffc04 	addi	sp,sp,-16
  800780:	dfc00015 	stw	ra,0(sp)
  800784:	d9400115 	stw	r5,4(sp)
  800788:	d9800215 	stw	r6,8(sp)
  80078c:	d9c00315 	stw	r7,12(sp)
  800790:	00802074 	movhi	r2,129
  800794:	1085d904 	addi	r2,r2,5988
  800798:	10800017 	ldw	r2,0(r2)
  80079c:	200b883a 	mov	r5,r4
  8007a0:	d9800104 	addi	r6,sp,4
  8007a4:	11000217 	ldw	r4,8(r2)
  8007a8:	0802b3c0 	call	802b3c <__vfprintf_internal>
  8007ac:	dfc00017 	ldw	ra,0(sp)
  8007b0:	dec00404 	addi	sp,sp,16
  8007b4:	f800283a 	ret

008007b8 <_putchar_r>:
  8007b8:	21800217 	ldw	r6,8(r4)
  8007bc:	08076001 	jmpi	807600 <_putc_r>

008007c0 <putchar>:
  8007c0:	00802074 	movhi	r2,129
  8007c4:	1085d904 	addi	r2,r2,5988
  8007c8:	200b883a 	mov	r5,r4
  8007cc:	11000017 	ldw	r4,0(r2)
  8007d0:	21800217 	ldw	r6,8(r4)
  8007d4:	08076001 	jmpi	807600 <_putc_r>

008007d8 <_puts_r>:
  8007d8:	defff604 	addi	sp,sp,-40
  8007dc:	dc000715 	stw	r16,28(sp)
  8007e0:	2021883a 	mov	r16,r4
  8007e4:	2809883a 	mov	r4,r5
  8007e8:	dc400815 	stw	r17,32(sp)
  8007ec:	dfc00915 	stw	ra,36(sp)
  8007f0:	2823883a 	mov	r17,r5
  8007f4:	08008ac0 	call	8008ac <strlen>
  8007f8:	10c00044 	addi	r3,r2,1
  8007fc:	d8800115 	stw	r2,4(sp)
  800800:	00802074 	movhi	r2,129
  800804:	10be6f04 	addi	r2,r2,-1604
  800808:	d8800215 	stw	r2,8(sp)
  80080c:	00800044 	movi	r2,1
  800810:	d8800315 	stw	r2,12(sp)
  800814:	00800084 	movi	r2,2
  800818:	dc400015 	stw	r17,0(sp)
  80081c:	d8c00615 	stw	r3,24(sp)
  800820:	dec00415 	stw	sp,16(sp)
  800824:	d8800515 	stw	r2,20(sp)
  800828:	80000226 	beq	r16,zero,800834 <_puts_r+0x5c>
  80082c:	80800e17 	ldw	r2,56(r16)
  800830:	10001426 	beq	r2,zero,800884 <_puts_r+0xac>
  800834:	81400217 	ldw	r5,8(r16)
  800838:	2880030b 	ldhu	r2,12(r5)
  80083c:	10c8000c 	andi	r3,r2,8192
  800840:	1800061e 	bne	r3,zero,80085c <_puts_r+0x84>
  800844:	29001917 	ldw	r4,100(r5)
  800848:	00f7ffc4 	movi	r3,-8193
  80084c:	10880014 	ori	r2,r2,8192
  800850:	20c6703a 	and	r3,r4,r3
  800854:	2880030d 	sth	r2,12(r5)
  800858:	28c01915 	stw	r3,100(r5)
  80085c:	d9800404 	addi	r6,sp,16
  800860:	8009883a 	mov	r4,r16
  800864:	080506c0 	call	80506c <__sfvwrite_r>
  800868:	1000091e 	bne	r2,zero,800890 <_puts_r+0xb8>
  80086c:	00800284 	movi	r2,10
  800870:	dfc00917 	ldw	ra,36(sp)
  800874:	dc400817 	ldw	r17,32(sp)
  800878:	dc000717 	ldw	r16,28(sp)
  80087c:	dec00a04 	addi	sp,sp,40
  800880:	f800283a 	ret
  800884:	8009883a 	mov	r4,r16
  800888:	0804be80 	call	804be8 <__sinit>
  80088c:	003fe906 	br	800834 <__alt_data_end+0xff800834>
  800890:	00bfffc4 	movi	r2,-1
  800894:	003ff606 	br	800870 <__alt_data_end+0xff800870>

00800898 <puts>:
  800898:	00802074 	movhi	r2,129
  80089c:	1085d904 	addi	r2,r2,5988
  8008a0:	200b883a 	mov	r5,r4
  8008a4:	11000017 	ldw	r4,0(r2)
  8008a8:	08007d81 	jmpi	8007d8 <_puts_r>

008008ac <strlen>:
  8008ac:	208000cc 	andi	r2,r4,3
  8008b0:	10002026 	beq	r2,zero,800934 <strlen+0x88>
  8008b4:	20800007 	ldb	r2,0(r4)
  8008b8:	10002026 	beq	r2,zero,80093c <strlen+0x90>
  8008bc:	2005883a 	mov	r2,r4
  8008c0:	00000206 	br	8008cc <strlen+0x20>
  8008c4:	10c00007 	ldb	r3,0(r2)
  8008c8:	18001826 	beq	r3,zero,80092c <strlen+0x80>
  8008cc:	10800044 	addi	r2,r2,1
  8008d0:	10c000cc 	andi	r3,r2,3
  8008d4:	183ffb1e 	bne	r3,zero,8008c4 <__alt_data_end+0xff8008c4>
  8008d8:	10c00017 	ldw	r3,0(r2)
  8008dc:	01ffbff4 	movhi	r7,65279
  8008e0:	39ffbfc4 	addi	r7,r7,-257
  8008e4:	00ca303a 	nor	r5,zero,r3
  8008e8:	01a02074 	movhi	r6,32897
  8008ec:	19c7883a 	add	r3,r3,r7
  8008f0:	31a02004 	addi	r6,r6,-32640
  8008f4:	1946703a 	and	r3,r3,r5
  8008f8:	1986703a 	and	r3,r3,r6
  8008fc:	1800091e 	bne	r3,zero,800924 <strlen+0x78>
  800900:	10800104 	addi	r2,r2,4
  800904:	10c00017 	ldw	r3,0(r2)
  800908:	19cb883a 	add	r5,r3,r7
  80090c:	00c6303a 	nor	r3,zero,r3
  800910:	28c6703a 	and	r3,r5,r3
  800914:	1986703a 	and	r3,r3,r6
  800918:	183ff926 	beq	r3,zero,800900 <__alt_data_end+0xff800900>
  80091c:	00000106 	br	800924 <strlen+0x78>
  800920:	10800044 	addi	r2,r2,1
  800924:	10c00007 	ldb	r3,0(r2)
  800928:	183ffd1e 	bne	r3,zero,800920 <__alt_data_end+0xff800920>
  80092c:	1105c83a 	sub	r2,r2,r4
  800930:	f800283a 	ret
  800934:	2005883a 	mov	r2,r4
  800938:	003fe706 	br	8008d8 <__alt_data_end+0xff8008d8>
  80093c:	0005883a 	mov	r2,zero
  800940:	f800283a 	ret

00800944 <___vfprintf_internal_r>:
  800944:	deffb804 	addi	sp,sp,-288
  800948:	dfc04715 	stw	ra,284(sp)
  80094c:	ddc04515 	stw	r23,276(sp)
  800950:	dd404315 	stw	r21,268(sp)
  800954:	d9002c15 	stw	r4,176(sp)
  800958:	282f883a 	mov	r23,r5
  80095c:	302b883a 	mov	r21,r6
  800960:	d9c02d15 	stw	r7,180(sp)
  800964:	df004615 	stw	fp,280(sp)
  800968:	dd804415 	stw	r22,272(sp)
  80096c:	dd004215 	stw	r20,264(sp)
  800970:	dcc04115 	stw	r19,260(sp)
  800974:	dc804015 	stw	r18,256(sp)
  800978:	dc403f15 	stw	r17,252(sp)
  80097c:	dc003e15 	stw	r16,248(sp)
  800980:	080575c0 	call	80575c <_localeconv_r>
  800984:	10800017 	ldw	r2,0(r2)
  800988:	1009883a 	mov	r4,r2
  80098c:	d8803415 	stw	r2,208(sp)
  800990:	08008ac0 	call	8008ac <strlen>
  800994:	d8803715 	stw	r2,220(sp)
  800998:	d8802c17 	ldw	r2,176(sp)
  80099c:	10000226 	beq	r2,zero,8009a8 <___vfprintf_internal_r+0x64>
  8009a0:	10800e17 	ldw	r2,56(r2)
  8009a4:	1000f926 	beq	r2,zero,800d8c <___vfprintf_internal_r+0x448>
  8009a8:	b880030b 	ldhu	r2,12(r23)
  8009ac:	10c8000c 	andi	r3,r2,8192
  8009b0:	1800061e 	bne	r3,zero,8009cc <___vfprintf_internal_r+0x88>
  8009b4:	b9001917 	ldw	r4,100(r23)
  8009b8:	00f7ffc4 	movi	r3,-8193
  8009bc:	10880014 	ori	r2,r2,8192
  8009c0:	20c6703a 	and	r3,r4,r3
  8009c4:	b880030d 	sth	r2,12(r23)
  8009c8:	b8c01915 	stw	r3,100(r23)
  8009cc:	10c0020c 	andi	r3,r2,8
  8009d0:	1800c126 	beq	r3,zero,800cd8 <___vfprintf_internal_r+0x394>
  8009d4:	b8c00417 	ldw	r3,16(r23)
  8009d8:	1800bf26 	beq	r3,zero,800cd8 <___vfprintf_internal_r+0x394>
  8009dc:	1080068c 	andi	r2,r2,26
  8009e0:	00c00284 	movi	r3,10
  8009e4:	10c0c426 	beq	r2,r3,800cf8 <___vfprintf_internal_r+0x3b4>
  8009e8:	d8c00404 	addi	r3,sp,16
  8009ec:	05002074 	movhi	r20,129
  8009f0:	d9001e04 	addi	r4,sp,120
  8009f4:	a53e8084 	addi	r20,r20,-1534
  8009f8:	d8c01e15 	stw	r3,120(sp)
  8009fc:	d8002015 	stw	zero,128(sp)
  800a00:	d8001f15 	stw	zero,124(sp)
  800a04:	d8003315 	stw	zero,204(sp)
  800a08:	d8003615 	stw	zero,216(sp)
  800a0c:	d8003815 	stw	zero,224(sp)
  800a10:	1811883a 	mov	r8,r3
  800a14:	d8003915 	stw	zero,228(sp)
  800a18:	d8003a15 	stw	zero,232(sp)
  800a1c:	d8002f15 	stw	zero,188(sp)
  800a20:	d9002815 	stw	r4,160(sp)
  800a24:	a8800007 	ldb	r2,0(r21)
  800a28:	10027b26 	beq	r2,zero,801418 <___vfprintf_internal_r+0xad4>
  800a2c:	00c00944 	movi	r3,37
  800a30:	a821883a 	mov	r16,r21
  800a34:	10c0021e 	bne	r2,r3,800a40 <___vfprintf_internal_r+0xfc>
  800a38:	00001406 	br	800a8c <___vfprintf_internal_r+0x148>
  800a3c:	10c00326 	beq	r2,r3,800a4c <___vfprintf_internal_r+0x108>
  800a40:	84000044 	addi	r16,r16,1
  800a44:	80800007 	ldb	r2,0(r16)
  800a48:	103ffc1e 	bne	r2,zero,800a3c <__alt_data_end+0xff800a3c>
  800a4c:	8563c83a 	sub	r17,r16,r21
  800a50:	88000e26 	beq	r17,zero,800a8c <___vfprintf_internal_r+0x148>
  800a54:	d8c02017 	ldw	r3,128(sp)
  800a58:	d8801f17 	ldw	r2,124(sp)
  800a5c:	45400015 	stw	r21,0(r8)
  800a60:	1c47883a 	add	r3,r3,r17
  800a64:	10800044 	addi	r2,r2,1
  800a68:	d8c02015 	stw	r3,128(sp)
  800a6c:	44400115 	stw	r17,4(r8)
  800a70:	d8801f15 	stw	r2,124(sp)
  800a74:	00c001c4 	movi	r3,7
  800a78:	1880a716 	blt	r3,r2,800d18 <___vfprintf_internal_r+0x3d4>
  800a7c:	42000204 	addi	r8,r8,8
  800a80:	d9402f17 	ldw	r5,188(sp)
  800a84:	2c4b883a 	add	r5,r5,r17
  800a88:	d9402f15 	stw	r5,188(sp)
  800a8c:	80800007 	ldb	r2,0(r16)
  800a90:	1000a826 	beq	r2,zero,800d34 <___vfprintf_internal_r+0x3f0>
  800a94:	84400047 	ldb	r17,1(r16)
  800a98:	00bfffc4 	movi	r2,-1
  800a9c:	85400044 	addi	r21,r16,1
  800aa0:	d8002785 	stb	zero,158(sp)
  800aa4:	0007883a 	mov	r3,zero
  800aa8:	000f883a 	mov	r7,zero
  800aac:	d8802915 	stw	r2,164(sp)
  800ab0:	d8003115 	stw	zero,196(sp)
  800ab4:	0025883a 	mov	r18,zero
  800ab8:	01401604 	movi	r5,88
  800abc:	01800244 	movi	r6,9
  800ac0:	02800a84 	movi	r10,42
  800ac4:	02401b04 	movi	r9,108
  800ac8:	ad400044 	addi	r21,r21,1
  800acc:	88bff804 	addi	r2,r17,-32
  800ad0:	28830436 	bltu	r5,r2,8016e4 <___vfprintf_internal_r+0xda0>
  800ad4:	100490ba 	slli	r2,r2,2
  800ad8:	01002034 	movhi	r4,128
  800adc:	2102bb04 	addi	r4,r4,2796
  800ae0:	1105883a 	add	r2,r2,r4
  800ae4:	10800017 	ldw	r2,0(r2)
  800ae8:	1000683a 	jmp	r2
  800aec:	00801604 	movi	r2,88
  800af0:	008016e4 	muli	r2,zero,91
  800af4:	008016e4 	muli	r2,zero,91
  800af8:	00801624 	muli	r2,zero,88
  800afc:	008016e4 	muli	r2,zero,91
  800b00:	008016e4 	muli	r2,zero,91
  800b04:	008016e4 	muli	r2,zero,91
  800b08:	008016e4 	muli	r2,zero,91
  800b0c:	008016e4 	muli	r2,zero,91
  800b10:	008016e4 	muli	r2,zero,91
  800b14:	00800d98 	cmpnei	r2,zero,54
  800b18:	00801540 	call	80154 <__alt_mem_sdram-0x77feac>
  800b1c:	008016e4 	muli	r2,zero,91
  800b20:	00800c60 	cmpeqi	r2,zero,49
  800b24:	00800dc0 	call	800dc <__alt_mem_sdram-0x77ff24>
  800b28:	008016e4 	muli	r2,zero,91
  800b2c:	00800e00 	call	800e0 <__alt_mem_sdram-0x77ff20>
  800b30:	00800e0c 	andi	r2,zero,56
  800b34:	00800e0c 	andi	r2,zero,56
  800b38:	00800e0c 	andi	r2,zero,56
  800b3c:	00800e0c 	andi	r2,zero,56
  800b40:	00800e0c 	andi	r2,zero,56
  800b44:	00800e0c 	andi	r2,zero,56
  800b48:	00800e0c 	andi	r2,zero,56
  800b4c:	00800e0c 	andi	r2,zero,56
  800b50:	00800e0c 	andi	r2,zero,56
  800b54:	008016e4 	muli	r2,zero,91
  800b58:	008016e4 	muli	r2,zero,91
  800b5c:	008016e4 	muli	r2,zero,91
  800b60:	008016e4 	muli	r2,zero,91
  800b64:	008016e4 	muli	r2,zero,91
  800b68:	008016e4 	muli	r2,zero,91
  800b6c:	008016e4 	muli	r2,zero,91
  800b70:	008016e4 	muli	r2,zero,91
  800b74:	008016e4 	muli	r2,zero,91
  800b78:	008016e4 	muli	r2,zero,91
  800b7c:	00800e40 	call	800e4 <__alt_mem_sdram-0x77ff1c>
  800b80:	00800efc 	xorhi	r2,zero,59
  800b84:	008016e4 	muli	r2,zero,91
  800b88:	00800efc 	xorhi	r2,zero,59
  800b8c:	008016e4 	muli	r2,zero,91
  800b90:	008016e4 	muli	r2,zero,91
  800b94:	008016e4 	muli	r2,zero,91
  800b98:	008016e4 	muli	r2,zero,91
  800b9c:	00800f9c 	xori	r2,zero,62
  800ba0:	008016e4 	muli	r2,zero,91
  800ba4:	008016e4 	muli	r2,zero,91
  800ba8:	00800fa8 	cmpgeui	r2,zero,62
  800bac:	008016e4 	muli	r2,zero,91
  800bb0:	008016e4 	muli	r2,zero,91
  800bb4:	008016e4 	muli	r2,zero,91
  800bb8:	008016e4 	muli	r2,zero,91
  800bbc:	008016e4 	muli	r2,zero,91
  800bc0:	00801420 	cmpeqi	r2,zero,80
  800bc4:	008016e4 	muli	r2,zero,91
  800bc8:	008016e4 	muli	r2,zero,91
  800bcc:	00801480 	call	80148 <__alt_mem_sdram-0x77feb8>
  800bd0:	008016e4 	muli	r2,zero,91
  800bd4:	008016e4 	muli	r2,zero,91
  800bd8:	008016e4 	muli	r2,zero,91
  800bdc:	008016e4 	muli	r2,zero,91
  800be0:	008016e4 	muli	r2,zero,91
  800be4:	008016e4 	muli	r2,zero,91
  800be8:	008016e4 	muli	r2,zero,91
  800bec:	008016e4 	muli	r2,zero,91
  800bf0:	008016e4 	muli	r2,zero,91
  800bf4:	008016e4 	muli	r2,zero,91
  800bf8:	00801690 	cmplti	r2,zero,90
  800bfc:	00801630 	cmpltui	r2,zero,88
  800c00:	00800efc 	xorhi	r2,zero,59
  800c04:	00800efc 	xorhi	r2,zero,59
  800c08:	00800efc 	xorhi	r2,zero,59
  800c0c:	00801640 	call	80164 <__alt_mem_sdram-0x77fe9c>
  800c10:	00801630 	cmpltui	r2,zero,88
  800c14:	008016e4 	muli	r2,zero,91
  800c18:	008016e4 	muli	r2,zero,91
  800c1c:	0080164c 	andi	r2,zero,89
  800c20:	008016e4 	muli	r2,zero,91
  800c24:	0080165c 	xori	r2,zero,89
  800c28:	00801530 	cmpltui	r2,zero,84
  800c2c:	00800c6c 	andhi	r2,zero,49
  800c30:	00801550 	cmplti	r2,zero,85
  800c34:	008016e4 	muli	r2,zero,91
  800c38:	0080155c 	xori	r2,zero,85
  800c3c:	008016e4 	muli	r2,zero,91
  800c40:	008015b8 	rdprs	r2,zero,86
  800c44:	008016e4 	muli	r2,zero,91
  800c48:	008016e4 	muli	r2,zero,91
  800c4c:	008015c8 	cmpgei	r2,zero,87
  800c50:	d9003117 	ldw	r4,196(sp)
  800c54:	d8802d15 	stw	r2,180(sp)
  800c58:	0109c83a 	sub	r4,zero,r4
  800c5c:	d9003115 	stw	r4,196(sp)
  800c60:	94800114 	ori	r18,r18,4
  800c64:	ac400007 	ldb	r17,0(r21)
  800c68:	003f9706 	br	800ac8 <__alt_data_end+0xff800ac8>
  800c6c:	00800c04 	movi	r2,48
  800c70:	d9002d17 	ldw	r4,180(sp)
  800c74:	d9402917 	ldw	r5,164(sp)
  800c78:	d8802705 	stb	r2,156(sp)
  800c7c:	00801e04 	movi	r2,120
  800c80:	d8802745 	stb	r2,157(sp)
  800c84:	d8002785 	stb	zero,158(sp)
  800c88:	20c00104 	addi	r3,r4,4
  800c8c:	24c00017 	ldw	r19,0(r4)
  800c90:	002d883a 	mov	r22,zero
  800c94:	90800094 	ori	r2,r18,2
  800c98:	28029a16 	blt	r5,zero,801704 <___vfprintf_internal_r+0xdc0>
  800c9c:	00bfdfc4 	movi	r2,-129
  800ca0:	90a4703a 	and	r18,r18,r2
  800ca4:	d8c02d15 	stw	r3,180(sp)
  800ca8:	94800094 	ori	r18,r18,2
  800cac:	9802871e 	bne	r19,zero,8016cc <___vfprintf_internal_r+0xd88>
  800cb0:	00802074 	movhi	r2,129
  800cb4:	10be7904 	addi	r2,r2,-1564
  800cb8:	d8803915 	stw	r2,228(sp)
  800cbc:	04401e04 	movi	r17,120
  800cc0:	d8802917 	ldw	r2,164(sp)
  800cc4:	0039883a 	mov	fp,zero
  800cc8:	1001e926 	beq	r2,zero,801470 <___vfprintf_internal_r+0xb2c>
  800ccc:	0027883a 	mov	r19,zero
  800cd0:	002d883a 	mov	r22,zero
  800cd4:	00020506 	br	8014ec <___vfprintf_internal_r+0xba8>
  800cd8:	d9002c17 	ldw	r4,176(sp)
  800cdc:	b80b883a 	mov	r5,r23
  800ce0:	0802c140 	call	802c14 <__swsetup_r>
  800ce4:	1005ac1e 	bne	r2,zero,802398 <___vfprintf_internal_r+0x1a54>
  800ce8:	b880030b 	ldhu	r2,12(r23)
  800cec:	00c00284 	movi	r3,10
  800cf0:	1080068c 	andi	r2,r2,26
  800cf4:	10ff3c1e 	bne	r2,r3,8009e8 <__alt_data_end+0xff8009e8>
  800cf8:	b880038f 	ldh	r2,14(r23)
  800cfc:	103f3a16 	blt	r2,zero,8009e8 <__alt_data_end+0xff8009e8>
  800d00:	d9c02d17 	ldw	r7,180(sp)
  800d04:	d9002c17 	ldw	r4,176(sp)
  800d08:	a80d883a 	mov	r6,r21
  800d0c:	b80b883a 	mov	r5,r23
  800d10:	0802b580 	call	802b58 <__sbprintf>
  800d14:	00001106 	br	800d5c <___vfprintf_internal_r+0x418>
  800d18:	d9002c17 	ldw	r4,176(sp)
  800d1c:	d9801e04 	addi	r6,sp,120
  800d20:	b80b883a 	mov	r5,r23
  800d24:	08080a80 	call	8080a8 <__sprint_r>
  800d28:	1000081e 	bne	r2,zero,800d4c <___vfprintf_internal_r+0x408>
  800d2c:	da000404 	addi	r8,sp,16
  800d30:	003f5306 	br	800a80 <__alt_data_end+0xff800a80>
  800d34:	d8802017 	ldw	r2,128(sp)
  800d38:	10000426 	beq	r2,zero,800d4c <___vfprintf_internal_r+0x408>
  800d3c:	d9002c17 	ldw	r4,176(sp)
  800d40:	d9801e04 	addi	r6,sp,120
  800d44:	b80b883a 	mov	r5,r23
  800d48:	08080a80 	call	8080a8 <__sprint_r>
  800d4c:	b880030b 	ldhu	r2,12(r23)
  800d50:	1080100c 	andi	r2,r2,64
  800d54:	1005901e 	bne	r2,zero,802398 <___vfprintf_internal_r+0x1a54>
  800d58:	d8802f17 	ldw	r2,188(sp)
  800d5c:	dfc04717 	ldw	ra,284(sp)
  800d60:	df004617 	ldw	fp,280(sp)
  800d64:	ddc04517 	ldw	r23,276(sp)
  800d68:	dd804417 	ldw	r22,272(sp)
  800d6c:	dd404317 	ldw	r21,268(sp)
  800d70:	dd004217 	ldw	r20,264(sp)
  800d74:	dcc04117 	ldw	r19,260(sp)
  800d78:	dc804017 	ldw	r18,256(sp)
  800d7c:	dc403f17 	ldw	r17,252(sp)
  800d80:	dc003e17 	ldw	r16,248(sp)
  800d84:	dec04804 	addi	sp,sp,288
  800d88:	f800283a 	ret
  800d8c:	d9002c17 	ldw	r4,176(sp)
  800d90:	0804be80 	call	804be8 <__sinit>
  800d94:	003f0406 	br	8009a8 <__alt_data_end+0xff8009a8>
  800d98:	d8802d17 	ldw	r2,180(sp)
  800d9c:	d9002d17 	ldw	r4,180(sp)
  800da0:	10800017 	ldw	r2,0(r2)
  800da4:	d8803115 	stw	r2,196(sp)
  800da8:	20800104 	addi	r2,r4,4
  800dac:	d9003117 	ldw	r4,196(sp)
  800db0:	203fa716 	blt	r4,zero,800c50 <__alt_data_end+0xff800c50>
  800db4:	d8802d15 	stw	r2,180(sp)
  800db8:	ac400007 	ldb	r17,0(r21)
  800dbc:	003f4206 	br	800ac8 <__alt_data_end+0xff800ac8>
  800dc0:	ac400007 	ldb	r17,0(r21)
  800dc4:	aac00044 	addi	r11,r21,1
  800dc8:	8a872826 	beq	r17,r10,802a6c <___vfprintf_internal_r+0x2128>
  800dcc:	88bff404 	addi	r2,r17,-48
  800dd0:	0009883a 	mov	r4,zero
  800dd4:	30867d36 	bltu	r6,r2,8027cc <___vfprintf_internal_r+0x1e88>
  800dd8:	5c400007 	ldb	r17,0(r11)
  800ddc:	210002a4 	muli	r4,r4,10
  800de0:	5d400044 	addi	r21,r11,1
  800de4:	a817883a 	mov	r11,r21
  800de8:	2089883a 	add	r4,r4,r2
  800dec:	88bff404 	addi	r2,r17,-48
  800df0:	30bff92e 	bgeu	r6,r2,800dd8 <__alt_data_end+0xff800dd8>
  800df4:	2005c916 	blt	r4,zero,80251c <___vfprintf_internal_r+0x1bd8>
  800df8:	d9002915 	stw	r4,164(sp)
  800dfc:	003f3306 	br	800acc <__alt_data_end+0xff800acc>
  800e00:	94802014 	ori	r18,r18,128
  800e04:	ac400007 	ldb	r17,0(r21)
  800e08:	003f2f06 	br	800ac8 <__alt_data_end+0xff800ac8>
  800e0c:	a809883a 	mov	r4,r21
  800e10:	d8003115 	stw	zero,196(sp)
  800e14:	88bff404 	addi	r2,r17,-48
  800e18:	0017883a 	mov	r11,zero
  800e1c:	24400007 	ldb	r17,0(r4)
  800e20:	5ac002a4 	muli	r11,r11,10
  800e24:	ad400044 	addi	r21,r21,1
  800e28:	a809883a 	mov	r4,r21
  800e2c:	12d7883a 	add	r11,r2,r11
  800e30:	88bff404 	addi	r2,r17,-48
  800e34:	30bff92e 	bgeu	r6,r2,800e1c <__alt_data_end+0xff800e1c>
  800e38:	dac03115 	stw	r11,196(sp)
  800e3c:	003f2306 	br	800acc <__alt_data_end+0xff800acc>
  800e40:	18c03fcc 	andi	r3,r3,255
  800e44:	18072b1e 	bne	r3,zero,802af4 <___vfprintf_internal_r+0x21b0>
  800e48:	94800414 	ori	r18,r18,16
  800e4c:	9080080c 	andi	r2,r18,32
  800e50:	10037b26 	beq	r2,zero,801c40 <___vfprintf_internal_r+0x12fc>
  800e54:	d9402d17 	ldw	r5,180(sp)
  800e58:	28800117 	ldw	r2,4(r5)
  800e5c:	2cc00017 	ldw	r19,0(r5)
  800e60:	29400204 	addi	r5,r5,8
  800e64:	d9402d15 	stw	r5,180(sp)
  800e68:	102d883a 	mov	r22,r2
  800e6c:	10044b16 	blt	r2,zero,801f9c <___vfprintf_internal_r+0x1658>
  800e70:	d9402917 	ldw	r5,164(sp)
  800e74:	df002783 	ldbu	fp,158(sp)
  800e78:	2803bc16 	blt	r5,zero,801d6c <___vfprintf_internal_r+0x1428>
  800e7c:	00ffdfc4 	movi	r3,-129
  800e80:	9d84b03a 	or	r2,r19,r22
  800e84:	90e4703a 	and	r18,r18,r3
  800e88:	10017726 	beq	r2,zero,801468 <___vfprintf_internal_r+0xb24>
  800e8c:	b0038326 	beq	r22,zero,801c9c <___vfprintf_internal_r+0x1358>
  800e90:	dc402a15 	stw	r17,168(sp)
  800e94:	dc001e04 	addi	r16,sp,120
  800e98:	b023883a 	mov	r17,r22
  800e9c:	402d883a 	mov	r22,r8
  800ea0:	9809883a 	mov	r4,r19
  800ea4:	880b883a 	mov	r5,r17
  800ea8:	01800284 	movi	r6,10
  800eac:	000f883a 	mov	r7,zero
  800eb0:	080a4a00 	call	80a4a0 <__umoddi3>
  800eb4:	10800c04 	addi	r2,r2,48
  800eb8:	843fffc4 	addi	r16,r16,-1
  800ebc:	9809883a 	mov	r4,r19
  800ec0:	880b883a 	mov	r5,r17
  800ec4:	80800005 	stb	r2,0(r16)
  800ec8:	01800284 	movi	r6,10
  800ecc:	000f883a 	mov	r7,zero
  800ed0:	0809f280 	call	809f28 <__udivdi3>
  800ed4:	1027883a 	mov	r19,r2
  800ed8:	10c4b03a 	or	r2,r2,r3
  800edc:	1823883a 	mov	r17,r3
  800ee0:	103fef1e 	bne	r2,zero,800ea0 <__alt_data_end+0xff800ea0>
  800ee4:	d8c02817 	ldw	r3,160(sp)
  800ee8:	dc402a17 	ldw	r17,168(sp)
  800eec:	b011883a 	mov	r8,r22
  800ef0:	1c07c83a 	sub	r3,r3,r16
  800ef4:	d8c02e15 	stw	r3,184(sp)
  800ef8:	00005906 	br	801060 <___vfprintf_internal_r+0x71c>
  800efc:	18c03fcc 	andi	r3,r3,255
  800f00:	1806fa1e 	bne	r3,zero,802aec <___vfprintf_internal_r+0x21a8>
  800f04:	9080020c 	andi	r2,r18,8
  800f08:	10048a26 	beq	r2,zero,802134 <___vfprintf_internal_r+0x17f0>
  800f0c:	d8c02d17 	ldw	r3,180(sp)
  800f10:	d9002d17 	ldw	r4,180(sp)
  800f14:	d9402d17 	ldw	r5,180(sp)
  800f18:	18c00017 	ldw	r3,0(r3)
  800f1c:	21000117 	ldw	r4,4(r4)
  800f20:	29400204 	addi	r5,r5,8
  800f24:	d8c03615 	stw	r3,216(sp)
  800f28:	d9003815 	stw	r4,224(sp)
  800f2c:	d9402d15 	stw	r5,180(sp)
  800f30:	d9003617 	ldw	r4,216(sp)
  800f34:	d9403817 	ldw	r5,224(sp)
  800f38:	da003d15 	stw	r8,244(sp)
  800f3c:	04000044 	movi	r16,1
  800f40:	0807ccc0 	call	807ccc <__fpclassifyd>
  800f44:	da003d17 	ldw	r8,244(sp)
  800f48:	14041f1e 	bne	r2,r16,801fc8 <___vfprintf_internal_r+0x1684>
  800f4c:	d9003617 	ldw	r4,216(sp)
  800f50:	d9403817 	ldw	r5,224(sp)
  800f54:	000d883a 	mov	r6,zero
  800f58:	000f883a 	mov	r7,zero
  800f5c:	080bcd00 	call	80bcd0 <__ledf2>
  800f60:	da003d17 	ldw	r8,244(sp)
  800f64:	1005be16 	blt	r2,zero,802660 <___vfprintf_internal_r+0x1d1c>
  800f68:	df002783 	ldbu	fp,158(sp)
  800f6c:	008011c4 	movi	r2,71
  800f70:	1445330e 	bge	r2,r17,802440 <___vfprintf_internal_r+0x1afc>
  800f74:	04002074 	movhi	r16,129
  800f78:	843e7104 	addi	r16,r16,-1596
  800f7c:	00c000c4 	movi	r3,3
  800f80:	00bfdfc4 	movi	r2,-129
  800f84:	d8c02a15 	stw	r3,168(sp)
  800f88:	90a4703a 	and	r18,r18,r2
  800f8c:	d8c02e15 	stw	r3,184(sp)
  800f90:	d8002915 	stw	zero,164(sp)
  800f94:	d8003215 	stw	zero,200(sp)
  800f98:	00003706 	br	801078 <___vfprintf_internal_r+0x734>
  800f9c:	94800214 	ori	r18,r18,8
  800fa0:	ac400007 	ldb	r17,0(r21)
  800fa4:	003ec806 	br	800ac8 <__alt_data_end+0xff800ac8>
  800fa8:	18c03fcc 	andi	r3,r3,255
  800fac:	1806db1e 	bne	r3,zero,802b1c <___vfprintf_internal_r+0x21d8>
  800fb0:	94800414 	ori	r18,r18,16
  800fb4:	9080080c 	andi	r2,r18,32
  800fb8:	1002d826 	beq	r2,zero,801b1c <___vfprintf_internal_r+0x11d8>
  800fbc:	d9402d17 	ldw	r5,180(sp)
  800fc0:	d8c02917 	ldw	r3,164(sp)
  800fc4:	d8002785 	stb	zero,158(sp)
  800fc8:	28800204 	addi	r2,r5,8
  800fcc:	2cc00017 	ldw	r19,0(r5)
  800fd0:	2d800117 	ldw	r22,4(r5)
  800fd4:	18048f16 	blt	r3,zero,802214 <___vfprintf_internal_r+0x18d0>
  800fd8:	013fdfc4 	movi	r4,-129
  800fdc:	9d86b03a 	or	r3,r19,r22
  800fe0:	d8802d15 	stw	r2,180(sp)
  800fe4:	9124703a 	and	r18,r18,r4
  800fe8:	1802d91e 	bne	r3,zero,801b50 <___vfprintf_internal_r+0x120c>
  800fec:	d8c02917 	ldw	r3,164(sp)
  800ff0:	0039883a 	mov	fp,zero
  800ff4:	1805c326 	beq	r3,zero,802704 <___vfprintf_internal_r+0x1dc0>
  800ff8:	0027883a 	mov	r19,zero
  800ffc:	002d883a 	mov	r22,zero
  801000:	dc001e04 	addi	r16,sp,120
  801004:	9806d0fa 	srli	r3,r19,3
  801008:	b008977a 	slli	r4,r22,29
  80100c:	b02cd0fa 	srli	r22,r22,3
  801010:	9cc001cc 	andi	r19,r19,7
  801014:	98800c04 	addi	r2,r19,48
  801018:	843fffc4 	addi	r16,r16,-1
  80101c:	20e6b03a 	or	r19,r4,r3
  801020:	80800005 	stb	r2,0(r16)
  801024:	9d86b03a 	or	r3,r19,r22
  801028:	183ff61e 	bne	r3,zero,801004 <__alt_data_end+0xff801004>
  80102c:	90c0004c 	andi	r3,r18,1
  801030:	18013b26 	beq	r3,zero,801520 <___vfprintf_internal_r+0xbdc>
  801034:	10803fcc 	andi	r2,r2,255
  801038:	1080201c 	xori	r2,r2,128
  80103c:	10bfe004 	addi	r2,r2,-128
  801040:	00c00c04 	movi	r3,48
  801044:	10c13626 	beq	r2,r3,801520 <___vfprintf_internal_r+0xbdc>
  801048:	80ffffc5 	stb	r3,-1(r16)
  80104c:	d8c02817 	ldw	r3,160(sp)
  801050:	80bfffc4 	addi	r2,r16,-1
  801054:	1021883a 	mov	r16,r2
  801058:	1887c83a 	sub	r3,r3,r2
  80105c:	d8c02e15 	stw	r3,184(sp)
  801060:	d8802e17 	ldw	r2,184(sp)
  801064:	d9002917 	ldw	r4,164(sp)
  801068:	1100010e 	bge	r2,r4,801070 <___vfprintf_internal_r+0x72c>
  80106c:	2005883a 	mov	r2,r4
  801070:	d8802a15 	stw	r2,168(sp)
  801074:	d8003215 	stw	zero,200(sp)
  801078:	e7003fcc 	andi	fp,fp,255
  80107c:	e700201c 	xori	fp,fp,128
  801080:	e73fe004 	addi	fp,fp,-128
  801084:	e0000326 	beq	fp,zero,801094 <___vfprintf_internal_r+0x750>
  801088:	d8c02a17 	ldw	r3,168(sp)
  80108c:	18c00044 	addi	r3,r3,1
  801090:	d8c02a15 	stw	r3,168(sp)
  801094:	90c0008c 	andi	r3,r18,2
  801098:	d8c02b15 	stw	r3,172(sp)
  80109c:	18000326 	beq	r3,zero,8010ac <___vfprintf_internal_r+0x768>
  8010a0:	d8c02a17 	ldw	r3,168(sp)
  8010a4:	18c00084 	addi	r3,r3,2
  8010a8:	d8c02a15 	stw	r3,168(sp)
  8010ac:	90c0210c 	andi	r3,r18,132
  8010b0:	d8c03015 	stw	r3,192(sp)
  8010b4:	1801a31e 	bne	r3,zero,801744 <___vfprintf_internal_r+0xe00>
  8010b8:	d9003117 	ldw	r4,196(sp)
  8010bc:	d8c02a17 	ldw	r3,168(sp)
  8010c0:	20e7c83a 	sub	r19,r4,r3
  8010c4:	04c19f0e 	bge	zero,r19,801744 <___vfprintf_internal_r+0xe00>
  8010c8:	02400404 	movi	r9,16
  8010cc:	d8c02017 	ldw	r3,128(sp)
  8010d0:	d8801f17 	ldw	r2,124(sp)
  8010d4:	4cc50d0e 	bge	r9,r19,80250c <___vfprintf_internal_r+0x1bc8>
  8010d8:	01402074 	movhi	r5,129
  8010dc:	297e8484 	addi	r5,r5,-1518
  8010e0:	dc403b15 	stw	r17,236(sp)
  8010e4:	d9403515 	stw	r5,212(sp)
  8010e8:	9823883a 	mov	r17,r19
  8010ec:	482d883a 	mov	r22,r9
  8010f0:	9027883a 	mov	r19,r18
  8010f4:	070001c4 	movi	fp,7
  8010f8:	8025883a 	mov	r18,r16
  8010fc:	dc002c17 	ldw	r16,176(sp)
  801100:	00000306 	br	801110 <___vfprintf_internal_r+0x7cc>
  801104:	8c7ffc04 	addi	r17,r17,-16
  801108:	42000204 	addi	r8,r8,8
  80110c:	b440130e 	bge	r22,r17,80115c <___vfprintf_internal_r+0x818>
  801110:	01002074 	movhi	r4,129
  801114:	18c00404 	addi	r3,r3,16
  801118:	10800044 	addi	r2,r2,1
  80111c:	213e8484 	addi	r4,r4,-1518
  801120:	41000015 	stw	r4,0(r8)
  801124:	45800115 	stw	r22,4(r8)
  801128:	d8c02015 	stw	r3,128(sp)
  80112c:	d8801f15 	stw	r2,124(sp)
  801130:	e0bff40e 	bge	fp,r2,801104 <__alt_data_end+0xff801104>
  801134:	d9801e04 	addi	r6,sp,120
  801138:	b80b883a 	mov	r5,r23
  80113c:	8009883a 	mov	r4,r16
  801140:	08080a80 	call	8080a8 <__sprint_r>
  801144:	103f011e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  801148:	8c7ffc04 	addi	r17,r17,-16
  80114c:	d8c02017 	ldw	r3,128(sp)
  801150:	d8801f17 	ldw	r2,124(sp)
  801154:	da000404 	addi	r8,sp,16
  801158:	b47fed16 	blt	r22,r17,801110 <__alt_data_end+0xff801110>
  80115c:	9021883a 	mov	r16,r18
  801160:	9825883a 	mov	r18,r19
  801164:	8827883a 	mov	r19,r17
  801168:	dc403b17 	ldw	r17,236(sp)
  80116c:	d9403517 	ldw	r5,212(sp)
  801170:	98c7883a 	add	r3,r19,r3
  801174:	10800044 	addi	r2,r2,1
  801178:	41400015 	stw	r5,0(r8)
  80117c:	44c00115 	stw	r19,4(r8)
  801180:	d8c02015 	stw	r3,128(sp)
  801184:	d8801f15 	stw	r2,124(sp)
  801188:	010001c4 	movi	r4,7
  80118c:	2082a316 	blt	r4,r2,801c1c <___vfprintf_internal_r+0x12d8>
  801190:	df002787 	ldb	fp,158(sp)
  801194:	42000204 	addi	r8,r8,8
  801198:	e0000c26 	beq	fp,zero,8011cc <___vfprintf_internal_r+0x888>
  80119c:	d8801f17 	ldw	r2,124(sp)
  8011a0:	d9002784 	addi	r4,sp,158
  8011a4:	18c00044 	addi	r3,r3,1
  8011a8:	10800044 	addi	r2,r2,1
  8011ac:	41000015 	stw	r4,0(r8)
  8011b0:	01000044 	movi	r4,1
  8011b4:	41000115 	stw	r4,4(r8)
  8011b8:	d8c02015 	stw	r3,128(sp)
  8011bc:	d8801f15 	stw	r2,124(sp)
  8011c0:	010001c4 	movi	r4,7
  8011c4:	20823c16 	blt	r4,r2,801ab8 <___vfprintf_internal_r+0x1174>
  8011c8:	42000204 	addi	r8,r8,8
  8011cc:	d8802b17 	ldw	r2,172(sp)
  8011d0:	10000c26 	beq	r2,zero,801204 <___vfprintf_internal_r+0x8c0>
  8011d4:	d8801f17 	ldw	r2,124(sp)
  8011d8:	d9002704 	addi	r4,sp,156
  8011dc:	18c00084 	addi	r3,r3,2
  8011e0:	10800044 	addi	r2,r2,1
  8011e4:	41000015 	stw	r4,0(r8)
  8011e8:	01000084 	movi	r4,2
  8011ec:	41000115 	stw	r4,4(r8)
  8011f0:	d8c02015 	stw	r3,128(sp)
  8011f4:	d8801f15 	stw	r2,124(sp)
  8011f8:	010001c4 	movi	r4,7
  8011fc:	20823616 	blt	r4,r2,801ad8 <___vfprintf_internal_r+0x1194>
  801200:	42000204 	addi	r8,r8,8
  801204:	d9003017 	ldw	r4,192(sp)
  801208:	00802004 	movi	r2,128
  80120c:	20819926 	beq	r4,r2,801874 <___vfprintf_internal_r+0xf30>
  801210:	d9402917 	ldw	r5,164(sp)
  801214:	d8802e17 	ldw	r2,184(sp)
  801218:	28adc83a 	sub	r22,r5,r2
  80121c:	0580310e 	bge	zero,r22,8012e4 <___vfprintf_internal_r+0x9a0>
  801220:	07000404 	movi	fp,16
  801224:	d8801f17 	ldw	r2,124(sp)
  801228:	e584140e 	bge	fp,r22,80227c <___vfprintf_internal_r+0x1938>
  80122c:	01402074 	movhi	r5,129
  801230:	297e8084 	addi	r5,r5,-1534
  801234:	dc402915 	stw	r17,164(sp)
  801238:	d9402b15 	stw	r5,172(sp)
  80123c:	b023883a 	mov	r17,r22
  801240:	04c001c4 	movi	r19,7
  801244:	a82d883a 	mov	r22,r21
  801248:	902b883a 	mov	r21,r18
  80124c:	8025883a 	mov	r18,r16
  801250:	dc002c17 	ldw	r16,176(sp)
  801254:	00000306 	br	801264 <___vfprintf_internal_r+0x920>
  801258:	8c7ffc04 	addi	r17,r17,-16
  80125c:	42000204 	addi	r8,r8,8
  801260:	e440110e 	bge	fp,r17,8012a8 <___vfprintf_internal_r+0x964>
  801264:	18c00404 	addi	r3,r3,16
  801268:	10800044 	addi	r2,r2,1
  80126c:	45000015 	stw	r20,0(r8)
  801270:	47000115 	stw	fp,4(r8)
  801274:	d8c02015 	stw	r3,128(sp)
  801278:	d8801f15 	stw	r2,124(sp)
  80127c:	98bff60e 	bge	r19,r2,801258 <__alt_data_end+0xff801258>
  801280:	d9801e04 	addi	r6,sp,120
  801284:	b80b883a 	mov	r5,r23
  801288:	8009883a 	mov	r4,r16
  80128c:	08080a80 	call	8080a8 <__sprint_r>
  801290:	103eae1e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  801294:	8c7ffc04 	addi	r17,r17,-16
  801298:	d8c02017 	ldw	r3,128(sp)
  80129c:	d8801f17 	ldw	r2,124(sp)
  8012a0:	da000404 	addi	r8,sp,16
  8012a4:	e47fef16 	blt	fp,r17,801264 <__alt_data_end+0xff801264>
  8012a8:	9021883a 	mov	r16,r18
  8012ac:	a825883a 	mov	r18,r21
  8012b0:	b02b883a 	mov	r21,r22
  8012b4:	882d883a 	mov	r22,r17
  8012b8:	dc402917 	ldw	r17,164(sp)
  8012bc:	d9002b17 	ldw	r4,172(sp)
  8012c0:	1d87883a 	add	r3,r3,r22
  8012c4:	10800044 	addi	r2,r2,1
  8012c8:	41000015 	stw	r4,0(r8)
  8012cc:	45800115 	stw	r22,4(r8)
  8012d0:	d8c02015 	stw	r3,128(sp)
  8012d4:	d8801f15 	stw	r2,124(sp)
  8012d8:	010001c4 	movi	r4,7
  8012dc:	2081ee16 	blt	r4,r2,801a98 <___vfprintf_internal_r+0x1154>
  8012e0:	42000204 	addi	r8,r8,8
  8012e4:	9080400c 	andi	r2,r18,256
  8012e8:	1001181e 	bne	r2,zero,80174c <___vfprintf_internal_r+0xe08>
  8012ec:	d9402e17 	ldw	r5,184(sp)
  8012f0:	d8801f17 	ldw	r2,124(sp)
  8012f4:	44000015 	stw	r16,0(r8)
  8012f8:	1947883a 	add	r3,r3,r5
  8012fc:	10800044 	addi	r2,r2,1
  801300:	41400115 	stw	r5,4(r8)
  801304:	d8c02015 	stw	r3,128(sp)
  801308:	d8801f15 	stw	r2,124(sp)
  80130c:	010001c4 	movi	r4,7
  801310:	2081d316 	blt	r4,r2,801a60 <___vfprintf_internal_r+0x111c>
  801314:	42000204 	addi	r8,r8,8
  801318:	9480010c 	andi	r18,r18,4
  80131c:	90003226 	beq	r18,zero,8013e8 <___vfprintf_internal_r+0xaa4>
  801320:	d9403117 	ldw	r5,196(sp)
  801324:	d8802a17 	ldw	r2,168(sp)
  801328:	28a1c83a 	sub	r16,r5,r2
  80132c:	04002e0e 	bge	zero,r16,8013e8 <___vfprintf_internal_r+0xaa4>
  801330:	04400404 	movi	r17,16
  801334:	d8801f17 	ldw	r2,124(sp)
  801338:	8c04a20e 	bge	r17,r16,8025c4 <___vfprintf_internal_r+0x1c80>
  80133c:	01402074 	movhi	r5,129
  801340:	297e8484 	addi	r5,r5,-1518
  801344:	d9403515 	stw	r5,212(sp)
  801348:	048001c4 	movi	r18,7
  80134c:	dcc02c17 	ldw	r19,176(sp)
  801350:	00000306 	br	801360 <___vfprintf_internal_r+0xa1c>
  801354:	843ffc04 	addi	r16,r16,-16
  801358:	42000204 	addi	r8,r8,8
  80135c:	8c00130e 	bge	r17,r16,8013ac <___vfprintf_internal_r+0xa68>
  801360:	01002074 	movhi	r4,129
  801364:	18c00404 	addi	r3,r3,16
  801368:	10800044 	addi	r2,r2,1
  80136c:	213e8484 	addi	r4,r4,-1518
  801370:	41000015 	stw	r4,0(r8)
  801374:	44400115 	stw	r17,4(r8)
  801378:	d8c02015 	stw	r3,128(sp)
  80137c:	d8801f15 	stw	r2,124(sp)
  801380:	90bff40e 	bge	r18,r2,801354 <__alt_data_end+0xff801354>
  801384:	d9801e04 	addi	r6,sp,120
  801388:	b80b883a 	mov	r5,r23
  80138c:	9809883a 	mov	r4,r19
  801390:	08080a80 	call	8080a8 <__sprint_r>
  801394:	103e6d1e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  801398:	843ffc04 	addi	r16,r16,-16
  80139c:	d8c02017 	ldw	r3,128(sp)
  8013a0:	d8801f17 	ldw	r2,124(sp)
  8013a4:	da000404 	addi	r8,sp,16
  8013a8:	8c3fed16 	blt	r17,r16,801360 <__alt_data_end+0xff801360>
  8013ac:	d9403517 	ldw	r5,212(sp)
  8013b0:	1c07883a 	add	r3,r3,r16
  8013b4:	10800044 	addi	r2,r2,1
  8013b8:	41400015 	stw	r5,0(r8)
  8013bc:	44000115 	stw	r16,4(r8)
  8013c0:	d8c02015 	stw	r3,128(sp)
  8013c4:	d8801f15 	stw	r2,124(sp)
  8013c8:	010001c4 	movi	r4,7
  8013cc:	2080060e 	bge	r4,r2,8013e8 <___vfprintf_internal_r+0xaa4>
  8013d0:	d9002c17 	ldw	r4,176(sp)
  8013d4:	d9801e04 	addi	r6,sp,120
  8013d8:	b80b883a 	mov	r5,r23
  8013dc:	08080a80 	call	8080a8 <__sprint_r>
  8013e0:	103e5a1e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  8013e4:	d8c02017 	ldw	r3,128(sp)
  8013e8:	d8803117 	ldw	r2,196(sp)
  8013ec:	d9002a17 	ldw	r4,168(sp)
  8013f0:	1100010e 	bge	r2,r4,8013f8 <___vfprintf_internal_r+0xab4>
  8013f4:	2005883a 	mov	r2,r4
  8013f8:	d9402f17 	ldw	r5,188(sp)
  8013fc:	288b883a 	add	r5,r5,r2
  801400:	d9402f15 	stw	r5,188(sp)
  801404:	18019e1e 	bne	r3,zero,801a80 <___vfprintf_internal_r+0x113c>
  801408:	a8800007 	ldb	r2,0(r21)
  80140c:	d8001f15 	stw	zero,124(sp)
  801410:	da000404 	addi	r8,sp,16
  801414:	103d851e 	bne	r2,zero,800a2c <__alt_data_end+0xff800a2c>
  801418:	a821883a 	mov	r16,r21
  80141c:	003d9b06 	br	800a8c <__alt_data_end+0xff800a8c>
  801420:	18c03fcc 	andi	r3,r3,255
  801424:	1805c11e 	bne	r3,zero,802b2c <___vfprintf_internal_r+0x21e8>
  801428:	94800414 	ori	r18,r18,16
  80142c:	9080080c 	andi	r2,r18,32
  801430:	10020c26 	beq	r2,zero,801c64 <___vfprintf_internal_r+0x1320>
  801434:	d8802d17 	ldw	r2,180(sp)
  801438:	d9002917 	ldw	r4,164(sp)
  80143c:	d8002785 	stb	zero,158(sp)
  801440:	10c00204 	addi	r3,r2,8
  801444:	14c00017 	ldw	r19,0(r2)
  801448:	15800117 	ldw	r22,4(r2)
  80144c:	20040f16 	blt	r4,zero,80248c <___vfprintf_internal_r+0x1b48>
  801450:	013fdfc4 	movi	r4,-129
  801454:	9d84b03a 	or	r2,r19,r22
  801458:	d8c02d15 	stw	r3,180(sp)
  80145c:	9124703a 	and	r18,r18,r4
  801460:	0039883a 	mov	fp,zero
  801464:	103e891e 	bne	r2,zero,800e8c <__alt_data_end+0xff800e8c>
  801468:	d9002917 	ldw	r4,164(sp)
  80146c:	2002c11e 	bne	r4,zero,801f74 <___vfprintf_internal_r+0x1630>
  801470:	d8002915 	stw	zero,164(sp)
  801474:	d8002e15 	stw	zero,184(sp)
  801478:	dc001e04 	addi	r16,sp,120
  80147c:	003ef806 	br	801060 <__alt_data_end+0xff801060>
  801480:	18c03fcc 	andi	r3,r3,255
  801484:	18059d1e 	bne	r3,zero,802afc <___vfprintf_internal_r+0x21b8>
  801488:	01402074 	movhi	r5,129
  80148c:	297e7404 	addi	r5,r5,-1584
  801490:	d9403915 	stw	r5,228(sp)
  801494:	9080080c 	andi	r2,r18,32
  801498:	10005226 	beq	r2,zero,8015e4 <___vfprintf_internal_r+0xca0>
  80149c:	d8802d17 	ldw	r2,180(sp)
  8014a0:	14c00017 	ldw	r19,0(r2)
  8014a4:	15800117 	ldw	r22,4(r2)
  8014a8:	10800204 	addi	r2,r2,8
  8014ac:	d8802d15 	stw	r2,180(sp)
  8014b0:	9080004c 	andi	r2,r18,1
  8014b4:	10019026 	beq	r2,zero,801af8 <___vfprintf_internal_r+0x11b4>
  8014b8:	9d84b03a 	or	r2,r19,r22
  8014bc:	10036926 	beq	r2,zero,802264 <___vfprintf_internal_r+0x1920>
  8014c0:	d8c02917 	ldw	r3,164(sp)
  8014c4:	00800c04 	movi	r2,48
  8014c8:	d8802705 	stb	r2,156(sp)
  8014cc:	dc402745 	stb	r17,157(sp)
  8014d0:	d8002785 	stb	zero,158(sp)
  8014d4:	90800094 	ori	r2,r18,2
  8014d8:	18045d16 	blt	r3,zero,802650 <___vfprintf_internal_r+0x1d0c>
  8014dc:	00bfdfc4 	movi	r2,-129
  8014e0:	90a4703a 	and	r18,r18,r2
  8014e4:	94800094 	ori	r18,r18,2
  8014e8:	0039883a 	mov	fp,zero
  8014ec:	d9003917 	ldw	r4,228(sp)
  8014f0:	dc001e04 	addi	r16,sp,120
  8014f4:	988003cc 	andi	r2,r19,15
  8014f8:	b006973a 	slli	r3,r22,28
  8014fc:	2085883a 	add	r2,r4,r2
  801500:	9826d13a 	srli	r19,r19,4
  801504:	10800003 	ldbu	r2,0(r2)
  801508:	b02cd13a 	srli	r22,r22,4
  80150c:	843fffc4 	addi	r16,r16,-1
  801510:	1ce6b03a 	or	r19,r3,r19
  801514:	80800005 	stb	r2,0(r16)
  801518:	9d84b03a 	or	r2,r19,r22
  80151c:	103ff51e 	bne	r2,zero,8014f4 <__alt_data_end+0xff8014f4>
  801520:	d8c02817 	ldw	r3,160(sp)
  801524:	1c07c83a 	sub	r3,r3,r16
  801528:	d8c02e15 	stw	r3,184(sp)
  80152c:	003ecc06 	br	801060 <__alt_data_end+0xff801060>
  801530:	18c03fcc 	andi	r3,r3,255
  801534:	183e9f26 	beq	r3,zero,800fb4 <__alt_data_end+0xff800fb4>
  801538:	d9c02785 	stb	r7,158(sp)
  80153c:	003e9d06 	br	800fb4 <__alt_data_end+0xff800fb4>
  801540:	00c00044 	movi	r3,1
  801544:	01c00ac4 	movi	r7,43
  801548:	ac400007 	ldb	r17,0(r21)
  80154c:	003d5e06 	br	800ac8 <__alt_data_end+0xff800ac8>
  801550:	94800814 	ori	r18,r18,32
  801554:	ac400007 	ldb	r17,0(r21)
  801558:	003d5b06 	br	800ac8 <__alt_data_end+0xff800ac8>
  80155c:	d8c02d17 	ldw	r3,180(sp)
  801560:	d8002785 	stb	zero,158(sp)
  801564:	1c000017 	ldw	r16,0(r3)
  801568:	1cc00104 	addi	r19,r3,4
  80156c:	80041926 	beq	r16,zero,8025d4 <___vfprintf_internal_r+0x1c90>
  801570:	d9002917 	ldw	r4,164(sp)
  801574:	2003d016 	blt	r4,zero,8024b8 <___vfprintf_internal_r+0x1b74>
  801578:	200d883a 	mov	r6,r4
  80157c:	000b883a 	mov	r5,zero
  801580:	8009883a 	mov	r4,r16
  801584:	da003d15 	stw	r8,244(sp)
  801588:	08061540 	call	806154 <memchr>
  80158c:	da003d17 	ldw	r8,244(sp)
  801590:	10045426 	beq	r2,zero,8026e4 <___vfprintf_internal_r+0x1da0>
  801594:	1405c83a 	sub	r2,r2,r16
  801598:	d8802e15 	stw	r2,184(sp)
  80159c:	1003cc16 	blt	r2,zero,8024d0 <___vfprintf_internal_r+0x1b8c>
  8015a0:	df002783 	ldbu	fp,158(sp)
  8015a4:	d8802a15 	stw	r2,168(sp)
  8015a8:	dcc02d15 	stw	r19,180(sp)
  8015ac:	d8002915 	stw	zero,164(sp)
  8015b0:	d8003215 	stw	zero,200(sp)
  8015b4:	003eb006 	br	801078 <__alt_data_end+0xff801078>
  8015b8:	18c03fcc 	andi	r3,r3,255
  8015bc:	183f9b26 	beq	r3,zero,80142c <__alt_data_end+0xff80142c>
  8015c0:	d9c02785 	stb	r7,158(sp)
  8015c4:	003f9906 	br	80142c <__alt_data_end+0xff80142c>
  8015c8:	18c03fcc 	andi	r3,r3,255
  8015cc:	1805551e 	bne	r3,zero,802b24 <___vfprintf_internal_r+0x21e0>
  8015d0:	01402074 	movhi	r5,129
  8015d4:	297e7904 	addi	r5,r5,-1564
  8015d8:	d9403915 	stw	r5,228(sp)
  8015dc:	9080080c 	andi	r2,r18,32
  8015e0:	103fae1e 	bne	r2,zero,80149c <__alt_data_end+0xff80149c>
  8015e4:	9080040c 	andi	r2,r18,16
  8015e8:	1002de26 	beq	r2,zero,802164 <___vfprintf_internal_r+0x1820>
  8015ec:	d8c02d17 	ldw	r3,180(sp)
  8015f0:	002d883a 	mov	r22,zero
  8015f4:	1cc00017 	ldw	r19,0(r3)
  8015f8:	18c00104 	addi	r3,r3,4
  8015fc:	d8c02d15 	stw	r3,180(sp)
  801600:	003fab06 	br	8014b0 <__alt_data_end+0xff8014b0>
  801604:	38803fcc 	andi	r2,r7,255
  801608:	1080201c 	xori	r2,r2,128
  80160c:	10bfe004 	addi	r2,r2,-128
  801610:	1002d21e 	bne	r2,zero,80215c <___vfprintf_internal_r+0x1818>
  801614:	00c00044 	movi	r3,1
  801618:	01c00804 	movi	r7,32
  80161c:	ac400007 	ldb	r17,0(r21)
  801620:	003d2906 	br	800ac8 <__alt_data_end+0xff800ac8>
  801624:	94800054 	ori	r18,r18,1
  801628:	ac400007 	ldb	r17,0(r21)
  80162c:	003d2606 	br	800ac8 <__alt_data_end+0xff800ac8>
  801630:	18c03fcc 	andi	r3,r3,255
  801634:	183e0526 	beq	r3,zero,800e4c <__alt_data_end+0xff800e4c>
  801638:	d9c02785 	stb	r7,158(sp)
  80163c:	003e0306 	br	800e4c <__alt_data_end+0xff800e4c>
  801640:	94801014 	ori	r18,r18,64
  801644:	ac400007 	ldb	r17,0(r21)
  801648:	003d1f06 	br	800ac8 <__alt_data_end+0xff800ac8>
  80164c:	ac400007 	ldb	r17,0(r21)
  801650:	8a438726 	beq	r17,r9,802470 <___vfprintf_internal_r+0x1b2c>
  801654:	94800414 	ori	r18,r18,16
  801658:	003d1b06 	br	800ac8 <__alt_data_end+0xff800ac8>
  80165c:	18c03fcc 	andi	r3,r3,255
  801660:	1805341e 	bne	r3,zero,802b34 <___vfprintf_internal_r+0x21f0>
  801664:	9080080c 	andi	r2,r18,32
  801668:	1002cd26 	beq	r2,zero,8021a0 <___vfprintf_internal_r+0x185c>
  80166c:	d9402d17 	ldw	r5,180(sp)
  801670:	d9002f17 	ldw	r4,188(sp)
  801674:	28800017 	ldw	r2,0(r5)
  801678:	2007d7fa 	srai	r3,r4,31
  80167c:	29400104 	addi	r5,r5,4
  801680:	d9402d15 	stw	r5,180(sp)
  801684:	11000015 	stw	r4,0(r2)
  801688:	10c00115 	stw	r3,4(r2)
  80168c:	003ce506 	br	800a24 <__alt_data_end+0xff800a24>
  801690:	d8c02d17 	ldw	r3,180(sp)
  801694:	d9002d17 	ldw	r4,180(sp)
  801698:	d8002785 	stb	zero,158(sp)
  80169c:	18800017 	ldw	r2,0(r3)
  8016a0:	21000104 	addi	r4,r4,4
  8016a4:	00c00044 	movi	r3,1
  8016a8:	d8c02a15 	stw	r3,168(sp)
  8016ac:	d8801405 	stb	r2,80(sp)
  8016b0:	d9002d15 	stw	r4,180(sp)
  8016b4:	d8c02e15 	stw	r3,184(sp)
  8016b8:	d8002915 	stw	zero,164(sp)
  8016bc:	d8003215 	stw	zero,200(sp)
  8016c0:	dc001404 	addi	r16,sp,80
  8016c4:	0039883a 	mov	fp,zero
  8016c8:	003e7206 	br	801094 <__alt_data_end+0xff801094>
  8016cc:	01002074 	movhi	r4,129
  8016d0:	213e7904 	addi	r4,r4,-1564
  8016d4:	0039883a 	mov	fp,zero
  8016d8:	d9003915 	stw	r4,228(sp)
  8016dc:	04401e04 	movi	r17,120
  8016e0:	003f8206 	br	8014ec <__alt_data_end+0xff8014ec>
  8016e4:	18c03fcc 	andi	r3,r3,255
  8016e8:	1805061e 	bne	r3,zero,802b04 <___vfprintf_internal_r+0x21c0>
  8016ec:	883d9126 	beq	r17,zero,800d34 <__alt_data_end+0xff800d34>
  8016f0:	00c00044 	movi	r3,1
  8016f4:	d8c02a15 	stw	r3,168(sp)
  8016f8:	dc401405 	stb	r17,80(sp)
  8016fc:	d8002785 	stb	zero,158(sp)
  801700:	003fec06 	br	8016b4 <__alt_data_end+0xff8016b4>
  801704:	01402074 	movhi	r5,129
  801708:	297e7904 	addi	r5,r5,-1564
  80170c:	d9403915 	stw	r5,228(sp)
  801710:	d8c02d15 	stw	r3,180(sp)
  801714:	1025883a 	mov	r18,r2
  801718:	04401e04 	movi	r17,120
  80171c:	9d84b03a 	or	r2,r19,r22
  801720:	1000fc1e 	bne	r2,zero,801b14 <___vfprintf_internal_r+0x11d0>
  801724:	0039883a 	mov	fp,zero
  801728:	00800084 	movi	r2,2
  80172c:	10803fcc 	andi	r2,r2,255
  801730:	00c00044 	movi	r3,1
  801734:	10c20f26 	beq	r2,r3,801f74 <___vfprintf_internal_r+0x1630>
  801738:	00c00084 	movi	r3,2
  80173c:	10fd6326 	beq	r2,r3,800ccc <__alt_data_end+0xff800ccc>
  801740:	003e2d06 	br	800ff8 <__alt_data_end+0xff800ff8>
  801744:	d8c02017 	ldw	r3,128(sp)
  801748:	003e9306 	br	801198 <__alt_data_end+0xff801198>
  80174c:	00801944 	movi	r2,101
  801750:	14407e0e 	bge	r2,r17,80194c <___vfprintf_internal_r+0x1008>
  801754:	d9003617 	ldw	r4,216(sp)
  801758:	d9403817 	ldw	r5,224(sp)
  80175c:	000d883a 	mov	r6,zero
  801760:	000f883a 	mov	r7,zero
  801764:	d8c03c15 	stw	r3,240(sp)
  801768:	da003d15 	stw	r8,244(sp)
  80176c:	080bb6c0 	call	80bb6c <__eqdf2>
  801770:	d8c03c17 	ldw	r3,240(sp)
  801774:	da003d17 	ldw	r8,244(sp)
  801778:	1000f71e 	bne	r2,zero,801b58 <___vfprintf_internal_r+0x1214>
  80177c:	d8801f17 	ldw	r2,124(sp)
  801780:	01002074 	movhi	r4,129
  801784:	213e8004 	addi	r4,r4,-1536
  801788:	18c00044 	addi	r3,r3,1
  80178c:	10800044 	addi	r2,r2,1
  801790:	41000015 	stw	r4,0(r8)
  801794:	01000044 	movi	r4,1
  801798:	41000115 	stw	r4,4(r8)
  80179c:	d8c02015 	stw	r3,128(sp)
  8017a0:	d8801f15 	stw	r2,124(sp)
  8017a4:	010001c4 	movi	r4,7
  8017a8:	2082b816 	blt	r4,r2,80228c <___vfprintf_internal_r+0x1948>
  8017ac:	42000204 	addi	r8,r8,8
  8017b0:	d8802617 	ldw	r2,152(sp)
  8017b4:	d9403317 	ldw	r5,204(sp)
  8017b8:	11400216 	blt	r2,r5,8017c4 <___vfprintf_internal_r+0xe80>
  8017bc:	9080004c 	andi	r2,r18,1
  8017c0:	103ed526 	beq	r2,zero,801318 <__alt_data_end+0xff801318>
  8017c4:	d8803717 	ldw	r2,220(sp)
  8017c8:	d9003417 	ldw	r4,208(sp)
  8017cc:	d9403717 	ldw	r5,220(sp)
  8017d0:	1887883a 	add	r3,r3,r2
  8017d4:	d8801f17 	ldw	r2,124(sp)
  8017d8:	41000015 	stw	r4,0(r8)
  8017dc:	41400115 	stw	r5,4(r8)
  8017e0:	10800044 	addi	r2,r2,1
  8017e4:	d8c02015 	stw	r3,128(sp)
  8017e8:	d8801f15 	stw	r2,124(sp)
  8017ec:	010001c4 	movi	r4,7
  8017f0:	20832916 	blt	r4,r2,802498 <___vfprintf_internal_r+0x1b54>
  8017f4:	42000204 	addi	r8,r8,8
  8017f8:	d8803317 	ldw	r2,204(sp)
  8017fc:	143fffc4 	addi	r16,r2,-1
  801800:	043ec50e 	bge	zero,r16,801318 <__alt_data_end+0xff801318>
  801804:	04400404 	movi	r17,16
  801808:	d8801f17 	ldw	r2,124(sp)
  80180c:	8c00880e 	bge	r17,r16,801a30 <___vfprintf_internal_r+0x10ec>
  801810:	01402074 	movhi	r5,129
  801814:	297e8084 	addi	r5,r5,-1534
  801818:	d9402b15 	stw	r5,172(sp)
  80181c:	058001c4 	movi	r22,7
  801820:	dcc02c17 	ldw	r19,176(sp)
  801824:	00000306 	br	801834 <___vfprintf_internal_r+0xef0>
  801828:	42000204 	addi	r8,r8,8
  80182c:	843ffc04 	addi	r16,r16,-16
  801830:	8c00820e 	bge	r17,r16,801a3c <___vfprintf_internal_r+0x10f8>
  801834:	18c00404 	addi	r3,r3,16
  801838:	10800044 	addi	r2,r2,1
  80183c:	45000015 	stw	r20,0(r8)
  801840:	44400115 	stw	r17,4(r8)
  801844:	d8c02015 	stw	r3,128(sp)
  801848:	d8801f15 	stw	r2,124(sp)
  80184c:	b0bff60e 	bge	r22,r2,801828 <__alt_data_end+0xff801828>
  801850:	d9801e04 	addi	r6,sp,120
  801854:	b80b883a 	mov	r5,r23
  801858:	9809883a 	mov	r4,r19
  80185c:	08080a80 	call	8080a8 <__sprint_r>
  801860:	103d3a1e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  801864:	d8c02017 	ldw	r3,128(sp)
  801868:	d8801f17 	ldw	r2,124(sp)
  80186c:	da000404 	addi	r8,sp,16
  801870:	003fee06 	br	80182c <__alt_data_end+0xff80182c>
  801874:	d9403117 	ldw	r5,196(sp)
  801878:	d8802a17 	ldw	r2,168(sp)
  80187c:	28adc83a 	sub	r22,r5,r2
  801880:	05be630e 	bge	zero,r22,801210 <__alt_data_end+0xff801210>
  801884:	07000404 	movi	fp,16
  801888:	d8801f17 	ldw	r2,124(sp)
  80188c:	e5838f0e 	bge	fp,r22,8026cc <___vfprintf_internal_r+0x1d88>
  801890:	01402074 	movhi	r5,129
  801894:	297e8084 	addi	r5,r5,-1534
  801898:	dc403015 	stw	r17,192(sp)
  80189c:	d9402b15 	stw	r5,172(sp)
  8018a0:	b023883a 	mov	r17,r22
  8018a4:	04c001c4 	movi	r19,7
  8018a8:	a82d883a 	mov	r22,r21
  8018ac:	902b883a 	mov	r21,r18
  8018b0:	8025883a 	mov	r18,r16
  8018b4:	dc002c17 	ldw	r16,176(sp)
  8018b8:	00000306 	br	8018c8 <___vfprintf_internal_r+0xf84>
  8018bc:	8c7ffc04 	addi	r17,r17,-16
  8018c0:	42000204 	addi	r8,r8,8
  8018c4:	e440110e 	bge	fp,r17,80190c <___vfprintf_internal_r+0xfc8>
  8018c8:	18c00404 	addi	r3,r3,16
  8018cc:	10800044 	addi	r2,r2,1
  8018d0:	45000015 	stw	r20,0(r8)
  8018d4:	47000115 	stw	fp,4(r8)
  8018d8:	d8c02015 	stw	r3,128(sp)
  8018dc:	d8801f15 	stw	r2,124(sp)
  8018e0:	98bff60e 	bge	r19,r2,8018bc <__alt_data_end+0xff8018bc>
  8018e4:	d9801e04 	addi	r6,sp,120
  8018e8:	b80b883a 	mov	r5,r23
  8018ec:	8009883a 	mov	r4,r16
  8018f0:	08080a80 	call	8080a8 <__sprint_r>
  8018f4:	103d151e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  8018f8:	8c7ffc04 	addi	r17,r17,-16
  8018fc:	d8c02017 	ldw	r3,128(sp)
  801900:	d8801f17 	ldw	r2,124(sp)
  801904:	da000404 	addi	r8,sp,16
  801908:	e47fef16 	blt	fp,r17,8018c8 <__alt_data_end+0xff8018c8>
  80190c:	9021883a 	mov	r16,r18
  801910:	a825883a 	mov	r18,r21
  801914:	b02b883a 	mov	r21,r22
  801918:	882d883a 	mov	r22,r17
  80191c:	dc403017 	ldw	r17,192(sp)
  801920:	d9002b17 	ldw	r4,172(sp)
  801924:	1d87883a 	add	r3,r3,r22
  801928:	10800044 	addi	r2,r2,1
  80192c:	41000015 	stw	r4,0(r8)
  801930:	45800115 	stw	r22,4(r8)
  801934:	d8c02015 	stw	r3,128(sp)
  801938:	d8801f15 	stw	r2,124(sp)
  80193c:	010001c4 	movi	r4,7
  801940:	20818e16 	blt	r4,r2,801f7c <___vfprintf_internal_r+0x1638>
  801944:	42000204 	addi	r8,r8,8
  801948:	003e3106 	br	801210 <__alt_data_end+0xff801210>
  80194c:	d9403317 	ldw	r5,204(sp)
  801950:	00800044 	movi	r2,1
  801954:	18c00044 	addi	r3,r3,1
  801958:	1141530e 	bge	r2,r5,801ea8 <___vfprintf_internal_r+0x1564>
  80195c:	dc401f17 	ldw	r17,124(sp)
  801960:	00800044 	movi	r2,1
  801964:	40800115 	stw	r2,4(r8)
  801968:	8c400044 	addi	r17,r17,1
  80196c:	44000015 	stw	r16,0(r8)
  801970:	d8c02015 	stw	r3,128(sp)
  801974:	dc401f15 	stw	r17,124(sp)
  801978:	008001c4 	movi	r2,7
  80197c:	14416b16 	blt	r2,r17,801f2c <___vfprintf_internal_r+0x15e8>
  801980:	42000204 	addi	r8,r8,8
  801984:	d8803717 	ldw	r2,220(sp)
  801988:	d9003417 	ldw	r4,208(sp)
  80198c:	8c400044 	addi	r17,r17,1
  801990:	10c7883a 	add	r3,r2,r3
  801994:	40800115 	stw	r2,4(r8)
  801998:	41000015 	stw	r4,0(r8)
  80199c:	d8c02015 	stw	r3,128(sp)
  8019a0:	dc401f15 	stw	r17,124(sp)
  8019a4:	008001c4 	movi	r2,7
  8019a8:	14416916 	blt	r2,r17,801f50 <___vfprintf_internal_r+0x160c>
  8019ac:	45800204 	addi	r22,r8,8
  8019b0:	d9003617 	ldw	r4,216(sp)
  8019b4:	d9403817 	ldw	r5,224(sp)
  8019b8:	000d883a 	mov	r6,zero
  8019bc:	000f883a 	mov	r7,zero
  8019c0:	d8c03c15 	stw	r3,240(sp)
  8019c4:	080bb6c0 	call	80bb6c <__eqdf2>
  8019c8:	d8c03c17 	ldw	r3,240(sp)
  8019cc:	1000bc26 	beq	r2,zero,801cc0 <___vfprintf_internal_r+0x137c>
  8019d0:	d9403317 	ldw	r5,204(sp)
  8019d4:	84000044 	addi	r16,r16,1
  8019d8:	8c400044 	addi	r17,r17,1
  8019dc:	28bfffc4 	addi	r2,r5,-1
  8019e0:	1887883a 	add	r3,r3,r2
  8019e4:	b0800115 	stw	r2,4(r22)
  8019e8:	b4000015 	stw	r16,0(r22)
  8019ec:	d8c02015 	stw	r3,128(sp)
  8019f0:	dc401f15 	stw	r17,124(sp)
  8019f4:	008001c4 	movi	r2,7
  8019f8:	14414316 	blt	r2,r17,801f08 <___vfprintf_internal_r+0x15c4>
  8019fc:	b5800204 	addi	r22,r22,8
  801a00:	d9003a17 	ldw	r4,232(sp)
  801a04:	df0022c4 	addi	fp,sp,139
  801a08:	8c400044 	addi	r17,r17,1
  801a0c:	20c7883a 	add	r3,r4,r3
  801a10:	b7000015 	stw	fp,0(r22)
  801a14:	b1000115 	stw	r4,4(r22)
  801a18:	d8c02015 	stw	r3,128(sp)
  801a1c:	dc401f15 	stw	r17,124(sp)
  801a20:	008001c4 	movi	r2,7
  801a24:	14400e16 	blt	r2,r17,801a60 <___vfprintf_internal_r+0x111c>
  801a28:	b2000204 	addi	r8,r22,8
  801a2c:	003e3a06 	br	801318 <__alt_data_end+0xff801318>
  801a30:	01002074 	movhi	r4,129
  801a34:	213e8084 	addi	r4,r4,-1534
  801a38:	d9002b15 	stw	r4,172(sp)
  801a3c:	d9002b17 	ldw	r4,172(sp)
  801a40:	1c07883a 	add	r3,r3,r16
  801a44:	44000115 	stw	r16,4(r8)
  801a48:	41000015 	stw	r4,0(r8)
  801a4c:	10800044 	addi	r2,r2,1
  801a50:	d8c02015 	stw	r3,128(sp)
  801a54:	d8801f15 	stw	r2,124(sp)
  801a58:	010001c4 	movi	r4,7
  801a5c:	20be2d0e 	bge	r4,r2,801314 <__alt_data_end+0xff801314>
  801a60:	d9002c17 	ldw	r4,176(sp)
  801a64:	d9801e04 	addi	r6,sp,120
  801a68:	b80b883a 	mov	r5,r23
  801a6c:	08080a80 	call	8080a8 <__sprint_r>
  801a70:	103cb61e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  801a74:	d8c02017 	ldw	r3,128(sp)
  801a78:	da000404 	addi	r8,sp,16
  801a7c:	003e2606 	br	801318 <__alt_data_end+0xff801318>
  801a80:	d9002c17 	ldw	r4,176(sp)
  801a84:	d9801e04 	addi	r6,sp,120
  801a88:	b80b883a 	mov	r5,r23
  801a8c:	08080a80 	call	8080a8 <__sprint_r>
  801a90:	103e5d26 	beq	r2,zero,801408 <__alt_data_end+0xff801408>
  801a94:	003cad06 	br	800d4c <__alt_data_end+0xff800d4c>
  801a98:	d9002c17 	ldw	r4,176(sp)
  801a9c:	d9801e04 	addi	r6,sp,120
  801aa0:	b80b883a 	mov	r5,r23
  801aa4:	08080a80 	call	8080a8 <__sprint_r>
  801aa8:	103ca81e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  801aac:	d8c02017 	ldw	r3,128(sp)
  801ab0:	da000404 	addi	r8,sp,16
  801ab4:	003e0b06 	br	8012e4 <__alt_data_end+0xff8012e4>
  801ab8:	d9002c17 	ldw	r4,176(sp)
  801abc:	d9801e04 	addi	r6,sp,120
  801ac0:	b80b883a 	mov	r5,r23
  801ac4:	08080a80 	call	8080a8 <__sprint_r>
  801ac8:	103ca01e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  801acc:	d8c02017 	ldw	r3,128(sp)
  801ad0:	da000404 	addi	r8,sp,16
  801ad4:	003dbd06 	br	8011cc <__alt_data_end+0xff8011cc>
  801ad8:	d9002c17 	ldw	r4,176(sp)
  801adc:	d9801e04 	addi	r6,sp,120
  801ae0:	b80b883a 	mov	r5,r23
  801ae4:	08080a80 	call	8080a8 <__sprint_r>
  801ae8:	103c981e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  801aec:	d8c02017 	ldw	r3,128(sp)
  801af0:	da000404 	addi	r8,sp,16
  801af4:	003dc306 	br	801204 <__alt_data_end+0xff801204>
  801af8:	d8802917 	ldw	r2,164(sp)
  801afc:	d8002785 	stb	zero,158(sp)
  801b00:	103f0616 	blt	r2,zero,80171c <__alt_data_end+0xff80171c>
  801b04:	00ffdfc4 	movi	r3,-129
  801b08:	9d84b03a 	or	r2,r19,r22
  801b0c:	90e4703a 	and	r18,r18,r3
  801b10:	103c6b26 	beq	r2,zero,800cc0 <__alt_data_end+0xff800cc0>
  801b14:	0039883a 	mov	fp,zero
  801b18:	003e7406 	br	8014ec <__alt_data_end+0xff8014ec>
  801b1c:	9080040c 	andi	r2,r18,16
  801b20:	1001b326 	beq	r2,zero,8021f0 <___vfprintf_internal_r+0x18ac>
  801b24:	d9002d17 	ldw	r4,180(sp)
  801b28:	d9402917 	ldw	r5,164(sp)
  801b2c:	d8002785 	stb	zero,158(sp)
  801b30:	20800104 	addi	r2,r4,4
  801b34:	24c00017 	ldw	r19,0(r4)
  801b38:	002d883a 	mov	r22,zero
  801b3c:	2801b516 	blt	r5,zero,802214 <___vfprintf_internal_r+0x18d0>
  801b40:	00ffdfc4 	movi	r3,-129
  801b44:	d8802d15 	stw	r2,180(sp)
  801b48:	90e4703a 	and	r18,r18,r3
  801b4c:	983d2726 	beq	r19,zero,800fec <__alt_data_end+0xff800fec>
  801b50:	0039883a 	mov	fp,zero
  801b54:	003d2a06 	br	801000 <__alt_data_end+0xff801000>
  801b58:	dc402617 	ldw	r17,152(sp)
  801b5c:	0441d30e 	bge	zero,r17,8022ac <___vfprintf_internal_r+0x1968>
  801b60:	dc403217 	ldw	r17,200(sp)
  801b64:	d8803317 	ldw	r2,204(sp)
  801b68:	1440010e 	bge	r2,r17,801b70 <___vfprintf_internal_r+0x122c>
  801b6c:	1023883a 	mov	r17,r2
  801b70:	04400a0e 	bge	zero,r17,801b9c <___vfprintf_internal_r+0x1258>
  801b74:	d8801f17 	ldw	r2,124(sp)
  801b78:	1c47883a 	add	r3,r3,r17
  801b7c:	44000015 	stw	r16,0(r8)
  801b80:	10800044 	addi	r2,r2,1
  801b84:	44400115 	stw	r17,4(r8)
  801b88:	d8c02015 	stw	r3,128(sp)
  801b8c:	d8801f15 	stw	r2,124(sp)
  801b90:	010001c4 	movi	r4,7
  801b94:	20826516 	blt	r4,r2,80252c <___vfprintf_internal_r+0x1be8>
  801b98:	42000204 	addi	r8,r8,8
  801b9c:	88026116 	blt	r17,zero,802524 <___vfprintf_internal_r+0x1be0>
  801ba0:	d9003217 	ldw	r4,200(sp)
  801ba4:	2463c83a 	sub	r17,r4,r17
  801ba8:	04407b0e 	bge	zero,r17,801d98 <___vfprintf_internal_r+0x1454>
  801bac:	05800404 	movi	r22,16
  801bb0:	d8801f17 	ldw	r2,124(sp)
  801bb4:	b4419d0e 	bge	r22,r17,80222c <___vfprintf_internal_r+0x18e8>
  801bb8:	01002074 	movhi	r4,129
  801bbc:	213e8084 	addi	r4,r4,-1534
  801bc0:	d9002b15 	stw	r4,172(sp)
  801bc4:	070001c4 	movi	fp,7
  801bc8:	dcc02c17 	ldw	r19,176(sp)
  801bcc:	00000306 	br	801bdc <___vfprintf_internal_r+0x1298>
  801bd0:	42000204 	addi	r8,r8,8
  801bd4:	8c7ffc04 	addi	r17,r17,-16
  801bd8:	b441970e 	bge	r22,r17,802238 <___vfprintf_internal_r+0x18f4>
  801bdc:	18c00404 	addi	r3,r3,16
  801be0:	10800044 	addi	r2,r2,1
  801be4:	45000015 	stw	r20,0(r8)
  801be8:	45800115 	stw	r22,4(r8)
  801bec:	d8c02015 	stw	r3,128(sp)
  801bf0:	d8801f15 	stw	r2,124(sp)
  801bf4:	e0bff60e 	bge	fp,r2,801bd0 <__alt_data_end+0xff801bd0>
  801bf8:	d9801e04 	addi	r6,sp,120
  801bfc:	b80b883a 	mov	r5,r23
  801c00:	9809883a 	mov	r4,r19
  801c04:	08080a80 	call	8080a8 <__sprint_r>
  801c08:	103c501e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  801c0c:	d8c02017 	ldw	r3,128(sp)
  801c10:	d8801f17 	ldw	r2,124(sp)
  801c14:	da000404 	addi	r8,sp,16
  801c18:	003fee06 	br	801bd4 <__alt_data_end+0xff801bd4>
  801c1c:	d9002c17 	ldw	r4,176(sp)
  801c20:	d9801e04 	addi	r6,sp,120
  801c24:	b80b883a 	mov	r5,r23
  801c28:	08080a80 	call	8080a8 <__sprint_r>
  801c2c:	103c471e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  801c30:	d8c02017 	ldw	r3,128(sp)
  801c34:	df002787 	ldb	fp,158(sp)
  801c38:	da000404 	addi	r8,sp,16
  801c3c:	003d5606 	br	801198 <__alt_data_end+0xff801198>
  801c40:	9080040c 	andi	r2,r18,16
  801c44:	10016126 	beq	r2,zero,8021cc <___vfprintf_internal_r+0x1888>
  801c48:	d8802d17 	ldw	r2,180(sp)
  801c4c:	14c00017 	ldw	r19,0(r2)
  801c50:	10800104 	addi	r2,r2,4
  801c54:	d8802d15 	stw	r2,180(sp)
  801c58:	982dd7fa 	srai	r22,r19,31
  801c5c:	b005883a 	mov	r2,r22
  801c60:	003c8206 	br	800e6c <__alt_data_end+0xff800e6c>
  801c64:	9080040c 	andi	r2,r18,16
  801c68:	10003526 	beq	r2,zero,801d40 <___vfprintf_internal_r+0x13fc>
  801c6c:	d9402d17 	ldw	r5,180(sp)
  801c70:	d8c02917 	ldw	r3,164(sp)
  801c74:	d8002785 	stb	zero,158(sp)
  801c78:	28800104 	addi	r2,r5,4
  801c7c:	2cc00017 	ldw	r19,0(r5)
  801c80:	002d883a 	mov	r22,zero
  801c84:	18003716 	blt	r3,zero,801d64 <___vfprintf_internal_r+0x1420>
  801c88:	00ffdfc4 	movi	r3,-129
  801c8c:	d8802d15 	stw	r2,180(sp)
  801c90:	90e4703a 	and	r18,r18,r3
  801c94:	0039883a 	mov	fp,zero
  801c98:	983df326 	beq	r19,zero,801468 <__alt_data_end+0xff801468>
  801c9c:	00800244 	movi	r2,9
  801ca0:	14fc7b36 	bltu	r2,r19,800e90 <__alt_data_end+0xff800e90>
  801ca4:	d8c02817 	ldw	r3,160(sp)
  801ca8:	dc001dc4 	addi	r16,sp,119
  801cac:	9cc00c04 	addi	r19,r19,48
  801cb0:	1c07c83a 	sub	r3,r3,r16
  801cb4:	dcc01dc5 	stb	r19,119(sp)
  801cb8:	d8c02e15 	stw	r3,184(sp)
  801cbc:	003ce806 	br	801060 <__alt_data_end+0xff801060>
  801cc0:	d8803317 	ldw	r2,204(sp)
  801cc4:	143fffc4 	addi	r16,r2,-1
  801cc8:	043f4d0e 	bge	zero,r16,801a00 <__alt_data_end+0xff801a00>
  801ccc:	07000404 	movi	fp,16
  801cd0:	e400810e 	bge	fp,r16,801ed8 <___vfprintf_internal_r+0x1594>
  801cd4:	01402074 	movhi	r5,129
  801cd8:	297e8084 	addi	r5,r5,-1534
  801cdc:	d9402b15 	stw	r5,172(sp)
  801ce0:	01c001c4 	movi	r7,7
  801ce4:	dcc02c17 	ldw	r19,176(sp)
  801ce8:	00000306 	br	801cf8 <___vfprintf_internal_r+0x13b4>
  801cec:	b5800204 	addi	r22,r22,8
  801cf0:	843ffc04 	addi	r16,r16,-16
  801cf4:	e4007b0e 	bge	fp,r16,801ee4 <___vfprintf_internal_r+0x15a0>
  801cf8:	18c00404 	addi	r3,r3,16
  801cfc:	8c400044 	addi	r17,r17,1
  801d00:	b5000015 	stw	r20,0(r22)
  801d04:	b7000115 	stw	fp,4(r22)
  801d08:	d8c02015 	stw	r3,128(sp)
  801d0c:	dc401f15 	stw	r17,124(sp)
  801d10:	3c7ff60e 	bge	r7,r17,801cec <__alt_data_end+0xff801cec>
  801d14:	d9801e04 	addi	r6,sp,120
  801d18:	b80b883a 	mov	r5,r23
  801d1c:	9809883a 	mov	r4,r19
  801d20:	d9c03c15 	stw	r7,240(sp)
  801d24:	08080a80 	call	8080a8 <__sprint_r>
  801d28:	d9c03c17 	ldw	r7,240(sp)
  801d2c:	103c071e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  801d30:	d8c02017 	ldw	r3,128(sp)
  801d34:	dc401f17 	ldw	r17,124(sp)
  801d38:	dd800404 	addi	r22,sp,16
  801d3c:	003fec06 	br	801cf0 <__alt_data_end+0xff801cf0>
  801d40:	9080100c 	andi	r2,r18,64
  801d44:	d8002785 	stb	zero,158(sp)
  801d48:	10010e26 	beq	r2,zero,802184 <___vfprintf_internal_r+0x1840>
  801d4c:	d9002d17 	ldw	r4,180(sp)
  801d50:	d9402917 	ldw	r5,164(sp)
  801d54:	002d883a 	mov	r22,zero
  801d58:	20800104 	addi	r2,r4,4
  801d5c:	24c0000b 	ldhu	r19,0(r4)
  801d60:	283fc90e 	bge	r5,zero,801c88 <__alt_data_end+0xff801c88>
  801d64:	d8802d15 	stw	r2,180(sp)
  801d68:	0039883a 	mov	fp,zero
  801d6c:	9d84b03a 	or	r2,r19,r22
  801d70:	103c461e 	bne	r2,zero,800e8c <__alt_data_end+0xff800e8c>
  801d74:	00800044 	movi	r2,1
  801d78:	003e6c06 	br	80172c <__alt_data_end+0xff80172c>
  801d7c:	d9002c17 	ldw	r4,176(sp)
  801d80:	d9801e04 	addi	r6,sp,120
  801d84:	b80b883a 	mov	r5,r23
  801d88:	08080a80 	call	8080a8 <__sprint_r>
  801d8c:	103bef1e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  801d90:	d8c02017 	ldw	r3,128(sp)
  801d94:	da000404 	addi	r8,sp,16
  801d98:	d9003217 	ldw	r4,200(sp)
  801d9c:	d8802617 	ldw	r2,152(sp)
  801da0:	d9403317 	ldw	r5,204(sp)
  801da4:	8123883a 	add	r17,r16,r4
  801da8:	11400216 	blt	r2,r5,801db4 <___vfprintf_internal_r+0x1470>
  801dac:	9100004c 	andi	r4,r18,1
  801db0:	20000d26 	beq	r4,zero,801de8 <___vfprintf_internal_r+0x14a4>
  801db4:	d9003717 	ldw	r4,220(sp)
  801db8:	d9403417 	ldw	r5,208(sp)
  801dbc:	1907883a 	add	r3,r3,r4
  801dc0:	d9001f17 	ldw	r4,124(sp)
  801dc4:	41400015 	stw	r5,0(r8)
  801dc8:	d9403717 	ldw	r5,220(sp)
  801dcc:	21000044 	addi	r4,r4,1
  801dd0:	d8c02015 	stw	r3,128(sp)
  801dd4:	41400115 	stw	r5,4(r8)
  801dd8:	d9001f15 	stw	r4,124(sp)
  801ddc:	014001c4 	movi	r5,7
  801de0:	2901e816 	blt	r5,r4,802584 <___vfprintf_internal_r+0x1c40>
  801de4:	42000204 	addi	r8,r8,8
  801de8:	d9003317 	ldw	r4,204(sp)
  801dec:	8121883a 	add	r16,r16,r4
  801df0:	2085c83a 	sub	r2,r4,r2
  801df4:	8461c83a 	sub	r16,r16,r17
  801df8:	1400010e 	bge	r2,r16,801e00 <___vfprintf_internal_r+0x14bc>
  801dfc:	1021883a 	mov	r16,r2
  801e00:	04000a0e 	bge	zero,r16,801e2c <___vfprintf_internal_r+0x14e8>
  801e04:	d9001f17 	ldw	r4,124(sp)
  801e08:	1c07883a 	add	r3,r3,r16
  801e0c:	44400015 	stw	r17,0(r8)
  801e10:	21000044 	addi	r4,r4,1
  801e14:	44000115 	stw	r16,4(r8)
  801e18:	d8c02015 	stw	r3,128(sp)
  801e1c:	d9001f15 	stw	r4,124(sp)
  801e20:	014001c4 	movi	r5,7
  801e24:	2901fb16 	blt	r5,r4,802614 <___vfprintf_internal_r+0x1cd0>
  801e28:	42000204 	addi	r8,r8,8
  801e2c:	8001f716 	blt	r16,zero,80260c <___vfprintf_internal_r+0x1cc8>
  801e30:	1421c83a 	sub	r16,r2,r16
  801e34:	043d380e 	bge	zero,r16,801318 <__alt_data_end+0xff801318>
  801e38:	04400404 	movi	r17,16
  801e3c:	d8801f17 	ldw	r2,124(sp)
  801e40:	8c3efb0e 	bge	r17,r16,801a30 <__alt_data_end+0xff801a30>
  801e44:	01402074 	movhi	r5,129
  801e48:	297e8084 	addi	r5,r5,-1534
  801e4c:	d9402b15 	stw	r5,172(sp)
  801e50:	058001c4 	movi	r22,7
  801e54:	dcc02c17 	ldw	r19,176(sp)
  801e58:	00000306 	br	801e68 <___vfprintf_internal_r+0x1524>
  801e5c:	42000204 	addi	r8,r8,8
  801e60:	843ffc04 	addi	r16,r16,-16
  801e64:	8c3ef50e 	bge	r17,r16,801a3c <__alt_data_end+0xff801a3c>
  801e68:	18c00404 	addi	r3,r3,16
  801e6c:	10800044 	addi	r2,r2,1
  801e70:	45000015 	stw	r20,0(r8)
  801e74:	44400115 	stw	r17,4(r8)
  801e78:	d8c02015 	stw	r3,128(sp)
  801e7c:	d8801f15 	stw	r2,124(sp)
  801e80:	b0bff60e 	bge	r22,r2,801e5c <__alt_data_end+0xff801e5c>
  801e84:	d9801e04 	addi	r6,sp,120
  801e88:	b80b883a 	mov	r5,r23
  801e8c:	9809883a 	mov	r4,r19
  801e90:	08080a80 	call	8080a8 <__sprint_r>
  801e94:	103bad1e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  801e98:	d8c02017 	ldw	r3,128(sp)
  801e9c:	d8801f17 	ldw	r2,124(sp)
  801ea0:	da000404 	addi	r8,sp,16
  801ea4:	003fee06 	br	801e60 <__alt_data_end+0xff801e60>
  801ea8:	9088703a 	and	r4,r18,r2
  801eac:	203eab1e 	bne	r4,zero,80195c <__alt_data_end+0xff80195c>
  801eb0:	dc401f17 	ldw	r17,124(sp)
  801eb4:	40800115 	stw	r2,4(r8)
  801eb8:	44000015 	stw	r16,0(r8)
  801ebc:	8c400044 	addi	r17,r17,1
  801ec0:	d8c02015 	stw	r3,128(sp)
  801ec4:	dc401f15 	stw	r17,124(sp)
  801ec8:	008001c4 	movi	r2,7
  801ecc:	14400e16 	blt	r2,r17,801f08 <___vfprintf_internal_r+0x15c4>
  801ed0:	45800204 	addi	r22,r8,8
  801ed4:	003eca06 	br	801a00 <__alt_data_end+0xff801a00>
  801ed8:	01002074 	movhi	r4,129
  801edc:	213e8084 	addi	r4,r4,-1534
  801ee0:	d9002b15 	stw	r4,172(sp)
  801ee4:	d8802b17 	ldw	r2,172(sp)
  801ee8:	1c07883a 	add	r3,r3,r16
  801eec:	8c400044 	addi	r17,r17,1
  801ef0:	b0800015 	stw	r2,0(r22)
  801ef4:	b4000115 	stw	r16,4(r22)
  801ef8:	d8c02015 	stw	r3,128(sp)
  801efc:	dc401f15 	stw	r17,124(sp)
  801f00:	008001c4 	movi	r2,7
  801f04:	147ebd0e 	bge	r2,r17,8019fc <__alt_data_end+0xff8019fc>
  801f08:	d9002c17 	ldw	r4,176(sp)
  801f0c:	d9801e04 	addi	r6,sp,120
  801f10:	b80b883a 	mov	r5,r23
  801f14:	08080a80 	call	8080a8 <__sprint_r>
  801f18:	103b8c1e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  801f1c:	d8c02017 	ldw	r3,128(sp)
  801f20:	dc401f17 	ldw	r17,124(sp)
  801f24:	dd800404 	addi	r22,sp,16
  801f28:	003eb506 	br	801a00 <__alt_data_end+0xff801a00>
  801f2c:	d9002c17 	ldw	r4,176(sp)
  801f30:	d9801e04 	addi	r6,sp,120
  801f34:	b80b883a 	mov	r5,r23
  801f38:	08080a80 	call	8080a8 <__sprint_r>
  801f3c:	103b831e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  801f40:	d8c02017 	ldw	r3,128(sp)
  801f44:	dc401f17 	ldw	r17,124(sp)
  801f48:	da000404 	addi	r8,sp,16
  801f4c:	003e8d06 	br	801984 <__alt_data_end+0xff801984>
  801f50:	d9002c17 	ldw	r4,176(sp)
  801f54:	d9801e04 	addi	r6,sp,120
  801f58:	b80b883a 	mov	r5,r23
  801f5c:	08080a80 	call	8080a8 <__sprint_r>
  801f60:	103b7a1e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  801f64:	d8c02017 	ldw	r3,128(sp)
  801f68:	dc401f17 	ldw	r17,124(sp)
  801f6c:	dd800404 	addi	r22,sp,16
  801f70:	003e8f06 	br	8019b0 <__alt_data_end+0xff8019b0>
  801f74:	0027883a 	mov	r19,zero
  801f78:	003f4a06 	br	801ca4 <__alt_data_end+0xff801ca4>
  801f7c:	d9002c17 	ldw	r4,176(sp)
  801f80:	d9801e04 	addi	r6,sp,120
  801f84:	b80b883a 	mov	r5,r23
  801f88:	08080a80 	call	8080a8 <__sprint_r>
  801f8c:	103b6f1e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  801f90:	d8c02017 	ldw	r3,128(sp)
  801f94:	da000404 	addi	r8,sp,16
  801f98:	003c9d06 	br	801210 <__alt_data_end+0xff801210>
  801f9c:	04e7c83a 	sub	r19,zero,r19
  801fa0:	9804c03a 	cmpne	r2,r19,zero
  801fa4:	05adc83a 	sub	r22,zero,r22
  801fa8:	b0adc83a 	sub	r22,r22,r2
  801fac:	d8802917 	ldw	r2,164(sp)
  801fb0:	07000b44 	movi	fp,45
  801fb4:	df002785 	stb	fp,158(sp)
  801fb8:	10017b16 	blt	r2,zero,8025a8 <___vfprintf_internal_r+0x1c64>
  801fbc:	00bfdfc4 	movi	r2,-129
  801fc0:	90a4703a 	and	r18,r18,r2
  801fc4:	003bb106 	br	800e8c <__alt_data_end+0xff800e8c>
  801fc8:	d9003617 	ldw	r4,216(sp)
  801fcc:	d9403817 	ldw	r5,224(sp)
  801fd0:	da003d15 	stw	r8,244(sp)
  801fd4:	0807ccc0 	call	807ccc <__fpclassifyd>
  801fd8:	da003d17 	ldw	r8,244(sp)
  801fdc:	1000f026 	beq	r2,zero,8023a0 <___vfprintf_internal_r+0x1a5c>
  801fe0:	d9002917 	ldw	r4,164(sp)
  801fe4:	05bff7c4 	movi	r22,-33
  801fe8:	00bfffc4 	movi	r2,-1
  801fec:	8dac703a 	and	r22,r17,r22
  801ff0:	20820026 	beq	r4,r2,8027f4 <___vfprintf_internal_r+0x1eb0>
  801ff4:	008011c4 	movi	r2,71
  801ff8:	b081f726 	beq	r22,r2,8027d8 <___vfprintf_internal_r+0x1e94>
  801ffc:	d9003817 	ldw	r4,224(sp)
  802000:	90c04014 	ori	r3,r18,256
  802004:	d8c02b15 	stw	r3,172(sp)
  802008:	20021516 	blt	r4,zero,802860 <___vfprintf_internal_r+0x1f1c>
  80200c:	dcc03817 	ldw	r19,224(sp)
  802010:	d8002a05 	stb	zero,168(sp)
  802014:	00801984 	movi	r2,102
  802018:	8881f926 	beq	r17,r2,802800 <___vfprintf_internal_r+0x1ebc>
  80201c:	00801184 	movi	r2,70
  802020:	88821c26 	beq	r17,r2,802894 <___vfprintf_internal_r+0x1f50>
  802024:	00801144 	movi	r2,69
  802028:	b081ef26 	beq	r22,r2,8027e8 <___vfprintf_internal_r+0x1ea4>
  80202c:	d8c02917 	ldw	r3,164(sp)
  802030:	d8802104 	addi	r2,sp,132
  802034:	d8800315 	stw	r2,12(sp)
  802038:	d9403617 	ldw	r5,216(sp)
  80203c:	d8802504 	addi	r2,sp,148
  802040:	d9002c17 	ldw	r4,176(sp)
  802044:	d8800215 	stw	r2,8(sp)
  802048:	d8802604 	addi	r2,sp,152
  80204c:	d8c00015 	stw	r3,0(sp)
  802050:	d8800115 	stw	r2,4(sp)
  802054:	01c00084 	movi	r7,2
  802058:	980d883a 	mov	r6,r19
  80205c:	d8c03c15 	stw	r3,240(sp)
  802060:	da003d15 	stw	r8,244(sp)
  802064:	0802f680 	call	802f68 <_dtoa_r>
  802068:	1021883a 	mov	r16,r2
  80206c:	008019c4 	movi	r2,103
  802070:	d8c03c17 	ldw	r3,240(sp)
  802074:	da003d17 	ldw	r8,244(sp)
  802078:	88817126 	beq	r17,r2,802640 <___vfprintf_internal_r+0x1cfc>
  80207c:	008011c4 	movi	r2,71
  802080:	88829226 	beq	r17,r2,802acc <___vfprintf_internal_r+0x2188>
  802084:	80f9883a 	add	fp,r16,r3
  802088:	d9003617 	ldw	r4,216(sp)
  80208c:	000d883a 	mov	r6,zero
  802090:	000f883a 	mov	r7,zero
  802094:	980b883a 	mov	r5,r19
  802098:	da003d15 	stw	r8,244(sp)
  80209c:	080bb6c0 	call	80bb6c <__eqdf2>
  8020a0:	da003d17 	ldw	r8,244(sp)
  8020a4:	10018d26 	beq	r2,zero,8026dc <___vfprintf_internal_r+0x1d98>
  8020a8:	d8802117 	ldw	r2,132(sp)
  8020ac:	1700062e 	bgeu	r2,fp,8020c8 <___vfprintf_internal_r+0x1784>
  8020b0:	01000c04 	movi	r4,48
  8020b4:	10c00044 	addi	r3,r2,1
  8020b8:	d8c02115 	stw	r3,132(sp)
  8020bc:	11000005 	stb	r4,0(r2)
  8020c0:	d8802117 	ldw	r2,132(sp)
  8020c4:	173ffb36 	bltu	r2,fp,8020b4 <__alt_data_end+0xff8020b4>
  8020c8:	1405c83a 	sub	r2,r2,r16
  8020cc:	d8803315 	stw	r2,204(sp)
  8020d0:	008011c4 	movi	r2,71
  8020d4:	b0817626 	beq	r22,r2,8026b0 <___vfprintf_internal_r+0x1d6c>
  8020d8:	00801944 	movi	r2,101
  8020dc:	1442810e 	bge	r2,r17,802ae4 <___vfprintf_internal_r+0x21a0>
  8020e0:	d8c02617 	ldw	r3,152(sp)
  8020e4:	00801984 	movi	r2,102
  8020e8:	d8c03215 	stw	r3,200(sp)
  8020ec:	8881fe26 	beq	r17,r2,8028e8 <___vfprintf_internal_r+0x1fa4>
  8020f0:	d8c03217 	ldw	r3,200(sp)
  8020f4:	d9003317 	ldw	r4,204(sp)
  8020f8:	1901dd16 	blt	r3,r4,802870 <___vfprintf_internal_r+0x1f2c>
  8020fc:	9480004c 	andi	r18,r18,1
  802100:	90022b1e 	bne	r18,zero,8029b0 <___vfprintf_internal_r+0x206c>
  802104:	1805883a 	mov	r2,r3
  802108:	18028016 	blt	r3,zero,802b0c <___vfprintf_internal_r+0x21c8>
  80210c:	d8c03217 	ldw	r3,200(sp)
  802110:	044019c4 	movi	r17,103
  802114:	d8c02e15 	stw	r3,184(sp)
  802118:	df002a07 	ldb	fp,168(sp)
  80211c:	e001531e 	bne	fp,zero,80266c <___vfprintf_internal_r+0x1d28>
  802120:	df002783 	ldbu	fp,158(sp)
  802124:	d8802a15 	stw	r2,168(sp)
  802128:	dc802b17 	ldw	r18,172(sp)
  80212c:	d8002915 	stw	zero,164(sp)
  802130:	003bd106 	br	801078 <__alt_data_end+0xff801078>
  802134:	d8802d17 	ldw	r2,180(sp)
  802138:	d8c02d17 	ldw	r3,180(sp)
  80213c:	d9002d17 	ldw	r4,180(sp)
  802140:	10800017 	ldw	r2,0(r2)
  802144:	18c00117 	ldw	r3,4(r3)
  802148:	21000204 	addi	r4,r4,8
  80214c:	d8803615 	stw	r2,216(sp)
  802150:	d8c03815 	stw	r3,224(sp)
  802154:	d9002d15 	stw	r4,180(sp)
  802158:	003b7506 	br	800f30 <__alt_data_end+0xff800f30>
  80215c:	ac400007 	ldb	r17,0(r21)
  802160:	003a5906 	br	800ac8 <__alt_data_end+0xff800ac8>
  802164:	9080100c 	andi	r2,r18,64
  802168:	1000a826 	beq	r2,zero,80240c <___vfprintf_internal_r+0x1ac8>
  80216c:	d9002d17 	ldw	r4,180(sp)
  802170:	002d883a 	mov	r22,zero
  802174:	24c0000b 	ldhu	r19,0(r4)
  802178:	21000104 	addi	r4,r4,4
  80217c:	d9002d15 	stw	r4,180(sp)
  802180:	003ccb06 	br	8014b0 <__alt_data_end+0xff8014b0>
  802184:	d8c02d17 	ldw	r3,180(sp)
  802188:	d9002917 	ldw	r4,164(sp)
  80218c:	002d883a 	mov	r22,zero
  802190:	18800104 	addi	r2,r3,4
  802194:	1cc00017 	ldw	r19,0(r3)
  802198:	203ebb0e 	bge	r4,zero,801c88 <__alt_data_end+0xff801c88>
  80219c:	003ef106 	br	801d64 <__alt_data_end+0xff801d64>
  8021a0:	9080040c 	andi	r2,r18,16
  8021a4:	1000921e 	bne	r2,zero,8023f0 <___vfprintf_internal_r+0x1aac>
  8021a8:	9480100c 	andi	r18,r18,64
  8021ac:	90013926 	beq	r18,zero,802694 <___vfprintf_internal_r+0x1d50>
  8021b0:	d9002d17 	ldw	r4,180(sp)
  8021b4:	d9402f17 	ldw	r5,188(sp)
  8021b8:	20800017 	ldw	r2,0(r4)
  8021bc:	21000104 	addi	r4,r4,4
  8021c0:	d9002d15 	stw	r4,180(sp)
  8021c4:	1140000d 	sth	r5,0(r2)
  8021c8:	003a1606 	br	800a24 <__alt_data_end+0xff800a24>
  8021cc:	9080100c 	andi	r2,r18,64
  8021d0:	10008026 	beq	r2,zero,8023d4 <___vfprintf_internal_r+0x1a90>
  8021d4:	d8c02d17 	ldw	r3,180(sp)
  8021d8:	1cc0000f 	ldh	r19,0(r3)
  8021dc:	18c00104 	addi	r3,r3,4
  8021e0:	d8c02d15 	stw	r3,180(sp)
  8021e4:	982dd7fa 	srai	r22,r19,31
  8021e8:	b005883a 	mov	r2,r22
  8021ec:	003b1f06 	br	800e6c <__alt_data_end+0xff800e6c>
  8021f0:	9080100c 	andi	r2,r18,64
  8021f4:	d8002785 	stb	zero,158(sp)
  8021f8:	10008a1e 	bne	r2,zero,802424 <___vfprintf_internal_r+0x1ae0>
  8021fc:	d9402d17 	ldw	r5,180(sp)
  802200:	d8c02917 	ldw	r3,164(sp)
  802204:	002d883a 	mov	r22,zero
  802208:	28800104 	addi	r2,r5,4
  80220c:	2cc00017 	ldw	r19,0(r5)
  802210:	183e4b0e 	bge	r3,zero,801b40 <__alt_data_end+0xff801b40>
  802214:	9d86b03a 	or	r3,r19,r22
  802218:	d8802d15 	stw	r2,180(sp)
  80221c:	183e4c1e 	bne	r3,zero,801b50 <__alt_data_end+0xff801b50>
  802220:	0039883a 	mov	fp,zero
  802224:	0005883a 	mov	r2,zero
  802228:	003d4006 	br	80172c <__alt_data_end+0xff80172c>
  80222c:	01402074 	movhi	r5,129
  802230:	297e8084 	addi	r5,r5,-1534
  802234:	d9402b15 	stw	r5,172(sp)
  802238:	d9402b17 	ldw	r5,172(sp)
  80223c:	1c47883a 	add	r3,r3,r17
  802240:	10800044 	addi	r2,r2,1
  802244:	41400015 	stw	r5,0(r8)
  802248:	44400115 	stw	r17,4(r8)
  80224c:	d8c02015 	stw	r3,128(sp)
  802250:	d8801f15 	stw	r2,124(sp)
  802254:	010001c4 	movi	r4,7
  802258:	20bec816 	blt	r4,r2,801d7c <__alt_data_end+0xff801d7c>
  80225c:	42000204 	addi	r8,r8,8
  802260:	003ecd06 	br	801d98 <__alt_data_end+0xff801d98>
  802264:	d9002917 	ldw	r4,164(sp)
  802268:	d8002785 	stb	zero,158(sp)
  80226c:	203d2d16 	blt	r4,zero,801724 <__alt_data_end+0xff801724>
  802270:	00bfdfc4 	movi	r2,-129
  802274:	90a4703a 	and	r18,r18,r2
  802278:	003a9106 	br	800cc0 <__alt_data_end+0xff800cc0>
  80227c:	01002074 	movhi	r4,129
  802280:	213e8084 	addi	r4,r4,-1534
  802284:	d9002b15 	stw	r4,172(sp)
  802288:	003c0c06 	br	8012bc <__alt_data_end+0xff8012bc>
  80228c:	d9002c17 	ldw	r4,176(sp)
  802290:	d9801e04 	addi	r6,sp,120
  802294:	b80b883a 	mov	r5,r23
  802298:	08080a80 	call	8080a8 <__sprint_r>
  80229c:	103aab1e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  8022a0:	d8c02017 	ldw	r3,128(sp)
  8022a4:	da000404 	addi	r8,sp,16
  8022a8:	003d4106 	br	8017b0 <__alt_data_end+0xff8017b0>
  8022ac:	d8801f17 	ldw	r2,124(sp)
  8022b0:	01402074 	movhi	r5,129
  8022b4:	01000044 	movi	r4,1
  8022b8:	18c00044 	addi	r3,r3,1
  8022bc:	10800044 	addi	r2,r2,1
  8022c0:	297e8004 	addi	r5,r5,-1536
  8022c4:	41000115 	stw	r4,4(r8)
  8022c8:	41400015 	stw	r5,0(r8)
  8022cc:	d8c02015 	stw	r3,128(sp)
  8022d0:	d8801f15 	stw	r2,124(sp)
  8022d4:	010001c4 	movi	r4,7
  8022d8:	20805c16 	blt	r4,r2,80244c <___vfprintf_internal_r+0x1b08>
  8022dc:	42000204 	addi	r8,r8,8
  8022e0:	8800041e 	bne	r17,zero,8022f4 <___vfprintf_internal_r+0x19b0>
  8022e4:	d8803317 	ldw	r2,204(sp)
  8022e8:	1000021e 	bne	r2,zero,8022f4 <___vfprintf_internal_r+0x19b0>
  8022ec:	9080004c 	andi	r2,r18,1
  8022f0:	103c0926 	beq	r2,zero,801318 <__alt_data_end+0xff801318>
  8022f4:	d9003717 	ldw	r4,220(sp)
  8022f8:	d8801f17 	ldw	r2,124(sp)
  8022fc:	d9403417 	ldw	r5,208(sp)
  802300:	20c7883a 	add	r3,r4,r3
  802304:	10800044 	addi	r2,r2,1
  802308:	41000115 	stw	r4,4(r8)
  80230c:	41400015 	stw	r5,0(r8)
  802310:	d8c02015 	stw	r3,128(sp)
  802314:	d8801f15 	stw	r2,124(sp)
  802318:	010001c4 	movi	r4,7
  80231c:	20812116 	blt	r4,r2,8027a4 <___vfprintf_internal_r+0x1e60>
  802320:	42000204 	addi	r8,r8,8
  802324:	0463c83a 	sub	r17,zero,r17
  802328:	0440730e 	bge	zero,r17,8024f8 <___vfprintf_internal_r+0x1bb4>
  80232c:	05800404 	movi	r22,16
  802330:	b440860e 	bge	r22,r17,80254c <___vfprintf_internal_r+0x1c08>
  802334:	01402074 	movhi	r5,129
  802338:	297e8084 	addi	r5,r5,-1534
  80233c:	d9402b15 	stw	r5,172(sp)
  802340:	070001c4 	movi	fp,7
  802344:	dcc02c17 	ldw	r19,176(sp)
  802348:	00000306 	br	802358 <___vfprintf_internal_r+0x1a14>
  80234c:	42000204 	addi	r8,r8,8
  802350:	8c7ffc04 	addi	r17,r17,-16
  802354:	b440800e 	bge	r22,r17,802558 <___vfprintf_internal_r+0x1c14>
  802358:	18c00404 	addi	r3,r3,16
  80235c:	10800044 	addi	r2,r2,1
  802360:	45000015 	stw	r20,0(r8)
  802364:	45800115 	stw	r22,4(r8)
  802368:	d8c02015 	stw	r3,128(sp)
  80236c:	d8801f15 	stw	r2,124(sp)
  802370:	e0bff60e 	bge	fp,r2,80234c <__alt_data_end+0xff80234c>
  802374:	d9801e04 	addi	r6,sp,120
  802378:	b80b883a 	mov	r5,r23
  80237c:	9809883a 	mov	r4,r19
  802380:	08080a80 	call	8080a8 <__sprint_r>
  802384:	103a711e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  802388:	d8c02017 	ldw	r3,128(sp)
  80238c:	d8801f17 	ldw	r2,124(sp)
  802390:	da000404 	addi	r8,sp,16
  802394:	003fee06 	br	802350 <__alt_data_end+0xff802350>
  802398:	00bfffc4 	movi	r2,-1
  80239c:	003a6f06 	br	800d5c <__alt_data_end+0xff800d5c>
  8023a0:	008011c4 	movi	r2,71
  8023a4:	1440b816 	blt	r2,r17,802688 <___vfprintf_internal_r+0x1d44>
  8023a8:	04002074 	movhi	r16,129
  8023ac:	843e7204 	addi	r16,r16,-1592
  8023b0:	00c000c4 	movi	r3,3
  8023b4:	00bfdfc4 	movi	r2,-129
  8023b8:	d8c02a15 	stw	r3,168(sp)
  8023bc:	90a4703a 	and	r18,r18,r2
  8023c0:	df002783 	ldbu	fp,158(sp)
  8023c4:	d8c02e15 	stw	r3,184(sp)
  8023c8:	d8002915 	stw	zero,164(sp)
  8023cc:	d8003215 	stw	zero,200(sp)
  8023d0:	003b2906 	br	801078 <__alt_data_end+0xff801078>
  8023d4:	d9002d17 	ldw	r4,180(sp)
  8023d8:	24c00017 	ldw	r19,0(r4)
  8023dc:	21000104 	addi	r4,r4,4
  8023e0:	d9002d15 	stw	r4,180(sp)
  8023e4:	982dd7fa 	srai	r22,r19,31
  8023e8:	b005883a 	mov	r2,r22
  8023ec:	003a9f06 	br	800e6c <__alt_data_end+0xff800e6c>
  8023f0:	d9402d17 	ldw	r5,180(sp)
  8023f4:	d8c02f17 	ldw	r3,188(sp)
  8023f8:	28800017 	ldw	r2,0(r5)
  8023fc:	29400104 	addi	r5,r5,4
  802400:	d9402d15 	stw	r5,180(sp)
  802404:	10c00015 	stw	r3,0(r2)
  802408:	00398606 	br	800a24 <__alt_data_end+0xff800a24>
  80240c:	d9402d17 	ldw	r5,180(sp)
  802410:	002d883a 	mov	r22,zero
  802414:	2cc00017 	ldw	r19,0(r5)
  802418:	29400104 	addi	r5,r5,4
  80241c:	d9402d15 	stw	r5,180(sp)
  802420:	003c2306 	br	8014b0 <__alt_data_end+0xff8014b0>
  802424:	d8c02d17 	ldw	r3,180(sp)
  802428:	d9002917 	ldw	r4,164(sp)
  80242c:	002d883a 	mov	r22,zero
  802430:	18800104 	addi	r2,r3,4
  802434:	1cc0000b 	ldhu	r19,0(r3)
  802438:	203dc10e 	bge	r4,zero,801b40 <__alt_data_end+0xff801b40>
  80243c:	003f7506 	br	802214 <__alt_data_end+0xff802214>
  802440:	04002074 	movhi	r16,129
  802444:	843e7004 	addi	r16,r16,-1600
  802448:	003acc06 	br	800f7c <__alt_data_end+0xff800f7c>
  80244c:	d9002c17 	ldw	r4,176(sp)
  802450:	d9801e04 	addi	r6,sp,120
  802454:	b80b883a 	mov	r5,r23
  802458:	08080a80 	call	8080a8 <__sprint_r>
  80245c:	103a3b1e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  802460:	dc402617 	ldw	r17,152(sp)
  802464:	d8c02017 	ldw	r3,128(sp)
  802468:	da000404 	addi	r8,sp,16
  80246c:	003f9c06 	br	8022e0 <__alt_data_end+0xff8022e0>
  802470:	ac400043 	ldbu	r17,1(r21)
  802474:	94800814 	ori	r18,r18,32
  802478:	ad400044 	addi	r21,r21,1
  80247c:	8c403fcc 	andi	r17,r17,255
  802480:	8c40201c 	xori	r17,r17,128
  802484:	8c7fe004 	addi	r17,r17,-128
  802488:	00398f06 	br	800ac8 <__alt_data_end+0xff800ac8>
  80248c:	d8c02d15 	stw	r3,180(sp)
  802490:	0039883a 	mov	fp,zero
  802494:	003e3506 	br	801d6c <__alt_data_end+0xff801d6c>
  802498:	d9002c17 	ldw	r4,176(sp)
  80249c:	d9801e04 	addi	r6,sp,120
  8024a0:	b80b883a 	mov	r5,r23
  8024a4:	08080a80 	call	8080a8 <__sprint_r>
  8024a8:	103a281e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  8024ac:	d8c02017 	ldw	r3,128(sp)
  8024b0:	da000404 	addi	r8,sp,16
  8024b4:	003cd006 	br	8017f8 <__alt_data_end+0xff8017f8>
  8024b8:	8009883a 	mov	r4,r16
  8024bc:	da003d15 	stw	r8,244(sp)
  8024c0:	08008ac0 	call	8008ac <strlen>
  8024c4:	d8802e15 	stw	r2,184(sp)
  8024c8:	da003d17 	ldw	r8,244(sp)
  8024cc:	103c340e 	bge	r2,zero,8015a0 <__alt_data_end+0xff8015a0>
  8024d0:	0005883a 	mov	r2,zero
  8024d4:	003c3206 	br	8015a0 <__alt_data_end+0xff8015a0>
  8024d8:	d9002c17 	ldw	r4,176(sp)
  8024dc:	d9801e04 	addi	r6,sp,120
  8024e0:	b80b883a 	mov	r5,r23
  8024e4:	08080a80 	call	8080a8 <__sprint_r>
  8024e8:	103a181e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  8024ec:	d8c02017 	ldw	r3,128(sp)
  8024f0:	d8801f17 	ldw	r2,124(sp)
  8024f4:	da000404 	addi	r8,sp,16
  8024f8:	d9403317 	ldw	r5,204(sp)
  8024fc:	10800044 	addi	r2,r2,1
  802500:	44000015 	stw	r16,0(r8)
  802504:	28c7883a 	add	r3,r5,r3
  802508:	003b7d06 	br	801300 <__alt_data_end+0xff801300>
  80250c:	01002074 	movhi	r4,129
  802510:	213e8484 	addi	r4,r4,-1518
  802514:	d9003515 	stw	r4,212(sp)
  802518:	003b1406 	br	80116c <__alt_data_end+0xff80116c>
  80251c:	013fffc4 	movi	r4,-1
  802520:	003a3506 	br	800df8 <__alt_data_end+0xff800df8>
  802524:	0023883a 	mov	r17,zero
  802528:	003d9d06 	br	801ba0 <__alt_data_end+0xff801ba0>
  80252c:	d9002c17 	ldw	r4,176(sp)
  802530:	d9801e04 	addi	r6,sp,120
  802534:	b80b883a 	mov	r5,r23
  802538:	08080a80 	call	8080a8 <__sprint_r>
  80253c:	103a031e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  802540:	d8c02017 	ldw	r3,128(sp)
  802544:	da000404 	addi	r8,sp,16
  802548:	003d9406 	br	801b9c <__alt_data_end+0xff801b9c>
  80254c:	01002074 	movhi	r4,129
  802550:	213e8084 	addi	r4,r4,-1534
  802554:	d9002b15 	stw	r4,172(sp)
  802558:	d9002b17 	ldw	r4,172(sp)
  80255c:	1c47883a 	add	r3,r3,r17
  802560:	10800044 	addi	r2,r2,1
  802564:	41000015 	stw	r4,0(r8)
  802568:	44400115 	stw	r17,4(r8)
  80256c:	d8c02015 	stw	r3,128(sp)
  802570:	d8801f15 	stw	r2,124(sp)
  802574:	010001c4 	movi	r4,7
  802578:	20bfd716 	blt	r4,r2,8024d8 <__alt_data_end+0xff8024d8>
  80257c:	42000204 	addi	r8,r8,8
  802580:	003fdd06 	br	8024f8 <__alt_data_end+0xff8024f8>
  802584:	d9002c17 	ldw	r4,176(sp)
  802588:	d9801e04 	addi	r6,sp,120
  80258c:	b80b883a 	mov	r5,r23
  802590:	08080a80 	call	8080a8 <__sprint_r>
  802594:	1039ed1e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  802598:	d8802617 	ldw	r2,152(sp)
  80259c:	d8c02017 	ldw	r3,128(sp)
  8025a0:	da000404 	addi	r8,sp,16
  8025a4:	003e1006 	br	801de8 <__alt_data_end+0xff801de8>
  8025a8:	00800044 	movi	r2,1
  8025ac:	10803fcc 	andi	r2,r2,255
  8025b0:	00c00044 	movi	r3,1
  8025b4:	10fa3526 	beq	r2,r3,800e8c <__alt_data_end+0xff800e8c>
  8025b8:	00c00084 	movi	r3,2
  8025bc:	10fbcb26 	beq	r2,r3,8014ec <__alt_data_end+0xff8014ec>
  8025c0:	003a8f06 	br	801000 <__alt_data_end+0xff801000>
  8025c4:	01002074 	movhi	r4,129
  8025c8:	213e8484 	addi	r4,r4,-1518
  8025cc:	d9003515 	stw	r4,212(sp)
  8025d0:	003b7606 	br	8013ac <__alt_data_end+0xff8013ac>
  8025d4:	d8802917 	ldw	r2,164(sp)
  8025d8:	00c00184 	movi	r3,6
  8025dc:	1880012e 	bgeu	r3,r2,8025e4 <___vfprintf_internal_r+0x1ca0>
  8025e0:	1805883a 	mov	r2,r3
  8025e4:	d8802e15 	stw	r2,184(sp)
  8025e8:	1000ef16 	blt	r2,zero,8029a8 <___vfprintf_internal_r+0x2064>
  8025ec:	04002074 	movhi	r16,129
  8025f0:	d8802a15 	stw	r2,168(sp)
  8025f4:	dcc02d15 	stw	r19,180(sp)
  8025f8:	d8002915 	stw	zero,164(sp)
  8025fc:	d8003215 	stw	zero,200(sp)
  802600:	843e7e04 	addi	r16,r16,-1544
  802604:	0039883a 	mov	fp,zero
  802608:	003aa206 	br	801094 <__alt_data_end+0xff801094>
  80260c:	0021883a 	mov	r16,zero
  802610:	003e0706 	br	801e30 <__alt_data_end+0xff801e30>
  802614:	d9002c17 	ldw	r4,176(sp)
  802618:	d9801e04 	addi	r6,sp,120
  80261c:	b80b883a 	mov	r5,r23
  802620:	08080a80 	call	8080a8 <__sprint_r>
  802624:	1039c91e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  802628:	d8802617 	ldw	r2,152(sp)
  80262c:	d9403317 	ldw	r5,204(sp)
  802630:	d8c02017 	ldw	r3,128(sp)
  802634:	da000404 	addi	r8,sp,16
  802638:	2885c83a 	sub	r2,r5,r2
  80263c:	003dfb06 	br	801e2c <__alt_data_end+0xff801e2c>
  802640:	9080004c 	andi	r2,r18,1
  802644:	103e8f1e 	bne	r2,zero,802084 <__alt_data_end+0xff802084>
  802648:	d8802117 	ldw	r2,132(sp)
  80264c:	003e9e06 	br	8020c8 <__alt_data_end+0xff8020c8>
  802650:	1025883a 	mov	r18,r2
  802654:	0039883a 	mov	fp,zero
  802658:	00800084 	movi	r2,2
  80265c:	003fd306 	br	8025ac <__alt_data_end+0xff8025ac>
  802660:	07000b44 	movi	fp,45
  802664:	df002785 	stb	fp,158(sp)
  802668:	003a4006 	br	800f6c <__alt_data_end+0xff800f6c>
  80266c:	00c00b44 	movi	r3,45
  802670:	d8c02785 	stb	r3,158(sp)
  802674:	d8802a15 	stw	r2,168(sp)
  802678:	dc802b17 	ldw	r18,172(sp)
  80267c:	d8002915 	stw	zero,164(sp)
  802680:	07000b44 	movi	fp,45
  802684:	003a8006 	br	801088 <__alt_data_end+0xff801088>
  802688:	04002074 	movhi	r16,129
  80268c:	843e7304 	addi	r16,r16,-1588
  802690:	003f4706 	br	8023b0 <__alt_data_end+0xff8023b0>
  802694:	d8c02d17 	ldw	r3,180(sp)
  802698:	d9002f17 	ldw	r4,188(sp)
  80269c:	18800017 	ldw	r2,0(r3)
  8026a0:	18c00104 	addi	r3,r3,4
  8026a4:	d8c02d15 	stw	r3,180(sp)
  8026a8:	11000015 	stw	r4,0(r2)
  8026ac:	0038dd06 	br	800a24 <__alt_data_end+0xff800a24>
  8026b0:	dd802617 	ldw	r22,152(sp)
  8026b4:	00bfff44 	movi	r2,-3
  8026b8:	b0801c16 	blt	r22,r2,80272c <___vfprintf_internal_r+0x1de8>
  8026bc:	d9402917 	ldw	r5,164(sp)
  8026c0:	2d801a16 	blt	r5,r22,80272c <___vfprintf_internal_r+0x1de8>
  8026c4:	dd803215 	stw	r22,200(sp)
  8026c8:	003e8906 	br	8020f0 <__alt_data_end+0xff8020f0>
  8026cc:	01002074 	movhi	r4,129
  8026d0:	213e8084 	addi	r4,r4,-1534
  8026d4:	d9002b15 	stw	r4,172(sp)
  8026d8:	003c9106 	br	801920 <__alt_data_end+0xff801920>
  8026dc:	e005883a 	mov	r2,fp
  8026e0:	003e7906 	br	8020c8 <__alt_data_end+0xff8020c8>
  8026e4:	d9402917 	ldw	r5,164(sp)
  8026e8:	df002783 	ldbu	fp,158(sp)
  8026ec:	dcc02d15 	stw	r19,180(sp)
  8026f0:	d9402a15 	stw	r5,168(sp)
  8026f4:	d9402e15 	stw	r5,184(sp)
  8026f8:	d8002915 	stw	zero,164(sp)
  8026fc:	d8003215 	stw	zero,200(sp)
  802700:	003a5d06 	br	801078 <__alt_data_end+0xff801078>
  802704:	9080004c 	andi	r2,r18,1
  802708:	0039883a 	mov	fp,zero
  80270c:	10000426 	beq	r2,zero,802720 <___vfprintf_internal_r+0x1ddc>
  802710:	00800c04 	movi	r2,48
  802714:	dc001dc4 	addi	r16,sp,119
  802718:	d8801dc5 	stb	r2,119(sp)
  80271c:	003b8006 	br	801520 <__alt_data_end+0xff801520>
  802720:	d8002e15 	stw	zero,184(sp)
  802724:	dc001e04 	addi	r16,sp,120
  802728:	003a4d06 	br	801060 <__alt_data_end+0xff801060>
  80272c:	8c7fff84 	addi	r17,r17,-2
  802730:	b5bfffc4 	addi	r22,r22,-1
  802734:	dd802615 	stw	r22,152(sp)
  802738:	dc4022c5 	stb	r17,139(sp)
  80273c:	b000bf16 	blt	r22,zero,802a3c <___vfprintf_internal_r+0x20f8>
  802740:	00800ac4 	movi	r2,43
  802744:	d8802305 	stb	r2,140(sp)
  802748:	00800244 	movi	r2,9
  80274c:	15807016 	blt	r2,r22,802910 <___vfprintf_internal_r+0x1fcc>
  802750:	00800c04 	movi	r2,48
  802754:	b5800c04 	addi	r22,r22,48
  802758:	d8802345 	stb	r2,141(sp)
  80275c:	dd802385 	stb	r22,142(sp)
  802760:	d88023c4 	addi	r2,sp,143
  802764:	df0022c4 	addi	fp,sp,139
  802768:	d8c03317 	ldw	r3,204(sp)
  80276c:	1739c83a 	sub	fp,r2,fp
  802770:	d9003317 	ldw	r4,204(sp)
  802774:	e0c7883a 	add	r3,fp,r3
  802778:	df003a15 	stw	fp,232(sp)
  80277c:	d8c02e15 	stw	r3,184(sp)
  802780:	00800044 	movi	r2,1
  802784:	1100b30e 	bge	r2,r4,802a54 <___vfprintf_internal_r+0x2110>
  802788:	d8c02e17 	ldw	r3,184(sp)
  80278c:	18c00044 	addi	r3,r3,1
  802790:	d8c02e15 	stw	r3,184(sp)
  802794:	1805883a 	mov	r2,r3
  802798:	1800ac16 	blt	r3,zero,802a4c <___vfprintf_internal_r+0x2108>
  80279c:	d8003215 	stw	zero,200(sp)
  8027a0:	003e5d06 	br	802118 <__alt_data_end+0xff802118>
  8027a4:	d9002c17 	ldw	r4,176(sp)
  8027a8:	d9801e04 	addi	r6,sp,120
  8027ac:	b80b883a 	mov	r5,r23
  8027b0:	08080a80 	call	8080a8 <__sprint_r>
  8027b4:	1039651e 	bne	r2,zero,800d4c <__alt_data_end+0xff800d4c>
  8027b8:	dc402617 	ldw	r17,152(sp)
  8027bc:	d8c02017 	ldw	r3,128(sp)
  8027c0:	d8801f17 	ldw	r2,124(sp)
  8027c4:	da000404 	addi	r8,sp,16
  8027c8:	003ed606 	br	802324 <__alt_data_end+0xff802324>
  8027cc:	582b883a 	mov	r21,r11
  8027d0:	d8002915 	stw	zero,164(sp)
  8027d4:	0038bd06 	br	800acc <__alt_data_end+0xff800acc>
  8027d8:	d8802917 	ldw	r2,164(sp)
  8027dc:	103e071e 	bne	r2,zero,801ffc <__alt_data_end+0xff801ffc>
  8027e0:	dc002915 	stw	r16,164(sp)
  8027e4:	003e0506 	br	801ffc <__alt_data_end+0xff801ffc>
  8027e8:	d9002917 	ldw	r4,164(sp)
  8027ec:	20c00044 	addi	r3,r4,1
  8027f0:	003e0f06 	br	802030 <__alt_data_end+0xff802030>
  8027f4:	01400184 	movi	r5,6
  8027f8:	d9402915 	stw	r5,164(sp)
  8027fc:	003dff06 	br	801ffc <__alt_data_end+0xff801ffc>
  802800:	d8802104 	addi	r2,sp,132
  802804:	d8800315 	stw	r2,12(sp)
  802808:	d8802504 	addi	r2,sp,148
  80280c:	d8800215 	stw	r2,8(sp)
  802810:	d8802604 	addi	r2,sp,152
  802814:	d8800115 	stw	r2,4(sp)
  802818:	d8802917 	ldw	r2,164(sp)
  80281c:	d9403617 	ldw	r5,216(sp)
  802820:	d9002c17 	ldw	r4,176(sp)
  802824:	d8800015 	stw	r2,0(sp)
  802828:	01c000c4 	movi	r7,3
  80282c:	980d883a 	mov	r6,r19
  802830:	da003d15 	stw	r8,244(sp)
  802834:	0802f680 	call	802f68 <_dtoa_r>
  802838:	d8c02917 	ldw	r3,164(sp)
  80283c:	da003d17 	ldw	r8,244(sp)
  802840:	1021883a 	mov	r16,r2
  802844:	10f9883a 	add	fp,r2,r3
  802848:	81000007 	ldb	r4,0(r16)
  80284c:	00800c04 	movi	r2,48
  802850:	20805e26 	beq	r4,r2,8029cc <___vfprintf_internal_r+0x2088>
  802854:	d8c02617 	ldw	r3,152(sp)
  802858:	e0f9883a 	add	fp,fp,r3
  80285c:	003e0a06 	br	802088 <__alt_data_end+0xff802088>
  802860:	00c00b44 	movi	r3,45
  802864:	24e0003c 	xorhi	r19,r4,32768
  802868:	d8c02a05 	stb	r3,168(sp)
  80286c:	003de906 	br	802014 <__alt_data_end+0xff802014>
  802870:	d8c03217 	ldw	r3,200(sp)
  802874:	00c07a0e 	bge	zero,r3,802a60 <___vfprintf_internal_r+0x211c>
  802878:	00800044 	movi	r2,1
  80287c:	d9003317 	ldw	r4,204(sp)
  802880:	1105883a 	add	r2,r2,r4
  802884:	d8802e15 	stw	r2,184(sp)
  802888:	10004e16 	blt	r2,zero,8029c4 <___vfprintf_internal_r+0x2080>
  80288c:	044019c4 	movi	r17,103
  802890:	003e2106 	br	802118 <__alt_data_end+0xff802118>
  802894:	d9002917 	ldw	r4,164(sp)
  802898:	d8802104 	addi	r2,sp,132
  80289c:	d8800315 	stw	r2,12(sp)
  8028a0:	d9000015 	stw	r4,0(sp)
  8028a4:	d8802504 	addi	r2,sp,148
  8028a8:	d9403617 	ldw	r5,216(sp)
  8028ac:	d9002c17 	ldw	r4,176(sp)
  8028b0:	d8800215 	stw	r2,8(sp)
  8028b4:	d8802604 	addi	r2,sp,152
  8028b8:	d8800115 	stw	r2,4(sp)
  8028bc:	01c000c4 	movi	r7,3
  8028c0:	980d883a 	mov	r6,r19
  8028c4:	da003d15 	stw	r8,244(sp)
  8028c8:	0802f680 	call	802f68 <_dtoa_r>
  8028cc:	d8c02917 	ldw	r3,164(sp)
  8028d0:	da003d17 	ldw	r8,244(sp)
  8028d4:	1021883a 	mov	r16,r2
  8028d8:	00801184 	movi	r2,70
  8028dc:	80f9883a 	add	fp,r16,r3
  8028e0:	88bfd926 	beq	r17,r2,802848 <__alt_data_end+0xff802848>
  8028e4:	003de806 	br	802088 <__alt_data_end+0xff802088>
  8028e8:	d9002917 	ldw	r4,164(sp)
  8028ec:	00c04d0e 	bge	zero,r3,802a24 <___vfprintf_internal_r+0x20e0>
  8028f0:	2000441e 	bne	r4,zero,802a04 <___vfprintf_internal_r+0x20c0>
  8028f4:	9480004c 	andi	r18,r18,1
  8028f8:	9000421e 	bne	r18,zero,802a04 <___vfprintf_internal_r+0x20c0>
  8028fc:	1805883a 	mov	r2,r3
  802900:	18007016 	blt	r3,zero,802ac4 <___vfprintf_internal_r+0x2180>
  802904:	d8c03217 	ldw	r3,200(sp)
  802908:	d8c02e15 	stw	r3,184(sp)
  80290c:	003e0206 	br	802118 <__alt_data_end+0xff802118>
  802910:	df0022c4 	addi	fp,sp,139
  802914:	dc002915 	stw	r16,164(sp)
  802918:	4027883a 	mov	r19,r8
  80291c:	e021883a 	mov	r16,fp
  802920:	b009883a 	mov	r4,r22
  802924:	01400284 	movi	r5,10
  802928:	080061c0 	call	80061c <__modsi3>
  80292c:	10800c04 	addi	r2,r2,48
  802930:	843fffc4 	addi	r16,r16,-1
  802934:	b009883a 	mov	r4,r22
  802938:	01400284 	movi	r5,10
  80293c:	80800005 	stb	r2,0(r16)
  802940:	08005980 	call	800598 <__divsi3>
  802944:	102d883a 	mov	r22,r2
  802948:	00800244 	movi	r2,9
  80294c:	15bff416 	blt	r2,r22,802920 <__alt_data_end+0xff802920>
  802950:	9811883a 	mov	r8,r19
  802954:	b0800c04 	addi	r2,r22,48
  802958:	8027883a 	mov	r19,r16
  80295c:	997fffc4 	addi	r5,r19,-1
  802960:	98bfffc5 	stb	r2,-1(r19)
  802964:	dc002917 	ldw	r16,164(sp)
  802968:	2f006a2e 	bgeu	r5,fp,802b14 <___vfprintf_internal_r+0x21d0>
  80296c:	d9c02384 	addi	r7,sp,142
  802970:	3ccfc83a 	sub	r7,r7,r19
  802974:	d9002344 	addi	r4,sp,141
  802978:	e1cf883a 	add	r7,fp,r7
  80297c:	00000106 	br	802984 <___vfprintf_internal_r+0x2040>
  802980:	28800003 	ldbu	r2,0(r5)
  802984:	20800005 	stb	r2,0(r4)
  802988:	21000044 	addi	r4,r4,1
  80298c:	29400044 	addi	r5,r5,1
  802990:	393ffb1e 	bne	r7,r4,802980 <__alt_data_end+0xff802980>
  802994:	d8802304 	addi	r2,sp,140
  802998:	14c5c83a 	sub	r2,r2,r19
  80299c:	d8c02344 	addi	r3,sp,141
  8029a0:	1885883a 	add	r2,r3,r2
  8029a4:	003f7006 	br	802768 <__alt_data_end+0xff802768>
  8029a8:	0005883a 	mov	r2,zero
  8029ac:	003f0f06 	br	8025ec <__alt_data_end+0xff8025ec>
  8029b0:	d8c03217 	ldw	r3,200(sp)
  8029b4:	18c00044 	addi	r3,r3,1
  8029b8:	d8c02e15 	stw	r3,184(sp)
  8029bc:	1805883a 	mov	r2,r3
  8029c0:	183fb20e 	bge	r3,zero,80288c <__alt_data_end+0xff80288c>
  8029c4:	0005883a 	mov	r2,zero
  8029c8:	003fb006 	br	80288c <__alt_data_end+0xff80288c>
  8029cc:	d9003617 	ldw	r4,216(sp)
  8029d0:	000d883a 	mov	r6,zero
  8029d4:	000f883a 	mov	r7,zero
  8029d8:	980b883a 	mov	r5,r19
  8029dc:	d8c03c15 	stw	r3,240(sp)
  8029e0:	da003d15 	stw	r8,244(sp)
  8029e4:	080bb6c0 	call	80bb6c <__eqdf2>
  8029e8:	d8c03c17 	ldw	r3,240(sp)
  8029ec:	da003d17 	ldw	r8,244(sp)
  8029f0:	103f9826 	beq	r2,zero,802854 <__alt_data_end+0xff802854>
  8029f4:	00800044 	movi	r2,1
  8029f8:	10c7c83a 	sub	r3,r2,r3
  8029fc:	d8c02615 	stw	r3,152(sp)
  802a00:	003f9506 	br	802858 <__alt_data_end+0xff802858>
  802a04:	d9002917 	ldw	r4,164(sp)
  802a08:	d8c03217 	ldw	r3,200(sp)
  802a0c:	20800044 	addi	r2,r4,1
  802a10:	1885883a 	add	r2,r3,r2
  802a14:	d8802e15 	stw	r2,184(sp)
  802a18:	103dbf0e 	bge	r2,zero,802118 <__alt_data_end+0xff802118>
  802a1c:	0005883a 	mov	r2,zero
  802a20:	003dbd06 	br	802118 <__alt_data_end+0xff802118>
  802a24:	2000211e 	bne	r4,zero,802aac <___vfprintf_internal_r+0x2168>
  802a28:	9480004c 	andi	r18,r18,1
  802a2c:	90001f1e 	bne	r18,zero,802aac <___vfprintf_internal_r+0x2168>
  802a30:	00800044 	movi	r2,1
  802a34:	d8802e15 	stw	r2,184(sp)
  802a38:	003db706 	br	802118 <__alt_data_end+0xff802118>
  802a3c:	00800b44 	movi	r2,45
  802a40:	05adc83a 	sub	r22,zero,r22
  802a44:	d8802305 	stb	r2,140(sp)
  802a48:	003f3f06 	br	802748 <__alt_data_end+0xff802748>
  802a4c:	0005883a 	mov	r2,zero
  802a50:	003f5206 	br	80279c <__alt_data_end+0xff80279c>
  802a54:	90a4703a 	and	r18,r18,r2
  802a58:	903f4e26 	beq	r18,zero,802794 <__alt_data_end+0xff802794>
  802a5c:	003f4a06 	br	802788 <__alt_data_end+0xff802788>
  802a60:	00800084 	movi	r2,2
  802a64:	10c5c83a 	sub	r2,r2,r3
  802a68:	003f8406 	br	80287c <__alt_data_end+0xff80287c>
  802a6c:	d8802d17 	ldw	r2,180(sp)
  802a70:	d9002d17 	ldw	r4,180(sp)
  802a74:	ac400043 	ldbu	r17,1(r21)
  802a78:	10800017 	ldw	r2,0(r2)
  802a7c:	582b883a 	mov	r21,r11
  802a80:	d8802915 	stw	r2,164(sp)
  802a84:	20800104 	addi	r2,r4,4
  802a88:	d9002917 	ldw	r4,164(sp)
  802a8c:	d8802d15 	stw	r2,180(sp)
  802a90:	203e7a0e 	bge	r4,zero,80247c <__alt_data_end+0xff80247c>
  802a94:	8c403fcc 	andi	r17,r17,255
  802a98:	00bfffc4 	movi	r2,-1
  802a9c:	8c40201c 	xori	r17,r17,128
  802aa0:	d8802915 	stw	r2,164(sp)
  802aa4:	8c7fe004 	addi	r17,r17,-128
  802aa8:	00380706 	br	800ac8 <__alt_data_end+0xff800ac8>
  802aac:	d8c02917 	ldw	r3,164(sp)
  802ab0:	18c00084 	addi	r3,r3,2
  802ab4:	d8c02e15 	stw	r3,184(sp)
  802ab8:	1805883a 	mov	r2,r3
  802abc:	183d960e 	bge	r3,zero,802118 <__alt_data_end+0xff802118>
  802ac0:	003fd606 	br	802a1c <__alt_data_end+0xff802a1c>
  802ac4:	0005883a 	mov	r2,zero
  802ac8:	003f8e06 	br	802904 <__alt_data_end+0xff802904>
  802acc:	9080004c 	andi	r2,r18,1
  802ad0:	103f811e 	bne	r2,zero,8028d8 <__alt_data_end+0xff8028d8>
  802ad4:	d8802117 	ldw	r2,132(sp)
  802ad8:	1405c83a 	sub	r2,r2,r16
  802adc:	d8803315 	stw	r2,204(sp)
  802ae0:	b47ef326 	beq	r22,r17,8026b0 <__alt_data_end+0xff8026b0>
  802ae4:	dd802617 	ldw	r22,152(sp)
  802ae8:	003f1106 	br	802730 <__alt_data_end+0xff802730>
  802aec:	d9c02785 	stb	r7,158(sp)
  802af0:	00390406 	br	800f04 <__alt_data_end+0xff800f04>
  802af4:	d9c02785 	stb	r7,158(sp)
  802af8:	0038d306 	br	800e48 <__alt_data_end+0xff800e48>
  802afc:	d9c02785 	stb	r7,158(sp)
  802b00:	003a6106 	br	801488 <__alt_data_end+0xff801488>
  802b04:	d9c02785 	stb	r7,158(sp)
  802b08:	003af806 	br	8016ec <__alt_data_end+0xff8016ec>
  802b0c:	0005883a 	mov	r2,zero
  802b10:	003d7e06 	br	80210c <__alt_data_end+0xff80210c>
  802b14:	d8802344 	addi	r2,sp,141
  802b18:	003f1306 	br	802768 <__alt_data_end+0xff802768>
  802b1c:	d9c02785 	stb	r7,158(sp)
  802b20:	00392306 	br	800fb0 <__alt_data_end+0xff800fb0>
  802b24:	d9c02785 	stb	r7,158(sp)
  802b28:	003aa906 	br	8015d0 <__alt_data_end+0xff8015d0>
  802b2c:	d9c02785 	stb	r7,158(sp)
  802b30:	003a3d06 	br	801428 <__alt_data_end+0xff801428>
  802b34:	d9c02785 	stb	r7,158(sp)
  802b38:	003aca06 	br	801664 <__alt_data_end+0xff801664>

00802b3c <__vfprintf_internal>:
  802b3c:	00802074 	movhi	r2,129
  802b40:	1085d904 	addi	r2,r2,5988
  802b44:	300f883a 	mov	r7,r6
  802b48:	280d883a 	mov	r6,r5
  802b4c:	200b883a 	mov	r5,r4
  802b50:	11000017 	ldw	r4,0(r2)
  802b54:	08009441 	jmpi	800944 <___vfprintf_internal_r>

00802b58 <__sbprintf>:
  802b58:	2880030b 	ldhu	r2,12(r5)
  802b5c:	2ac01917 	ldw	r11,100(r5)
  802b60:	2a80038b 	ldhu	r10,14(r5)
  802b64:	2a400717 	ldw	r9,28(r5)
  802b68:	2a000917 	ldw	r8,36(r5)
  802b6c:	defee204 	addi	sp,sp,-1144
  802b70:	00c10004 	movi	r3,1024
  802b74:	dc011a15 	stw	r16,1128(sp)
  802b78:	10bfff4c 	andi	r2,r2,65533
  802b7c:	2821883a 	mov	r16,r5
  802b80:	d8cb883a 	add	r5,sp,r3
  802b84:	dc811c15 	stw	r18,1136(sp)
  802b88:	dc411b15 	stw	r17,1132(sp)
  802b8c:	dfc11d15 	stw	ra,1140(sp)
  802b90:	2025883a 	mov	r18,r4
  802b94:	d881030d 	sth	r2,1036(sp)
  802b98:	dac11915 	stw	r11,1124(sp)
  802b9c:	da81038d 	sth	r10,1038(sp)
  802ba0:	da410715 	stw	r9,1052(sp)
  802ba4:	da010915 	stw	r8,1060(sp)
  802ba8:	dec10015 	stw	sp,1024(sp)
  802bac:	dec10415 	stw	sp,1040(sp)
  802bb0:	d8c10215 	stw	r3,1032(sp)
  802bb4:	d8c10515 	stw	r3,1044(sp)
  802bb8:	d8010615 	stw	zero,1048(sp)
  802bbc:	08009440 	call	800944 <___vfprintf_internal_r>
  802bc0:	1023883a 	mov	r17,r2
  802bc4:	10000416 	blt	r2,zero,802bd8 <__sbprintf+0x80>
  802bc8:	d9410004 	addi	r5,sp,1024
  802bcc:	9009883a 	mov	r4,r18
  802bd0:	080480c0 	call	80480c <_fflush_r>
  802bd4:	10000d1e 	bne	r2,zero,802c0c <__sbprintf+0xb4>
  802bd8:	d881030b 	ldhu	r2,1036(sp)
  802bdc:	1080100c 	andi	r2,r2,64
  802be0:	10000326 	beq	r2,zero,802bf0 <__sbprintf+0x98>
  802be4:	8080030b 	ldhu	r2,12(r16)
  802be8:	10801014 	ori	r2,r2,64
  802bec:	8080030d 	sth	r2,12(r16)
  802bf0:	8805883a 	mov	r2,r17
  802bf4:	dfc11d17 	ldw	ra,1140(sp)
  802bf8:	dc811c17 	ldw	r18,1136(sp)
  802bfc:	dc411b17 	ldw	r17,1132(sp)
  802c00:	dc011a17 	ldw	r16,1128(sp)
  802c04:	dec11e04 	addi	sp,sp,1144
  802c08:	f800283a 	ret
  802c0c:	047fffc4 	movi	r17,-1
  802c10:	003ff106 	br	802bd8 <__alt_data_end+0xff802bd8>

00802c14 <__swsetup_r>:
  802c14:	00802074 	movhi	r2,129
  802c18:	defffd04 	addi	sp,sp,-12
  802c1c:	1085d904 	addi	r2,r2,5988
  802c20:	dc400115 	stw	r17,4(sp)
  802c24:	2023883a 	mov	r17,r4
  802c28:	11000017 	ldw	r4,0(r2)
  802c2c:	dc000015 	stw	r16,0(sp)
  802c30:	dfc00215 	stw	ra,8(sp)
  802c34:	2821883a 	mov	r16,r5
  802c38:	20000226 	beq	r4,zero,802c44 <__swsetup_r+0x30>
  802c3c:	20800e17 	ldw	r2,56(r4)
  802c40:	10003126 	beq	r2,zero,802d08 <__swsetup_r+0xf4>
  802c44:	8080030b 	ldhu	r2,12(r16)
  802c48:	10c0020c 	andi	r3,r2,8
  802c4c:	1009883a 	mov	r4,r2
  802c50:	18000f26 	beq	r3,zero,802c90 <__swsetup_r+0x7c>
  802c54:	80c00417 	ldw	r3,16(r16)
  802c58:	18001526 	beq	r3,zero,802cb0 <__swsetup_r+0x9c>
  802c5c:	1100004c 	andi	r4,r2,1
  802c60:	20001c1e 	bne	r4,zero,802cd4 <__swsetup_r+0xc0>
  802c64:	1080008c 	andi	r2,r2,2
  802c68:	1000291e 	bne	r2,zero,802d10 <__swsetup_r+0xfc>
  802c6c:	80800517 	ldw	r2,20(r16)
  802c70:	80800215 	stw	r2,8(r16)
  802c74:	18001c26 	beq	r3,zero,802ce8 <__swsetup_r+0xd4>
  802c78:	0005883a 	mov	r2,zero
  802c7c:	dfc00217 	ldw	ra,8(sp)
  802c80:	dc400117 	ldw	r17,4(sp)
  802c84:	dc000017 	ldw	r16,0(sp)
  802c88:	dec00304 	addi	sp,sp,12
  802c8c:	f800283a 	ret
  802c90:	2080040c 	andi	r2,r4,16
  802c94:	10002e26 	beq	r2,zero,802d50 <__swsetup_r+0x13c>
  802c98:	2080010c 	andi	r2,r4,4
  802c9c:	10001e1e 	bne	r2,zero,802d18 <__swsetup_r+0x104>
  802ca0:	80c00417 	ldw	r3,16(r16)
  802ca4:	20800214 	ori	r2,r4,8
  802ca8:	8080030d 	sth	r2,12(r16)
  802cac:	183feb1e 	bne	r3,zero,802c5c <__alt_data_end+0xff802c5c>
  802cb0:	1100a00c 	andi	r4,r2,640
  802cb4:	01408004 	movi	r5,512
  802cb8:	217fe826 	beq	r4,r5,802c5c <__alt_data_end+0xff802c5c>
  802cbc:	800b883a 	mov	r5,r16
  802cc0:	8809883a 	mov	r4,r17
  802cc4:	080578c0 	call	80578c <__smakebuf_r>
  802cc8:	8080030b 	ldhu	r2,12(r16)
  802ccc:	80c00417 	ldw	r3,16(r16)
  802cd0:	003fe206 	br	802c5c <__alt_data_end+0xff802c5c>
  802cd4:	80800517 	ldw	r2,20(r16)
  802cd8:	80000215 	stw	zero,8(r16)
  802cdc:	0085c83a 	sub	r2,zero,r2
  802ce0:	80800615 	stw	r2,24(r16)
  802ce4:	183fe41e 	bne	r3,zero,802c78 <__alt_data_end+0xff802c78>
  802ce8:	80c0030b 	ldhu	r3,12(r16)
  802cec:	0005883a 	mov	r2,zero
  802cf0:	1900200c 	andi	r4,r3,128
  802cf4:	203fe126 	beq	r4,zero,802c7c <__alt_data_end+0xff802c7c>
  802cf8:	18c01014 	ori	r3,r3,64
  802cfc:	80c0030d 	sth	r3,12(r16)
  802d00:	00bfffc4 	movi	r2,-1
  802d04:	003fdd06 	br	802c7c <__alt_data_end+0xff802c7c>
  802d08:	0804be80 	call	804be8 <__sinit>
  802d0c:	003fcd06 	br	802c44 <__alt_data_end+0xff802c44>
  802d10:	0005883a 	mov	r2,zero
  802d14:	003fd606 	br	802c70 <__alt_data_end+0xff802c70>
  802d18:	81400c17 	ldw	r5,48(r16)
  802d1c:	28000626 	beq	r5,zero,802d38 <__swsetup_r+0x124>
  802d20:	80801004 	addi	r2,r16,64
  802d24:	28800326 	beq	r5,r2,802d34 <__swsetup_r+0x120>
  802d28:	8809883a 	mov	r4,r17
  802d2c:	0804d5c0 	call	804d5c <_free_r>
  802d30:	8100030b 	ldhu	r4,12(r16)
  802d34:	80000c15 	stw	zero,48(r16)
  802d38:	80c00417 	ldw	r3,16(r16)
  802d3c:	00bff6c4 	movi	r2,-37
  802d40:	1108703a 	and	r4,r2,r4
  802d44:	80000115 	stw	zero,4(r16)
  802d48:	80c00015 	stw	r3,0(r16)
  802d4c:	003fd506 	br	802ca4 <__alt_data_end+0xff802ca4>
  802d50:	00800244 	movi	r2,9
  802d54:	88800015 	stw	r2,0(r17)
  802d58:	20801014 	ori	r2,r4,64
  802d5c:	8080030d 	sth	r2,12(r16)
  802d60:	00bfffc4 	movi	r2,-1
  802d64:	003fc506 	br	802c7c <__alt_data_end+0xff802c7c>

00802d68 <quorem>:
  802d68:	defff704 	addi	sp,sp,-36
  802d6c:	dc800215 	stw	r18,8(sp)
  802d70:	20800417 	ldw	r2,16(r4)
  802d74:	2c800417 	ldw	r18,16(r5)
  802d78:	dfc00815 	stw	ra,32(sp)
  802d7c:	ddc00715 	stw	r23,28(sp)
  802d80:	dd800615 	stw	r22,24(sp)
  802d84:	dd400515 	stw	r21,20(sp)
  802d88:	dd000415 	stw	r20,16(sp)
  802d8c:	dcc00315 	stw	r19,12(sp)
  802d90:	dc400115 	stw	r17,4(sp)
  802d94:	dc000015 	stw	r16,0(sp)
  802d98:	14807116 	blt	r2,r18,802f60 <quorem+0x1f8>
  802d9c:	94bfffc4 	addi	r18,r18,-1
  802da0:	94ad883a 	add	r22,r18,r18
  802da4:	b5ad883a 	add	r22,r22,r22
  802da8:	2c400504 	addi	r17,r5,20
  802dac:	8da9883a 	add	r20,r17,r22
  802db0:	25400504 	addi	r21,r4,20
  802db4:	282f883a 	mov	r23,r5
  802db8:	adad883a 	add	r22,r21,r22
  802dbc:	a1400017 	ldw	r5,0(r20)
  802dc0:	2021883a 	mov	r16,r4
  802dc4:	b1000017 	ldw	r4,0(r22)
  802dc8:	29400044 	addi	r5,r5,1
  802dcc:	08006900 	call	800690 <__udivsi3>
  802dd0:	1027883a 	mov	r19,r2
  802dd4:	10002c26 	beq	r2,zero,802e88 <quorem+0x120>
  802dd8:	a813883a 	mov	r9,r21
  802ddc:	880b883a 	mov	r5,r17
  802de0:	0009883a 	mov	r4,zero
  802de4:	000d883a 	mov	r6,zero
  802de8:	2a000017 	ldw	r8,0(r5)
  802dec:	49c00017 	ldw	r7,0(r9)
  802df0:	29400104 	addi	r5,r5,4
  802df4:	40bfffcc 	andi	r2,r8,65535
  802df8:	14c5383a 	mul	r2,r2,r19
  802dfc:	4010d43a 	srli	r8,r8,16
  802e00:	38ffffcc 	andi	r3,r7,65535
  802e04:	1105883a 	add	r2,r2,r4
  802e08:	1008d43a 	srli	r4,r2,16
  802e0c:	44d1383a 	mul	r8,r8,r19
  802e10:	198d883a 	add	r6,r3,r6
  802e14:	10ffffcc 	andi	r3,r2,65535
  802e18:	30c7c83a 	sub	r3,r6,r3
  802e1c:	380ed43a 	srli	r7,r7,16
  802e20:	4105883a 	add	r2,r8,r4
  802e24:	180dd43a 	srai	r6,r3,16
  802e28:	113fffcc 	andi	r4,r2,65535
  802e2c:	390fc83a 	sub	r7,r7,r4
  802e30:	398d883a 	add	r6,r7,r6
  802e34:	300e943a 	slli	r7,r6,16
  802e38:	18ffffcc 	andi	r3,r3,65535
  802e3c:	1008d43a 	srli	r4,r2,16
  802e40:	38ceb03a 	or	r7,r7,r3
  802e44:	49c00015 	stw	r7,0(r9)
  802e48:	300dd43a 	srai	r6,r6,16
  802e4c:	4a400104 	addi	r9,r9,4
  802e50:	a17fe52e 	bgeu	r20,r5,802de8 <__alt_data_end+0xff802de8>
  802e54:	b0800017 	ldw	r2,0(r22)
  802e58:	10000b1e 	bne	r2,zero,802e88 <quorem+0x120>
  802e5c:	b0bfff04 	addi	r2,r22,-4
  802e60:	a880082e 	bgeu	r21,r2,802e84 <quorem+0x11c>
  802e64:	b0ffff17 	ldw	r3,-4(r22)
  802e68:	18000326 	beq	r3,zero,802e78 <quorem+0x110>
  802e6c:	00000506 	br	802e84 <quorem+0x11c>
  802e70:	10c00017 	ldw	r3,0(r2)
  802e74:	1800031e 	bne	r3,zero,802e84 <quorem+0x11c>
  802e78:	10bfff04 	addi	r2,r2,-4
  802e7c:	94bfffc4 	addi	r18,r18,-1
  802e80:	a8bffb36 	bltu	r21,r2,802e70 <__alt_data_end+0xff802e70>
  802e84:	84800415 	stw	r18,16(r16)
  802e88:	b80b883a 	mov	r5,r23
  802e8c:	8009883a 	mov	r4,r16
  802e90:	0806ecc0 	call	806ecc <__mcmp>
  802e94:	10002616 	blt	r2,zero,802f30 <quorem+0x1c8>
  802e98:	9cc00044 	addi	r19,r19,1
  802e9c:	a805883a 	mov	r2,r21
  802ea0:	000b883a 	mov	r5,zero
  802ea4:	11000017 	ldw	r4,0(r2)
  802ea8:	89800017 	ldw	r6,0(r17)
  802eac:	10800104 	addi	r2,r2,4
  802eb0:	20ffffcc 	andi	r3,r4,65535
  802eb4:	194b883a 	add	r5,r3,r5
  802eb8:	30ffffcc 	andi	r3,r6,65535
  802ebc:	28c7c83a 	sub	r3,r5,r3
  802ec0:	300cd43a 	srli	r6,r6,16
  802ec4:	2008d43a 	srli	r4,r4,16
  802ec8:	180bd43a 	srai	r5,r3,16
  802ecc:	18ffffcc 	andi	r3,r3,65535
  802ed0:	2189c83a 	sub	r4,r4,r6
  802ed4:	2149883a 	add	r4,r4,r5
  802ed8:	200c943a 	slli	r6,r4,16
  802edc:	8c400104 	addi	r17,r17,4
  802ee0:	200bd43a 	srai	r5,r4,16
  802ee4:	30c6b03a 	or	r3,r6,r3
  802ee8:	10ffff15 	stw	r3,-4(r2)
  802eec:	a47fed2e 	bgeu	r20,r17,802ea4 <__alt_data_end+0xff802ea4>
  802ef0:	9485883a 	add	r2,r18,r18
  802ef4:	1085883a 	add	r2,r2,r2
  802ef8:	a887883a 	add	r3,r21,r2
  802efc:	18800017 	ldw	r2,0(r3)
  802f00:	10000b1e 	bne	r2,zero,802f30 <quorem+0x1c8>
  802f04:	18bfff04 	addi	r2,r3,-4
  802f08:	a880082e 	bgeu	r21,r2,802f2c <quorem+0x1c4>
  802f0c:	18ffff17 	ldw	r3,-4(r3)
  802f10:	18000326 	beq	r3,zero,802f20 <quorem+0x1b8>
  802f14:	00000506 	br	802f2c <quorem+0x1c4>
  802f18:	10c00017 	ldw	r3,0(r2)
  802f1c:	1800031e 	bne	r3,zero,802f2c <quorem+0x1c4>
  802f20:	10bfff04 	addi	r2,r2,-4
  802f24:	94bfffc4 	addi	r18,r18,-1
  802f28:	a8bffb36 	bltu	r21,r2,802f18 <__alt_data_end+0xff802f18>
  802f2c:	84800415 	stw	r18,16(r16)
  802f30:	9805883a 	mov	r2,r19
  802f34:	dfc00817 	ldw	ra,32(sp)
  802f38:	ddc00717 	ldw	r23,28(sp)
  802f3c:	dd800617 	ldw	r22,24(sp)
  802f40:	dd400517 	ldw	r21,20(sp)
  802f44:	dd000417 	ldw	r20,16(sp)
  802f48:	dcc00317 	ldw	r19,12(sp)
  802f4c:	dc800217 	ldw	r18,8(sp)
  802f50:	dc400117 	ldw	r17,4(sp)
  802f54:	dc000017 	ldw	r16,0(sp)
  802f58:	dec00904 	addi	sp,sp,36
  802f5c:	f800283a 	ret
  802f60:	0005883a 	mov	r2,zero
  802f64:	003ff306 	br	802f34 <__alt_data_end+0xff802f34>

00802f68 <_dtoa_r>:
  802f68:	20801017 	ldw	r2,64(r4)
  802f6c:	deffde04 	addi	sp,sp,-136
  802f70:	df002015 	stw	fp,128(sp)
  802f74:	dcc01b15 	stw	r19,108(sp)
  802f78:	dc801a15 	stw	r18,104(sp)
  802f7c:	dc401915 	stw	r17,100(sp)
  802f80:	dc001815 	stw	r16,96(sp)
  802f84:	dfc02115 	stw	ra,132(sp)
  802f88:	ddc01f15 	stw	r23,124(sp)
  802f8c:	dd801e15 	stw	r22,120(sp)
  802f90:	dd401d15 	stw	r21,116(sp)
  802f94:	dd001c15 	stw	r20,112(sp)
  802f98:	d9c00315 	stw	r7,12(sp)
  802f9c:	2039883a 	mov	fp,r4
  802fa0:	3023883a 	mov	r17,r6
  802fa4:	2825883a 	mov	r18,r5
  802fa8:	dc002417 	ldw	r16,144(sp)
  802fac:	3027883a 	mov	r19,r6
  802fb0:	10000826 	beq	r2,zero,802fd4 <_dtoa_r+0x6c>
  802fb4:	21801117 	ldw	r6,68(r4)
  802fb8:	00c00044 	movi	r3,1
  802fbc:	100b883a 	mov	r5,r2
  802fc0:	1986983a 	sll	r3,r3,r6
  802fc4:	11800115 	stw	r6,4(r2)
  802fc8:	10c00215 	stw	r3,8(r2)
  802fcc:	08066ac0 	call	8066ac <_Bfree>
  802fd0:	e0001015 	stw	zero,64(fp)
  802fd4:	88002e16 	blt	r17,zero,803090 <_dtoa_r+0x128>
  802fd8:	80000015 	stw	zero,0(r16)
  802fdc:	889ffc2c 	andhi	r2,r17,32752
  802fe0:	00dffc34 	movhi	r3,32752
  802fe4:	10c01c26 	beq	r2,r3,803058 <_dtoa_r+0xf0>
  802fe8:	000d883a 	mov	r6,zero
  802fec:	000f883a 	mov	r7,zero
  802ff0:	9009883a 	mov	r4,r18
  802ff4:	980b883a 	mov	r5,r19
  802ff8:	080bb6c0 	call	80bb6c <__eqdf2>
  802ffc:	10002b1e 	bne	r2,zero,8030ac <_dtoa_r+0x144>
  803000:	d9c02317 	ldw	r7,140(sp)
  803004:	00800044 	movi	r2,1
  803008:	38800015 	stw	r2,0(r7)
  80300c:	d8802517 	ldw	r2,148(sp)
  803010:	10019e26 	beq	r2,zero,80368c <_dtoa_r+0x724>
  803014:	d8c02517 	ldw	r3,148(sp)
  803018:	00802074 	movhi	r2,129
  80301c:	10be8044 	addi	r2,r2,-1535
  803020:	18800015 	stw	r2,0(r3)
  803024:	10bfffc4 	addi	r2,r2,-1
  803028:	dfc02117 	ldw	ra,132(sp)
  80302c:	df002017 	ldw	fp,128(sp)
  803030:	ddc01f17 	ldw	r23,124(sp)
  803034:	dd801e17 	ldw	r22,120(sp)
  803038:	dd401d17 	ldw	r21,116(sp)
  80303c:	dd001c17 	ldw	r20,112(sp)
  803040:	dcc01b17 	ldw	r19,108(sp)
  803044:	dc801a17 	ldw	r18,104(sp)
  803048:	dc401917 	ldw	r17,100(sp)
  80304c:	dc001817 	ldw	r16,96(sp)
  803050:	dec02204 	addi	sp,sp,136
  803054:	f800283a 	ret
  803058:	d8c02317 	ldw	r3,140(sp)
  80305c:	0089c3c4 	movi	r2,9999
  803060:	18800015 	stw	r2,0(r3)
  803064:	90017726 	beq	r18,zero,803644 <_dtoa_r+0x6dc>
  803068:	00802074 	movhi	r2,129
  80306c:	10be8c04 	addi	r2,r2,-1488
  803070:	d9002517 	ldw	r4,148(sp)
  803074:	203fec26 	beq	r4,zero,803028 <__alt_data_end+0xff803028>
  803078:	10c000c7 	ldb	r3,3(r2)
  80307c:	1801781e 	bne	r3,zero,803660 <_dtoa_r+0x6f8>
  803080:	10c000c4 	addi	r3,r2,3
  803084:	d9802517 	ldw	r6,148(sp)
  803088:	30c00015 	stw	r3,0(r6)
  80308c:	003fe606 	br	803028 <__alt_data_end+0xff803028>
  803090:	04e00034 	movhi	r19,32768
  803094:	9cffffc4 	addi	r19,r19,-1
  803098:	00800044 	movi	r2,1
  80309c:	8ce6703a 	and	r19,r17,r19
  8030a0:	80800015 	stw	r2,0(r16)
  8030a4:	9823883a 	mov	r17,r19
  8030a8:	003fcc06 	br	802fdc <__alt_data_end+0xff802fdc>
  8030ac:	d8800204 	addi	r2,sp,8
  8030b0:	d8800015 	stw	r2,0(sp)
  8030b4:	d9c00104 	addi	r7,sp,4
  8030b8:	900b883a 	mov	r5,r18
  8030bc:	980d883a 	mov	r6,r19
  8030c0:	e009883a 	mov	r4,fp
  8030c4:	8820d53a 	srli	r16,r17,20
  8030c8:	08072980 	call	807298 <__d2b>
  8030cc:	d8800915 	stw	r2,36(sp)
  8030d0:	8001651e 	bne	r16,zero,803668 <_dtoa_r+0x700>
  8030d4:	dd800217 	ldw	r22,8(sp)
  8030d8:	dc000117 	ldw	r16,4(sp)
  8030dc:	00800804 	movi	r2,32
  8030e0:	b421883a 	add	r16,r22,r16
  8030e4:	80c10c84 	addi	r3,r16,1074
  8030e8:	10c2d10e 	bge	r2,r3,803c30 <_dtoa_r+0xcc8>
  8030ec:	00801004 	movi	r2,64
  8030f0:	81010484 	addi	r4,r16,1042
  8030f4:	10c7c83a 	sub	r3,r2,r3
  8030f8:	9108d83a 	srl	r4,r18,r4
  8030fc:	88e2983a 	sll	r17,r17,r3
  803100:	2448b03a 	or	r4,r4,r17
  803104:	080cf340 	call	80cf34 <__floatunsidf>
  803108:	017f8434 	movhi	r5,65040
  80310c:	01800044 	movi	r6,1
  803110:	1009883a 	mov	r4,r2
  803114:	194b883a 	add	r5,r3,r5
  803118:	843fffc4 	addi	r16,r16,-1
  80311c:	d9801115 	stw	r6,68(sp)
  803120:	000d883a 	mov	r6,zero
  803124:	01cffe34 	movhi	r7,16376
  803128:	080c4dc0 	call	80c4dc <__subdf3>
  80312c:	0198dbf4 	movhi	r6,25455
  803130:	01cff4f4 	movhi	r7,16339
  803134:	3190d844 	addi	r6,r6,17249
  803138:	39e1e9c4 	addi	r7,r7,-30809
  80313c:	1009883a 	mov	r4,r2
  803140:	180b883a 	mov	r5,r3
  803144:	080bdc40 	call	80bdc4 <__muldf3>
  803148:	01a2d874 	movhi	r6,35681
  80314c:	01cff1f4 	movhi	r7,16327
  803150:	31b22cc4 	addi	r6,r6,-14157
  803154:	39e28a04 	addi	r7,r7,-30168
  803158:	180b883a 	mov	r5,r3
  80315c:	1009883a 	mov	r4,r2
  803160:	080a9d80 	call	80a9d8 <__adddf3>
  803164:	8009883a 	mov	r4,r16
  803168:	1029883a 	mov	r20,r2
  80316c:	1823883a 	mov	r17,r3
  803170:	080ce580 	call	80ce58 <__floatsidf>
  803174:	019427f4 	movhi	r6,20639
  803178:	01cff4f4 	movhi	r7,16339
  80317c:	319e7ec4 	addi	r6,r6,31227
  803180:	39d104c4 	addi	r7,r7,17427
  803184:	1009883a 	mov	r4,r2
  803188:	180b883a 	mov	r5,r3
  80318c:	080bdc40 	call	80bdc4 <__muldf3>
  803190:	100d883a 	mov	r6,r2
  803194:	180f883a 	mov	r7,r3
  803198:	a009883a 	mov	r4,r20
  80319c:	880b883a 	mov	r5,r17
  8031a0:	080a9d80 	call	80a9d8 <__adddf3>
  8031a4:	1009883a 	mov	r4,r2
  8031a8:	180b883a 	mov	r5,r3
  8031ac:	1029883a 	mov	r20,r2
  8031b0:	1823883a 	mov	r17,r3
  8031b4:	080cdd80 	call	80cdd8 <__fixdfsi>
  8031b8:	000d883a 	mov	r6,zero
  8031bc:	000f883a 	mov	r7,zero
  8031c0:	a009883a 	mov	r4,r20
  8031c4:	880b883a 	mov	r5,r17
  8031c8:	d8800515 	stw	r2,20(sp)
  8031cc:	080bcd00 	call	80bcd0 <__ledf2>
  8031d0:	10028716 	blt	r2,zero,803bf0 <_dtoa_r+0xc88>
  8031d4:	d8c00517 	ldw	r3,20(sp)
  8031d8:	00800584 	movi	r2,22
  8031dc:	10c27536 	bltu	r2,r3,803bb4 <_dtoa_r+0xc4c>
  8031e0:	180490fa 	slli	r2,r3,3
  8031e4:	00c02074 	movhi	r3,129
  8031e8:	18fea804 	addi	r3,r3,-1376
  8031ec:	1885883a 	add	r2,r3,r2
  8031f0:	11000017 	ldw	r4,0(r2)
  8031f4:	11400117 	ldw	r5,4(r2)
  8031f8:	900d883a 	mov	r6,r18
  8031fc:	980f883a 	mov	r7,r19
  803200:	080bbf40 	call	80bbf4 <__gedf2>
  803204:	00828d0e 	bge	zero,r2,803c3c <_dtoa_r+0xcd4>
  803208:	d9000517 	ldw	r4,20(sp)
  80320c:	d8000e15 	stw	zero,56(sp)
  803210:	213fffc4 	addi	r4,r4,-1
  803214:	d9000515 	stw	r4,20(sp)
  803218:	b42dc83a 	sub	r22,r22,r16
  80321c:	b5bfffc4 	addi	r22,r22,-1
  803220:	b0026f16 	blt	r22,zero,803be0 <_dtoa_r+0xc78>
  803224:	d8000815 	stw	zero,32(sp)
  803228:	d9c00517 	ldw	r7,20(sp)
  80322c:	38026416 	blt	r7,zero,803bc0 <_dtoa_r+0xc58>
  803230:	b1ed883a 	add	r22,r22,r7
  803234:	d9c00d15 	stw	r7,52(sp)
  803238:	d8000a15 	stw	zero,40(sp)
  80323c:	d9800317 	ldw	r6,12(sp)
  803240:	00800244 	movi	r2,9
  803244:	11811436 	bltu	r2,r6,803698 <_dtoa_r+0x730>
  803248:	00800144 	movi	r2,5
  80324c:	1184e10e 	bge	r2,r6,8045d4 <_dtoa_r+0x166c>
  803250:	31bfff04 	addi	r6,r6,-4
  803254:	d9800315 	stw	r6,12(sp)
  803258:	0023883a 	mov	r17,zero
  80325c:	d9800317 	ldw	r6,12(sp)
  803260:	008000c4 	movi	r2,3
  803264:	30836726 	beq	r6,r2,804004 <_dtoa_r+0x109c>
  803268:	1183410e 	bge	r2,r6,803f70 <_dtoa_r+0x1008>
  80326c:	d9c00317 	ldw	r7,12(sp)
  803270:	00800104 	movi	r2,4
  803274:	38827c26 	beq	r7,r2,803c68 <_dtoa_r+0xd00>
  803278:	00800144 	movi	r2,5
  80327c:	3884c41e 	bne	r7,r2,804590 <_dtoa_r+0x1628>
  803280:	00800044 	movi	r2,1
  803284:	d8800b15 	stw	r2,44(sp)
  803288:	d8c00517 	ldw	r3,20(sp)
  80328c:	d9002217 	ldw	r4,136(sp)
  803290:	1907883a 	add	r3,r3,r4
  803294:	19800044 	addi	r6,r3,1
  803298:	d8c00c15 	stw	r3,48(sp)
  80329c:	d9800615 	stw	r6,24(sp)
  8032a0:	0183a40e 	bge	zero,r6,804134 <_dtoa_r+0x11cc>
  8032a4:	d9800617 	ldw	r6,24(sp)
  8032a8:	3021883a 	mov	r16,r6
  8032ac:	e0001115 	stw	zero,68(fp)
  8032b0:	008005c4 	movi	r2,23
  8032b4:	1184c92e 	bgeu	r2,r6,8045dc <_dtoa_r+0x1674>
  8032b8:	00c00044 	movi	r3,1
  8032bc:	00800104 	movi	r2,4
  8032c0:	1085883a 	add	r2,r2,r2
  8032c4:	11000504 	addi	r4,r2,20
  8032c8:	180b883a 	mov	r5,r3
  8032cc:	18c00044 	addi	r3,r3,1
  8032d0:	313ffb2e 	bgeu	r6,r4,8032c0 <__alt_data_end+0xff8032c0>
  8032d4:	e1401115 	stw	r5,68(fp)
  8032d8:	e009883a 	mov	r4,fp
  8032dc:	08066040 	call	806604 <_Balloc>
  8032e0:	d8800715 	stw	r2,28(sp)
  8032e4:	e0801015 	stw	r2,64(fp)
  8032e8:	00800384 	movi	r2,14
  8032ec:	1400f736 	bltu	r2,r16,8036cc <_dtoa_r+0x764>
  8032f0:	8800f626 	beq	r17,zero,8036cc <_dtoa_r+0x764>
  8032f4:	d9c00517 	ldw	r7,20(sp)
  8032f8:	01c39a0e 	bge	zero,r7,804164 <_dtoa_r+0x11fc>
  8032fc:	388003cc 	andi	r2,r7,15
  803300:	100490fa 	slli	r2,r2,3
  803304:	382bd13a 	srai	r21,r7,4
  803308:	00c02074 	movhi	r3,129
  80330c:	18fea804 	addi	r3,r3,-1376
  803310:	1885883a 	add	r2,r3,r2
  803314:	a8c0040c 	andi	r3,r21,16
  803318:	12400017 	ldw	r9,0(r2)
  80331c:	12000117 	ldw	r8,4(r2)
  803320:	18037926 	beq	r3,zero,804108 <_dtoa_r+0x11a0>
  803324:	00802074 	movhi	r2,129
  803328:	10be9e04 	addi	r2,r2,-1416
  80332c:	11800817 	ldw	r6,32(r2)
  803330:	11c00917 	ldw	r7,36(r2)
  803334:	9009883a 	mov	r4,r18
  803338:	980b883a 	mov	r5,r19
  80333c:	da001715 	stw	r8,92(sp)
  803340:	da401615 	stw	r9,88(sp)
  803344:	080b2840 	call	80b284 <__divdf3>
  803348:	da001717 	ldw	r8,92(sp)
  80334c:	da401617 	ldw	r9,88(sp)
  803350:	ad4003cc 	andi	r21,r21,15
  803354:	040000c4 	movi	r16,3
  803358:	1023883a 	mov	r17,r2
  80335c:	1829883a 	mov	r20,r3
  803360:	a8001126 	beq	r21,zero,8033a8 <_dtoa_r+0x440>
  803364:	05c02074 	movhi	r23,129
  803368:	bdfe9e04 	addi	r23,r23,-1416
  80336c:	4805883a 	mov	r2,r9
  803370:	4007883a 	mov	r3,r8
  803374:	a980004c 	andi	r6,r21,1
  803378:	1009883a 	mov	r4,r2
  80337c:	a82bd07a 	srai	r21,r21,1
  803380:	180b883a 	mov	r5,r3
  803384:	30000426 	beq	r6,zero,803398 <_dtoa_r+0x430>
  803388:	b9800017 	ldw	r6,0(r23)
  80338c:	b9c00117 	ldw	r7,4(r23)
  803390:	84000044 	addi	r16,r16,1
  803394:	080bdc40 	call	80bdc4 <__muldf3>
  803398:	bdc00204 	addi	r23,r23,8
  80339c:	a83ff51e 	bne	r21,zero,803374 <__alt_data_end+0xff803374>
  8033a0:	1013883a 	mov	r9,r2
  8033a4:	1811883a 	mov	r8,r3
  8033a8:	480d883a 	mov	r6,r9
  8033ac:	400f883a 	mov	r7,r8
  8033b0:	8809883a 	mov	r4,r17
  8033b4:	a00b883a 	mov	r5,r20
  8033b8:	080b2840 	call	80b284 <__divdf3>
  8033bc:	d8800f15 	stw	r2,60(sp)
  8033c0:	d8c01015 	stw	r3,64(sp)
  8033c4:	d8c00e17 	ldw	r3,56(sp)
  8033c8:	18000626 	beq	r3,zero,8033e4 <_dtoa_r+0x47c>
  8033cc:	d9000f17 	ldw	r4,60(sp)
  8033d0:	d9401017 	ldw	r5,64(sp)
  8033d4:	000d883a 	mov	r6,zero
  8033d8:	01cffc34 	movhi	r7,16368
  8033dc:	080bcd00 	call	80bcd0 <__ledf2>
  8033e0:	10040b16 	blt	r2,zero,804410 <_dtoa_r+0x14a8>
  8033e4:	8009883a 	mov	r4,r16
  8033e8:	080ce580 	call	80ce58 <__floatsidf>
  8033ec:	d9800f17 	ldw	r6,60(sp)
  8033f0:	d9c01017 	ldw	r7,64(sp)
  8033f4:	1009883a 	mov	r4,r2
  8033f8:	180b883a 	mov	r5,r3
  8033fc:	080bdc40 	call	80bdc4 <__muldf3>
  803400:	000d883a 	mov	r6,zero
  803404:	01d00734 	movhi	r7,16412
  803408:	1009883a 	mov	r4,r2
  80340c:	180b883a 	mov	r5,r3
  803410:	080a9d80 	call	80a9d8 <__adddf3>
  803414:	1021883a 	mov	r16,r2
  803418:	d8800617 	ldw	r2,24(sp)
  80341c:	047f3034 	movhi	r17,64704
  803420:	1c63883a 	add	r17,r3,r17
  803424:	10031826 	beq	r2,zero,804088 <_dtoa_r+0x1120>
  803428:	d8c00517 	ldw	r3,20(sp)
  80342c:	db000617 	ldw	r12,24(sp)
  803430:	d8c01315 	stw	r3,76(sp)
  803434:	d9000b17 	ldw	r4,44(sp)
  803438:	20038f26 	beq	r4,zero,804278 <_dtoa_r+0x1310>
  80343c:	60bfffc4 	addi	r2,r12,-1
  803440:	100490fa 	slli	r2,r2,3
  803444:	00c02074 	movhi	r3,129
  803448:	18fea804 	addi	r3,r3,-1376
  80344c:	1885883a 	add	r2,r3,r2
  803450:	11800017 	ldw	r6,0(r2)
  803454:	11c00117 	ldw	r7,4(r2)
  803458:	d8800717 	ldw	r2,28(sp)
  80345c:	0009883a 	mov	r4,zero
  803460:	014ff834 	movhi	r5,16352
  803464:	db001615 	stw	r12,88(sp)
  803468:	15c00044 	addi	r23,r2,1
  80346c:	080b2840 	call	80b284 <__divdf3>
  803470:	800d883a 	mov	r6,r16
  803474:	880f883a 	mov	r7,r17
  803478:	1009883a 	mov	r4,r2
  80347c:	180b883a 	mov	r5,r3
  803480:	080c4dc0 	call	80c4dc <__subdf3>
  803484:	d9401017 	ldw	r5,64(sp)
  803488:	d9000f17 	ldw	r4,60(sp)
  80348c:	102b883a 	mov	r21,r2
  803490:	d8c01215 	stw	r3,72(sp)
  803494:	080cdd80 	call	80cdd8 <__fixdfsi>
  803498:	1009883a 	mov	r4,r2
  80349c:	1029883a 	mov	r20,r2
  8034a0:	080ce580 	call	80ce58 <__floatsidf>
  8034a4:	d9000f17 	ldw	r4,60(sp)
  8034a8:	d9401017 	ldw	r5,64(sp)
  8034ac:	100d883a 	mov	r6,r2
  8034b0:	180f883a 	mov	r7,r3
  8034b4:	080c4dc0 	call	80c4dc <__subdf3>
  8034b8:	1823883a 	mov	r17,r3
  8034bc:	d8c00717 	ldw	r3,28(sp)
  8034c0:	d9401217 	ldw	r5,72(sp)
  8034c4:	a2000c04 	addi	r8,r20,48
  8034c8:	1021883a 	mov	r16,r2
  8034cc:	1a000005 	stb	r8,0(r3)
  8034d0:	800d883a 	mov	r6,r16
  8034d4:	880f883a 	mov	r7,r17
  8034d8:	a809883a 	mov	r4,r21
  8034dc:	4029883a 	mov	r20,r8
  8034e0:	080bbf40 	call	80bbf4 <__gedf2>
  8034e4:	00841d16 	blt	zero,r2,80455c <_dtoa_r+0x15f4>
  8034e8:	800d883a 	mov	r6,r16
  8034ec:	880f883a 	mov	r7,r17
  8034f0:	0009883a 	mov	r4,zero
  8034f4:	014ffc34 	movhi	r5,16368
  8034f8:	080c4dc0 	call	80c4dc <__subdf3>
  8034fc:	d9401217 	ldw	r5,72(sp)
  803500:	100d883a 	mov	r6,r2
  803504:	180f883a 	mov	r7,r3
  803508:	a809883a 	mov	r4,r21
  80350c:	080bbf40 	call	80bbf4 <__gedf2>
  803510:	db001617 	ldw	r12,88(sp)
  803514:	00840e16 	blt	zero,r2,804550 <_dtoa_r+0x15e8>
  803518:	00800044 	movi	r2,1
  80351c:	13006b0e 	bge	r2,r12,8036cc <_dtoa_r+0x764>
  803520:	d9000717 	ldw	r4,28(sp)
  803524:	dd800f15 	stw	r22,60(sp)
  803528:	dcc01015 	stw	r19,64(sp)
  80352c:	2319883a 	add	r12,r4,r12
  803530:	dcc01217 	ldw	r19,72(sp)
  803534:	602d883a 	mov	r22,r12
  803538:	dc801215 	stw	r18,72(sp)
  80353c:	b825883a 	mov	r18,r23
  803540:	00000906 	br	803568 <_dtoa_r+0x600>
  803544:	080c4dc0 	call	80c4dc <__subdf3>
  803548:	a80d883a 	mov	r6,r21
  80354c:	980f883a 	mov	r7,r19
  803550:	1009883a 	mov	r4,r2
  803554:	180b883a 	mov	r5,r3
  803558:	080bcd00 	call	80bcd0 <__ledf2>
  80355c:	1003e816 	blt	r2,zero,804500 <_dtoa_r+0x1598>
  803560:	b825883a 	mov	r18,r23
  803564:	bd83e926 	beq	r23,r22,80450c <_dtoa_r+0x15a4>
  803568:	a809883a 	mov	r4,r21
  80356c:	980b883a 	mov	r5,r19
  803570:	000d883a 	mov	r6,zero
  803574:	01d00934 	movhi	r7,16420
  803578:	080bdc40 	call	80bdc4 <__muldf3>
  80357c:	000d883a 	mov	r6,zero
  803580:	01d00934 	movhi	r7,16420
  803584:	8009883a 	mov	r4,r16
  803588:	880b883a 	mov	r5,r17
  80358c:	102b883a 	mov	r21,r2
  803590:	1827883a 	mov	r19,r3
  803594:	080bdc40 	call	80bdc4 <__muldf3>
  803598:	180b883a 	mov	r5,r3
  80359c:	1009883a 	mov	r4,r2
  8035a0:	1821883a 	mov	r16,r3
  8035a4:	1023883a 	mov	r17,r2
  8035a8:	080cdd80 	call	80cdd8 <__fixdfsi>
  8035ac:	1009883a 	mov	r4,r2
  8035b0:	1029883a 	mov	r20,r2
  8035b4:	080ce580 	call	80ce58 <__floatsidf>
  8035b8:	8809883a 	mov	r4,r17
  8035bc:	800b883a 	mov	r5,r16
  8035c0:	100d883a 	mov	r6,r2
  8035c4:	180f883a 	mov	r7,r3
  8035c8:	080c4dc0 	call	80c4dc <__subdf3>
  8035cc:	a5000c04 	addi	r20,r20,48
  8035d0:	a80d883a 	mov	r6,r21
  8035d4:	980f883a 	mov	r7,r19
  8035d8:	1009883a 	mov	r4,r2
  8035dc:	180b883a 	mov	r5,r3
  8035e0:	95000005 	stb	r20,0(r18)
  8035e4:	1021883a 	mov	r16,r2
  8035e8:	1823883a 	mov	r17,r3
  8035ec:	080bcd00 	call	80bcd0 <__ledf2>
  8035f0:	bdc00044 	addi	r23,r23,1
  8035f4:	800d883a 	mov	r6,r16
  8035f8:	880f883a 	mov	r7,r17
  8035fc:	0009883a 	mov	r4,zero
  803600:	014ffc34 	movhi	r5,16368
  803604:	103fcf0e 	bge	r2,zero,803544 <__alt_data_end+0xff803544>
  803608:	d8c01317 	ldw	r3,76(sp)
  80360c:	d8c00515 	stw	r3,20(sp)
  803610:	d9400917 	ldw	r5,36(sp)
  803614:	e009883a 	mov	r4,fp
  803618:	08066ac0 	call	8066ac <_Bfree>
  80361c:	d9000517 	ldw	r4,20(sp)
  803620:	d9802317 	ldw	r6,140(sp)
  803624:	d9c02517 	ldw	r7,148(sp)
  803628:	b8000005 	stb	zero,0(r23)
  80362c:	20800044 	addi	r2,r4,1
  803630:	30800015 	stw	r2,0(r6)
  803634:	3802aa26 	beq	r7,zero,8040e0 <_dtoa_r+0x1178>
  803638:	3dc00015 	stw	r23,0(r7)
  80363c:	d8800717 	ldw	r2,28(sp)
  803640:	003e7906 	br	803028 <__alt_data_end+0xff803028>
  803644:	00800434 	movhi	r2,16
  803648:	10bfffc4 	addi	r2,r2,-1
  80364c:	88a2703a 	and	r17,r17,r2
  803650:	883e851e 	bne	r17,zero,803068 <__alt_data_end+0xff803068>
  803654:	00802074 	movhi	r2,129
  803658:	10be8904 	addi	r2,r2,-1500
  80365c:	003e8406 	br	803070 <__alt_data_end+0xff803070>
  803660:	10c00204 	addi	r3,r2,8
  803664:	003e8706 	br	803084 <__alt_data_end+0xff803084>
  803668:	01400434 	movhi	r5,16
  80366c:	297fffc4 	addi	r5,r5,-1
  803670:	994a703a 	and	r5,r19,r5
  803674:	9009883a 	mov	r4,r18
  803678:	843f0044 	addi	r16,r16,-1023
  80367c:	294ffc34 	orhi	r5,r5,16368
  803680:	dd800217 	ldw	r22,8(sp)
  803684:	d8001115 	stw	zero,68(sp)
  803688:	003ea506 	br	803120 <__alt_data_end+0xff803120>
  80368c:	00802074 	movhi	r2,129
  803690:	10be8004 	addi	r2,r2,-1536
  803694:	003e6406 	br	803028 <__alt_data_end+0xff803028>
  803698:	e0001115 	stw	zero,68(fp)
  80369c:	000b883a 	mov	r5,zero
  8036a0:	e009883a 	mov	r4,fp
  8036a4:	08066040 	call	806604 <_Balloc>
  8036a8:	01bfffc4 	movi	r6,-1
  8036ac:	01c00044 	movi	r7,1
  8036b0:	d8800715 	stw	r2,28(sp)
  8036b4:	d9800c15 	stw	r6,48(sp)
  8036b8:	e0801015 	stw	r2,64(fp)
  8036bc:	d8000315 	stw	zero,12(sp)
  8036c0:	d9c00b15 	stw	r7,44(sp)
  8036c4:	d9800615 	stw	r6,24(sp)
  8036c8:	d8002215 	stw	zero,136(sp)
  8036cc:	d8800117 	ldw	r2,4(sp)
  8036d0:	10008916 	blt	r2,zero,8038f8 <_dtoa_r+0x990>
  8036d4:	d9000517 	ldw	r4,20(sp)
  8036d8:	00c00384 	movi	r3,14
  8036dc:	19008616 	blt	r3,r4,8038f8 <_dtoa_r+0x990>
  8036e0:	200490fa 	slli	r2,r4,3
  8036e4:	00c02074 	movhi	r3,129
  8036e8:	d9802217 	ldw	r6,136(sp)
  8036ec:	18fea804 	addi	r3,r3,-1376
  8036f0:	1885883a 	add	r2,r3,r2
  8036f4:	14000017 	ldw	r16,0(r2)
  8036f8:	14400117 	ldw	r17,4(r2)
  8036fc:	30016316 	blt	r6,zero,803c8c <_dtoa_r+0xd24>
  803700:	800d883a 	mov	r6,r16
  803704:	880f883a 	mov	r7,r17
  803708:	9009883a 	mov	r4,r18
  80370c:	980b883a 	mov	r5,r19
  803710:	080b2840 	call	80b284 <__divdf3>
  803714:	180b883a 	mov	r5,r3
  803718:	1009883a 	mov	r4,r2
  80371c:	080cdd80 	call	80cdd8 <__fixdfsi>
  803720:	1009883a 	mov	r4,r2
  803724:	102b883a 	mov	r21,r2
  803728:	080ce580 	call	80ce58 <__floatsidf>
  80372c:	800d883a 	mov	r6,r16
  803730:	880f883a 	mov	r7,r17
  803734:	1009883a 	mov	r4,r2
  803738:	180b883a 	mov	r5,r3
  80373c:	080bdc40 	call	80bdc4 <__muldf3>
  803740:	100d883a 	mov	r6,r2
  803744:	180f883a 	mov	r7,r3
  803748:	9009883a 	mov	r4,r18
  80374c:	980b883a 	mov	r5,r19
  803750:	080c4dc0 	call	80c4dc <__subdf3>
  803754:	d9c00717 	ldw	r7,28(sp)
  803758:	1009883a 	mov	r4,r2
  80375c:	a8800c04 	addi	r2,r21,48
  803760:	38800005 	stb	r2,0(r7)
  803764:	3dc00044 	addi	r23,r7,1
  803768:	d9c00617 	ldw	r7,24(sp)
  80376c:	01800044 	movi	r6,1
  803770:	180b883a 	mov	r5,r3
  803774:	2005883a 	mov	r2,r4
  803778:	39803826 	beq	r7,r6,80385c <_dtoa_r+0x8f4>
  80377c:	000d883a 	mov	r6,zero
  803780:	01d00934 	movhi	r7,16420
  803784:	080bdc40 	call	80bdc4 <__muldf3>
  803788:	000d883a 	mov	r6,zero
  80378c:	000f883a 	mov	r7,zero
  803790:	1009883a 	mov	r4,r2
  803794:	180b883a 	mov	r5,r3
  803798:	1025883a 	mov	r18,r2
  80379c:	1827883a 	mov	r19,r3
  8037a0:	080bb6c0 	call	80bb6c <__eqdf2>
  8037a4:	103f9a26 	beq	r2,zero,803610 <__alt_data_end+0xff803610>
  8037a8:	d9c00617 	ldw	r7,24(sp)
  8037ac:	d8c00717 	ldw	r3,28(sp)
  8037b0:	b829883a 	mov	r20,r23
  8037b4:	38bfffc4 	addi	r2,r7,-1
  8037b8:	18ad883a 	add	r22,r3,r2
  8037bc:	00000a06 	br	8037e8 <_dtoa_r+0x880>
  8037c0:	080bdc40 	call	80bdc4 <__muldf3>
  8037c4:	000d883a 	mov	r6,zero
  8037c8:	000f883a 	mov	r7,zero
  8037cc:	1009883a 	mov	r4,r2
  8037d0:	180b883a 	mov	r5,r3
  8037d4:	1025883a 	mov	r18,r2
  8037d8:	1827883a 	mov	r19,r3
  8037dc:	b829883a 	mov	r20,r23
  8037e0:	080bb6c0 	call	80bb6c <__eqdf2>
  8037e4:	103f8a26 	beq	r2,zero,803610 <__alt_data_end+0xff803610>
  8037e8:	800d883a 	mov	r6,r16
  8037ec:	880f883a 	mov	r7,r17
  8037f0:	9009883a 	mov	r4,r18
  8037f4:	980b883a 	mov	r5,r19
  8037f8:	080b2840 	call	80b284 <__divdf3>
  8037fc:	180b883a 	mov	r5,r3
  803800:	1009883a 	mov	r4,r2
  803804:	080cdd80 	call	80cdd8 <__fixdfsi>
  803808:	1009883a 	mov	r4,r2
  80380c:	102b883a 	mov	r21,r2
  803810:	080ce580 	call	80ce58 <__floatsidf>
  803814:	800d883a 	mov	r6,r16
  803818:	880f883a 	mov	r7,r17
  80381c:	1009883a 	mov	r4,r2
  803820:	180b883a 	mov	r5,r3
  803824:	080bdc40 	call	80bdc4 <__muldf3>
  803828:	100d883a 	mov	r6,r2
  80382c:	180f883a 	mov	r7,r3
  803830:	9009883a 	mov	r4,r18
  803834:	980b883a 	mov	r5,r19
  803838:	080c4dc0 	call	80c4dc <__subdf3>
  80383c:	aa000c04 	addi	r8,r21,48
  803840:	a2000005 	stb	r8,0(r20)
  803844:	000d883a 	mov	r6,zero
  803848:	01d00934 	movhi	r7,16420
  80384c:	1009883a 	mov	r4,r2
  803850:	180b883a 	mov	r5,r3
  803854:	a5c00044 	addi	r23,r20,1
  803858:	b53fd91e 	bne	r22,r20,8037c0 <__alt_data_end+0xff8037c0>
  80385c:	100d883a 	mov	r6,r2
  803860:	180f883a 	mov	r7,r3
  803864:	1009883a 	mov	r4,r2
  803868:	180b883a 	mov	r5,r3
  80386c:	080a9d80 	call	80a9d8 <__adddf3>
  803870:	100d883a 	mov	r6,r2
  803874:	180f883a 	mov	r7,r3
  803878:	8009883a 	mov	r4,r16
  80387c:	880b883a 	mov	r5,r17
  803880:	1027883a 	mov	r19,r2
  803884:	1825883a 	mov	r18,r3
  803888:	080bcd00 	call	80bcd0 <__ledf2>
  80388c:	10000816 	blt	r2,zero,8038b0 <_dtoa_r+0x948>
  803890:	980d883a 	mov	r6,r19
  803894:	900f883a 	mov	r7,r18
  803898:	8009883a 	mov	r4,r16
  80389c:	880b883a 	mov	r5,r17
  8038a0:	080bb6c0 	call	80bb6c <__eqdf2>
  8038a4:	103f5a1e 	bne	r2,zero,803610 <__alt_data_end+0xff803610>
  8038a8:	ad40004c 	andi	r21,r21,1
  8038ac:	a83f5826 	beq	r21,zero,803610 <__alt_data_end+0xff803610>
  8038b0:	bd3fffc3 	ldbu	r20,-1(r23)
  8038b4:	b8bfffc4 	addi	r2,r23,-1
  8038b8:	1007883a 	mov	r3,r2
  8038bc:	01400e44 	movi	r5,57
  8038c0:	d9800717 	ldw	r6,28(sp)
  8038c4:	00000506 	br	8038dc <_dtoa_r+0x974>
  8038c8:	18ffffc4 	addi	r3,r3,-1
  8038cc:	11824726 	beq	r2,r6,8041ec <_dtoa_r+0x1284>
  8038d0:	1d000003 	ldbu	r20,0(r3)
  8038d4:	102f883a 	mov	r23,r2
  8038d8:	10bfffc4 	addi	r2,r2,-1
  8038dc:	a1003fcc 	andi	r4,r20,255
  8038e0:	2100201c 	xori	r4,r4,128
  8038e4:	213fe004 	addi	r4,r4,-128
  8038e8:	217ff726 	beq	r4,r5,8038c8 <__alt_data_end+0xff8038c8>
  8038ec:	a2000044 	addi	r8,r20,1
  8038f0:	12000005 	stb	r8,0(r2)
  8038f4:	003f4606 	br	803610 <__alt_data_end+0xff803610>
  8038f8:	d9000b17 	ldw	r4,44(sp)
  8038fc:	2000c826 	beq	r4,zero,803c20 <_dtoa_r+0xcb8>
  803900:	d9800317 	ldw	r6,12(sp)
  803904:	00c00044 	movi	r3,1
  803908:	1980f90e 	bge	r3,r6,803cf0 <_dtoa_r+0xd88>
  80390c:	d8800617 	ldw	r2,24(sp)
  803910:	d8c00a17 	ldw	r3,40(sp)
  803914:	157fffc4 	addi	r21,r2,-1
  803918:	1d41f316 	blt	r3,r21,8040e8 <_dtoa_r+0x1180>
  80391c:	1d6bc83a 	sub	r21,r3,r21
  803920:	d9c00617 	ldw	r7,24(sp)
  803924:	3802aa16 	blt	r7,zero,8043d0 <_dtoa_r+0x1468>
  803928:	dd000817 	ldw	r20,32(sp)
  80392c:	d8800617 	ldw	r2,24(sp)
  803930:	d8c00817 	ldw	r3,32(sp)
  803934:	01400044 	movi	r5,1
  803938:	e009883a 	mov	r4,fp
  80393c:	1887883a 	add	r3,r3,r2
  803940:	d8c00815 	stw	r3,32(sp)
  803944:	b0ad883a 	add	r22,r22,r2
  803948:	0806a100 	call	806a10 <__i2b>
  80394c:	1023883a 	mov	r17,r2
  803950:	a0000826 	beq	r20,zero,803974 <_dtoa_r+0xa0c>
  803954:	0580070e 	bge	zero,r22,803974 <_dtoa_r+0xa0c>
  803958:	a005883a 	mov	r2,r20
  80395c:	b500b916 	blt	r22,r20,803c44 <_dtoa_r+0xcdc>
  803960:	d9000817 	ldw	r4,32(sp)
  803964:	a0a9c83a 	sub	r20,r20,r2
  803968:	b0adc83a 	sub	r22,r22,r2
  80396c:	2089c83a 	sub	r4,r4,r2
  803970:	d9000815 	stw	r4,32(sp)
  803974:	d9800a17 	ldw	r6,40(sp)
  803978:	0181810e 	bge	zero,r6,803f80 <_dtoa_r+0x1018>
  80397c:	d9c00b17 	ldw	r7,44(sp)
  803980:	3800b326 	beq	r7,zero,803c50 <_dtoa_r+0xce8>
  803984:	a800b226 	beq	r21,zero,803c50 <_dtoa_r+0xce8>
  803988:	880b883a 	mov	r5,r17
  80398c:	a80d883a 	mov	r6,r21
  803990:	e009883a 	mov	r4,fp
  803994:	0806c440 	call	806c44 <__pow5mult>
  803998:	d9800917 	ldw	r6,36(sp)
  80399c:	100b883a 	mov	r5,r2
  8039a0:	e009883a 	mov	r4,fp
  8039a4:	1023883a 	mov	r17,r2
  8039a8:	0806a4c0 	call	806a4c <__multiply>
  8039ac:	1021883a 	mov	r16,r2
  8039b0:	d8800a17 	ldw	r2,40(sp)
  8039b4:	d9400917 	ldw	r5,36(sp)
  8039b8:	e009883a 	mov	r4,fp
  8039bc:	1545c83a 	sub	r2,r2,r21
  8039c0:	d8800a15 	stw	r2,40(sp)
  8039c4:	08066ac0 	call	8066ac <_Bfree>
  8039c8:	d8c00a17 	ldw	r3,40(sp)
  8039cc:	18009f1e 	bne	r3,zero,803c4c <_dtoa_r+0xce4>
  8039d0:	05c00044 	movi	r23,1
  8039d4:	e009883a 	mov	r4,fp
  8039d8:	b80b883a 	mov	r5,r23
  8039dc:	0806a100 	call	806a10 <__i2b>
  8039e0:	d9000d17 	ldw	r4,52(sp)
  8039e4:	102b883a 	mov	r21,r2
  8039e8:	2000ce26 	beq	r4,zero,803d24 <_dtoa_r+0xdbc>
  8039ec:	200d883a 	mov	r6,r4
  8039f0:	100b883a 	mov	r5,r2
  8039f4:	e009883a 	mov	r4,fp
  8039f8:	0806c440 	call	806c44 <__pow5mult>
  8039fc:	d9800317 	ldw	r6,12(sp)
  803a00:	102b883a 	mov	r21,r2
  803a04:	b981810e 	bge	r23,r6,80400c <_dtoa_r+0x10a4>
  803a08:	0027883a 	mov	r19,zero
  803a0c:	a8800417 	ldw	r2,16(r21)
  803a10:	05c00804 	movi	r23,32
  803a14:	10800104 	addi	r2,r2,4
  803a18:	1085883a 	add	r2,r2,r2
  803a1c:	1085883a 	add	r2,r2,r2
  803a20:	a885883a 	add	r2,r21,r2
  803a24:	11000017 	ldw	r4,0(r2)
  803a28:	08068f80 	call	8068f8 <__hi0bits>
  803a2c:	b885c83a 	sub	r2,r23,r2
  803a30:	1585883a 	add	r2,r2,r22
  803a34:	108007cc 	andi	r2,r2,31
  803a38:	1000b326 	beq	r2,zero,803d08 <_dtoa_r+0xda0>
  803a3c:	00c00804 	movi	r3,32
  803a40:	1887c83a 	sub	r3,r3,r2
  803a44:	01000104 	movi	r4,4
  803a48:	20c2cd0e 	bge	r4,r3,804580 <_dtoa_r+0x1618>
  803a4c:	00c00704 	movi	r3,28
  803a50:	1885c83a 	sub	r2,r3,r2
  803a54:	d8c00817 	ldw	r3,32(sp)
  803a58:	a0a9883a 	add	r20,r20,r2
  803a5c:	b0ad883a 	add	r22,r22,r2
  803a60:	1887883a 	add	r3,r3,r2
  803a64:	d8c00815 	stw	r3,32(sp)
  803a68:	d9800817 	ldw	r6,32(sp)
  803a6c:	0180040e 	bge	zero,r6,803a80 <_dtoa_r+0xb18>
  803a70:	800b883a 	mov	r5,r16
  803a74:	e009883a 	mov	r4,fp
  803a78:	0806d840 	call	806d84 <__lshift>
  803a7c:	1021883a 	mov	r16,r2
  803a80:	0580050e 	bge	zero,r22,803a98 <_dtoa_r+0xb30>
  803a84:	a80b883a 	mov	r5,r21
  803a88:	b00d883a 	mov	r6,r22
  803a8c:	e009883a 	mov	r4,fp
  803a90:	0806d840 	call	806d84 <__lshift>
  803a94:	102b883a 	mov	r21,r2
  803a98:	d9c00e17 	ldw	r7,56(sp)
  803a9c:	3801211e 	bne	r7,zero,803f24 <_dtoa_r+0xfbc>
  803aa0:	d9800617 	ldw	r6,24(sp)
  803aa4:	0181380e 	bge	zero,r6,803f88 <_dtoa_r+0x1020>
  803aa8:	d8c00b17 	ldw	r3,44(sp)
  803aac:	1800ab1e 	bne	r3,zero,803d5c <_dtoa_r+0xdf4>
  803ab0:	dc800717 	ldw	r18,28(sp)
  803ab4:	dcc00617 	ldw	r19,24(sp)
  803ab8:	9029883a 	mov	r20,r18
  803abc:	00000206 	br	803ac8 <_dtoa_r+0xb60>
  803ac0:	08066d40 	call	8066d4 <__multadd>
  803ac4:	1021883a 	mov	r16,r2
  803ac8:	a80b883a 	mov	r5,r21
  803acc:	8009883a 	mov	r4,r16
  803ad0:	0802d680 	call	802d68 <quorem>
  803ad4:	10800c04 	addi	r2,r2,48
  803ad8:	90800005 	stb	r2,0(r18)
  803adc:	94800044 	addi	r18,r18,1
  803ae0:	9507c83a 	sub	r3,r18,r20
  803ae4:	000f883a 	mov	r7,zero
  803ae8:	01800284 	movi	r6,10
  803aec:	800b883a 	mov	r5,r16
  803af0:	e009883a 	mov	r4,fp
  803af4:	1cfff216 	blt	r3,r19,803ac0 <__alt_data_end+0xff803ac0>
  803af8:	1011883a 	mov	r8,r2
  803afc:	d8800617 	ldw	r2,24(sp)
  803b00:	0082370e 	bge	zero,r2,8043e0 <_dtoa_r+0x1478>
  803b04:	d9000717 	ldw	r4,28(sp)
  803b08:	0025883a 	mov	r18,zero
  803b0c:	20af883a 	add	r23,r4,r2
  803b10:	01800044 	movi	r6,1
  803b14:	800b883a 	mov	r5,r16
  803b18:	e009883a 	mov	r4,fp
  803b1c:	da001715 	stw	r8,92(sp)
  803b20:	0806d840 	call	806d84 <__lshift>
  803b24:	a80b883a 	mov	r5,r21
  803b28:	1009883a 	mov	r4,r2
  803b2c:	d8800915 	stw	r2,36(sp)
  803b30:	0806ecc0 	call	806ecc <__mcmp>
  803b34:	da001717 	ldw	r8,92(sp)
  803b38:	0081800e 	bge	zero,r2,80413c <_dtoa_r+0x11d4>
  803b3c:	b93fffc3 	ldbu	r4,-1(r23)
  803b40:	b8bfffc4 	addi	r2,r23,-1
  803b44:	1007883a 	mov	r3,r2
  803b48:	01800e44 	movi	r6,57
  803b4c:	d9c00717 	ldw	r7,28(sp)
  803b50:	00000506 	br	803b68 <_dtoa_r+0xc00>
  803b54:	18ffffc4 	addi	r3,r3,-1
  803b58:	11c12326 	beq	r2,r7,803fe8 <_dtoa_r+0x1080>
  803b5c:	19000003 	ldbu	r4,0(r3)
  803b60:	102f883a 	mov	r23,r2
  803b64:	10bfffc4 	addi	r2,r2,-1
  803b68:	21403fcc 	andi	r5,r4,255
  803b6c:	2940201c 	xori	r5,r5,128
  803b70:	297fe004 	addi	r5,r5,-128
  803b74:	29bff726 	beq	r5,r6,803b54 <__alt_data_end+0xff803b54>
  803b78:	21000044 	addi	r4,r4,1
  803b7c:	11000005 	stb	r4,0(r2)
  803b80:	a80b883a 	mov	r5,r21
  803b84:	e009883a 	mov	r4,fp
  803b88:	08066ac0 	call	8066ac <_Bfree>
  803b8c:	883ea026 	beq	r17,zero,803610 <__alt_data_end+0xff803610>
  803b90:	90000426 	beq	r18,zero,803ba4 <_dtoa_r+0xc3c>
  803b94:	94400326 	beq	r18,r17,803ba4 <_dtoa_r+0xc3c>
  803b98:	900b883a 	mov	r5,r18
  803b9c:	e009883a 	mov	r4,fp
  803ba0:	08066ac0 	call	8066ac <_Bfree>
  803ba4:	880b883a 	mov	r5,r17
  803ba8:	e009883a 	mov	r4,fp
  803bac:	08066ac0 	call	8066ac <_Bfree>
  803bb0:	003e9706 	br	803610 <__alt_data_end+0xff803610>
  803bb4:	01800044 	movi	r6,1
  803bb8:	d9800e15 	stw	r6,56(sp)
  803bbc:	003d9606 	br	803218 <__alt_data_end+0xff803218>
  803bc0:	d8800817 	ldw	r2,32(sp)
  803bc4:	d8c00517 	ldw	r3,20(sp)
  803bc8:	d8000d15 	stw	zero,52(sp)
  803bcc:	10c5c83a 	sub	r2,r2,r3
  803bd0:	00c9c83a 	sub	r4,zero,r3
  803bd4:	d8800815 	stw	r2,32(sp)
  803bd8:	d9000a15 	stw	r4,40(sp)
  803bdc:	003d9706 	br	80323c <__alt_data_end+0xff80323c>
  803be0:	05adc83a 	sub	r22,zero,r22
  803be4:	dd800815 	stw	r22,32(sp)
  803be8:	002d883a 	mov	r22,zero
  803bec:	003d8e06 	br	803228 <__alt_data_end+0xff803228>
  803bf0:	d9000517 	ldw	r4,20(sp)
  803bf4:	080ce580 	call	80ce58 <__floatsidf>
  803bf8:	100d883a 	mov	r6,r2
  803bfc:	180f883a 	mov	r7,r3
  803c00:	a009883a 	mov	r4,r20
  803c04:	880b883a 	mov	r5,r17
  803c08:	080bb6c0 	call	80bb6c <__eqdf2>
  803c0c:	103d7126 	beq	r2,zero,8031d4 <__alt_data_end+0xff8031d4>
  803c10:	d9c00517 	ldw	r7,20(sp)
  803c14:	39ffffc4 	addi	r7,r7,-1
  803c18:	d9c00515 	stw	r7,20(sp)
  803c1c:	003d6d06 	br	8031d4 <__alt_data_end+0xff8031d4>
  803c20:	dd400a17 	ldw	r21,40(sp)
  803c24:	dd000817 	ldw	r20,32(sp)
  803c28:	0023883a 	mov	r17,zero
  803c2c:	003f4806 	br	803950 <__alt_data_end+0xff803950>
  803c30:	10e3c83a 	sub	r17,r2,r3
  803c34:	9448983a 	sll	r4,r18,r17
  803c38:	003d3206 	br	803104 <__alt_data_end+0xff803104>
  803c3c:	d8000e15 	stw	zero,56(sp)
  803c40:	003d7506 	br	803218 <__alt_data_end+0xff803218>
  803c44:	b005883a 	mov	r2,r22
  803c48:	003f4506 	br	803960 <__alt_data_end+0xff803960>
  803c4c:	dc000915 	stw	r16,36(sp)
  803c50:	d9800a17 	ldw	r6,40(sp)
  803c54:	d9400917 	ldw	r5,36(sp)
  803c58:	e009883a 	mov	r4,fp
  803c5c:	0806c440 	call	806c44 <__pow5mult>
  803c60:	1021883a 	mov	r16,r2
  803c64:	003f5a06 	br	8039d0 <__alt_data_end+0xff8039d0>
  803c68:	01c00044 	movi	r7,1
  803c6c:	d9c00b15 	stw	r7,44(sp)
  803c70:	d8802217 	ldw	r2,136(sp)
  803c74:	0081280e 	bge	zero,r2,804118 <_dtoa_r+0x11b0>
  803c78:	100d883a 	mov	r6,r2
  803c7c:	1021883a 	mov	r16,r2
  803c80:	d8800c15 	stw	r2,48(sp)
  803c84:	d8800615 	stw	r2,24(sp)
  803c88:	003d8806 	br	8032ac <__alt_data_end+0xff8032ac>
  803c8c:	d8800617 	ldw	r2,24(sp)
  803c90:	00be9b16 	blt	zero,r2,803700 <__alt_data_end+0xff803700>
  803c94:	10010f1e 	bne	r2,zero,8040d4 <_dtoa_r+0x116c>
  803c98:	880b883a 	mov	r5,r17
  803c9c:	000d883a 	mov	r6,zero
  803ca0:	01d00534 	movhi	r7,16404
  803ca4:	8009883a 	mov	r4,r16
  803ca8:	080bdc40 	call	80bdc4 <__muldf3>
  803cac:	900d883a 	mov	r6,r18
  803cb0:	980f883a 	mov	r7,r19
  803cb4:	1009883a 	mov	r4,r2
  803cb8:	180b883a 	mov	r5,r3
  803cbc:	080bbf40 	call	80bbf4 <__gedf2>
  803cc0:	002b883a 	mov	r21,zero
  803cc4:	0023883a 	mov	r17,zero
  803cc8:	1000bf16 	blt	r2,zero,803fc8 <_dtoa_r+0x1060>
  803ccc:	d9802217 	ldw	r6,136(sp)
  803cd0:	ddc00717 	ldw	r23,28(sp)
  803cd4:	018c303a 	nor	r6,zero,r6
  803cd8:	d9800515 	stw	r6,20(sp)
  803cdc:	a80b883a 	mov	r5,r21
  803ce0:	e009883a 	mov	r4,fp
  803ce4:	08066ac0 	call	8066ac <_Bfree>
  803ce8:	883e4926 	beq	r17,zero,803610 <__alt_data_end+0xff803610>
  803cec:	003fad06 	br	803ba4 <__alt_data_end+0xff803ba4>
  803cf0:	d9c01117 	ldw	r7,68(sp)
  803cf4:	3801bc26 	beq	r7,zero,8043e8 <_dtoa_r+0x1480>
  803cf8:	10810cc4 	addi	r2,r2,1075
  803cfc:	dd400a17 	ldw	r21,40(sp)
  803d00:	dd000817 	ldw	r20,32(sp)
  803d04:	003f0a06 	br	803930 <__alt_data_end+0xff803930>
  803d08:	00800704 	movi	r2,28
  803d0c:	d9000817 	ldw	r4,32(sp)
  803d10:	a0a9883a 	add	r20,r20,r2
  803d14:	b0ad883a 	add	r22,r22,r2
  803d18:	2089883a 	add	r4,r4,r2
  803d1c:	d9000815 	stw	r4,32(sp)
  803d20:	003f5106 	br	803a68 <__alt_data_end+0xff803a68>
  803d24:	d8c00317 	ldw	r3,12(sp)
  803d28:	b8c1fc0e 	bge	r23,r3,80451c <_dtoa_r+0x15b4>
  803d2c:	0027883a 	mov	r19,zero
  803d30:	b805883a 	mov	r2,r23
  803d34:	003f3e06 	br	803a30 <__alt_data_end+0xff803a30>
  803d38:	880b883a 	mov	r5,r17
  803d3c:	e009883a 	mov	r4,fp
  803d40:	000f883a 	mov	r7,zero
  803d44:	01800284 	movi	r6,10
  803d48:	08066d40 	call	8066d4 <__multadd>
  803d4c:	d9000c17 	ldw	r4,48(sp)
  803d50:	1023883a 	mov	r17,r2
  803d54:	0102040e 	bge	zero,r4,804568 <_dtoa_r+0x1600>
  803d58:	d9000615 	stw	r4,24(sp)
  803d5c:	0500050e 	bge	zero,r20,803d74 <_dtoa_r+0xe0c>
  803d60:	880b883a 	mov	r5,r17
  803d64:	a00d883a 	mov	r6,r20
  803d68:	e009883a 	mov	r4,fp
  803d6c:	0806d840 	call	806d84 <__lshift>
  803d70:	1023883a 	mov	r17,r2
  803d74:	9801241e 	bne	r19,zero,804208 <_dtoa_r+0x12a0>
  803d78:	8829883a 	mov	r20,r17
  803d7c:	d9000617 	ldw	r4,24(sp)
  803d80:	dcc00717 	ldw	r19,28(sp)
  803d84:	9480004c 	andi	r18,r18,1
  803d88:	20bfffc4 	addi	r2,r4,-1
  803d8c:	9885883a 	add	r2,r19,r2
  803d90:	d8800415 	stw	r2,16(sp)
  803d94:	dc800615 	stw	r18,24(sp)
  803d98:	a80b883a 	mov	r5,r21
  803d9c:	8009883a 	mov	r4,r16
  803da0:	0802d680 	call	802d68 <quorem>
  803da4:	880b883a 	mov	r5,r17
  803da8:	8009883a 	mov	r4,r16
  803dac:	102f883a 	mov	r23,r2
  803db0:	0806ecc0 	call	806ecc <__mcmp>
  803db4:	a80b883a 	mov	r5,r21
  803db8:	a00d883a 	mov	r6,r20
  803dbc:	e009883a 	mov	r4,fp
  803dc0:	102d883a 	mov	r22,r2
  803dc4:	0806f2c0 	call	806f2c <__mdiff>
  803dc8:	1007883a 	mov	r3,r2
  803dcc:	10800317 	ldw	r2,12(r2)
  803dd0:	bc800c04 	addi	r18,r23,48
  803dd4:	180b883a 	mov	r5,r3
  803dd8:	10004e1e 	bne	r2,zero,803f14 <_dtoa_r+0xfac>
  803ddc:	8009883a 	mov	r4,r16
  803de0:	d8c01615 	stw	r3,88(sp)
  803de4:	0806ecc0 	call	806ecc <__mcmp>
  803de8:	d8c01617 	ldw	r3,88(sp)
  803dec:	e009883a 	mov	r4,fp
  803df0:	d8801615 	stw	r2,88(sp)
  803df4:	180b883a 	mov	r5,r3
  803df8:	08066ac0 	call	8066ac <_Bfree>
  803dfc:	d8801617 	ldw	r2,88(sp)
  803e00:	1000041e 	bne	r2,zero,803e14 <_dtoa_r+0xeac>
  803e04:	d9800317 	ldw	r6,12(sp)
  803e08:	3000021e 	bne	r6,zero,803e14 <_dtoa_r+0xeac>
  803e0c:	d8c00617 	ldw	r3,24(sp)
  803e10:	18003726 	beq	r3,zero,803ef0 <_dtoa_r+0xf88>
  803e14:	b0002016 	blt	r22,zero,803e98 <_dtoa_r+0xf30>
  803e18:	b000041e 	bne	r22,zero,803e2c <_dtoa_r+0xec4>
  803e1c:	d9000317 	ldw	r4,12(sp)
  803e20:	2000021e 	bne	r4,zero,803e2c <_dtoa_r+0xec4>
  803e24:	d8c00617 	ldw	r3,24(sp)
  803e28:	18001b26 	beq	r3,zero,803e98 <_dtoa_r+0xf30>
  803e2c:	00810716 	blt	zero,r2,80424c <_dtoa_r+0x12e4>
  803e30:	d8c00417 	ldw	r3,16(sp)
  803e34:	9d800044 	addi	r22,r19,1
  803e38:	9c800005 	stb	r18,0(r19)
  803e3c:	b02f883a 	mov	r23,r22
  803e40:	98c10626 	beq	r19,r3,80425c <_dtoa_r+0x12f4>
  803e44:	800b883a 	mov	r5,r16
  803e48:	000f883a 	mov	r7,zero
  803e4c:	01800284 	movi	r6,10
  803e50:	e009883a 	mov	r4,fp
  803e54:	08066d40 	call	8066d4 <__multadd>
  803e58:	1021883a 	mov	r16,r2
  803e5c:	000f883a 	mov	r7,zero
  803e60:	01800284 	movi	r6,10
  803e64:	880b883a 	mov	r5,r17
  803e68:	e009883a 	mov	r4,fp
  803e6c:	8d002526 	beq	r17,r20,803f04 <_dtoa_r+0xf9c>
  803e70:	08066d40 	call	8066d4 <__multadd>
  803e74:	a00b883a 	mov	r5,r20
  803e78:	000f883a 	mov	r7,zero
  803e7c:	01800284 	movi	r6,10
  803e80:	e009883a 	mov	r4,fp
  803e84:	1023883a 	mov	r17,r2
  803e88:	08066d40 	call	8066d4 <__multadd>
  803e8c:	1029883a 	mov	r20,r2
  803e90:	b027883a 	mov	r19,r22
  803e94:	003fc006 	br	803d98 <__alt_data_end+0xff803d98>
  803e98:	9011883a 	mov	r8,r18
  803e9c:	00800e0e 	bge	zero,r2,803ed8 <_dtoa_r+0xf70>
  803ea0:	800b883a 	mov	r5,r16
  803ea4:	01800044 	movi	r6,1
  803ea8:	e009883a 	mov	r4,fp
  803eac:	da001715 	stw	r8,92(sp)
  803eb0:	0806d840 	call	806d84 <__lshift>
  803eb4:	a80b883a 	mov	r5,r21
  803eb8:	1009883a 	mov	r4,r2
  803ebc:	1021883a 	mov	r16,r2
  803ec0:	0806ecc0 	call	806ecc <__mcmp>
  803ec4:	da001717 	ldw	r8,92(sp)
  803ec8:	0081960e 	bge	zero,r2,804524 <_dtoa_r+0x15bc>
  803ecc:	00800e44 	movi	r2,57
  803ed0:	40817026 	beq	r8,r2,804494 <_dtoa_r+0x152c>
  803ed4:	ba000c44 	addi	r8,r23,49
  803ed8:	8825883a 	mov	r18,r17
  803edc:	9dc00044 	addi	r23,r19,1
  803ee0:	9a000005 	stb	r8,0(r19)
  803ee4:	a023883a 	mov	r17,r20
  803ee8:	dc000915 	stw	r16,36(sp)
  803eec:	003f2406 	br	803b80 <__alt_data_end+0xff803b80>
  803ef0:	00800e44 	movi	r2,57
  803ef4:	9011883a 	mov	r8,r18
  803ef8:	90816626 	beq	r18,r2,804494 <_dtoa_r+0x152c>
  803efc:	05bff516 	blt	zero,r22,803ed4 <__alt_data_end+0xff803ed4>
  803f00:	003ff506 	br	803ed8 <__alt_data_end+0xff803ed8>
  803f04:	08066d40 	call	8066d4 <__multadd>
  803f08:	1023883a 	mov	r17,r2
  803f0c:	1029883a 	mov	r20,r2
  803f10:	003fdf06 	br	803e90 <__alt_data_end+0xff803e90>
  803f14:	e009883a 	mov	r4,fp
  803f18:	08066ac0 	call	8066ac <_Bfree>
  803f1c:	00800044 	movi	r2,1
  803f20:	003fbc06 	br	803e14 <__alt_data_end+0xff803e14>
  803f24:	a80b883a 	mov	r5,r21
  803f28:	8009883a 	mov	r4,r16
  803f2c:	0806ecc0 	call	806ecc <__mcmp>
  803f30:	103edb0e 	bge	r2,zero,803aa0 <__alt_data_end+0xff803aa0>
  803f34:	800b883a 	mov	r5,r16
  803f38:	000f883a 	mov	r7,zero
  803f3c:	01800284 	movi	r6,10
  803f40:	e009883a 	mov	r4,fp
  803f44:	08066d40 	call	8066d4 <__multadd>
  803f48:	1021883a 	mov	r16,r2
  803f4c:	d8800517 	ldw	r2,20(sp)
  803f50:	d8c00b17 	ldw	r3,44(sp)
  803f54:	10bfffc4 	addi	r2,r2,-1
  803f58:	d8800515 	stw	r2,20(sp)
  803f5c:	183f761e 	bne	r3,zero,803d38 <__alt_data_end+0xff803d38>
  803f60:	d9000c17 	ldw	r4,48(sp)
  803f64:	0101730e 	bge	zero,r4,804534 <_dtoa_r+0x15cc>
  803f68:	d9000615 	stw	r4,24(sp)
  803f6c:	003ed006 	br	803ab0 <__alt_data_end+0xff803ab0>
  803f70:	00800084 	movi	r2,2
  803f74:	3081861e 	bne	r6,r2,804590 <_dtoa_r+0x1628>
  803f78:	d8000b15 	stw	zero,44(sp)
  803f7c:	003f3c06 	br	803c70 <__alt_data_end+0xff803c70>
  803f80:	dc000917 	ldw	r16,36(sp)
  803f84:	003e9206 	br	8039d0 <__alt_data_end+0xff8039d0>
  803f88:	d9c00317 	ldw	r7,12(sp)
  803f8c:	00800084 	movi	r2,2
  803f90:	11fec50e 	bge	r2,r7,803aa8 <__alt_data_end+0xff803aa8>
  803f94:	d9000617 	ldw	r4,24(sp)
  803f98:	20013c1e 	bne	r4,zero,80448c <_dtoa_r+0x1524>
  803f9c:	a80b883a 	mov	r5,r21
  803fa0:	000f883a 	mov	r7,zero
  803fa4:	01800144 	movi	r6,5
  803fa8:	e009883a 	mov	r4,fp
  803fac:	08066d40 	call	8066d4 <__multadd>
  803fb0:	100b883a 	mov	r5,r2
  803fb4:	8009883a 	mov	r4,r16
  803fb8:	102b883a 	mov	r21,r2
  803fbc:	0806ecc0 	call	806ecc <__mcmp>
  803fc0:	dc000915 	stw	r16,36(sp)
  803fc4:	00bf410e 	bge	zero,r2,803ccc <__alt_data_end+0xff803ccc>
  803fc8:	d9c00717 	ldw	r7,28(sp)
  803fcc:	00800c44 	movi	r2,49
  803fd0:	38800005 	stb	r2,0(r7)
  803fd4:	d8800517 	ldw	r2,20(sp)
  803fd8:	3dc00044 	addi	r23,r7,1
  803fdc:	10800044 	addi	r2,r2,1
  803fe0:	d8800515 	stw	r2,20(sp)
  803fe4:	003f3d06 	br	803cdc <__alt_data_end+0xff803cdc>
  803fe8:	d9800517 	ldw	r6,20(sp)
  803fec:	d9c00717 	ldw	r7,28(sp)
  803ff0:	00800c44 	movi	r2,49
  803ff4:	31800044 	addi	r6,r6,1
  803ff8:	d9800515 	stw	r6,20(sp)
  803ffc:	38800005 	stb	r2,0(r7)
  804000:	003edf06 	br	803b80 <__alt_data_end+0xff803b80>
  804004:	d8000b15 	stw	zero,44(sp)
  804008:	003c9f06 	br	803288 <__alt_data_end+0xff803288>
  80400c:	903e7e1e 	bne	r18,zero,803a08 <__alt_data_end+0xff803a08>
  804010:	00800434 	movhi	r2,16
  804014:	10bfffc4 	addi	r2,r2,-1
  804018:	9884703a 	and	r2,r19,r2
  80401c:	1000ea1e 	bne	r2,zero,8043c8 <_dtoa_r+0x1460>
  804020:	9cdffc2c 	andhi	r19,r19,32752
  804024:	9800e826 	beq	r19,zero,8043c8 <_dtoa_r+0x1460>
  804028:	d9c00817 	ldw	r7,32(sp)
  80402c:	b5800044 	addi	r22,r22,1
  804030:	04c00044 	movi	r19,1
  804034:	39c00044 	addi	r7,r7,1
  804038:	d9c00815 	stw	r7,32(sp)
  80403c:	d8800d17 	ldw	r2,52(sp)
  804040:	103e721e 	bne	r2,zero,803a0c <__alt_data_end+0xff803a0c>
  804044:	00800044 	movi	r2,1
  804048:	003e7906 	br	803a30 <__alt_data_end+0xff803a30>
  80404c:	8009883a 	mov	r4,r16
  804050:	080ce580 	call	80ce58 <__floatsidf>
  804054:	d9800f17 	ldw	r6,60(sp)
  804058:	d9c01017 	ldw	r7,64(sp)
  80405c:	1009883a 	mov	r4,r2
  804060:	180b883a 	mov	r5,r3
  804064:	080bdc40 	call	80bdc4 <__muldf3>
  804068:	000d883a 	mov	r6,zero
  80406c:	01d00734 	movhi	r7,16412
  804070:	1009883a 	mov	r4,r2
  804074:	180b883a 	mov	r5,r3
  804078:	080a9d80 	call	80a9d8 <__adddf3>
  80407c:	047f3034 	movhi	r17,64704
  804080:	1021883a 	mov	r16,r2
  804084:	1c63883a 	add	r17,r3,r17
  804088:	d9000f17 	ldw	r4,60(sp)
  80408c:	d9401017 	ldw	r5,64(sp)
  804090:	000d883a 	mov	r6,zero
  804094:	01d00534 	movhi	r7,16404
  804098:	080c4dc0 	call	80c4dc <__subdf3>
  80409c:	800d883a 	mov	r6,r16
  8040a0:	880f883a 	mov	r7,r17
  8040a4:	1009883a 	mov	r4,r2
  8040a8:	180b883a 	mov	r5,r3
  8040ac:	102b883a 	mov	r21,r2
  8040b0:	1829883a 	mov	r20,r3
  8040b4:	080bbf40 	call	80bbf4 <__gedf2>
  8040b8:	00806c16 	blt	zero,r2,80426c <_dtoa_r+0x1304>
  8040bc:	89e0003c 	xorhi	r7,r17,32768
  8040c0:	800d883a 	mov	r6,r16
  8040c4:	a809883a 	mov	r4,r21
  8040c8:	a00b883a 	mov	r5,r20
  8040cc:	080bcd00 	call	80bcd0 <__ledf2>
  8040d0:	103d7e0e 	bge	r2,zero,8036cc <__alt_data_end+0xff8036cc>
  8040d4:	002b883a 	mov	r21,zero
  8040d8:	0023883a 	mov	r17,zero
  8040dc:	003efb06 	br	803ccc <__alt_data_end+0xff803ccc>
  8040e0:	d8800717 	ldw	r2,28(sp)
  8040e4:	003bd006 	br	803028 <__alt_data_end+0xff803028>
  8040e8:	d9000a17 	ldw	r4,40(sp)
  8040ec:	d9800d17 	ldw	r6,52(sp)
  8040f0:	dd400a15 	stw	r21,40(sp)
  8040f4:	a905c83a 	sub	r2,r21,r4
  8040f8:	308d883a 	add	r6,r6,r2
  8040fc:	d9800d15 	stw	r6,52(sp)
  804100:	002b883a 	mov	r21,zero
  804104:	003e0606 	br	803920 <__alt_data_end+0xff803920>
  804108:	9023883a 	mov	r17,r18
  80410c:	9829883a 	mov	r20,r19
  804110:	04000084 	movi	r16,2
  804114:	003c9206 	br	803360 <__alt_data_end+0xff803360>
  804118:	04000044 	movi	r16,1
  80411c:	dc000c15 	stw	r16,48(sp)
  804120:	dc000615 	stw	r16,24(sp)
  804124:	dc002215 	stw	r16,136(sp)
  804128:	e0001115 	stw	zero,68(fp)
  80412c:	000b883a 	mov	r5,zero
  804130:	003c6906 	br	8032d8 <__alt_data_end+0xff8032d8>
  804134:	3021883a 	mov	r16,r6
  804138:	003ffb06 	br	804128 <__alt_data_end+0xff804128>
  80413c:	1000021e 	bne	r2,zero,804148 <_dtoa_r+0x11e0>
  804140:	4200004c 	andi	r8,r8,1
  804144:	403e7d1e 	bne	r8,zero,803b3c <__alt_data_end+0xff803b3c>
  804148:	01000c04 	movi	r4,48
  80414c:	00000106 	br	804154 <_dtoa_r+0x11ec>
  804150:	102f883a 	mov	r23,r2
  804154:	b8bfffc4 	addi	r2,r23,-1
  804158:	10c00007 	ldb	r3,0(r2)
  80415c:	193ffc26 	beq	r3,r4,804150 <__alt_data_end+0xff804150>
  804160:	003e8706 	br	803b80 <__alt_data_end+0xff803b80>
  804164:	d8800517 	ldw	r2,20(sp)
  804168:	00a3c83a 	sub	r17,zero,r2
  80416c:	8800a426 	beq	r17,zero,804400 <_dtoa_r+0x1498>
  804170:	888003cc 	andi	r2,r17,15
  804174:	100490fa 	slli	r2,r2,3
  804178:	00c02074 	movhi	r3,129
  80417c:	18fea804 	addi	r3,r3,-1376
  804180:	1885883a 	add	r2,r3,r2
  804184:	11800017 	ldw	r6,0(r2)
  804188:	11c00117 	ldw	r7,4(r2)
  80418c:	9009883a 	mov	r4,r18
  804190:	980b883a 	mov	r5,r19
  804194:	8823d13a 	srai	r17,r17,4
  804198:	080bdc40 	call	80bdc4 <__muldf3>
  80419c:	d8800f15 	stw	r2,60(sp)
  8041a0:	d8c01015 	stw	r3,64(sp)
  8041a4:	8800e826 	beq	r17,zero,804548 <_dtoa_r+0x15e0>
  8041a8:	05002074 	movhi	r20,129
  8041ac:	a53e9e04 	addi	r20,r20,-1416
  8041b0:	04000084 	movi	r16,2
  8041b4:	8980004c 	andi	r6,r17,1
  8041b8:	1009883a 	mov	r4,r2
  8041bc:	8823d07a 	srai	r17,r17,1
  8041c0:	180b883a 	mov	r5,r3
  8041c4:	30000426 	beq	r6,zero,8041d8 <_dtoa_r+0x1270>
  8041c8:	a1800017 	ldw	r6,0(r20)
  8041cc:	a1c00117 	ldw	r7,4(r20)
  8041d0:	84000044 	addi	r16,r16,1
  8041d4:	080bdc40 	call	80bdc4 <__muldf3>
  8041d8:	a5000204 	addi	r20,r20,8
  8041dc:	883ff51e 	bne	r17,zero,8041b4 <__alt_data_end+0xff8041b4>
  8041e0:	d8800f15 	stw	r2,60(sp)
  8041e4:	d8c01015 	stw	r3,64(sp)
  8041e8:	003c7606 	br	8033c4 <__alt_data_end+0xff8033c4>
  8041ec:	00c00c04 	movi	r3,48
  8041f0:	10c00005 	stb	r3,0(r2)
  8041f4:	d8c00517 	ldw	r3,20(sp)
  8041f8:	bd3fffc3 	ldbu	r20,-1(r23)
  8041fc:	18c00044 	addi	r3,r3,1
  804200:	d8c00515 	stw	r3,20(sp)
  804204:	003db906 	br	8038ec <__alt_data_end+0xff8038ec>
  804208:	89400117 	ldw	r5,4(r17)
  80420c:	e009883a 	mov	r4,fp
  804210:	08066040 	call	806604 <_Balloc>
  804214:	89800417 	ldw	r6,16(r17)
  804218:	89400304 	addi	r5,r17,12
  80421c:	11000304 	addi	r4,r2,12
  804220:	31800084 	addi	r6,r6,2
  804224:	318d883a 	add	r6,r6,r6
  804228:	318d883a 	add	r6,r6,r6
  80422c:	1027883a 	mov	r19,r2
  804230:	08062380 	call	806238 <memcpy>
  804234:	01800044 	movi	r6,1
  804238:	980b883a 	mov	r5,r19
  80423c:	e009883a 	mov	r4,fp
  804240:	0806d840 	call	806d84 <__lshift>
  804244:	1029883a 	mov	r20,r2
  804248:	003ecc06 	br	803d7c <__alt_data_end+0xff803d7c>
  80424c:	00800e44 	movi	r2,57
  804250:	90809026 	beq	r18,r2,804494 <_dtoa_r+0x152c>
  804254:	92000044 	addi	r8,r18,1
  804258:	003f1f06 	br	803ed8 <__alt_data_end+0xff803ed8>
  80425c:	9011883a 	mov	r8,r18
  804260:	8825883a 	mov	r18,r17
  804264:	a023883a 	mov	r17,r20
  804268:	003e2906 	br	803b10 <__alt_data_end+0xff803b10>
  80426c:	002b883a 	mov	r21,zero
  804270:	0023883a 	mov	r17,zero
  804274:	003f5406 	br	803fc8 <__alt_data_end+0xff803fc8>
  804278:	61bfffc4 	addi	r6,r12,-1
  80427c:	300490fa 	slli	r2,r6,3
  804280:	00c02074 	movhi	r3,129
  804284:	18fea804 	addi	r3,r3,-1376
  804288:	1885883a 	add	r2,r3,r2
  80428c:	11000017 	ldw	r4,0(r2)
  804290:	11400117 	ldw	r5,4(r2)
  804294:	d8800717 	ldw	r2,28(sp)
  804298:	880f883a 	mov	r7,r17
  80429c:	d9801215 	stw	r6,72(sp)
  8042a0:	800d883a 	mov	r6,r16
  8042a4:	db001615 	stw	r12,88(sp)
  8042a8:	15c00044 	addi	r23,r2,1
  8042ac:	080bdc40 	call	80bdc4 <__muldf3>
  8042b0:	d9401017 	ldw	r5,64(sp)
  8042b4:	d9000f17 	ldw	r4,60(sp)
  8042b8:	d8c01515 	stw	r3,84(sp)
  8042bc:	d8801415 	stw	r2,80(sp)
  8042c0:	080cdd80 	call	80cdd8 <__fixdfsi>
  8042c4:	1009883a 	mov	r4,r2
  8042c8:	1021883a 	mov	r16,r2
  8042cc:	080ce580 	call	80ce58 <__floatsidf>
  8042d0:	d9000f17 	ldw	r4,60(sp)
  8042d4:	d9401017 	ldw	r5,64(sp)
  8042d8:	100d883a 	mov	r6,r2
  8042dc:	180f883a 	mov	r7,r3
  8042e0:	080c4dc0 	call	80c4dc <__subdf3>
  8042e4:	1829883a 	mov	r20,r3
  8042e8:	d8c00717 	ldw	r3,28(sp)
  8042ec:	84000c04 	addi	r16,r16,48
  8042f0:	1023883a 	mov	r17,r2
  8042f4:	1c000005 	stb	r16,0(r3)
  8042f8:	db001617 	ldw	r12,88(sp)
  8042fc:	00800044 	movi	r2,1
  804300:	60802226 	beq	r12,r2,80438c <_dtoa_r+0x1424>
  804304:	d9c00717 	ldw	r7,28(sp)
  804308:	8805883a 	mov	r2,r17
  80430c:	b82b883a 	mov	r21,r23
  804310:	3b19883a 	add	r12,r7,r12
  804314:	6023883a 	mov	r17,r12
  804318:	a007883a 	mov	r3,r20
  80431c:	dc800f15 	stw	r18,60(sp)
  804320:	000d883a 	mov	r6,zero
  804324:	01d00934 	movhi	r7,16420
  804328:	1009883a 	mov	r4,r2
  80432c:	180b883a 	mov	r5,r3
  804330:	080bdc40 	call	80bdc4 <__muldf3>
  804334:	180b883a 	mov	r5,r3
  804338:	1009883a 	mov	r4,r2
  80433c:	1829883a 	mov	r20,r3
  804340:	1025883a 	mov	r18,r2
  804344:	080cdd80 	call	80cdd8 <__fixdfsi>
  804348:	1009883a 	mov	r4,r2
  80434c:	1021883a 	mov	r16,r2
  804350:	080ce580 	call	80ce58 <__floatsidf>
  804354:	100d883a 	mov	r6,r2
  804358:	180f883a 	mov	r7,r3
  80435c:	9009883a 	mov	r4,r18
  804360:	a00b883a 	mov	r5,r20
  804364:	84000c04 	addi	r16,r16,48
  804368:	080c4dc0 	call	80c4dc <__subdf3>
  80436c:	ad400044 	addi	r21,r21,1
  804370:	ac3fffc5 	stb	r16,-1(r21)
  804374:	ac7fea1e 	bne	r21,r17,804320 <__alt_data_end+0xff804320>
  804378:	1023883a 	mov	r17,r2
  80437c:	d8801217 	ldw	r2,72(sp)
  804380:	dc800f17 	ldw	r18,60(sp)
  804384:	1829883a 	mov	r20,r3
  804388:	b8af883a 	add	r23,r23,r2
  80438c:	d9001417 	ldw	r4,80(sp)
  804390:	d9401517 	ldw	r5,84(sp)
  804394:	000d883a 	mov	r6,zero
  804398:	01cff834 	movhi	r7,16352
  80439c:	080a9d80 	call	80a9d8 <__adddf3>
  8043a0:	880d883a 	mov	r6,r17
  8043a4:	a00f883a 	mov	r7,r20
  8043a8:	1009883a 	mov	r4,r2
  8043ac:	180b883a 	mov	r5,r3
  8043b0:	080bcd00 	call	80bcd0 <__ledf2>
  8043b4:	10003e0e 	bge	r2,zero,8044b0 <_dtoa_r+0x1548>
  8043b8:	d9001317 	ldw	r4,76(sp)
  8043bc:	bd3fffc3 	ldbu	r20,-1(r23)
  8043c0:	d9000515 	stw	r4,20(sp)
  8043c4:	003d3b06 	br	8038b4 <__alt_data_end+0xff8038b4>
  8043c8:	0027883a 	mov	r19,zero
  8043cc:	003f1b06 	br	80403c <__alt_data_end+0xff80403c>
  8043d0:	d8800817 	ldw	r2,32(sp)
  8043d4:	11e9c83a 	sub	r20,r2,r7
  8043d8:	0005883a 	mov	r2,zero
  8043dc:	003d5406 	br	803930 <__alt_data_end+0xff803930>
  8043e0:	00800044 	movi	r2,1
  8043e4:	003dc706 	br	803b04 <__alt_data_end+0xff803b04>
  8043e8:	d8c00217 	ldw	r3,8(sp)
  8043ec:	00800d84 	movi	r2,54
  8043f0:	dd400a17 	ldw	r21,40(sp)
  8043f4:	10c5c83a 	sub	r2,r2,r3
  8043f8:	dd000817 	ldw	r20,32(sp)
  8043fc:	003d4c06 	br	803930 <__alt_data_end+0xff803930>
  804400:	dc800f15 	stw	r18,60(sp)
  804404:	dcc01015 	stw	r19,64(sp)
  804408:	04000084 	movi	r16,2
  80440c:	003bed06 	br	8033c4 <__alt_data_end+0xff8033c4>
  804410:	d9000617 	ldw	r4,24(sp)
  804414:	203f0d26 	beq	r4,zero,80404c <__alt_data_end+0xff80404c>
  804418:	d9800c17 	ldw	r6,48(sp)
  80441c:	01bcab0e 	bge	zero,r6,8036cc <__alt_data_end+0xff8036cc>
  804420:	d9401017 	ldw	r5,64(sp)
  804424:	d9000f17 	ldw	r4,60(sp)
  804428:	000d883a 	mov	r6,zero
  80442c:	01d00934 	movhi	r7,16420
  804430:	080bdc40 	call	80bdc4 <__muldf3>
  804434:	81000044 	addi	r4,r16,1
  804438:	d8800f15 	stw	r2,60(sp)
  80443c:	d8c01015 	stw	r3,64(sp)
  804440:	080ce580 	call	80ce58 <__floatsidf>
  804444:	d9800f17 	ldw	r6,60(sp)
  804448:	d9c01017 	ldw	r7,64(sp)
  80444c:	1009883a 	mov	r4,r2
  804450:	180b883a 	mov	r5,r3
  804454:	080bdc40 	call	80bdc4 <__muldf3>
  804458:	01d00734 	movhi	r7,16412
  80445c:	000d883a 	mov	r6,zero
  804460:	1009883a 	mov	r4,r2
  804464:	180b883a 	mov	r5,r3
  804468:	080a9d80 	call	80a9d8 <__adddf3>
  80446c:	d9c00517 	ldw	r7,20(sp)
  804470:	047f3034 	movhi	r17,64704
  804474:	1021883a 	mov	r16,r2
  804478:	39ffffc4 	addi	r7,r7,-1
  80447c:	d9c01315 	stw	r7,76(sp)
  804480:	1c63883a 	add	r17,r3,r17
  804484:	db000c17 	ldw	r12,48(sp)
  804488:	003bea06 	br	803434 <__alt_data_end+0xff803434>
  80448c:	dc000915 	stw	r16,36(sp)
  804490:	003e0e06 	br	803ccc <__alt_data_end+0xff803ccc>
  804494:	01000e44 	movi	r4,57
  804498:	8825883a 	mov	r18,r17
  80449c:	9dc00044 	addi	r23,r19,1
  8044a0:	99000005 	stb	r4,0(r19)
  8044a4:	a023883a 	mov	r17,r20
  8044a8:	dc000915 	stw	r16,36(sp)
  8044ac:	003da406 	br	803b40 <__alt_data_end+0xff803b40>
  8044b0:	d9801417 	ldw	r6,80(sp)
  8044b4:	d9c01517 	ldw	r7,84(sp)
  8044b8:	0009883a 	mov	r4,zero
  8044bc:	014ff834 	movhi	r5,16352
  8044c0:	080c4dc0 	call	80c4dc <__subdf3>
  8044c4:	880d883a 	mov	r6,r17
  8044c8:	a00f883a 	mov	r7,r20
  8044cc:	1009883a 	mov	r4,r2
  8044d0:	180b883a 	mov	r5,r3
  8044d4:	080bbf40 	call	80bbf4 <__gedf2>
  8044d8:	00bc7c0e 	bge	zero,r2,8036cc <__alt_data_end+0xff8036cc>
  8044dc:	01000c04 	movi	r4,48
  8044e0:	00000106 	br	8044e8 <_dtoa_r+0x1580>
  8044e4:	102f883a 	mov	r23,r2
  8044e8:	b8bfffc4 	addi	r2,r23,-1
  8044ec:	10c00007 	ldb	r3,0(r2)
  8044f0:	193ffc26 	beq	r3,r4,8044e4 <__alt_data_end+0xff8044e4>
  8044f4:	d9801317 	ldw	r6,76(sp)
  8044f8:	d9800515 	stw	r6,20(sp)
  8044fc:	003c4406 	br	803610 <__alt_data_end+0xff803610>
  804500:	d9801317 	ldw	r6,76(sp)
  804504:	d9800515 	stw	r6,20(sp)
  804508:	003cea06 	br	8038b4 <__alt_data_end+0xff8038b4>
  80450c:	dd800f17 	ldw	r22,60(sp)
  804510:	dcc01017 	ldw	r19,64(sp)
  804514:	dc801217 	ldw	r18,72(sp)
  804518:	003c6c06 	br	8036cc <__alt_data_end+0xff8036cc>
  80451c:	903e031e 	bne	r18,zero,803d2c <__alt_data_end+0xff803d2c>
  804520:	003ebb06 	br	804010 <__alt_data_end+0xff804010>
  804524:	103e6c1e 	bne	r2,zero,803ed8 <__alt_data_end+0xff803ed8>
  804528:	4080004c 	andi	r2,r8,1
  80452c:	103e6a26 	beq	r2,zero,803ed8 <__alt_data_end+0xff803ed8>
  804530:	003e6606 	br	803ecc <__alt_data_end+0xff803ecc>
  804534:	d8c00317 	ldw	r3,12(sp)
  804538:	00800084 	movi	r2,2
  80453c:	10c02916 	blt	r2,r3,8045e4 <_dtoa_r+0x167c>
  804540:	d9000c17 	ldw	r4,48(sp)
  804544:	003e8806 	br	803f68 <__alt_data_end+0xff803f68>
  804548:	04000084 	movi	r16,2
  80454c:	003b9d06 	br	8033c4 <__alt_data_end+0xff8033c4>
  804550:	d9001317 	ldw	r4,76(sp)
  804554:	d9000515 	stw	r4,20(sp)
  804558:	003cd606 	br	8038b4 <__alt_data_end+0xff8038b4>
  80455c:	d8801317 	ldw	r2,76(sp)
  804560:	d8800515 	stw	r2,20(sp)
  804564:	003c2a06 	br	803610 <__alt_data_end+0xff803610>
  804568:	d9800317 	ldw	r6,12(sp)
  80456c:	00800084 	movi	r2,2
  804570:	11801516 	blt	r2,r6,8045c8 <_dtoa_r+0x1660>
  804574:	d9c00c17 	ldw	r7,48(sp)
  804578:	d9c00615 	stw	r7,24(sp)
  80457c:	003df706 	br	803d5c <__alt_data_end+0xff803d5c>
  804580:	193d3926 	beq	r3,r4,803a68 <__alt_data_end+0xff803a68>
  804584:	00c00f04 	movi	r3,60
  804588:	1885c83a 	sub	r2,r3,r2
  80458c:	003ddf06 	br	803d0c <__alt_data_end+0xff803d0c>
  804590:	e009883a 	mov	r4,fp
  804594:	e0001115 	stw	zero,68(fp)
  804598:	000b883a 	mov	r5,zero
  80459c:	08066040 	call	806604 <_Balloc>
  8045a0:	d8800715 	stw	r2,28(sp)
  8045a4:	d8c00717 	ldw	r3,28(sp)
  8045a8:	00bfffc4 	movi	r2,-1
  8045ac:	01000044 	movi	r4,1
  8045b0:	d8800c15 	stw	r2,48(sp)
  8045b4:	e0c01015 	stw	r3,64(fp)
  8045b8:	d9000b15 	stw	r4,44(sp)
  8045bc:	d8800615 	stw	r2,24(sp)
  8045c0:	d8002215 	stw	zero,136(sp)
  8045c4:	003c4106 	br	8036cc <__alt_data_end+0xff8036cc>
  8045c8:	d8c00c17 	ldw	r3,48(sp)
  8045cc:	d8c00615 	stw	r3,24(sp)
  8045d0:	003e7006 	br	803f94 <__alt_data_end+0xff803f94>
  8045d4:	04400044 	movi	r17,1
  8045d8:	003b2006 	br	80325c <__alt_data_end+0xff80325c>
  8045dc:	000b883a 	mov	r5,zero
  8045e0:	003b3d06 	br	8032d8 <__alt_data_end+0xff8032d8>
  8045e4:	d8800c17 	ldw	r2,48(sp)
  8045e8:	d8800615 	stw	r2,24(sp)
  8045ec:	003e6906 	br	803f94 <__alt_data_end+0xff803f94>

008045f0 <__sflush_r>:
  8045f0:	2880030b 	ldhu	r2,12(r5)
  8045f4:	defffb04 	addi	sp,sp,-20
  8045f8:	dcc00315 	stw	r19,12(sp)
  8045fc:	dc400115 	stw	r17,4(sp)
  804600:	dfc00415 	stw	ra,16(sp)
  804604:	dc800215 	stw	r18,8(sp)
  804608:	dc000015 	stw	r16,0(sp)
  80460c:	10c0020c 	andi	r3,r2,8
  804610:	2823883a 	mov	r17,r5
  804614:	2027883a 	mov	r19,r4
  804618:	1800311e 	bne	r3,zero,8046e0 <__sflush_r+0xf0>
  80461c:	28c00117 	ldw	r3,4(r5)
  804620:	10820014 	ori	r2,r2,2048
  804624:	2880030d 	sth	r2,12(r5)
  804628:	00c04b0e 	bge	zero,r3,804758 <__sflush_r+0x168>
  80462c:	8a000a17 	ldw	r8,40(r17)
  804630:	40002326 	beq	r8,zero,8046c0 <__sflush_r+0xd0>
  804634:	9c000017 	ldw	r16,0(r19)
  804638:	10c4000c 	andi	r3,r2,4096
  80463c:	98000015 	stw	zero,0(r19)
  804640:	18004826 	beq	r3,zero,804764 <__sflush_r+0x174>
  804644:	89801417 	ldw	r6,80(r17)
  804648:	10c0010c 	andi	r3,r2,4
  80464c:	18000626 	beq	r3,zero,804668 <__sflush_r+0x78>
  804650:	88c00117 	ldw	r3,4(r17)
  804654:	88800c17 	ldw	r2,48(r17)
  804658:	30cdc83a 	sub	r6,r6,r3
  80465c:	10000226 	beq	r2,zero,804668 <__sflush_r+0x78>
  804660:	88800f17 	ldw	r2,60(r17)
  804664:	308dc83a 	sub	r6,r6,r2
  804668:	89400717 	ldw	r5,28(r17)
  80466c:	000f883a 	mov	r7,zero
  804670:	9809883a 	mov	r4,r19
  804674:	403ee83a 	callr	r8
  804678:	00ffffc4 	movi	r3,-1
  80467c:	10c04426 	beq	r2,r3,804790 <__sflush_r+0x1a0>
  804680:	88c0030b 	ldhu	r3,12(r17)
  804684:	89000417 	ldw	r4,16(r17)
  804688:	88000115 	stw	zero,4(r17)
  80468c:	197dffcc 	andi	r5,r3,63487
  804690:	8940030d 	sth	r5,12(r17)
  804694:	89000015 	stw	r4,0(r17)
  804698:	18c4000c 	andi	r3,r3,4096
  80469c:	18002c1e 	bne	r3,zero,804750 <__sflush_r+0x160>
  8046a0:	89400c17 	ldw	r5,48(r17)
  8046a4:	9c000015 	stw	r16,0(r19)
  8046a8:	28000526 	beq	r5,zero,8046c0 <__sflush_r+0xd0>
  8046ac:	88801004 	addi	r2,r17,64
  8046b0:	28800226 	beq	r5,r2,8046bc <__sflush_r+0xcc>
  8046b4:	9809883a 	mov	r4,r19
  8046b8:	0804d5c0 	call	804d5c <_free_r>
  8046bc:	88000c15 	stw	zero,48(r17)
  8046c0:	0005883a 	mov	r2,zero
  8046c4:	dfc00417 	ldw	ra,16(sp)
  8046c8:	dcc00317 	ldw	r19,12(sp)
  8046cc:	dc800217 	ldw	r18,8(sp)
  8046d0:	dc400117 	ldw	r17,4(sp)
  8046d4:	dc000017 	ldw	r16,0(sp)
  8046d8:	dec00504 	addi	sp,sp,20
  8046dc:	f800283a 	ret
  8046e0:	2c800417 	ldw	r18,16(r5)
  8046e4:	903ff626 	beq	r18,zero,8046c0 <__alt_data_end+0xff8046c0>
  8046e8:	2c000017 	ldw	r16,0(r5)
  8046ec:	108000cc 	andi	r2,r2,3
  8046f0:	2c800015 	stw	r18,0(r5)
  8046f4:	84a1c83a 	sub	r16,r16,r18
  8046f8:	1000131e 	bne	r2,zero,804748 <__sflush_r+0x158>
  8046fc:	28800517 	ldw	r2,20(r5)
  804700:	88800215 	stw	r2,8(r17)
  804704:	04000316 	blt	zero,r16,804714 <__sflush_r+0x124>
  804708:	003fed06 	br	8046c0 <__alt_data_end+0xff8046c0>
  80470c:	90a5883a 	add	r18,r18,r2
  804710:	043feb0e 	bge	zero,r16,8046c0 <__alt_data_end+0xff8046c0>
  804714:	88800917 	ldw	r2,36(r17)
  804718:	89400717 	ldw	r5,28(r17)
  80471c:	800f883a 	mov	r7,r16
  804720:	900d883a 	mov	r6,r18
  804724:	9809883a 	mov	r4,r19
  804728:	103ee83a 	callr	r2
  80472c:	80a1c83a 	sub	r16,r16,r2
  804730:	00bff616 	blt	zero,r2,80470c <__alt_data_end+0xff80470c>
  804734:	88c0030b 	ldhu	r3,12(r17)
  804738:	00bfffc4 	movi	r2,-1
  80473c:	18c01014 	ori	r3,r3,64
  804740:	88c0030d 	sth	r3,12(r17)
  804744:	003fdf06 	br	8046c4 <__alt_data_end+0xff8046c4>
  804748:	0005883a 	mov	r2,zero
  80474c:	003fec06 	br	804700 <__alt_data_end+0xff804700>
  804750:	88801415 	stw	r2,80(r17)
  804754:	003fd206 	br	8046a0 <__alt_data_end+0xff8046a0>
  804758:	28c00f17 	ldw	r3,60(r5)
  80475c:	00ffb316 	blt	zero,r3,80462c <__alt_data_end+0xff80462c>
  804760:	003fd706 	br	8046c0 <__alt_data_end+0xff8046c0>
  804764:	89400717 	ldw	r5,28(r17)
  804768:	000d883a 	mov	r6,zero
  80476c:	01c00044 	movi	r7,1
  804770:	9809883a 	mov	r4,r19
  804774:	403ee83a 	callr	r8
  804778:	100d883a 	mov	r6,r2
  80477c:	00bfffc4 	movi	r2,-1
  804780:	30801426 	beq	r6,r2,8047d4 <__sflush_r+0x1e4>
  804784:	8880030b 	ldhu	r2,12(r17)
  804788:	8a000a17 	ldw	r8,40(r17)
  80478c:	003fae06 	br	804648 <__alt_data_end+0xff804648>
  804790:	98c00017 	ldw	r3,0(r19)
  804794:	183fba26 	beq	r3,zero,804680 <__alt_data_end+0xff804680>
  804798:	01000744 	movi	r4,29
  80479c:	19000626 	beq	r3,r4,8047b8 <__sflush_r+0x1c8>
  8047a0:	01000584 	movi	r4,22
  8047a4:	19000426 	beq	r3,r4,8047b8 <__sflush_r+0x1c8>
  8047a8:	88c0030b 	ldhu	r3,12(r17)
  8047ac:	18c01014 	ori	r3,r3,64
  8047b0:	88c0030d 	sth	r3,12(r17)
  8047b4:	003fc306 	br	8046c4 <__alt_data_end+0xff8046c4>
  8047b8:	8880030b 	ldhu	r2,12(r17)
  8047bc:	88c00417 	ldw	r3,16(r17)
  8047c0:	88000115 	stw	zero,4(r17)
  8047c4:	10bdffcc 	andi	r2,r2,63487
  8047c8:	8880030d 	sth	r2,12(r17)
  8047cc:	88c00015 	stw	r3,0(r17)
  8047d0:	003fb306 	br	8046a0 <__alt_data_end+0xff8046a0>
  8047d4:	98800017 	ldw	r2,0(r19)
  8047d8:	103fea26 	beq	r2,zero,804784 <__alt_data_end+0xff804784>
  8047dc:	00c00744 	movi	r3,29
  8047e0:	10c00226 	beq	r2,r3,8047ec <__sflush_r+0x1fc>
  8047e4:	00c00584 	movi	r3,22
  8047e8:	10c0031e 	bne	r2,r3,8047f8 <__sflush_r+0x208>
  8047ec:	9c000015 	stw	r16,0(r19)
  8047f0:	0005883a 	mov	r2,zero
  8047f4:	003fb306 	br	8046c4 <__alt_data_end+0xff8046c4>
  8047f8:	88c0030b 	ldhu	r3,12(r17)
  8047fc:	3005883a 	mov	r2,r6
  804800:	18c01014 	ori	r3,r3,64
  804804:	88c0030d 	sth	r3,12(r17)
  804808:	003fae06 	br	8046c4 <__alt_data_end+0xff8046c4>

0080480c <_fflush_r>:
  80480c:	defffd04 	addi	sp,sp,-12
  804810:	dc000115 	stw	r16,4(sp)
  804814:	dfc00215 	stw	ra,8(sp)
  804818:	2021883a 	mov	r16,r4
  80481c:	20000226 	beq	r4,zero,804828 <_fflush_r+0x1c>
  804820:	20800e17 	ldw	r2,56(r4)
  804824:	10000c26 	beq	r2,zero,804858 <_fflush_r+0x4c>
  804828:	2880030f 	ldh	r2,12(r5)
  80482c:	1000051e 	bne	r2,zero,804844 <_fflush_r+0x38>
  804830:	0005883a 	mov	r2,zero
  804834:	dfc00217 	ldw	ra,8(sp)
  804838:	dc000117 	ldw	r16,4(sp)
  80483c:	dec00304 	addi	sp,sp,12
  804840:	f800283a 	ret
  804844:	8009883a 	mov	r4,r16
  804848:	dfc00217 	ldw	ra,8(sp)
  80484c:	dc000117 	ldw	r16,4(sp)
  804850:	dec00304 	addi	sp,sp,12
  804854:	08045f01 	jmpi	8045f0 <__sflush_r>
  804858:	d9400015 	stw	r5,0(sp)
  80485c:	0804be80 	call	804be8 <__sinit>
  804860:	d9400017 	ldw	r5,0(sp)
  804864:	003ff006 	br	804828 <__alt_data_end+0xff804828>

00804868 <fflush>:
  804868:	20000526 	beq	r4,zero,804880 <fflush+0x18>
  80486c:	00802074 	movhi	r2,129
  804870:	1085d904 	addi	r2,r2,5988
  804874:	200b883a 	mov	r5,r4
  804878:	11000017 	ldw	r4,0(r2)
  80487c:	080480c1 	jmpi	80480c <_fflush_r>
  804880:	00802074 	movhi	r2,129
  804884:	1085d804 	addi	r2,r2,5984
  804888:	11000017 	ldw	r4,0(r2)
  80488c:	01402034 	movhi	r5,128
  804890:	29520304 	addi	r5,r5,18444
  804894:	08055ec1 	jmpi	8055ec <_fwalk_reent>

00804898 <__fp_unlock>:
  804898:	0005883a 	mov	r2,zero
  80489c:	f800283a 	ret

008048a0 <_cleanup_r>:
  8048a0:	01402074 	movhi	r5,129
  8048a4:	29663104 	addi	r5,r5,-26428
  8048a8:	08055ec1 	jmpi	8055ec <_fwalk_reent>

008048ac <__sinit.part.1>:
  8048ac:	defff704 	addi	sp,sp,-36
  8048b0:	00c02034 	movhi	r3,128
  8048b4:	dfc00815 	stw	ra,32(sp)
  8048b8:	ddc00715 	stw	r23,28(sp)
  8048bc:	dd800615 	stw	r22,24(sp)
  8048c0:	dd400515 	stw	r21,20(sp)
  8048c4:	dd000415 	stw	r20,16(sp)
  8048c8:	dcc00315 	stw	r19,12(sp)
  8048cc:	dc800215 	stw	r18,8(sp)
  8048d0:	dc400115 	stw	r17,4(sp)
  8048d4:	dc000015 	stw	r16,0(sp)
  8048d8:	18d22804 	addi	r3,r3,18592
  8048dc:	24000117 	ldw	r16,4(r4)
  8048e0:	20c00f15 	stw	r3,60(r4)
  8048e4:	2080bb04 	addi	r2,r4,748
  8048e8:	00c000c4 	movi	r3,3
  8048ec:	20c0b915 	stw	r3,740(r4)
  8048f0:	2080ba15 	stw	r2,744(r4)
  8048f4:	2000b815 	stw	zero,736(r4)
  8048f8:	05c00204 	movi	r23,8
  8048fc:	00800104 	movi	r2,4
  804900:	2025883a 	mov	r18,r4
  804904:	b80d883a 	mov	r6,r23
  804908:	81001704 	addi	r4,r16,92
  80490c:	000b883a 	mov	r5,zero
  804910:	80000015 	stw	zero,0(r16)
  804914:	80000115 	stw	zero,4(r16)
  804918:	80000215 	stw	zero,8(r16)
  80491c:	8080030d 	sth	r2,12(r16)
  804920:	80001915 	stw	zero,100(r16)
  804924:	8000038d 	sth	zero,14(r16)
  804928:	80000415 	stw	zero,16(r16)
  80492c:	80000515 	stw	zero,20(r16)
  804930:	80000615 	stw	zero,24(r16)
  804934:	08064dc0 	call	8064dc <memset>
  804938:	05802034 	movhi	r22,128
  80493c:	94400217 	ldw	r17,8(r18)
  804940:	05402034 	movhi	r21,128
  804944:	05002034 	movhi	r20,128
  804948:	04c02034 	movhi	r19,128
  80494c:	b59f6504 	addi	r22,r22,32148
  804950:	ad5f7c04 	addi	r21,r21,32240
  804954:	a51f9b04 	addi	r20,r20,32364
  804958:	9cdfb204 	addi	r19,r19,32456
  80495c:	85800815 	stw	r22,32(r16)
  804960:	85400915 	stw	r21,36(r16)
  804964:	85000a15 	stw	r20,40(r16)
  804968:	84c00b15 	stw	r19,44(r16)
  80496c:	84000715 	stw	r16,28(r16)
  804970:	00800284 	movi	r2,10
  804974:	8880030d 	sth	r2,12(r17)
  804978:	00800044 	movi	r2,1
  80497c:	b80d883a 	mov	r6,r23
  804980:	89001704 	addi	r4,r17,92
  804984:	000b883a 	mov	r5,zero
  804988:	88000015 	stw	zero,0(r17)
  80498c:	88000115 	stw	zero,4(r17)
  804990:	88000215 	stw	zero,8(r17)
  804994:	88001915 	stw	zero,100(r17)
  804998:	8880038d 	sth	r2,14(r17)
  80499c:	88000415 	stw	zero,16(r17)
  8049a0:	88000515 	stw	zero,20(r17)
  8049a4:	88000615 	stw	zero,24(r17)
  8049a8:	08064dc0 	call	8064dc <memset>
  8049ac:	94000317 	ldw	r16,12(r18)
  8049b0:	00800484 	movi	r2,18
  8049b4:	8c400715 	stw	r17,28(r17)
  8049b8:	8d800815 	stw	r22,32(r17)
  8049bc:	8d400915 	stw	r21,36(r17)
  8049c0:	8d000a15 	stw	r20,40(r17)
  8049c4:	8cc00b15 	stw	r19,44(r17)
  8049c8:	8080030d 	sth	r2,12(r16)
  8049cc:	00800084 	movi	r2,2
  8049d0:	80000015 	stw	zero,0(r16)
  8049d4:	80000115 	stw	zero,4(r16)
  8049d8:	80000215 	stw	zero,8(r16)
  8049dc:	80001915 	stw	zero,100(r16)
  8049e0:	8080038d 	sth	r2,14(r16)
  8049e4:	80000415 	stw	zero,16(r16)
  8049e8:	80000515 	stw	zero,20(r16)
  8049ec:	80000615 	stw	zero,24(r16)
  8049f0:	b80d883a 	mov	r6,r23
  8049f4:	000b883a 	mov	r5,zero
  8049f8:	81001704 	addi	r4,r16,92
  8049fc:	08064dc0 	call	8064dc <memset>
  804a00:	00800044 	movi	r2,1
  804a04:	84000715 	stw	r16,28(r16)
  804a08:	85800815 	stw	r22,32(r16)
  804a0c:	85400915 	stw	r21,36(r16)
  804a10:	85000a15 	stw	r20,40(r16)
  804a14:	84c00b15 	stw	r19,44(r16)
  804a18:	90800e15 	stw	r2,56(r18)
  804a1c:	dfc00817 	ldw	ra,32(sp)
  804a20:	ddc00717 	ldw	r23,28(sp)
  804a24:	dd800617 	ldw	r22,24(sp)
  804a28:	dd400517 	ldw	r21,20(sp)
  804a2c:	dd000417 	ldw	r20,16(sp)
  804a30:	dcc00317 	ldw	r19,12(sp)
  804a34:	dc800217 	ldw	r18,8(sp)
  804a38:	dc400117 	ldw	r17,4(sp)
  804a3c:	dc000017 	ldw	r16,0(sp)
  804a40:	dec00904 	addi	sp,sp,36
  804a44:	f800283a 	ret

00804a48 <__fp_lock>:
  804a48:	0005883a 	mov	r2,zero
  804a4c:	f800283a 	ret

00804a50 <__sfmoreglue>:
  804a50:	defffc04 	addi	sp,sp,-16
  804a54:	dc400115 	stw	r17,4(sp)
  804a58:	2c7fffc4 	addi	r17,r5,-1
  804a5c:	8c401a24 	muli	r17,r17,104
  804a60:	dc800215 	stw	r18,8(sp)
  804a64:	2825883a 	mov	r18,r5
  804a68:	89401d04 	addi	r5,r17,116
  804a6c:	dc000015 	stw	r16,0(sp)
  804a70:	dfc00315 	stw	ra,12(sp)
  804a74:	08059480 	call	805948 <_malloc_r>
  804a78:	1021883a 	mov	r16,r2
  804a7c:	10000726 	beq	r2,zero,804a9c <__sfmoreglue+0x4c>
  804a80:	11000304 	addi	r4,r2,12
  804a84:	10000015 	stw	zero,0(r2)
  804a88:	14800115 	stw	r18,4(r2)
  804a8c:	11000215 	stw	r4,8(r2)
  804a90:	89801a04 	addi	r6,r17,104
  804a94:	000b883a 	mov	r5,zero
  804a98:	08064dc0 	call	8064dc <memset>
  804a9c:	8005883a 	mov	r2,r16
  804aa0:	dfc00317 	ldw	ra,12(sp)
  804aa4:	dc800217 	ldw	r18,8(sp)
  804aa8:	dc400117 	ldw	r17,4(sp)
  804aac:	dc000017 	ldw	r16,0(sp)
  804ab0:	dec00404 	addi	sp,sp,16
  804ab4:	f800283a 	ret

00804ab8 <__sfp>:
  804ab8:	defffb04 	addi	sp,sp,-20
  804abc:	dc000015 	stw	r16,0(sp)
  804ac0:	04002074 	movhi	r16,129
  804ac4:	8405d804 	addi	r16,r16,5984
  804ac8:	dcc00315 	stw	r19,12(sp)
  804acc:	2027883a 	mov	r19,r4
  804ad0:	81000017 	ldw	r4,0(r16)
  804ad4:	dfc00415 	stw	ra,16(sp)
  804ad8:	dc800215 	stw	r18,8(sp)
  804adc:	20800e17 	ldw	r2,56(r4)
  804ae0:	dc400115 	stw	r17,4(sp)
  804ae4:	1000021e 	bne	r2,zero,804af0 <__sfp+0x38>
  804ae8:	08048ac0 	call	8048ac <__sinit.part.1>
  804aec:	81000017 	ldw	r4,0(r16)
  804af0:	2480b804 	addi	r18,r4,736
  804af4:	047fffc4 	movi	r17,-1
  804af8:	91000117 	ldw	r4,4(r18)
  804afc:	94000217 	ldw	r16,8(r18)
  804b00:	213fffc4 	addi	r4,r4,-1
  804b04:	20000a16 	blt	r4,zero,804b30 <__sfp+0x78>
  804b08:	8080030f 	ldh	r2,12(r16)
  804b0c:	10000c26 	beq	r2,zero,804b40 <__sfp+0x88>
  804b10:	80c01d04 	addi	r3,r16,116
  804b14:	00000206 	br	804b20 <__sfp+0x68>
  804b18:	18bfe60f 	ldh	r2,-104(r3)
  804b1c:	10000826 	beq	r2,zero,804b40 <__sfp+0x88>
  804b20:	213fffc4 	addi	r4,r4,-1
  804b24:	1c3ffd04 	addi	r16,r3,-12
  804b28:	18c01a04 	addi	r3,r3,104
  804b2c:	247ffa1e 	bne	r4,r17,804b18 <__alt_data_end+0xff804b18>
  804b30:	90800017 	ldw	r2,0(r18)
  804b34:	10001d26 	beq	r2,zero,804bac <__sfp+0xf4>
  804b38:	1025883a 	mov	r18,r2
  804b3c:	003fee06 	br	804af8 <__alt_data_end+0xff804af8>
  804b40:	00bfffc4 	movi	r2,-1
  804b44:	8080038d 	sth	r2,14(r16)
  804b48:	00800044 	movi	r2,1
  804b4c:	8080030d 	sth	r2,12(r16)
  804b50:	80001915 	stw	zero,100(r16)
  804b54:	80000015 	stw	zero,0(r16)
  804b58:	80000215 	stw	zero,8(r16)
  804b5c:	80000115 	stw	zero,4(r16)
  804b60:	80000415 	stw	zero,16(r16)
  804b64:	80000515 	stw	zero,20(r16)
  804b68:	80000615 	stw	zero,24(r16)
  804b6c:	01800204 	movi	r6,8
  804b70:	000b883a 	mov	r5,zero
  804b74:	81001704 	addi	r4,r16,92
  804b78:	08064dc0 	call	8064dc <memset>
  804b7c:	8005883a 	mov	r2,r16
  804b80:	80000c15 	stw	zero,48(r16)
  804b84:	80000d15 	stw	zero,52(r16)
  804b88:	80001115 	stw	zero,68(r16)
  804b8c:	80001215 	stw	zero,72(r16)
  804b90:	dfc00417 	ldw	ra,16(sp)
  804b94:	dcc00317 	ldw	r19,12(sp)
  804b98:	dc800217 	ldw	r18,8(sp)
  804b9c:	dc400117 	ldw	r17,4(sp)
  804ba0:	dc000017 	ldw	r16,0(sp)
  804ba4:	dec00504 	addi	sp,sp,20
  804ba8:	f800283a 	ret
  804bac:	01400104 	movi	r5,4
  804bb0:	9809883a 	mov	r4,r19
  804bb4:	0804a500 	call	804a50 <__sfmoreglue>
  804bb8:	90800015 	stw	r2,0(r18)
  804bbc:	103fde1e 	bne	r2,zero,804b38 <__alt_data_end+0xff804b38>
  804bc0:	00800304 	movi	r2,12
  804bc4:	98800015 	stw	r2,0(r19)
  804bc8:	0005883a 	mov	r2,zero
  804bcc:	003ff006 	br	804b90 <__alt_data_end+0xff804b90>

00804bd0 <_cleanup>:
  804bd0:	00802074 	movhi	r2,129
  804bd4:	1085d804 	addi	r2,r2,5984
  804bd8:	11000017 	ldw	r4,0(r2)
  804bdc:	01402074 	movhi	r5,129
  804be0:	29663104 	addi	r5,r5,-26428
  804be4:	08055ec1 	jmpi	8055ec <_fwalk_reent>

00804be8 <__sinit>:
  804be8:	20800e17 	ldw	r2,56(r4)
  804bec:	10000126 	beq	r2,zero,804bf4 <__sinit+0xc>
  804bf0:	f800283a 	ret
  804bf4:	08048ac1 	jmpi	8048ac <__sinit.part.1>

00804bf8 <__sfp_lock_acquire>:
  804bf8:	f800283a 	ret

00804bfc <__sfp_lock_release>:
  804bfc:	f800283a 	ret

00804c00 <__sinit_lock_acquire>:
  804c00:	f800283a 	ret

00804c04 <__sinit_lock_release>:
  804c04:	f800283a 	ret

00804c08 <__fp_lock_all>:
  804c08:	00802074 	movhi	r2,129
  804c0c:	1085d904 	addi	r2,r2,5988
  804c10:	11000017 	ldw	r4,0(r2)
  804c14:	01402034 	movhi	r5,128
  804c18:	29529204 	addi	r5,r5,19016
  804c1c:	08055281 	jmpi	805528 <_fwalk>

00804c20 <__fp_unlock_all>:
  804c20:	00802074 	movhi	r2,129
  804c24:	1085d904 	addi	r2,r2,5988
  804c28:	11000017 	ldw	r4,0(r2)
  804c2c:	01402034 	movhi	r5,128
  804c30:	29522604 	addi	r5,r5,18584
  804c34:	08055281 	jmpi	805528 <_fwalk>

00804c38 <_malloc_trim_r>:
  804c38:	defffb04 	addi	sp,sp,-20
  804c3c:	dcc00315 	stw	r19,12(sp)
  804c40:	04c02074 	movhi	r19,129
  804c44:	dc800215 	stw	r18,8(sp)
  804c48:	dc400115 	stw	r17,4(sp)
  804c4c:	dc000015 	stw	r16,0(sp)
  804c50:	dfc00415 	stw	ra,16(sp)
  804c54:	2821883a 	mov	r16,r5
  804c58:	9cc05404 	addi	r19,r19,336
  804c5c:	2025883a 	mov	r18,r4
  804c60:	080d5bc0 	call	80d5bc <__malloc_lock>
  804c64:	98800217 	ldw	r2,8(r19)
  804c68:	14400117 	ldw	r17,4(r2)
  804c6c:	00bfff04 	movi	r2,-4
  804c70:	88a2703a 	and	r17,r17,r2
  804c74:	8c21c83a 	sub	r16,r17,r16
  804c78:	8403fbc4 	addi	r16,r16,4079
  804c7c:	8020d33a 	srli	r16,r16,12
  804c80:	0083ffc4 	movi	r2,4095
  804c84:	843fffc4 	addi	r16,r16,-1
  804c88:	8020933a 	slli	r16,r16,12
  804c8c:	1400060e 	bge	r2,r16,804ca8 <_malloc_trim_r+0x70>
  804c90:	000b883a 	mov	r5,zero
  804c94:	9009883a 	mov	r4,r18
  804c98:	0807d400 	call	807d40 <_sbrk_r>
  804c9c:	98c00217 	ldw	r3,8(r19)
  804ca0:	1c47883a 	add	r3,r3,r17
  804ca4:	10c00a26 	beq	r2,r3,804cd0 <_malloc_trim_r+0x98>
  804ca8:	9009883a 	mov	r4,r18
  804cac:	080d5e00 	call	80d5e0 <__malloc_unlock>
  804cb0:	0005883a 	mov	r2,zero
  804cb4:	dfc00417 	ldw	ra,16(sp)
  804cb8:	dcc00317 	ldw	r19,12(sp)
  804cbc:	dc800217 	ldw	r18,8(sp)
  804cc0:	dc400117 	ldw	r17,4(sp)
  804cc4:	dc000017 	ldw	r16,0(sp)
  804cc8:	dec00504 	addi	sp,sp,20
  804ccc:	f800283a 	ret
  804cd0:	040bc83a 	sub	r5,zero,r16
  804cd4:	9009883a 	mov	r4,r18
  804cd8:	0807d400 	call	807d40 <_sbrk_r>
  804cdc:	00ffffc4 	movi	r3,-1
  804ce0:	10c00d26 	beq	r2,r3,804d18 <_malloc_trim_r+0xe0>
  804ce4:	00c02074 	movhi	r3,129
  804ce8:	18ccb204 	addi	r3,r3,13000
  804cec:	18800017 	ldw	r2,0(r3)
  804cf0:	99000217 	ldw	r4,8(r19)
  804cf4:	8c23c83a 	sub	r17,r17,r16
  804cf8:	8c400054 	ori	r17,r17,1
  804cfc:	1421c83a 	sub	r16,r2,r16
  804d00:	24400115 	stw	r17,4(r4)
  804d04:	9009883a 	mov	r4,r18
  804d08:	1c000015 	stw	r16,0(r3)
  804d0c:	080d5e00 	call	80d5e0 <__malloc_unlock>
  804d10:	00800044 	movi	r2,1
  804d14:	003fe706 	br	804cb4 <__alt_data_end+0xff804cb4>
  804d18:	000b883a 	mov	r5,zero
  804d1c:	9009883a 	mov	r4,r18
  804d20:	0807d400 	call	807d40 <_sbrk_r>
  804d24:	99000217 	ldw	r4,8(r19)
  804d28:	014003c4 	movi	r5,15
  804d2c:	1107c83a 	sub	r3,r2,r4
  804d30:	28ffdd0e 	bge	r5,r3,804ca8 <__alt_data_end+0xff804ca8>
  804d34:	01402074 	movhi	r5,129
  804d38:	2945db04 	addi	r5,r5,5996
  804d3c:	29400017 	ldw	r5,0(r5)
  804d40:	18c00054 	ori	r3,r3,1
  804d44:	20c00115 	stw	r3,4(r4)
  804d48:	00c02074 	movhi	r3,129
  804d4c:	1145c83a 	sub	r2,r2,r5
  804d50:	18ccb204 	addi	r3,r3,13000
  804d54:	18800015 	stw	r2,0(r3)
  804d58:	003fd306 	br	804ca8 <__alt_data_end+0xff804ca8>

00804d5c <_free_r>:
  804d5c:	28004126 	beq	r5,zero,804e64 <_free_r+0x108>
  804d60:	defffd04 	addi	sp,sp,-12
  804d64:	dc400115 	stw	r17,4(sp)
  804d68:	dc000015 	stw	r16,0(sp)
  804d6c:	2023883a 	mov	r17,r4
  804d70:	2821883a 	mov	r16,r5
  804d74:	dfc00215 	stw	ra,8(sp)
  804d78:	080d5bc0 	call	80d5bc <__malloc_lock>
  804d7c:	81ffff17 	ldw	r7,-4(r16)
  804d80:	00bfff84 	movi	r2,-2
  804d84:	01002074 	movhi	r4,129
  804d88:	81bffe04 	addi	r6,r16,-8
  804d8c:	3884703a 	and	r2,r7,r2
  804d90:	21005404 	addi	r4,r4,336
  804d94:	308b883a 	add	r5,r6,r2
  804d98:	2a400117 	ldw	r9,4(r5)
  804d9c:	22000217 	ldw	r8,8(r4)
  804da0:	00ffff04 	movi	r3,-4
  804da4:	48c6703a 	and	r3,r9,r3
  804da8:	2a005726 	beq	r5,r8,804f08 <_free_r+0x1ac>
  804dac:	28c00115 	stw	r3,4(r5)
  804db0:	39c0004c 	andi	r7,r7,1
  804db4:	3800091e 	bne	r7,zero,804ddc <_free_r+0x80>
  804db8:	823ffe17 	ldw	r8,-8(r16)
  804dbc:	22400204 	addi	r9,r4,8
  804dc0:	320dc83a 	sub	r6,r6,r8
  804dc4:	31c00217 	ldw	r7,8(r6)
  804dc8:	1205883a 	add	r2,r2,r8
  804dcc:	3a406526 	beq	r7,r9,804f64 <_free_r+0x208>
  804dd0:	32000317 	ldw	r8,12(r6)
  804dd4:	3a000315 	stw	r8,12(r7)
  804dd8:	41c00215 	stw	r7,8(r8)
  804ddc:	28cf883a 	add	r7,r5,r3
  804de0:	39c00117 	ldw	r7,4(r7)
  804de4:	39c0004c 	andi	r7,r7,1
  804de8:	38003a26 	beq	r7,zero,804ed4 <_free_r+0x178>
  804dec:	10c00054 	ori	r3,r2,1
  804df0:	30c00115 	stw	r3,4(r6)
  804df4:	3087883a 	add	r3,r6,r2
  804df8:	18800015 	stw	r2,0(r3)
  804dfc:	00c07fc4 	movi	r3,511
  804e00:	18801936 	bltu	r3,r2,804e68 <_free_r+0x10c>
  804e04:	1004d0fa 	srli	r2,r2,3
  804e08:	01c00044 	movi	r7,1
  804e0c:	21400117 	ldw	r5,4(r4)
  804e10:	10c00044 	addi	r3,r2,1
  804e14:	18c7883a 	add	r3,r3,r3
  804e18:	1005d0ba 	srai	r2,r2,2
  804e1c:	18c7883a 	add	r3,r3,r3
  804e20:	18c7883a 	add	r3,r3,r3
  804e24:	1907883a 	add	r3,r3,r4
  804e28:	3884983a 	sll	r2,r7,r2
  804e2c:	19c00017 	ldw	r7,0(r3)
  804e30:	1a3ffe04 	addi	r8,r3,-8
  804e34:	1144b03a 	or	r2,r2,r5
  804e38:	32000315 	stw	r8,12(r6)
  804e3c:	31c00215 	stw	r7,8(r6)
  804e40:	20800115 	stw	r2,4(r4)
  804e44:	19800015 	stw	r6,0(r3)
  804e48:	39800315 	stw	r6,12(r7)
  804e4c:	8809883a 	mov	r4,r17
  804e50:	dfc00217 	ldw	ra,8(sp)
  804e54:	dc400117 	ldw	r17,4(sp)
  804e58:	dc000017 	ldw	r16,0(sp)
  804e5c:	dec00304 	addi	sp,sp,12
  804e60:	080d5e01 	jmpi	80d5e0 <__malloc_unlock>
  804e64:	f800283a 	ret
  804e68:	100ad27a 	srli	r5,r2,9
  804e6c:	00c00104 	movi	r3,4
  804e70:	19404a36 	bltu	r3,r5,804f9c <_free_r+0x240>
  804e74:	100ad1ba 	srli	r5,r2,6
  804e78:	28c00e44 	addi	r3,r5,57
  804e7c:	18c7883a 	add	r3,r3,r3
  804e80:	29400e04 	addi	r5,r5,56
  804e84:	18c7883a 	add	r3,r3,r3
  804e88:	18c7883a 	add	r3,r3,r3
  804e8c:	1909883a 	add	r4,r3,r4
  804e90:	20c00017 	ldw	r3,0(r4)
  804e94:	01c02074 	movhi	r7,129
  804e98:	213ffe04 	addi	r4,r4,-8
  804e9c:	39c05404 	addi	r7,r7,336
  804ea0:	20c04426 	beq	r4,r3,804fb4 <_free_r+0x258>
  804ea4:	01ffff04 	movi	r7,-4
  804ea8:	19400117 	ldw	r5,4(r3)
  804eac:	29ca703a 	and	r5,r5,r7
  804eb0:	1140022e 	bgeu	r2,r5,804ebc <_free_r+0x160>
  804eb4:	18c00217 	ldw	r3,8(r3)
  804eb8:	20fffb1e 	bne	r4,r3,804ea8 <__alt_data_end+0xff804ea8>
  804ebc:	19000317 	ldw	r4,12(r3)
  804ec0:	31000315 	stw	r4,12(r6)
  804ec4:	30c00215 	stw	r3,8(r6)
  804ec8:	21800215 	stw	r6,8(r4)
  804ecc:	19800315 	stw	r6,12(r3)
  804ed0:	003fde06 	br	804e4c <__alt_data_end+0xff804e4c>
  804ed4:	29c00217 	ldw	r7,8(r5)
  804ed8:	10c5883a 	add	r2,r2,r3
  804edc:	00c02074 	movhi	r3,129
  804ee0:	18c05604 	addi	r3,r3,344
  804ee4:	38c03b26 	beq	r7,r3,804fd4 <_free_r+0x278>
  804ee8:	2a000317 	ldw	r8,12(r5)
  804eec:	11400054 	ori	r5,r2,1
  804ef0:	3087883a 	add	r3,r6,r2
  804ef4:	3a000315 	stw	r8,12(r7)
  804ef8:	41c00215 	stw	r7,8(r8)
  804efc:	31400115 	stw	r5,4(r6)
  804f00:	18800015 	stw	r2,0(r3)
  804f04:	003fbd06 	br	804dfc <__alt_data_end+0xff804dfc>
  804f08:	39c0004c 	andi	r7,r7,1
  804f0c:	10c5883a 	add	r2,r2,r3
  804f10:	3800071e 	bne	r7,zero,804f30 <_free_r+0x1d4>
  804f14:	81fffe17 	ldw	r7,-8(r16)
  804f18:	31cdc83a 	sub	r6,r6,r7
  804f1c:	30c00317 	ldw	r3,12(r6)
  804f20:	31400217 	ldw	r5,8(r6)
  804f24:	11c5883a 	add	r2,r2,r7
  804f28:	28c00315 	stw	r3,12(r5)
  804f2c:	19400215 	stw	r5,8(r3)
  804f30:	10c00054 	ori	r3,r2,1
  804f34:	30c00115 	stw	r3,4(r6)
  804f38:	00c02074 	movhi	r3,129
  804f3c:	18c5dc04 	addi	r3,r3,6000
  804f40:	18c00017 	ldw	r3,0(r3)
  804f44:	21800215 	stw	r6,8(r4)
  804f48:	10ffc036 	bltu	r2,r3,804e4c <__alt_data_end+0xff804e4c>
  804f4c:	00802074 	movhi	r2,129
  804f50:	108caa04 	addi	r2,r2,12968
  804f54:	11400017 	ldw	r5,0(r2)
  804f58:	8809883a 	mov	r4,r17
  804f5c:	0804c380 	call	804c38 <_malloc_trim_r>
  804f60:	003fba06 	br	804e4c <__alt_data_end+0xff804e4c>
  804f64:	28c9883a 	add	r4,r5,r3
  804f68:	21000117 	ldw	r4,4(r4)
  804f6c:	2100004c 	andi	r4,r4,1
  804f70:	2000391e 	bne	r4,zero,805058 <_free_r+0x2fc>
  804f74:	29c00217 	ldw	r7,8(r5)
  804f78:	29000317 	ldw	r4,12(r5)
  804f7c:	1885883a 	add	r2,r3,r2
  804f80:	10c00054 	ori	r3,r2,1
  804f84:	39000315 	stw	r4,12(r7)
  804f88:	21c00215 	stw	r7,8(r4)
  804f8c:	30c00115 	stw	r3,4(r6)
  804f90:	308d883a 	add	r6,r6,r2
  804f94:	30800015 	stw	r2,0(r6)
  804f98:	003fac06 	br	804e4c <__alt_data_end+0xff804e4c>
  804f9c:	00c00504 	movi	r3,20
  804fa0:	19401536 	bltu	r3,r5,804ff8 <_free_r+0x29c>
  804fa4:	28c01704 	addi	r3,r5,92
  804fa8:	18c7883a 	add	r3,r3,r3
  804fac:	294016c4 	addi	r5,r5,91
  804fb0:	003fb406 	br	804e84 <__alt_data_end+0xff804e84>
  804fb4:	280bd0ba 	srai	r5,r5,2
  804fb8:	00c00044 	movi	r3,1
  804fbc:	38800117 	ldw	r2,4(r7)
  804fc0:	194a983a 	sll	r5,r3,r5
  804fc4:	2007883a 	mov	r3,r4
  804fc8:	2884b03a 	or	r2,r5,r2
  804fcc:	38800115 	stw	r2,4(r7)
  804fd0:	003fbb06 	br	804ec0 <__alt_data_end+0xff804ec0>
  804fd4:	21800515 	stw	r6,20(r4)
  804fd8:	21800415 	stw	r6,16(r4)
  804fdc:	10c00054 	ori	r3,r2,1
  804fe0:	31c00315 	stw	r7,12(r6)
  804fe4:	31c00215 	stw	r7,8(r6)
  804fe8:	30c00115 	stw	r3,4(r6)
  804fec:	308d883a 	add	r6,r6,r2
  804ff0:	30800015 	stw	r2,0(r6)
  804ff4:	003f9506 	br	804e4c <__alt_data_end+0xff804e4c>
  804ff8:	00c01504 	movi	r3,84
  804ffc:	19400536 	bltu	r3,r5,805014 <_free_r+0x2b8>
  805000:	100ad33a 	srli	r5,r2,12
  805004:	28c01bc4 	addi	r3,r5,111
  805008:	18c7883a 	add	r3,r3,r3
  80500c:	29401b84 	addi	r5,r5,110
  805010:	003f9c06 	br	804e84 <__alt_data_end+0xff804e84>
  805014:	00c05504 	movi	r3,340
  805018:	19400536 	bltu	r3,r5,805030 <_free_r+0x2d4>
  80501c:	100ad3fa 	srli	r5,r2,15
  805020:	28c01e04 	addi	r3,r5,120
  805024:	18c7883a 	add	r3,r3,r3
  805028:	29401dc4 	addi	r5,r5,119
  80502c:	003f9506 	br	804e84 <__alt_data_end+0xff804e84>
  805030:	00c15504 	movi	r3,1364
  805034:	19400536 	bltu	r3,r5,80504c <_free_r+0x2f0>
  805038:	100ad4ba 	srli	r5,r2,18
  80503c:	28c01f44 	addi	r3,r5,125
  805040:	18c7883a 	add	r3,r3,r3
  805044:	29401f04 	addi	r5,r5,124
  805048:	003f8e06 	br	804e84 <__alt_data_end+0xff804e84>
  80504c:	00c03f84 	movi	r3,254
  805050:	01401f84 	movi	r5,126
  805054:	003f8b06 	br	804e84 <__alt_data_end+0xff804e84>
  805058:	10c00054 	ori	r3,r2,1
  80505c:	30c00115 	stw	r3,4(r6)
  805060:	308d883a 	add	r6,r6,r2
  805064:	30800015 	stw	r2,0(r6)
  805068:	003f7806 	br	804e4c <__alt_data_end+0xff804e4c>

0080506c <__sfvwrite_r>:
  80506c:	30800217 	ldw	r2,8(r6)
  805070:	10006726 	beq	r2,zero,805210 <__sfvwrite_r+0x1a4>
  805074:	28c0030b 	ldhu	r3,12(r5)
  805078:	defff404 	addi	sp,sp,-48
  80507c:	dd400715 	stw	r21,28(sp)
  805080:	dd000615 	stw	r20,24(sp)
  805084:	dc000215 	stw	r16,8(sp)
  805088:	dfc00b15 	stw	ra,44(sp)
  80508c:	df000a15 	stw	fp,40(sp)
  805090:	ddc00915 	stw	r23,36(sp)
  805094:	dd800815 	stw	r22,32(sp)
  805098:	dcc00515 	stw	r19,20(sp)
  80509c:	dc800415 	stw	r18,16(sp)
  8050a0:	dc400315 	stw	r17,12(sp)
  8050a4:	1880020c 	andi	r2,r3,8
  8050a8:	2821883a 	mov	r16,r5
  8050ac:	202b883a 	mov	r21,r4
  8050b0:	3029883a 	mov	r20,r6
  8050b4:	10002726 	beq	r2,zero,805154 <__sfvwrite_r+0xe8>
  8050b8:	28800417 	ldw	r2,16(r5)
  8050bc:	10002526 	beq	r2,zero,805154 <__sfvwrite_r+0xe8>
  8050c0:	1880008c 	andi	r2,r3,2
  8050c4:	a4400017 	ldw	r17,0(r20)
  8050c8:	10002a26 	beq	r2,zero,805174 <__sfvwrite_r+0x108>
  8050cc:	05a00034 	movhi	r22,32768
  8050d0:	0027883a 	mov	r19,zero
  8050d4:	0025883a 	mov	r18,zero
  8050d8:	b5bf0004 	addi	r22,r22,-1024
  8050dc:	980d883a 	mov	r6,r19
  8050e0:	a809883a 	mov	r4,r21
  8050e4:	90004626 	beq	r18,zero,805200 <__sfvwrite_r+0x194>
  8050e8:	900f883a 	mov	r7,r18
  8050ec:	b480022e 	bgeu	r22,r18,8050f8 <__sfvwrite_r+0x8c>
  8050f0:	01e00034 	movhi	r7,32768
  8050f4:	39ff0004 	addi	r7,r7,-1024
  8050f8:	80800917 	ldw	r2,36(r16)
  8050fc:	81400717 	ldw	r5,28(r16)
  805100:	103ee83a 	callr	r2
  805104:	0080570e 	bge	zero,r2,805264 <__sfvwrite_r+0x1f8>
  805108:	a0c00217 	ldw	r3,8(r20)
  80510c:	98a7883a 	add	r19,r19,r2
  805110:	90a5c83a 	sub	r18,r18,r2
  805114:	1885c83a 	sub	r2,r3,r2
  805118:	a0800215 	stw	r2,8(r20)
  80511c:	103fef1e 	bne	r2,zero,8050dc <__alt_data_end+0xff8050dc>
  805120:	0005883a 	mov	r2,zero
  805124:	dfc00b17 	ldw	ra,44(sp)
  805128:	df000a17 	ldw	fp,40(sp)
  80512c:	ddc00917 	ldw	r23,36(sp)
  805130:	dd800817 	ldw	r22,32(sp)
  805134:	dd400717 	ldw	r21,28(sp)
  805138:	dd000617 	ldw	r20,24(sp)
  80513c:	dcc00517 	ldw	r19,20(sp)
  805140:	dc800417 	ldw	r18,16(sp)
  805144:	dc400317 	ldw	r17,12(sp)
  805148:	dc000217 	ldw	r16,8(sp)
  80514c:	dec00c04 	addi	sp,sp,48
  805150:	f800283a 	ret
  805154:	800b883a 	mov	r5,r16
  805158:	a809883a 	mov	r4,r21
  80515c:	0802c140 	call	802c14 <__swsetup_r>
  805160:	1000eb1e 	bne	r2,zero,805510 <__sfvwrite_r+0x4a4>
  805164:	80c0030b 	ldhu	r3,12(r16)
  805168:	a4400017 	ldw	r17,0(r20)
  80516c:	1880008c 	andi	r2,r3,2
  805170:	103fd61e 	bne	r2,zero,8050cc <__alt_data_end+0xff8050cc>
  805174:	1880004c 	andi	r2,r3,1
  805178:	10003f1e 	bne	r2,zero,805278 <__sfvwrite_r+0x20c>
  80517c:	0039883a 	mov	fp,zero
  805180:	0025883a 	mov	r18,zero
  805184:	90001a26 	beq	r18,zero,8051f0 <__sfvwrite_r+0x184>
  805188:	1880800c 	andi	r2,r3,512
  80518c:	84c00217 	ldw	r19,8(r16)
  805190:	10002126 	beq	r2,zero,805218 <__sfvwrite_r+0x1ac>
  805194:	982f883a 	mov	r23,r19
  805198:	94c09336 	bltu	r18,r19,8053e8 <__sfvwrite_r+0x37c>
  80519c:	1881200c 	andi	r2,r3,1152
  8051a0:	10009e1e 	bne	r2,zero,80541c <__sfvwrite_r+0x3b0>
  8051a4:	81000017 	ldw	r4,0(r16)
  8051a8:	b80d883a 	mov	r6,r23
  8051ac:	e00b883a 	mov	r5,fp
  8051b0:	08063800 	call	806380 <memmove>
  8051b4:	80c00217 	ldw	r3,8(r16)
  8051b8:	81000017 	ldw	r4,0(r16)
  8051bc:	9005883a 	mov	r2,r18
  8051c0:	1ce7c83a 	sub	r19,r3,r19
  8051c4:	25cf883a 	add	r7,r4,r23
  8051c8:	84c00215 	stw	r19,8(r16)
  8051cc:	81c00015 	stw	r7,0(r16)
  8051d0:	a0c00217 	ldw	r3,8(r20)
  8051d4:	e0b9883a 	add	fp,fp,r2
  8051d8:	90a5c83a 	sub	r18,r18,r2
  8051dc:	18a7c83a 	sub	r19,r3,r2
  8051e0:	a4c00215 	stw	r19,8(r20)
  8051e4:	983fce26 	beq	r19,zero,805120 <__alt_data_end+0xff805120>
  8051e8:	80c0030b 	ldhu	r3,12(r16)
  8051ec:	903fe61e 	bne	r18,zero,805188 <__alt_data_end+0xff805188>
  8051f0:	8f000017 	ldw	fp,0(r17)
  8051f4:	8c800117 	ldw	r18,4(r17)
  8051f8:	8c400204 	addi	r17,r17,8
  8051fc:	003fe106 	br	805184 <__alt_data_end+0xff805184>
  805200:	8cc00017 	ldw	r19,0(r17)
  805204:	8c800117 	ldw	r18,4(r17)
  805208:	8c400204 	addi	r17,r17,8
  80520c:	003fb306 	br	8050dc <__alt_data_end+0xff8050dc>
  805210:	0005883a 	mov	r2,zero
  805214:	f800283a 	ret
  805218:	81000017 	ldw	r4,0(r16)
  80521c:	80800417 	ldw	r2,16(r16)
  805220:	11005736 	bltu	r2,r4,805380 <__sfvwrite_r+0x314>
  805224:	85c00517 	ldw	r23,20(r16)
  805228:	95c05536 	bltu	r18,r23,805380 <__sfvwrite_r+0x314>
  80522c:	00a00034 	movhi	r2,32768
  805230:	10bfffc4 	addi	r2,r2,-1
  805234:	9009883a 	mov	r4,r18
  805238:	1480012e 	bgeu	r2,r18,805240 <__sfvwrite_r+0x1d4>
  80523c:	1009883a 	mov	r4,r2
  805240:	b80b883a 	mov	r5,r23
  805244:	08005980 	call	800598 <__divsi3>
  805248:	15cf383a 	mul	r7,r2,r23
  80524c:	81400717 	ldw	r5,28(r16)
  805250:	80800917 	ldw	r2,36(r16)
  805254:	e00d883a 	mov	r6,fp
  805258:	a809883a 	mov	r4,r21
  80525c:	103ee83a 	callr	r2
  805260:	00bfdb16 	blt	zero,r2,8051d0 <__alt_data_end+0xff8051d0>
  805264:	8080030b 	ldhu	r2,12(r16)
  805268:	10801014 	ori	r2,r2,64
  80526c:	8080030d 	sth	r2,12(r16)
  805270:	00bfffc4 	movi	r2,-1
  805274:	003fab06 	br	805124 <__alt_data_end+0xff805124>
  805278:	0027883a 	mov	r19,zero
  80527c:	0011883a 	mov	r8,zero
  805280:	0039883a 	mov	fp,zero
  805284:	0025883a 	mov	r18,zero
  805288:	90001f26 	beq	r18,zero,805308 <__sfvwrite_r+0x29c>
  80528c:	40005a26 	beq	r8,zero,8053f8 <__sfvwrite_r+0x38c>
  805290:	982d883a 	mov	r22,r19
  805294:	94c0012e 	bgeu	r18,r19,80529c <__sfvwrite_r+0x230>
  805298:	902d883a 	mov	r22,r18
  80529c:	81000017 	ldw	r4,0(r16)
  8052a0:	80800417 	ldw	r2,16(r16)
  8052a4:	b02f883a 	mov	r23,r22
  8052a8:	81c00517 	ldw	r7,20(r16)
  8052ac:	1100032e 	bgeu	r2,r4,8052bc <__sfvwrite_r+0x250>
  8052b0:	80c00217 	ldw	r3,8(r16)
  8052b4:	38c7883a 	add	r3,r7,r3
  8052b8:	1d801816 	blt	r3,r22,80531c <__sfvwrite_r+0x2b0>
  8052bc:	b1c03e16 	blt	r22,r7,8053b8 <__sfvwrite_r+0x34c>
  8052c0:	80800917 	ldw	r2,36(r16)
  8052c4:	81400717 	ldw	r5,28(r16)
  8052c8:	e00d883a 	mov	r6,fp
  8052cc:	da000115 	stw	r8,4(sp)
  8052d0:	a809883a 	mov	r4,r21
  8052d4:	103ee83a 	callr	r2
  8052d8:	102f883a 	mov	r23,r2
  8052dc:	da000117 	ldw	r8,4(sp)
  8052e0:	00bfe00e 	bge	zero,r2,805264 <__alt_data_end+0xff805264>
  8052e4:	9de7c83a 	sub	r19,r19,r23
  8052e8:	98001f26 	beq	r19,zero,805368 <__sfvwrite_r+0x2fc>
  8052ec:	a0800217 	ldw	r2,8(r20)
  8052f0:	e5f9883a 	add	fp,fp,r23
  8052f4:	95e5c83a 	sub	r18,r18,r23
  8052f8:	15efc83a 	sub	r23,r2,r23
  8052fc:	a5c00215 	stw	r23,8(r20)
  805300:	b83f8726 	beq	r23,zero,805120 <__alt_data_end+0xff805120>
  805304:	903fe11e 	bne	r18,zero,80528c <__alt_data_end+0xff80528c>
  805308:	8f000017 	ldw	fp,0(r17)
  80530c:	8c800117 	ldw	r18,4(r17)
  805310:	0011883a 	mov	r8,zero
  805314:	8c400204 	addi	r17,r17,8
  805318:	003fdb06 	br	805288 <__alt_data_end+0xff805288>
  80531c:	180d883a 	mov	r6,r3
  805320:	e00b883a 	mov	r5,fp
  805324:	da000115 	stw	r8,4(sp)
  805328:	d8c00015 	stw	r3,0(sp)
  80532c:	08063800 	call	806380 <memmove>
  805330:	d8c00017 	ldw	r3,0(sp)
  805334:	80800017 	ldw	r2,0(r16)
  805338:	800b883a 	mov	r5,r16
  80533c:	a809883a 	mov	r4,r21
  805340:	10c5883a 	add	r2,r2,r3
  805344:	80800015 	stw	r2,0(r16)
  805348:	d8c00015 	stw	r3,0(sp)
  80534c:	080480c0 	call	80480c <_fflush_r>
  805350:	d8c00017 	ldw	r3,0(sp)
  805354:	da000117 	ldw	r8,4(sp)
  805358:	103fc21e 	bne	r2,zero,805264 <__alt_data_end+0xff805264>
  80535c:	182f883a 	mov	r23,r3
  805360:	9de7c83a 	sub	r19,r19,r23
  805364:	983fe11e 	bne	r19,zero,8052ec <__alt_data_end+0xff8052ec>
  805368:	800b883a 	mov	r5,r16
  80536c:	a809883a 	mov	r4,r21
  805370:	080480c0 	call	80480c <_fflush_r>
  805374:	103fbb1e 	bne	r2,zero,805264 <__alt_data_end+0xff805264>
  805378:	0011883a 	mov	r8,zero
  80537c:	003fdb06 	br	8052ec <__alt_data_end+0xff8052ec>
  805380:	94c0012e 	bgeu	r18,r19,805388 <__sfvwrite_r+0x31c>
  805384:	9027883a 	mov	r19,r18
  805388:	980d883a 	mov	r6,r19
  80538c:	e00b883a 	mov	r5,fp
  805390:	08063800 	call	806380 <memmove>
  805394:	80800217 	ldw	r2,8(r16)
  805398:	80c00017 	ldw	r3,0(r16)
  80539c:	14c5c83a 	sub	r2,r2,r19
  8053a0:	1cc7883a 	add	r3,r3,r19
  8053a4:	80800215 	stw	r2,8(r16)
  8053a8:	80c00015 	stw	r3,0(r16)
  8053ac:	10004326 	beq	r2,zero,8054bc <__sfvwrite_r+0x450>
  8053b0:	9805883a 	mov	r2,r19
  8053b4:	003f8606 	br	8051d0 <__alt_data_end+0xff8051d0>
  8053b8:	b00d883a 	mov	r6,r22
  8053bc:	e00b883a 	mov	r5,fp
  8053c0:	da000115 	stw	r8,4(sp)
  8053c4:	08063800 	call	806380 <memmove>
  8053c8:	80800217 	ldw	r2,8(r16)
  8053cc:	80c00017 	ldw	r3,0(r16)
  8053d0:	da000117 	ldw	r8,4(sp)
  8053d4:	1585c83a 	sub	r2,r2,r22
  8053d8:	1dad883a 	add	r22,r3,r22
  8053dc:	80800215 	stw	r2,8(r16)
  8053e0:	85800015 	stw	r22,0(r16)
  8053e4:	003fbf06 	br	8052e4 <__alt_data_end+0xff8052e4>
  8053e8:	81000017 	ldw	r4,0(r16)
  8053ec:	9027883a 	mov	r19,r18
  8053f0:	902f883a 	mov	r23,r18
  8053f4:	003f6c06 	br	8051a8 <__alt_data_end+0xff8051a8>
  8053f8:	900d883a 	mov	r6,r18
  8053fc:	01400284 	movi	r5,10
  805400:	e009883a 	mov	r4,fp
  805404:	08061540 	call	806154 <memchr>
  805408:	10003e26 	beq	r2,zero,805504 <__sfvwrite_r+0x498>
  80540c:	10800044 	addi	r2,r2,1
  805410:	1727c83a 	sub	r19,r2,fp
  805414:	02000044 	movi	r8,1
  805418:	003f9d06 	br	805290 <__alt_data_end+0xff805290>
  80541c:	80800517 	ldw	r2,20(r16)
  805420:	81400417 	ldw	r5,16(r16)
  805424:	81c00017 	ldw	r7,0(r16)
  805428:	10a7883a 	add	r19,r2,r2
  80542c:	9885883a 	add	r2,r19,r2
  805430:	1026d7fa 	srli	r19,r2,31
  805434:	396dc83a 	sub	r22,r7,r5
  805438:	b1000044 	addi	r4,r22,1
  80543c:	9885883a 	add	r2,r19,r2
  805440:	1027d07a 	srai	r19,r2,1
  805444:	2485883a 	add	r2,r4,r18
  805448:	980d883a 	mov	r6,r19
  80544c:	9880022e 	bgeu	r19,r2,805458 <__sfvwrite_r+0x3ec>
  805450:	1027883a 	mov	r19,r2
  805454:	100d883a 	mov	r6,r2
  805458:	18c1000c 	andi	r3,r3,1024
  80545c:	18001c26 	beq	r3,zero,8054d0 <__sfvwrite_r+0x464>
  805460:	300b883a 	mov	r5,r6
  805464:	a809883a 	mov	r4,r21
  805468:	08059480 	call	805948 <_malloc_r>
  80546c:	102f883a 	mov	r23,r2
  805470:	10002926 	beq	r2,zero,805518 <__sfvwrite_r+0x4ac>
  805474:	81400417 	ldw	r5,16(r16)
  805478:	b00d883a 	mov	r6,r22
  80547c:	1009883a 	mov	r4,r2
  805480:	08062380 	call	806238 <memcpy>
  805484:	8080030b 	ldhu	r2,12(r16)
  805488:	00fedfc4 	movi	r3,-1153
  80548c:	10c4703a 	and	r2,r2,r3
  805490:	10802014 	ori	r2,r2,128
  805494:	8080030d 	sth	r2,12(r16)
  805498:	bd89883a 	add	r4,r23,r22
  80549c:	9d8fc83a 	sub	r7,r19,r22
  8054a0:	85c00415 	stw	r23,16(r16)
  8054a4:	84c00515 	stw	r19,20(r16)
  8054a8:	81000015 	stw	r4,0(r16)
  8054ac:	9027883a 	mov	r19,r18
  8054b0:	81c00215 	stw	r7,8(r16)
  8054b4:	902f883a 	mov	r23,r18
  8054b8:	003f3b06 	br	8051a8 <__alt_data_end+0xff8051a8>
  8054bc:	800b883a 	mov	r5,r16
  8054c0:	a809883a 	mov	r4,r21
  8054c4:	080480c0 	call	80480c <_fflush_r>
  8054c8:	103fb926 	beq	r2,zero,8053b0 <__alt_data_end+0xff8053b0>
  8054cc:	003f6506 	br	805264 <__alt_data_end+0xff805264>
  8054d0:	a809883a 	mov	r4,r21
  8054d4:	08077680 	call	807768 <_realloc_r>
  8054d8:	102f883a 	mov	r23,r2
  8054dc:	103fee1e 	bne	r2,zero,805498 <__alt_data_end+0xff805498>
  8054e0:	81400417 	ldw	r5,16(r16)
  8054e4:	a809883a 	mov	r4,r21
  8054e8:	0804d5c0 	call	804d5c <_free_r>
  8054ec:	8080030b 	ldhu	r2,12(r16)
  8054f0:	00ffdfc4 	movi	r3,-129
  8054f4:	1884703a 	and	r2,r3,r2
  8054f8:	00c00304 	movi	r3,12
  8054fc:	a8c00015 	stw	r3,0(r21)
  805500:	003f5906 	br	805268 <__alt_data_end+0xff805268>
  805504:	94c00044 	addi	r19,r18,1
  805508:	02000044 	movi	r8,1
  80550c:	003f6006 	br	805290 <__alt_data_end+0xff805290>
  805510:	00bfffc4 	movi	r2,-1
  805514:	003f0306 	br	805124 <__alt_data_end+0xff805124>
  805518:	00800304 	movi	r2,12
  80551c:	a8800015 	stw	r2,0(r21)
  805520:	8080030b 	ldhu	r2,12(r16)
  805524:	003f5006 	br	805268 <__alt_data_end+0xff805268>

00805528 <_fwalk>:
  805528:	defff704 	addi	sp,sp,-36
  80552c:	dd000415 	stw	r20,16(sp)
  805530:	dfc00815 	stw	ra,32(sp)
  805534:	ddc00715 	stw	r23,28(sp)
  805538:	dd800615 	stw	r22,24(sp)
  80553c:	dd400515 	stw	r21,20(sp)
  805540:	dcc00315 	stw	r19,12(sp)
  805544:	dc800215 	stw	r18,8(sp)
  805548:	dc400115 	stw	r17,4(sp)
  80554c:	dc000015 	stw	r16,0(sp)
  805550:	2500b804 	addi	r20,r4,736
  805554:	a0002326 	beq	r20,zero,8055e4 <_fwalk+0xbc>
  805558:	282b883a 	mov	r21,r5
  80555c:	002f883a 	mov	r23,zero
  805560:	05800044 	movi	r22,1
  805564:	04ffffc4 	movi	r19,-1
  805568:	a4400117 	ldw	r17,4(r20)
  80556c:	a4800217 	ldw	r18,8(r20)
  805570:	8c7fffc4 	addi	r17,r17,-1
  805574:	88000d16 	blt	r17,zero,8055ac <_fwalk+0x84>
  805578:	94000304 	addi	r16,r18,12
  80557c:	94800384 	addi	r18,r18,14
  805580:	8080000b 	ldhu	r2,0(r16)
  805584:	8c7fffc4 	addi	r17,r17,-1
  805588:	813ffd04 	addi	r4,r16,-12
  80558c:	b080042e 	bgeu	r22,r2,8055a0 <_fwalk+0x78>
  805590:	9080000f 	ldh	r2,0(r18)
  805594:	14c00226 	beq	r2,r19,8055a0 <_fwalk+0x78>
  805598:	a83ee83a 	callr	r21
  80559c:	b8aeb03a 	or	r23,r23,r2
  8055a0:	84001a04 	addi	r16,r16,104
  8055a4:	94801a04 	addi	r18,r18,104
  8055a8:	8cfff51e 	bne	r17,r19,805580 <__alt_data_end+0xff805580>
  8055ac:	a5000017 	ldw	r20,0(r20)
  8055b0:	a03fed1e 	bne	r20,zero,805568 <__alt_data_end+0xff805568>
  8055b4:	b805883a 	mov	r2,r23
  8055b8:	dfc00817 	ldw	ra,32(sp)
  8055bc:	ddc00717 	ldw	r23,28(sp)
  8055c0:	dd800617 	ldw	r22,24(sp)
  8055c4:	dd400517 	ldw	r21,20(sp)
  8055c8:	dd000417 	ldw	r20,16(sp)
  8055cc:	dcc00317 	ldw	r19,12(sp)
  8055d0:	dc800217 	ldw	r18,8(sp)
  8055d4:	dc400117 	ldw	r17,4(sp)
  8055d8:	dc000017 	ldw	r16,0(sp)
  8055dc:	dec00904 	addi	sp,sp,36
  8055e0:	f800283a 	ret
  8055e4:	002f883a 	mov	r23,zero
  8055e8:	003ff206 	br	8055b4 <__alt_data_end+0xff8055b4>

008055ec <_fwalk_reent>:
  8055ec:	defff704 	addi	sp,sp,-36
  8055f0:	dd000415 	stw	r20,16(sp)
  8055f4:	dfc00815 	stw	ra,32(sp)
  8055f8:	ddc00715 	stw	r23,28(sp)
  8055fc:	dd800615 	stw	r22,24(sp)
  805600:	dd400515 	stw	r21,20(sp)
  805604:	dcc00315 	stw	r19,12(sp)
  805608:	dc800215 	stw	r18,8(sp)
  80560c:	dc400115 	stw	r17,4(sp)
  805610:	dc000015 	stw	r16,0(sp)
  805614:	2500b804 	addi	r20,r4,736
  805618:	a0002326 	beq	r20,zero,8056a8 <_fwalk_reent+0xbc>
  80561c:	282b883a 	mov	r21,r5
  805620:	2027883a 	mov	r19,r4
  805624:	002f883a 	mov	r23,zero
  805628:	05800044 	movi	r22,1
  80562c:	04bfffc4 	movi	r18,-1
  805630:	a4400117 	ldw	r17,4(r20)
  805634:	a4000217 	ldw	r16,8(r20)
  805638:	8c7fffc4 	addi	r17,r17,-1
  80563c:	88000c16 	blt	r17,zero,805670 <_fwalk_reent+0x84>
  805640:	84000304 	addi	r16,r16,12
  805644:	8080000b 	ldhu	r2,0(r16)
  805648:	8c7fffc4 	addi	r17,r17,-1
  80564c:	817ffd04 	addi	r5,r16,-12
  805650:	b080052e 	bgeu	r22,r2,805668 <_fwalk_reent+0x7c>
  805654:	8080008f 	ldh	r2,2(r16)
  805658:	9809883a 	mov	r4,r19
  80565c:	14800226 	beq	r2,r18,805668 <_fwalk_reent+0x7c>
  805660:	a83ee83a 	callr	r21
  805664:	b8aeb03a 	or	r23,r23,r2
  805668:	84001a04 	addi	r16,r16,104
  80566c:	8cbff51e 	bne	r17,r18,805644 <__alt_data_end+0xff805644>
  805670:	a5000017 	ldw	r20,0(r20)
  805674:	a03fee1e 	bne	r20,zero,805630 <__alt_data_end+0xff805630>
  805678:	b805883a 	mov	r2,r23
  80567c:	dfc00817 	ldw	ra,32(sp)
  805680:	ddc00717 	ldw	r23,28(sp)
  805684:	dd800617 	ldw	r22,24(sp)
  805688:	dd400517 	ldw	r21,20(sp)
  80568c:	dd000417 	ldw	r20,16(sp)
  805690:	dcc00317 	ldw	r19,12(sp)
  805694:	dc800217 	ldw	r18,8(sp)
  805698:	dc400117 	ldw	r17,4(sp)
  80569c:	dc000017 	ldw	r16,0(sp)
  8056a0:	dec00904 	addi	sp,sp,36
  8056a4:	f800283a 	ret
  8056a8:	002f883a 	mov	r23,zero
  8056ac:	003ff206 	br	805678 <__alt_data_end+0xff805678>

008056b0 <_setlocale_r>:
  8056b0:	30001b26 	beq	r6,zero,805720 <_setlocale_r+0x70>
  8056b4:	01402074 	movhi	r5,129
  8056b8:	defffe04 	addi	sp,sp,-8
  8056bc:	297e8e04 	addi	r5,r5,-1480
  8056c0:	3009883a 	mov	r4,r6
  8056c4:	dc000015 	stw	r16,0(sp)
  8056c8:	dfc00115 	stw	ra,4(sp)
  8056cc:	3021883a 	mov	r16,r6
  8056d0:	0807ed00 	call	807ed0 <strcmp>
  8056d4:	1000061e 	bne	r2,zero,8056f0 <_setlocale_r+0x40>
  8056d8:	00802074 	movhi	r2,129
  8056dc:	10be8d04 	addi	r2,r2,-1484
  8056e0:	dfc00117 	ldw	ra,4(sp)
  8056e4:	dc000017 	ldw	r16,0(sp)
  8056e8:	dec00204 	addi	sp,sp,8
  8056ec:	f800283a 	ret
  8056f0:	01402074 	movhi	r5,129
  8056f4:	297e8d04 	addi	r5,r5,-1484
  8056f8:	8009883a 	mov	r4,r16
  8056fc:	0807ed00 	call	807ed0 <strcmp>
  805700:	103ff526 	beq	r2,zero,8056d8 <__alt_data_end+0xff8056d8>
  805704:	01402074 	movhi	r5,129
  805708:	297e7804 	addi	r5,r5,-1568
  80570c:	8009883a 	mov	r4,r16
  805710:	0807ed00 	call	807ed0 <strcmp>
  805714:	103ff026 	beq	r2,zero,8056d8 <__alt_data_end+0xff8056d8>
  805718:	0005883a 	mov	r2,zero
  80571c:	003ff006 	br	8056e0 <__alt_data_end+0xff8056e0>
  805720:	00802074 	movhi	r2,129
  805724:	10be8d04 	addi	r2,r2,-1484
  805728:	f800283a 	ret

0080572c <__locale_charset>:
  80572c:	00802074 	movhi	r2,129
  805730:	10803e04 	addi	r2,r2,248
  805734:	f800283a 	ret

00805738 <__locale_mb_cur_max>:
  805738:	00802074 	movhi	r2,129
  80573c:	1085da04 	addi	r2,r2,5992
  805740:	10800017 	ldw	r2,0(r2)
  805744:	f800283a 	ret

00805748 <__locale_msgcharset>:
  805748:	00802074 	movhi	r2,129
  80574c:	10803604 	addi	r2,r2,216
  805750:	f800283a 	ret

00805754 <__locale_cjk_lang>:
  805754:	0005883a 	mov	r2,zero
  805758:	f800283a 	ret

0080575c <_localeconv_r>:
  80575c:	00802074 	movhi	r2,129
  805760:	10804604 	addi	r2,r2,280
  805764:	f800283a 	ret

00805768 <setlocale>:
  805768:	00802074 	movhi	r2,129
  80576c:	1085d904 	addi	r2,r2,5988
  805770:	280d883a 	mov	r6,r5
  805774:	200b883a 	mov	r5,r4
  805778:	11000017 	ldw	r4,0(r2)
  80577c:	08056b01 	jmpi	8056b0 <_setlocale_r>

00805780 <localeconv>:
  805780:	00802074 	movhi	r2,129
  805784:	10804604 	addi	r2,r2,280
  805788:	f800283a 	ret

0080578c <__smakebuf_r>:
  80578c:	2880030b 	ldhu	r2,12(r5)
  805790:	10c0008c 	andi	r3,r2,2
  805794:	1800411e 	bne	r3,zero,80589c <__smakebuf_r+0x110>
  805798:	deffec04 	addi	sp,sp,-80
  80579c:	dc000f15 	stw	r16,60(sp)
  8057a0:	2821883a 	mov	r16,r5
  8057a4:	2940038f 	ldh	r5,14(r5)
  8057a8:	dc401015 	stw	r17,64(sp)
  8057ac:	dfc01315 	stw	ra,76(sp)
  8057b0:	dcc01215 	stw	r19,72(sp)
  8057b4:	dc801115 	stw	r18,68(sp)
  8057b8:	2023883a 	mov	r17,r4
  8057bc:	28001c16 	blt	r5,zero,805830 <__smakebuf_r+0xa4>
  8057c0:	d80d883a 	mov	r6,sp
  8057c4:	0809bd00 	call	809bd0 <_fstat_r>
  8057c8:	10001816 	blt	r2,zero,80582c <__smakebuf_r+0xa0>
  8057cc:	d8800117 	ldw	r2,4(sp)
  8057d0:	00e00014 	movui	r3,32768
  8057d4:	10bc000c 	andi	r2,r2,61440
  8057d8:	14c80020 	cmpeqi	r19,r2,8192
  8057dc:	10c03726 	beq	r2,r3,8058bc <__smakebuf_r+0x130>
  8057e0:	80c0030b 	ldhu	r3,12(r16)
  8057e4:	18c20014 	ori	r3,r3,2048
  8057e8:	80c0030d 	sth	r3,12(r16)
  8057ec:	00c80004 	movi	r3,8192
  8057f0:	10c0521e 	bne	r2,r3,80593c <__smakebuf_r+0x1b0>
  8057f4:	8140038f 	ldh	r5,14(r16)
  8057f8:	8809883a 	mov	r4,r17
  8057fc:	0809c2c0 	call	809c2c <_isatty_r>
  805800:	10004c26 	beq	r2,zero,805934 <__smakebuf_r+0x1a8>
  805804:	8080030b 	ldhu	r2,12(r16)
  805808:	80c010c4 	addi	r3,r16,67
  80580c:	80c00015 	stw	r3,0(r16)
  805810:	10800054 	ori	r2,r2,1
  805814:	8080030d 	sth	r2,12(r16)
  805818:	00800044 	movi	r2,1
  80581c:	80c00415 	stw	r3,16(r16)
  805820:	80800515 	stw	r2,20(r16)
  805824:	04810004 	movi	r18,1024
  805828:	00000706 	br	805848 <__smakebuf_r+0xbc>
  80582c:	8080030b 	ldhu	r2,12(r16)
  805830:	10c0200c 	andi	r3,r2,128
  805834:	18001f1e 	bne	r3,zero,8058b4 <__smakebuf_r+0x128>
  805838:	04810004 	movi	r18,1024
  80583c:	10820014 	ori	r2,r2,2048
  805840:	8080030d 	sth	r2,12(r16)
  805844:	0027883a 	mov	r19,zero
  805848:	900b883a 	mov	r5,r18
  80584c:	8809883a 	mov	r4,r17
  805850:	08059480 	call	805948 <_malloc_r>
  805854:	10002c26 	beq	r2,zero,805908 <__smakebuf_r+0x17c>
  805858:	80c0030b 	ldhu	r3,12(r16)
  80585c:	01002034 	movhi	r4,128
  805860:	21122804 	addi	r4,r4,18592
  805864:	89000f15 	stw	r4,60(r17)
  805868:	18c02014 	ori	r3,r3,128
  80586c:	80c0030d 	sth	r3,12(r16)
  805870:	80800015 	stw	r2,0(r16)
  805874:	80800415 	stw	r2,16(r16)
  805878:	84800515 	stw	r18,20(r16)
  80587c:	98001a1e 	bne	r19,zero,8058e8 <__smakebuf_r+0x15c>
  805880:	dfc01317 	ldw	ra,76(sp)
  805884:	dcc01217 	ldw	r19,72(sp)
  805888:	dc801117 	ldw	r18,68(sp)
  80588c:	dc401017 	ldw	r17,64(sp)
  805890:	dc000f17 	ldw	r16,60(sp)
  805894:	dec01404 	addi	sp,sp,80
  805898:	f800283a 	ret
  80589c:	288010c4 	addi	r2,r5,67
  8058a0:	28800015 	stw	r2,0(r5)
  8058a4:	28800415 	stw	r2,16(r5)
  8058a8:	00800044 	movi	r2,1
  8058ac:	28800515 	stw	r2,20(r5)
  8058b0:	f800283a 	ret
  8058b4:	04801004 	movi	r18,64
  8058b8:	003fe006 	br	80583c <__alt_data_end+0xff80583c>
  8058bc:	81000a17 	ldw	r4,40(r16)
  8058c0:	00c02034 	movhi	r3,128
  8058c4:	18df9b04 	addi	r3,r3,32364
  8058c8:	20ffc51e 	bne	r4,r3,8057e0 <__alt_data_end+0xff8057e0>
  8058cc:	8080030b 	ldhu	r2,12(r16)
  8058d0:	04810004 	movi	r18,1024
  8058d4:	84801315 	stw	r18,76(r16)
  8058d8:	1484b03a 	or	r2,r2,r18
  8058dc:	8080030d 	sth	r2,12(r16)
  8058e0:	0027883a 	mov	r19,zero
  8058e4:	003fd806 	br	805848 <__alt_data_end+0xff805848>
  8058e8:	8140038f 	ldh	r5,14(r16)
  8058ec:	8809883a 	mov	r4,r17
  8058f0:	0809c2c0 	call	809c2c <_isatty_r>
  8058f4:	103fe226 	beq	r2,zero,805880 <__alt_data_end+0xff805880>
  8058f8:	8080030b 	ldhu	r2,12(r16)
  8058fc:	10800054 	ori	r2,r2,1
  805900:	8080030d 	sth	r2,12(r16)
  805904:	003fde06 	br	805880 <__alt_data_end+0xff805880>
  805908:	8080030b 	ldhu	r2,12(r16)
  80590c:	10c0800c 	andi	r3,r2,512
  805910:	183fdb1e 	bne	r3,zero,805880 <__alt_data_end+0xff805880>
  805914:	10800094 	ori	r2,r2,2
  805918:	80c010c4 	addi	r3,r16,67
  80591c:	8080030d 	sth	r2,12(r16)
  805920:	00800044 	movi	r2,1
  805924:	80c00015 	stw	r3,0(r16)
  805928:	80c00415 	stw	r3,16(r16)
  80592c:	80800515 	stw	r2,20(r16)
  805930:	003fd306 	br	805880 <__alt_data_end+0xff805880>
  805934:	04810004 	movi	r18,1024
  805938:	003fc306 	br	805848 <__alt_data_end+0xff805848>
  80593c:	0027883a 	mov	r19,zero
  805940:	04810004 	movi	r18,1024
  805944:	003fc006 	br	805848 <__alt_data_end+0xff805848>

00805948 <_malloc_r>:
  805948:	defff504 	addi	sp,sp,-44
  80594c:	dc800315 	stw	r18,12(sp)
  805950:	dfc00a15 	stw	ra,40(sp)
  805954:	df000915 	stw	fp,36(sp)
  805958:	ddc00815 	stw	r23,32(sp)
  80595c:	dd800715 	stw	r22,28(sp)
  805960:	dd400615 	stw	r21,24(sp)
  805964:	dd000515 	stw	r20,20(sp)
  805968:	dcc00415 	stw	r19,16(sp)
  80596c:	dc400215 	stw	r17,8(sp)
  805970:	dc000115 	stw	r16,4(sp)
  805974:	288002c4 	addi	r2,r5,11
  805978:	00c00584 	movi	r3,22
  80597c:	2025883a 	mov	r18,r4
  805980:	18807f2e 	bgeu	r3,r2,805b80 <_malloc_r+0x238>
  805984:	047ffe04 	movi	r17,-8
  805988:	1462703a 	and	r17,r2,r17
  80598c:	8800a316 	blt	r17,zero,805c1c <_malloc_r+0x2d4>
  805990:	8940a236 	bltu	r17,r5,805c1c <_malloc_r+0x2d4>
  805994:	080d5bc0 	call	80d5bc <__malloc_lock>
  805998:	00807dc4 	movi	r2,503
  80599c:	1441e92e 	bgeu	r2,r17,806144 <_malloc_r+0x7fc>
  8059a0:	8804d27a 	srli	r2,r17,9
  8059a4:	1000a126 	beq	r2,zero,805c2c <_malloc_r+0x2e4>
  8059a8:	00c00104 	movi	r3,4
  8059ac:	18811e36 	bltu	r3,r2,805e28 <_malloc_r+0x4e0>
  8059b0:	8804d1ba 	srli	r2,r17,6
  8059b4:	12000e44 	addi	r8,r2,57
  8059b8:	11c00e04 	addi	r7,r2,56
  8059bc:	4209883a 	add	r4,r8,r8
  8059c0:	04c02074 	movhi	r19,129
  8059c4:	2109883a 	add	r4,r4,r4
  8059c8:	9cc05404 	addi	r19,r19,336
  8059cc:	2109883a 	add	r4,r4,r4
  8059d0:	9909883a 	add	r4,r19,r4
  8059d4:	24000117 	ldw	r16,4(r4)
  8059d8:	213ffe04 	addi	r4,r4,-8
  8059dc:	24009726 	beq	r4,r16,805c3c <_malloc_r+0x2f4>
  8059e0:	80800117 	ldw	r2,4(r16)
  8059e4:	01bfff04 	movi	r6,-4
  8059e8:	014003c4 	movi	r5,15
  8059ec:	1184703a 	and	r2,r2,r6
  8059f0:	1447c83a 	sub	r3,r2,r17
  8059f4:	28c00716 	blt	r5,r3,805a14 <_malloc_r+0xcc>
  8059f8:	1800920e 	bge	r3,zero,805c44 <_malloc_r+0x2fc>
  8059fc:	84000317 	ldw	r16,12(r16)
  805a00:	24008e26 	beq	r4,r16,805c3c <_malloc_r+0x2f4>
  805a04:	80800117 	ldw	r2,4(r16)
  805a08:	1184703a 	and	r2,r2,r6
  805a0c:	1447c83a 	sub	r3,r2,r17
  805a10:	28fff90e 	bge	r5,r3,8059f8 <__alt_data_end+0xff8059f8>
  805a14:	3809883a 	mov	r4,r7
  805a18:	01802074 	movhi	r6,129
  805a1c:	9c000417 	ldw	r16,16(r19)
  805a20:	31805404 	addi	r6,r6,336
  805a24:	32000204 	addi	r8,r6,8
  805a28:	82013426 	beq	r16,r8,805efc <_malloc_r+0x5b4>
  805a2c:	80c00117 	ldw	r3,4(r16)
  805a30:	00bfff04 	movi	r2,-4
  805a34:	188e703a 	and	r7,r3,r2
  805a38:	3c45c83a 	sub	r2,r7,r17
  805a3c:	00c003c4 	movi	r3,15
  805a40:	18811f16 	blt	r3,r2,805ec0 <_malloc_r+0x578>
  805a44:	32000515 	stw	r8,20(r6)
  805a48:	32000415 	stw	r8,16(r6)
  805a4c:	10007f0e 	bge	r2,zero,805c4c <_malloc_r+0x304>
  805a50:	00807fc4 	movi	r2,511
  805a54:	11c0fd36 	bltu	r2,r7,805e4c <_malloc_r+0x504>
  805a58:	3806d0fa 	srli	r3,r7,3
  805a5c:	01c00044 	movi	r7,1
  805a60:	30800117 	ldw	r2,4(r6)
  805a64:	19400044 	addi	r5,r3,1
  805a68:	294b883a 	add	r5,r5,r5
  805a6c:	1807d0ba 	srai	r3,r3,2
  805a70:	294b883a 	add	r5,r5,r5
  805a74:	294b883a 	add	r5,r5,r5
  805a78:	298b883a 	add	r5,r5,r6
  805a7c:	38c6983a 	sll	r3,r7,r3
  805a80:	29c00017 	ldw	r7,0(r5)
  805a84:	2a7ffe04 	addi	r9,r5,-8
  805a88:	1886b03a 	or	r3,r3,r2
  805a8c:	82400315 	stw	r9,12(r16)
  805a90:	81c00215 	stw	r7,8(r16)
  805a94:	30c00115 	stw	r3,4(r6)
  805a98:	2c000015 	stw	r16,0(r5)
  805a9c:	3c000315 	stw	r16,12(r7)
  805aa0:	2005d0ba 	srai	r2,r4,2
  805aa4:	01400044 	movi	r5,1
  805aa8:	288a983a 	sll	r5,r5,r2
  805aac:	19406f36 	bltu	r3,r5,805c6c <_malloc_r+0x324>
  805ab0:	28c4703a 	and	r2,r5,r3
  805ab4:	10000a1e 	bne	r2,zero,805ae0 <_malloc_r+0x198>
  805ab8:	00bfff04 	movi	r2,-4
  805abc:	294b883a 	add	r5,r5,r5
  805ac0:	2088703a 	and	r4,r4,r2
  805ac4:	28c4703a 	and	r2,r5,r3
  805ac8:	21000104 	addi	r4,r4,4
  805acc:	1000041e 	bne	r2,zero,805ae0 <_malloc_r+0x198>
  805ad0:	294b883a 	add	r5,r5,r5
  805ad4:	28c4703a 	and	r2,r5,r3
  805ad8:	21000104 	addi	r4,r4,4
  805adc:	103ffc26 	beq	r2,zero,805ad0 <__alt_data_end+0xff805ad0>
  805ae0:	02bfff04 	movi	r10,-4
  805ae4:	024003c4 	movi	r9,15
  805ae8:	21800044 	addi	r6,r4,1
  805aec:	318d883a 	add	r6,r6,r6
  805af0:	318d883a 	add	r6,r6,r6
  805af4:	318d883a 	add	r6,r6,r6
  805af8:	998d883a 	add	r6,r19,r6
  805afc:	333ffe04 	addi	r12,r6,-8
  805b00:	2017883a 	mov	r11,r4
  805b04:	31800104 	addi	r6,r6,4
  805b08:	34000017 	ldw	r16,0(r6)
  805b0c:	31fffd04 	addi	r7,r6,-12
  805b10:	81c0041e 	bne	r16,r7,805b24 <_malloc_r+0x1dc>
  805b14:	0000fb06 	br	805f04 <_malloc_r+0x5bc>
  805b18:	1801030e 	bge	r3,zero,805f28 <_malloc_r+0x5e0>
  805b1c:	84000317 	ldw	r16,12(r16)
  805b20:	81c0f826 	beq	r16,r7,805f04 <_malloc_r+0x5bc>
  805b24:	80800117 	ldw	r2,4(r16)
  805b28:	1284703a 	and	r2,r2,r10
  805b2c:	1447c83a 	sub	r3,r2,r17
  805b30:	48fff90e 	bge	r9,r3,805b18 <__alt_data_end+0xff805b18>
  805b34:	80800317 	ldw	r2,12(r16)
  805b38:	81000217 	ldw	r4,8(r16)
  805b3c:	89400054 	ori	r5,r17,1
  805b40:	81400115 	stw	r5,4(r16)
  805b44:	20800315 	stw	r2,12(r4)
  805b48:	11000215 	stw	r4,8(r2)
  805b4c:	8463883a 	add	r17,r16,r17
  805b50:	9c400515 	stw	r17,20(r19)
  805b54:	9c400415 	stw	r17,16(r19)
  805b58:	18800054 	ori	r2,r3,1
  805b5c:	88800115 	stw	r2,4(r17)
  805b60:	8a000315 	stw	r8,12(r17)
  805b64:	8a000215 	stw	r8,8(r17)
  805b68:	88e3883a 	add	r17,r17,r3
  805b6c:	88c00015 	stw	r3,0(r17)
  805b70:	9009883a 	mov	r4,r18
  805b74:	080d5e00 	call	80d5e0 <__malloc_unlock>
  805b78:	80800204 	addi	r2,r16,8
  805b7c:	00001b06 	br	805bec <_malloc_r+0x2a4>
  805b80:	04400404 	movi	r17,16
  805b84:	89402536 	bltu	r17,r5,805c1c <_malloc_r+0x2d4>
  805b88:	080d5bc0 	call	80d5bc <__malloc_lock>
  805b8c:	00800184 	movi	r2,6
  805b90:	01000084 	movi	r4,2
  805b94:	04c02074 	movhi	r19,129
  805b98:	1085883a 	add	r2,r2,r2
  805b9c:	9cc05404 	addi	r19,r19,336
  805ba0:	1085883a 	add	r2,r2,r2
  805ba4:	9885883a 	add	r2,r19,r2
  805ba8:	14000117 	ldw	r16,4(r2)
  805bac:	10fffe04 	addi	r3,r2,-8
  805bb0:	80c0d926 	beq	r16,r3,805f18 <_malloc_r+0x5d0>
  805bb4:	80c00117 	ldw	r3,4(r16)
  805bb8:	81000317 	ldw	r4,12(r16)
  805bbc:	00bfff04 	movi	r2,-4
  805bc0:	1884703a 	and	r2,r3,r2
  805bc4:	81400217 	ldw	r5,8(r16)
  805bc8:	8085883a 	add	r2,r16,r2
  805bcc:	10c00117 	ldw	r3,4(r2)
  805bd0:	29000315 	stw	r4,12(r5)
  805bd4:	21400215 	stw	r5,8(r4)
  805bd8:	18c00054 	ori	r3,r3,1
  805bdc:	10c00115 	stw	r3,4(r2)
  805be0:	9009883a 	mov	r4,r18
  805be4:	080d5e00 	call	80d5e0 <__malloc_unlock>
  805be8:	80800204 	addi	r2,r16,8
  805bec:	dfc00a17 	ldw	ra,40(sp)
  805bf0:	df000917 	ldw	fp,36(sp)
  805bf4:	ddc00817 	ldw	r23,32(sp)
  805bf8:	dd800717 	ldw	r22,28(sp)
  805bfc:	dd400617 	ldw	r21,24(sp)
  805c00:	dd000517 	ldw	r20,20(sp)
  805c04:	dcc00417 	ldw	r19,16(sp)
  805c08:	dc800317 	ldw	r18,12(sp)
  805c0c:	dc400217 	ldw	r17,8(sp)
  805c10:	dc000117 	ldw	r16,4(sp)
  805c14:	dec00b04 	addi	sp,sp,44
  805c18:	f800283a 	ret
  805c1c:	00800304 	movi	r2,12
  805c20:	90800015 	stw	r2,0(r18)
  805c24:	0005883a 	mov	r2,zero
  805c28:	003ff006 	br	805bec <__alt_data_end+0xff805bec>
  805c2c:	01002004 	movi	r4,128
  805c30:	02001004 	movi	r8,64
  805c34:	01c00fc4 	movi	r7,63
  805c38:	003f6106 	br	8059c0 <__alt_data_end+0xff8059c0>
  805c3c:	4009883a 	mov	r4,r8
  805c40:	003f7506 	br	805a18 <__alt_data_end+0xff805a18>
  805c44:	81000317 	ldw	r4,12(r16)
  805c48:	003fde06 	br	805bc4 <__alt_data_end+0xff805bc4>
  805c4c:	81c5883a 	add	r2,r16,r7
  805c50:	11400117 	ldw	r5,4(r2)
  805c54:	9009883a 	mov	r4,r18
  805c58:	29400054 	ori	r5,r5,1
  805c5c:	11400115 	stw	r5,4(r2)
  805c60:	080d5e00 	call	80d5e0 <__malloc_unlock>
  805c64:	80800204 	addi	r2,r16,8
  805c68:	003fe006 	br	805bec <__alt_data_end+0xff805bec>
  805c6c:	9c000217 	ldw	r16,8(r19)
  805c70:	00bfff04 	movi	r2,-4
  805c74:	85800117 	ldw	r22,4(r16)
  805c78:	b0ac703a 	and	r22,r22,r2
  805c7c:	b4400336 	bltu	r22,r17,805c8c <_malloc_r+0x344>
  805c80:	b445c83a 	sub	r2,r22,r17
  805c84:	00c003c4 	movi	r3,15
  805c88:	18805d16 	blt	r3,r2,805e00 <_malloc_r+0x4b8>
  805c8c:	05c02074 	movhi	r23,129
  805c90:	00802074 	movhi	r2,129
  805c94:	108caa04 	addi	r2,r2,12968
  805c98:	bdc5db04 	addi	r23,r23,5996
  805c9c:	15400017 	ldw	r21,0(r2)
  805ca0:	b8c00017 	ldw	r3,0(r23)
  805ca4:	00bfffc4 	movi	r2,-1
  805ca8:	858d883a 	add	r6,r16,r22
  805cac:	8d6b883a 	add	r21,r17,r21
  805cb0:	1880ea26 	beq	r3,r2,80605c <_malloc_r+0x714>
  805cb4:	ad4403c4 	addi	r21,r21,4111
  805cb8:	00bc0004 	movi	r2,-4096
  805cbc:	a8aa703a 	and	r21,r21,r2
  805cc0:	a80b883a 	mov	r5,r21
  805cc4:	9009883a 	mov	r4,r18
  805cc8:	d9800015 	stw	r6,0(sp)
  805ccc:	0807d400 	call	807d40 <_sbrk_r>
  805cd0:	1029883a 	mov	r20,r2
  805cd4:	00bfffc4 	movi	r2,-1
  805cd8:	d9800017 	ldw	r6,0(sp)
  805cdc:	a080e826 	beq	r20,r2,806080 <_malloc_r+0x738>
  805ce0:	a180a636 	bltu	r20,r6,805f7c <_malloc_r+0x634>
  805ce4:	07002074 	movhi	fp,129
  805ce8:	e70cb204 	addi	fp,fp,13000
  805cec:	e0800017 	ldw	r2,0(fp)
  805cf0:	a887883a 	add	r3,r21,r2
  805cf4:	e0c00015 	stw	r3,0(fp)
  805cf8:	3500e626 	beq	r6,r20,806094 <_malloc_r+0x74c>
  805cfc:	b9000017 	ldw	r4,0(r23)
  805d00:	00bfffc4 	movi	r2,-1
  805d04:	2080ee26 	beq	r4,r2,8060c0 <_malloc_r+0x778>
  805d08:	a185c83a 	sub	r2,r20,r6
  805d0c:	10c5883a 	add	r2,r2,r3
  805d10:	e0800015 	stw	r2,0(fp)
  805d14:	a0c001cc 	andi	r3,r20,7
  805d18:	1800bc26 	beq	r3,zero,80600c <_malloc_r+0x6c4>
  805d1c:	a0e9c83a 	sub	r20,r20,r3
  805d20:	00840204 	movi	r2,4104
  805d24:	a5000204 	addi	r20,r20,8
  805d28:	10c7c83a 	sub	r3,r2,r3
  805d2c:	a545883a 	add	r2,r20,r21
  805d30:	1083ffcc 	andi	r2,r2,4095
  805d34:	18abc83a 	sub	r21,r3,r2
  805d38:	a80b883a 	mov	r5,r21
  805d3c:	9009883a 	mov	r4,r18
  805d40:	0807d400 	call	807d40 <_sbrk_r>
  805d44:	00ffffc4 	movi	r3,-1
  805d48:	10c0e126 	beq	r2,r3,8060d0 <_malloc_r+0x788>
  805d4c:	1505c83a 	sub	r2,r2,r20
  805d50:	1545883a 	add	r2,r2,r21
  805d54:	10800054 	ori	r2,r2,1
  805d58:	e0c00017 	ldw	r3,0(fp)
  805d5c:	9d000215 	stw	r20,8(r19)
  805d60:	a0800115 	stw	r2,4(r20)
  805d64:	a8c7883a 	add	r3,r21,r3
  805d68:	e0c00015 	stw	r3,0(fp)
  805d6c:	84c00e26 	beq	r16,r19,805da8 <_malloc_r+0x460>
  805d70:	018003c4 	movi	r6,15
  805d74:	3580a72e 	bgeu	r6,r22,806014 <_malloc_r+0x6cc>
  805d78:	81400117 	ldw	r5,4(r16)
  805d7c:	013ffe04 	movi	r4,-8
  805d80:	b0bffd04 	addi	r2,r22,-12
  805d84:	1104703a 	and	r2,r2,r4
  805d88:	2900004c 	andi	r4,r5,1
  805d8c:	2088b03a 	or	r4,r4,r2
  805d90:	81000115 	stw	r4,4(r16)
  805d94:	01400144 	movi	r5,5
  805d98:	8089883a 	add	r4,r16,r2
  805d9c:	21400115 	stw	r5,4(r4)
  805da0:	21400215 	stw	r5,8(r4)
  805da4:	3080cd36 	bltu	r6,r2,8060dc <_malloc_r+0x794>
  805da8:	00802074 	movhi	r2,129
  805dac:	108ca904 	addi	r2,r2,12964
  805db0:	11000017 	ldw	r4,0(r2)
  805db4:	20c0012e 	bgeu	r4,r3,805dbc <_malloc_r+0x474>
  805db8:	10c00015 	stw	r3,0(r2)
  805dbc:	00802074 	movhi	r2,129
  805dc0:	108ca804 	addi	r2,r2,12960
  805dc4:	11000017 	ldw	r4,0(r2)
  805dc8:	9c000217 	ldw	r16,8(r19)
  805dcc:	20c0012e 	bgeu	r4,r3,805dd4 <_malloc_r+0x48c>
  805dd0:	10c00015 	stw	r3,0(r2)
  805dd4:	80c00117 	ldw	r3,4(r16)
  805dd8:	00bfff04 	movi	r2,-4
  805ddc:	1886703a 	and	r3,r3,r2
  805de0:	1c45c83a 	sub	r2,r3,r17
  805de4:	1c400236 	bltu	r3,r17,805df0 <_malloc_r+0x4a8>
  805de8:	00c003c4 	movi	r3,15
  805dec:	18800416 	blt	r3,r2,805e00 <_malloc_r+0x4b8>
  805df0:	9009883a 	mov	r4,r18
  805df4:	080d5e00 	call	80d5e0 <__malloc_unlock>
  805df8:	0005883a 	mov	r2,zero
  805dfc:	003f7b06 	br	805bec <__alt_data_end+0xff805bec>
  805e00:	88c00054 	ori	r3,r17,1
  805e04:	80c00115 	stw	r3,4(r16)
  805e08:	8463883a 	add	r17,r16,r17
  805e0c:	10800054 	ori	r2,r2,1
  805e10:	9c400215 	stw	r17,8(r19)
  805e14:	88800115 	stw	r2,4(r17)
  805e18:	9009883a 	mov	r4,r18
  805e1c:	080d5e00 	call	80d5e0 <__malloc_unlock>
  805e20:	80800204 	addi	r2,r16,8
  805e24:	003f7106 	br	805bec <__alt_data_end+0xff805bec>
  805e28:	00c00504 	movi	r3,20
  805e2c:	18804a2e 	bgeu	r3,r2,805f58 <_malloc_r+0x610>
  805e30:	00c01504 	movi	r3,84
  805e34:	18806e36 	bltu	r3,r2,805ff0 <_malloc_r+0x6a8>
  805e38:	8804d33a 	srli	r2,r17,12
  805e3c:	12001bc4 	addi	r8,r2,111
  805e40:	11c01b84 	addi	r7,r2,110
  805e44:	4209883a 	add	r4,r8,r8
  805e48:	003edd06 	br	8059c0 <__alt_data_end+0xff8059c0>
  805e4c:	3804d27a 	srli	r2,r7,9
  805e50:	00c00104 	movi	r3,4
  805e54:	1880442e 	bgeu	r3,r2,805f68 <_malloc_r+0x620>
  805e58:	00c00504 	movi	r3,20
  805e5c:	18808136 	bltu	r3,r2,806064 <_malloc_r+0x71c>
  805e60:	11401704 	addi	r5,r2,92
  805e64:	10c016c4 	addi	r3,r2,91
  805e68:	294b883a 	add	r5,r5,r5
  805e6c:	294b883a 	add	r5,r5,r5
  805e70:	294b883a 	add	r5,r5,r5
  805e74:	994b883a 	add	r5,r19,r5
  805e78:	28800017 	ldw	r2,0(r5)
  805e7c:	01802074 	movhi	r6,129
  805e80:	297ffe04 	addi	r5,r5,-8
  805e84:	31805404 	addi	r6,r6,336
  805e88:	28806526 	beq	r5,r2,806020 <_malloc_r+0x6d8>
  805e8c:	01bfff04 	movi	r6,-4
  805e90:	10c00117 	ldw	r3,4(r2)
  805e94:	1986703a 	and	r3,r3,r6
  805e98:	38c0022e 	bgeu	r7,r3,805ea4 <_malloc_r+0x55c>
  805e9c:	10800217 	ldw	r2,8(r2)
  805ea0:	28bffb1e 	bne	r5,r2,805e90 <__alt_data_end+0xff805e90>
  805ea4:	11400317 	ldw	r5,12(r2)
  805ea8:	98c00117 	ldw	r3,4(r19)
  805eac:	81400315 	stw	r5,12(r16)
  805eb0:	80800215 	stw	r2,8(r16)
  805eb4:	2c000215 	stw	r16,8(r5)
  805eb8:	14000315 	stw	r16,12(r2)
  805ebc:	003ef806 	br	805aa0 <__alt_data_end+0xff805aa0>
  805ec0:	88c00054 	ori	r3,r17,1
  805ec4:	80c00115 	stw	r3,4(r16)
  805ec8:	8463883a 	add	r17,r16,r17
  805ecc:	34400515 	stw	r17,20(r6)
  805ed0:	34400415 	stw	r17,16(r6)
  805ed4:	10c00054 	ori	r3,r2,1
  805ed8:	8a000315 	stw	r8,12(r17)
  805edc:	8a000215 	stw	r8,8(r17)
  805ee0:	88c00115 	stw	r3,4(r17)
  805ee4:	88a3883a 	add	r17,r17,r2
  805ee8:	88800015 	stw	r2,0(r17)
  805eec:	9009883a 	mov	r4,r18
  805ef0:	080d5e00 	call	80d5e0 <__malloc_unlock>
  805ef4:	80800204 	addi	r2,r16,8
  805ef8:	003f3c06 	br	805bec <__alt_data_end+0xff805bec>
  805efc:	30c00117 	ldw	r3,4(r6)
  805f00:	003ee706 	br	805aa0 <__alt_data_end+0xff805aa0>
  805f04:	5ac00044 	addi	r11,r11,1
  805f08:	588000cc 	andi	r2,r11,3
  805f0c:	31800204 	addi	r6,r6,8
  805f10:	103efd1e 	bne	r2,zero,805b08 <__alt_data_end+0xff805b08>
  805f14:	00002406 	br	805fa8 <_malloc_r+0x660>
  805f18:	14000317 	ldw	r16,12(r2)
  805f1c:	143f251e 	bne	r2,r16,805bb4 <__alt_data_end+0xff805bb4>
  805f20:	21000084 	addi	r4,r4,2
  805f24:	003ebc06 	br	805a18 <__alt_data_end+0xff805a18>
  805f28:	8085883a 	add	r2,r16,r2
  805f2c:	10c00117 	ldw	r3,4(r2)
  805f30:	81000317 	ldw	r4,12(r16)
  805f34:	81400217 	ldw	r5,8(r16)
  805f38:	18c00054 	ori	r3,r3,1
  805f3c:	10c00115 	stw	r3,4(r2)
  805f40:	29000315 	stw	r4,12(r5)
  805f44:	21400215 	stw	r5,8(r4)
  805f48:	9009883a 	mov	r4,r18
  805f4c:	080d5e00 	call	80d5e0 <__malloc_unlock>
  805f50:	80800204 	addi	r2,r16,8
  805f54:	003f2506 	br	805bec <__alt_data_end+0xff805bec>
  805f58:	12001704 	addi	r8,r2,92
  805f5c:	11c016c4 	addi	r7,r2,91
  805f60:	4209883a 	add	r4,r8,r8
  805f64:	003e9606 	br	8059c0 <__alt_data_end+0xff8059c0>
  805f68:	3804d1ba 	srli	r2,r7,6
  805f6c:	11400e44 	addi	r5,r2,57
  805f70:	10c00e04 	addi	r3,r2,56
  805f74:	294b883a 	add	r5,r5,r5
  805f78:	003fbc06 	br	805e6c <__alt_data_end+0xff805e6c>
  805f7c:	84ff5926 	beq	r16,r19,805ce4 <__alt_data_end+0xff805ce4>
  805f80:	00802074 	movhi	r2,129
  805f84:	10805404 	addi	r2,r2,336
  805f88:	14000217 	ldw	r16,8(r2)
  805f8c:	00bfff04 	movi	r2,-4
  805f90:	80c00117 	ldw	r3,4(r16)
  805f94:	1886703a 	and	r3,r3,r2
  805f98:	003f9106 	br	805de0 <__alt_data_end+0xff805de0>
  805f9c:	60800217 	ldw	r2,8(r12)
  805fa0:	213fffc4 	addi	r4,r4,-1
  805fa4:	1300651e 	bne	r2,r12,80613c <_malloc_r+0x7f4>
  805fa8:	208000cc 	andi	r2,r4,3
  805fac:	633ffe04 	addi	r12,r12,-8
  805fb0:	103ffa1e 	bne	r2,zero,805f9c <__alt_data_end+0xff805f9c>
  805fb4:	98800117 	ldw	r2,4(r19)
  805fb8:	0146303a 	nor	r3,zero,r5
  805fbc:	1884703a 	and	r2,r3,r2
  805fc0:	98800115 	stw	r2,4(r19)
  805fc4:	294b883a 	add	r5,r5,r5
  805fc8:	117f2836 	bltu	r2,r5,805c6c <__alt_data_end+0xff805c6c>
  805fcc:	283f2726 	beq	r5,zero,805c6c <__alt_data_end+0xff805c6c>
  805fd0:	2886703a 	and	r3,r5,r2
  805fd4:	5809883a 	mov	r4,r11
  805fd8:	183ec31e 	bne	r3,zero,805ae8 <__alt_data_end+0xff805ae8>
  805fdc:	294b883a 	add	r5,r5,r5
  805fe0:	2886703a 	and	r3,r5,r2
  805fe4:	21000104 	addi	r4,r4,4
  805fe8:	183ffc26 	beq	r3,zero,805fdc <__alt_data_end+0xff805fdc>
  805fec:	003ebe06 	br	805ae8 <__alt_data_end+0xff805ae8>
  805ff0:	00c05504 	movi	r3,340
  805ff4:	18801236 	bltu	r3,r2,806040 <_malloc_r+0x6f8>
  805ff8:	8804d3fa 	srli	r2,r17,15
  805ffc:	12001e04 	addi	r8,r2,120
  806000:	11c01dc4 	addi	r7,r2,119
  806004:	4209883a 	add	r4,r8,r8
  806008:	003e6d06 	br	8059c0 <__alt_data_end+0xff8059c0>
  80600c:	00c40004 	movi	r3,4096
  806010:	003f4606 	br	805d2c <__alt_data_end+0xff805d2c>
  806014:	00800044 	movi	r2,1
  806018:	a0800115 	stw	r2,4(r20)
  80601c:	003f7406 	br	805df0 <__alt_data_end+0xff805df0>
  806020:	1805d0ba 	srai	r2,r3,2
  806024:	01c00044 	movi	r7,1
  806028:	30c00117 	ldw	r3,4(r6)
  80602c:	388e983a 	sll	r7,r7,r2
  806030:	2805883a 	mov	r2,r5
  806034:	38c6b03a 	or	r3,r7,r3
  806038:	30c00115 	stw	r3,4(r6)
  80603c:	003f9b06 	br	805eac <__alt_data_end+0xff805eac>
  806040:	00c15504 	movi	r3,1364
  806044:	18801a36 	bltu	r3,r2,8060b0 <_malloc_r+0x768>
  806048:	8804d4ba 	srli	r2,r17,18
  80604c:	12001f44 	addi	r8,r2,125
  806050:	11c01f04 	addi	r7,r2,124
  806054:	4209883a 	add	r4,r8,r8
  806058:	003e5906 	br	8059c0 <__alt_data_end+0xff8059c0>
  80605c:	ad400404 	addi	r21,r21,16
  806060:	003f1706 	br	805cc0 <__alt_data_end+0xff805cc0>
  806064:	00c01504 	movi	r3,84
  806068:	18802336 	bltu	r3,r2,8060f8 <_malloc_r+0x7b0>
  80606c:	3804d33a 	srli	r2,r7,12
  806070:	11401bc4 	addi	r5,r2,111
  806074:	10c01b84 	addi	r3,r2,110
  806078:	294b883a 	add	r5,r5,r5
  80607c:	003f7b06 	br	805e6c <__alt_data_end+0xff805e6c>
  806080:	9c000217 	ldw	r16,8(r19)
  806084:	00bfff04 	movi	r2,-4
  806088:	80c00117 	ldw	r3,4(r16)
  80608c:	1886703a 	and	r3,r3,r2
  806090:	003f5306 	br	805de0 <__alt_data_end+0xff805de0>
  806094:	3083ffcc 	andi	r2,r6,4095
  806098:	103f181e 	bne	r2,zero,805cfc <__alt_data_end+0xff805cfc>
  80609c:	99000217 	ldw	r4,8(r19)
  8060a0:	b545883a 	add	r2,r22,r21
  8060a4:	10800054 	ori	r2,r2,1
  8060a8:	20800115 	stw	r2,4(r4)
  8060ac:	003f3e06 	br	805da8 <__alt_data_end+0xff805da8>
  8060b0:	01003f84 	movi	r4,254
  8060b4:	02001fc4 	movi	r8,127
  8060b8:	01c01f84 	movi	r7,126
  8060bc:	003e4006 	br	8059c0 <__alt_data_end+0xff8059c0>
  8060c0:	00802074 	movhi	r2,129
  8060c4:	1085db04 	addi	r2,r2,5996
  8060c8:	15000015 	stw	r20,0(r2)
  8060cc:	003f1106 	br	805d14 <__alt_data_end+0xff805d14>
  8060d0:	00800044 	movi	r2,1
  8060d4:	002b883a 	mov	r21,zero
  8060d8:	003f1f06 	br	805d58 <__alt_data_end+0xff805d58>
  8060dc:	81400204 	addi	r5,r16,8
  8060e0:	9009883a 	mov	r4,r18
  8060e4:	0804d5c0 	call	804d5c <_free_r>
  8060e8:	00802074 	movhi	r2,129
  8060ec:	108cb204 	addi	r2,r2,13000
  8060f0:	10c00017 	ldw	r3,0(r2)
  8060f4:	003f2c06 	br	805da8 <__alt_data_end+0xff805da8>
  8060f8:	00c05504 	movi	r3,340
  8060fc:	18800536 	bltu	r3,r2,806114 <_malloc_r+0x7cc>
  806100:	3804d3fa 	srli	r2,r7,15
  806104:	11401e04 	addi	r5,r2,120
  806108:	10c01dc4 	addi	r3,r2,119
  80610c:	294b883a 	add	r5,r5,r5
  806110:	003f5606 	br	805e6c <__alt_data_end+0xff805e6c>
  806114:	00c15504 	movi	r3,1364
  806118:	18800536 	bltu	r3,r2,806130 <_malloc_r+0x7e8>
  80611c:	3804d4ba 	srli	r2,r7,18
  806120:	11401f44 	addi	r5,r2,125
  806124:	10c01f04 	addi	r3,r2,124
  806128:	294b883a 	add	r5,r5,r5
  80612c:	003f4f06 	br	805e6c <__alt_data_end+0xff805e6c>
  806130:	01403f84 	movi	r5,254
  806134:	00c01f84 	movi	r3,126
  806138:	003f4c06 	br	805e6c <__alt_data_end+0xff805e6c>
  80613c:	98800117 	ldw	r2,4(r19)
  806140:	003fa006 	br	805fc4 <__alt_data_end+0xff805fc4>
  806144:	8808d0fa 	srli	r4,r17,3
  806148:	20800044 	addi	r2,r4,1
  80614c:	1085883a 	add	r2,r2,r2
  806150:	003e9006 	br	805b94 <__alt_data_end+0xff805b94>

00806154 <memchr>:
  806154:	208000cc 	andi	r2,r4,3
  806158:	280f883a 	mov	r7,r5
  80615c:	10003426 	beq	r2,zero,806230 <memchr+0xdc>
  806160:	30bfffc4 	addi	r2,r6,-1
  806164:	30001a26 	beq	r6,zero,8061d0 <memchr+0x7c>
  806168:	20c00003 	ldbu	r3,0(r4)
  80616c:	29803fcc 	andi	r6,r5,255
  806170:	30c0051e 	bne	r6,r3,806188 <memchr+0x34>
  806174:	00001806 	br	8061d8 <memchr+0x84>
  806178:	10001526 	beq	r2,zero,8061d0 <memchr+0x7c>
  80617c:	20c00003 	ldbu	r3,0(r4)
  806180:	10bfffc4 	addi	r2,r2,-1
  806184:	30c01426 	beq	r6,r3,8061d8 <memchr+0x84>
  806188:	21000044 	addi	r4,r4,1
  80618c:	20c000cc 	andi	r3,r4,3
  806190:	183ff91e 	bne	r3,zero,806178 <__alt_data_end+0xff806178>
  806194:	020000c4 	movi	r8,3
  806198:	40801136 	bltu	r8,r2,8061e0 <memchr+0x8c>
  80619c:	10000c26 	beq	r2,zero,8061d0 <memchr+0x7c>
  8061a0:	20c00003 	ldbu	r3,0(r4)
  8061a4:	29403fcc 	andi	r5,r5,255
  8061a8:	28c00b26 	beq	r5,r3,8061d8 <memchr+0x84>
  8061ac:	20c00044 	addi	r3,r4,1
  8061b0:	39803fcc 	andi	r6,r7,255
  8061b4:	2089883a 	add	r4,r4,r2
  8061b8:	00000306 	br	8061c8 <memchr+0x74>
  8061bc:	18c00044 	addi	r3,r3,1
  8061c0:	197fffc3 	ldbu	r5,-1(r3)
  8061c4:	31400526 	beq	r6,r5,8061dc <memchr+0x88>
  8061c8:	1805883a 	mov	r2,r3
  8061cc:	20fffb1e 	bne	r4,r3,8061bc <__alt_data_end+0xff8061bc>
  8061d0:	0005883a 	mov	r2,zero
  8061d4:	f800283a 	ret
  8061d8:	2005883a 	mov	r2,r4
  8061dc:	f800283a 	ret
  8061e0:	28c03fcc 	andi	r3,r5,255
  8061e4:	1812923a 	slli	r9,r3,8
  8061e8:	02ffbff4 	movhi	r11,65279
  8061ec:	02a02074 	movhi	r10,32897
  8061f0:	48d2b03a 	or	r9,r9,r3
  8061f4:	4806943a 	slli	r3,r9,16
  8061f8:	5affbfc4 	addi	r11,r11,-257
  8061fc:	52a02004 	addi	r10,r10,-32640
  806200:	48d2b03a 	or	r9,r9,r3
  806204:	20c00017 	ldw	r3,0(r4)
  806208:	48c6f03a 	xor	r3,r9,r3
  80620c:	1acd883a 	add	r6,r3,r11
  806210:	00c6303a 	nor	r3,zero,r3
  806214:	30c6703a 	and	r3,r6,r3
  806218:	1a86703a 	and	r3,r3,r10
  80621c:	183fe01e 	bne	r3,zero,8061a0 <__alt_data_end+0xff8061a0>
  806220:	10bfff04 	addi	r2,r2,-4
  806224:	21000104 	addi	r4,r4,4
  806228:	40bff636 	bltu	r8,r2,806204 <__alt_data_end+0xff806204>
  80622c:	003fdb06 	br	80619c <__alt_data_end+0xff80619c>
  806230:	3005883a 	mov	r2,r6
  806234:	003fd706 	br	806194 <__alt_data_end+0xff806194>

00806238 <memcpy>:
  806238:	defffd04 	addi	sp,sp,-12
  80623c:	dfc00215 	stw	ra,8(sp)
  806240:	dc400115 	stw	r17,4(sp)
  806244:	dc000015 	stw	r16,0(sp)
  806248:	00c003c4 	movi	r3,15
  80624c:	2005883a 	mov	r2,r4
  806250:	1980452e 	bgeu	r3,r6,806368 <memcpy+0x130>
  806254:	2906b03a 	or	r3,r5,r4
  806258:	18c000cc 	andi	r3,r3,3
  80625c:	1800441e 	bne	r3,zero,806370 <memcpy+0x138>
  806260:	347ffc04 	addi	r17,r6,-16
  806264:	8822d13a 	srli	r17,r17,4
  806268:	28c00104 	addi	r3,r5,4
  80626c:	23400104 	addi	r13,r4,4
  806270:	8820913a 	slli	r16,r17,4
  806274:	2b000204 	addi	r12,r5,8
  806278:	22c00204 	addi	r11,r4,8
  80627c:	84000504 	addi	r16,r16,20
  806280:	2a800304 	addi	r10,r5,12
  806284:	22400304 	addi	r9,r4,12
  806288:	2c21883a 	add	r16,r5,r16
  80628c:	2811883a 	mov	r8,r5
  806290:	200f883a 	mov	r7,r4
  806294:	41000017 	ldw	r4,0(r8)
  806298:	1fc00017 	ldw	ra,0(r3)
  80629c:	63c00017 	ldw	r15,0(r12)
  8062a0:	39000015 	stw	r4,0(r7)
  8062a4:	53800017 	ldw	r14,0(r10)
  8062a8:	6fc00015 	stw	ra,0(r13)
  8062ac:	5bc00015 	stw	r15,0(r11)
  8062b0:	4b800015 	stw	r14,0(r9)
  8062b4:	18c00404 	addi	r3,r3,16
  8062b8:	39c00404 	addi	r7,r7,16
  8062bc:	42000404 	addi	r8,r8,16
  8062c0:	6b400404 	addi	r13,r13,16
  8062c4:	63000404 	addi	r12,r12,16
  8062c8:	5ac00404 	addi	r11,r11,16
  8062cc:	52800404 	addi	r10,r10,16
  8062d0:	4a400404 	addi	r9,r9,16
  8062d4:	1c3fef1e 	bne	r3,r16,806294 <__alt_data_end+0xff806294>
  8062d8:	89c00044 	addi	r7,r17,1
  8062dc:	380e913a 	slli	r7,r7,4
  8062e0:	310003cc 	andi	r4,r6,15
  8062e4:	02c000c4 	movi	r11,3
  8062e8:	11c7883a 	add	r3,r2,r7
  8062ec:	29cb883a 	add	r5,r5,r7
  8062f0:	5900212e 	bgeu	r11,r4,806378 <memcpy+0x140>
  8062f4:	1813883a 	mov	r9,r3
  8062f8:	2811883a 	mov	r8,r5
  8062fc:	200f883a 	mov	r7,r4
  806300:	42800017 	ldw	r10,0(r8)
  806304:	4a400104 	addi	r9,r9,4
  806308:	39ffff04 	addi	r7,r7,-4
  80630c:	4abfff15 	stw	r10,-4(r9)
  806310:	42000104 	addi	r8,r8,4
  806314:	59fffa36 	bltu	r11,r7,806300 <__alt_data_end+0xff806300>
  806318:	213fff04 	addi	r4,r4,-4
  80631c:	2008d0ba 	srli	r4,r4,2
  806320:	318000cc 	andi	r6,r6,3
  806324:	21000044 	addi	r4,r4,1
  806328:	2109883a 	add	r4,r4,r4
  80632c:	2109883a 	add	r4,r4,r4
  806330:	1907883a 	add	r3,r3,r4
  806334:	290b883a 	add	r5,r5,r4
  806338:	30000626 	beq	r6,zero,806354 <memcpy+0x11c>
  80633c:	198d883a 	add	r6,r3,r6
  806340:	29c00003 	ldbu	r7,0(r5)
  806344:	18c00044 	addi	r3,r3,1
  806348:	29400044 	addi	r5,r5,1
  80634c:	19ffffc5 	stb	r7,-1(r3)
  806350:	19bffb1e 	bne	r3,r6,806340 <__alt_data_end+0xff806340>
  806354:	dfc00217 	ldw	ra,8(sp)
  806358:	dc400117 	ldw	r17,4(sp)
  80635c:	dc000017 	ldw	r16,0(sp)
  806360:	dec00304 	addi	sp,sp,12
  806364:	f800283a 	ret
  806368:	2007883a 	mov	r3,r4
  80636c:	003ff206 	br	806338 <__alt_data_end+0xff806338>
  806370:	2007883a 	mov	r3,r4
  806374:	003ff106 	br	80633c <__alt_data_end+0xff80633c>
  806378:	200d883a 	mov	r6,r4
  80637c:	003fee06 	br	806338 <__alt_data_end+0xff806338>

00806380 <memmove>:
  806380:	2005883a 	mov	r2,r4
  806384:	29000b2e 	bgeu	r5,r4,8063b4 <memmove+0x34>
  806388:	298f883a 	add	r7,r5,r6
  80638c:	21c0092e 	bgeu	r4,r7,8063b4 <memmove+0x34>
  806390:	2187883a 	add	r3,r4,r6
  806394:	198bc83a 	sub	r5,r3,r6
  806398:	30004826 	beq	r6,zero,8064bc <memmove+0x13c>
  80639c:	39ffffc4 	addi	r7,r7,-1
  8063a0:	39000003 	ldbu	r4,0(r7)
  8063a4:	18ffffc4 	addi	r3,r3,-1
  8063a8:	19000005 	stb	r4,0(r3)
  8063ac:	28fffb1e 	bne	r5,r3,80639c <__alt_data_end+0xff80639c>
  8063b0:	f800283a 	ret
  8063b4:	00c003c4 	movi	r3,15
  8063b8:	1980412e 	bgeu	r3,r6,8064c0 <memmove+0x140>
  8063bc:	2886b03a 	or	r3,r5,r2
  8063c0:	18c000cc 	andi	r3,r3,3
  8063c4:	1800401e 	bne	r3,zero,8064c8 <memmove+0x148>
  8063c8:	33fffc04 	addi	r15,r6,-16
  8063cc:	781ed13a 	srli	r15,r15,4
  8063d0:	28c00104 	addi	r3,r5,4
  8063d4:	13400104 	addi	r13,r2,4
  8063d8:	781c913a 	slli	r14,r15,4
  8063dc:	2b000204 	addi	r12,r5,8
  8063e0:	12c00204 	addi	r11,r2,8
  8063e4:	73800504 	addi	r14,r14,20
  8063e8:	2a800304 	addi	r10,r5,12
  8063ec:	12400304 	addi	r9,r2,12
  8063f0:	2b9d883a 	add	r14,r5,r14
  8063f4:	2811883a 	mov	r8,r5
  8063f8:	100f883a 	mov	r7,r2
  8063fc:	41000017 	ldw	r4,0(r8)
  806400:	39c00404 	addi	r7,r7,16
  806404:	18c00404 	addi	r3,r3,16
  806408:	393ffc15 	stw	r4,-16(r7)
  80640c:	193ffc17 	ldw	r4,-16(r3)
  806410:	6b400404 	addi	r13,r13,16
  806414:	5ac00404 	addi	r11,r11,16
  806418:	693ffc15 	stw	r4,-16(r13)
  80641c:	61000017 	ldw	r4,0(r12)
  806420:	4a400404 	addi	r9,r9,16
  806424:	42000404 	addi	r8,r8,16
  806428:	593ffc15 	stw	r4,-16(r11)
  80642c:	51000017 	ldw	r4,0(r10)
  806430:	63000404 	addi	r12,r12,16
  806434:	52800404 	addi	r10,r10,16
  806438:	493ffc15 	stw	r4,-16(r9)
  80643c:	1bbfef1e 	bne	r3,r14,8063fc <__alt_data_end+0xff8063fc>
  806440:	79000044 	addi	r4,r15,1
  806444:	2008913a 	slli	r4,r4,4
  806448:	328003cc 	andi	r10,r6,15
  80644c:	02c000c4 	movi	r11,3
  806450:	1107883a 	add	r3,r2,r4
  806454:	290b883a 	add	r5,r5,r4
  806458:	5a801e2e 	bgeu	r11,r10,8064d4 <memmove+0x154>
  80645c:	1813883a 	mov	r9,r3
  806460:	2811883a 	mov	r8,r5
  806464:	500f883a 	mov	r7,r10
  806468:	41000017 	ldw	r4,0(r8)
  80646c:	4a400104 	addi	r9,r9,4
  806470:	39ffff04 	addi	r7,r7,-4
  806474:	493fff15 	stw	r4,-4(r9)
  806478:	42000104 	addi	r8,r8,4
  80647c:	59fffa36 	bltu	r11,r7,806468 <__alt_data_end+0xff806468>
  806480:	513fff04 	addi	r4,r10,-4
  806484:	2008d0ba 	srli	r4,r4,2
  806488:	318000cc 	andi	r6,r6,3
  80648c:	21000044 	addi	r4,r4,1
  806490:	2109883a 	add	r4,r4,r4
  806494:	2109883a 	add	r4,r4,r4
  806498:	1907883a 	add	r3,r3,r4
  80649c:	290b883a 	add	r5,r5,r4
  8064a0:	30000b26 	beq	r6,zero,8064d0 <memmove+0x150>
  8064a4:	198d883a 	add	r6,r3,r6
  8064a8:	29c00003 	ldbu	r7,0(r5)
  8064ac:	18c00044 	addi	r3,r3,1
  8064b0:	29400044 	addi	r5,r5,1
  8064b4:	19ffffc5 	stb	r7,-1(r3)
  8064b8:	19bffb1e 	bne	r3,r6,8064a8 <__alt_data_end+0xff8064a8>
  8064bc:	f800283a 	ret
  8064c0:	1007883a 	mov	r3,r2
  8064c4:	003ff606 	br	8064a0 <__alt_data_end+0xff8064a0>
  8064c8:	1007883a 	mov	r3,r2
  8064cc:	003ff506 	br	8064a4 <__alt_data_end+0xff8064a4>
  8064d0:	f800283a 	ret
  8064d4:	500d883a 	mov	r6,r10
  8064d8:	003ff106 	br	8064a0 <__alt_data_end+0xff8064a0>

008064dc <memset>:
  8064dc:	20c000cc 	andi	r3,r4,3
  8064e0:	2005883a 	mov	r2,r4
  8064e4:	18004426 	beq	r3,zero,8065f8 <memset+0x11c>
  8064e8:	31ffffc4 	addi	r7,r6,-1
  8064ec:	30004026 	beq	r6,zero,8065f0 <memset+0x114>
  8064f0:	2813883a 	mov	r9,r5
  8064f4:	200d883a 	mov	r6,r4
  8064f8:	2007883a 	mov	r3,r4
  8064fc:	00000406 	br	806510 <memset+0x34>
  806500:	3a3fffc4 	addi	r8,r7,-1
  806504:	31800044 	addi	r6,r6,1
  806508:	38003926 	beq	r7,zero,8065f0 <memset+0x114>
  80650c:	400f883a 	mov	r7,r8
  806510:	18c00044 	addi	r3,r3,1
  806514:	32400005 	stb	r9,0(r6)
  806518:	1a0000cc 	andi	r8,r3,3
  80651c:	403ff81e 	bne	r8,zero,806500 <__alt_data_end+0xff806500>
  806520:	010000c4 	movi	r4,3
  806524:	21c02d2e 	bgeu	r4,r7,8065dc <memset+0x100>
  806528:	29003fcc 	andi	r4,r5,255
  80652c:	200c923a 	slli	r6,r4,8
  806530:	3108b03a 	or	r4,r6,r4
  806534:	200c943a 	slli	r6,r4,16
  806538:	218cb03a 	or	r6,r4,r6
  80653c:	010003c4 	movi	r4,15
  806540:	21c0182e 	bgeu	r4,r7,8065a4 <memset+0xc8>
  806544:	3b3ffc04 	addi	r12,r7,-16
  806548:	6018d13a 	srli	r12,r12,4
  80654c:	1a000104 	addi	r8,r3,4
  806550:	1ac00204 	addi	r11,r3,8
  806554:	6008913a 	slli	r4,r12,4
  806558:	1a800304 	addi	r10,r3,12
  80655c:	1813883a 	mov	r9,r3
  806560:	21000504 	addi	r4,r4,20
  806564:	1909883a 	add	r4,r3,r4
  806568:	49800015 	stw	r6,0(r9)
  80656c:	41800015 	stw	r6,0(r8)
  806570:	59800015 	stw	r6,0(r11)
  806574:	51800015 	stw	r6,0(r10)
  806578:	42000404 	addi	r8,r8,16
  80657c:	4a400404 	addi	r9,r9,16
  806580:	5ac00404 	addi	r11,r11,16
  806584:	52800404 	addi	r10,r10,16
  806588:	413ff71e 	bne	r8,r4,806568 <__alt_data_end+0xff806568>
  80658c:	63000044 	addi	r12,r12,1
  806590:	6018913a 	slli	r12,r12,4
  806594:	39c003cc 	andi	r7,r7,15
  806598:	010000c4 	movi	r4,3
  80659c:	1b07883a 	add	r3,r3,r12
  8065a0:	21c00e2e 	bgeu	r4,r7,8065dc <memset+0x100>
  8065a4:	1813883a 	mov	r9,r3
  8065a8:	3811883a 	mov	r8,r7
  8065ac:	010000c4 	movi	r4,3
  8065b0:	49800015 	stw	r6,0(r9)
  8065b4:	423fff04 	addi	r8,r8,-4
  8065b8:	4a400104 	addi	r9,r9,4
  8065bc:	223ffc36 	bltu	r4,r8,8065b0 <__alt_data_end+0xff8065b0>
  8065c0:	393fff04 	addi	r4,r7,-4
  8065c4:	2008d0ba 	srli	r4,r4,2
  8065c8:	39c000cc 	andi	r7,r7,3
  8065cc:	21000044 	addi	r4,r4,1
  8065d0:	2109883a 	add	r4,r4,r4
  8065d4:	2109883a 	add	r4,r4,r4
  8065d8:	1907883a 	add	r3,r3,r4
  8065dc:	38000526 	beq	r7,zero,8065f4 <memset+0x118>
  8065e0:	19cf883a 	add	r7,r3,r7
  8065e4:	19400005 	stb	r5,0(r3)
  8065e8:	18c00044 	addi	r3,r3,1
  8065ec:	38fffd1e 	bne	r7,r3,8065e4 <__alt_data_end+0xff8065e4>
  8065f0:	f800283a 	ret
  8065f4:	f800283a 	ret
  8065f8:	2007883a 	mov	r3,r4
  8065fc:	300f883a 	mov	r7,r6
  806600:	003fc706 	br	806520 <__alt_data_end+0xff806520>

00806604 <_Balloc>:
  806604:	20801317 	ldw	r2,76(r4)
  806608:	defffc04 	addi	sp,sp,-16
  80660c:	dc400115 	stw	r17,4(sp)
  806610:	dc000015 	stw	r16,0(sp)
  806614:	dfc00315 	stw	ra,12(sp)
  806618:	dc800215 	stw	r18,8(sp)
  80661c:	2023883a 	mov	r17,r4
  806620:	2821883a 	mov	r16,r5
  806624:	10000f26 	beq	r2,zero,806664 <_Balloc+0x60>
  806628:	8407883a 	add	r3,r16,r16
  80662c:	18c7883a 	add	r3,r3,r3
  806630:	10c7883a 	add	r3,r2,r3
  806634:	18800017 	ldw	r2,0(r3)
  806638:	10001126 	beq	r2,zero,806680 <_Balloc+0x7c>
  80663c:	11000017 	ldw	r4,0(r2)
  806640:	19000015 	stw	r4,0(r3)
  806644:	10000415 	stw	zero,16(r2)
  806648:	10000315 	stw	zero,12(r2)
  80664c:	dfc00317 	ldw	ra,12(sp)
  806650:	dc800217 	ldw	r18,8(sp)
  806654:	dc400117 	ldw	r17,4(sp)
  806658:	dc000017 	ldw	r16,0(sp)
  80665c:	dec00404 	addi	sp,sp,16
  806660:	f800283a 	ret
  806664:	01800844 	movi	r6,33
  806668:	01400104 	movi	r5,4
  80666c:	08098000 	call	809800 <_calloc_r>
  806670:	88801315 	stw	r2,76(r17)
  806674:	103fec1e 	bne	r2,zero,806628 <__alt_data_end+0xff806628>
  806678:	0005883a 	mov	r2,zero
  80667c:	003ff306 	br	80664c <__alt_data_end+0xff80664c>
  806680:	01400044 	movi	r5,1
  806684:	2c24983a 	sll	r18,r5,r16
  806688:	8809883a 	mov	r4,r17
  80668c:	91800144 	addi	r6,r18,5
  806690:	318d883a 	add	r6,r6,r6
  806694:	318d883a 	add	r6,r6,r6
  806698:	08098000 	call	809800 <_calloc_r>
  80669c:	103ff626 	beq	r2,zero,806678 <__alt_data_end+0xff806678>
  8066a0:	14000115 	stw	r16,4(r2)
  8066a4:	14800215 	stw	r18,8(r2)
  8066a8:	003fe606 	br	806644 <__alt_data_end+0xff806644>

008066ac <_Bfree>:
  8066ac:	28000826 	beq	r5,zero,8066d0 <_Bfree+0x24>
  8066b0:	28c00117 	ldw	r3,4(r5)
  8066b4:	20801317 	ldw	r2,76(r4)
  8066b8:	18c7883a 	add	r3,r3,r3
  8066bc:	18c7883a 	add	r3,r3,r3
  8066c0:	10c5883a 	add	r2,r2,r3
  8066c4:	10c00017 	ldw	r3,0(r2)
  8066c8:	28c00015 	stw	r3,0(r5)
  8066cc:	11400015 	stw	r5,0(r2)
  8066d0:	f800283a 	ret

008066d4 <__multadd>:
  8066d4:	defffa04 	addi	sp,sp,-24
  8066d8:	dc800315 	stw	r18,12(sp)
  8066dc:	dc400215 	stw	r17,8(sp)
  8066e0:	dc000115 	stw	r16,4(sp)
  8066e4:	2823883a 	mov	r17,r5
  8066e8:	2c000417 	ldw	r16,16(r5)
  8066ec:	dfc00515 	stw	ra,20(sp)
  8066f0:	dcc00415 	stw	r19,16(sp)
  8066f4:	2025883a 	mov	r18,r4
  8066f8:	29400504 	addi	r5,r5,20
  8066fc:	0011883a 	mov	r8,zero
  806700:	28c00017 	ldw	r3,0(r5)
  806704:	29400104 	addi	r5,r5,4
  806708:	42000044 	addi	r8,r8,1
  80670c:	18bfffcc 	andi	r2,r3,65535
  806710:	1185383a 	mul	r2,r2,r6
  806714:	1806d43a 	srli	r3,r3,16
  806718:	11cf883a 	add	r7,r2,r7
  80671c:	3808d43a 	srli	r4,r7,16
  806720:	1987383a 	mul	r3,r3,r6
  806724:	38bfffcc 	andi	r2,r7,65535
  806728:	1907883a 	add	r3,r3,r4
  80672c:	1808943a 	slli	r4,r3,16
  806730:	180ed43a 	srli	r7,r3,16
  806734:	2085883a 	add	r2,r4,r2
  806738:	28bfff15 	stw	r2,-4(r5)
  80673c:	443ff016 	blt	r8,r16,806700 <__alt_data_end+0xff806700>
  806740:	38000926 	beq	r7,zero,806768 <__multadd+0x94>
  806744:	88800217 	ldw	r2,8(r17)
  806748:	80800f0e 	bge	r16,r2,806788 <__multadd+0xb4>
  80674c:	80800144 	addi	r2,r16,5
  806750:	1085883a 	add	r2,r2,r2
  806754:	1085883a 	add	r2,r2,r2
  806758:	8885883a 	add	r2,r17,r2
  80675c:	11c00015 	stw	r7,0(r2)
  806760:	84000044 	addi	r16,r16,1
  806764:	8c000415 	stw	r16,16(r17)
  806768:	8805883a 	mov	r2,r17
  80676c:	dfc00517 	ldw	ra,20(sp)
  806770:	dcc00417 	ldw	r19,16(sp)
  806774:	dc800317 	ldw	r18,12(sp)
  806778:	dc400217 	ldw	r17,8(sp)
  80677c:	dc000117 	ldw	r16,4(sp)
  806780:	dec00604 	addi	sp,sp,24
  806784:	f800283a 	ret
  806788:	89400117 	ldw	r5,4(r17)
  80678c:	9009883a 	mov	r4,r18
  806790:	d9c00015 	stw	r7,0(sp)
  806794:	29400044 	addi	r5,r5,1
  806798:	08066040 	call	806604 <_Balloc>
  80679c:	89800417 	ldw	r6,16(r17)
  8067a0:	89400304 	addi	r5,r17,12
  8067a4:	11000304 	addi	r4,r2,12
  8067a8:	31800084 	addi	r6,r6,2
  8067ac:	318d883a 	add	r6,r6,r6
  8067b0:	318d883a 	add	r6,r6,r6
  8067b4:	1027883a 	mov	r19,r2
  8067b8:	08062380 	call	806238 <memcpy>
  8067bc:	d9c00017 	ldw	r7,0(sp)
  8067c0:	88000a26 	beq	r17,zero,8067ec <__multadd+0x118>
  8067c4:	88c00117 	ldw	r3,4(r17)
  8067c8:	90801317 	ldw	r2,76(r18)
  8067cc:	18c7883a 	add	r3,r3,r3
  8067d0:	18c7883a 	add	r3,r3,r3
  8067d4:	10c5883a 	add	r2,r2,r3
  8067d8:	10c00017 	ldw	r3,0(r2)
  8067dc:	88c00015 	stw	r3,0(r17)
  8067e0:	14400015 	stw	r17,0(r2)
  8067e4:	9823883a 	mov	r17,r19
  8067e8:	003fd806 	br	80674c <__alt_data_end+0xff80674c>
  8067ec:	9823883a 	mov	r17,r19
  8067f0:	003fd606 	br	80674c <__alt_data_end+0xff80674c>

008067f4 <__s2b>:
  8067f4:	defff904 	addi	sp,sp,-28
  8067f8:	dc400115 	stw	r17,4(sp)
  8067fc:	dc000015 	stw	r16,0(sp)
  806800:	2023883a 	mov	r17,r4
  806804:	2821883a 	mov	r16,r5
  806808:	39000204 	addi	r4,r7,8
  80680c:	01400244 	movi	r5,9
  806810:	dcc00315 	stw	r19,12(sp)
  806814:	dc800215 	stw	r18,8(sp)
  806818:	dfc00615 	stw	ra,24(sp)
  80681c:	dd400515 	stw	r21,20(sp)
  806820:	dd000415 	stw	r20,16(sp)
  806824:	3825883a 	mov	r18,r7
  806828:	3027883a 	mov	r19,r6
  80682c:	08005980 	call	800598 <__divsi3>
  806830:	00c00044 	movi	r3,1
  806834:	000b883a 	mov	r5,zero
  806838:	1880030e 	bge	r3,r2,806848 <__s2b+0x54>
  80683c:	18c7883a 	add	r3,r3,r3
  806840:	29400044 	addi	r5,r5,1
  806844:	18bffd16 	blt	r3,r2,80683c <__alt_data_end+0xff80683c>
  806848:	8809883a 	mov	r4,r17
  80684c:	08066040 	call	806604 <_Balloc>
  806850:	d8c00717 	ldw	r3,28(sp)
  806854:	10c00515 	stw	r3,20(r2)
  806858:	00c00044 	movi	r3,1
  80685c:	10c00415 	stw	r3,16(r2)
  806860:	00c00244 	movi	r3,9
  806864:	1cc0210e 	bge	r3,r19,8068ec <__s2b+0xf8>
  806868:	80eb883a 	add	r21,r16,r3
  80686c:	a829883a 	mov	r20,r21
  806870:	84e1883a 	add	r16,r16,r19
  806874:	a1c00007 	ldb	r7,0(r20)
  806878:	01800284 	movi	r6,10
  80687c:	a5000044 	addi	r20,r20,1
  806880:	100b883a 	mov	r5,r2
  806884:	39fff404 	addi	r7,r7,-48
  806888:	8809883a 	mov	r4,r17
  80688c:	08066d40 	call	8066d4 <__multadd>
  806890:	a43ff81e 	bne	r20,r16,806874 <__alt_data_end+0xff806874>
  806894:	ace1883a 	add	r16,r21,r19
  806898:	843ffe04 	addi	r16,r16,-8
  80689c:	9c800a0e 	bge	r19,r18,8068c8 <__s2b+0xd4>
  8068a0:	94e5c83a 	sub	r18,r18,r19
  8068a4:	84a5883a 	add	r18,r16,r18
  8068a8:	81c00007 	ldb	r7,0(r16)
  8068ac:	01800284 	movi	r6,10
  8068b0:	84000044 	addi	r16,r16,1
  8068b4:	100b883a 	mov	r5,r2
  8068b8:	39fff404 	addi	r7,r7,-48
  8068bc:	8809883a 	mov	r4,r17
  8068c0:	08066d40 	call	8066d4 <__multadd>
  8068c4:	84bff81e 	bne	r16,r18,8068a8 <__alt_data_end+0xff8068a8>
  8068c8:	dfc00617 	ldw	ra,24(sp)
  8068cc:	dd400517 	ldw	r21,20(sp)
  8068d0:	dd000417 	ldw	r20,16(sp)
  8068d4:	dcc00317 	ldw	r19,12(sp)
  8068d8:	dc800217 	ldw	r18,8(sp)
  8068dc:	dc400117 	ldw	r17,4(sp)
  8068e0:	dc000017 	ldw	r16,0(sp)
  8068e4:	dec00704 	addi	sp,sp,28
  8068e8:	f800283a 	ret
  8068ec:	84000284 	addi	r16,r16,10
  8068f0:	1827883a 	mov	r19,r3
  8068f4:	003fe906 	br	80689c <__alt_data_end+0xff80689c>

008068f8 <__hi0bits>:
  8068f8:	20bfffec 	andhi	r2,r4,65535
  8068fc:	1000141e 	bne	r2,zero,806950 <__hi0bits+0x58>
  806900:	2008943a 	slli	r4,r4,16
  806904:	00800404 	movi	r2,16
  806908:	20ffc02c 	andhi	r3,r4,65280
  80690c:	1800021e 	bne	r3,zero,806918 <__hi0bits+0x20>
  806910:	2008923a 	slli	r4,r4,8
  806914:	10800204 	addi	r2,r2,8
  806918:	20fc002c 	andhi	r3,r4,61440
  80691c:	1800021e 	bne	r3,zero,806928 <__hi0bits+0x30>
  806920:	2008913a 	slli	r4,r4,4
  806924:	10800104 	addi	r2,r2,4
  806928:	20f0002c 	andhi	r3,r4,49152
  80692c:	1800031e 	bne	r3,zero,80693c <__hi0bits+0x44>
  806930:	2109883a 	add	r4,r4,r4
  806934:	10800084 	addi	r2,r2,2
  806938:	2109883a 	add	r4,r4,r4
  80693c:	20000316 	blt	r4,zero,80694c <__hi0bits+0x54>
  806940:	2110002c 	andhi	r4,r4,16384
  806944:	2000041e 	bne	r4,zero,806958 <__hi0bits+0x60>
  806948:	00800804 	movi	r2,32
  80694c:	f800283a 	ret
  806950:	0005883a 	mov	r2,zero
  806954:	003fec06 	br	806908 <__alt_data_end+0xff806908>
  806958:	10800044 	addi	r2,r2,1
  80695c:	f800283a 	ret

00806960 <__lo0bits>:
  806960:	20c00017 	ldw	r3,0(r4)
  806964:	188001cc 	andi	r2,r3,7
  806968:	10000826 	beq	r2,zero,80698c <__lo0bits+0x2c>
  80696c:	1880004c 	andi	r2,r3,1
  806970:	1000211e 	bne	r2,zero,8069f8 <__lo0bits+0x98>
  806974:	1880008c 	andi	r2,r3,2
  806978:	1000211e 	bne	r2,zero,806a00 <__lo0bits+0xa0>
  80697c:	1806d0ba 	srli	r3,r3,2
  806980:	00800084 	movi	r2,2
  806984:	20c00015 	stw	r3,0(r4)
  806988:	f800283a 	ret
  80698c:	18bfffcc 	andi	r2,r3,65535
  806990:	10001326 	beq	r2,zero,8069e0 <__lo0bits+0x80>
  806994:	0005883a 	mov	r2,zero
  806998:	19403fcc 	andi	r5,r3,255
  80699c:	2800021e 	bne	r5,zero,8069a8 <__lo0bits+0x48>
  8069a0:	1806d23a 	srli	r3,r3,8
  8069a4:	10800204 	addi	r2,r2,8
  8069a8:	194003cc 	andi	r5,r3,15
  8069ac:	2800021e 	bne	r5,zero,8069b8 <__lo0bits+0x58>
  8069b0:	1806d13a 	srli	r3,r3,4
  8069b4:	10800104 	addi	r2,r2,4
  8069b8:	194000cc 	andi	r5,r3,3
  8069bc:	2800021e 	bne	r5,zero,8069c8 <__lo0bits+0x68>
  8069c0:	1806d0ba 	srli	r3,r3,2
  8069c4:	10800084 	addi	r2,r2,2
  8069c8:	1940004c 	andi	r5,r3,1
  8069cc:	2800081e 	bne	r5,zero,8069f0 <__lo0bits+0x90>
  8069d0:	1806d07a 	srli	r3,r3,1
  8069d4:	1800051e 	bne	r3,zero,8069ec <__lo0bits+0x8c>
  8069d8:	00800804 	movi	r2,32
  8069dc:	f800283a 	ret
  8069e0:	1806d43a 	srli	r3,r3,16
  8069e4:	00800404 	movi	r2,16
  8069e8:	003feb06 	br	806998 <__alt_data_end+0xff806998>
  8069ec:	10800044 	addi	r2,r2,1
  8069f0:	20c00015 	stw	r3,0(r4)
  8069f4:	f800283a 	ret
  8069f8:	0005883a 	mov	r2,zero
  8069fc:	f800283a 	ret
  806a00:	1806d07a 	srli	r3,r3,1
  806a04:	00800044 	movi	r2,1
  806a08:	20c00015 	stw	r3,0(r4)
  806a0c:	f800283a 	ret

00806a10 <__i2b>:
  806a10:	defffd04 	addi	sp,sp,-12
  806a14:	dc000015 	stw	r16,0(sp)
  806a18:	04000044 	movi	r16,1
  806a1c:	dc400115 	stw	r17,4(sp)
  806a20:	2823883a 	mov	r17,r5
  806a24:	800b883a 	mov	r5,r16
  806a28:	dfc00215 	stw	ra,8(sp)
  806a2c:	08066040 	call	806604 <_Balloc>
  806a30:	14400515 	stw	r17,20(r2)
  806a34:	14000415 	stw	r16,16(r2)
  806a38:	dfc00217 	ldw	ra,8(sp)
  806a3c:	dc400117 	ldw	r17,4(sp)
  806a40:	dc000017 	ldw	r16,0(sp)
  806a44:	dec00304 	addi	sp,sp,12
  806a48:	f800283a 	ret

00806a4c <__multiply>:
  806a4c:	defffa04 	addi	sp,sp,-24
  806a50:	dcc00315 	stw	r19,12(sp)
  806a54:	dc800215 	stw	r18,8(sp)
  806a58:	34c00417 	ldw	r19,16(r6)
  806a5c:	2c800417 	ldw	r18,16(r5)
  806a60:	dd000415 	stw	r20,16(sp)
  806a64:	dc400115 	stw	r17,4(sp)
  806a68:	dfc00515 	stw	ra,20(sp)
  806a6c:	dc000015 	stw	r16,0(sp)
  806a70:	2829883a 	mov	r20,r5
  806a74:	3023883a 	mov	r17,r6
  806a78:	94c0050e 	bge	r18,r19,806a90 <__multiply+0x44>
  806a7c:	9007883a 	mov	r3,r18
  806a80:	3029883a 	mov	r20,r6
  806a84:	9825883a 	mov	r18,r19
  806a88:	2823883a 	mov	r17,r5
  806a8c:	1827883a 	mov	r19,r3
  806a90:	a0800217 	ldw	r2,8(r20)
  806a94:	94e1883a 	add	r16,r18,r19
  806a98:	a1400117 	ldw	r5,4(r20)
  806a9c:	1400010e 	bge	r2,r16,806aa4 <__multiply+0x58>
  806aa0:	29400044 	addi	r5,r5,1
  806aa4:	08066040 	call	806604 <_Balloc>
  806aa8:	8415883a 	add	r10,r16,r16
  806aac:	12c00504 	addi	r11,r2,20
  806ab0:	5295883a 	add	r10,r10,r10
  806ab4:	5a95883a 	add	r10,r11,r10
  806ab8:	5807883a 	mov	r3,r11
  806abc:	5a80032e 	bgeu	r11,r10,806acc <__multiply+0x80>
  806ac0:	18000015 	stw	zero,0(r3)
  806ac4:	18c00104 	addi	r3,r3,4
  806ac8:	1abffd36 	bltu	r3,r10,806ac0 <__alt_data_end+0xff806ac0>
  806acc:	9ce7883a 	add	r19,r19,r19
  806ad0:	94a5883a 	add	r18,r18,r18
  806ad4:	89800504 	addi	r6,r17,20
  806ad8:	9ce7883a 	add	r19,r19,r19
  806adc:	a3400504 	addi	r13,r20,20
  806ae0:	94a5883a 	add	r18,r18,r18
  806ae4:	34d9883a 	add	r12,r6,r19
  806ae8:	6c93883a 	add	r9,r13,r18
  806aec:	3300422e 	bgeu	r6,r12,806bf8 <__multiply+0x1ac>
  806af0:	37c00017 	ldw	ra,0(r6)
  806af4:	fbffffcc 	andi	r15,ra,65535
  806af8:	78001b26 	beq	r15,zero,806b68 <__multiply+0x11c>
  806afc:	5811883a 	mov	r8,r11
  806b00:	681d883a 	mov	r14,r13
  806b04:	000f883a 	mov	r7,zero
  806b08:	71000017 	ldw	r4,0(r14)
  806b0c:	40c00017 	ldw	r3,0(r8)
  806b10:	73800104 	addi	r14,r14,4
  806b14:	217fffcc 	andi	r5,r4,65535
  806b18:	2bcb383a 	mul	r5,r5,r15
  806b1c:	2008d43a 	srli	r4,r4,16
  806b20:	1c7fffcc 	andi	r17,r3,65535
  806b24:	2c4b883a 	add	r5,r5,r17
  806b28:	29cb883a 	add	r5,r5,r7
  806b2c:	23c9383a 	mul	r4,r4,r15
  806b30:	1806d43a 	srli	r3,r3,16
  806b34:	280ed43a 	srli	r7,r5,16
  806b38:	297fffcc 	andi	r5,r5,65535
  806b3c:	20c7883a 	add	r3,r4,r3
  806b40:	19c7883a 	add	r3,r3,r7
  806b44:	1808943a 	slli	r4,r3,16
  806b48:	4023883a 	mov	r17,r8
  806b4c:	180ed43a 	srli	r7,r3,16
  806b50:	214ab03a 	or	r5,r4,r5
  806b54:	41400015 	stw	r5,0(r8)
  806b58:	42000104 	addi	r8,r8,4
  806b5c:	727fea36 	bltu	r14,r9,806b08 <__alt_data_end+0xff806b08>
  806b60:	89c00115 	stw	r7,4(r17)
  806b64:	37c00017 	ldw	ra,0(r6)
  806b68:	f83ed43a 	srli	ra,ra,16
  806b6c:	f8001f26 	beq	ra,zero,806bec <__multiply+0x1a0>
  806b70:	58c00017 	ldw	r3,0(r11)
  806b74:	681d883a 	mov	r14,r13
  806b78:	581f883a 	mov	r15,r11
  806b7c:	1811883a 	mov	r8,r3
  806b80:	5825883a 	mov	r18,r11
  806b84:	000f883a 	mov	r7,zero
  806b88:	00000106 	br	806b90 <__multiply+0x144>
  806b8c:	8825883a 	mov	r18,r17
  806b90:	7140000b 	ldhu	r5,0(r14)
  806b94:	4010d43a 	srli	r8,r8,16
  806b98:	193fffcc 	andi	r4,r3,65535
  806b9c:	2fcb383a 	mul	r5,r5,ra
  806ba0:	7bc00104 	addi	r15,r15,4
  806ba4:	73800104 	addi	r14,r14,4
  806ba8:	2a0b883a 	add	r5,r5,r8
  806bac:	29cb883a 	add	r5,r5,r7
  806bb0:	2806943a 	slli	r3,r5,16
  806bb4:	94400104 	addi	r17,r18,4
  806bb8:	280ad43a 	srli	r5,r5,16
  806bbc:	1908b03a 	or	r4,r3,r4
  806bc0:	793fff15 	stw	r4,-4(r15)
  806bc4:	70ffff17 	ldw	r3,-4(r14)
  806bc8:	8a000017 	ldw	r8,0(r17)
  806bcc:	1806d43a 	srli	r3,r3,16
  806bd0:	413fffcc 	andi	r4,r8,65535
  806bd4:	1fc7383a 	mul	r3,r3,ra
  806bd8:	1907883a 	add	r3,r3,r4
  806bdc:	1947883a 	add	r3,r3,r5
  806be0:	180ed43a 	srli	r7,r3,16
  806be4:	727fe936 	bltu	r14,r9,806b8c <__alt_data_end+0xff806b8c>
  806be8:	90c00115 	stw	r3,4(r18)
  806bec:	31800104 	addi	r6,r6,4
  806bf0:	5ac00104 	addi	r11,r11,4
  806bf4:	333fbe36 	bltu	r6,r12,806af0 <__alt_data_end+0xff806af0>
  806bf8:	0400090e 	bge	zero,r16,806c20 <__multiply+0x1d4>
  806bfc:	50ffff17 	ldw	r3,-4(r10)
  806c00:	52bfff04 	addi	r10,r10,-4
  806c04:	18000326 	beq	r3,zero,806c14 <__multiply+0x1c8>
  806c08:	00000506 	br	806c20 <__multiply+0x1d4>
  806c0c:	50c00017 	ldw	r3,0(r10)
  806c10:	1800031e 	bne	r3,zero,806c20 <__multiply+0x1d4>
  806c14:	843fffc4 	addi	r16,r16,-1
  806c18:	52bfff04 	addi	r10,r10,-4
  806c1c:	803ffb1e 	bne	r16,zero,806c0c <__alt_data_end+0xff806c0c>
  806c20:	14000415 	stw	r16,16(r2)
  806c24:	dfc00517 	ldw	ra,20(sp)
  806c28:	dd000417 	ldw	r20,16(sp)
  806c2c:	dcc00317 	ldw	r19,12(sp)
  806c30:	dc800217 	ldw	r18,8(sp)
  806c34:	dc400117 	ldw	r17,4(sp)
  806c38:	dc000017 	ldw	r16,0(sp)
  806c3c:	dec00604 	addi	sp,sp,24
  806c40:	f800283a 	ret

00806c44 <__pow5mult>:
  806c44:	defffa04 	addi	sp,sp,-24
  806c48:	dcc00315 	stw	r19,12(sp)
  806c4c:	dc000015 	stw	r16,0(sp)
  806c50:	dfc00515 	stw	ra,20(sp)
  806c54:	dd000415 	stw	r20,16(sp)
  806c58:	dc800215 	stw	r18,8(sp)
  806c5c:	dc400115 	stw	r17,4(sp)
  806c60:	308000cc 	andi	r2,r6,3
  806c64:	3021883a 	mov	r16,r6
  806c68:	2027883a 	mov	r19,r4
  806c6c:	10002f1e 	bne	r2,zero,806d2c <__pow5mult+0xe8>
  806c70:	2825883a 	mov	r18,r5
  806c74:	8021d0ba 	srai	r16,r16,2
  806c78:	80001a26 	beq	r16,zero,806ce4 <__pow5mult+0xa0>
  806c7c:	9c401217 	ldw	r17,72(r19)
  806c80:	8800061e 	bne	r17,zero,806c9c <__pow5mult+0x58>
  806c84:	00003406 	br	806d58 <__pow5mult+0x114>
  806c88:	8021d07a 	srai	r16,r16,1
  806c8c:	80001526 	beq	r16,zero,806ce4 <__pow5mult+0xa0>
  806c90:	88800017 	ldw	r2,0(r17)
  806c94:	10001c26 	beq	r2,zero,806d08 <__pow5mult+0xc4>
  806c98:	1023883a 	mov	r17,r2
  806c9c:	8080004c 	andi	r2,r16,1
  806ca0:	103ff926 	beq	r2,zero,806c88 <__alt_data_end+0xff806c88>
  806ca4:	880d883a 	mov	r6,r17
  806ca8:	900b883a 	mov	r5,r18
  806cac:	9809883a 	mov	r4,r19
  806cb0:	0806a4c0 	call	806a4c <__multiply>
  806cb4:	90001b26 	beq	r18,zero,806d24 <__pow5mult+0xe0>
  806cb8:	91000117 	ldw	r4,4(r18)
  806cbc:	98c01317 	ldw	r3,76(r19)
  806cc0:	8021d07a 	srai	r16,r16,1
  806cc4:	2109883a 	add	r4,r4,r4
  806cc8:	2109883a 	add	r4,r4,r4
  806ccc:	1907883a 	add	r3,r3,r4
  806cd0:	19000017 	ldw	r4,0(r3)
  806cd4:	91000015 	stw	r4,0(r18)
  806cd8:	1c800015 	stw	r18,0(r3)
  806cdc:	1025883a 	mov	r18,r2
  806ce0:	803feb1e 	bne	r16,zero,806c90 <__alt_data_end+0xff806c90>
  806ce4:	9005883a 	mov	r2,r18
  806ce8:	dfc00517 	ldw	ra,20(sp)
  806cec:	dd000417 	ldw	r20,16(sp)
  806cf0:	dcc00317 	ldw	r19,12(sp)
  806cf4:	dc800217 	ldw	r18,8(sp)
  806cf8:	dc400117 	ldw	r17,4(sp)
  806cfc:	dc000017 	ldw	r16,0(sp)
  806d00:	dec00604 	addi	sp,sp,24
  806d04:	f800283a 	ret
  806d08:	880d883a 	mov	r6,r17
  806d0c:	880b883a 	mov	r5,r17
  806d10:	9809883a 	mov	r4,r19
  806d14:	0806a4c0 	call	806a4c <__multiply>
  806d18:	88800015 	stw	r2,0(r17)
  806d1c:	10000015 	stw	zero,0(r2)
  806d20:	003fdd06 	br	806c98 <__alt_data_end+0xff806c98>
  806d24:	1025883a 	mov	r18,r2
  806d28:	003fd706 	br	806c88 <__alt_data_end+0xff806c88>
  806d2c:	10bfffc4 	addi	r2,r2,-1
  806d30:	1085883a 	add	r2,r2,r2
  806d34:	00c02074 	movhi	r3,129
  806d38:	18fe9104 	addi	r3,r3,-1468
  806d3c:	1085883a 	add	r2,r2,r2
  806d40:	1885883a 	add	r2,r3,r2
  806d44:	11800017 	ldw	r6,0(r2)
  806d48:	000f883a 	mov	r7,zero
  806d4c:	08066d40 	call	8066d4 <__multadd>
  806d50:	1025883a 	mov	r18,r2
  806d54:	003fc706 	br	806c74 <__alt_data_end+0xff806c74>
  806d58:	05000044 	movi	r20,1
  806d5c:	a00b883a 	mov	r5,r20
  806d60:	9809883a 	mov	r4,r19
  806d64:	08066040 	call	806604 <_Balloc>
  806d68:	1023883a 	mov	r17,r2
  806d6c:	00809c44 	movi	r2,625
  806d70:	88800515 	stw	r2,20(r17)
  806d74:	8d000415 	stw	r20,16(r17)
  806d78:	9c401215 	stw	r17,72(r19)
  806d7c:	88000015 	stw	zero,0(r17)
  806d80:	003fc606 	br	806c9c <__alt_data_end+0xff806c9c>

00806d84 <__lshift>:
  806d84:	defff904 	addi	sp,sp,-28
  806d88:	dd400515 	stw	r21,20(sp)
  806d8c:	dcc00315 	stw	r19,12(sp)
  806d90:	302bd17a 	srai	r21,r6,5
  806d94:	2cc00417 	ldw	r19,16(r5)
  806d98:	28800217 	ldw	r2,8(r5)
  806d9c:	dd000415 	stw	r20,16(sp)
  806da0:	ace7883a 	add	r19,r21,r19
  806da4:	dc800215 	stw	r18,8(sp)
  806da8:	dc400115 	stw	r17,4(sp)
  806dac:	dc000015 	stw	r16,0(sp)
  806db0:	dfc00615 	stw	ra,24(sp)
  806db4:	9c000044 	addi	r16,r19,1
  806db8:	2823883a 	mov	r17,r5
  806dbc:	3029883a 	mov	r20,r6
  806dc0:	2025883a 	mov	r18,r4
  806dc4:	29400117 	ldw	r5,4(r5)
  806dc8:	1400030e 	bge	r2,r16,806dd8 <__lshift+0x54>
  806dcc:	1085883a 	add	r2,r2,r2
  806dd0:	29400044 	addi	r5,r5,1
  806dd4:	143ffd16 	blt	r2,r16,806dcc <__alt_data_end+0xff806dcc>
  806dd8:	9009883a 	mov	r4,r18
  806ddc:	08066040 	call	806604 <_Balloc>
  806de0:	10c00504 	addi	r3,r2,20
  806de4:	0540070e 	bge	zero,r21,806e04 <__lshift+0x80>
  806de8:	ad6b883a 	add	r21,r21,r21
  806dec:	ad6b883a 	add	r21,r21,r21
  806df0:	1809883a 	mov	r4,r3
  806df4:	1d47883a 	add	r3,r3,r21
  806df8:	20000015 	stw	zero,0(r4)
  806dfc:	21000104 	addi	r4,r4,4
  806e00:	193ffd1e 	bne	r3,r4,806df8 <__alt_data_end+0xff806df8>
  806e04:	8a000417 	ldw	r8,16(r17)
  806e08:	89000504 	addi	r4,r17,20
  806e0c:	a18007cc 	andi	r6,r20,31
  806e10:	4211883a 	add	r8,r8,r8
  806e14:	4211883a 	add	r8,r8,r8
  806e18:	2211883a 	add	r8,r4,r8
  806e1c:	30002326 	beq	r6,zero,806eac <__lshift+0x128>
  806e20:	02400804 	movi	r9,32
  806e24:	4993c83a 	sub	r9,r9,r6
  806e28:	000b883a 	mov	r5,zero
  806e2c:	21c00017 	ldw	r7,0(r4)
  806e30:	1815883a 	mov	r10,r3
  806e34:	18c00104 	addi	r3,r3,4
  806e38:	398e983a 	sll	r7,r7,r6
  806e3c:	21000104 	addi	r4,r4,4
  806e40:	394ab03a 	or	r5,r7,r5
  806e44:	197fff15 	stw	r5,-4(r3)
  806e48:	217fff17 	ldw	r5,-4(r4)
  806e4c:	2a4ad83a 	srl	r5,r5,r9
  806e50:	223ff636 	bltu	r4,r8,806e2c <__alt_data_end+0xff806e2c>
  806e54:	51400115 	stw	r5,4(r10)
  806e58:	28001a1e 	bne	r5,zero,806ec4 <__lshift+0x140>
  806e5c:	843fffc4 	addi	r16,r16,-1
  806e60:	14000415 	stw	r16,16(r2)
  806e64:	88000826 	beq	r17,zero,806e88 <__lshift+0x104>
  806e68:	89000117 	ldw	r4,4(r17)
  806e6c:	90c01317 	ldw	r3,76(r18)
  806e70:	2109883a 	add	r4,r4,r4
  806e74:	2109883a 	add	r4,r4,r4
  806e78:	1907883a 	add	r3,r3,r4
  806e7c:	19000017 	ldw	r4,0(r3)
  806e80:	89000015 	stw	r4,0(r17)
  806e84:	1c400015 	stw	r17,0(r3)
  806e88:	dfc00617 	ldw	ra,24(sp)
  806e8c:	dd400517 	ldw	r21,20(sp)
  806e90:	dd000417 	ldw	r20,16(sp)
  806e94:	dcc00317 	ldw	r19,12(sp)
  806e98:	dc800217 	ldw	r18,8(sp)
  806e9c:	dc400117 	ldw	r17,4(sp)
  806ea0:	dc000017 	ldw	r16,0(sp)
  806ea4:	dec00704 	addi	sp,sp,28
  806ea8:	f800283a 	ret
  806eac:	21400017 	ldw	r5,0(r4)
  806eb0:	18c00104 	addi	r3,r3,4
  806eb4:	21000104 	addi	r4,r4,4
  806eb8:	197fff15 	stw	r5,-4(r3)
  806ebc:	223ffb36 	bltu	r4,r8,806eac <__alt_data_end+0xff806eac>
  806ec0:	003fe606 	br	806e5c <__alt_data_end+0xff806e5c>
  806ec4:	9c000084 	addi	r16,r19,2
  806ec8:	003fe406 	br	806e5c <__alt_data_end+0xff806e5c>

00806ecc <__mcmp>:
  806ecc:	20800417 	ldw	r2,16(r4)
  806ed0:	28c00417 	ldw	r3,16(r5)
  806ed4:	10c5c83a 	sub	r2,r2,r3
  806ed8:	1000111e 	bne	r2,zero,806f20 <__mcmp+0x54>
  806edc:	18c7883a 	add	r3,r3,r3
  806ee0:	18c7883a 	add	r3,r3,r3
  806ee4:	21000504 	addi	r4,r4,20
  806ee8:	29400504 	addi	r5,r5,20
  806eec:	20c5883a 	add	r2,r4,r3
  806ef0:	28cb883a 	add	r5,r5,r3
  806ef4:	00000106 	br	806efc <__mcmp+0x30>
  806ef8:	20800a2e 	bgeu	r4,r2,806f24 <__mcmp+0x58>
  806efc:	10bfff04 	addi	r2,r2,-4
  806f00:	297fff04 	addi	r5,r5,-4
  806f04:	11800017 	ldw	r6,0(r2)
  806f08:	28c00017 	ldw	r3,0(r5)
  806f0c:	30fffa26 	beq	r6,r3,806ef8 <__alt_data_end+0xff806ef8>
  806f10:	30c00236 	bltu	r6,r3,806f1c <__mcmp+0x50>
  806f14:	00800044 	movi	r2,1
  806f18:	f800283a 	ret
  806f1c:	00bfffc4 	movi	r2,-1
  806f20:	f800283a 	ret
  806f24:	0005883a 	mov	r2,zero
  806f28:	f800283a 	ret

00806f2c <__mdiff>:
  806f2c:	28c00417 	ldw	r3,16(r5)
  806f30:	30800417 	ldw	r2,16(r6)
  806f34:	defffa04 	addi	sp,sp,-24
  806f38:	dcc00315 	stw	r19,12(sp)
  806f3c:	dc800215 	stw	r18,8(sp)
  806f40:	dfc00515 	stw	ra,20(sp)
  806f44:	dd000415 	stw	r20,16(sp)
  806f48:	dc400115 	stw	r17,4(sp)
  806f4c:	dc000015 	stw	r16,0(sp)
  806f50:	1887c83a 	sub	r3,r3,r2
  806f54:	2825883a 	mov	r18,r5
  806f58:	3027883a 	mov	r19,r6
  806f5c:	1800141e 	bne	r3,zero,806fb0 <__mdiff+0x84>
  806f60:	1085883a 	add	r2,r2,r2
  806f64:	1085883a 	add	r2,r2,r2
  806f68:	2a000504 	addi	r8,r5,20
  806f6c:	34000504 	addi	r16,r6,20
  806f70:	4087883a 	add	r3,r8,r2
  806f74:	8085883a 	add	r2,r16,r2
  806f78:	00000106 	br	806f80 <__mdiff+0x54>
  806f7c:	40c0592e 	bgeu	r8,r3,8070e4 <__mdiff+0x1b8>
  806f80:	18ffff04 	addi	r3,r3,-4
  806f84:	10bfff04 	addi	r2,r2,-4
  806f88:	19c00017 	ldw	r7,0(r3)
  806f8c:	11400017 	ldw	r5,0(r2)
  806f90:	397ffa26 	beq	r7,r5,806f7c <__alt_data_end+0xff806f7c>
  806f94:	3940592e 	bgeu	r7,r5,8070fc <__mdiff+0x1d0>
  806f98:	9005883a 	mov	r2,r18
  806f9c:	4023883a 	mov	r17,r8
  806fa0:	9825883a 	mov	r18,r19
  806fa4:	05000044 	movi	r20,1
  806fa8:	1027883a 	mov	r19,r2
  806fac:	00000406 	br	806fc0 <__mdiff+0x94>
  806fb0:	18005616 	blt	r3,zero,80710c <__mdiff+0x1e0>
  806fb4:	34400504 	addi	r17,r6,20
  806fb8:	2c000504 	addi	r16,r5,20
  806fbc:	0029883a 	mov	r20,zero
  806fc0:	91400117 	ldw	r5,4(r18)
  806fc4:	08066040 	call	806604 <_Balloc>
  806fc8:	92400417 	ldw	r9,16(r18)
  806fcc:	9b000417 	ldw	r12,16(r19)
  806fd0:	12c00504 	addi	r11,r2,20
  806fd4:	4a51883a 	add	r8,r9,r9
  806fd8:	6319883a 	add	r12,r12,r12
  806fdc:	4211883a 	add	r8,r8,r8
  806fe0:	6319883a 	add	r12,r12,r12
  806fe4:	15000315 	stw	r20,12(r2)
  806fe8:	8211883a 	add	r8,r16,r8
  806fec:	8b19883a 	add	r12,r17,r12
  806ff0:	0007883a 	mov	r3,zero
  806ff4:	81400017 	ldw	r5,0(r16)
  806ff8:	89c00017 	ldw	r7,0(r17)
  806ffc:	59800104 	addi	r6,r11,4
  807000:	293fffcc 	andi	r4,r5,65535
  807004:	20c7883a 	add	r3,r4,r3
  807008:	393fffcc 	andi	r4,r7,65535
  80700c:	1909c83a 	sub	r4,r3,r4
  807010:	280ad43a 	srli	r5,r5,16
  807014:	380ed43a 	srli	r7,r7,16
  807018:	2007d43a 	srai	r3,r4,16
  80701c:	213fffcc 	andi	r4,r4,65535
  807020:	29cbc83a 	sub	r5,r5,r7
  807024:	28c7883a 	add	r3,r5,r3
  807028:	180a943a 	slli	r5,r3,16
  80702c:	8c400104 	addi	r17,r17,4
  807030:	84000104 	addi	r16,r16,4
  807034:	2908b03a 	or	r4,r5,r4
  807038:	59000015 	stw	r4,0(r11)
  80703c:	1807d43a 	srai	r3,r3,16
  807040:	3015883a 	mov	r10,r6
  807044:	3017883a 	mov	r11,r6
  807048:	8b3fea36 	bltu	r17,r12,806ff4 <__alt_data_end+0xff806ff4>
  80704c:	8200162e 	bgeu	r16,r8,8070a8 <__mdiff+0x17c>
  807050:	8017883a 	mov	r11,r16
  807054:	59400017 	ldw	r5,0(r11)
  807058:	31800104 	addi	r6,r6,4
  80705c:	5ac00104 	addi	r11,r11,4
  807060:	293fffcc 	andi	r4,r5,65535
  807064:	20c7883a 	add	r3,r4,r3
  807068:	280ed43a 	srli	r7,r5,16
  80706c:	180bd43a 	srai	r5,r3,16
  807070:	193fffcc 	andi	r4,r3,65535
  807074:	3947883a 	add	r3,r7,r5
  807078:	180a943a 	slli	r5,r3,16
  80707c:	1807d43a 	srai	r3,r3,16
  807080:	2908b03a 	or	r4,r5,r4
  807084:	313fff15 	stw	r4,-4(r6)
  807088:	5a3ff236 	bltu	r11,r8,807054 <__alt_data_end+0xff807054>
  80708c:	0406303a 	nor	r3,zero,r16
  807090:	1a07883a 	add	r3,r3,r8
  807094:	1806d0ba 	srli	r3,r3,2
  807098:	18c00044 	addi	r3,r3,1
  80709c:	18c7883a 	add	r3,r3,r3
  8070a0:	18c7883a 	add	r3,r3,r3
  8070a4:	50d5883a 	add	r10,r10,r3
  8070a8:	50ffff04 	addi	r3,r10,-4
  8070ac:	2000041e 	bne	r4,zero,8070c0 <__mdiff+0x194>
  8070b0:	18ffff04 	addi	r3,r3,-4
  8070b4:	19000017 	ldw	r4,0(r3)
  8070b8:	4a7fffc4 	addi	r9,r9,-1
  8070bc:	203ffc26 	beq	r4,zero,8070b0 <__alt_data_end+0xff8070b0>
  8070c0:	12400415 	stw	r9,16(r2)
  8070c4:	dfc00517 	ldw	ra,20(sp)
  8070c8:	dd000417 	ldw	r20,16(sp)
  8070cc:	dcc00317 	ldw	r19,12(sp)
  8070d0:	dc800217 	ldw	r18,8(sp)
  8070d4:	dc400117 	ldw	r17,4(sp)
  8070d8:	dc000017 	ldw	r16,0(sp)
  8070dc:	dec00604 	addi	sp,sp,24
  8070e0:	f800283a 	ret
  8070e4:	000b883a 	mov	r5,zero
  8070e8:	08066040 	call	806604 <_Balloc>
  8070ec:	00c00044 	movi	r3,1
  8070f0:	10c00415 	stw	r3,16(r2)
  8070f4:	10000515 	stw	zero,20(r2)
  8070f8:	003ff206 	br	8070c4 <__alt_data_end+0xff8070c4>
  8070fc:	8023883a 	mov	r17,r16
  807100:	0029883a 	mov	r20,zero
  807104:	4021883a 	mov	r16,r8
  807108:	003fad06 	br	806fc0 <__alt_data_end+0xff806fc0>
  80710c:	9005883a 	mov	r2,r18
  807110:	94400504 	addi	r17,r18,20
  807114:	9c000504 	addi	r16,r19,20
  807118:	9825883a 	mov	r18,r19
  80711c:	05000044 	movi	r20,1
  807120:	1027883a 	mov	r19,r2
  807124:	003fa606 	br	806fc0 <__alt_data_end+0xff806fc0>

00807128 <__ulp>:
  807128:	295ffc2c 	andhi	r5,r5,32752
  80712c:	00bf3034 	movhi	r2,64704
  807130:	2887883a 	add	r3,r5,r2
  807134:	00c0020e 	bge	zero,r3,807140 <__ulp+0x18>
  807138:	0005883a 	mov	r2,zero
  80713c:	f800283a 	ret
  807140:	00c7c83a 	sub	r3,zero,r3
  807144:	1807d53a 	srai	r3,r3,20
  807148:	008004c4 	movi	r2,19
  80714c:	10c00b0e 	bge	r2,r3,80717c <__ulp+0x54>
  807150:	18bffb04 	addi	r2,r3,-20
  807154:	01000784 	movi	r4,30
  807158:	0007883a 	mov	r3,zero
  80715c:	20800516 	blt	r4,r2,807174 <__ulp+0x4c>
  807160:	010007c4 	movi	r4,31
  807164:	2089c83a 	sub	r4,r4,r2
  807168:	00800044 	movi	r2,1
  80716c:	1104983a 	sll	r2,r2,r4
  807170:	f800283a 	ret
  807174:	00800044 	movi	r2,1
  807178:	f800283a 	ret
  80717c:	01400234 	movhi	r5,8
  807180:	28c7d83a 	sra	r3,r5,r3
  807184:	0005883a 	mov	r2,zero
  807188:	f800283a 	ret

0080718c <__b2d>:
  80718c:	defffa04 	addi	sp,sp,-24
  807190:	dc000015 	stw	r16,0(sp)
  807194:	24000417 	ldw	r16,16(r4)
  807198:	dc400115 	stw	r17,4(sp)
  80719c:	24400504 	addi	r17,r4,20
  8071a0:	8421883a 	add	r16,r16,r16
  8071a4:	8421883a 	add	r16,r16,r16
  8071a8:	8c21883a 	add	r16,r17,r16
  8071ac:	dc800215 	stw	r18,8(sp)
  8071b0:	84bfff17 	ldw	r18,-4(r16)
  8071b4:	dd000415 	stw	r20,16(sp)
  8071b8:	dcc00315 	stw	r19,12(sp)
  8071bc:	9009883a 	mov	r4,r18
  8071c0:	2829883a 	mov	r20,r5
  8071c4:	dfc00515 	stw	ra,20(sp)
  8071c8:	08068f80 	call	8068f8 <__hi0bits>
  8071cc:	00c00804 	movi	r3,32
  8071d0:	1889c83a 	sub	r4,r3,r2
  8071d4:	a1000015 	stw	r4,0(r20)
  8071d8:	01000284 	movi	r4,10
  8071dc:	84ffff04 	addi	r19,r16,-4
  8071e0:	20801216 	blt	r4,r2,80722c <__b2d+0xa0>
  8071e4:	018002c4 	movi	r6,11
  8071e8:	308dc83a 	sub	r6,r6,r2
  8071ec:	9186d83a 	srl	r3,r18,r6
  8071f0:	18cffc34 	orhi	r3,r3,16368
  8071f4:	8cc0212e 	bgeu	r17,r19,80727c <__b2d+0xf0>
  8071f8:	813ffe17 	ldw	r4,-8(r16)
  8071fc:	218cd83a 	srl	r6,r4,r6
  807200:	10800544 	addi	r2,r2,21
  807204:	9084983a 	sll	r2,r18,r2
  807208:	1184b03a 	or	r2,r2,r6
  80720c:	dfc00517 	ldw	ra,20(sp)
  807210:	dd000417 	ldw	r20,16(sp)
  807214:	dcc00317 	ldw	r19,12(sp)
  807218:	dc800217 	ldw	r18,8(sp)
  80721c:	dc400117 	ldw	r17,4(sp)
  807220:	dc000017 	ldw	r16,0(sp)
  807224:	dec00604 	addi	sp,sp,24
  807228:	f800283a 	ret
  80722c:	8cc00f2e 	bgeu	r17,r19,80726c <__b2d+0xe0>
  807230:	117ffd44 	addi	r5,r2,-11
  807234:	80bffe17 	ldw	r2,-8(r16)
  807238:	28000e26 	beq	r5,zero,807274 <__b2d+0xe8>
  80723c:	1949c83a 	sub	r4,r3,r5
  807240:	9164983a 	sll	r18,r18,r5
  807244:	1106d83a 	srl	r3,r2,r4
  807248:	81bffe04 	addi	r6,r16,-8
  80724c:	948ffc34 	orhi	r18,r18,16368
  807250:	90c6b03a 	or	r3,r18,r3
  807254:	89800e2e 	bgeu	r17,r6,807290 <__b2d+0x104>
  807258:	81bffd17 	ldw	r6,-12(r16)
  80725c:	1144983a 	sll	r2,r2,r5
  807260:	310ad83a 	srl	r5,r6,r4
  807264:	2884b03a 	or	r2,r5,r2
  807268:	003fe806 	br	80720c <__alt_data_end+0xff80720c>
  80726c:	10bffd44 	addi	r2,r2,-11
  807270:	1000041e 	bne	r2,zero,807284 <__b2d+0xf8>
  807274:	90cffc34 	orhi	r3,r18,16368
  807278:	003fe406 	br	80720c <__alt_data_end+0xff80720c>
  80727c:	000d883a 	mov	r6,zero
  807280:	003fdf06 	br	807200 <__alt_data_end+0xff807200>
  807284:	90a4983a 	sll	r18,r18,r2
  807288:	0005883a 	mov	r2,zero
  80728c:	003ff906 	br	807274 <__alt_data_end+0xff807274>
  807290:	1144983a 	sll	r2,r2,r5
  807294:	003fdd06 	br	80720c <__alt_data_end+0xff80720c>

00807298 <__d2b>:
  807298:	defff804 	addi	sp,sp,-32
  80729c:	dc000215 	stw	r16,8(sp)
  8072a0:	3021883a 	mov	r16,r6
  8072a4:	dc400315 	stw	r17,12(sp)
  8072a8:	8022907a 	slli	r17,r16,1
  8072ac:	dd000615 	stw	r20,24(sp)
  8072b0:	2829883a 	mov	r20,r5
  8072b4:	01400044 	movi	r5,1
  8072b8:	dcc00515 	stw	r19,20(sp)
  8072bc:	dc800415 	stw	r18,16(sp)
  8072c0:	dfc00715 	stw	ra,28(sp)
  8072c4:	3825883a 	mov	r18,r7
  8072c8:	8822d57a 	srli	r17,r17,21
  8072cc:	08066040 	call	806604 <_Balloc>
  8072d0:	1027883a 	mov	r19,r2
  8072d4:	00800434 	movhi	r2,16
  8072d8:	10bfffc4 	addi	r2,r2,-1
  8072dc:	808c703a 	and	r6,r16,r2
  8072e0:	88000126 	beq	r17,zero,8072e8 <__d2b+0x50>
  8072e4:	31800434 	orhi	r6,r6,16
  8072e8:	d9800015 	stw	r6,0(sp)
  8072ec:	a0002426 	beq	r20,zero,807380 <__d2b+0xe8>
  8072f0:	d9000104 	addi	r4,sp,4
  8072f4:	dd000115 	stw	r20,4(sp)
  8072f8:	08069600 	call	806960 <__lo0bits>
  8072fc:	d8c00017 	ldw	r3,0(sp)
  807300:	10002f1e 	bne	r2,zero,8073c0 <__d2b+0x128>
  807304:	d9000117 	ldw	r4,4(sp)
  807308:	99000515 	stw	r4,20(r19)
  80730c:	1821003a 	cmpeq	r16,r3,zero
  807310:	01000084 	movi	r4,2
  807314:	2421c83a 	sub	r16,r4,r16
  807318:	98c00615 	stw	r3,24(r19)
  80731c:	9c000415 	stw	r16,16(r19)
  807320:	88001f1e 	bne	r17,zero,8073a0 <__d2b+0x108>
  807324:	10bef384 	addi	r2,r2,-1074
  807328:	90800015 	stw	r2,0(r18)
  80732c:	00900034 	movhi	r2,16384
  807330:	10bfffc4 	addi	r2,r2,-1
  807334:	8085883a 	add	r2,r16,r2
  807338:	1085883a 	add	r2,r2,r2
  80733c:	1085883a 	add	r2,r2,r2
  807340:	9885883a 	add	r2,r19,r2
  807344:	11000517 	ldw	r4,20(r2)
  807348:	8020917a 	slli	r16,r16,5
  80734c:	08068f80 	call	8068f8 <__hi0bits>
  807350:	d8c00817 	ldw	r3,32(sp)
  807354:	8085c83a 	sub	r2,r16,r2
  807358:	18800015 	stw	r2,0(r3)
  80735c:	9805883a 	mov	r2,r19
  807360:	dfc00717 	ldw	ra,28(sp)
  807364:	dd000617 	ldw	r20,24(sp)
  807368:	dcc00517 	ldw	r19,20(sp)
  80736c:	dc800417 	ldw	r18,16(sp)
  807370:	dc400317 	ldw	r17,12(sp)
  807374:	dc000217 	ldw	r16,8(sp)
  807378:	dec00804 	addi	sp,sp,32
  80737c:	f800283a 	ret
  807380:	d809883a 	mov	r4,sp
  807384:	08069600 	call	806960 <__lo0bits>
  807388:	d8c00017 	ldw	r3,0(sp)
  80738c:	04000044 	movi	r16,1
  807390:	9c000415 	stw	r16,16(r19)
  807394:	98c00515 	stw	r3,20(r19)
  807398:	10800804 	addi	r2,r2,32
  80739c:	883fe126 	beq	r17,zero,807324 <__alt_data_end+0xff807324>
  8073a0:	00c00d44 	movi	r3,53
  8073a4:	8c7ef344 	addi	r17,r17,-1075
  8073a8:	88a3883a 	add	r17,r17,r2
  8073ac:	1885c83a 	sub	r2,r3,r2
  8073b0:	d8c00817 	ldw	r3,32(sp)
  8073b4:	94400015 	stw	r17,0(r18)
  8073b8:	18800015 	stw	r2,0(r3)
  8073bc:	003fe706 	br	80735c <__alt_data_end+0xff80735c>
  8073c0:	01000804 	movi	r4,32
  8073c4:	2089c83a 	sub	r4,r4,r2
  8073c8:	1908983a 	sll	r4,r3,r4
  8073cc:	d9400117 	ldw	r5,4(sp)
  8073d0:	1886d83a 	srl	r3,r3,r2
  8073d4:	2148b03a 	or	r4,r4,r5
  8073d8:	99000515 	stw	r4,20(r19)
  8073dc:	d8c00015 	stw	r3,0(sp)
  8073e0:	003fca06 	br	80730c <__alt_data_end+0xff80730c>

008073e4 <__ratio>:
  8073e4:	defff904 	addi	sp,sp,-28
  8073e8:	dc400315 	stw	r17,12(sp)
  8073ec:	2823883a 	mov	r17,r5
  8073f0:	d9400104 	addi	r5,sp,4
  8073f4:	dfc00615 	stw	ra,24(sp)
  8073f8:	dcc00515 	stw	r19,20(sp)
  8073fc:	dc800415 	stw	r18,16(sp)
  807400:	2027883a 	mov	r19,r4
  807404:	dc000215 	stw	r16,8(sp)
  807408:	080718c0 	call	80718c <__b2d>
  80740c:	d80b883a 	mov	r5,sp
  807410:	8809883a 	mov	r4,r17
  807414:	1025883a 	mov	r18,r2
  807418:	1821883a 	mov	r16,r3
  80741c:	080718c0 	call	80718c <__b2d>
  807420:	8a000417 	ldw	r8,16(r17)
  807424:	99000417 	ldw	r4,16(r19)
  807428:	d9400117 	ldw	r5,4(sp)
  80742c:	2209c83a 	sub	r4,r4,r8
  807430:	2010917a 	slli	r8,r4,5
  807434:	d9000017 	ldw	r4,0(sp)
  807438:	2909c83a 	sub	r4,r5,r4
  80743c:	4109883a 	add	r4,r8,r4
  807440:	01000e0e 	bge	zero,r4,80747c <__ratio+0x98>
  807444:	2008953a 	slli	r4,r4,20
  807448:	2421883a 	add	r16,r4,r16
  80744c:	100d883a 	mov	r6,r2
  807450:	180f883a 	mov	r7,r3
  807454:	9009883a 	mov	r4,r18
  807458:	800b883a 	mov	r5,r16
  80745c:	080b2840 	call	80b284 <__divdf3>
  807460:	dfc00617 	ldw	ra,24(sp)
  807464:	dcc00517 	ldw	r19,20(sp)
  807468:	dc800417 	ldw	r18,16(sp)
  80746c:	dc400317 	ldw	r17,12(sp)
  807470:	dc000217 	ldw	r16,8(sp)
  807474:	dec00704 	addi	sp,sp,28
  807478:	f800283a 	ret
  80747c:	2008953a 	slli	r4,r4,20
  807480:	1907c83a 	sub	r3,r3,r4
  807484:	003ff106 	br	80744c <__alt_data_end+0xff80744c>

00807488 <_mprec_log10>:
  807488:	defffe04 	addi	sp,sp,-8
  80748c:	dc000015 	stw	r16,0(sp)
  807490:	dfc00115 	stw	ra,4(sp)
  807494:	008005c4 	movi	r2,23
  807498:	2021883a 	mov	r16,r4
  80749c:	11000d0e 	bge	r2,r4,8074d4 <_mprec_log10+0x4c>
  8074a0:	0005883a 	mov	r2,zero
  8074a4:	00cffc34 	movhi	r3,16368
  8074a8:	843fffc4 	addi	r16,r16,-1
  8074ac:	000d883a 	mov	r6,zero
  8074b0:	01d00934 	movhi	r7,16420
  8074b4:	1009883a 	mov	r4,r2
  8074b8:	180b883a 	mov	r5,r3
  8074bc:	080bdc40 	call	80bdc4 <__muldf3>
  8074c0:	803ff91e 	bne	r16,zero,8074a8 <__alt_data_end+0xff8074a8>
  8074c4:	dfc00117 	ldw	ra,4(sp)
  8074c8:	dc000017 	ldw	r16,0(sp)
  8074cc:	dec00204 	addi	sp,sp,8
  8074d0:	f800283a 	ret
  8074d4:	202090fa 	slli	r16,r4,3
  8074d8:	00802074 	movhi	r2,129
  8074dc:	10bea804 	addi	r2,r2,-1376
  8074e0:	1421883a 	add	r16,r2,r16
  8074e4:	80800017 	ldw	r2,0(r16)
  8074e8:	80c00117 	ldw	r3,4(r16)
  8074ec:	dfc00117 	ldw	ra,4(sp)
  8074f0:	dc000017 	ldw	r16,0(sp)
  8074f4:	dec00204 	addi	sp,sp,8
  8074f8:	f800283a 	ret

008074fc <__copybits>:
  8074fc:	297fffc4 	addi	r5,r5,-1
  807500:	280fd17a 	srai	r7,r5,5
  807504:	30c00417 	ldw	r3,16(r6)
  807508:	30800504 	addi	r2,r6,20
  80750c:	39c00044 	addi	r7,r7,1
  807510:	18c7883a 	add	r3,r3,r3
  807514:	39cf883a 	add	r7,r7,r7
  807518:	18c7883a 	add	r3,r3,r3
  80751c:	39cf883a 	add	r7,r7,r7
  807520:	10c7883a 	add	r3,r2,r3
  807524:	21cf883a 	add	r7,r4,r7
  807528:	10c00d2e 	bgeu	r2,r3,807560 <__copybits+0x64>
  80752c:	200b883a 	mov	r5,r4
  807530:	12000017 	ldw	r8,0(r2)
  807534:	29400104 	addi	r5,r5,4
  807538:	10800104 	addi	r2,r2,4
  80753c:	2a3fff15 	stw	r8,-4(r5)
  807540:	10fffb36 	bltu	r2,r3,807530 <__alt_data_end+0xff807530>
  807544:	1985c83a 	sub	r2,r3,r6
  807548:	10bffac4 	addi	r2,r2,-21
  80754c:	1004d0ba 	srli	r2,r2,2
  807550:	10800044 	addi	r2,r2,1
  807554:	1085883a 	add	r2,r2,r2
  807558:	1085883a 	add	r2,r2,r2
  80755c:	2089883a 	add	r4,r4,r2
  807560:	21c0032e 	bgeu	r4,r7,807570 <__copybits+0x74>
  807564:	20000015 	stw	zero,0(r4)
  807568:	21000104 	addi	r4,r4,4
  80756c:	21fffd36 	bltu	r4,r7,807564 <__alt_data_end+0xff807564>
  807570:	f800283a 	ret

00807574 <__any_on>:
  807574:	20c00417 	ldw	r3,16(r4)
  807578:	2805d17a 	srai	r2,r5,5
  80757c:	21000504 	addi	r4,r4,20
  807580:	18800d0e 	bge	r3,r2,8075b8 <__any_on+0x44>
  807584:	18c7883a 	add	r3,r3,r3
  807588:	18c7883a 	add	r3,r3,r3
  80758c:	20c7883a 	add	r3,r4,r3
  807590:	20c0192e 	bgeu	r4,r3,8075f8 <__any_on+0x84>
  807594:	18bfff17 	ldw	r2,-4(r3)
  807598:	18ffff04 	addi	r3,r3,-4
  80759c:	1000041e 	bne	r2,zero,8075b0 <__any_on+0x3c>
  8075a0:	20c0142e 	bgeu	r4,r3,8075f4 <__any_on+0x80>
  8075a4:	18ffff04 	addi	r3,r3,-4
  8075a8:	19400017 	ldw	r5,0(r3)
  8075ac:	283ffc26 	beq	r5,zero,8075a0 <__alt_data_end+0xff8075a0>
  8075b0:	00800044 	movi	r2,1
  8075b4:	f800283a 	ret
  8075b8:	10c00a0e 	bge	r2,r3,8075e4 <__any_on+0x70>
  8075bc:	1085883a 	add	r2,r2,r2
  8075c0:	1085883a 	add	r2,r2,r2
  8075c4:	294007cc 	andi	r5,r5,31
  8075c8:	2087883a 	add	r3,r4,r2
  8075cc:	283ff026 	beq	r5,zero,807590 <__alt_data_end+0xff807590>
  8075d0:	19800017 	ldw	r6,0(r3)
  8075d4:	3144d83a 	srl	r2,r6,r5
  8075d8:	114a983a 	sll	r5,r2,r5
  8075dc:	317ff41e 	bne	r6,r5,8075b0 <__alt_data_end+0xff8075b0>
  8075e0:	003feb06 	br	807590 <__alt_data_end+0xff807590>
  8075e4:	1085883a 	add	r2,r2,r2
  8075e8:	1085883a 	add	r2,r2,r2
  8075ec:	2087883a 	add	r3,r4,r2
  8075f0:	003fe706 	br	807590 <__alt_data_end+0xff807590>
  8075f4:	f800283a 	ret
  8075f8:	0005883a 	mov	r2,zero
  8075fc:	f800283a 	ret

00807600 <_putc_r>:
  807600:	defffc04 	addi	sp,sp,-16
  807604:	dc000215 	stw	r16,8(sp)
  807608:	dfc00315 	stw	ra,12(sp)
  80760c:	2021883a 	mov	r16,r4
  807610:	20000226 	beq	r4,zero,80761c <_putc_r+0x1c>
  807614:	20800e17 	ldw	r2,56(r4)
  807618:	10001b26 	beq	r2,zero,807688 <_putc_r+0x88>
  80761c:	30800217 	ldw	r2,8(r6)
  807620:	10bfffc4 	addi	r2,r2,-1
  807624:	30800215 	stw	r2,8(r6)
  807628:	10000a16 	blt	r2,zero,807654 <_putc_r+0x54>
  80762c:	30800017 	ldw	r2,0(r6)
  807630:	11400005 	stb	r5,0(r2)
  807634:	30800017 	ldw	r2,0(r6)
  807638:	10c00044 	addi	r3,r2,1
  80763c:	30c00015 	stw	r3,0(r6)
  807640:	10800003 	ldbu	r2,0(r2)
  807644:	dfc00317 	ldw	ra,12(sp)
  807648:	dc000217 	ldw	r16,8(sp)
  80764c:	dec00404 	addi	sp,sp,16
  807650:	f800283a 	ret
  807654:	30c00617 	ldw	r3,24(r6)
  807658:	10c00616 	blt	r2,r3,807674 <_putc_r+0x74>
  80765c:	30800017 	ldw	r2,0(r6)
  807660:	00c00284 	movi	r3,10
  807664:	11400005 	stb	r5,0(r2)
  807668:	30800017 	ldw	r2,0(r6)
  80766c:	11400003 	ldbu	r5,0(r2)
  807670:	28fff11e 	bne	r5,r3,807638 <__alt_data_end+0xff807638>
  807674:	8009883a 	mov	r4,r16
  807678:	dfc00317 	ldw	ra,12(sp)
  80767c:	dc000217 	ldw	r16,8(sp)
  807680:	dec00404 	addi	sp,sp,16
  807684:	08095f41 	jmpi	8095f4 <__swbuf_r>
  807688:	d9400015 	stw	r5,0(sp)
  80768c:	d9800115 	stw	r6,4(sp)
  807690:	0804be80 	call	804be8 <__sinit>
  807694:	d9800117 	ldw	r6,4(sp)
  807698:	d9400017 	ldw	r5,0(sp)
  80769c:	003fdf06 	br	80761c <__alt_data_end+0xff80761c>

008076a0 <putc>:
  8076a0:	00802074 	movhi	r2,129
  8076a4:	defffc04 	addi	sp,sp,-16
  8076a8:	1085d904 	addi	r2,r2,5988
  8076ac:	dc000115 	stw	r16,4(sp)
  8076b0:	14000017 	ldw	r16,0(r2)
  8076b4:	dc400215 	stw	r17,8(sp)
  8076b8:	dfc00315 	stw	ra,12(sp)
  8076bc:	2023883a 	mov	r17,r4
  8076c0:	80000226 	beq	r16,zero,8076cc <putc+0x2c>
  8076c4:	80800e17 	ldw	r2,56(r16)
  8076c8:	10001a26 	beq	r2,zero,807734 <putc+0x94>
  8076cc:	28800217 	ldw	r2,8(r5)
  8076d0:	10bfffc4 	addi	r2,r2,-1
  8076d4:	28800215 	stw	r2,8(r5)
  8076d8:	10000b16 	blt	r2,zero,807708 <putc+0x68>
  8076dc:	28800017 	ldw	r2,0(r5)
  8076e0:	14400005 	stb	r17,0(r2)
  8076e4:	28800017 	ldw	r2,0(r5)
  8076e8:	10c00044 	addi	r3,r2,1
  8076ec:	28c00015 	stw	r3,0(r5)
  8076f0:	10800003 	ldbu	r2,0(r2)
  8076f4:	dfc00317 	ldw	ra,12(sp)
  8076f8:	dc400217 	ldw	r17,8(sp)
  8076fc:	dc000117 	ldw	r16,4(sp)
  807700:	dec00404 	addi	sp,sp,16
  807704:	f800283a 	ret
  807708:	28c00617 	ldw	r3,24(r5)
  80770c:	10c00e16 	blt	r2,r3,807748 <putc+0xa8>
  807710:	28800017 	ldw	r2,0(r5)
  807714:	01000284 	movi	r4,10
  807718:	14400005 	stb	r17,0(r2)
  80771c:	28800017 	ldw	r2,0(r5)
  807720:	10c00003 	ldbu	r3,0(r2)
  807724:	193ff01e 	bne	r3,r4,8076e8 <__alt_data_end+0xff8076e8>
  807728:	280d883a 	mov	r6,r5
  80772c:	180b883a 	mov	r5,r3
  807730:	00000706 	br	807750 <putc+0xb0>
  807734:	8009883a 	mov	r4,r16
  807738:	d9400015 	stw	r5,0(sp)
  80773c:	0804be80 	call	804be8 <__sinit>
  807740:	d9400017 	ldw	r5,0(sp)
  807744:	003fe106 	br	8076cc <__alt_data_end+0xff8076cc>
  807748:	280d883a 	mov	r6,r5
  80774c:	880b883a 	mov	r5,r17
  807750:	8009883a 	mov	r4,r16
  807754:	dfc00317 	ldw	ra,12(sp)
  807758:	dc400217 	ldw	r17,8(sp)
  80775c:	dc000117 	ldw	r16,4(sp)
  807760:	dec00404 	addi	sp,sp,16
  807764:	08095f41 	jmpi	8095f4 <__swbuf_r>

00807768 <_realloc_r>:
  807768:	defff604 	addi	sp,sp,-40
  80776c:	dc800215 	stw	r18,8(sp)
  807770:	dfc00915 	stw	ra,36(sp)
  807774:	df000815 	stw	fp,32(sp)
  807778:	ddc00715 	stw	r23,28(sp)
  80777c:	dd800615 	stw	r22,24(sp)
  807780:	dd400515 	stw	r21,20(sp)
  807784:	dd000415 	stw	r20,16(sp)
  807788:	dcc00315 	stw	r19,12(sp)
  80778c:	dc400115 	stw	r17,4(sp)
  807790:	dc000015 	stw	r16,0(sp)
  807794:	3025883a 	mov	r18,r6
  807798:	2800b726 	beq	r5,zero,807a78 <_realloc_r+0x310>
  80779c:	282b883a 	mov	r21,r5
  8077a0:	2029883a 	mov	r20,r4
  8077a4:	080d5bc0 	call	80d5bc <__malloc_lock>
  8077a8:	a8bfff17 	ldw	r2,-4(r21)
  8077ac:	043fff04 	movi	r16,-4
  8077b0:	90c002c4 	addi	r3,r18,11
  8077b4:	01000584 	movi	r4,22
  8077b8:	acfffe04 	addi	r19,r21,-8
  8077bc:	1420703a 	and	r16,r2,r16
  8077c0:	20c0332e 	bgeu	r4,r3,807890 <_realloc_r+0x128>
  8077c4:	047ffe04 	movi	r17,-8
  8077c8:	1c62703a 	and	r17,r3,r17
  8077cc:	8807883a 	mov	r3,r17
  8077d0:	88005816 	blt	r17,zero,807934 <_realloc_r+0x1cc>
  8077d4:	8c805736 	bltu	r17,r18,807934 <_realloc_r+0x1cc>
  8077d8:	80c0300e 	bge	r16,r3,80789c <_realloc_r+0x134>
  8077dc:	07002074 	movhi	fp,129
  8077e0:	e7005404 	addi	fp,fp,336
  8077e4:	e1c00217 	ldw	r7,8(fp)
  8077e8:	9c09883a 	add	r4,r19,r16
  8077ec:	22000117 	ldw	r8,4(r4)
  8077f0:	21c06326 	beq	r4,r7,807980 <_realloc_r+0x218>
  8077f4:	017fff84 	movi	r5,-2
  8077f8:	414a703a 	and	r5,r8,r5
  8077fc:	214b883a 	add	r5,r4,r5
  807800:	29800117 	ldw	r6,4(r5)
  807804:	3180004c 	andi	r6,r6,1
  807808:	30003f26 	beq	r6,zero,807908 <_realloc_r+0x1a0>
  80780c:	1080004c 	andi	r2,r2,1
  807810:	10008326 	beq	r2,zero,807a20 <_realloc_r+0x2b8>
  807814:	900b883a 	mov	r5,r18
  807818:	a009883a 	mov	r4,r20
  80781c:	08059480 	call	805948 <_malloc_r>
  807820:	1025883a 	mov	r18,r2
  807824:	10011e26 	beq	r2,zero,807ca0 <_realloc_r+0x538>
  807828:	a93fff17 	ldw	r4,-4(r21)
  80782c:	10fffe04 	addi	r3,r2,-8
  807830:	00bfff84 	movi	r2,-2
  807834:	2084703a 	and	r2,r4,r2
  807838:	9885883a 	add	r2,r19,r2
  80783c:	1880ee26 	beq	r3,r2,807bf8 <_realloc_r+0x490>
  807840:	81bfff04 	addi	r6,r16,-4
  807844:	00800904 	movi	r2,36
  807848:	1180b836 	bltu	r2,r6,807b2c <_realloc_r+0x3c4>
  80784c:	00c004c4 	movi	r3,19
  807850:	19809636 	bltu	r3,r6,807aac <_realloc_r+0x344>
  807854:	9005883a 	mov	r2,r18
  807858:	a807883a 	mov	r3,r21
  80785c:	19000017 	ldw	r4,0(r3)
  807860:	11000015 	stw	r4,0(r2)
  807864:	19000117 	ldw	r4,4(r3)
  807868:	11000115 	stw	r4,4(r2)
  80786c:	18c00217 	ldw	r3,8(r3)
  807870:	10c00215 	stw	r3,8(r2)
  807874:	a80b883a 	mov	r5,r21
  807878:	a009883a 	mov	r4,r20
  80787c:	0804d5c0 	call	804d5c <_free_r>
  807880:	a009883a 	mov	r4,r20
  807884:	080d5e00 	call	80d5e0 <__malloc_unlock>
  807888:	9005883a 	mov	r2,r18
  80788c:	00001206 	br	8078d8 <_realloc_r+0x170>
  807890:	00c00404 	movi	r3,16
  807894:	1823883a 	mov	r17,r3
  807898:	003fce06 	br	8077d4 <__alt_data_end+0xff8077d4>
  80789c:	a825883a 	mov	r18,r21
  8078a0:	8445c83a 	sub	r2,r16,r17
  8078a4:	00c003c4 	movi	r3,15
  8078a8:	18802636 	bltu	r3,r2,807944 <_realloc_r+0x1dc>
  8078ac:	99800117 	ldw	r6,4(r19)
  8078b0:	9c07883a 	add	r3,r19,r16
  8078b4:	3180004c 	andi	r6,r6,1
  8078b8:	3420b03a 	or	r16,r6,r16
  8078bc:	9c000115 	stw	r16,4(r19)
  8078c0:	18800117 	ldw	r2,4(r3)
  8078c4:	10800054 	ori	r2,r2,1
  8078c8:	18800115 	stw	r2,4(r3)
  8078cc:	a009883a 	mov	r4,r20
  8078d0:	080d5e00 	call	80d5e0 <__malloc_unlock>
  8078d4:	9005883a 	mov	r2,r18
  8078d8:	dfc00917 	ldw	ra,36(sp)
  8078dc:	df000817 	ldw	fp,32(sp)
  8078e0:	ddc00717 	ldw	r23,28(sp)
  8078e4:	dd800617 	ldw	r22,24(sp)
  8078e8:	dd400517 	ldw	r21,20(sp)
  8078ec:	dd000417 	ldw	r20,16(sp)
  8078f0:	dcc00317 	ldw	r19,12(sp)
  8078f4:	dc800217 	ldw	r18,8(sp)
  8078f8:	dc400117 	ldw	r17,4(sp)
  8078fc:	dc000017 	ldw	r16,0(sp)
  807900:	dec00a04 	addi	sp,sp,40
  807904:	f800283a 	ret
  807908:	017fff04 	movi	r5,-4
  80790c:	414a703a 	and	r5,r8,r5
  807910:	814d883a 	add	r6,r16,r5
  807914:	30c01f16 	blt	r6,r3,807994 <_realloc_r+0x22c>
  807918:	20800317 	ldw	r2,12(r4)
  80791c:	20c00217 	ldw	r3,8(r4)
  807920:	a825883a 	mov	r18,r21
  807924:	3021883a 	mov	r16,r6
  807928:	18800315 	stw	r2,12(r3)
  80792c:	10c00215 	stw	r3,8(r2)
  807930:	003fdb06 	br	8078a0 <__alt_data_end+0xff8078a0>
  807934:	00800304 	movi	r2,12
  807938:	a0800015 	stw	r2,0(r20)
  80793c:	0005883a 	mov	r2,zero
  807940:	003fe506 	br	8078d8 <__alt_data_end+0xff8078d8>
  807944:	98c00117 	ldw	r3,4(r19)
  807948:	9c4b883a 	add	r5,r19,r17
  80794c:	11000054 	ori	r4,r2,1
  807950:	18c0004c 	andi	r3,r3,1
  807954:	1c62b03a 	or	r17,r3,r17
  807958:	9c400115 	stw	r17,4(r19)
  80795c:	29000115 	stw	r4,4(r5)
  807960:	2885883a 	add	r2,r5,r2
  807964:	10c00117 	ldw	r3,4(r2)
  807968:	29400204 	addi	r5,r5,8
  80796c:	a009883a 	mov	r4,r20
  807970:	18c00054 	ori	r3,r3,1
  807974:	10c00115 	stw	r3,4(r2)
  807978:	0804d5c0 	call	804d5c <_free_r>
  80797c:	003fd306 	br	8078cc <__alt_data_end+0xff8078cc>
  807980:	017fff04 	movi	r5,-4
  807984:	414a703a 	and	r5,r8,r5
  807988:	89800404 	addi	r6,r17,16
  80798c:	8151883a 	add	r8,r16,r5
  807990:	4180590e 	bge	r8,r6,807af8 <_realloc_r+0x390>
  807994:	1080004c 	andi	r2,r2,1
  807998:	103f9e1e 	bne	r2,zero,807814 <__alt_data_end+0xff807814>
  80799c:	adbffe17 	ldw	r22,-8(r21)
  8079a0:	00bfff04 	movi	r2,-4
  8079a4:	9dadc83a 	sub	r22,r19,r22
  8079a8:	b1800117 	ldw	r6,4(r22)
  8079ac:	3084703a 	and	r2,r6,r2
  8079b0:	20002026 	beq	r4,zero,807a34 <_realloc_r+0x2cc>
  8079b4:	80af883a 	add	r23,r16,r2
  8079b8:	b96f883a 	add	r23,r23,r5
  8079bc:	21c05f26 	beq	r4,r7,807b3c <_realloc_r+0x3d4>
  8079c0:	b8c01c16 	blt	r23,r3,807a34 <_realloc_r+0x2cc>
  8079c4:	20800317 	ldw	r2,12(r4)
  8079c8:	20c00217 	ldw	r3,8(r4)
  8079cc:	81bfff04 	addi	r6,r16,-4
  8079d0:	01000904 	movi	r4,36
  8079d4:	18800315 	stw	r2,12(r3)
  8079d8:	10c00215 	stw	r3,8(r2)
  8079dc:	b0c00217 	ldw	r3,8(r22)
  8079e0:	b0800317 	ldw	r2,12(r22)
  8079e4:	b4800204 	addi	r18,r22,8
  8079e8:	18800315 	stw	r2,12(r3)
  8079ec:	10c00215 	stw	r3,8(r2)
  8079f0:	21801b36 	bltu	r4,r6,807a60 <_realloc_r+0x2f8>
  8079f4:	008004c4 	movi	r2,19
  8079f8:	1180352e 	bgeu	r2,r6,807ad0 <_realloc_r+0x368>
  8079fc:	a8800017 	ldw	r2,0(r21)
  807a00:	b0800215 	stw	r2,8(r22)
  807a04:	a8800117 	ldw	r2,4(r21)
  807a08:	b0800315 	stw	r2,12(r22)
  807a0c:	008006c4 	movi	r2,27
  807a10:	11807f36 	bltu	r2,r6,807c10 <_realloc_r+0x4a8>
  807a14:	b0800404 	addi	r2,r22,16
  807a18:	ad400204 	addi	r21,r21,8
  807a1c:	00002d06 	br	807ad4 <_realloc_r+0x36c>
  807a20:	adbffe17 	ldw	r22,-8(r21)
  807a24:	00bfff04 	movi	r2,-4
  807a28:	9dadc83a 	sub	r22,r19,r22
  807a2c:	b1000117 	ldw	r4,4(r22)
  807a30:	2084703a 	and	r2,r4,r2
  807a34:	b03f7726 	beq	r22,zero,807814 <__alt_data_end+0xff807814>
  807a38:	80af883a 	add	r23,r16,r2
  807a3c:	b8ff7516 	blt	r23,r3,807814 <__alt_data_end+0xff807814>
  807a40:	b0800317 	ldw	r2,12(r22)
  807a44:	b0c00217 	ldw	r3,8(r22)
  807a48:	81bfff04 	addi	r6,r16,-4
  807a4c:	01000904 	movi	r4,36
  807a50:	18800315 	stw	r2,12(r3)
  807a54:	10c00215 	stw	r3,8(r2)
  807a58:	b4800204 	addi	r18,r22,8
  807a5c:	21bfe52e 	bgeu	r4,r6,8079f4 <__alt_data_end+0xff8079f4>
  807a60:	a80b883a 	mov	r5,r21
  807a64:	9009883a 	mov	r4,r18
  807a68:	08063800 	call	806380 <memmove>
  807a6c:	b821883a 	mov	r16,r23
  807a70:	b027883a 	mov	r19,r22
  807a74:	003f8a06 	br	8078a0 <__alt_data_end+0xff8078a0>
  807a78:	300b883a 	mov	r5,r6
  807a7c:	dfc00917 	ldw	ra,36(sp)
  807a80:	df000817 	ldw	fp,32(sp)
  807a84:	ddc00717 	ldw	r23,28(sp)
  807a88:	dd800617 	ldw	r22,24(sp)
  807a8c:	dd400517 	ldw	r21,20(sp)
  807a90:	dd000417 	ldw	r20,16(sp)
  807a94:	dcc00317 	ldw	r19,12(sp)
  807a98:	dc800217 	ldw	r18,8(sp)
  807a9c:	dc400117 	ldw	r17,4(sp)
  807aa0:	dc000017 	ldw	r16,0(sp)
  807aa4:	dec00a04 	addi	sp,sp,40
  807aa8:	08059481 	jmpi	805948 <_malloc_r>
  807aac:	a8c00017 	ldw	r3,0(r21)
  807ab0:	90c00015 	stw	r3,0(r18)
  807ab4:	a8c00117 	ldw	r3,4(r21)
  807ab8:	90c00115 	stw	r3,4(r18)
  807abc:	00c006c4 	movi	r3,27
  807ac0:	19804536 	bltu	r3,r6,807bd8 <_realloc_r+0x470>
  807ac4:	90800204 	addi	r2,r18,8
  807ac8:	a8c00204 	addi	r3,r21,8
  807acc:	003f6306 	br	80785c <__alt_data_end+0xff80785c>
  807ad0:	9005883a 	mov	r2,r18
  807ad4:	a8c00017 	ldw	r3,0(r21)
  807ad8:	b821883a 	mov	r16,r23
  807adc:	b027883a 	mov	r19,r22
  807ae0:	10c00015 	stw	r3,0(r2)
  807ae4:	a8c00117 	ldw	r3,4(r21)
  807ae8:	10c00115 	stw	r3,4(r2)
  807aec:	a8c00217 	ldw	r3,8(r21)
  807af0:	10c00215 	stw	r3,8(r2)
  807af4:	003f6a06 	br	8078a0 <__alt_data_end+0xff8078a0>
  807af8:	9c67883a 	add	r19,r19,r17
  807afc:	4445c83a 	sub	r2,r8,r17
  807b00:	e4c00215 	stw	r19,8(fp)
  807b04:	10800054 	ori	r2,r2,1
  807b08:	98800115 	stw	r2,4(r19)
  807b0c:	a8bfff17 	ldw	r2,-4(r21)
  807b10:	a009883a 	mov	r4,r20
  807b14:	1080004c 	andi	r2,r2,1
  807b18:	1462b03a 	or	r17,r2,r17
  807b1c:	ac7fff15 	stw	r17,-4(r21)
  807b20:	080d5e00 	call	80d5e0 <__malloc_unlock>
  807b24:	a805883a 	mov	r2,r21
  807b28:	003f6b06 	br	8078d8 <__alt_data_end+0xff8078d8>
  807b2c:	a80b883a 	mov	r5,r21
  807b30:	9009883a 	mov	r4,r18
  807b34:	08063800 	call	806380 <memmove>
  807b38:	003f4e06 	br	807874 <__alt_data_end+0xff807874>
  807b3c:	89000404 	addi	r4,r17,16
  807b40:	b93fbc16 	blt	r23,r4,807a34 <__alt_data_end+0xff807a34>
  807b44:	b0800317 	ldw	r2,12(r22)
  807b48:	b0c00217 	ldw	r3,8(r22)
  807b4c:	81bfff04 	addi	r6,r16,-4
  807b50:	01000904 	movi	r4,36
  807b54:	18800315 	stw	r2,12(r3)
  807b58:	10c00215 	stw	r3,8(r2)
  807b5c:	b4800204 	addi	r18,r22,8
  807b60:	21804336 	bltu	r4,r6,807c70 <_realloc_r+0x508>
  807b64:	008004c4 	movi	r2,19
  807b68:	11803f2e 	bgeu	r2,r6,807c68 <_realloc_r+0x500>
  807b6c:	a8800017 	ldw	r2,0(r21)
  807b70:	b0800215 	stw	r2,8(r22)
  807b74:	a8800117 	ldw	r2,4(r21)
  807b78:	b0800315 	stw	r2,12(r22)
  807b7c:	008006c4 	movi	r2,27
  807b80:	11803f36 	bltu	r2,r6,807c80 <_realloc_r+0x518>
  807b84:	b0800404 	addi	r2,r22,16
  807b88:	ad400204 	addi	r21,r21,8
  807b8c:	a8c00017 	ldw	r3,0(r21)
  807b90:	10c00015 	stw	r3,0(r2)
  807b94:	a8c00117 	ldw	r3,4(r21)
  807b98:	10c00115 	stw	r3,4(r2)
  807b9c:	a8c00217 	ldw	r3,8(r21)
  807ba0:	10c00215 	stw	r3,8(r2)
  807ba4:	b447883a 	add	r3,r22,r17
  807ba8:	bc45c83a 	sub	r2,r23,r17
  807bac:	e0c00215 	stw	r3,8(fp)
  807bb0:	10800054 	ori	r2,r2,1
  807bb4:	18800115 	stw	r2,4(r3)
  807bb8:	b0800117 	ldw	r2,4(r22)
  807bbc:	a009883a 	mov	r4,r20
  807bc0:	1080004c 	andi	r2,r2,1
  807bc4:	1462b03a 	or	r17,r2,r17
  807bc8:	b4400115 	stw	r17,4(r22)
  807bcc:	080d5e00 	call	80d5e0 <__malloc_unlock>
  807bd0:	9005883a 	mov	r2,r18
  807bd4:	003f4006 	br	8078d8 <__alt_data_end+0xff8078d8>
  807bd8:	a8c00217 	ldw	r3,8(r21)
  807bdc:	90c00215 	stw	r3,8(r18)
  807be0:	a8c00317 	ldw	r3,12(r21)
  807be4:	90c00315 	stw	r3,12(r18)
  807be8:	30801126 	beq	r6,r2,807c30 <_realloc_r+0x4c8>
  807bec:	90800404 	addi	r2,r18,16
  807bf0:	a8c00404 	addi	r3,r21,16
  807bf4:	003f1906 	br	80785c <__alt_data_end+0xff80785c>
  807bf8:	90ffff17 	ldw	r3,-4(r18)
  807bfc:	00bfff04 	movi	r2,-4
  807c00:	a825883a 	mov	r18,r21
  807c04:	1884703a 	and	r2,r3,r2
  807c08:	80a1883a 	add	r16,r16,r2
  807c0c:	003f2406 	br	8078a0 <__alt_data_end+0xff8078a0>
  807c10:	a8800217 	ldw	r2,8(r21)
  807c14:	b0800415 	stw	r2,16(r22)
  807c18:	a8800317 	ldw	r2,12(r21)
  807c1c:	b0800515 	stw	r2,20(r22)
  807c20:	31000a26 	beq	r6,r4,807c4c <_realloc_r+0x4e4>
  807c24:	b0800604 	addi	r2,r22,24
  807c28:	ad400404 	addi	r21,r21,16
  807c2c:	003fa906 	br	807ad4 <__alt_data_end+0xff807ad4>
  807c30:	a9000417 	ldw	r4,16(r21)
  807c34:	90800604 	addi	r2,r18,24
  807c38:	a8c00604 	addi	r3,r21,24
  807c3c:	91000415 	stw	r4,16(r18)
  807c40:	a9000517 	ldw	r4,20(r21)
  807c44:	91000515 	stw	r4,20(r18)
  807c48:	003f0406 	br	80785c <__alt_data_end+0xff80785c>
  807c4c:	a8c00417 	ldw	r3,16(r21)
  807c50:	ad400604 	addi	r21,r21,24
  807c54:	b0800804 	addi	r2,r22,32
  807c58:	b0c00615 	stw	r3,24(r22)
  807c5c:	a8ffff17 	ldw	r3,-4(r21)
  807c60:	b0c00715 	stw	r3,28(r22)
  807c64:	003f9b06 	br	807ad4 <__alt_data_end+0xff807ad4>
  807c68:	9005883a 	mov	r2,r18
  807c6c:	003fc706 	br	807b8c <__alt_data_end+0xff807b8c>
  807c70:	a80b883a 	mov	r5,r21
  807c74:	9009883a 	mov	r4,r18
  807c78:	08063800 	call	806380 <memmove>
  807c7c:	003fc906 	br	807ba4 <__alt_data_end+0xff807ba4>
  807c80:	a8800217 	ldw	r2,8(r21)
  807c84:	b0800415 	stw	r2,16(r22)
  807c88:	a8800317 	ldw	r2,12(r21)
  807c8c:	b0800515 	stw	r2,20(r22)
  807c90:	31000726 	beq	r6,r4,807cb0 <_realloc_r+0x548>
  807c94:	b0800604 	addi	r2,r22,24
  807c98:	ad400404 	addi	r21,r21,16
  807c9c:	003fbb06 	br	807b8c <__alt_data_end+0xff807b8c>
  807ca0:	a009883a 	mov	r4,r20
  807ca4:	080d5e00 	call	80d5e0 <__malloc_unlock>
  807ca8:	0005883a 	mov	r2,zero
  807cac:	003f0a06 	br	8078d8 <__alt_data_end+0xff8078d8>
  807cb0:	a8c00417 	ldw	r3,16(r21)
  807cb4:	ad400604 	addi	r21,r21,24
  807cb8:	b0800804 	addi	r2,r22,32
  807cbc:	b0c00615 	stw	r3,24(r22)
  807cc0:	a8ffff17 	ldw	r3,-4(r21)
  807cc4:	b0c00715 	stw	r3,28(r22)
  807cc8:	003fb006 	br	807b8c <__alt_data_end+0xff807b8c>

00807ccc <__fpclassifyd>:
  807ccc:	00a00034 	movhi	r2,32768
  807cd0:	10bfffc4 	addi	r2,r2,-1
  807cd4:	2884703a 	and	r2,r5,r2
  807cd8:	10000726 	beq	r2,zero,807cf8 <__fpclassifyd+0x2c>
  807cdc:	00fffc34 	movhi	r3,65520
  807ce0:	019ff834 	movhi	r6,32736
  807ce4:	28c7883a 	add	r3,r5,r3
  807ce8:	31bfffc4 	addi	r6,r6,-1
  807cec:	30c00536 	bltu	r6,r3,807d04 <__fpclassifyd+0x38>
  807cf0:	00800104 	movi	r2,4
  807cf4:	f800283a 	ret
  807cf8:	2000021e 	bne	r4,zero,807d04 <__fpclassifyd+0x38>
  807cfc:	00800084 	movi	r2,2
  807d00:	f800283a 	ret
  807d04:	00dffc34 	movhi	r3,32752
  807d08:	019ff834 	movhi	r6,32736
  807d0c:	28cb883a 	add	r5,r5,r3
  807d10:	31bfffc4 	addi	r6,r6,-1
  807d14:	317ff62e 	bgeu	r6,r5,807cf0 <__alt_data_end+0xff807cf0>
  807d18:	01400434 	movhi	r5,16
  807d1c:	297fffc4 	addi	r5,r5,-1
  807d20:	28800236 	bltu	r5,r2,807d2c <__fpclassifyd+0x60>
  807d24:	008000c4 	movi	r2,3
  807d28:	f800283a 	ret
  807d2c:	10c00226 	beq	r2,r3,807d38 <__fpclassifyd+0x6c>
  807d30:	0005883a 	mov	r2,zero
  807d34:	f800283a 	ret
  807d38:	2005003a 	cmpeq	r2,r4,zero
  807d3c:	f800283a 	ret

00807d40 <_sbrk_r>:
  807d40:	defffd04 	addi	sp,sp,-12
  807d44:	dc000015 	stw	r16,0(sp)
  807d48:	04002074 	movhi	r16,129
  807d4c:	dc400115 	stw	r17,4(sp)
  807d50:	840cab04 	addi	r16,r16,12972
  807d54:	2023883a 	mov	r17,r4
  807d58:	2809883a 	mov	r4,r5
  807d5c:	dfc00215 	stw	ra,8(sp)
  807d60:	80000015 	stw	zero,0(r16)
  807d64:	080d7a00 	call	80d7a0 <sbrk>
  807d68:	00ffffc4 	movi	r3,-1
  807d6c:	10c00526 	beq	r2,r3,807d84 <_sbrk_r+0x44>
  807d70:	dfc00217 	ldw	ra,8(sp)
  807d74:	dc400117 	ldw	r17,4(sp)
  807d78:	dc000017 	ldw	r16,0(sp)
  807d7c:	dec00304 	addi	sp,sp,12
  807d80:	f800283a 	ret
  807d84:	80c00017 	ldw	r3,0(r16)
  807d88:	183ff926 	beq	r3,zero,807d70 <__alt_data_end+0xff807d70>
  807d8c:	88c00015 	stw	r3,0(r17)
  807d90:	003ff706 	br	807d70 <__alt_data_end+0xff807d70>

00807d94 <__sread>:
  807d94:	defffe04 	addi	sp,sp,-8
  807d98:	dc000015 	stw	r16,0(sp)
  807d9c:	2821883a 	mov	r16,r5
  807da0:	2940038f 	ldh	r5,14(r5)
  807da4:	dfc00115 	stw	ra,4(sp)
  807da8:	0809ce00 	call	809ce0 <_read_r>
  807dac:	10000716 	blt	r2,zero,807dcc <__sread+0x38>
  807db0:	80c01417 	ldw	r3,80(r16)
  807db4:	1887883a 	add	r3,r3,r2
  807db8:	80c01415 	stw	r3,80(r16)
  807dbc:	dfc00117 	ldw	ra,4(sp)
  807dc0:	dc000017 	ldw	r16,0(sp)
  807dc4:	dec00204 	addi	sp,sp,8
  807dc8:	f800283a 	ret
  807dcc:	80c0030b 	ldhu	r3,12(r16)
  807dd0:	18fbffcc 	andi	r3,r3,61439
  807dd4:	80c0030d 	sth	r3,12(r16)
  807dd8:	dfc00117 	ldw	ra,4(sp)
  807ddc:	dc000017 	ldw	r16,0(sp)
  807de0:	dec00204 	addi	sp,sp,8
  807de4:	f800283a 	ret

00807de8 <__seofread>:
  807de8:	0005883a 	mov	r2,zero
  807dec:	f800283a 	ret

00807df0 <__swrite>:
  807df0:	2880030b 	ldhu	r2,12(r5)
  807df4:	defffb04 	addi	sp,sp,-20
  807df8:	dcc00315 	stw	r19,12(sp)
  807dfc:	dc800215 	stw	r18,8(sp)
  807e00:	dc400115 	stw	r17,4(sp)
  807e04:	dc000015 	stw	r16,0(sp)
  807e08:	dfc00415 	stw	ra,16(sp)
  807e0c:	10c0400c 	andi	r3,r2,256
  807e10:	2821883a 	mov	r16,r5
  807e14:	2023883a 	mov	r17,r4
  807e18:	3025883a 	mov	r18,r6
  807e1c:	3827883a 	mov	r19,r7
  807e20:	18000526 	beq	r3,zero,807e38 <__swrite+0x48>
  807e24:	2940038f 	ldh	r5,14(r5)
  807e28:	01c00084 	movi	r7,2
  807e2c:	000d883a 	mov	r6,zero
  807e30:	0809c800 	call	809c80 <_lseek_r>
  807e34:	8080030b 	ldhu	r2,12(r16)
  807e38:	8140038f 	ldh	r5,14(r16)
  807e3c:	10bbffcc 	andi	r2,r2,61439
  807e40:	980f883a 	mov	r7,r19
  807e44:	900d883a 	mov	r6,r18
  807e48:	8809883a 	mov	r4,r17
  807e4c:	8080030d 	sth	r2,12(r16)
  807e50:	dfc00417 	ldw	ra,16(sp)
  807e54:	dcc00317 	ldw	r19,12(sp)
  807e58:	dc800217 	ldw	r18,8(sp)
  807e5c:	dc400117 	ldw	r17,4(sp)
  807e60:	dc000017 	ldw	r16,0(sp)
  807e64:	dec00504 	addi	sp,sp,20
  807e68:	080974c1 	jmpi	80974c <_write_r>

00807e6c <__sseek>:
  807e6c:	defffe04 	addi	sp,sp,-8
  807e70:	dc000015 	stw	r16,0(sp)
  807e74:	2821883a 	mov	r16,r5
  807e78:	2940038f 	ldh	r5,14(r5)
  807e7c:	dfc00115 	stw	ra,4(sp)
  807e80:	0809c800 	call	809c80 <_lseek_r>
  807e84:	00ffffc4 	movi	r3,-1
  807e88:	10c00826 	beq	r2,r3,807eac <__sseek+0x40>
  807e8c:	80c0030b 	ldhu	r3,12(r16)
  807e90:	80801415 	stw	r2,80(r16)
  807e94:	18c40014 	ori	r3,r3,4096
  807e98:	80c0030d 	sth	r3,12(r16)
  807e9c:	dfc00117 	ldw	ra,4(sp)
  807ea0:	dc000017 	ldw	r16,0(sp)
  807ea4:	dec00204 	addi	sp,sp,8
  807ea8:	f800283a 	ret
  807eac:	80c0030b 	ldhu	r3,12(r16)
  807eb0:	18fbffcc 	andi	r3,r3,61439
  807eb4:	80c0030d 	sth	r3,12(r16)
  807eb8:	dfc00117 	ldw	ra,4(sp)
  807ebc:	dc000017 	ldw	r16,0(sp)
  807ec0:	dec00204 	addi	sp,sp,8
  807ec4:	f800283a 	ret

00807ec8 <__sclose>:
  807ec8:	2940038f 	ldh	r5,14(r5)
  807ecc:	08097ac1 	jmpi	8097ac <_close_r>

00807ed0 <strcmp>:
  807ed0:	2144b03a 	or	r2,r4,r5
  807ed4:	108000cc 	andi	r2,r2,3
  807ed8:	1000171e 	bne	r2,zero,807f38 <strcmp+0x68>
  807edc:	20800017 	ldw	r2,0(r4)
  807ee0:	28c00017 	ldw	r3,0(r5)
  807ee4:	10c0141e 	bne	r2,r3,807f38 <strcmp+0x68>
  807ee8:	027fbff4 	movhi	r9,65279
  807eec:	4a7fbfc4 	addi	r9,r9,-257
  807ef0:	0086303a 	nor	r3,zero,r2
  807ef4:	02202074 	movhi	r8,32897
  807ef8:	1245883a 	add	r2,r2,r9
  807efc:	42202004 	addi	r8,r8,-32640
  807f00:	10c4703a 	and	r2,r2,r3
  807f04:	1204703a 	and	r2,r2,r8
  807f08:	10000226 	beq	r2,zero,807f14 <strcmp+0x44>
  807f0c:	00002306 	br	807f9c <strcmp+0xcc>
  807f10:	1000221e 	bne	r2,zero,807f9c <strcmp+0xcc>
  807f14:	21000104 	addi	r4,r4,4
  807f18:	20c00017 	ldw	r3,0(r4)
  807f1c:	29400104 	addi	r5,r5,4
  807f20:	29800017 	ldw	r6,0(r5)
  807f24:	1a4f883a 	add	r7,r3,r9
  807f28:	00c4303a 	nor	r2,zero,r3
  807f2c:	3884703a 	and	r2,r7,r2
  807f30:	1204703a 	and	r2,r2,r8
  807f34:	19bff626 	beq	r3,r6,807f10 <__alt_data_end+0xff807f10>
  807f38:	20800003 	ldbu	r2,0(r4)
  807f3c:	10c03fcc 	andi	r3,r2,255
  807f40:	18c0201c 	xori	r3,r3,128
  807f44:	18ffe004 	addi	r3,r3,-128
  807f48:	18000c26 	beq	r3,zero,807f7c <strcmp+0xac>
  807f4c:	29800007 	ldb	r6,0(r5)
  807f50:	19800326 	beq	r3,r6,807f60 <strcmp+0x90>
  807f54:	00001306 	br	807fa4 <strcmp+0xd4>
  807f58:	29800007 	ldb	r6,0(r5)
  807f5c:	11800b1e 	bne	r2,r6,807f8c <strcmp+0xbc>
  807f60:	21000044 	addi	r4,r4,1
  807f64:	20c00003 	ldbu	r3,0(r4)
  807f68:	29400044 	addi	r5,r5,1
  807f6c:	18803fcc 	andi	r2,r3,255
  807f70:	1080201c 	xori	r2,r2,128
  807f74:	10bfe004 	addi	r2,r2,-128
  807f78:	103ff71e 	bne	r2,zero,807f58 <__alt_data_end+0xff807f58>
  807f7c:	0007883a 	mov	r3,zero
  807f80:	28800003 	ldbu	r2,0(r5)
  807f84:	1885c83a 	sub	r2,r3,r2
  807f88:	f800283a 	ret
  807f8c:	28800003 	ldbu	r2,0(r5)
  807f90:	18c03fcc 	andi	r3,r3,255
  807f94:	1885c83a 	sub	r2,r3,r2
  807f98:	f800283a 	ret
  807f9c:	0005883a 	mov	r2,zero
  807fa0:	f800283a 	ret
  807fa4:	10c03fcc 	andi	r3,r2,255
  807fa8:	003ff506 	br	807f80 <__alt_data_end+0xff807f80>

00807fac <__sprint_r.part.0>:
  807fac:	28801917 	ldw	r2,100(r5)
  807fb0:	defff604 	addi	sp,sp,-40
  807fb4:	dd400515 	stw	r21,20(sp)
  807fb8:	dfc00915 	stw	ra,36(sp)
  807fbc:	df000815 	stw	fp,32(sp)
  807fc0:	ddc00715 	stw	r23,28(sp)
  807fc4:	dd800615 	stw	r22,24(sp)
  807fc8:	dd000415 	stw	r20,16(sp)
  807fcc:	dcc00315 	stw	r19,12(sp)
  807fd0:	dc800215 	stw	r18,8(sp)
  807fd4:	dc400115 	stw	r17,4(sp)
  807fd8:	dc000015 	stw	r16,0(sp)
  807fdc:	1088000c 	andi	r2,r2,8192
  807fe0:	302b883a 	mov	r21,r6
  807fe4:	10002e26 	beq	r2,zero,8080a0 <__sprint_r.part.0+0xf4>
  807fe8:	30800217 	ldw	r2,8(r6)
  807fec:	35800017 	ldw	r22,0(r6)
  807ff0:	10002926 	beq	r2,zero,808098 <__sprint_r.part.0+0xec>
  807ff4:	2827883a 	mov	r19,r5
  807ff8:	2029883a 	mov	r20,r4
  807ffc:	b5c00104 	addi	r23,r22,4
  808000:	04bfffc4 	movi	r18,-1
  808004:	bc400017 	ldw	r17,0(r23)
  808008:	b4000017 	ldw	r16,0(r22)
  80800c:	0039883a 	mov	fp,zero
  808010:	8822d0ba 	srli	r17,r17,2
  808014:	8800031e 	bne	r17,zero,808024 <__sprint_r.part.0+0x78>
  808018:	00001806 	br	80807c <__sprint_r.part.0+0xd0>
  80801c:	84000104 	addi	r16,r16,4
  808020:	8f001526 	beq	r17,fp,808078 <__sprint_r.part.0+0xcc>
  808024:	81400017 	ldw	r5,0(r16)
  808028:	980d883a 	mov	r6,r19
  80802c:	a009883a 	mov	r4,r20
  808030:	0809b2c0 	call	809b2c <_fputwc_r>
  808034:	e7000044 	addi	fp,fp,1
  808038:	14bff81e 	bne	r2,r18,80801c <__alt_data_end+0xff80801c>
  80803c:	9005883a 	mov	r2,r18
  808040:	a8000215 	stw	zero,8(r21)
  808044:	a8000115 	stw	zero,4(r21)
  808048:	dfc00917 	ldw	ra,36(sp)
  80804c:	df000817 	ldw	fp,32(sp)
  808050:	ddc00717 	ldw	r23,28(sp)
  808054:	dd800617 	ldw	r22,24(sp)
  808058:	dd400517 	ldw	r21,20(sp)
  80805c:	dd000417 	ldw	r20,16(sp)
  808060:	dcc00317 	ldw	r19,12(sp)
  808064:	dc800217 	ldw	r18,8(sp)
  808068:	dc400117 	ldw	r17,4(sp)
  80806c:	dc000017 	ldw	r16,0(sp)
  808070:	dec00a04 	addi	sp,sp,40
  808074:	f800283a 	ret
  808078:	a8800217 	ldw	r2,8(r21)
  80807c:	8c63883a 	add	r17,r17,r17
  808080:	8c63883a 	add	r17,r17,r17
  808084:	1445c83a 	sub	r2,r2,r17
  808088:	a8800215 	stw	r2,8(r21)
  80808c:	b5800204 	addi	r22,r22,8
  808090:	bdc00204 	addi	r23,r23,8
  808094:	103fdb1e 	bne	r2,zero,808004 <__alt_data_end+0xff808004>
  808098:	0005883a 	mov	r2,zero
  80809c:	003fe806 	br	808040 <__alt_data_end+0xff808040>
  8080a0:	080506c0 	call	80506c <__sfvwrite_r>
  8080a4:	003fe606 	br	808040 <__alt_data_end+0xff808040>

008080a8 <__sprint_r>:
  8080a8:	30c00217 	ldw	r3,8(r6)
  8080ac:	18000126 	beq	r3,zero,8080b4 <__sprint_r+0xc>
  8080b0:	0807fac1 	jmpi	807fac <__sprint_r.part.0>
  8080b4:	30000115 	stw	zero,4(r6)
  8080b8:	0005883a 	mov	r2,zero
  8080bc:	f800283a 	ret

008080c0 <___vfiprintf_internal_r>:
  8080c0:	deffc904 	addi	sp,sp,-220
  8080c4:	df003515 	stw	fp,212(sp)
  8080c8:	dd003115 	stw	r20,196(sp)
  8080cc:	dfc03615 	stw	ra,216(sp)
  8080d0:	ddc03415 	stw	r23,208(sp)
  8080d4:	dd803315 	stw	r22,204(sp)
  8080d8:	dd403215 	stw	r21,200(sp)
  8080dc:	dcc03015 	stw	r19,192(sp)
  8080e0:	dc802f15 	stw	r18,188(sp)
  8080e4:	dc402e15 	stw	r17,184(sp)
  8080e8:	dc002d15 	stw	r16,180(sp)
  8080ec:	d9002015 	stw	r4,128(sp)
  8080f0:	d9c02215 	stw	r7,136(sp)
  8080f4:	2829883a 	mov	r20,r5
  8080f8:	3039883a 	mov	fp,r6
  8080fc:	20000226 	beq	r4,zero,808108 <___vfiprintf_internal_r+0x48>
  808100:	20800e17 	ldw	r2,56(r4)
  808104:	1000cf26 	beq	r2,zero,808444 <___vfiprintf_internal_r+0x384>
  808108:	a080030b 	ldhu	r2,12(r20)
  80810c:	10c8000c 	andi	r3,r2,8192
  808110:	1800061e 	bne	r3,zero,80812c <___vfiprintf_internal_r+0x6c>
  808114:	a1001917 	ldw	r4,100(r20)
  808118:	00f7ffc4 	movi	r3,-8193
  80811c:	10880014 	ori	r2,r2,8192
  808120:	20c6703a 	and	r3,r4,r3
  808124:	a080030d 	sth	r2,12(r20)
  808128:	a0c01915 	stw	r3,100(r20)
  80812c:	10c0020c 	andi	r3,r2,8
  808130:	1800a926 	beq	r3,zero,8083d8 <___vfiprintf_internal_r+0x318>
  808134:	a0c00417 	ldw	r3,16(r20)
  808138:	1800a726 	beq	r3,zero,8083d8 <___vfiprintf_internal_r+0x318>
  80813c:	1080068c 	andi	r2,r2,26
  808140:	00c00284 	movi	r3,10
  808144:	10c0ac26 	beq	r2,r3,8083f8 <___vfiprintf_internal_r+0x338>
  808148:	da801a04 	addi	r10,sp,104
  80814c:	da801e15 	stw	r10,120(sp)
  808150:	d8801e17 	ldw	r2,120(sp)
  808154:	da8019c4 	addi	r10,sp,103
  808158:	05802074 	movhi	r22,129
  80815c:	05c02074 	movhi	r23,129
  808160:	da801f15 	stw	r10,124(sp)
  808164:	1295c83a 	sub	r10,r2,r10
  808168:	b5bede04 	addi	r22,r22,-1160
  80816c:	bdfeda04 	addi	r23,r23,-1176
  808170:	dec01a15 	stw	sp,104(sp)
  808174:	d8001c15 	stw	zero,112(sp)
  808178:	d8001b15 	stw	zero,108(sp)
  80817c:	d8002615 	stw	zero,152(sp)
  808180:	d8002315 	stw	zero,140(sp)
  808184:	da802715 	stw	r10,156(sp)
  808188:	d811883a 	mov	r8,sp
  80818c:	dd002115 	stw	r20,132(sp)
  808190:	e021883a 	mov	r16,fp
  808194:	80800007 	ldb	r2,0(r16)
  808198:	1003ea26 	beq	r2,zero,809144 <___vfiprintf_internal_r+0x1084>
  80819c:	00c00944 	movi	r3,37
  8081a0:	8025883a 	mov	r18,r16
  8081a4:	10c0021e 	bne	r2,r3,8081b0 <___vfiprintf_internal_r+0xf0>
  8081a8:	00001606 	br	808204 <___vfiprintf_internal_r+0x144>
  8081ac:	10c00326 	beq	r2,r3,8081bc <___vfiprintf_internal_r+0xfc>
  8081b0:	94800044 	addi	r18,r18,1
  8081b4:	90800007 	ldb	r2,0(r18)
  8081b8:	103ffc1e 	bne	r2,zero,8081ac <__alt_data_end+0xff8081ac>
  8081bc:	9423c83a 	sub	r17,r18,r16
  8081c0:	88001026 	beq	r17,zero,808204 <___vfiprintf_internal_r+0x144>
  8081c4:	d8c01c17 	ldw	r3,112(sp)
  8081c8:	d8801b17 	ldw	r2,108(sp)
  8081cc:	44000015 	stw	r16,0(r8)
  8081d0:	88c7883a 	add	r3,r17,r3
  8081d4:	10800044 	addi	r2,r2,1
  8081d8:	44400115 	stw	r17,4(r8)
  8081dc:	d8c01c15 	stw	r3,112(sp)
  8081e0:	d8801b15 	stw	r2,108(sp)
  8081e4:	010001c4 	movi	r4,7
  8081e8:	2080760e 	bge	r4,r2,8083c4 <___vfiprintf_internal_r+0x304>
  8081ec:	1803821e 	bne	r3,zero,808ff8 <___vfiprintf_internal_r+0xf38>
  8081f0:	da802317 	ldw	r10,140(sp)
  8081f4:	d8001b15 	stw	zero,108(sp)
  8081f8:	d811883a 	mov	r8,sp
  8081fc:	5455883a 	add	r10,r10,r17
  808200:	da802315 	stw	r10,140(sp)
  808204:	90800007 	ldb	r2,0(r18)
  808208:	10044626 	beq	r2,zero,809324 <___vfiprintf_internal_r+0x1264>
  80820c:	90c00047 	ldb	r3,1(r18)
  808210:	94000044 	addi	r16,r18,1
  808214:	d8001d85 	stb	zero,118(sp)
  808218:	0009883a 	mov	r4,zero
  80821c:	000f883a 	mov	r7,zero
  808220:	027fffc4 	movi	r9,-1
  808224:	0023883a 	mov	r17,zero
  808228:	0029883a 	mov	r20,zero
  80822c:	01401604 	movi	r5,88
  808230:	01800244 	movi	r6,9
  808234:	03400a84 	movi	r13,42
  808238:	03001b04 	movi	r12,108
  80823c:	84000044 	addi	r16,r16,1
  808240:	18bff804 	addi	r2,r3,-32
  808244:	28827336 	bltu	r5,r2,808c14 <___vfiprintf_internal_r+0xb54>
  808248:	100490ba 	slli	r2,r2,2
  80824c:	02802074 	movhi	r10,129
  808250:	52a09804 	addi	r10,r10,-32160
  808254:	1285883a 	add	r2,r2,r10
  808258:	10800017 	ldw	r2,0(r2)
  80825c:	1000683a 	jmp	r2
  808260:	00808948 	cmpgei	r2,zero,549
  808264:	00808c14 	movui	r2,560
  808268:	00808c14 	movui	r2,560
  80826c:	00808968 	cmpgeui	r2,zero,549
  808270:	00808c14 	movui	r2,560
  808274:	00808c14 	movui	r2,560
  808278:	00808c14 	movui	r2,560
  80827c:	00808c14 	movui	r2,560
  808280:	00808c14 	movui	r2,560
  808284:	00808c14 	movui	r2,560
  808288:	00808b50 	cmplti	r2,zero,557
  80828c:	00808b6c 	andhi	r2,zero,557
  808290:	00808c14 	movui	r2,560
  808294:	00808454 	movui	r2,529
  808298:	00808b7c 	xorhi	r2,zero,557
  80829c:	00808c14 	movui	r2,560
  8082a0:	00808974 	movhi	r2,549
  8082a4:	00808980 	call	80898 <__alt_mem_sdram-0x77f768>
  8082a8:	00808980 	call	80898 <__alt_mem_sdram-0x77f768>
  8082ac:	00808980 	call	80898 <__alt_mem_sdram-0x77f768>
  8082b0:	00808980 	call	80898 <__alt_mem_sdram-0x77f768>
  8082b4:	00808980 	call	80898 <__alt_mem_sdram-0x77f768>
  8082b8:	00808980 	call	80898 <__alt_mem_sdram-0x77f768>
  8082bc:	00808980 	call	80898 <__alt_mem_sdram-0x77f768>
  8082c0:	00808980 	call	80898 <__alt_mem_sdram-0x77f768>
  8082c4:	00808980 	call	80898 <__alt_mem_sdram-0x77f768>
  8082c8:	00808c14 	movui	r2,560
  8082cc:	00808c14 	movui	r2,560
  8082d0:	00808c14 	movui	r2,560
  8082d4:	00808c14 	movui	r2,560
  8082d8:	00808c14 	movui	r2,560
  8082dc:	00808c14 	movui	r2,560
  8082e0:	00808c14 	movui	r2,560
  8082e4:	00808c14 	movui	r2,560
  8082e8:	00808c14 	movui	r2,560
  8082ec:	00808c14 	movui	r2,560
  8082f0:	008089ac 	andhi	r2,zero,550
  8082f4:	00808c14 	movui	r2,560
  8082f8:	00808c14 	movui	r2,560
  8082fc:	00808c14 	movui	r2,560
  808300:	00808c14 	movui	r2,560
  808304:	00808c14 	movui	r2,560
  808308:	00808c14 	movui	r2,560
  80830c:	00808c14 	movui	r2,560
  808310:	00808c14 	movui	r2,560
  808314:	00808c14 	movui	r2,560
  808318:	00808c14 	movui	r2,560
  80831c:	008089e4 	muli	r2,zero,551
  808320:	00808c14 	movui	r2,560
  808324:	00808c14 	movui	r2,560
  808328:	00808c14 	movui	r2,560
  80832c:	00808c14 	movui	r2,560
  808330:	00808c14 	movui	r2,560
  808334:	00808a3c 	xorhi	r2,zero,552
  808338:	00808c14 	movui	r2,560
  80833c:	00808c14 	movui	r2,560
  808340:	00808aac 	andhi	r2,zero,554
  808344:	00808c14 	movui	r2,560
  808348:	00808c14 	movui	r2,560
  80834c:	00808c14 	movui	r2,560
  808350:	00808c14 	movui	r2,560
  808354:	00808c14 	movui	r2,560
  808358:	00808c14 	movui	r2,560
  80835c:	00808c14 	movui	r2,560
  808360:	00808c14 	movui	r2,560
  808364:	00808c14 	movui	r2,560
  808368:	00808c14 	movui	r2,560
  80836c:	00808858 	cmpnei	r2,zero,545
  808370:	00808884 	movi	r2,546
  808374:	00808c14 	movui	r2,560
  808378:	00808c14 	movui	r2,560
  80837c:	00808c14 	movui	r2,560
  808380:	00808bbc 	xorhi	r2,zero,558
  808384:	00808884 	movi	r2,546
  808388:	00808c14 	movui	r2,560
  80838c:	00808c14 	movui	r2,560
  808390:	00808718 	cmpnei	r2,zero,540
  808394:	00808c14 	movui	r2,560
  808398:	00808728 	cmpgeui	r2,zero,540
  80839c:	00808764 	muli	r2,zero,541
  8083a0:	00808460 	cmpeqi	r2,zero,529
  8083a4:	0080870c 	andi	r2,zero,540
  8083a8:	00808c14 	movui	r2,560
  8083ac:	00808ae8 	cmpgeui	r2,zero,555
  8083b0:	00808c14 	movui	r2,560
  8083b4:	00808b40 	call	808b4 <__alt_mem_sdram-0x77f74c>
  8083b8:	00808c14 	movui	r2,560
  8083bc:	00808c14 	movui	r2,560
  8083c0:	00808804 	movi	r2,544
  8083c4:	42000204 	addi	r8,r8,8
  8083c8:	da802317 	ldw	r10,140(sp)
  8083cc:	5455883a 	add	r10,r10,r17
  8083d0:	da802315 	stw	r10,140(sp)
  8083d4:	003f8b06 	br	808204 <__alt_data_end+0xff808204>
  8083d8:	d9002017 	ldw	r4,128(sp)
  8083dc:	a00b883a 	mov	r5,r20
  8083e0:	0802c140 	call	802c14 <__swsetup_r>
  8083e4:	1003b11e 	bne	r2,zero,8092ac <___vfiprintf_internal_r+0x11ec>
  8083e8:	a080030b 	ldhu	r2,12(r20)
  8083ec:	00c00284 	movi	r3,10
  8083f0:	1080068c 	andi	r2,r2,26
  8083f4:	10ff541e 	bne	r2,r3,808148 <__alt_data_end+0xff808148>
  8083f8:	a080038f 	ldh	r2,14(r20)
  8083fc:	103f5216 	blt	r2,zero,808148 <__alt_data_end+0xff808148>
  808400:	d9c02217 	ldw	r7,136(sp)
  808404:	d9002017 	ldw	r4,128(sp)
  808408:	e00d883a 	mov	r6,fp
  80840c:	a00b883a 	mov	r5,r20
  808410:	08095380 	call	809538 <__sbprintf>
  808414:	dfc03617 	ldw	ra,216(sp)
  808418:	df003517 	ldw	fp,212(sp)
  80841c:	ddc03417 	ldw	r23,208(sp)
  808420:	dd803317 	ldw	r22,204(sp)
  808424:	dd403217 	ldw	r21,200(sp)
  808428:	dd003117 	ldw	r20,196(sp)
  80842c:	dcc03017 	ldw	r19,192(sp)
  808430:	dc802f17 	ldw	r18,188(sp)
  808434:	dc402e17 	ldw	r17,184(sp)
  808438:	dc002d17 	ldw	r16,180(sp)
  80843c:	dec03704 	addi	sp,sp,220
  808440:	f800283a 	ret
  808444:	0804be80 	call	804be8 <__sinit>
  808448:	003f2f06 	br	808108 <__alt_data_end+0xff808108>
  80844c:	0463c83a 	sub	r17,zero,r17
  808450:	d8802215 	stw	r2,136(sp)
  808454:	a5000114 	ori	r20,r20,4
  808458:	80c00007 	ldb	r3,0(r16)
  80845c:	003f7706 	br	80823c <__alt_data_end+0xff80823c>
  808460:	00800c04 	movi	r2,48
  808464:	da802217 	ldw	r10,136(sp)
  808468:	d8801d05 	stb	r2,116(sp)
  80846c:	00801e04 	movi	r2,120
  808470:	d8801d45 	stb	r2,117(sp)
  808474:	d8001d85 	stb	zero,118(sp)
  808478:	50c00104 	addi	r3,r10,4
  80847c:	54800017 	ldw	r18,0(r10)
  808480:	0027883a 	mov	r19,zero
  808484:	a0800094 	ori	r2,r20,2
  808488:	48030b16 	blt	r9,zero,8090b8 <___vfiprintf_internal_r+0xff8>
  80848c:	00bfdfc4 	movi	r2,-129
  808490:	a096703a 	and	r11,r20,r2
  808494:	d8c02215 	stw	r3,136(sp)
  808498:	5d000094 	ori	r20,r11,2
  80849c:	90032b1e 	bne	r18,zero,80914c <___vfiprintf_internal_r+0x108c>
  8084a0:	00802074 	movhi	r2,129
  8084a4:	10be7904 	addi	r2,r2,-1564
  8084a8:	d8802615 	stw	r2,152(sp)
  8084ac:	0039883a 	mov	fp,zero
  8084b0:	48017b1e 	bne	r9,zero,808aa0 <___vfiprintf_internal_r+0x9e0>
  8084b4:	0013883a 	mov	r9,zero
  8084b8:	0027883a 	mov	r19,zero
  8084bc:	dd401a04 	addi	r21,sp,104
  8084c0:	4825883a 	mov	r18,r9
  8084c4:	4cc0010e 	bge	r9,r19,8084cc <___vfiprintf_internal_r+0x40c>
  8084c8:	9825883a 	mov	r18,r19
  8084cc:	e7003fcc 	andi	fp,fp,255
  8084d0:	e700201c 	xori	fp,fp,128
  8084d4:	e73fe004 	addi	fp,fp,-128
  8084d8:	e0000126 	beq	fp,zero,8084e0 <___vfiprintf_internal_r+0x420>
  8084dc:	94800044 	addi	r18,r18,1
  8084e0:	a380008c 	andi	r14,r20,2
  8084e4:	70000126 	beq	r14,zero,8084ec <___vfiprintf_internal_r+0x42c>
  8084e8:	94800084 	addi	r18,r18,2
  8084ec:	a700210c 	andi	fp,r20,132
  8084f0:	e001df1e 	bne	fp,zero,808c70 <___vfiprintf_internal_r+0xbb0>
  8084f4:	8c87c83a 	sub	r3,r17,r18
  8084f8:	00c1dd0e 	bge	zero,r3,808c70 <___vfiprintf_internal_r+0xbb0>
  8084fc:	01c00404 	movi	r7,16
  808500:	d8801c17 	ldw	r2,112(sp)
  808504:	38c3ad0e 	bge	r7,r3,8093bc <___vfiprintf_internal_r+0x12fc>
  808508:	02802074 	movhi	r10,129
  80850c:	52bede04 	addi	r10,r10,-1160
  808510:	dc002915 	stw	r16,164(sp)
  808514:	d9801b17 	ldw	r6,108(sp)
  808518:	da802415 	stw	r10,144(sp)
  80851c:	03c001c4 	movi	r15,7
  808520:	da402515 	stw	r9,148(sp)
  808524:	db802815 	stw	r14,160(sp)
  808528:	1821883a 	mov	r16,r3
  80852c:	00000506 	br	808544 <___vfiprintf_internal_r+0x484>
  808530:	31400084 	addi	r5,r6,2
  808534:	42000204 	addi	r8,r8,8
  808538:	200d883a 	mov	r6,r4
  80853c:	843ffc04 	addi	r16,r16,-16
  808540:	3c000d0e 	bge	r7,r16,808578 <___vfiprintf_internal_r+0x4b8>
  808544:	10800404 	addi	r2,r2,16
  808548:	31000044 	addi	r4,r6,1
  80854c:	45800015 	stw	r22,0(r8)
  808550:	41c00115 	stw	r7,4(r8)
  808554:	d8801c15 	stw	r2,112(sp)
  808558:	d9001b15 	stw	r4,108(sp)
  80855c:	793ff40e 	bge	r15,r4,808530 <__alt_data_end+0xff808530>
  808560:	1001b51e 	bne	r2,zero,808c38 <___vfiprintf_internal_r+0xb78>
  808564:	843ffc04 	addi	r16,r16,-16
  808568:	000d883a 	mov	r6,zero
  80856c:	01400044 	movi	r5,1
  808570:	d811883a 	mov	r8,sp
  808574:	3c3ff316 	blt	r7,r16,808544 <__alt_data_end+0xff808544>
  808578:	8007883a 	mov	r3,r16
  80857c:	da402517 	ldw	r9,148(sp)
  808580:	db802817 	ldw	r14,160(sp)
  808584:	dc002917 	ldw	r16,164(sp)
  808588:	da802417 	ldw	r10,144(sp)
  80858c:	1885883a 	add	r2,r3,r2
  808590:	40c00115 	stw	r3,4(r8)
  808594:	42800015 	stw	r10,0(r8)
  808598:	d8801c15 	stw	r2,112(sp)
  80859c:	d9401b15 	stw	r5,108(sp)
  8085a0:	00c001c4 	movi	r3,7
  8085a4:	19426016 	blt	r3,r5,808f28 <___vfiprintf_internal_r+0xe68>
  8085a8:	d8c01d87 	ldb	r3,118(sp)
  8085ac:	42000204 	addi	r8,r8,8
  8085b0:	29000044 	addi	r4,r5,1
  8085b4:	1801b31e 	bne	r3,zero,808c84 <___vfiprintf_internal_r+0xbc4>
  8085b8:	7001c026 	beq	r14,zero,808cbc <___vfiprintf_internal_r+0xbfc>
  8085bc:	d8c01d04 	addi	r3,sp,116
  8085c0:	10800084 	addi	r2,r2,2
  8085c4:	40c00015 	stw	r3,0(r8)
  8085c8:	00c00084 	movi	r3,2
  8085cc:	40c00115 	stw	r3,4(r8)
  8085d0:	d8801c15 	stw	r2,112(sp)
  8085d4:	d9001b15 	stw	r4,108(sp)
  8085d8:	00c001c4 	movi	r3,7
  8085dc:	1902650e 	bge	r3,r4,808f74 <___vfiprintf_internal_r+0xeb4>
  8085e0:	10029a1e 	bne	r2,zero,80904c <___vfiprintf_internal_r+0xf8c>
  8085e4:	00c02004 	movi	r3,128
  8085e8:	01000044 	movi	r4,1
  8085ec:	000b883a 	mov	r5,zero
  8085f0:	d811883a 	mov	r8,sp
  8085f4:	e0c1b31e 	bne	fp,r3,808cc4 <___vfiprintf_internal_r+0xc04>
  8085f8:	8cb9c83a 	sub	fp,r17,r18
  8085fc:	0701b10e 	bge	zero,fp,808cc4 <___vfiprintf_internal_r+0xc04>
  808600:	01c00404 	movi	r7,16
  808604:	3f03890e 	bge	r7,fp,80942c <___vfiprintf_internal_r+0x136c>
  808608:	00c02074 	movhi	r3,129
  80860c:	18feda04 	addi	r3,r3,-1176
  808610:	d8c02415 	stw	r3,144(sp)
  808614:	8007883a 	mov	r3,r16
  808618:	034001c4 	movi	r13,7
  80861c:	e021883a 	mov	r16,fp
  808620:	da402515 	stw	r9,148(sp)
  808624:	1839883a 	mov	fp,r3
  808628:	00000506 	br	808640 <___vfiprintf_internal_r+0x580>
  80862c:	29800084 	addi	r6,r5,2
  808630:	42000204 	addi	r8,r8,8
  808634:	180b883a 	mov	r5,r3
  808638:	843ffc04 	addi	r16,r16,-16
  80863c:	3c000d0e 	bge	r7,r16,808674 <___vfiprintf_internal_r+0x5b4>
  808640:	10800404 	addi	r2,r2,16
  808644:	28c00044 	addi	r3,r5,1
  808648:	45c00015 	stw	r23,0(r8)
  80864c:	41c00115 	stw	r7,4(r8)
  808650:	d8801c15 	stw	r2,112(sp)
  808654:	d8c01b15 	stw	r3,108(sp)
  808658:	68fff40e 	bge	r13,r3,80862c <__alt_data_end+0xff80862c>
  80865c:	1002241e 	bne	r2,zero,808ef0 <___vfiprintf_internal_r+0xe30>
  808660:	843ffc04 	addi	r16,r16,-16
  808664:	01800044 	movi	r6,1
  808668:	000b883a 	mov	r5,zero
  80866c:	d811883a 	mov	r8,sp
  808670:	3c3ff316 	blt	r7,r16,808640 <__alt_data_end+0xff808640>
  808674:	da402517 	ldw	r9,148(sp)
  808678:	e007883a 	mov	r3,fp
  80867c:	8039883a 	mov	fp,r16
  808680:	1821883a 	mov	r16,r3
  808684:	d8c02417 	ldw	r3,144(sp)
  808688:	1705883a 	add	r2,r2,fp
  80868c:	47000115 	stw	fp,4(r8)
  808690:	40c00015 	stw	r3,0(r8)
  808694:	d8801c15 	stw	r2,112(sp)
  808698:	d9801b15 	stw	r6,108(sp)
  80869c:	00c001c4 	movi	r3,7
  8086a0:	19827616 	blt	r3,r6,80907c <___vfiprintf_internal_r+0xfbc>
  8086a4:	4cf9c83a 	sub	fp,r9,r19
  8086a8:	42000204 	addi	r8,r8,8
  8086ac:	31000044 	addi	r4,r6,1
  8086b0:	300b883a 	mov	r5,r6
  8086b4:	07018516 	blt	zero,fp,808ccc <___vfiprintf_internal_r+0xc0c>
  8086b8:	9885883a 	add	r2,r19,r2
  8086bc:	45400015 	stw	r21,0(r8)
  8086c0:	44c00115 	stw	r19,4(r8)
  8086c4:	d8801c15 	stw	r2,112(sp)
  8086c8:	d9001b15 	stw	r4,108(sp)
  8086cc:	00c001c4 	movi	r3,7
  8086d0:	1901dd0e 	bge	r3,r4,808e48 <___vfiprintf_internal_r+0xd88>
  8086d4:	1002401e 	bne	r2,zero,808fd8 <___vfiprintf_internal_r+0xf18>
  8086d8:	d8001b15 	stw	zero,108(sp)
  8086dc:	a2c0010c 	andi	r11,r20,4
  8086e0:	58000226 	beq	r11,zero,8086ec <___vfiprintf_internal_r+0x62c>
  8086e4:	8ca7c83a 	sub	r19,r17,r18
  8086e8:	04c2f216 	blt	zero,r19,8092b4 <___vfiprintf_internal_r+0x11f4>
  8086ec:	8c80010e 	bge	r17,r18,8086f4 <___vfiprintf_internal_r+0x634>
  8086f0:	9023883a 	mov	r17,r18
  8086f4:	da802317 	ldw	r10,140(sp)
  8086f8:	5455883a 	add	r10,r10,r17
  8086fc:	da802315 	stw	r10,140(sp)
  808700:	d8001b15 	stw	zero,108(sp)
  808704:	d811883a 	mov	r8,sp
  808708:	003ea206 	br	808194 <__alt_data_end+0xff808194>
  80870c:	a5000814 	ori	r20,r20,32
  808710:	80c00007 	ldb	r3,0(r16)
  808714:	003ec906 	br	80823c <__alt_data_end+0xff80823c>
  808718:	80c00007 	ldb	r3,0(r16)
  80871c:	1b030926 	beq	r3,r12,809344 <___vfiprintf_internal_r+0x1284>
  808720:	a5000414 	ori	r20,r20,16
  808724:	003ec506 	br	80823c <__alt_data_end+0xff80823c>
  808728:	21003fcc 	andi	r4,r4,255
  80872c:	20035e1e 	bne	r4,zero,8094a8 <___vfiprintf_internal_r+0x13e8>
  808730:	a080080c 	andi	r2,r20,32
  808734:	1002a526 	beq	r2,zero,8091cc <___vfiprintf_internal_r+0x110c>
  808738:	da802217 	ldw	r10,136(sp)
  80873c:	50800017 	ldw	r2,0(r10)
  808740:	da802317 	ldw	r10,140(sp)
  808744:	5007d7fa 	srai	r3,r10,31
  808748:	da802217 	ldw	r10,136(sp)
  80874c:	10c00115 	stw	r3,4(r2)
  808750:	52800104 	addi	r10,r10,4
  808754:	da802215 	stw	r10,136(sp)
  808758:	da802317 	ldw	r10,140(sp)
  80875c:	12800015 	stw	r10,0(r2)
  808760:	003e8c06 	br	808194 <__alt_data_end+0xff808194>
  808764:	21003fcc 	andi	r4,r4,255
  808768:	2003511e 	bne	r4,zero,8094b0 <___vfiprintf_internal_r+0x13f0>
  80876c:	a080080c 	andi	r2,r20,32
  808770:	1000a126 	beq	r2,zero,8089f8 <___vfiprintf_internal_r+0x938>
  808774:	da802217 	ldw	r10,136(sp)
  808778:	d8001d85 	stb	zero,118(sp)
  80877c:	50800204 	addi	r2,r10,8
  808780:	54800017 	ldw	r18,0(r10)
  808784:	54c00117 	ldw	r19,4(r10)
  808788:	4802b416 	blt	r9,zero,80925c <___vfiprintf_internal_r+0x119c>
  80878c:	013fdfc4 	movi	r4,-129
  808790:	94c6b03a 	or	r3,r18,r19
  808794:	d8802215 	stw	r2,136(sp)
  808798:	a128703a 	and	r20,r20,r4
  80879c:	1800a226 	beq	r3,zero,808a28 <___vfiprintf_internal_r+0x968>
  8087a0:	0039883a 	mov	fp,zero
  8087a4:	dd401a04 	addi	r21,sp,104
  8087a8:	9006d0fa 	srli	r3,r18,3
  8087ac:	9808977a 	slli	r4,r19,29
  8087b0:	9826d0fa 	srli	r19,r19,3
  8087b4:	948001cc 	andi	r18,r18,7
  8087b8:	90800c04 	addi	r2,r18,48
  8087bc:	ad7fffc4 	addi	r21,r21,-1
  8087c0:	20e4b03a 	or	r18,r4,r3
  8087c4:	a8800005 	stb	r2,0(r21)
  8087c8:	94c6b03a 	or	r3,r18,r19
  8087cc:	183ff61e 	bne	r3,zero,8087a8 <__alt_data_end+0xff8087a8>
  8087d0:	a0c0004c 	andi	r3,r20,1
  8087d4:	18005926 	beq	r3,zero,80893c <___vfiprintf_internal_r+0x87c>
  8087d8:	10803fcc 	andi	r2,r2,255
  8087dc:	1080201c 	xori	r2,r2,128
  8087e0:	10bfe004 	addi	r2,r2,-128
  8087e4:	00c00c04 	movi	r3,48
  8087e8:	10c05426 	beq	r2,r3,80893c <___vfiprintf_internal_r+0x87c>
  8087ec:	da801e17 	ldw	r10,120(sp)
  8087f0:	a8bfffc4 	addi	r2,r21,-1
  8087f4:	a8ffffc5 	stb	r3,-1(r21)
  8087f8:	50a7c83a 	sub	r19,r10,r2
  8087fc:	102b883a 	mov	r21,r2
  808800:	003f2f06 	br	8084c0 <__alt_data_end+0xff8084c0>
  808804:	21003fcc 	andi	r4,r4,255
  808808:	2003421e 	bne	r4,zero,809514 <___vfiprintf_internal_r+0x1454>
  80880c:	00802074 	movhi	r2,129
  808810:	10be7904 	addi	r2,r2,-1564
  808814:	d8802615 	stw	r2,152(sp)
  808818:	a080080c 	andi	r2,r20,32
  80881c:	1000aa26 	beq	r2,zero,808ac8 <___vfiprintf_internal_r+0xa08>
  808820:	da802217 	ldw	r10,136(sp)
  808824:	54800017 	ldw	r18,0(r10)
  808828:	54c00117 	ldw	r19,4(r10)
  80882c:	52800204 	addi	r10,r10,8
  808830:	da802215 	stw	r10,136(sp)
  808834:	a080004c 	andi	r2,r20,1
  808838:	1001d226 	beq	r2,zero,808f84 <___vfiprintf_internal_r+0xec4>
  80883c:	94c4b03a 	or	r2,r18,r19
  808840:	1002351e 	bne	r2,zero,809118 <___vfiprintf_internal_r+0x1058>
  808844:	d8001d85 	stb	zero,118(sp)
  808848:	48022216 	blt	r9,zero,8090d4 <___vfiprintf_internal_r+0x1014>
  80884c:	00bfdfc4 	movi	r2,-129
  808850:	a0a8703a 	and	r20,r20,r2
  808854:	003f1506 	br	8084ac <__alt_data_end+0xff8084ac>
  808858:	da802217 	ldw	r10,136(sp)
  80885c:	04800044 	movi	r18,1
  808860:	d8001d85 	stb	zero,118(sp)
  808864:	50800017 	ldw	r2,0(r10)
  808868:	52800104 	addi	r10,r10,4
  80886c:	da802215 	stw	r10,136(sp)
  808870:	d8801005 	stb	r2,64(sp)
  808874:	9027883a 	mov	r19,r18
  808878:	dd401004 	addi	r21,sp,64
  80887c:	0013883a 	mov	r9,zero
  808880:	003f1706 	br	8084e0 <__alt_data_end+0xff8084e0>
  808884:	21003fcc 	andi	r4,r4,255
  808888:	2003201e 	bne	r4,zero,80950c <___vfiprintf_internal_r+0x144c>
  80888c:	a080080c 	andi	r2,r20,32
  808890:	10004b26 	beq	r2,zero,8089c0 <___vfiprintf_internal_r+0x900>
  808894:	da802217 	ldw	r10,136(sp)
  808898:	50800117 	ldw	r2,4(r10)
  80889c:	54800017 	ldw	r18,0(r10)
  8088a0:	52800204 	addi	r10,r10,8
  8088a4:	da802215 	stw	r10,136(sp)
  8088a8:	1027883a 	mov	r19,r2
  8088ac:	10022c16 	blt	r2,zero,809160 <___vfiprintf_internal_r+0x10a0>
  8088b0:	df001d83 	ldbu	fp,118(sp)
  8088b4:	48007216 	blt	r9,zero,808a80 <___vfiprintf_internal_r+0x9c0>
  8088b8:	00ffdfc4 	movi	r3,-129
  8088bc:	94c4b03a 	or	r2,r18,r19
  8088c0:	a0e8703a 	and	r20,r20,r3
  8088c4:	1000cc26 	beq	r2,zero,808bf8 <___vfiprintf_internal_r+0xb38>
  8088c8:	98021026 	beq	r19,zero,80910c <___vfiprintf_internal_r+0x104c>
  8088cc:	dc402415 	stw	r17,144(sp)
  8088d0:	dc002515 	stw	r16,148(sp)
  8088d4:	9823883a 	mov	r17,r19
  8088d8:	9021883a 	mov	r16,r18
  8088dc:	dd401a04 	addi	r21,sp,104
  8088e0:	4825883a 	mov	r18,r9
  8088e4:	4027883a 	mov	r19,r8
  8088e8:	8009883a 	mov	r4,r16
  8088ec:	880b883a 	mov	r5,r17
  8088f0:	01800284 	movi	r6,10
  8088f4:	000f883a 	mov	r7,zero
  8088f8:	080a4a00 	call	80a4a0 <__umoddi3>
  8088fc:	10800c04 	addi	r2,r2,48
  808900:	ad7fffc4 	addi	r21,r21,-1
  808904:	8009883a 	mov	r4,r16
  808908:	880b883a 	mov	r5,r17
  80890c:	a8800005 	stb	r2,0(r21)
  808910:	01800284 	movi	r6,10
  808914:	000f883a 	mov	r7,zero
  808918:	0809f280 	call	809f28 <__udivdi3>
  80891c:	1021883a 	mov	r16,r2
  808920:	10c4b03a 	or	r2,r2,r3
  808924:	1823883a 	mov	r17,r3
  808928:	103fef1e 	bne	r2,zero,8088e8 <__alt_data_end+0xff8088e8>
  80892c:	dc402417 	ldw	r17,144(sp)
  808930:	dc002517 	ldw	r16,148(sp)
  808934:	9013883a 	mov	r9,r18
  808938:	9811883a 	mov	r8,r19
  80893c:	da801e17 	ldw	r10,120(sp)
  808940:	5567c83a 	sub	r19,r10,r21
  808944:	003ede06 	br	8084c0 <__alt_data_end+0xff8084c0>
  808948:	38803fcc 	andi	r2,r7,255
  80894c:	1080201c 	xori	r2,r2,128
  808950:	10bfe004 	addi	r2,r2,-128
  808954:	1002371e 	bne	r2,zero,809234 <___vfiprintf_internal_r+0x1174>
  808958:	01000044 	movi	r4,1
  80895c:	01c00804 	movi	r7,32
  808960:	80c00007 	ldb	r3,0(r16)
  808964:	003e3506 	br	80823c <__alt_data_end+0xff80823c>
  808968:	a5000054 	ori	r20,r20,1
  80896c:	80c00007 	ldb	r3,0(r16)
  808970:	003e3206 	br	80823c <__alt_data_end+0xff80823c>
  808974:	a5002014 	ori	r20,r20,128
  808978:	80c00007 	ldb	r3,0(r16)
  80897c:	003e2f06 	br	80823c <__alt_data_end+0xff80823c>
  808980:	8015883a 	mov	r10,r16
  808984:	0023883a 	mov	r17,zero
  808988:	18bff404 	addi	r2,r3,-48
  80898c:	50c00007 	ldb	r3,0(r10)
  808990:	8c4002a4 	muli	r17,r17,10
  808994:	84000044 	addi	r16,r16,1
  808998:	8015883a 	mov	r10,r16
  80899c:	1463883a 	add	r17,r2,r17
  8089a0:	18bff404 	addi	r2,r3,-48
  8089a4:	30bff92e 	bgeu	r6,r2,80898c <__alt_data_end+0xff80898c>
  8089a8:	003e2506 	br	808240 <__alt_data_end+0xff808240>
  8089ac:	21003fcc 	andi	r4,r4,255
  8089b0:	2002d41e 	bne	r4,zero,809504 <___vfiprintf_internal_r+0x1444>
  8089b4:	a5000414 	ori	r20,r20,16
  8089b8:	a080080c 	andi	r2,r20,32
  8089bc:	103fb51e 	bne	r2,zero,808894 <__alt_data_end+0xff808894>
  8089c0:	a080040c 	andi	r2,r20,16
  8089c4:	1001f826 	beq	r2,zero,8091a8 <___vfiprintf_internal_r+0x10e8>
  8089c8:	da802217 	ldw	r10,136(sp)
  8089cc:	54800017 	ldw	r18,0(r10)
  8089d0:	52800104 	addi	r10,r10,4
  8089d4:	da802215 	stw	r10,136(sp)
  8089d8:	9027d7fa 	srai	r19,r18,31
  8089dc:	9805883a 	mov	r2,r19
  8089e0:	003fb206 	br	8088ac <__alt_data_end+0xff8088ac>
  8089e4:	21003fcc 	andi	r4,r4,255
  8089e8:	2002c41e 	bne	r4,zero,8094fc <___vfiprintf_internal_r+0x143c>
  8089ec:	a5000414 	ori	r20,r20,16
  8089f0:	a080080c 	andi	r2,r20,32
  8089f4:	103f5f1e 	bne	r2,zero,808774 <__alt_data_end+0xff808774>
  8089f8:	a080040c 	andi	r2,r20,16
  8089fc:	10020f26 	beq	r2,zero,80923c <___vfiprintf_internal_r+0x117c>
  808a00:	da802217 	ldw	r10,136(sp)
  808a04:	d8001d85 	stb	zero,118(sp)
  808a08:	0027883a 	mov	r19,zero
  808a0c:	50800104 	addi	r2,r10,4
  808a10:	54800017 	ldw	r18,0(r10)
  808a14:	48021116 	blt	r9,zero,80925c <___vfiprintf_internal_r+0x119c>
  808a18:	00ffdfc4 	movi	r3,-129
  808a1c:	d8802215 	stw	r2,136(sp)
  808a20:	a0e8703a 	and	r20,r20,r3
  808a24:	903f5e1e 	bne	r18,zero,8087a0 <__alt_data_end+0xff8087a0>
  808a28:	0039883a 	mov	fp,zero
  808a2c:	4802a626 	beq	r9,zero,8094c8 <___vfiprintf_internal_r+0x1408>
  808a30:	0025883a 	mov	r18,zero
  808a34:	0027883a 	mov	r19,zero
  808a38:	003f5a06 	br	8087a4 <__alt_data_end+0xff8087a4>
  808a3c:	21003fcc 	andi	r4,r4,255
  808a40:	20029f1e 	bne	r4,zero,8094c0 <___vfiprintf_internal_r+0x1400>
  808a44:	a5000414 	ori	r20,r20,16
  808a48:	a080080c 	andi	r2,r20,32
  808a4c:	10005e1e 	bne	r2,zero,808bc8 <___vfiprintf_internal_r+0xb08>
  808a50:	a080040c 	andi	r2,r20,16
  808a54:	1001a21e 	bne	r2,zero,8090e0 <___vfiprintf_internal_r+0x1020>
  808a58:	a080100c 	andi	r2,r20,64
  808a5c:	d8001d85 	stb	zero,118(sp)
  808a60:	da802217 	ldw	r10,136(sp)
  808a64:	1002231e 	bne	r2,zero,8092f4 <___vfiprintf_internal_r+0x1234>
  808a68:	50800104 	addi	r2,r10,4
  808a6c:	54800017 	ldw	r18,0(r10)
  808a70:	0027883a 	mov	r19,zero
  808a74:	4801a00e 	bge	r9,zero,8090f8 <___vfiprintf_internal_r+0x1038>
  808a78:	d8802215 	stw	r2,136(sp)
  808a7c:	0039883a 	mov	fp,zero
  808a80:	94c4b03a 	or	r2,r18,r19
  808a84:	103f901e 	bne	r2,zero,8088c8 <__alt_data_end+0xff8088c8>
  808a88:	00800044 	movi	r2,1
  808a8c:	10803fcc 	andi	r2,r2,255
  808a90:	00c00044 	movi	r3,1
  808a94:	10c05926 	beq	r2,r3,808bfc <___vfiprintf_internal_r+0xb3c>
  808a98:	00c00084 	movi	r3,2
  808a9c:	10ffe41e 	bne	r2,r3,808a30 <__alt_data_end+0xff808a30>
  808aa0:	0025883a 	mov	r18,zero
  808aa4:	0027883a 	mov	r19,zero
  808aa8:	00013d06 	br	808fa0 <___vfiprintf_internal_r+0xee0>
  808aac:	21003fcc 	andi	r4,r4,255
  808ab0:	2002811e 	bne	r4,zero,8094b8 <___vfiprintf_internal_r+0x13f8>
  808ab4:	00802074 	movhi	r2,129
  808ab8:	10be7404 	addi	r2,r2,-1584
  808abc:	d8802615 	stw	r2,152(sp)
  808ac0:	a080080c 	andi	r2,r20,32
  808ac4:	103f561e 	bne	r2,zero,808820 <__alt_data_end+0xff808820>
  808ac8:	a080040c 	andi	r2,r20,16
  808acc:	1001d126 	beq	r2,zero,809214 <___vfiprintf_internal_r+0x1154>
  808ad0:	da802217 	ldw	r10,136(sp)
  808ad4:	0027883a 	mov	r19,zero
  808ad8:	54800017 	ldw	r18,0(r10)
  808adc:	52800104 	addi	r10,r10,4
  808ae0:	da802215 	stw	r10,136(sp)
  808ae4:	003f5306 	br	808834 <__alt_data_end+0xff808834>
  808ae8:	da802217 	ldw	r10,136(sp)
  808aec:	d8001d85 	stb	zero,118(sp)
  808af0:	55400017 	ldw	r21,0(r10)
  808af4:	50c00104 	addi	r3,r10,4
  808af8:	a8024226 	beq	r21,zero,809404 <___vfiprintf_internal_r+0x1344>
  808afc:	48021816 	blt	r9,zero,809360 <___vfiprintf_internal_r+0x12a0>
  808b00:	480d883a 	mov	r6,r9
  808b04:	000b883a 	mov	r5,zero
  808b08:	a809883a 	mov	r4,r21
  808b0c:	d8c02a15 	stw	r3,168(sp)
  808b10:	da002b15 	stw	r8,172(sp)
  808b14:	da402c15 	stw	r9,176(sp)
  808b18:	08061540 	call	806154 <memchr>
  808b1c:	d8c02a17 	ldw	r3,168(sp)
  808b20:	da002b17 	ldw	r8,172(sp)
  808b24:	da402c17 	ldw	r9,176(sp)
  808b28:	10024826 	beq	r2,zero,80944c <___vfiprintf_internal_r+0x138c>
  808b2c:	1567c83a 	sub	r19,r2,r21
  808b30:	df001d83 	ldbu	fp,118(sp)
  808b34:	d8c02215 	stw	r3,136(sp)
  808b38:	0013883a 	mov	r9,zero
  808b3c:	003e6006 	br	8084c0 <__alt_data_end+0xff8084c0>
  808b40:	21003fcc 	andi	r4,r4,255
  808b44:	203fc026 	beq	r4,zero,808a48 <__alt_data_end+0xff808a48>
  808b48:	d9c01d85 	stb	r7,118(sp)
  808b4c:	003fbe06 	br	808a48 <__alt_data_end+0xff808a48>
  808b50:	da802217 	ldw	r10,136(sp)
  808b54:	54400017 	ldw	r17,0(r10)
  808b58:	50800104 	addi	r2,r10,4
  808b5c:	883e3b16 	blt	r17,zero,80844c <__alt_data_end+0xff80844c>
  808b60:	d8802215 	stw	r2,136(sp)
  808b64:	80c00007 	ldb	r3,0(r16)
  808b68:	003db406 	br	80823c <__alt_data_end+0xff80823c>
  808b6c:	01000044 	movi	r4,1
  808b70:	01c00ac4 	movi	r7,43
  808b74:	80c00007 	ldb	r3,0(r16)
  808b78:	003db006 	br	80823c <__alt_data_end+0xff80823c>
  808b7c:	80c00007 	ldb	r3,0(r16)
  808b80:	82800044 	addi	r10,r16,1
  808b84:	1b423c26 	beq	r3,r13,809478 <___vfiprintf_internal_r+0x13b8>
  808b88:	18bff404 	addi	r2,r3,-48
  808b8c:	0013883a 	mov	r9,zero
  808b90:	30822b36 	bltu	r6,r2,809440 <___vfiprintf_internal_r+0x1380>
  808b94:	50c00007 	ldb	r3,0(r10)
  808b98:	4a4002a4 	muli	r9,r9,10
  808b9c:	54000044 	addi	r16,r10,1
  808ba0:	8015883a 	mov	r10,r16
  808ba4:	4893883a 	add	r9,r9,r2
  808ba8:	18bff404 	addi	r2,r3,-48
  808bac:	30bff92e 	bgeu	r6,r2,808b94 <__alt_data_end+0xff808b94>
  808bb0:	483da30e 	bge	r9,zero,808240 <__alt_data_end+0xff808240>
  808bb4:	027fffc4 	movi	r9,-1
  808bb8:	003da106 	br	808240 <__alt_data_end+0xff808240>
  808bbc:	a5001014 	ori	r20,r20,64
  808bc0:	80c00007 	ldb	r3,0(r16)
  808bc4:	003d9d06 	br	80823c <__alt_data_end+0xff80823c>
  808bc8:	da802217 	ldw	r10,136(sp)
  808bcc:	d8001d85 	stb	zero,118(sp)
  808bd0:	50c00204 	addi	r3,r10,8
  808bd4:	54800017 	ldw	r18,0(r10)
  808bd8:	54c00117 	ldw	r19,4(r10)
  808bdc:	4801ca16 	blt	r9,zero,809308 <___vfiprintf_internal_r+0x1248>
  808be0:	013fdfc4 	movi	r4,-129
  808be4:	94c4b03a 	or	r2,r18,r19
  808be8:	d8c02215 	stw	r3,136(sp)
  808bec:	a128703a 	and	r20,r20,r4
  808bf0:	0039883a 	mov	fp,zero
  808bf4:	103f341e 	bne	r2,zero,8088c8 <__alt_data_end+0xff8088c8>
  808bf8:	483e2e26 	beq	r9,zero,8084b4 <__alt_data_end+0xff8084b4>
  808bfc:	0025883a 	mov	r18,zero
  808c00:	94800c04 	addi	r18,r18,48
  808c04:	dc8019c5 	stb	r18,103(sp)
  808c08:	dcc02717 	ldw	r19,156(sp)
  808c0c:	dd4019c4 	addi	r21,sp,103
  808c10:	003e2b06 	br	8084c0 <__alt_data_end+0xff8084c0>
  808c14:	21003fcc 	andi	r4,r4,255
  808c18:	2002361e 	bne	r4,zero,8094f4 <___vfiprintf_internal_r+0x1434>
  808c1c:	1801c126 	beq	r3,zero,809324 <___vfiprintf_internal_r+0x1264>
  808c20:	04800044 	movi	r18,1
  808c24:	d8c01005 	stb	r3,64(sp)
  808c28:	d8001d85 	stb	zero,118(sp)
  808c2c:	9027883a 	mov	r19,r18
  808c30:	dd401004 	addi	r21,sp,64
  808c34:	003f1106 	br	80887c <__alt_data_end+0xff80887c>
  808c38:	d9402117 	ldw	r5,132(sp)
  808c3c:	d9002017 	ldw	r4,128(sp)
  808c40:	d9801a04 	addi	r6,sp,104
  808c44:	d9c02b15 	stw	r7,172(sp)
  808c48:	dbc02a15 	stw	r15,168(sp)
  808c4c:	0807fac0 	call	807fac <__sprint_r.part.0>
  808c50:	d9c02b17 	ldw	r7,172(sp)
  808c54:	dbc02a17 	ldw	r15,168(sp)
  808c58:	10006d1e 	bne	r2,zero,808e10 <___vfiprintf_internal_r+0xd50>
  808c5c:	d9801b17 	ldw	r6,108(sp)
  808c60:	d8801c17 	ldw	r2,112(sp)
  808c64:	d811883a 	mov	r8,sp
  808c68:	31400044 	addi	r5,r6,1
  808c6c:	003e3306 	br	80853c <__alt_data_end+0xff80853c>
  808c70:	d9401b17 	ldw	r5,108(sp)
  808c74:	d8801c17 	ldw	r2,112(sp)
  808c78:	29000044 	addi	r4,r5,1
  808c7c:	d8c01d87 	ldb	r3,118(sp)
  808c80:	183e4d26 	beq	r3,zero,8085b8 <__alt_data_end+0xff8085b8>
  808c84:	00c00044 	movi	r3,1
  808c88:	d9401d84 	addi	r5,sp,118
  808c8c:	10c5883a 	add	r2,r2,r3
  808c90:	41400015 	stw	r5,0(r8)
  808c94:	40c00115 	stw	r3,4(r8)
  808c98:	d8801c15 	stw	r2,112(sp)
  808c9c:	d9001b15 	stw	r4,108(sp)
  808ca0:	014001c4 	movi	r5,7
  808ca4:	2900a90e 	bge	r5,r4,808f4c <___vfiprintf_internal_r+0xe8c>
  808ca8:	1000da1e 	bne	r2,zero,809014 <___vfiprintf_internal_r+0xf54>
  808cac:	7000ab1e 	bne	r14,zero,808f5c <___vfiprintf_internal_r+0xe9c>
  808cb0:	000b883a 	mov	r5,zero
  808cb4:	1809883a 	mov	r4,r3
  808cb8:	d811883a 	mov	r8,sp
  808cbc:	00c02004 	movi	r3,128
  808cc0:	e0fe4d26 	beq	fp,r3,8085f8 <__alt_data_end+0xff8085f8>
  808cc4:	4cf9c83a 	sub	fp,r9,r19
  808cc8:	073e7b0e 	bge	zero,fp,8086b8 <__alt_data_end+0xff8086b8>
  808ccc:	01c00404 	movi	r7,16
  808cd0:	3f01900e 	bge	r7,fp,809314 <___vfiprintf_internal_r+0x1254>
  808cd4:	00c02074 	movhi	r3,129
  808cd8:	18feda04 	addi	r3,r3,-1176
  808cdc:	d8c02415 	stw	r3,144(sp)
  808ce0:	034001c4 	movi	r13,7
  808ce4:	00000506 	br	808cfc <___vfiprintf_internal_r+0xc3c>
  808ce8:	29000084 	addi	r4,r5,2
  808cec:	42000204 	addi	r8,r8,8
  808cf0:	180b883a 	mov	r5,r3
  808cf4:	e73ffc04 	addi	fp,fp,-16
  808cf8:	3f000d0e 	bge	r7,fp,808d30 <___vfiprintf_internal_r+0xc70>
  808cfc:	10800404 	addi	r2,r2,16
  808d00:	28c00044 	addi	r3,r5,1
  808d04:	45c00015 	stw	r23,0(r8)
  808d08:	41c00115 	stw	r7,4(r8)
  808d0c:	d8801c15 	stw	r2,112(sp)
  808d10:	d8c01b15 	stw	r3,108(sp)
  808d14:	68fff40e 	bge	r13,r3,808ce8 <__alt_data_end+0xff808ce8>
  808d18:	1000101e 	bne	r2,zero,808d5c <___vfiprintf_internal_r+0xc9c>
  808d1c:	e73ffc04 	addi	fp,fp,-16
  808d20:	01000044 	movi	r4,1
  808d24:	000b883a 	mov	r5,zero
  808d28:	d811883a 	mov	r8,sp
  808d2c:	3f3ff316 	blt	r7,fp,808cfc <__alt_data_end+0xff808cfc>
  808d30:	da802417 	ldw	r10,144(sp)
  808d34:	1705883a 	add	r2,r2,fp
  808d38:	47000115 	stw	fp,4(r8)
  808d3c:	42800015 	stw	r10,0(r8)
  808d40:	d8801c15 	stw	r2,112(sp)
  808d44:	d9001b15 	stw	r4,108(sp)
  808d48:	00c001c4 	movi	r3,7
  808d4c:	19003616 	blt	r3,r4,808e28 <___vfiprintf_internal_r+0xd68>
  808d50:	42000204 	addi	r8,r8,8
  808d54:	21000044 	addi	r4,r4,1
  808d58:	003e5706 	br	8086b8 <__alt_data_end+0xff8086b8>
  808d5c:	d9402117 	ldw	r5,132(sp)
  808d60:	d9002017 	ldw	r4,128(sp)
  808d64:	d9801a04 	addi	r6,sp,104
  808d68:	d9c02b15 	stw	r7,172(sp)
  808d6c:	db402a15 	stw	r13,168(sp)
  808d70:	0807fac0 	call	807fac <__sprint_r.part.0>
  808d74:	d9c02b17 	ldw	r7,172(sp)
  808d78:	db402a17 	ldw	r13,168(sp)
  808d7c:	1000241e 	bne	r2,zero,808e10 <___vfiprintf_internal_r+0xd50>
  808d80:	d9401b17 	ldw	r5,108(sp)
  808d84:	d8801c17 	ldw	r2,112(sp)
  808d88:	d811883a 	mov	r8,sp
  808d8c:	29000044 	addi	r4,r5,1
  808d90:	003fd806 	br	808cf4 <__alt_data_end+0xff808cf4>
  808d94:	d9401b17 	ldw	r5,108(sp)
  808d98:	00c02074 	movhi	r3,129
  808d9c:	18fede04 	addi	r3,r3,-1160
  808da0:	d8c02415 	stw	r3,144(sp)
  808da4:	29400044 	addi	r5,r5,1
  808da8:	d8c02417 	ldw	r3,144(sp)
  808dac:	14c5883a 	add	r2,r2,r19
  808db0:	44c00115 	stw	r19,4(r8)
  808db4:	40c00015 	stw	r3,0(r8)
  808db8:	d8801c15 	stw	r2,112(sp)
  808dbc:	d9401b15 	stw	r5,108(sp)
  808dc0:	00c001c4 	movi	r3,7
  808dc4:	1940070e 	bge	r3,r5,808de4 <___vfiprintf_internal_r+0xd24>
  808dc8:	103e4826 	beq	r2,zero,8086ec <__alt_data_end+0xff8086ec>
  808dcc:	d9402117 	ldw	r5,132(sp)
  808dd0:	d9002017 	ldw	r4,128(sp)
  808dd4:	d9801a04 	addi	r6,sp,104
  808dd8:	0807fac0 	call	807fac <__sprint_r.part.0>
  808ddc:	10000c1e 	bne	r2,zero,808e10 <___vfiprintf_internal_r+0xd50>
  808de0:	d8801c17 	ldw	r2,112(sp)
  808de4:	8c80010e 	bge	r17,r18,808dec <___vfiprintf_internal_r+0xd2c>
  808de8:	9023883a 	mov	r17,r18
  808dec:	da802317 	ldw	r10,140(sp)
  808df0:	5455883a 	add	r10,r10,r17
  808df4:	da802315 	stw	r10,140(sp)
  808df8:	103e4126 	beq	r2,zero,808700 <__alt_data_end+0xff808700>
  808dfc:	d9402117 	ldw	r5,132(sp)
  808e00:	d9002017 	ldw	r4,128(sp)
  808e04:	d9801a04 	addi	r6,sp,104
  808e08:	0807fac0 	call	807fac <__sprint_r.part.0>
  808e0c:	103e3c26 	beq	r2,zero,808700 <__alt_data_end+0xff808700>
  808e10:	dd002117 	ldw	r20,132(sp)
  808e14:	a080030b 	ldhu	r2,12(r20)
  808e18:	1080100c 	andi	r2,r2,64
  808e1c:	1001231e 	bne	r2,zero,8092ac <___vfiprintf_internal_r+0x11ec>
  808e20:	d8802317 	ldw	r2,140(sp)
  808e24:	003d7b06 	br	808414 <__alt_data_end+0xff808414>
  808e28:	1000991e 	bne	r2,zero,809090 <___vfiprintf_internal_r+0xfd0>
  808e2c:	00c00044 	movi	r3,1
  808e30:	9805883a 	mov	r2,r19
  808e34:	dd400015 	stw	r21,0(sp)
  808e38:	dcc00115 	stw	r19,4(sp)
  808e3c:	dcc01c15 	stw	r19,112(sp)
  808e40:	d8c01b15 	stw	r3,108(sp)
  808e44:	d811883a 	mov	r8,sp
  808e48:	42000204 	addi	r8,r8,8
  808e4c:	a2c0010c 	andi	r11,r20,4
  808e50:	583fe426 	beq	r11,zero,808de4 <__alt_data_end+0xff808de4>
  808e54:	8ca7c83a 	sub	r19,r17,r18
  808e58:	04ffe20e 	bge	zero,r19,808de4 <__alt_data_end+0xff808de4>
  808e5c:	01c00404 	movi	r7,16
  808e60:	3cffcc0e 	bge	r7,r19,808d94 <__alt_data_end+0xff808d94>
  808e64:	02802074 	movhi	r10,129
  808e68:	52bede04 	addi	r10,r10,-1160
  808e6c:	d9001b17 	ldw	r4,108(sp)
  808e70:	da802415 	stw	r10,144(sp)
  808e74:	382b883a 	mov	r21,r7
  808e78:	050001c4 	movi	r20,7
  808e7c:	df002017 	ldw	fp,128(sp)
  808e80:	00000506 	br	808e98 <___vfiprintf_internal_r+0xdd8>
  808e84:	21400084 	addi	r5,r4,2
  808e88:	42000204 	addi	r8,r8,8
  808e8c:	1809883a 	mov	r4,r3
  808e90:	9cfffc04 	addi	r19,r19,-16
  808e94:	acffc40e 	bge	r21,r19,808da8 <__alt_data_end+0xff808da8>
  808e98:	10800404 	addi	r2,r2,16
  808e9c:	20c00044 	addi	r3,r4,1
  808ea0:	45800015 	stw	r22,0(r8)
  808ea4:	45400115 	stw	r21,4(r8)
  808ea8:	d8801c15 	stw	r2,112(sp)
  808eac:	d8c01b15 	stw	r3,108(sp)
  808eb0:	a0fff40e 	bge	r20,r3,808e84 <__alt_data_end+0xff808e84>
  808eb4:	1000041e 	bne	r2,zero,808ec8 <___vfiprintf_internal_r+0xe08>
  808eb8:	01400044 	movi	r5,1
  808ebc:	0009883a 	mov	r4,zero
  808ec0:	d811883a 	mov	r8,sp
  808ec4:	003ff206 	br	808e90 <__alt_data_end+0xff808e90>
  808ec8:	d9402117 	ldw	r5,132(sp)
  808ecc:	d9801a04 	addi	r6,sp,104
  808ed0:	e009883a 	mov	r4,fp
  808ed4:	0807fac0 	call	807fac <__sprint_r.part.0>
  808ed8:	103fcd1e 	bne	r2,zero,808e10 <__alt_data_end+0xff808e10>
  808edc:	d9001b17 	ldw	r4,108(sp)
  808ee0:	d8801c17 	ldw	r2,112(sp)
  808ee4:	d811883a 	mov	r8,sp
  808ee8:	21400044 	addi	r5,r4,1
  808eec:	003fe806 	br	808e90 <__alt_data_end+0xff808e90>
  808ef0:	d9402117 	ldw	r5,132(sp)
  808ef4:	d9002017 	ldw	r4,128(sp)
  808ef8:	d9801a04 	addi	r6,sp,104
  808efc:	d9c02b15 	stw	r7,172(sp)
  808f00:	db402a15 	stw	r13,168(sp)
  808f04:	0807fac0 	call	807fac <__sprint_r.part.0>
  808f08:	d9c02b17 	ldw	r7,172(sp)
  808f0c:	db402a17 	ldw	r13,168(sp)
  808f10:	103fbf1e 	bne	r2,zero,808e10 <__alt_data_end+0xff808e10>
  808f14:	d9401b17 	ldw	r5,108(sp)
  808f18:	d8801c17 	ldw	r2,112(sp)
  808f1c:	d811883a 	mov	r8,sp
  808f20:	29800044 	addi	r6,r5,1
  808f24:	003dc406 	br	808638 <__alt_data_end+0xff808638>
  808f28:	1000d21e 	bne	r2,zero,809274 <___vfiprintf_internal_r+0x11b4>
  808f2c:	d8c01d87 	ldb	r3,118(sp)
  808f30:	18009526 	beq	r3,zero,809188 <___vfiprintf_internal_r+0x10c8>
  808f34:	00800044 	movi	r2,1
  808f38:	d8c01d84 	addi	r3,sp,118
  808f3c:	1009883a 	mov	r4,r2
  808f40:	d8c00015 	stw	r3,0(sp)
  808f44:	d8800115 	stw	r2,4(sp)
  808f48:	d811883a 	mov	r8,sp
  808f4c:	200b883a 	mov	r5,r4
  808f50:	42000204 	addi	r8,r8,8
  808f54:	21000044 	addi	r4,r4,1
  808f58:	003d9706 	br	8085b8 <__alt_data_end+0xff8085b8>
  808f5c:	d9001d04 	addi	r4,sp,116
  808f60:	00800084 	movi	r2,2
  808f64:	d9000015 	stw	r4,0(sp)
  808f68:	d8800115 	stw	r2,4(sp)
  808f6c:	1809883a 	mov	r4,r3
  808f70:	d811883a 	mov	r8,sp
  808f74:	200b883a 	mov	r5,r4
  808f78:	42000204 	addi	r8,r8,8
  808f7c:	21000044 	addi	r4,r4,1
  808f80:	003f4e06 	br	808cbc <__alt_data_end+0xff808cbc>
  808f84:	d8001d85 	stb	zero,118(sp)
  808f88:	48005016 	blt	r9,zero,8090cc <___vfiprintf_internal_r+0x100c>
  808f8c:	00ffdfc4 	movi	r3,-129
  808f90:	94c4b03a 	or	r2,r18,r19
  808f94:	a0e8703a 	and	r20,r20,r3
  808f98:	103d4426 	beq	r2,zero,8084ac <__alt_data_end+0xff8084ac>
  808f9c:	0039883a 	mov	fp,zero
  808fa0:	d9002617 	ldw	r4,152(sp)
  808fa4:	dd401a04 	addi	r21,sp,104
  808fa8:	908003cc 	andi	r2,r18,15
  808fac:	9806973a 	slli	r3,r19,28
  808fb0:	2085883a 	add	r2,r4,r2
  808fb4:	9024d13a 	srli	r18,r18,4
  808fb8:	10800003 	ldbu	r2,0(r2)
  808fbc:	9826d13a 	srli	r19,r19,4
  808fc0:	ad7fffc4 	addi	r21,r21,-1
  808fc4:	1ca4b03a 	or	r18,r3,r18
  808fc8:	a8800005 	stb	r2,0(r21)
  808fcc:	94c4b03a 	or	r2,r18,r19
  808fd0:	103ff51e 	bne	r2,zero,808fa8 <__alt_data_end+0xff808fa8>
  808fd4:	003e5906 	br	80893c <__alt_data_end+0xff80893c>
  808fd8:	d9402117 	ldw	r5,132(sp)
  808fdc:	d9002017 	ldw	r4,128(sp)
  808fe0:	d9801a04 	addi	r6,sp,104
  808fe4:	0807fac0 	call	807fac <__sprint_r.part.0>
  808fe8:	103f891e 	bne	r2,zero,808e10 <__alt_data_end+0xff808e10>
  808fec:	d8801c17 	ldw	r2,112(sp)
  808ff0:	d811883a 	mov	r8,sp
  808ff4:	003f9506 	br	808e4c <__alt_data_end+0xff808e4c>
  808ff8:	d9402117 	ldw	r5,132(sp)
  808ffc:	d9002017 	ldw	r4,128(sp)
  809000:	d9801a04 	addi	r6,sp,104
  809004:	0807fac0 	call	807fac <__sprint_r.part.0>
  809008:	103f811e 	bne	r2,zero,808e10 <__alt_data_end+0xff808e10>
  80900c:	d811883a 	mov	r8,sp
  809010:	003ced06 	br	8083c8 <__alt_data_end+0xff8083c8>
  809014:	d9402117 	ldw	r5,132(sp)
  809018:	d9002017 	ldw	r4,128(sp)
  80901c:	d9801a04 	addi	r6,sp,104
  809020:	da402c15 	stw	r9,176(sp)
  809024:	db802a15 	stw	r14,168(sp)
  809028:	0807fac0 	call	807fac <__sprint_r.part.0>
  80902c:	da402c17 	ldw	r9,176(sp)
  809030:	db802a17 	ldw	r14,168(sp)
  809034:	103f761e 	bne	r2,zero,808e10 <__alt_data_end+0xff808e10>
  809038:	d9401b17 	ldw	r5,108(sp)
  80903c:	d8801c17 	ldw	r2,112(sp)
  809040:	d811883a 	mov	r8,sp
  809044:	29000044 	addi	r4,r5,1
  809048:	003d5b06 	br	8085b8 <__alt_data_end+0xff8085b8>
  80904c:	d9402117 	ldw	r5,132(sp)
  809050:	d9002017 	ldw	r4,128(sp)
  809054:	d9801a04 	addi	r6,sp,104
  809058:	da402c15 	stw	r9,176(sp)
  80905c:	0807fac0 	call	807fac <__sprint_r.part.0>
  809060:	da402c17 	ldw	r9,176(sp)
  809064:	103f6a1e 	bne	r2,zero,808e10 <__alt_data_end+0xff808e10>
  809068:	d9401b17 	ldw	r5,108(sp)
  80906c:	d8801c17 	ldw	r2,112(sp)
  809070:	d811883a 	mov	r8,sp
  809074:	29000044 	addi	r4,r5,1
  809078:	003f1006 	br	808cbc <__alt_data_end+0xff808cbc>
  80907c:	1000c31e 	bne	r2,zero,80938c <___vfiprintf_internal_r+0x12cc>
  809080:	01000044 	movi	r4,1
  809084:	000b883a 	mov	r5,zero
  809088:	d811883a 	mov	r8,sp
  80908c:	003f0d06 	br	808cc4 <__alt_data_end+0xff808cc4>
  809090:	d9402117 	ldw	r5,132(sp)
  809094:	d9002017 	ldw	r4,128(sp)
  809098:	d9801a04 	addi	r6,sp,104
  80909c:	0807fac0 	call	807fac <__sprint_r.part.0>
  8090a0:	103f5b1e 	bne	r2,zero,808e10 <__alt_data_end+0xff808e10>
  8090a4:	d9001b17 	ldw	r4,108(sp)
  8090a8:	d8801c17 	ldw	r2,112(sp)
  8090ac:	d811883a 	mov	r8,sp
  8090b0:	21000044 	addi	r4,r4,1
  8090b4:	003d8006 	br	8086b8 <__alt_data_end+0xff8086b8>
  8090b8:	01002074 	movhi	r4,129
  8090bc:	213e7904 	addi	r4,r4,-1564
  8090c0:	d9002615 	stw	r4,152(sp)
  8090c4:	d8c02215 	stw	r3,136(sp)
  8090c8:	1029883a 	mov	r20,r2
  8090cc:	94c4b03a 	or	r2,r18,r19
  8090d0:	103fb21e 	bne	r2,zero,808f9c <__alt_data_end+0xff808f9c>
  8090d4:	0039883a 	mov	fp,zero
  8090d8:	00800084 	movi	r2,2
  8090dc:	003e6b06 	br	808a8c <__alt_data_end+0xff808a8c>
  8090e0:	da802217 	ldw	r10,136(sp)
  8090e4:	d8001d85 	stb	zero,118(sp)
  8090e8:	0027883a 	mov	r19,zero
  8090ec:	50800104 	addi	r2,r10,4
  8090f0:	54800017 	ldw	r18,0(r10)
  8090f4:	483e6016 	blt	r9,zero,808a78 <__alt_data_end+0xff808a78>
  8090f8:	00ffdfc4 	movi	r3,-129
  8090fc:	d8802215 	stw	r2,136(sp)
  809100:	a0e8703a 	and	r20,r20,r3
  809104:	0039883a 	mov	fp,zero
  809108:	903ebb26 	beq	r18,zero,808bf8 <__alt_data_end+0xff808bf8>
  80910c:	00800244 	movi	r2,9
  809110:	14bdee36 	bltu	r2,r18,8088cc <__alt_data_end+0xff8088cc>
  809114:	003eba06 	br	808c00 <__alt_data_end+0xff808c00>
  809118:	00800c04 	movi	r2,48
  80911c:	d8c01d45 	stb	r3,117(sp)
  809120:	d8801d05 	stb	r2,116(sp)
  809124:	d8001d85 	stb	zero,118(sp)
  809128:	a0c00094 	ori	r3,r20,2
  80912c:	4800a916 	blt	r9,zero,8093d4 <___vfiprintf_internal_r+0x1314>
  809130:	00bfdfc4 	movi	r2,-129
  809134:	a096703a 	and	r11,r20,r2
  809138:	5d000094 	ori	r20,r11,2
  80913c:	0039883a 	mov	fp,zero
  809140:	003f9706 	br	808fa0 <__alt_data_end+0xff808fa0>
  809144:	8025883a 	mov	r18,r16
  809148:	003c2e06 	br	808204 <__alt_data_end+0xff808204>
  80914c:	00802074 	movhi	r2,129
  809150:	10be7904 	addi	r2,r2,-1564
  809154:	0039883a 	mov	fp,zero
  809158:	d8802615 	stw	r2,152(sp)
  80915c:	003f9006 	br	808fa0 <__alt_data_end+0xff808fa0>
  809160:	04a5c83a 	sub	r18,zero,r18
  809164:	07000b44 	movi	fp,45
  809168:	9004c03a 	cmpne	r2,r18,zero
  80916c:	04e7c83a 	sub	r19,zero,r19
  809170:	df001d85 	stb	fp,118(sp)
  809174:	98a7c83a 	sub	r19,r19,r2
  809178:	48009f16 	blt	r9,zero,8093f8 <___vfiprintf_internal_r+0x1338>
  80917c:	00bfdfc4 	movi	r2,-129
  809180:	a0a8703a 	and	r20,r20,r2
  809184:	003dd006 	br	8088c8 <__alt_data_end+0xff8088c8>
  809188:	70004c26 	beq	r14,zero,8092bc <___vfiprintf_internal_r+0x11fc>
  80918c:	00800084 	movi	r2,2
  809190:	d8c01d04 	addi	r3,sp,116
  809194:	d8c00015 	stw	r3,0(sp)
  809198:	d8800115 	stw	r2,4(sp)
  80919c:	01000044 	movi	r4,1
  8091a0:	d811883a 	mov	r8,sp
  8091a4:	003f7306 	br	808f74 <__alt_data_end+0xff808f74>
  8091a8:	a080100c 	andi	r2,r20,64
  8091ac:	da802217 	ldw	r10,136(sp)
  8091b0:	103e0626 	beq	r2,zero,8089cc <__alt_data_end+0xff8089cc>
  8091b4:	5480000f 	ldh	r18,0(r10)
  8091b8:	52800104 	addi	r10,r10,4
  8091bc:	da802215 	stw	r10,136(sp)
  8091c0:	9027d7fa 	srai	r19,r18,31
  8091c4:	9805883a 	mov	r2,r19
  8091c8:	003db806 	br	8088ac <__alt_data_end+0xff8088ac>
  8091cc:	a080040c 	andi	r2,r20,16
  8091d0:	1000091e 	bne	r2,zero,8091f8 <___vfiprintf_internal_r+0x1138>
  8091d4:	a2c0100c 	andi	r11,r20,64
  8091d8:	58000726 	beq	r11,zero,8091f8 <___vfiprintf_internal_r+0x1138>
  8091dc:	da802217 	ldw	r10,136(sp)
  8091e0:	50800017 	ldw	r2,0(r10)
  8091e4:	52800104 	addi	r10,r10,4
  8091e8:	da802215 	stw	r10,136(sp)
  8091ec:	da802317 	ldw	r10,140(sp)
  8091f0:	1280000d 	sth	r10,0(r2)
  8091f4:	003be706 	br	808194 <__alt_data_end+0xff808194>
  8091f8:	da802217 	ldw	r10,136(sp)
  8091fc:	50800017 	ldw	r2,0(r10)
  809200:	52800104 	addi	r10,r10,4
  809204:	da802215 	stw	r10,136(sp)
  809208:	da802317 	ldw	r10,140(sp)
  80920c:	12800015 	stw	r10,0(r2)
  809210:	003be006 	br	808194 <__alt_data_end+0xff808194>
  809214:	a080100c 	andi	r2,r20,64
  809218:	da802217 	ldw	r10,136(sp)
  80921c:	10003026 	beq	r2,zero,8092e0 <___vfiprintf_internal_r+0x1220>
  809220:	5480000b 	ldhu	r18,0(r10)
  809224:	52800104 	addi	r10,r10,4
  809228:	0027883a 	mov	r19,zero
  80922c:	da802215 	stw	r10,136(sp)
  809230:	003d8006 	br	808834 <__alt_data_end+0xff808834>
  809234:	80c00007 	ldb	r3,0(r16)
  809238:	003c0006 	br	80823c <__alt_data_end+0xff80823c>
  80923c:	a080100c 	andi	r2,r20,64
  809240:	d8001d85 	stb	zero,118(sp)
  809244:	da802217 	ldw	r10,136(sp)
  809248:	1000201e 	bne	r2,zero,8092cc <___vfiprintf_internal_r+0x120c>
  80924c:	50800104 	addi	r2,r10,4
  809250:	54800017 	ldw	r18,0(r10)
  809254:	0027883a 	mov	r19,zero
  809258:	483def0e 	bge	r9,zero,808a18 <__alt_data_end+0xff808a18>
  80925c:	94c6b03a 	or	r3,r18,r19
  809260:	d8802215 	stw	r2,136(sp)
  809264:	183d4e1e 	bne	r3,zero,8087a0 <__alt_data_end+0xff8087a0>
  809268:	0039883a 	mov	fp,zero
  80926c:	0005883a 	mov	r2,zero
  809270:	003e0606 	br	808a8c <__alt_data_end+0xff808a8c>
  809274:	d9402117 	ldw	r5,132(sp)
  809278:	d9002017 	ldw	r4,128(sp)
  80927c:	d9801a04 	addi	r6,sp,104
  809280:	da402c15 	stw	r9,176(sp)
  809284:	db802a15 	stw	r14,168(sp)
  809288:	0807fac0 	call	807fac <__sprint_r.part.0>
  80928c:	da402c17 	ldw	r9,176(sp)
  809290:	db802a17 	ldw	r14,168(sp)
  809294:	103ede1e 	bne	r2,zero,808e10 <__alt_data_end+0xff808e10>
  809298:	d9401b17 	ldw	r5,108(sp)
  80929c:	d8801c17 	ldw	r2,112(sp)
  8092a0:	d811883a 	mov	r8,sp
  8092a4:	29000044 	addi	r4,r5,1
  8092a8:	003e7406 	br	808c7c <__alt_data_end+0xff808c7c>
  8092ac:	00bfffc4 	movi	r2,-1
  8092b0:	003c5806 	br	808414 <__alt_data_end+0xff808414>
  8092b4:	d811883a 	mov	r8,sp
  8092b8:	003ee806 	br	808e5c <__alt_data_end+0xff808e5c>
  8092bc:	000b883a 	mov	r5,zero
  8092c0:	01000044 	movi	r4,1
  8092c4:	d811883a 	mov	r8,sp
  8092c8:	003e7c06 	br	808cbc <__alt_data_end+0xff808cbc>
  8092cc:	50800104 	addi	r2,r10,4
  8092d0:	5480000b 	ldhu	r18,0(r10)
  8092d4:	0027883a 	mov	r19,zero
  8092d8:	483dcf0e 	bge	r9,zero,808a18 <__alt_data_end+0xff808a18>
  8092dc:	003fdf06 	br	80925c <__alt_data_end+0xff80925c>
  8092e0:	54800017 	ldw	r18,0(r10)
  8092e4:	52800104 	addi	r10,r10,4
  8092e8:	0027883a 	mov	r19,zero
  8092ec:	da802215 	stw	r10,136(sp)
  8092f0:	003d5006 	br	808834 <__alt_data_end+0xff808834>
  8092f4:	50800104 	addi	r2,r10,4
  8092f8:	5480000b 	ldhu	r18,0(r10)
  8092fc:	0027883a 	mov	r19,zero
  809300:	483f7d0e 	bge	r9,zero,8090f8 <__alt_data_end+0xff8090f8>
  809304:	003ddc06 	br	808a78 <__alt_data_end+0xff808a78>
  809308:	d8c02215 	stw	r3,136(sp)
  80930c:	0039883a 	mov	fp,zero
  809310:	003ddb06 	br	808a80 <__alt_data_end+0xff808a80>
  809314:	02802074 	movhi	r10,129
  809318:	52beda04 	addi	r10,r10,-1176
  80931c:	da802415 	stw	r10,144(sp)
  809320:	003e8306 	br	808d30 <__alt_data_end+0xff808d30>
  809324:	d8801c17 	ldw	r2,112(sp)
  809328:	dd002117 	ldw	r20,132(sp)
  80932c:	103eb926 	beq	r2,zero,808e14 <__alt_data_end+0xff808e14>
  809330:	d9002017 	ldw	r4,128(sp)
  809334:	d9801a04 	addi	r6,sp,104
  809338:	a00b883a 	mov	r5,r20
  80933c:	0807fac0 	call	807fac <__sprint_r.part.0>
  809340:	003eb406 	br	808e14 <__alt_data_end+0xff808e14>
  809344:	80c00043 	ldbu	r3,1(r16)
  809348:	a5000814 	ori	r20,r20,32
  80934c:	84000044 	addi	r16,r16,1
  809350:	18c03fcc 	andi	r3,r3,255
  809354:	18c0201c 	xori	r3,r3,128
  809358:	18ffe004 	addi	r3,r3,-128
  80935c:	003bb706 	br	80823c <__alt_data_end+0xff80823c>
  809360:	a809883a 	mov	r4,r21
  809364:	d8c02a15 	stw	r3,168(sp)
  809368:	da002b15 	stw	r8,172(sp)
  80936c:	08008ac0 	call	8008ac <strlen>
  809370:	d8c02a17 	ldw	r3,168(sp)
  809374:	1027883a 	mov	r19,r2
  809378:	df001d83 	ldbu	fp,118(sp)
  80937c:	d8c02215 	stw	r3,136(sp)
  809380:	0013883a 	mov	r9,zero
  809384:	da002b17 	ldw	r8,172(sp)
  809388:	003c4d06 	br	8084c0 <__alt_data_end+0xff8084c0>
  80938c:	d9402117 	ldw	r5,132(sp)
  809390:	d9002017 	ldw	r4,128(sp)
  809394:	d9801a04 	addi	r6,sp,104
  809398:	da402c15 	stw	r9,176(sp)
  80939c:	0807fac0 	call	807fac <__sprint_r.part.0>
  8093a0:	da402c17 	ldw	r9,176(sp)
  8093a4:	103e9a1e 	bne	r2,zero,808e10 <__alt_data_end+0xff808e10>
  8093a8:	d9401b17 	ldw	r5,108(sp)
  8093ac:	d8801c17 	ldw	r2,112(sp)
  8093b0:	d811883a 	mov	r8,sp
  8093b4:	29000044 	addi	r4,r5,1
  8093b8:	003e4206 	br	808cc4 <__alt_data_end+0xff808cc4>
  8093bc:	d9401b17 	ldw	r5,108(sp)
  8093c0:	01002074 	movhi	r4,129
  8093c4:	213ede04 	addi	r4,r4,-1160
  8093c8:	d9002415 	stw	r4,144(sp)
  8093cc:	29400044 	addi	r5,r5,1
  8093d0:	003c6d06 	br	808588 <__alt_data_end+0xff808588>
  8093d4:	0039883a 	mov	fp,zero
  8093d8:	00800084 	movi	r2,2
  8093dc:	10803fcc 	andi	r2,r2,255
  8093e0:	01000044 	movi	r4,1
  8093e4:	11001e26 	beq	r2,r4,809460 <___vfiprintf_internal_r+0x13a0>
  8093e8:	01000084 	movi	r4,2
  8093ec:	11001e1e 	bne	r2,r4,809468 <___vfiprintf_internal_r+0x13a8>
  8093f0:	1829883a 	mov	r20,r3
  8093f4:	003eea06 	br	808fa0 <__alt_data_end+0xff808fa0>
  8093f8:	a007883a 	mov	r3,r20
  8093fc:	00800044 	movi	r2,1
  809400:	003ff606 	br	8093dc <__alt_data_end+0xff8093dc>
  809404:	00800184 	movi	r2,6
  809408:	1240012e 	bgeu	r2,r9,809410 <___vfiprintf_internal_r+0x1350>
  80940c:	1013883a 	mov	r9,r2
  809410:	4827883a 	mov	r19,r9
  809414:	4825883a 	mov	r18,r9
  809418:	48001516 	blt	r9,zero,809470 <___vfiprintf_internal_r+0x13b0>
  80941c:	05402074 	movhi	r21,129
  809420:	d8c02215 	stw	r3,136(sp)
  809424:	ad7e7e04 	addi	r21,r21,-1544
  809428:	003d1406 	br	80887c <__alt_data_end+0xff80887c>
  80942c:	02802074 	movhi	r10,129
  809430:	52beda04 	addi	r10,r10,-1176
  809434:	da802415 	stw	r10,144(sp)
  809438:	200d883a 	mov	r6,r4
  80943c:	003c9106 	br	808684 <__alt_data_end+0xff808684>
  809440:	5021883a 	mov	r16,r10
  809444:	0013883a 	mov	r9,zero
  809448:	003b7d06 	br	808240 <__alt_data_end+0xff808240>
  80944c:	4827883a 	mov	r19,r9
  809450:	df001d83 	ldbu	fp,118(sp)
  809454:	d8c02215 	stw	r3,136(sp)
  809458:	0013883a 	mov	r9,zero
  80945c:	003c1806 	br	8084c0 <__alt_data_end+0xff8084c0>
  809460:	1829883a 	mov	r20,r3
  809464:	003d1806 	br	8088c8 <__alt_data_end+0xff8088c8>
  809468:	1829883a 	mov	r20,r3
  80946c:	003ccd06 	br	8087a4 <__alt_data_end+0xff8087a4>
  809470:	0025883a 	mov	r18,zero
  809474:	003fe906 	br	80941c <__alt_data_end+0xff80941c>
  809478:	d8802217 	ldw	r2,136(sp)
  80947c:	80c00043 	ldbu	r3,1(r16)
  809480:	5021883a 	mov	r16,r10
  809484:	12400017 	ldw	r9,0(r2)
  809488:	10800104 	addi	r2,r2,4
  80948c:	d8802215 	stw	r2,136(sp)
  809490:	483faf0e 	bge	r9,zero,809350 <__alt_data_end+0xff809350>
  809494:	18c03fcc 	andi	r3,r3,255
  809498:	18c0201c 	xori	r3,r3,128
  80949c:	027fffc4 	movi	r9,-1
  8094a0:	18ffe004 	addi	r3,r3,-128
  8094a4:	003b6506 	br	80823c <__alt_data_end+0xff80823c>
  8094a8:	d9c01d85 	stb	r7,118(sp)
  8094ac:	003ca006 	br	808730 <__alt_data_end+0xff808730>
  8094b0:	d9c01d85 	stb	r7,118(sp)
  8094b4:	003cad06 	br	80876c <__alt_data_end+0xff80876c>
  8094b8:	d9c01d85 	stb	r7,118(sp)
  8094bc:	003d7d06 	br	808ab4 <__alt_data_end+0xff808ab4>
  8094c0:	d9c01d85 	stb	r7,118(sp)
  8094c4:	003d5f06 	br	808a44 <__alt_data_end+0xff808a44>
  8094c8:	a080004c 	andi	r2,r20,1
  8094cc:	0039883a 	mov	fp,zero
  8094d0:	10000526 	beq	r2,zero,8094e8 <___vfiprintf_internal_r+0x1428>
  8094d4:	00800c04 	movi	r2,48
  8094d8:	d88019c5 	stb	r2,103(sp)
  8094dc:	dcc02717 	ldw	r19,156(sp)
  8094e0:	dd4019c4 	addi	r21,sp,103
  8094e4:	003bf606 	br	8084c0 <__alt_data_end+0xff8084c0>
  8094e8:	0027883a 	mov	r19,zero
  8094ec:	dd401a04 	addi	r21,sp,104
  8094f0:	003bf306 	br	8084c0 <__alt_data_end+0xff8084c0>
  8094f4:	d9c01d85 	stb	r7,118(sp)
  8094f8:	003dc806 	br	808c1c <__alt_data_end+0xff808c1c>
  8094fc:	d9c01d85 	stb	r7,118(sp)
  809500:	003d3a06 	br	8089ec <__alt_data_end+0xff8089ec>
  809504:	d9c01d85 	stb	r7,118(sp)
  809508:	003d2a06 	br	8089b4 <__alt_data_end+0xff8089b4>
  80950c:	d9c01d85 	stb	r7,118(sp)
  809510:	003cde06 	br	80888c <__alt_data_end+0xff80888c>
  809514:	d9c01d85 	stb	r7,118(sp)
  809518:	003cbc06 	br	80880c <__alt_data_end+0xff80880c>

0080951c <__vfiprintf_internal>:
  80951c:	00802074 	movhi	r2,129
  809520:	1085d904 	addi	r2,r2,5988
  809524:	300f883a 	mov	r7,r6
  809528:	280d883a 	mov	r6,r5
  80952c:	200b883a 	mov	r5,r4
  809530:	11000017 	ldw	r4,0(r2)
  809534:	08080c01 	jmpi	8080c0 <___vfiprintf_internal_r>

00809538 <__sbprintf>:
  809538:	2880030b 	ldhu	r2,12(r5)
  80953c:	2ac01917 	ldw	r11,100(r5)
  809540:	2a80038b 	ldhu	r10,14(r5)
  809544:	2a400717 	ldw	r9,28(r5)
  809548:	2a000917 	ldw	r8,36(r5)
  80954c:	defee204 	addi	sp,sp,-1144
  809550:	00c10004 	movi	r3,1024
  809554:	dc011a15 	stw	r16,1128(sp)
  809558:	10bfff4c 	andi	r2,r2,65533
  80955c:	2821883a 	mov	r16,r5
  809560:	d8cb883a 	add	r5,sp,r3
  809564:	dc811c15 	stw	r18,1136(sp)
  809568:	dc411b15 	stw	r17,1132(sp)
  80956c:	dfc11d15 	stw	ra,1140(sp)
  809570:	2025883a 	mov	r18,r4
  809574:	d881030d 	sth	r2,1036(sp)
  809578:	dac11915 	stw	r11,1124(sp)
  80957c:	da81038d 	sth	r10,1038(sp)
  809580:	da410715 	stw	r9,1052(sp)
  809584:	da010915 	stw	r8,1060(sp)
  809588:	dec10015 	stw	sp,1024(sp)
  80958c:	dec10415 	stw	sp,1040(sp)
  809590:	d8c10215 	stw	r3,1032(sp)
  809594:	d8c10515 	stw	r3,1044(sp)
  809598:	d8010615 	stw	zero,1048(sp)
  80959c:	08080c00 	call	8080c0 <___vfiprintf_internal_r>
  8095a0:	1023883a 	mov	r17,r2
  8095a4:	10000416 	blt	r2,zero,8095b8 <__sbprintf+0x80>
  8095a8:	d9410004 	addi	r5,sp,1024
  8095ac:	9009883a 	mov	r4,r18
  8095b0:	080480c0 	call	80480c <_fflush_r>
  8095b4:	10000d1e 	bne	r2,zero,8095ec <__sbprintf+0xb4>
  8095b8:	d881030b 	ldhu	r2,1036(sp)
  8095bc:	1080100c 	andi	r2,r2,64
  8095c0:	10000326 	beq	r2,zero,8095d0 <__sbprintf+0x98>
  8095c4:	8080030b 	ldhu	r2,12(r16)
  8095c8:	10801014 	ori	r2,r2,64
  8095cc:	8080030d 	sth	r2,12(r16)
  8095d0:	8805883a 	mov	r2,r17
  8095d4:	dfc11d17 	ldw	ra,1140(sp)
  8095d8:	dc811c17 	ldw	r18,1136(sp)
  8095dc:	dc411b17 	ldw	r17,1132(sp)
  8095e0:	dc011a17 	ldw	r16,1128(sp)
  8095e4:	dec11e04 	addi	sp,sp,1144
  8095e8:	f800283a 	ret
  8095ec:	047fffc4 	movi	r17,-1
  8095f0:	003ff106 	br	8095b8 <__alt_data_end+0xff8095b8>

008095f4 <__swbuf_r>:
  8095f4:	defffb04 	addi	sp,sp,-20
  8095f8:	dcc00315 	stw	r19,12(sp)
  8095fc:	dc800215 	stw	r18,8(sp)
  809600:	dc000015 	stw	r16,0(sp)
  809604:	dfc00415 	stw	ra,16(sp)
  809608:	dc400115 	stw	r17,4(sp)
  80960c:	2025883a 	mov	r18,r4
  809610:	2827883a 	mov	r19,r5
  809614:	3021883a 	mov	r16,r6
  809618:	20000226 	beq	r4,zero,809624 <__swbuf_r+0x30>
  80961c:	20800e17 	ldw	r2,56(r4)
  809620:	10004226 	beq	r2,zero,80972c <__swbuf_r+0x138>
  809624:	80800617 	ldw	r2,24(r16)
  809628:	8100030b 	ldhu	r4,12(r16)
  80962c:	80800215 	stw	r2,8(r16)
  809630:	2080020c 	andi	r2,r4,8
  809634:	10003626 	beq	r2,zero,809710 <__swbuf_r+0x11c>
  809638:	80c00417 	ldw	r3,16(r16)
  80963c:	18003426 	beq	r3,zero,809710 <__swbuf_r+0x11c>
  809640:	2088000c 	andi	r2,r4,8192
  809644:	9c403fcc 	andi	r17,r19,255
  809648:	10001a26 	beq	r2,zero,8096b4 <__swbuf_r+0xc0>
  80964c:	80800017 	ldw	r2,0(r16)
  809650:	81000517 	ldw	r4,20(r16)
  809654:	10c7c83a 	sub	r3,r2,r3
  809658:	1900200e 	bge	r3,r4,8096dc <__swbuf_r+0xe8>
  80965c:	18c00044 	addi	r3,r3,1
  809660:	81000217 	ldw	r4,8(r16)
  809664:	11400044 	addi	r5,r2,1
  809668:	81400015 	stw	r5,0(r16)
  80966c:	213fffc4 	addi	r4,r4,-1
  809670:	81000215 	stw	r4,8(r16)
  809674:	14c00005 	stb	r19,0(r2)
  809678:	80800517 	ldw	r2,20(r16)
  80967c:	10c01e26 	beq	r2,r3,8096f8 <__swbuf_r+0x104>
  809680:	8080030b 	ldhu	r2,12(r16)
  809684:	1080004c 	andi	r2,r2,1
  809688:	10000226 	beq	r2,zero,809694 <__swbuf_r+0xa0>
  80968c:	00800284 	movi	r2,10
  809690:	88801926 	beq	r17,r2,8096f8 <__swbuf_r+0x104>
  809694:	8805883a 	mov	r2,r17
  809698:	dfc00417 	ldw	ra,16(sp)
  80969c:	dcc00317 	ldw	r19,12(sp)
  8096a0:	dc800217 	ldw	r18,8(sp)
  8096a4:	dc400117 	ldw	r17,4(sp)
  8096a8:	dc000017 	ldw	r16,0(sp)
  8096ac:	dec00504 	addi	sp,sp,20
  8096b0:	f800283a 	ret
  8096b4:	81401917 	ldw	r5,100(r16)
  8096b8:	00b7ffc4 	movi	r2,-8193
  8096bc:	21080014 	ori	r4,r4,8192
  8096c0:	2884703a 	and	r2,r5,r2
  8096c4:	80801915 	stw	r2,100(r16)
  8096c8:	80800017 	ldw	r2,0(r16)
  8096cc:	8100030d 	sth	r4,12(r16)
  8096d0:	81000517 	ldw	r4,20(r16)
  8096d4:	10c7c83a 	sub	r3,r2,r3
  8096d8:	193fe016 	blt	r3,r4,80965c <__alt_data_end+0xff80965c>
  8096dc:	800b883a 	mov	r5,r16
  8096e0:	9009883a 	mov	r4,r18
  8096e4:	080480c0 	call	80480c <_fflush_r>
  8096e8:	1000071e 	bne	r2,zero,809708 <__swbuf_r+0x114>
  8096ec:	80800017 	ldw	r2,0(r16)
  8096f0:	00c00044 	movi	r3,1
  8096f4:	003fda06 	br	809660 <__alt_data_end+0xff809660>
  8096f8:	800b883a 	mov	r5,r16
  8096fc:	9009883a 	mov	r4,r18
  809700:	080480c0 	call	80480c <_fflush_r>
  809704:	103fe326 	beq	r2,zero,809694 <__alt_data_end+0xff809694>
  809708:	00bfffc4 	movi	r2,-1
  80970c:	003fe206 	br	809698 <__alt_data_end+0xff809698>
  809710:	800b883a 	mov	r5,r16
  809714:	9009883a 	mov	r4,r18
  809718:	0802c140 	call	802c14 <__swsetup_r>
  80971c:	103ffa1e 	bne	r2,zero,809708 <__alt_data_end+0xff809708>
  809720:	8100030b 	ldhu	r4,12(r16)
  809724:	80c00417 	ldw	r3,16(r16)
  809728:	003fc506 	br	809640 <__alt_data_end+0xff809640>
  80972c:	0804be80 	call	804be8 <__sinit>
  809730:	003fbc06 	br	809624 <__alt_data_end+0xff809624>

00809734 <__swbuf>:
  809734:	00802074 	movhi	r2,129
  809738:	1085d904 	addi	r2,r2,5988
  80973c:	280d883a 	mov	r6,r5
  809740:	200b883a 	mov	r5,r4
  809744:	11000017 	ldw	r4,0(r2)
  809748:	08095f41 	jmpi	8095f4 <__swbuf_r>

0080974c <_write_r>:
  80974c:	defffd04 	addi	sp,sp,-12
  809750:	2805883a 	mov	r2,r5
  809754:	dc000015 	stw	r16,0(sp)
  809758:	04002074 	movhi	r16,129
  80975c:	dc400115 	stw	r17,4(sp)
  809760:	300b883a 	mov	r5,r6
  809764:	840cab04 	addi	r16,r16,12972
  809768:	2023883a 	mov	r17,r4
  80976c:	380d883a 	mov	r6,r7
  809770:	1009883a 	mov	r4,r2
  809774:	dfc00215 	stw	ra,8(sp)
  809778:	80000015 	stw	zero,0(r16)
  80977c:	080d8bc0 	call	80d8bc <write>
  809780:	00ffffc4 	movi	r3,-1
  809784:	10c00526 	beq	r2,r3,80979c <_write_r+0x50>
  809788:	dfc00217 	ldw	ra,8(sp)
  80978c:	dc400117 	ldw	r17,4(sp)
  809790:	dc000017 	ldw	r16,0(sp)
  809794:	dec00304 	addi	sp,sp,12
  809798:	f800283a 	ret
  80979c:	80c00017 	ldw	r3,0(r16)
  8097a0:	183ff926 	beq	r3,zero,809788 <__alt_data_end+0xff809788>
  8097a4:	88c00015 	stw	r3,0(r17)
  8097a8:	003ff706 	br	809788 <__alt_data_end+0xff809788>

008097ac <_close_r>:
  8097ac:	defffd04 	addi	sp,sp,-12
  8097b0:	dc000015 	stw	r16,0(sp)
  8097b4:	04002074 	movhi	r16,129
  8097b8:	dc400115 	stw	r17,4(sp)
  8097bc:	840cab04 	addi	r16,r16,12972
  8097c0:	2023883a 	mov	r17,r4
  8097c4:	2809883a 	mov	r4,r5
  8097c8:	dfc00215 	stw	ra,8(sp)
  8097cc:	80000015 	stw	zero,0(r16)
  8097d0:	080d07c0 	call	80d07c <close>
  8097d4:	00ffffc4 	movi	r3,-1
  8097d8:	10c00526 	beq	r2,r3,8097f0 <_close_r+0x44>
  8097dc:	dfc00217 	ldw	ra,8(sp)
  8097e0:	dc400117 	ldw	r17,4(sp)
  8097e4:	dc000017 	ldw	r16,0(sp)
  8097e8:	dec00304 	addi	sp,sp,12
  8097ec:	f800283a 	ret
  8097f0:	80c00017 	ldw	r3,0(r16)
  8097f4:	183ff926 	beq	r3,zero,8097dc <__alt_data_end+0xff8097dc>
  8097f8:	88c00015 	stw	r3,0(r17)
  8097fc:	003ff706 	br	8097dc <__alt_data_end+0xff8097dc>

00809800 <_calloc_r>:
  809800:	298b383a 	mul	r5,r5,r6
  809804:	defffe04 	addi	sp,sp,-8
  809808:	dfc00115 	stw	ra,4(sp)
  80980c:	dc000015 	stw	r16,0(sp)
  809810:	08059480 	call	805948 <_malloc_r>
  809814:	10002926 	beq	r2,zero,8098bc <_calloc_r+0xbc>
  809818:	11bfff17 	ldw	r6,-4(r2)
  80981c:	1021883a 	mov	r16,r2
  809820:	00bfff04 	movi	r2,-4
  809824:	308c703a 	and	r6,r6,r2
  809828:	00c00904 	movi	r3,36
  80982c:	308d883a 	add	r6,r6,r2
  809830:	19801636 	bltu	r3,r6,80988c <_calloc_r+0x8c>
  809834:	008004c4 	movi	r2,19
  809838:	11800b2e 	bgeu	r2,r6,809868 <_calloc_r+0x68>
  80983c:	80000015 	stw	zero,0(r16)
  809840:	80000115 	stw	zero,4(r16)
  809844:	008006c4 	movi	r2,27
  809848:	11801a2e 	bgeu	r2,r6,8098b4 <_calloc_r+0xb4>
  80984c:	80000215 	stw	zero,8(r16)
  809850:	80000315 	stw	zero,12(r16)
  809854:	30c0151e 	bne	r6,r3,8098ac <_calloc_r+0xac>
  809858:	80000415 	stw	zero,16(r16)
  80985c:	80800604 	addi	r2,r16,24
  809860:	80000515 	stw	zero,20(r16)
  809864:	00000106 	br	80986c <_calloc_r+0x6c>
  809868:	8005883a 	mov	r2,r16
  80986c:	10000015 	stw	zero,0(r2)
  809870:	10000115 	stw	zero,4(r2)
  809874:	10000215 	stw	zero,8(r2)
  809878:	8005883a 	mov	r2,r16
  80987c:	dfc00117 	ldw	ra,4(sp)
  809880:	dc000017 	ldw	r16,0(sp)
  809884:	dec00204 	addi	sp,sp,8
  809888:	f800283a 	ret
  80988c:	000b883a 	mov	r5,zero
  809890:	8009883a 	mov	r4,r16
  809894:	08064dc0 	call	8064dc <memset>
  809898:	8005883a 	mov	r2,r16
  80989c:	dfc00117 	ldw	ra,4(sp)
  8098a0:	dc000017 	ldw	r16,0(sp)
  8098a4:	dec00204 	addi	sp,sp,8
  8098a8:	f800283a 	ret
  8098ac:	80800404 	addi	r2,r16,16
  8098b0:	003fee06 	br	80986c <__alt_data_end+0xff80986c>
  8098b4:	80800204 	addi	r2,r16,8
  8098b8:	003fec06 	br	80986c <__alt_data_end+0xff80986c>
  8098bc:	0005883a 	mov	r2,zero
  8098c0:	003fee06 	br	80987c <__alt_data_end+0xff80987c>

008098c4 <_fclose_r>:
  8098c4:	28003926 	beq	r5,zero,8099ac <_fclose_r+0xe8>
  8098c8:	defffc04 	addi	sp,sp,-16
  8098cc:	dc400115 	stw	r17,4(sp)
  8098d0:	dc000015 	stw	r16,0(sp)
  8098d4:	dfc00315 	stw	ra,12(sp)
  8098d8:	dc800215 	stw	r18,8(sp)
  8098dc:	2023883a 	mov	r17,r4
  8098e0:	2821883a 	mov	r16,r5
  8098e4:	20000226 	beq	r4,zero,8098f0 <_fclose_r+0x2c>
  8098e8:	20800e17 	ldw	r2,56(r4)
  8098ec:	10002726 	beq	r2,zero,80998c <_fclose_r+0xc8>
  8098f0:	8080030f 	ldh	r2,12(r16)
  8098f4:	1000071e 	bne	r2,zero,809914 <_fclose_r+0x50>
  8098f8:	0005883a 	mov	r2,zero
  8098fc:	dfc00317 	ldw	ra,12(sp)
  809900:	dc800217 	ldw	r18,8(sp)
  809904:	dc400117 	ldw	r17,4(sp)
  809908:	dc000017 	ldw	r16,0(sp)
  80990c:	dec00404 	addi	sp,sp,16
  809910:	f800283a 	ret
  809914:	800b883a 	mov	r5,r16
  809918:	8809883a 	mov	r4,r17
  80991c:	08045f00 	call	8045f0 <__sflush_r>
  809920:	1025883a 	mov	r18,r2
  809924:	80800b17 	ldw	r2,44(r16)
  809928:	10000426 	beq	r2,zero,80993c <_fclose_r+0x78>
  80992c:	81400717 	ldw	r5,28(r16)
  809930:	8809883a 	mov	r4,r17
  809934:	103ee83a 	callr	r2
  809938:	10001616 	blt	r2,zero,809994 <_fclose_r+0xd0>
  80993c:	8080030b 	ldhu	r2,12(r16)
  809940:	1080200c 	andi	r2,r2,128
  809944:	1000151e 	bne	r2,zero,80999c <_fclose_r+0xd8>
  809948:	81400c17 	ldw	r5,48(r16)
  80994c:	28000526 	beq	r5,zero,809964 <_fclose_r+0xa0>
  809950:	80801004 	addi	r2,r16,64
  809954:	28800226 	beq	r5,r2,809960 <_fclose_r+0x9c>
  809958:	8809883a 	mov	r4,r17
  80995c:	0804d5c0 	call	804d5c <_free_r>
  809960:	80000c15 	stw	zero,48(r16)
  809964:	81401117 	ldw	r5,68(r16)
  809968:	28000326 	beq	r5,zero,809978 <_fclose_r+0xb4>
  80996c:	8809883a 	mov	r4,r17
  809970:	0804d5c0 	call	804d5c <_free_r>
  809974:	80001115 	stw	zero,68(r16)
  809978:	0804bf80 	call	804bf8 <__sfp_lock_acquire>
  80997c:	8000030d 	sth	zero,12(r16)
  809980:	0804bfc0 	call	804bfc <__sfp_lock_release>
  809984:	9005883a 	mov	r2,r18
  809988:	003fdc06 	br	8098fc <__alt_data_end+0xff8098fc>
  80998c:	0804be80 	call	804be8 <__sinit>
  809990:	003fd706 	br	8098f0 <__alt_data_end+0xff8098f0>
  809994:	04bfffc4 	movi	r18,-1
  809998:	003fe806 	br	80993c <__alt_data_end+0xff80993c>
  80999c:	81400417 	ldw	r5,16(r16)
  8099a0:	8809883a 	mov	r4,r17
  8099a4:	0804d5c0 	call	804d5c <_free_r>
  8099a8:	003fe706 	br	809948 <__alt_data_end+0xff809948>
  8099ac:	0005883a 	mov	r2,zero
  8099b0:	f800283a 	ret

008099b4 <fclose>:
  8099b4:	00802074 	movhi	r2,129
  8099b8:	1085d904 	addi	r2,r2,5988
  8099bc:	200b883a 	mov	r5,r4
  8099c0:	11000017 	ldw	r4,0(r2)
  8099c4:	08098c41 	jmpi	8098c4 <_fclose_r>

008099c8 <__fputwc>:
  8099c8:	defff804 	addi	sp,sp,-32
  8099cc:	dcc00415 	stw	r19,16(sp)
  8099d0:	dc800315 	stw	r18,12(sp)
  8099d4:	dc000115 	stw	r16,4(sp)
  8099d8:	dfc00715 	stw	ra,28(sp)
  8099dc:	dd400615 	stw	r21,24(sp)
  8099e0:	dd000515 	stw	r20,20(sp)
  8099e4:	dc400215 	stw	r17,8(sp)
  8099e8:	2027883a 	mov	r19,r4
  8099ec:	2825883a 	mov	r18,r5
  8099f0:	3021883a 	mov	r16,r6
  8099f4:	08057380 	call	805738 <__locale_mb_cur_max>
  8099f8:	00c00044 	movi	r3,1
  8099fc:	10c03e26 	beq	r2,r3,809af8 <__fputwc+0x130>
  809a00:	81c01704 	addi	r7,r16,92
  809a04:	900d883a 	mov	r6,r18
  809a08:	d80b883a 	mov	r5,sp
  809a0c:	9809883a 	mov	r4,r19
  809a10:	0809d400 	call	809d40 <_wcrtomb_r>
  809a14:	1029883a 	mov	r20,r2
  809a18:	00bfffc4 	movi	r2,-1
  809a1c:	a0802026 	beq	r20,r2,809aa0 <__fputwc+0xd8>
  809a20:	d9400003 	ldbu	r5,0(sp)
  809a24:	a0001c26 	beq	r20,zero,809a98 <__fputwc+0xd0>
  809a28:	0023883a 	mov	r17,zero
  809a2c:	05400284 	movi	r21,10
  809a30:	00000906 	br	809a58 <__fputwc+0x90>
  809a34:	80800017 	ldw	r2,0(r16)
  809a38:	11400005 	stb	r5,0(r2)
  809a3c:	80c00017 	ldw	r3,0(r16)
  809a40:	18c00044 	addi	r3,r3,1
  809a44:	80c00015 	stw	r3,0(r16)
  809a48:	8c400044 	addi	r17,r17,1
  809a4c:	dc45883a 	add	r2,sp,r17
  809a50:	8d00112e 	bgeu	r17,r20,809a98 <__fputwc+0xd0>
  809a54:	11400003 	ldbu	r5,0(r2)
  809a58:	80c00217 	ldw	r3,8(r16)
  809a5c:	18ffffc4 	addi	r3,r3,-1
  809a60:	80c00215 	stw	r3,8(r16)
  809a64:	183ff30e 	bge	r3,zero,809a34 <__alt_data_end+0xff809a34>
  809a68:	80800617 	ldw	r2,24(r16)
  809a6c:	18801916 	blt	r3,r2,809ad4 <__fputwc+0x10c>
  809a70:	80800017 	ldw	r2,0(r16)
  809a74:	11400005 	stb	r5,0(r2)
  809a78:	80800017 	ldw	r2,0(r16)
  809a7c:	10c00003 	ldbu	r3,0(r2)
  809a80:	10800044 	addi	r2,r2,1
  809a84:	1d402326 	beq	r3,r21,809b14 <__fputwc+0x14c>
  809a88:	80800015 	stw	r2,0(r16)
  809a8c:	8c400044 	addi	r17,r17,1
  809a90:	dc45883a 	add	r2,sp,r17
  809a94:	8d3fef36 	bltu	r17,r20,809a54 <__alt_data_end+0xff809a54>
  809a98:	9005883a 	mov	r2,r18
  809a9c:	00000406 	br	809ab0 <__fputwc+0xe8>
  809aa0:	80c0030b 	ldhu	r3,12(r16)
  809aa4:	a005883a 	mov	r2,r20
  809aa8:	18c01014 	ori	r3,r3,64
  809aac:	80c0030d 	sth	r3,12(r16)
  809ab0:	dfc00717 	ldw	ra,28(sp)
  809ab4:	dd400617 	ldw	r21,24(sp)
  809ab8:	dd000517 	ldw	r20,20(sp)
  809abc:	dcc00417 	ldw	r19,16(sp)
  809ac0:	dc800317 	ldw	r18,12(sp)
  809ac4:	dc400217 	ldw	r17,8(sp)
  809ac8:	dc000117 	ldw	r16,4(sp)
  809acc:	dec00804 	addi	sp,sp,32
  809ad0:	f800283a 	ret
  809ad4:	800d883a 	mov	r6,r16
  809ad8:	29403fcc 	andi	r5,r5,255
  809adc:	9809883a 	mov	r4,r19
  809ae0:	08095f40 	call	8095f4 <__swbuf_r>
  809ae4:	10bfffe0 	cmpeqi	r2,r2,-1
  809ae8:	10803fcc 	andi	r2,r2,255
  809aec:	103fd626 	beq	r2,zero,809a48 <__alt_data_end+0xff809a48>
  809af0:	00bfffc4 	movi	r2,-1
  809af4:	003fee06 	br	809ab0 <__alt_data_end+0xff809ab0>
  809af8:	90ffffc4 	addi	r3,r18,-1
  809afc:	01003f84 	movi	r4,254
  809b00:	20ffbf36 	bltu	r4,r3,809a00 <__alt_data_end+0xff809a00>
  809b04:	900b883a 	mov	r5,r18
  809b08:	dc800005 	stb	r18,0(sp)
  809b0c:	1029883a 	mov	r20,r2
  809b10:	003fc506 	br	809a28 <__alt_data_end+0xff809a28>
  809b14:	800d883a 	mov	r6,r16
  809b18:	a80b883a 	mov	r5,r21
  809b1c:	9809883a 	mov	r4,r19
  809b20:	08095f40 	call	8095f4 <__swbuf_r>
  809b24:	10bfffe0 	cmpeqi	r2,r2,-1
  809b28:	003fef06 	br	809ae8 <__alt_data_end+0xff809ae8>

00809b2c <_fputwc_r>:
  809b2c:	3080030b 	ldhu	r2,12(r6)
  809b30:	10c8000c 	andi	r3,r2,8192
  809b34:	1800051e 	bne	r3,zero,809b4c <_fputwc_r+0x20>
  809b38:	30c01917 	ldw	r3,100(r6)
  809b3c:	10880014 	ori	r2,r2,8192
  809b40:	3080030d 	sth	r2,12(r6)
  809b44:	18880014 	ori	r2,r3,8192
  809b48:	30801915 	stw	r2,100(r6)
  809b4c:	08099c81 	jmpi	8099c8 <__fputwc>

00809b50 <fputwc>:
  809b50:	00802074 	movhi	r2,129
  809b54:	defffc04 	addi	sp,sp,-16
  809b58:	1085d904 	addi	r2,r2,5988
  809b5c:	dc000115 	stw	r16,4(sp)
  809b60:	14000017 	ldw	r16,0(r2)
  809b64:	dc400215 	stw	r17,8(sp)
  809b68:	dfc00315 	stw	ra,12(sp)
  809b6c:	2023883a 	mov	r17,r4
  809b70:	80000226 	beq	r16,zero,809b7c <fputwc+0x2c>
  809b74:	80800e17 	ldw	r2,56(r16)
  809b78:	10001026 	beq	r2,zero,809bbc <fputwc+0x6c>
  809b7c:	2880030b 	ldhu	r2,12(r5)
  809b80:	10c8000c 	andi	r3,r2,8192
  809b84:	1800051e 	bne	r3,zero,809b9c <fputwc+0x4c>
  809b88:	28c01917 	ldw	r3,100(r5)
  809b8c:	10880014 	ori	r2,r2,8192
  809b90:	2880030d 	sth	r2,12(r5)
  809b94:	18880014 	ori	r2,r3,8192
  809b98:	28801915 	stw	r2,100(r5)
  809b9c:	280d883a 	mov	r6,r5
  809ba0:	8009883a 	mov	r4,r16
  809ba4:	880b883a 	mov	r5,r17
  809ba8:	dfc00317 	ldw	ra,12(sp)
  809bac:	dc400217 	ldw	r17,8(sp)
  809bb0:	dc000117 	ldw	r16,4(sp)
  809bb4:	dec00404 	addi	sp,sp,16
  809bb8:	08099c81 	jmpi	8099c8 <__fputwc>
  809bbc:	8009883a 	mov	r4,r16
  809bc0:	d9400015 	stw	r5,0(sp)
  809bc4:	0804be80 	call	804be8 <__sinit>
  809bc8:	d9400017 	ldw	r5,0(sp)
  809bcc:	003feb06 	br	809b7c <__alt_data_end+0xff809b7c>

00809bd0 <_fstat_r>:
  809bd0:	defffd04 	addi	sp,sp,-12
  809bd4:	2805883a 	mov	r2,r5
  809bd8:	dc000015 	stw	r16,0(sp)
  809bdc:	04002074 	movhi	r16,129
  809be0:	dc400115 	stw	r17,4(sp)
  809be4:	840cab04 	addi	r16,r16,12972
  809be8:	2023883a 	mov	r17,r4
  809bec:	300b883a 	mov	r5,r6
  809bf0:	1009883a 	mov	r4,r2
  809bf4:	dfc00215 	stw	ra,8(sp)
  809bf8:	80000015 	stw	zero,0(r16)
  809bfc:	080d1b40 	call	80d1b4 <fstat>
  809c00:	00ffffc4 	movi	r3,-1
  809c04:	10c00526 	beq	r2,r3,809c1c <_fstat_r+0x4c>
  809c08:	dfc00217 	ldw	ra,8(sp)
  809c0c:	dc400117 	ldw	r17,4(sp)
  809c10:	dc000017 	ldw	r16,0(sp)
  809c14:	dec00304 	addi	sp,sp,12
  809c18:	f800283a 	ret
  809c1c:	80c00017 	ldw	r3,0(r16)
  809c20:	183ff926 	beq	r3,zero,809c08 <__alt_data_end+0xff809c08>
  809c24:	88c00015 	stw	r3,0(r17)
  809c28:	003ff706 	br	809c08 <__alt_data_end+0xff809c08>

00809c2c <_isatty_r>:
  809c2c:	defffd04 	addi	sp,sp,-12
  809c30:	dc000015 	stw	r16,0(sp)
  809c34:	04002074 	movhi	r16,129
  809c38:	dc400115 	stw	r17,4(sp)
  809c3c:	840cab04 	addi	r16,r16,12972
  809c40:	2023883a 	mov	r17,r4
  809c44:	2809883a 	mov	r4,r5
  809c48:	dfc00215 	stw	ra,8(sp)
  809c4c:	80000015 	stw	zero,0(r16)
  809c50:	080d2a00 	call	80d2a0 <isatty>
  809c54:	00ffffc4 	movi	r3,-1
  809c58:	10c00526 	beq	r2,r3,809c70 <_isatty_r+0x44>
  809c5c:	dfc00217 	ldw	ra,8(sp)
  809c60:	dc400117 	ldw	r17,4(sp)
  809c64:	dc000017 	ldw	r16,0(sp)
  809c68:	dec00304 	addi	sp,sp,12
  809c6c:	f800283a 	ret
  809c70:	80c00017 	ldw	r3,0(r16)
  809c74:	183ff926 	beq	r3,zero,809c5c <__alt_data_end+0xff809c5c>
  809c78:	88c00015 	stw	r3,0(r17)
  809c7c:	003ff706 	br	809c5c <__alt_data_end+0xff809c5c>

00809c80 <_lseek_r>:
  809c80:	defffd04 	addi	sp,sp,-12
  809c84:	2805883a 	mov	r2,r5
  809c88:	dc000015 	stw	r16,0(sp)
  809c8c:	04002074 	movhi	r16,129
  809c90:	dc400115 	stw	r17,4(sp)
  809c94:	300b883a 	mov	r5,r6
  809c98:	840cab04 	addi	r16,r16,12972
  809c9c:	2023883a 	mov	r17,r4
  809ca0:	380d883a 	mov	r6,r7
  809ca4:	1009883a 	mov	r4,r2
  809ca8:	dfc00215 	stw	ra,8(sp)
  809cac:	80000015 	stw	zero,0(r16)
  809cb0:	080d46c0 	call	80d46c <lseek>
  809cb4:	00ffffc4 	movi	r3,-1
  809cb8:	10c00526 	beq	r2,r3,809cd0 <_lseek_r+0x50>
  809cbc:	dfc00217 	ldw	ra,8(sp)
  809cc0:	dc400117 	ldw	r17,4(sp)
  809cc4:	dc000017 	ldw	r16,0(sp)
  809cc8:	dec00304 	addi	sp,sp,12
  809ccc:	f800283a 	ret
  809cd0:	80c00017 	ldw	r3,0(r16)
  809cd4:	183ff926 	beq	r3,zero,809cbc <__alt_data_end+0xff809cbc>
  809cd8:	88c00015 	stw	r3,0(r17)
  809cdc:	003ff706 	br	809cbc <__alt_data_end+0xff809cbc>

00809ce0 <_read_r>:
  809ce0:	defffd04 	addi	sp,sp,-12
  809ce4:	2805883a 	mov	r2,r5
  809ce8:	dc000015 	stw	r16,0(sp)
  809cec:	04002074 	movhi	r16,129
  809cf0:	dc400115 	stw	r17,4(sp)
  809cf4:	300b883a 	mov	r5,r6
  809cf8:	840cab04 	addi	r16,r16,12972
  809cfc:	2023883a 	mov	r17,r4
  809d00:	380d883a 	mov	r6,r7
  809d04:	1009883a 	mov	r4,r2
  809d08:	dfc00215 	stw	ra,8(sp)
  809d0c:	80000015 	stw	zero,0(r16)
  809d10:	080d6400 	call	80d640 <read>
  809d14:	00ffffc4 	movi	r3,-1
  809d18:	10c00526 	beq	r2,r3,809d30 <_read_r+0x50>
  809d1c:	dfc00217 	ldw	ra,8(sp)
  809d20:	dc400117 	ldw	r17,4(sp)
  809d24:	dc000017 	ldw	r16,0(sp)
  809d28:	dec00304 	addi	sp,sp,12
  809d2c:	f800283a 	ret
  809d30:	80c00017 	ldw	r3,0(r16)
  809d34:	183ff926 	beq	r3,zero,809d1c <__alt_data_end+0xff809d1c>
  809d38:	88c00015 	stw	r3,0(r17)
  809d3c:	003ff706 	br	809d1c <__alt_data_end+0xff809d1c>

00809d40 <_wcrtomb_r>:
  809d40:	defff604 	addi	sp,sp,-40
  809d44:	00802074 	movhi	r2,129
  809d48:	dc800815 	stw	r18,32(sp)
  809d4c:	dc400715 	stw	r17,28(sp)
  809d50:	dc000615 	stw	r16,24(sp)
  809d54:	1085dd04 	addi	r2,r2,6004
  809d58:	dfc00915 	stw	ra,36(sp)
  809d5c:	2021883a 	mov	r16,r4
  809d60:	3823883a 	mov	r17,r7
  809d64:	14800017 	ldw	r18,0(r2)
  809d68:	28001426 	beq	r5,zero,809dbc <_wcrtomb_r+0x7c>
  809d6c:	d9400415 	stw	r5,16(sp)
  809d70:	d9800515 	stw	r6,20(sp)
  809d74:	080572c0 	call	80572c <__locale_charset>
  809d78:	d9800517 	ldw	r6,20(sp)
  809d7c:	d9400417 	ldw	r5,16(sp)
  809d80:	100f883a 	mov	r7,r2
  809d84:	dc400015 	stw	r17,0(sp)
  809d88:	8009883a 	mov	r4,r16
  809d8c:	903ee83a 	callr	r18
  809d90:	00ffffc4 	movi	r3,-1
  809d94:	10c0031e 	bne	r2,r3,809da4 <_wcrtomb_r+0x64>
  809d98:	88000015 	stw	zero,0(r17)
  809d9c:	00c02284 	movi	r3,138
  809da0:	80c00015 	stw	r3,0(r16)
  809da4:	dfc00917 	ldw	ra,36(sp)
  809da8:	dc800817 	ldw	r18,32(sp)
  809dac:	dc400717 	ldw	r17,28(sp)
  809db0:	dc000617 	ldw	r16,24(sp)
  809db4:	dec00a04 	addi	sp,sp,40
  809db8:	f800283a 	ret
  809dbc:	080572c0 	call	80572c <__locale_charset>
  809dc0:	100f883a 	mov	r7,r2
  809dc4:	dc400015 	stw	r17,0(sp)
  809dc8:	000d883a 	mov	r6,zero
  809dcc:	d9400104 	addi	r5,sp,4
  809dd0:	8009883a 	mov	r4,r16
  809dd4:	903ee83a 	callr	r18
  809dd8:	003fed06 	br	809d90 <__alt_data_end+0xff809d90>

00809ddc <wcrtomb>:
  809ddc:	defff604 	addi	sp,sp,-40
  809de0:	00802074 	movhi	r2,129
  809de4:	dc800615 	stw	r18,24(sp)
  809de8:	dc400515 	stw	r17,20(sp)
  809dec:	1085d904 	addi	r2,r2,5988
  809df0:	dfc00915 	stw	ra,36(sp)
  809df4:	dd000815 	stw	r20,32(sp)
  809df8:	dcc00715 	stw	r19,28(sp)
  809dfc:	dc000415 	stw	r16,16(sp)
  809e00:	3025883a 	mov	r18,r6
  809e04:	14400017 	ldw	r17,0(r2)
  809e08:	20001926 	beq	r4,zero,809e70 <wcrtomb+0x94>
  809e0c:	00802074 	movhi	r2,129
  809e10:	1085dd04 	addi	r2,r2,6004
  809e14:	15000017 	ldw	r20,0(r2)
  809e18:	2021883a 	mov	r16,r4
  809e1c:	2827883a 	mov	r19,r5
  809e20:	080572c0 	call	80572c <__locale_charset>
  809e24:	100f883a 	mov	r7,r2
  809e28:	dc800015 	stw	r18,0(sp)
  809e2c:	980d883a 	mov	r6,r19
  809e30:	800b883a 	mov	r5,r16
  809e34:	8809883a 	mov	r4,r17
  809e38:	a03ee83a 	callr	r20
  809e3c:	00ffffc4 	movi	r3,-1
  809e40:	10c0031e 	bne	r2,r3,809e50 <wcrtomb+0x74>
  809e44:	90000015 	stw	zero,0(r18)
  809e48:	00c02284 	movi	r3,138
  809e4c:	88c00015 	stw	r3,0(r17)
  809e50:	dfc00917 	ldw	ra,36(sp)
  809e54:	dd000817 	ldw	r20,32(sp)
  809e58:	dcc00717 	ldw	r19,28(sp)
  809e5c:	dc800617 	ldw	r18,24(sp)
  809e60:	dc400517 	ldw	r17,20(sp)
  809e64:	dc000417 	ldw	r16,16(sp)
  809e68:	dec00a04 	addi	sp,sp,40
  809e6c:	f800283a 	ret
  809e70:	00802074 	movhi	r2,129
  809e74:	1085dd04 	addi	r2,r2,6004
  809e78:	14000017 	ldw	r16,0(r2)
  809e7c:	080572c0 	call	80572c <__locale_charset>
  809e80:	100f883a 	mov	r7,r2
  809e84:	dc800015 	stw	r18,0(sp)
  809e88:	000d883a 	mov	r6,zero
  809e8c:	d9400104 	addi	r5,sp,4
  809e90:	8809883a 	mov	r4,r17
  809e94:	803ee83a 	callr	r16
  809e98:	003fe806 	br	809e3c <__alt_data_end+0xff809e3c>

00809e9c <__ascii_wctomb>:
  809e9c:	28000526 	beq	r5,zero,809eb4 <__ascii_wctomb+0x18>
  809ea0:	00803fc4 	movi	r2,255
  809ea4:	11800536 	bltu	r2,r6,809ebc <__ascii_wctomb+0x20>
  809ea8:	29800005 	stb	r6,0(r5)
  809eac:	00800044 	movi	r2,1
  809eb0:	f800283a 	ret
  809eb4:	0005883a 	mov	r2,zero
  809eb8:	f800283a 	ret
  809ebc:	00802284 	movi	r2,138
  809ec0:	20800015 	stw	r2,0(r4)
  809ec4:	00bfffc4 	movi	r2,-1
  809ec8:	f800283a 	ret

00809ecc <_wctomb_r>:
  809ecc:	00802074 	movhi	r2,129
  809ed0:	defff904 	addi	sp,sp,-28
  809ed4:	1085dd04 	addi	r2,r2,6004
  809ed8:	dfc00615 	stw	ra,24(sp)
  809edc:	dc400515 	stw	r17,20(sp)
  809ee0:	dc000415 	stw	r16,16(sp)
  809ee4:	3823883a 	mov	r17,r7
  809ee8:	14000017 	ldw	r16,0(r2)
  809eec:	d9000115 	stw	r4,4(sp)
  809ef0:	d9400215 	stw	r5,8(sp)
  809ef4:	d9800315 	stw	r6,12(sp)
  809ef8:	080572c0 	call	80572c <__locale_charset>
  809efc:	d9800317 	ldw	r6,12(sp)
  809f00:	d9400217 	ldw	r5,8(sp)
  809f04:	d9000117 	ldw	r4,4(sp)
  809f08:	100f883a 	mov	r7,r2
  809f0c:	dc400015 	stw	r17,0(sp)
  809f10:	803ee83a 	callr	r16
  809f14:	dfc00617 	ldw	ra,24(sp)
  809f18:	dc400517 	ldw	r17,20(sp)
  809f1c:	dc000417 	ldw	r16,16(sp)
  809f20:	dec00704 	addi	sp,sp,28
  809f24:	f800283a 	ret

00809f28 <__udivdi3>:
  809f28:	defff504 	addi	sp,sp,-44
  809f2c:	dcc00415 	stw	r19,16(sp)
  809f30:	dc000115 	stw	r16,4(sp)
  809f34:	dfc00a15 	stw	ra,40(sp)
  809f38:	df000915 	stw	fp,36(sp)
  809f3c:	ddc00815 	stw	r23,32(sp)
  809f40:	dd800715 	stw	r22,28(sp)
  809f44:	dd400615 	stw	r21,24(sp)
  809f48:	dd000515 	stw	r20,20(sp)
  809f4c:	dc800315 	stw	r18,12(sp)
  809f50:	dc400215 	stw	r17,8(sp)
  809f54:	2027883a 	mov	r19,r4
  809f58:	2821883a 	mov	r16,r5
  809f5c:	3800411e 	bne	r7,zero,80a064 <__udivdi3+0x13c>
  809f60:	3023883a 	mov	r17,r6
  809f64:	2025883a 	mov	r18,r4
  809f68:	2980522e 	bgeu	r5,r6,80a0b4 <__udivdi3+0x18c>
  809f6c:	00bfffd4 	movui	r2,65535
  809f70:	282d883a 	mov	r22,r5
  809f74:	1180a836 	bltu	r2,r6,80a218 <__udivdi3+0x2f0>
  809f78:	00803fc4 	movi	r2,255
  809f7c:	1185803a 	cmpltu	r2,r2,r6
  809f80:	100490fa 	slli	r2,r2,3
  809f84:	3086d83a 	srl	r3,r6,r2
  809f88:	01002074 	movhi	r4,129
  809f8c:	213ee204 	addi	r4,r4,-1144
  809f90:	20c7883a 	add	r3,r4,r3
  809f94:	18c00003 	ldbu	r3,0(r3)
  809f98:	1885883a 	add	r2,r3,r2
  809f9c:	00c00804 	movi	r3,32
  809fa0:	1887c83a 	sub	r3,r3,r2
  809fa4:	18000526 	beq	r3,zero,809fbc <__udivdi3+0x94>
  809fa8:	80e0983a 	sll	r16,r16,r3
  809fac:	9884d83a 	srl	r2,r19,r2
  809fb0:	30e2983a 	sll	r17,r6,r3
  809fb4:	98e4983a 	sll	r18,r19,r3
  809fb8:	142cb03a 	or	r22,r2,r16
  809fbc:	882ad43a 	srli	r21,r17,16
  809fc0:	b009883a 	mov	r4,r22
  809fc4:	8d3fffcc 	andi	r20,r17,65535
  809fc8:	a80b883a 	mov	r5,r21
  809fcc:	08006f40 	call	8006f4 <__umodsi3>
  809fd0:	b009883a 	mov	r4,r22
  809fd4:	a80b883a 	mov	r5,r21
  809fd8:	1027883a 	mov	r19,r2
  809fdc:	08006900 	call	800690 <__udivsi3>
  809fe0:	102d883a 	mov	r22,r2
  809fe4:	9826943a 	slli	r19,r19,16
  809fe8:	9004d43a 	srli	r2,r18,16
  809fec:	a5a1383a 	mul	r16,r20,r22
  809ff0:	14c4b03a 	or	r2,r2,r19
  809ff4:	1400052e 	bgeu	r2,r16,80a00c <__udivdi3+0xe4>
  809ff8:	1445883a 	add	r2,r2,r17
  809ffc:	b0ffffc4 	addi	r3,r22,-1
  80a000:	14400136 	bltu	r2,r17,80a008 <__udivdi3+0xe0>
  80a004:	14012336 	bltu	r2,r16,80a494 <__udivdi3+0x56c>
  80a008:	182d883a 	mov	r22,r3
  80a00c:	1421c83a 	sub	r16,r2,r16
  80a010:	a80b883a 	mov	r5,r21
  80a014:	8009883a 	mov	r4,r16
  80a018:	08006f40 	call	8006f4 <__umodsi3>
  80a01c:	1027883a 	mov	r19,r2
  80a020:	a80b883a 	mov	r5,r21
  80a024:	8009883a 	mov	r4,r16
  80a028:	08006900 	call	800690 <__udivsi3>
  80a02c:	9826943a 	slli	r19,r19,16
  80a030:	a0a9383a 	mul	r20,r20,r2
  80a034:	94bfffcc 	andi	r18,r18,65535
  80a038:	94e4b03a 	or	r18,r18,r19
  80a03c:	9500052e 	bgeu	r18,r20,80a054 <__udivdi3+0x12c>
  80a040:	8ca5883a 	add	r18,r17,r18
  80a044:	10ffffc4 	addi	r3,r2,-1
  80a048:	9440f136 	bltu	r18,r17,80a410 <__udivdi3+0x4e8>
  80a04c:	9500f02e 	bgeu	r18,r20,80a410 <__udivdi3+0x4e8>
  80a050:	10bfff84 	addi	r2,r2,-2
  80a054:	b00c943a 	slli	r6,r22,16
  80a058:	0007883a 	mov	r3,zero
  80a05c:	3084b03a 	or	r2,r6,r2
  80a060:	00005906 	br	80a1c8 <__udivdi3+0x2a0>
  80a064:	29c05636 	bltu	r5,r7,80a1c0 <__udivdi3+0x298>
  80a068:	00bfffd4 	movui	r2,65535
  80a06c:	11c0622e 	bgeu	r2,r7,80a1f8 <__udivdi3+0x2d0>
  80a070:	00804034 	movhi	r2,256
  80a074:	10bfffc4 	addi	r2,r2,-1
  80a078:	11c0ee36 	bltu	r2,r7,80a434 <__udivdi3+0x50c>
  80a07c:	00800404 	movi	r2,16
  80a080:	3886d83a 	srl	r3,r7,r2
  80a084:	01002074 	movhi	r4,129
  80a088:	213ee204 	addi	r4,r4,-1144
  80a08c:	20c7883a 	add	r3,r4,r3
  80a090:	18c00003 	ldbu	r3,0(r3)
  80a094:	05400804 	movi	r21,32
  80a098:	1885883a 	add	r2,r3,r2
  80a09c:	a8abc83a 	sub	r21,r21,r2
  80a0a0:	a800621e 	bne	r21,zero,80a22c <__udivdi3+0x304>
  80a0a4:	3c00e936 	bltu	r7,r16,80a44c <__udivdi3+0x524>
  80a0a8:	9985403a 	cmpgeu	r2,r19,r6
  80a0ac:	0007883a 	mov	r3,zero
  80a0b0:	00004506 	br	80a1c8 <__udivdi3+0x2a0>
  80a0b4:	3000041e 	bne	r6,zero,80a0c8 <__udivdi3+0x1a0>
  80a0b8:	000b883a 	mov	r5,zero
  80a0bc:	01000044 	movi	r4,1
  80a0c0:	08006900 	call	800690 <__udivsi3>
  80a0c4:	1023883a 	mov	r17,r2
  80a0c8:	00bfffd4 	movui	r2,65535
  80a0cc:	14404e2e 	bgeu	r2,r17,80a208 <__udivdi3+0x2e0>
  80a0d0:	00804034 	movhi	r2,256
  80a0d4:	10bfffc4 	addi	r2,r2,-1
  80a0d8:	1440d836 	bltu	r2,r17,80a43c <__udivdi3+0x514>
  80a0dc:	00800404 	movi	r2,16
  80a0e0:	8886d83a 	srl	r3,r17,r2
  80a0e4:	01002074 	movhi	r4,129
  80a0e8:	213ee204 	addi	r4,r4,-1144
  80a0ec:	20c7883a 	add	r3,r4,r3
  80a0f0:	18c00003 	ldbu	r3,0(r3)
  80a0f4:	1885883a 	add	r2,r3,r2
  80a0f8:	00c00804 	movi	r3,32
  80a0fc:	1887c83a 	sub	r3,r3,r2
  80a100:	18008f1e 	bne	r3,zero,80a340 <__udivdi3+0x418>
  80a104:	882ad43a 	srli	r21,r17,16
  80a108:	8461c83a 	sub	r16,r16,r17
  80a10c:	8d3fffcc 	andi	r20,r17,65535
  80a110:	00c00044 	movi	r3,1
  80a114:	8009883a 	mov	r4,r16
  80a118:	a80b883a 	mov	r5,r21
  80a11c:	d8c00015 	stw	r3,0(sp)
  80a120:	08006f40 	call	8006f4 <__umodsi3>
  80a124:	8009883a 	mov	r4,r16
  80a128:	a80b883a 	mov	r5,r21
  80a12c:	1027883a 	mov	r19,r2
  80a130:	08006900 	call	800690 <__udivsi3>
  80a134:	9826943a 	slli	r19,r19,16
  80a138:	9008d43a 	srli	r4,r18,16
  80a13c:	1521383a 	mul	r16,r2,r20
  80a140:	102d883a 	mov	r22,r2
  80a144:	24c8b03a 	or	r4,r4,r19
  80a148:	d8c00017 	ldw	r3,0(sp)
  80a14c:	2400052e 	bgeu	r4,r16,80a164 <__udivdi3+0x23c>
  80a150:	2449883a 	add	r4,r4,r17
  80a154:	b0bfffc4 	addi	r2,r22,-1
  80a158:	24400136 	bltu	r4,r17,80a160 <__udivdi3+0x238>
  80a15c:	2400ca36 	bltu	r4,r16,80a488 <__udivdi3+0x560>
  80a160:	102d883a 	mov	r22,r2
  80a164:	2421c83a 	sub	r16,r4,r16
  80a168:	a80b883a 	mov	r5,r21
  80a16c:	8009883a 	mov	r4,r16
  80a170:	d8c00015 	stw	r3,0(sp)
  80a174:	08006f40 	call	8006f4 <__umodsi3>
  80a178:	1027883a 	mov	r19,r2
  80a17c:	a80b883a 	mov	r5,r21
  80a180:	8009883a 	mov	r4,r16
  80a184:	08006900 	call	800690 <__udivsi3>
  80a188:	9826943a 	slli	r19,r19,16
  80a18c:	1529383a 	mul	r20,r2,r20
  80a190:	94bfffcc 	andi	r18,r18,65535
  80a194:	94e4b03a 	or	r18,r18,r19
  80a198:	d8c00017 	ldw	r3,0(sp)
  80a19c:	9500052e 	bgeu	r18,r20,80a1b4 <__udivdi3+0x28c>
  80a1a0:	8ca5883a 	add	r18,r17,r18
  80a1a4:	113fffc4 	addi	r4,r2,-1
  80a1a8:	94409736 	bltu	r18,r17,80a408 <__udivdi3+0x4e0>
  80a1ac:	9500962e 	bgeu	r18,r20,80a408 <__udivdi3+0x4e0>
  80a1b0:	10bfff84 	addi	r2,r2,-2
  80a1b4:	b00c943a 	slli	r6,r22,16
  80a1b8:	3084b03a 	or	r2,r6,r2
  80a1bc:	00000206 	br	80a1c8 <__udivdi3+0x2a0>
  80a1c0:	0007883a 	mov	r3,zero
  80a1c4:	0005883a 	mov	r2,zero
  80a1c8:	dfc00a17 	ldw	ra,40(sp)
  80a1cc:	df000917 	ldw	fp,36(sp)
  80a1d0:	ddc00817 	ldw	r23,32(sp)
  80a1d4:	dd800717 	ldw	r22,28(sp)
  80a1d8:	dd400617 	ldw	r21,24(sp)
  80a1dc:	dd000517 	ldw	r20,20(sp)
  80a1e0:	dcc00417 	ldw	r19,16(sp)
  80a1e4:	dc800317 	ldw	r18,12(sp)
  80a1e8:	dc400217 	ldw	r17,8(sp)
  80a1ec:	dc000117 	ldw	r16,4(sp)
  80a1f0:	dec00b04 	addi	sp,sp,44
  80a1f4:	f800283a 	ret
  80a1f8:	00803fc4 	movi	r2,255
  80a1fc:	11c5803a 	cmpltu	r2,r2,r7
  80a200:	100490fa 	slli	r2,r2,3
  80a204:	003f9e06 	br	80a080 <__alt_data_end+0xff80a080>
  80a208:	00803fc4 	movi	r2,255
  80a20c:	1445803a 	cmpltu	r2,r2,r17
  80a210:	100490fa 	slli	r2,r2,3
  80a214:	003fb206 	br	80a0e0 <__alt_data_end+0xff80a0e0>
  80a218:	00804034 	movhi	r2,256
  80a21c:	10bfffc4 	addi	r2,r2,-1
  80a220:	11808836 	bltu	r2,r6,80a444 <__udivdi3+0x51c>
  80a224:	00800404 	movi	r2,16
  80a228:	003f5606 	br	809f84 <__alt_data_end+0xff809f84>
  80a22c:	30aed83a 	srl	r23,r6,r2
  80a230:	3d4e983a 	sll	r7,r7,r21
  80a234:	80acd83a 	srl	r22,r16,r2
  80a238:	9884d83a 	srl	r2,r19,r2
  80a23c:	3deeb03a 	or	r23,r7,r23
  80a240:	b824d43a 	srli	r18,r23,16
  80a244:	8560983a 	sll	r16,r16,r21
  80a248:	b009883a 	mov	r4,r22
  80a24c:	900b883a 	mov	r5,r18
  80a250:	3568983a 	sll	r20,r6,r21
  80a254:	1420b03a 	or	r16,r2,r16
  80a258:	08006f40 	call	8006f4 <__umodsi3>
  80a25c:	b009883a 	mov	r4,r22
  80a260:	900b883a 	mov	r5,r18
  80a264:	1023883a 	mov	r17,r2
  80a268:	08006900 	call	800690 <__udivsi3>
  80a26c:	8808943a 	slli	r4,r17,16
  80a270:	bf3fffcc 	andi	fp,r23,65535
  80a274:	8006d43a 	srli	r3,r16,16
  80a278:	e0a3383a 	mul	r17,fp,r2
  80a27c:	100d883a 	mov	r6,r2
  80a280:	1906b03a 	or	r3,r3,r4
  80a284:	1c40042e 	bgeu	r3,r17,80a298 <__udivdi3+0x370>
  80a288:	1dc7883a 	add	r3,r3,r23
  80a28c:	10bfffc4 	addi	r2,r2,-1
  80a290:	1dc0752e 	bgeu	r3,r23,80a468 <__udivdi3+0x540>
  80a294:	100d883a 	mov	r6,r2
  80a298:	1c63c83a 	sub	r17,r3,r17
  80a29c:	900b883a 	mov	r5,r18
  80a2a0:	8809883a 	mov	r4,r17
  80a2a4:	d9800015 	stw	r6,0(sp)
  80a2a8:	08006f40 	call	8006f4 <__umodsi3>
  80a2ac:	102d883a 	mov	r22,r2
  80a2b0:	8809883a 	mov	r4,r17
  80a2b4:	900b883a 	mov	r5,r18
  80a2b8:	08006900 	call	800690 <__udivsi3>
  80a2bc:	b02c943a 	slli	r22,r22,16
  80a2c0:	e089383a 	mul	r4,fp,r2
  80a2c4:	843fffcc 	andi	r16,r16,65535
  80a2c8:	85a0b03a 	or	r16,r16,r22
  80a2cc:	d9800017 	ldw	r6,0(sp)
  80a2d0:	8100042e 	bgeu	r16,r4,80a2e4 <__udivdi3+0x3bc>
  80a2d4:	85e1883a 	add	r16,r16,r23
  80a2d8:	10ffffc4 	addi	r3,r2,-1
  80a2dc:	85c05e2e 	bgeu	r16,r23,80a458 <__udivdi3+0x530>
  80a2e0:	1805883a 	mov	r2,r3
  80a2e4:	300c943a 	slli	r6,r6,16
  80a2e8:	a17fffcc 	andi	r5,r20,65535
  80a2ec:	a028d43a 	srli	r20,r20,16
  80a2f0:	3084b03a 	or	r2,r6,r2
  80a2f4:	10ffffcc 	andi	r3,r2,65535
  80a2f8:	100cd43a 	srli	r6,r2,16
  80a2fc:	194f383a 	mul	r7,r3,r5
  80a300:	1d07383a 	mul	r3,r3,r20
  80a304:	314b383a 	mul	r5,r6,r5
  80a308:	3810d43a 	srli	r8,r7,16
  80a30c:	8121c83a 	sub	r16,r16,r4
  80a310:	1947883a 	add	r3,r3,r5
  80a314:	40c7883a 	add	r3,r8,r3
  80a318:	350d383a 	mul	r6,r6,r20
  80a31c:	1940022e 	bgeu	r3,r5,80a328 <__udivdi3+0x400>
  80a320:	01000074 	movhi	r4,1
  80a324:	310d883a 	add	r6,r6,r4
  80a328:	1828d43a 	srli	r20,r3,16
  80a32c:	a18d883a 	add	r6,r20,r6
  80a330:	81803e36 	bltu	r16,r6,80a42c <__udivdi3+0x504>
  80a334:	81803826 	beq	r16,r6,80a418 <__udivdi3+0x4f0>
  80a338:	0007883a 	mov	r3,zero
  80a33c:	003fa206 	br	80a1c8 <__alt_data_end+0xff80a1c8>
  80a340:	88e2983a 	sll	r17,r17,r3
  80a344:	80a8d83a 	srl	r20,r16,r2
  80a348:	80e0983a 	sll	r16,r16,r3
  80a34c:	882ad43a 	srli	r21,r17,16
  80a350:	9884d83a 	srl	r2,r19,r2
  80a354:	a009883a 	mov	r4,r20
  80a358:	a80b883a 	mov	r5,r21
  80a35c:	142eb03a 	or	r23,r2,r16
  80a360:	98e4983a 	sll	r18,r19,r3
  80a364:	08006f40 	call	8006f4 <__umodsi3>
  80a368:	a009883a 	mov	r4,r20
  80a36c:	a80b883a 	mov	r5,r21
  80a370:	1021883a 	mov	r16,r2
  80a374:	08006900 	call	800690 <__udivsi3>
  80a378:	1039883a 	mov	fp,r2
  80a37c:	8d3fffcc 	andi	r20,r17,65535
  80a380:	8020943a 	slli	r16,r16,16
  80a384:	b804d43a 	srli	r2,r23,16
  80a388:	a72d383a 	mul	r22,r20,fp
  80a38c:	1404b03a 	or	r2,r2,r16
  80a390:	1580062e 	bgeu	r2,r22,80a3ac <__udivdi3+0x484>
  80a394:	1445883a 	add	r2,r2,r17
  80a398:	e0ffffc4 	addi	r3,fp,-1
  80a39c:	14403836 	bltu	r2,r17,80a480 <__udivdi3+0x558>
  80a3a0:	1580372e 	bgeu	r2,r22,80a480 <__udivdi3+0x558>
  80a3a4:	e73fff84 	addi	fp,fp,-2
  80a3a8:	1445883a 	add	r2,r2,r17
  80a3ac:	15adc83a 	sub	r22,r2,r22
  80a3b0:	a80b883a 	mov	r5,r21
  80a3b4:	b009883a 	mov	r4,r22
  80a3b8:	08006f40 	call	8006f4 <__umodsi3>
  80a3bc:	1027883a 	mov	r19,r2
  80a3c0:	b009883a 	mov	r4,r22
  80a3c4:	a80b883a 	mov	r5,r21
  80a3c8:	08006900 	call	800690 <__udivsi3>
  80a3cc:	9826943a 	slli	r19,r19,16
  80a3d0:	a0a1383a 	mul	r16,r20,r2
  80a3d4:	b93fffcc 	andi	r4,r23,65535
  80a3d8:	24c8b03a 	or	r4,r4,r19
  80a3dc:	2400062e 	bgeu	r4,r16,80a3f8 <__udivdi3+0x4d0>
  80a3e0:	2449883a 	add	r4,r4,r17
  80a3e4:	10ffffc4 	addi	r3,r2,-1
  80a3e8:	24402336 	bltu	r4,r17,80a478 <__udivdi3+0x550>
  80a3ec:	2400222e 	bgeu	r4,r16,80a478 <__udivdi3+0x550>
  80a3f0:	10bfff84 	addi	r2,r2,-2
  80a3f4:	2449883a 	add	r4,r4,r17
  80a3f8:	e038943a 	slli	fp,fp,16
  80a3fc:	2421c83a 	sub	r16,r4,r16
  80a400:	e086b03a 	or	r3,fp,r2
  80a404:	003f4306 	br	80a114 <__alt_data_end+0xff80a114>
  80a408:	2005883a 	mov	r2,r4
  80a40c:	003f6906 	br	80a1b4 <__alt_data_end+0xff80a1b4>
  80a410:	1805883a 	mov	r2,r3
  80a414:	003f0f06 	br	80a054 <__alt_data_end+0xff80a054>
  80a418:	1806943a 	slli	r3,r3,16
  80a41c:	9d66983a 	sll	r19,r19,r21
  80a420:	39ffffcc 	andi	r7,r7,65535
  80a424:	19c7883a 	add	r3,r3,r7
  80a428:	98ffc32e 	bgeu	r19,r3,80a338 <__alt_data_end+0xff80a338>
  80a42c:	10bfffc4 	addi	r2,r2,-1
  80a430:	003fc106 	br	80a338 <__alt_data_end+0xff80a338>
  80a434:	00800604 	movi	r2,24
  80a438:	003f1106 	br	80a080 <__alt_data_end+0xff80a080>
  80a43c:	00800604 	movi	r2,24
  80a440:	003f2706 	br	80a0e0 <__alt_data_end+0xff80a0e0>
  80a444:	00800604 	movi	r2,24
  80a448:	003ece06 	br	809f84 <__alt_data_end+0xff809f84>
  80a44c:	0007883a 	mov	r3,zero
  80a450:	00800044 	movi	r2,1
  80a454:	003f5c06 	br	80a1c8 <__alt_data_end+0xff80a1c8>
  80a458:	813fa12e 	bgeu	r16,r4,80a2e0 <__alt_data_end+0xff80a2e0>
  80a45c:	10bfff84 	addi	r2,r2,-2
  80a460:	85e1883a 	add	r16,r16,r23
  80a464:	003f9f06 	br	80a2e4 <__alt_data_end+0xff80a2e4>
  80a468:	1c7f8a2e 	bgeu	r3,r17,80a294 <__alt_data_end+0xff80a294>
  80a46c:	31bfff84 	addi	r6,r6,-2
  80a470:	1dc7883a 	add	r3,r3,r23
  80a474:	003f8806 	br	80a298 <__alt_data_end+0xff80a298>
  80a478:	1805883a 	mov	r2,r3
  80a47c:	003fde06 	br	80a3f8 <__alt_data_end+0xff80a3f8>
  80a480:	1839883a 	mov	fp,r3
  80a484:	003fc906 	br	80a3ac <__alt_data_end+0xff80a3ac>
  80a488:	b5bfff84 	addi	r22,r22,-2
  80a48c:	2449883a 	add	r4,r4,r17
  80a490:	003f3406 	br	80a164 <__alt_data_end+0xff80a164>
  80a494:	b5bfff84 	addi	r22,r22,-2
  80a498:	1445883a 	add	r2,r2,r17
  80a49c:	003edb06 	br	80a00c <__alt_data_end+0xff80a00c>

0080a4a0 <__umoddi3>:
  80a4a0:	defff404 	addi	sp,sp,-48
  80a4a4:	df000a15 	stw	fp,40(sp)
  80a4a8:	dc400315 	stw	r17,12(sp)
  80a4ac:	dc000215 	stw	r16,8(sp)
  80a4b0:	dfc00b15 	stw	ra,44(sp)
  80a4b4:	ddc00915 	stw	r23,36(sp)
  80a4b8:	dd800815 	stw	r22,32(sp)
  80a4bc:	dd400715 	stw	r21,28(sp)
  80a4c0:	dd000615 	stw	r20,24(sp)
  80a4c4:	dcc00515 	stw	r19,20(sp)
  80a4c8:	dc800415 	stw	r18,16(sp)
  80a4cc:	2021883a 	mov	r16,r4
  80a4d0:	2823883a 	mov	r17,r5
  80a4d4:	2839883a 	mov	fp,r5
  80a4d8:	38003c1e 	bne	r7,zero,80a5cc <__umoddi3+0x12c>
  80a4dc:	3027883a 	mov	r19,r6
  80a4e0:	2029883a 	mov	r20,r4
  80a4e4:	2980512e 	bgeu	r5,r6,80a62c <__umoddi3+0x18c>
  80a4e8:	00bfffd4 	movui	r2,65535
  80a4ec:	11809a36 	bltu	r2,r6,80a758 <__umoddi3+0x2b8>
  80a4f0:	01003fc4 	movi	r4,255
  80a4f4:	2189803a 	cmpltu	r4,r4,r6
  80a4f8:	200890fa 	slli	r4,r4,3
  80a4fc:	3104d83a 	srl	r2,r6,r4
  80a500:	00c02074 	movhi	r3,129
  80a504:	18fee204 	addi	r3,r3,-1144
  80a508:	1885883a 	add	r2,r3,r2
  80a50c:	10c00003 	ldbu	r3,0(r2)
  80a510:	00800804 	movi	r2,32
  80a514:	1909883a 	add	r4,r3,r4
  80a518:	1125c83a 	sub	r18,r2,r4
  80a51c:	90000526 	beq	r18,zero,80a534 <__umoddi3+0x94>
  80a520:	8ca2983a 	sll	r17,r17,r18
  80a524:	8108d83a 	srl	r4,r16,r4
  80a528:	34a6983a 	sll	r19,r6,r18
  80a52c:	84a8983a 	sll	r20,r16,r18
  80a530:	2478b03a 	or	fp,r4,r17
  80a534:	982ed43a 	srli	r23,r19,16
  80a538:	e009883a 	mov	r4,fp
  80a53c:	9dbfffcc 	andi	r22,r19,65535
  80a540:	b80b883a 	mov	r5,r23
  80a544:	08006f40 	call	8006f4 <__umodsi3>
  80a548:	e009883a 	mov	r4,fp
  80a54c:	b80b883a 	mov	r5,r23
  80a550:	102b883a 	mov	r21,r2
  80a554:	08006900 	call	800690 <__udivsi3>
  80a558:	a806943a 	slli	r3,r21,16
  80a55c:	a008d43a 	srli	r4,r20,16
  80a560:	b085383a 	mul	r2,r22,r2
  80a564:	20c8b03a 	or	r4,r4,r3
  80a568:	2080032e 	bgeu	r4,r2,80a578 <__umoddi3+0xd8>
  80a56c:	24c9883a 	add	r4,r4,r19
  80a570:	24c00136 	bltu	r4,r19,80a578 <__umoddi3+0xd8>
  80a574:	20811036 	bltu	r4,r2,80a9b8 <__umoddi3+0x518>
  80a578:	20abc83a 	sub	r21,r4,r2
  80a57c:	b80b883a 	mov	r5,r23
  80a580:	a809883a 	mov	r4,r21
  80a584:	08006f40 	call	8006f4 <__umodsi3>
  80a588:	1023883a 	mov	r17,r2
  80a58c:	b80b883a 	mov	r5,r23
  80a590:	a809883a 	mov	r4,r21
  80a594:	08006900 	call	800690 <__udivsi3>
  80a598:	8822943a 	slli	r17,r17,16
  80a59c:	b085383a 	mul	r2,r22,r2
  80a5a0:	a0ffffcc 	andi	r3,r20,65535
  80a5a4:	1c46b03a 	or	r3,r3,r17
  80a5a8:	1880042e 	bgeu	r3,r2,80a5bc <__umoddi3+0x11c>
  80a5ac:	1cc7883a 	add	r3,r3,r19
  80a5b0:	1cc00236 	bltu	r3,r19,80a5bc <__umoddi3+0x11c>
  80a5b4:	1880012e 	bgeu	r3,r2,80a5bc <__umoddi3+0x11c>
  80a5b8:	1cc7883a 	add	r3,r3,r19
  80a5bc:	1885c83a 	sub	r2,r3,r2
  80a5c0:	1484d83a 	srl	r2,r2,r18
  80a5c4:	0007883a 	mov	r3,zero
  80a5c8:	00004f06 	br	80a708 <__umoddi3+0x268>
  80a5cc:	29c04c36 	bltu	r5,r7,80a700 <__umoddi3+0x260>
  80a5d0:	00bfffd4 	movui	r2,65535
  80a5d4:	11c0582e 	bgeu	r2,r7,80a738 <__umoddi3+0x298>
  80a5d8:	00804034 	movhi	r2,256
  80a5dc:	10bfffc4 	addi	r2,r2,-1
  80a5e0:	11c0e736 	bltu	r2,r7,80a980 <__umoddi3+0x4e0>
  80a5e4:	01000404 	movi	r4,16
  80a5e8:	3904d83a 	srl	r2,r7,r4
  80a5ec:	00c02074 	movhi	r3,129
  80a5f0:	18fee204 	addi	r3,r3,-1144
  80a5f4:	1885883a 	add	r2,r3,r2
  80a5f8:	14c00003 	ldbu	r19,0(r2)
  80a5fc:	00c00804 	movi	r3,32
  80a600:	9927883a 	add	r19,r19,r4
  80a604:	1ce9c83a 	sub	r20,r3,r19
  80a608:	a000581e 	bne	r20,zero,80a76c <__umoddi3+0x2cc>
  80a60c:	3c400136 	bltu	r7,r17,80a614 <__umoddi3+0x174>
  80a610:	8180eb36 	bltu	r16,r6,80a9c0 <__umoddi3+0x520>
  80a614:	8185c83a 	sub	r2,r16,r6
  80a618:	89e3c83a 	sub	r17,r17,r7
  80a61c:	8089803a 	cmpltu	r4,r16,r2
  80a620:	8939c83a 	sub	fp,r17,r4
  80a624:	e007883a 	mov	r3,fp
  80a628:	00003706 	br	80a708 <__umoddi3+0x268>
  80a62c:	3000041e 	bne	r6,zero,80a640 <__umoddi3+0x1a0>
  80a630:	000b883a 	mov	r5,zero
  80a634:	01000044 	movi	r4,1
  80a638:	08006900 	call	800690 <__udivsi3>
  80a63c:	1027883a 	mov	r19,r2
  80a640:	00bfffd4 	movui	r2,65535
  80a644:	14c0402e 	bgeu	r2,r19,80a748 <__umoddi3+0x2a8>
  80a648:	00804034 	movhi	r2,256
  80a64c:	10bfffc4 	addi	r2,r2,-1
  80a650:	14c0cd36 	bltu	r2,r19,80a988 <__umoddi3+0x4e8>
  80a654:	00800404 	movi	r2,16
  80a658:	9886d83a 	srl	r3,r19,r2
  80a65c:	01002074 	movhi	r4,129
  80a660:	213ee204 	addi	r4,r4,-1144
  80a664:	20c7883a 	add	r3,r4,r3
  80a668:	18c00003 	ldbu	r3,0(r3)
  80a66c:	1887883a 	add	r3,r3,r2
  80a670:	00800804 	movi	r2,32
  80a674:	10e5c83a 	sub	r18,r2,r3
  80a678:	9000901e 	bne	r18,zero,80a8bc <__umoddi3+0x41c>
  80a67c:	982cd43a 	srli	r22,r19,16
  80a680:	8ce3c83a 	sub	r17,r17,r19
  80a684:	9d7fffcc 	andi	r21,r19,65535
  80a688:	b00b883a 	mov	r5,r22
  80a68c:	8809883a 	mov	r4,r17
  80a690:	08006f40 	call	8006f4 <__umodsi3>
  80a694:	8809883a 	mov	r4,r17
  80a698:	b00b883a 	mov	r5,r22
  80a69c:	1021883a 	mov	r16,r2
  80a6a0:	08006900 	call	800690 <__udivsi3>
  80a6a4:	8006943a 	slli	r3,r16,16
  80a6a8:	a008d43a 	srli	r4,r20,16
  80a6ac:	1545383a 	mul	r2,r2,r21
  80a6b0:	20c8b03a 	or	r4,r4,r3
  80a6b4:	2080042e 	bgeu	r4,r2,80a6c8 <__umoddi3+0x228>
  80a6b8:	24c9883a 	add	r4,r4,r19
  80a6bc:	24c00236 	bltu	r4,r19,80a6c8 <__umoddi3+0x228>
  80a6c0:	2080012e 	bgeu	r4,r2,80a6c8 <__umoddi3+0x228>
  80a6c4:	24c9883a 	add	r4,r4,r19
  80a6c8:	20a1c83a 	sub	r16,r4,r2
  80a6cc:	b00b883a 	mov	r5,r22
  80a6d0:	8009883a 	mov	r4,r16
  80a6d4:	08006f40 	call	8006f4 <__umodsi3>
  80a6d8:	1023883a 	mov	r17,r2
  80a6dc:	b00b883a 	mov	r5,r22
  80a6e0:	8009883a 	mov	r4,r16
  80a6e4:	08006900 	call	800690 <__udivsi3>
  80a6e8:	8822943a 	slli	r17,r17,16
  80a6ec:	1545383a 	mul	r2,r2,r21
  80a6f0:	a53fffcc 	andi	r20,r20,65535
  80a6f4:	a446b03a 	or	r3,r20,r17
  80a6f8:	18bfb02e 	bgeu	r3,r2,80a5bc <__alt_data_end+0xff80a5bc>
  80a6fc:	003fab06 	br	80a5ac <__alt_data_end+0xff80a5ac>
  80a700:	2005883a 	mov	r2,r4
  80a704:	2807883a 	mov	r3,r5
  80a708:	dfc00b17 	ldw	ra,44(sp)
  80a70c:	df000a17 	ldw	fp,40(sp)
  80a710:	ddc00917 	ldw	r23,36(sp)
  80a714:	dd800817 	ldw	r22,32(sp)
  80a718:	dd400717 	ldw	r21,28(sp)
  80a71c:	dd000617 	ldw	r20,24(sp)
  80a720:	dcc00517 	ldw	r19,20(sp)
  80a724:	dc800417 	ldw	r18,16(sp)
  80a728:	dc400317 	ldw	r17,12(sp)
  80a72c:	dc000217 	ldw	r16,8(sp)
  80a730:	dec00c04 	addi	sp,sp,48
  80a734:	f800283a 	ret
  80a738:	04c03fc4 	movi	r19,255
  80a73c:	99c9803a 	cmpltu	r4,r19,r7
  80a740:	200890fa 	slli	r4,r4,3
  80a744:	003fa806 	br	80a5e8 <__alt_data_end+0xff80a5e8>
  80a748:	00803fc4 	movi	r2,255
  80a74c:	14c5803a 	cmpltu	r2,r2,r19
  80a750:	100490fa 	slli	r2,r2,3
  80a754:	003fc006 	br	80a658 <__alt_data_end+0xff80a658>
  80a758:	00804034 	movhi	r2,256
  80a75c:	10bfffc4 	addi	r2,r2,-1
  80a760:	11808b36 	bltu	r2,r6,80a990 <__umoddi3+0x4f0>
  80a764:	01000404 	movi	r4,16
  80a768:	003f6406 	br	80a4fc <__alt_data_end+0xff80a4fc>
  80a76c:	34c4d83a 	srl	r2,r6,r19
  80a770:	3d0e983a 	sll	r7,r7,r20
  80a774:	8cf8d83a 	srl	fp,r17,r19
  80a778:	8d10983a 	sll	r8,r17,r20
  80a77c:	38aab03a 	or	r21,r7,r2
  80a780:	a82cd43a 	srli	r22,r21,16
  80a784:	84e2d83a 	srl	r17,r16,r19
  80a788:	e009883a 	mov	r4,fp
  80a78c:	b00b883a 	mov	r5,r22
  80a790:	8a22b03a 	or	r17,r17,r8
  80a794:	3524983a 	sll	r18,r6,r20
  80a798:	08006f40 	call	8006f4 <__umodsi3>
  80a79c:	e009883a 	mov	r4,fp
  80a7a0:	b00b883a 	mov	r5,r22
  80a7a4:	102f883a 	mov	r23,r2
  80a7a8:	08006900 	call	800690 <__udivsi3>
  80a7ac:	100d883a 	mov	r6,r2
  80a7b0:	b808943a 	slli	r4,r23,16
  80a7b4:	aa3fffcc 	andi	r8,r21,65535
  80a7b8:	8804d43a 	srli	r2,r17,16
  80a7bc:	41af383a 	mul	r23,r8,r6
  80a7c0:	8520983a 	sll	r16,r16,r20
  80a7c4:	1104b03a 	or	r2,r2,r4
  80a7c8:	15c0042e 	bgeu	r2,r23,80a7dc <__umoddi3+0x33c>
  80a7cc:	1545883a 	add	r2,r2,r21
  80a7d0:	30ffffc4 	addi	r3,r6,-1
  80a7d4:	1540742e 	bgeu	r2,r21,80a9a8 <__umoddi3+0x508>
  80a7d8:	180d883a 	mov	r6,r3
  80a7dc:	15efc83a 	sub	r23,r2,r23
  80a7e0:	b00b883a 	mov	r5,r22
  80a7e4:	b809883a 	mov	r4,r23
  80a7e8:	d9800115 	stw	r6,4(sp)
  80a7ec:	da000015 	stw	r8,0(sp)
  80a7f0:	08006f40 	call	8006f4 <__umodsi3>
  80a7f4:	b00b883a 	mov	r5,r22
  80a7f8:	b809883a 	mov	r4,r23
  80a7fc:	1039883a 	mov	fp,r2
  80a800:	08006900 	call	800690 <__udivsi3>
  80a804:	da000017 	ldw	r8,0(sp)
  80a808:	e038943a 	slli	fp,fp,16
  80a80c:	100b883a 	mov	r5,r2
  80a810:	4089383a 	mul	r4,r8,r2
  80a814:	8a3fffcc 	andi	r8,r17,65535
  80a818:	4710b03a 	or	r8,r8,fp
  80a81c:	d9800117 	ldw	r6,4(sp)
  80a820:	4100042e 	bgeu	r8,r4,80a834 <__umoddi3+0x394>
  80a824:	4551883a 	add	r8,r8,r21
  80a828:	10bfffc4 	addi	r2,r2,-1
  80a82c:	45405a2e 	bgeu	r8,r21,80a998 <__umoddi3+0x4f8>
  80a830:	100b883a 	mov	r5,r2
  80a834:	300c943a 	slli	r6,r6,16
  80a838:	91ffffcc 	andi	r7,r18,65535
  80a83c:	9004d43a 	srli	r2,r18,16
  80a840:	314cb03a 	or	r6,r6,r5
  80a844:	317fffcc 	andi	r5,r6,65535
  80a848:	300cd43a 	srli	r6,r6,16
  80a84c:	29d3383a 	mul	r9,r5,r7
  80a850:	288b383a 	mul	r5,r5,r2
  80a854:	31cf383a 	mul	r7,r6,r7
  80a858:	4806d43a 	srli	r3,r9,16
  80a85c:	4111c83a 	sub	r8,r8,r4
  80a860:	29cb883a 	add	r5,r5,r7
  80a864:	194b883a 	add	r5,r3,r5
  80a868:	3085383a 	mul	r2,r6,r2
  80a86c:	29c0022e 	bgeu	r5,r7,80a878 <__umoddi3+0x3d8>
  80a870:	00c00074 	movhi	r3,1
  80a874:	10c5883a 	add	r2,r2,r3
  80a878:	2808d43a 	srli	r4,r5,16
  80a87c:	280a943a 	slli	r5,r5,16
  80a880:	4a7fffcc 	andi	r9,r9,65535
  80a884:	2085883a 	add	r2,r4,r2
  80a888:	2a4b883a 	add	r5,r5,r9
  80a88c:	40803636 	bltu	r8,r2,80a968 <__umoddi3+0x4c8>
  80a890:	40804d26 	beq	r8,r2,80a9c8 <__umoddi3+0x528>
  80a894:	4089c83a 	sub	r4,r8,r2
  80a898:	280f883a 	mov	r7,r5
  80a89c:	81cfc83a 	sub	r7,r16,r7
  80a8a0:	81c7803a 	cmpltu	r3,r16,r7
  80a8a4:	20c7c83a 	sub	r3,r4,r3
  80a8a8:	1cc4983a 	sll	r2,r3,r19
  80a8ac:	3d0ed83a 	srl	r7,r7,r20
  80a8b0:	1d06d83a 	srl	r3,r3,r20
  80a8b4:	11c4b03a 	or	r2,r2,r7
  80a8b8:	003f9306 	br	80a708 <__alt_data_end+0xff80a708>
  80a8bc:	9ca6983a 	sll	r19,r19,r18
  80a8c0:	88e8d83a 	srl	r20,r17,r3
  80a8c4:	80c4d83a 	srl	r2,r16,r3
  80a8c8:	982cd43a 	srli	r22,r19,16
  80a8cc:	8ca2983a 	sll	r17,r17,r18
  80a8d0:	a009883a 	mov	r4,r20
  80a8d4:	b00b883a 	mov	r5,r22
  80a8d8:	1478b03a 	or	fp,r2,r17
  80a8dc:	08006f40 	call	8006f4 <__umodsi3>
  80a8e0:	a009883a 	mov	r4,r20
  80a8e4:	b00b883a 	mov	r5,r22
  80a8e8:	1023883a 	mov	r17,r2
  80a8ec:	08006900 	call	800690 <__udivsi3>
  80a8f0:	9d7fffcc 	andi	r21,r19,65535
  80a8f4:	880a943a 	slli	r5,r17,16
  80a8f8:	e008d43a 	srli	r4,fp,16
  80a8fc:	a885383a 	mul	r2,r21,r2
  80a900:	84a8983a 	sll	r20,r16,r18
  80a904:	2148b03a 	or	r4,r4,r5
  80a908:	2080042e 	bgeu	r4,r2,80a91c <__umoddi3+0x47c>
  80a90c:	24c9883a 	add	r4,r4,r19
  80a910:	24c00236 	bltu	r4,r19,80a91c <__umoddi3+0x47c>
  80a914:	2080012e 	bgeu	r4,r2,80a91c <__umoddi3+0x47c>
  80a918:	24c9883a 	add	r4,r4,r19
  80a91c:	20a3c83a 	sub	r17,r4,r2
  80a920:	b00b883a 	mov	r5,r22
  80a924:	8809883a 	mov	r4,r17
  80a928:	08006f40 	call	8006f4 <__umodsi3>
  80a92c:	102f883a 	mov	r23,r2
  80a930:	8809883a 	mov	r4,r17
  80a934:	b00b883a 	mov	r5,r22
  80a938:	08006900 	call	800690 <__udivsi3>
  80a93c:	b82e943a 	slli	r23,r23,16
  80a940:	a885383a 	mul	r2,r21,r2
  80a944:	e13fffcc 	andi	r4,fp,65535
  80a948:	25c8b03a 	or	r4,r4,r23
  80a94c:	2080042e 	bgeu	r4,r2,80a960 <__umoddi3+0x4c0>
  80a950:	24c9883a 	add	r4,r4,r19
  80a954:	24c00236 	bltu	r4,r19,80a960 <__umoddi3+0x4c0>
  80a958:	2080012e 	bgeu	r4,r2,80a960 <__umoddi3+0x4c0>
  80a95c:	24c9883a 	add	r4,r4,r19
  80a960:	20a3c83a 	sub	r17,r4,r2
  80a964:	003f4806 	br	80a688 <__alt_data_end+0xff80a688>
  80a968:	2c8fc83a 	sub	r7,r5,r18
  80a96c:	1545c83a 	sub	r2,r2,r21
  80a970:	29cb803a 	cmpltu	r5,r5,r7
  80a974:	1145c83a 	sub	r2,r2,r5
  80a978:	4089c83a 	sub	r4,r8,r2
  80a97c:	003fc706 	br	80a89c <__alt_data_end+0xff80a89c>
  80a980:	01000604 	movi	r4,24
  80a984:	003f1806 	br	80a5e8 <__alt_data_end+0xff80a5e8>
  80a988:	00800604 	movi	r2,24
  80a98c:	003f3206 	br	80a658 <__alt_data_end+0xff80a658>
  80a990:	01000604 	movi	r4,24
  80a994:	003ed906 	br	80a4fc <__alt_data_end+0xff80a4fc>
  80a998:	413fa52e 	bgeu	r8,r4,80a830 <__alt_data_end+0xff80a830>
  80a99c:	297fff84 	addi	r5,r5,-2
  80a9a0:	4551883a 	add	r8,r8,r21
  80a9a4:	003fa306 	br	80a834 <__alt_data_end+0xff80a834>
  80a9a8:	15ff8b2e 	bgeu	r2,r23,80a7d8 <__alt_data_end+0xff80a7d8>
  80a9ac:	31bfff84 	addi	r6,r6,-2
  80a9b0:	1545883a 	add	r2,r2,r21
  80a9b4:	003f8906 	br	80a7dc <__alt_data_end+0xff80a7dc>
  80a9b8:	24c9883a 	add	r4,r4,r19
  80a9bc:	003eee06 	br	80a578 <__alt_data_end+0xff80a578>
  80a9c0:	8005883a 	mov	r2,r16
  80a9c4:	003f1706 	br	80a624 <__alt_data_end+0xff80a624>
  80a9c8:	817fe736 	bltu	r16,r5,80a968 <__alt_data_end+0xff80a968>
  80a9cc:	280f883a 	mov	r7,r5
  80a9d0:	0009883a 	mov	r4,zero
  80a9d4:	003fb106 	br	80a89c <__alt_data_end+0xff80a89c>

0080a9d8 <__adddf3>:
  80a9d8:	02c00434 	movhi	r11,16
  80a9dc:	5affffc4 	addi	r11,r11,-1
  80a9e0:	2806d7fa 	srli	r3,r5,31
  80a9e4:	2ad4703a 	and	r10,r5,r11
  80a9e8:	3ad2703a 	and	r9,r7,r11
  80a9ec:	3804d53a 	srli	r2,r7,20
  80a9f0:	3018d77a 	srli	r12,r6,29
  80a9f4:	280ad53a 	srli	r5,r5,20
  80a9f8:	501490fa 	slli	r10,r10,3
  80a9fc:	2010d77a 	srli	r8,r4,29
  80aa00:	481290fa 	slli	r9,r9,3
  80aa04:	380ed7fa 	srli	r7,r7,31
  80aa08:	defffb04 	addi	sp,sp,-20
  80aa0c:	dc800215 	stw	r18,8(sp)
  80aa10:	dc400115 	stw	r17,4(sp)
  80aa14:	dc000015 	stw	r16,0(sp)
  80aa18:	dfc00415 	stw	ra,16(sp)
  80aa1c:	dcc00315 	stw	r19,12(sp)
  80aa20:	1c803fcc 	andi	r18,r3,255
  80aa24:	2c01ffcc 	andi	r16,r5,2047
  80aa28:	5210b03a 	or	r8,r10,r8
  80aa2c:	202290fa 	slli	r17,r4,3
  80aa30:	1081ffcc 	andi	r2,r2,2047
  80aa34:	4b12b03a 	or	r9,r9,r12
  80aa38:	300c90fa 	slli	r6,r6,3
  80aa3c:	91c07526 	beq	r18,r7,80ac14 <__adddf3+0x23c>
  80aa40:	8087c83a 	sub	r3,r16,r2
  80aa44:	00c0ab0e 	bge	zero,r3,80acf4 <__adddf3+0x31c>
  80aa48:	10002a1e 	bne	r2,zero,80aaf4 <__adddf3+0x11c>
  80aa4c:	4984b03a 	or	r2,r9,r6
  80aa50:	1000961e 	bne	r2,zero,80acac <__adddf3+0x2d4>
  80aa54:	888001cc 	andi	r2,r17,7
  80aa58:	10000726 	beq	r2,zero,80aa78 <__adddf3+0xa0>
  80aa5c:	888003cc 	andi	r2,r17,15
  80aa60:	00c00104 	movi	r3,4
  80aa64:	10c00426 	beq	r2,r3,80aa78 <__adddf3+0xa0>
  80aa68:	88c7883a 	add	r3,r17,r3
  80aa6c:	1c63803a 	cmpltu	r17,r3,r17
  80aa70:	4451883a 	add	r8,r8,r17
  80aa74:	1823883a 	mov	r17,r3
  80aa78:	4080202c 	andhi	r2,r8,128
  80aa7c:	10005926 	beq	r2,zero,80abe4 <__adddf3+0x20c>
  80aa80:	84000044 	addi	r16,r16,1
  80aa84:	0081ffc4 	movi	r2,2047
  80aa88:	8080ba26 	beq	r16,r2,80ad74 <__adddf3+0x39c>
  80aa8c:	00bfe034 	movhi	r2,65408
  80aa90:	10bfffc4 	addi	r2,r2,-1
  80aa94:	4090703a 	and	r8,r8,r2
  80aa98:	4004977a 	slli	r2,r8,29
  80aa9c:	4010927a 	slli	r8,r8,9
  80aaa0:	8822d0fa 	srli	r17,r17,3
  80aaa4:	8401ffcc 	andi	r16,r16,2047
  80aaa8:	4010d33a 	srli	r8,r8,12
  80aaac:	9007883a 	mov	r3,r18
  80aab0:	1444b03a 	or	r2,r2,r17
  80aab4:	8401ffcc 	andi	r16,r16,2047
  80aab8:	8020953a 	slli	r16,r16,20
  80aabc:	18c03fcc 	andi	r3,r3,255
  80aac0:	01000434 	movhi	r4,16
  80aac4:	213fffc4 	addi	r4,r4,-1
  80aac8:	180697fa 	slli	r3,r3,31
  80aacc:	4110703a 	and	r8,r8,r4
  80aad0:	4410b03a 	or	r8,r8,r16
  80aad4:	40c6b03a 	or	r3,r8,r3
  80aad8:	dfc00417 	ldw	ra,16(sp)
  80aadc:	dcc00317 	ldw	r19,12(sp)
  80aae0:	dc800217 	ldw	r18,8(sp)
  80aae4:	dc400117 	ldw	r17,4(sp)
  80aae8:	dc000017 	ldw	r16,0(sp)
  80aaec:	dec00504 	addi	sp,sp,20
  80aaf0:	f800283a 	ret
  80aaf4:	0081ffc4 	movi	r2,2047
  80aaf8:	80bfd626 	beq	r16,r2,80aa54 <__alt_data_end+0xff80aa54>
  80aafc:	4a402034 	orhi	r9,r9,128
  80ab00:	00800e04 	movi	r2,56
  80ab04:	10c09f16 	blt	r2,r3,80ad84 <__adddf3+0x3ac>
  80ab08:	008007c4 	movi	r2,31
  80ab0c:	10c0c216 	blt	r2,r3,80ae18 <__adddf3+0x440>
  80ab10:	00800804 	movi	r2,32
  80ab14:	10c5c83a 	sub	r2,r2,r3
  80ab18:	488a983a 	sll	r5,r9,r2
  80ab1c:	30c8d83a 	srl	r4,r6,r3
  80ab20:	3084983a 	sll	r2,r6,r2
  80ab24:	48c6d83a 	srl	r3,r9,r3
  80ab28:	290cb03a 	or	r6,r5,r4
  80ab2c:	1004c03a 	cmpne	r2,r2,zero
  80ab30:	308cb03a 	or	r6,r6,r2
  80ab34:	898dc83a 	sub	r6,r17,r6
  80ab38:	89a3803a 	cmpltu	r17,r17,r6
  80ab3c:	40d1c83a 	sub	r8,r8,r3
  80ab40:	4451c83a 	sub	r8,r8,r17
  80ab44:	3023883a 	mov	r17,r6
  80ab48:	4080202c 	andhi	r2,r8,128
  80ab4c:	10002326 	beq	r2,zero,80abdc <__adddf3+0x204>
  80ab50:	04c02034 	movhi	r19,128
  80ab54:	9cffffc4 	addi	r19,r19,-1
  80ab58:	44e6703a 	and	r19,r8,r19
  80ab5c:	98007626 	beq	r19,zero,80ad38 <__adddf3+0x360>
  80ab60:	9809883a 	mov	r4,r19
  80ab64:	080cfdc0 	call	80cfdc <__clzsi2>
  80ab68:	10fffe04 	addi	r3,r2,-8
  80ab6c:	010007c4 	movi	r4,31
  80ab70:	20c07716 	blt	r4,r3,80ad50 <__adddf3+0x378>
  80ab74:	00800804 	movi	r2,32
  80ab78:	10c5c83a 	sub	r2,r2,r3
  80ab7c:	8884d83a 	srl	r2,r17,r2
  80ab80:	98d0983a 	sll	r8,r19,r3
  80ab84:	88e2983a 	sll	r17,r17,r3
  80ab88:	1204b03a 	or	r2,r2,r8
  80ab8c:	1c007416 	blt	r3,r16,80ad60 <__adddf3+0x388>
  80ab90:	1c21c83a 	sub	r16,r3,r16
  80ab94:	82000044 	addi	r8,r16,1
  80ab98:	00c007c4 	movi	r3,31
  80ab9c:	1a009116 	blt	r3,r8,80ade4 <__adddf3+0x40c>
  80aba0:	00c00804 	movi	r3,32
  80aba4:	1a07c83a 	sub	r3,r3,r8
  80aba8:	8a08d83a 	srl	r4,r17,r8
  80abac:	88e2983a 	sll	r17,r17,r3
  80abb0:	10c6983a 	sll	r3,r2,r3
  80abb4:	1210d83a 	srl	r8,r2,r8
  80abb8:	8804c03a 	cmpne	r2,r17,zero
  80abbc:	1906b03a 	or	r3,r3,r4
  80abc0:	18a2b03a 	or	r17,r3,r2
  80abc4:	0021883a 	mov	r16,zero
  80abc8:	003fa206 	br	80aa54 <__alt_data_end+0xff80aa54>
  80abcc:	1890b03a 	or	r8,r3,r2
  80abd0:	40017d26 	beq	r8,zero,80b1c8 <__adddf3+0x7f0>
  80abd4:	1011883a 	mov	r8,r2
  80abd8:	1823883a 	mov	r17,r3
  80abdc:	888001cc 	andi	r2,r17,7
  80abe0:	103f9e1e 	bne	r2,zero,80aa5c <__alt_data_end+0xff80aa5c>
  80abe4:	4004977a 	slli	r2,r8,29
  80abe8:	8822d0fa 	srli	r17,r17,3
  80abec:	4010d0fa 	srli	r8,r8,3
  80abf0:	9007883a 	mov	r3,r18
  80abf4:	1444b03a 	or	r2,r2,r17
  80abf8:	0101ffc4 	movi	r4,2047
  80abfc:	81002426 	beq	r16,r4,80ac90 <__adddf3+0x2b8>
  80ac00:	8120703a 	and	r16,r16,r4
  80ac04:	01000434 	movhi	r4,16
  80ac08:	213fffc4 	addi	r4,r4,-1
  80ac0c:	4110703a 	and	r8,r8,r4
  80ac10:	003fa806 	br	80aab4 <__alt_data_end+0xff80aab4>
  80ac14:	8089c83a 	sub	r4,r16,r2
  80ac18:	01005e0e 	bge	zero,r4,80ad94 <__adddf3+0x3bc>
  80ac1c:	10002b26 	beq	r2,zero,80accc <__adddf3+0x2f4>
  80ac20:	0081ffc4 	movi	r2,2047
  80ac24:	80bf8b26 	beq	r16,r2,80aa54 <__alt_data_end+0xff80aa54>
  80ac28:	4a402034 	orhi	r9,r9,128
  80ac2c:	00800e04 	movi	r2,56
  80ac30:	1100a40e 	bge	r2,r4,80aec4 <__adddf3+0x4ec>
  80ac34:	498cb03a 	or	r6,r9,r6
  80ac38:	300ac03a 	cmpne	r5,r6,zero
  80ac3c:	0013883a 	mov	r9,zero
  80ac40:	2c4b883a 	add	r5,r5,r17
  80ac44:	2c63803a 	cmpltu	r17,r5,r17
  80ac48:	4a11883a 	add	r8,r9,r8
  80ac4c:	8a11883a 	add	r8,r17,r8
  80ac50:	2823883a 	mov	r17,r5
  80ac54:	4080202c 	andhi	r2,r8,128
  80ac58:	103fe026 	beq	r2,zero,80abdc <__alt_data_end+0xff80abdc>
  80ac5c:	84000044 	addi	r16,r16,1
  80ac60:	0081ffc4 	movi	r2,2047
  80ac64:	8080d226 	beq	r16,r2,80afb0 <__adddf3+0x5d8>
  80ac68:	00bfe034 	movhi	r2,65408
  80ac6c:	10bfffc4 	addi	r2,r2,-1
  80ac70:	4090703a 	and	r8,r8,r2
  80ac74:	880ad07a 	srli	r5,r17,1
  80ac78:	400897fa 	slli	r4,r8,31
  80ac7c:	88c0004c 	andi	r3,r17,1
  80ac80:	28e2b03a 	or	r17,r5,r3
  80ac84:	4010d07a 	srli	r8,r8,1
  80ac88:	2462b03a 	or	r17,r4,r17
  80ac8c:	003f7106 	br	80aa54 <__alt_data_end+0xff80aa54>
  80ac90:	4088b03a 	or	r4,r8,r2
  80ac94:	20014526 	beq	r4,zero,80b1ac <__adddf3+0x7d4>
  80ac98:	01000434 	movhi	r4,16
  80ac9c:	42000234 	orhi	r8,r8,8
  80aca0:	213fffc4 	addi	r4,r4,-1
  80aca4:	4110703a 	and	r8,r8,r4
  80aca8:	003f8206 	br	80aab4 <__alt_data_end+0xff80aab4>
  80acac:	18ffffc4 	addi	r3,r3,-1
  80acb0:	1800491e 	bne	r3,zero,80add8 <__adddf3+0x400>
  80acb4:	898bc83a 	sub	r5,r17,r6
  80acb8:	8963803a 	cmpltu	r17,r17,r5
  80acbc:	4251c83a 	sub	r8,r8,r9
  80acc0:	4451c83a 	sub	r8,r8,r17
  80acc4:	2823883a 	mov	r17,r5
  80acc8:	003f9f06 	br	80ab48 <__alt_data_end+0xff80ab48>
  80accc:	4984b03a 	or	r2,r9,r6
  80acd0:	103f6026 	beq	r2,zero,80aa54 <__alt_data_end+0xff80aa54>
  80acd4:	213fffc4 	addi	r4,r4,-1
  80acd8:	2000931e 	bne	r4,zero,80af28 <__adddf3+0x550>
  80acdc:	898d883a 	add	r6,r17,r6
  80ace0:	3463803a 	cmpltu	r17,r6,r17
  80ace4:	4251883a 	add	r8,r8,r9
  80ace8:	8a11883a 	add	r8,r17,r8
  80acec:	3023883a 	mov	r17,r6
  80acf0:	003fd806 	br	80ac54 <__alt_data_end+0xff80ac54>
  80acf4:	1800541e 	bne	r3,zero,80ae48 <__adddf3+0x470>
  80acf8:	80800044 	addi	r2,r16,1
  80acfc:	1081ffcc 	andi	r2,r2,2047
  80ad00:	00c00044 	movi	r3,1
  80ad04:	1880a00e 	bge	r3,r2,80af88 <__adddf3+0x5b0>
  80ad08:	8989c83a 	sub	r4,r17,r6
  80ad0c:	8905803a 	cmpltu	r2,r17,r4
  80ad10:	4267c83a 	sub	r19,r8,r9
  80ad14:	98a7c83a 	sub	r19,r19,r2
  80ad18:	9880202c 	andhi	r2,r19,128
  80ad1c:	10006326 	beq	r2,zero,80aeac <__adddf3+0x4d4>
  80ad20:	3463c83a 	sub	r17,r6,r17
  80ad24:	4a07c83a 	sub	r3,r9,r8
  80ad28:	344d803a 	cmpltu	r6,r6,r17
  80ad2c:	19a7c83a 	sub	r19,r3,r6
  80ad30:	3825883a 	mov	r18,r7
  80ad34:	983f8a1e 	bne	r19,zero,80ab60 <__alt_data_end+0xff80ab60>
  80ad38:	8809883a 	mov	r4,r17
  80ad3c:	080cfdc0 	call	80cfdc <__clzsi2>
  80ad40:	10800804 	addi	r2,r2,32
  80ad44:	10fffe04 	addi	r3,r2,-8
  80ad48:	010007c4 	movi	r4,31
  80ad4c:	20ff890e 	bge	r4,r3,80ab74 <__alt_data_end+0xff80ab74>
  80ad50:	10bff604 	addi	r2,r2,-40
  80ad54:	8884983a 	sll	r2,r17,r2
  80ad58:	0023883a 	mov	r17,zero
  80ad5c:	1c3f8c0e 	bge	r3,r16,80ab90 <__alt_data_end+0xff80ab90>
  80ad60:	023fe034 	movhi	r8,65408
  80ad64:	423fffc4 	addi	r8,r8,-1
  80ad68:	80e1c83a 	sub	r16,r16,r3
  80ad6c:	1210703a 	and	r8,r2,r8
  80ad70:	003f3806 	br	80aa54 <__alt_data_end+0xff80aa54>
  80ad74:	9007883a 	mov	r3,r18
  80ad78:	0011883a 	mov	r8,zero
  80ad7c:	0005883a 	mov	r2,zero
  80ad80:	003f4c06 	br	80aab4 <__alt_data_end+0xff80aab4>
  80ad84:	498cb03a 	or	r6,r9,r6
  80ad88:	300cc03a 	cmpne	r6,r6,zero
  80ad8c:	0007883a 	mov	r3,zero
  80ad90:	003f6806 	br	80ab34 <__alt_data_end+0xff80ab34>
  80ad94:	20009c1e 	bne	r4,zero,80b008 <__adddf3+0x630>
  80ad98:	80800044 	addi	r2,r16,1
  80ad9c:	1141ffcc 	andi	r5,r2,2047
  80ada0:	01000044 	movi	r4,1
  80ada4:	2140670e 	bge	r4,r5,80af44 <__adddf3+0x56c>
  80ada8:	0101ffc4 	movi	r4,2047
  80adac:	11007f26 	beq	r2,r4,80afac <__adddf3+0x5d4>
  80adb0:	898d883a 	add	r6,r17,r6
  80adb4:	4247883a 	add	r3,r8,r9
  80adb8:	3451803a 	cmpltu	r8,r6,r17
  80adbc:	40d1883a 	add	r8,r8,r3
  80adc0:	402297fa 	slli	r17,r8,31
  80adc4:	300cd07a 	srli	r6,r6,1
  80adc8:	4010d07a 	srli	r8,r8,1
  80adcc:	1021883a 	mov	r16,r2
  80add0:	89a2b03a 	or	r17,r17,r6
  80add4:	003f1f06 	br	80aa54 <__alt_data_end+0xff80aa54>
  80add8:	0081ffc4 	movi	r2,2047
  80addc:	80bf481e 	bne	r16,r2,80ab00 <__alt_data_end+0xff80ab00>
  80ade0:	003f1c06 	br	80aa54 <__alt_data_end+0xff80aa54>
  80ade4:	843ff844 	addi	r16,r16,-31
  80ade8:	01000804 	movi	r4,32
  80adec:	1406d83a 	srl	r3,r2,r16
  80adf0:	41005026 	beq	r8,r4,80af34 <__adddf3+0x55c>
  80adf4:	01001004 	movi	r4,64
  80adf8:	2211c83a 	sub	r8,r4,r8
  80adfc:	1204983a 	sll	r2,r2,r8
  80ae00:	88a2b03a 	or	r17,r17,r2
  80ae04:	8822c03a 	cmpne	r17,r17,zero
  80ae08:	1c62b03a 	or	r17,r3,r17
  80ae0c:	0011883a 	mov	r8,zero
  80ae10:	0021883a 	mov	r16,zero
  80ae14:	003f7106 	br	80abdc <__alt_data_end+0xff80abdc>
  80ae18:	193ff804 	addi	r4,r3,-32
  80ae1c:	00800804 	movi	r2,32
  80ae20:	4908d83a 	srl	r4,r9,r4
  80ae24:	18804526 	beq	r3,r2,80af3c <__adddf3+0x564>
  80ae28:	00801004 	movi	r2,64
  80ae2c:	10c5c83a 	sub	r2,r2,r3
  80ae30:	4886983a 	sll	r3,r9,r2
  80ae34:	198cb03a 	or	r6,r3,r6
  80ae38:	300cc03a 	cmpne	r6,r6,zero
  80ae3c:	218cb03a 	or	r6,r4,r6
  80ae40:	0007883a 	mov	r3,zero
  80ae44:	003f3b06 	br	80ab34 <__alt_data_end+0xff80ab34>
  80ae48:	80002a26 	beq	r16,zero,80aef4 <__adddf3+0x51c>
  80ae4c:	0101ffc4 	movi	r4,2047
  80ae50:	11006826 	beq	r2,r4,80aff4 <__adddf3+0x61c>
  80ae54:	00c7c83a 	sub	r3,zero,r3
  80ae58:	42002034 	orhi	r8,r8,128
  80ae5c:	01000e04 	movi	r4,56
  80ae60:	20c07c16 	blt	r4,r3,80b054 <__adddf3+0x67c>
  80ae64:	010007c4 	movi	r4,31
  80ae68:	20c0da16 	blt	r4,r3,80b1d4 <__adddf3+0x7fc>
  80ae6c:	01000804 	movi	r4,32
  80ae70:	20c9c83a 	sub	r4,r4,r3
  80ae74:	4114983a 	sll	r10,r8,r4
  80ae78:	88cad83a 	srl	r5,r17,r3
  80ae7c:	8908983a 	sll	r4,r17,r4
  80ae80:	40c6d83a 	srl	r3,r8,r3
  80ae84:	5162b03a 	or	r17,r10,r5
  80ae88:	2008c03a 	cmpne	r4,r4,zero
  80ae8c:	8922b03a 	or	r17,r17,r4
  80ae90:	3463c83a 	sub	r17,r6,r17
  80ae94:	48c7c83a 	sub	r3,r9,r3
  80ae98:	344d803a 	cmpltu	r6,r6,r17
  80ae9c:	1991c83a 	sub	r8,r3,r6
  80aea0:	1021883a 	mov	r16,r2
  80aea4:	3825883a 	mov	r18,r7
  80aea8:	003f2706 	br	80ab48 <__alt_data_end+0xff80ab48>
  80aeac:	24d0b03a 	or	r8,r4,r19
  80aeb0:	40001b1e 	bne	r8,zero,80af20 <__adddf3+0x548>
  80aeb4:	0005883a 	mov	r2,zero
  80aeb8:	0007883a 	mov	r3,zero
  80aebc:	0021883a 	mov	r16,zero
  80aec0:	003f4d06 	br	80abf8 <__alt_data_end+0xff80abf8>
  80aec4:	008007c4 	movi	r2,31
  80aec8:	11003c16 	blt	r2,r4,80afbc <__adddf3+0x5e4>
  80aecc:	00800804 	movi	r2,32
  80aed0:	1105c83a 	sub	r2,r2,r4
  80aed4:	488e983a 	sll	r7,r9,r2
  80aed8:	310ad83a 	srl	r5,r6,r4
  80aedc:	3084983a 	sll	r2,r6,r2
  80aee0:	4912d83a 	srl	r9,r9,r4
  80aee4:	394ab03a 	or	r5,r7,r5
  80aee8:	1004c03a 	cmpne	r2,r2,zero
  80aeec:	288ab03a 	or	r5,r5,r2
  80aef0:	003f5306 	br	80ac40 <__alt_data_end+0xff80ac40>
  80aef4:	4448b03a 	or	r4,r8,r17
  80aef8:	20003e26 	beq	r4,zero,80aff4 <__adddf3+0x61c>
  80aefc:	00c6303a 	nor	r3,zero,r3
  80af00:	18003a1e 	bne	r3,zero,80afec <__adddf3+0x614>
  80af04:	3463c83a 	sub	r17,r6,r17
  80af08:	4a07c83a 	sub	r3,r9,r8
  80af0c:	344d803a 	cmpltu	r6,r6,r17
  80af10:	1991c83a 	sub	r8,r3,r6
  80af14:	1021883a 	mov	r16,r2
  80af18:	3825883a 	mov	r18,r7
  80af1c:	003f0a06 	br	80ab48 <__alt_data_end+0xff80ab48>
  80af20:	2023883a 	mov	r17,r4
  80af24:	003f0d06 	br	80ab5c <__alt_data_end+0xff80ab5c>
  80af28:	0081ffc4 	movi	r2,2047
  80af2c:	80bf3f1e 	bne	r16,r2,80ac2c <__alt_data_end+0xff80ac2c>
  80af30:	003ec806 	br	80aa54 <__alt_data_end+0xff80aa54>
  80af34:	0005883a 	mov	r2,zero
  80af38:	003fb106 	br	80ae00 <__alt_data_end+0xff80ae00>
  80af3c:	0007883a 	mov	r3,zero
  80af40:	003fbc06 	br	80ae34 <__alt_data_end+0xff80ae34>
  80af44:	4444b03a 	or	r2,r8,r17
  80af48:	8000871e 	bne	r16,zero,80b168 <__adddf3+0x790>
  80af4c:	1000ba26 	beq	r2,zero,80b238 <__adddf3+0x860>
  80af50:	4984b03a 	or	r2,r9,r6
  80af54:	103ebf26 	beq	r2,zero,80aa54 <__alt_data_end+0xff80aa54>
  80af58:	8985883a 	add	r2,r17,r6
  80af5c:	4247883a 	add	r3,r8,r9
  80af60:	1451803a 	cmpltu	r8,r2,r17
  80af64:	40d1883a 	add	r8,r8,r3
  80af68:	40c0202c 	andhi	r3,r8,128
  80af6c:	1023883a 	mov	r17,r2
  80af70:	183f1a26 	beq	r3,zero,80abdc <__alt_data_end+0xff80abdc>
  80af74:	00bfe034 	movhi	r2,65408
  80af78:	10bfffc4 	addi	r2,r2,-1
  80af7c:	2021883a 	mov	r16,r4
  80af80:	4090703a 	and	r8,r8,r2
  80af84:	003eb306 	br	80aa54 <__alt_data_end+0xff80aa54>
  80af88:	4444b03a 	or	r2,r8,r17
  80af8c:	8000291e 	bne	r16,zero,80b034 <__adddf3+0x65c>
  80af90:	10004b1e 	bne	r2,zero,80b0c0 <__adddf3+0x6e8>
  80af94:	4990b03a 	or	r8,r9,r6
  80af98:	40008b26 	beq	r8,zero,80b1c8 <__adddf3+0x7f0>
  80af9c:	4811883a 	mov	r8,r9
  80afa0:	3023883a 	mov	r17,r6
  80afa4:	3825883a 	mov	r18,r7
  80afa8:	003eaa06 	br	80aa54 <__alt_data_end+0xff80aa54>
  80afac:	1021883a 	mov	r16,r2
  80afb0:	0011883a 	mov	r8,zero
  80afb4:	0005883a 	mov	r2,zero
  80afb8:	003f0f06 	br	80abf8 <__alt_data_end+0xff80abf8>
  80afbc:	217ff804 	addi	r5,r4,-32
  80afc0:	00800804 	movi	r2,32
  80afc4:	494ad83a 	srl	r5,r9,r5
  80afc8:	20807d26 	beq	r4,r2,80b1c0 <__adddf3+0x7e8>
  80afcc:	00801004 	movi	r2,64
  80afd0:	1109c83a 	sub	r4,r2,r4
  80afd4:	4912983a 	sll	r9,r9,r4
  80afd8:	498cb03a 	or	r6,r9,r6
  80afdc:	300cc03a 	cmpne	r6,r6,zero
  80afe0:	298ab03a 	or	r5,r5,r6
  80afe4:	0013883a 	mov	r9,zero
  80afe8:	003f1506 	br	80ac40 <__alt_data_end+0xff80ac40>
  80afec:	0101ffc4 	movi	r4,2047
  80aff0:	113f9a1e 	bne	r2,r4,80ae5c <__alt_data_end+0xff80ae5c>
  80aff4:	4811883a 	mov	r8,r9
  80aff8:	3023883a 	mov	r17,r6
  80affc:	1021883a 	mov	r16,r2
  80b000:	3825883a 	mov	r18,r7
  80b004:	003e9306 	br	80aa54 <__alt_data_end+0xff80aa54>
  80b008:	8000161e 	bne	r16,zero,80b064 <__adddf3+0x68c>
  80b00c:	444ab03a 	or	r5,r8,r17
  80b010:	28005126 	beq	r5,zero,80b158 <__adddf3+0x780>
  80b014:	0108303a 	nor	r4,zero,r4
  80b018:	20004d1e 	bne	r4,zero,80b150 <__adddf3+0x778>
  80b01c:	89a3883a 	add	r17,r17,r6
  80b020:	4253883a 	add	r9,r8,r9
  80b024:	898d803a 	cmpltu	r6,r17,r6
  80b028:	3251883a 	add	r8,r6,r9
  80b02c:	1021883a 	mov	r16,r2
  80b030:	003f0806 	br	80ac54 <__alt_data_end+0xff80ac54>
  80b034:	1000301e 	bne	r2,zero,80b0f8 <__adddf3+0x720>
  80b038:	4984b03a 	or	r2,r9,r6
  80b03c:	10007126 	beq	r2,zero,80b204 <__adddf3+0x82c>
  80b040:	4811883a 	mov	r8,r9
  80b044:	3023883a 	mov	r17,r6
  80b048:	3825883a 	mov	r18,r7
  80b04c:	0401ffc4 	movi	r16,2047
  80b050:	003e8006 	br	80aa54 <__alt_data_end+0xff80aa54>
  80b054:	4462b03a 	or	r17,r8,r17
  80b058:	8822c03a 	cmpne	r17,r17,zero
  80b05c:	0007883a 	mov	r3,zero
  80b060:	003f8b06 	br	80ae90 <__alt_data_end+0xff80ae90>
  80b064:	0141ffc4 	movi	r5,2047
  80b068:	11403b26 	beq	r2,r5,80b158 <__adddf3+0x780>
  80b06c:	0109c83a 	sub	r4,zero,r4
  80b070:	42002034 	orhi	r8,r8,128
  80b074:	01400e04 	movi	r5,56
  80b078:	29006716 	blt	r5,r4,80b218 <__adddf3+0x840>
  80b07c:	014007c4 	movi	r5,31
  80b080:	29007016 	blt	r5,r4,80b244 <__adddf3+0x86c>
  80b084:	01400804 	movi	r5,32
  80b088:	290bc83a 	sub	r5,r5,r4
  80b08c:	4154983a 	sll	r10,r8,r5
  80b090:	890ed83a 	srl	r7,r17,r4
  80b094:	894a983a 	sll	r5,r17,r5
  80b098:	4108d83a 	srl	r4,r8,r4
  80b09c:	51e2b03a 	or	r17,r10,r7
  80b0a0:	280ac03a 	cmpne	r5,r5,zero
  80b0a4:	8962b03a 	or	r17,r17,r5
  80b0a8:	89a3883a 	add	r17,r17,r6
  80b0ac:	2253883a 	add	r9,r4,r9
  80b0b0:	898d803a 	cmpltu	r6,r17,r6
  80b0b4:	3251883a 	add	r8,r6,r9
  80b0b8:	1021883a 	mov	r16,r2
  80b0bc:	003ee506 	br	80ac54 <__alt_data_end+0xff80ac54>
  80b0c0:	4984b03a 	or	r2,r9,r6
  80b0c4:	103e6326 	beq	r2,zero,80aa54 <__alt_data_end+0xff80aa54>
  80b0c8:	8987c83a 	sub	r3,r17,r6
  80b0cc:	88c9803a 	cmpltu	r4,r17,r3
  80b0d0:	4245c83a 	sub	r2,r8,r9
  80b0d4:	1105c83a 	sub	r2,r2,r4
  80b0d8:	1100202c 	andhi	r4,r2,128
  80b0dc:	203ebb26 	beq	r4,zero,80abcc <__alt_data_end+0xff80abcc>
  80b0e0:	3463c83a 	sub	r17,r6,r17
  80b0e4:	4a07c83a 	sub	r3,r9,r8
  80b0e8:	344d803a 	cmpltu	r6,r6,r17
  80b0ec:	1991c83a 	sub	r8,r3,r6
  80b0f0:	3825883a 	mov	r18,r7
  80b0f4:	003e5706 	br	80aa54 <__alt_data_end+0xff80aa54>
  80b0f8:	4984b03a 	or	r2,r9,r6
  80b0fc:	10002e26 	beq	r2,zero,80b1b8 <__adddf3+0x7e0>
  80b100:	4004d0fa 	srli	r2,r8,3
  80b104:	8822d0fa 	srli	r17,r17,3
  80b108:	4010977a 	slli	r8,r8,29
  80b10c:	10c0022c 	andhi	r3,r2,8
  80b110:	4462b03a 	or	r17,r8,r17
  80b114:	18000826 	beq	r3,zero,80b138 <__adddf3+0x760>
  80b118:	4808d0fa 	srli	r4,r9,3
  80b11c:	20c0022c 	andhi	r3,r4,8
  80b120:	1800051e 	bne	r3,zero,80b138 <__adddf3+0x760>
  80b124:	300cd0fa 	srli	r6,r6,3
  80b128:	4806977a 	slli	r3,r9,29
  80b12c:	2005883a 	mov	r2,r4
  80b130:	3825883a 	mov	r18,r7
  80b134:	19a2b03a 	or	r17,r3,r6
  80b138:	8810d77a 	srli	r8,r17,29
  80b13c:	100490fa 	slli	r2,r2,3
  80b140:	882290fa 	slli	r17,r17,3
  80b144:	0401ffc4 	movi	r16,2047
  80b148:	4090b03a 	or	r8,r8,r2
  80b14c:	003e4106 	br	80aa54 <__alt_data_end+0xff80aa54>
  80b150:	0141ffc4 	movi	r5,2047
  80b154:	117fc71e 	bne	r2,r5,80b074 <__alt_data_end+0xff80b074>
  80b158:	4811883a 	mov	r8,r9
  80b15c:	3023883a 	mov	r17,r6
  80b160:	1021883a 	mov	r16,r2
  80b164:	003e3b06 	br	80aa54 <__alt_data_end+0xff80aa54>
  80b168:	10002f26 	beq	r2,zero,80b228 <__adddf3+0x850>
  80b16c:	4984b03a 	or	r2,r9,r6
  80b170:	10001126 	beq	r2,zero,80b1b8 <__adddf3+0x7e0>
  80b174:	4004d0fa 	srli	r2,r8,3
  80b178:	8822d0fa 	srli	r17,r17,3
  80b17c:	4010977a 	slli	r8,r8,29
  80b180:	10c0022c 	andhi	r3,r2,8
  80b184:	4462b03a 	or	r17,r8,r17
  80b188:	183feb26 	beq	r3,zero,80b138 <__alt_data_end+0xff80b138>
  80b18c:	4808d0fa 	srli	r4,r9,3
  80b190:	20c0022c 	andhi	r3,r4,8
  80b194:	183fe81e 	bne	r3,zero,80b138 <__alt_data_end+0xff80b138>
  80b198:	300cd0fa 	srli	r6,r6,3
  80b19c:	4806977a 	slli	r3,r9,29
  80b1a0:	2005883a 	mov	r2,r4
  80b1a4:	19a2b03a 	or	r17,r3,r6
  80b1a8:	003fe306 	br	80b138 <__alt_data_end+0xff80b138>
  80b1ac:	0011883a 	mov	r8,zero
  80b1b0:	0005883a 	mov	r2,zero
  80b1b4:	003e3f06 	br	80aab4 <__alt_data_end+0xff80aab4>
  80b1b8:	0401ffc4 	movi	r16,2047
  80b1bc:	003e2506 	br	80aa54 <__alt_data_end+0xff80aa54>
  80b1c0:	0013883a 	mov	r9,zero
  80b1c4:	003f8406 	br	80afd8 <__alt_data_end+0xff80afd8>
  80b1c8:	0005883a 	mov	r2,zero
  80b1cc:	0007883a 	mov	r3,zero
  80b1d0:	003e8906 	br	80abf8 <__alt_data_end+0xff80abf8>
  80b1d4:	197ff804 	addi	r5,r3,-32
  80b1d8:	01000804 	movi	r4,32
  80b1dc:	414ad83a 	srl	r5,r8,r5
  80b1e0:	19002426 	beq	r3,r4,80b274 <__adddf3+0x89c>
  80b1e4:	01001004 	movi	r4,64
  80b1e8:	20c7c83a 	sub	r3,r4,r3
  80b1ec:	40c6983a 	sll	r3,r8,r3
  80b1f0:	1c46b03a 	or	r3,r3,r17
  80b1f4:	1806c03a 	cmpne	r3,r3,zero
  80b1f8:	28e2b03a 	or	r17,r5,r3
  80b1fc:	0007883a 	mov	r3,zero
  80b200:	003f2306 	br	80ae90 <__alt_data_end+0xff80ae90>
  80b204:	0007883a 	mov	r3,zero
  80b208:	5811883a 	mov	r8,r11
  80b20c:	00bfffc4 	movi	r2,-1
  80b210:	0401ffc4 	movi	r16,2047
  80b214:	003e7806 	br	80abf8 <__alt_data_end+0xff80abf8>
  80b218:	4462b03a 	or	r17,r8,r17
  80b21c:	8822c03a 	cmpne	r17,r17,zero
  80b220:	0009883a 	mov	r4,zero
  80b224:	003fa006 	br	80b0a8 <__alt_data_end+0xff80b0a8>
  80b228:	4811883a 	mov	r8,r9
  80b22c:	3023883a 	mov	r17,r6
  80b230:	0401ffc4 	movi	r16,2047
  80b234:	003e0706 	br	80aa54 <__alt_data_end+0xff80aa54>
  80b238:	4811883a 	mov	r8,r9
  80b23c:	3023883a 	mov	r17,r6
  80b240:	003e0406 	br	80aa54 <__alt_data_end+0xff80aa54>
  80b244:	21fff804 	addi	r7,r4,-32
  80b248:	01400804 	movi	r5,32
  80b24c:	41ced83a 	srl	r7,r8,r7
  80b250:	21400a26 	beq	r4,r5,80b27c <__adddf3+0x8a4>
  80b254:	01401004 	movi	r5,64
  80b258:	2909c83a 	sub	r4,r5,r4
  80b25c:	4108983a 	sll	r4,r8,r4
  80b260:	2448b03a 	or	r4,r4,r17
  80b264:	2008c03a 	cmpne	r4,r4,zero
  80b268:	3922b03a 	or	r17,r7,r4
  80b26c:	0009883a 	mov	r4,zero
  80b270:	003f8d06 	br	80b0a8 <__alt_data_end+0xff80b0a8>
  80b274:	0007883a 	mov	r3,zero
  80b278:	003fdd06 	br	80b1f0 <__alt_data_end+0xff80b1f0>
  80b27c:	0009883a 	mov	r4,zero
  80b280:	003ff706 	br	80b260 <__alt_data_end+0xff80b260>

0080b284 <__divdf3>:
  80b284:	defff204 	addi	sp,sp,-56
  80b288:	dd400915 	stw	r21,36(sp)
  80b28c:	282ad53a 	srli	r21,r5,20
  80b290:	dd000815 	stw	r20,32(sp)
  80b294:	2828d7fa 	srli	r20,r5,31
  80b298:	dc000415 	stw	r16,16(sp)
  80b29c:	04000434 	movhi	r16,16
  80b2a0:	df000c15 	stw	fp,48(sp)
  80b2a4:	843fffc4 	addi	r16,r16,-1
  80b2a8:	dfc00d15 	stw	ra,52(sp)
  80b2ac:	ddc00b15 	stw	r23,44(sp)
  80b2b0:	dd800a15 	stw	r22,40(sp)
  80b2b4:	dcc00715 	stw	r19,28(sp)
  80b2b8:	dc800615 	stw	r18,24(sp)
  80b2bc:	dc400515 	stw	r17,20(sp)
  80b2c0:	ad41ffcc 	andi	r21,r21,2047
  80b2c4:	2c20703a 	and	r16,r5,r16
  80b2c8:	a7003fcc 	andi	fp,r20,255
  80b2cc:	a8006126 	beq	r21,zero,80b454 <__divdf3+0x1d0>
  80b2d0:	0081ffc4 	movi	r2,2047
  80b2d4:	2025883a 	mov	r18,r4
  80b2d8:	a8803726 	beq	r21,r2,80b3b8 <__divdf3+0x134>
  80b2dc:	80800434 	orhi	r2,r16,16
  80b2e0:	100490fa 	slli	r2,r2,3
  80b2e4:	2020d77a 	srli	r16,r4,29
  80b2e8:	202490fa 	slli	r18,r4,3
  80b2ec:	ad7f0044 	addi	r21,r21,-1023
  80b2f0:	80a0b03a 	or	r16,r16,r2
  80b2f4:	0027883a 	mov	r19,zero
  80b2f8:	0013883a 	mov	r9,zero
  80b2fc:	3804d53a 	srli	r2,r7,20
  80b300:	382cd7fa 	srli	r22,r7,31
  80b304:	04400434 	movhi	r17,16
  80b308:	8c7fffc4 	addi	r17,r17,-1
  80b30c:	1081ffcc 	andi	r2,r2,2047
  80b310:	3011883a 	mov	r8,r6
  80b314:	3c62703a 	and	r17,r7,r17
  80b318:	b5c03fcc 	andi	r23,r22,255
  80b31c:	10006c26 	beq	r2,zero,80b4d0 <__divdf3+0x24c>
  80b320:	00c1ffc4 	movi	r3,2047
  80b324:	10c06426 	beq	r2,r3,80b4b8 <__divdf3+0x234>
  80b328:	88c00434 	orhi	r3,r17,16
  80b32c:	180690fa 	slli	r3,r3,3
  80b330:	3022d77a 	srli	r17,r6,29
  80b334:	301090fa 	slli	r8,r6,3
  80b338:	10bf0044 	addi	r2,r2,-1023
  80b33c:	88e2b03a 	or	r17,r17,r3
  80b340:	000f883a 	mov	r7,zero
  80b344:	a58cf03a 	xor	r6,r20,r22
  80b348:	3cc8b03a 	or	r4,r7,r19
  80b34c:	a8abc83a 	sub	r21,r21,r2
  80b350:	008003c4 	movi	r2,15
  80b354:	3007883a 	mov	r3,r6
  80b358:	34c03fcc 	andi	r19,r6,255
  80b35c:	11009036 	bltu	r2,r4,80b5a0 <__divdf3+0x31c>
  80b360:	200890ba 	slli	r4,r4,2
  80b364:	00802074 	movhi	r2,129
  80b368:	10acde04 	addi	r2,r2,-19592
  80b36c:	2089883a 	add	r4,r4,r2
  80b370:	20800017 	ldw	r2,0(r4)
  80b374:	1000683a 	jmp	r2
  80b378:	0080b5a0 	cmpeqi	r2,zero,726
  80b37c:	0080b3f0 	cmpltui	r2,zero,719
  80b380:	0080b590 	cmplti	r2,zero,726
  80b384:	0080b3e4 	muli	r2,zero,719
  80b388:	0080b590 	cmplti	r2,zero,726
  80b38c:	0080b564 	muli	r2,zero,725
  80b390:	0080b590 	cmplti	r2,zero,726
  80b394:	0080b3e4 	muli	r2,zero,719
  80b398:	0080b3f0 	cmpltui	r2,zero,719
  80b39c:	0080b3f0 	cmpltui	r2,zero,719
  80b3a0:	0080b564 	muli	r2,zero,725
  80b3a4:	0080b3e4 	muli	r2,zero,719
  80b3a8:	0080b3d4 	movui	r2,719
  80b3ac:	0080b3d4 	movui	r2,719
  80b3b0:	0080b3d4 	movui	r2,719
  80b3b4:	0080b884 	movi	r2,738
  80b3b8:	2404b03a 	or	r2,r4,r16
  80b3bc:	1000661e 	bne	r2,zero,80b558 <__divdf3+0x2d4>
  80b3c0:	04c00204 	movi	r19,8
  80b3c4:	0021883a 	mov	r16,zero
  80b3c8:	0025883a 	mov	r18,zero
  80b3cc:	02400084 	movi	r9,2
  80b3d0:	003fca06 	br	80b2fc <__alt_data_end+0xff80b2fc>
  80b3d4:	8023883a 	mov	r17,r16
  80b3d8:	9011883a 	mov	r8,r18
  80b3dc:	e02f883a 	mov	r23,fp
  80b3e0:	480f883a 	mov	r7,r9
  80b3e4:	00800084 	movi	r2,2
  80b3e8:	3881311e 	bne	r7,r2,80b8b0 <__divdf3+0x62c>
  80b3ec:	b827883a 	mov	r19,r23
  80b3f0:	98c0004c 	andi	r3,r19,1
  80b3f4:	0081ffc4 	movi	r2,2047
  80b3f8:	000b883a 	mov	r5,zero
  80b3fc:	0025883a 	mov	r18,zero
  80b400:	1004953a 	slli	r2,r2,20
  80b404:	18c03fcc 	andi	r3,r3,255
  80b408:	04400434 	movhi	r17,16
  80b40c:	8c7fffc4 	addi	r17,r17,-1
  80b410:	180697fa 	slli	r3,r3,31
  80b414:	2c4a703a 	and	r5,r5,r17
  80b418:	288ab03a 	or	r5,r5,r2
  80b41c:	28c6b03a 	or	r3,r5,r3
  80b420:	9005883a 	mov	r2,r18
  80b424:	dfc00d17 	ldw	ra,52(sp)
  80b428:	df000c17 	ldw	fp,48(sp)
  80b42c:	ddc00b17 	ldw	r23,44(sp)
  80b430:	dd800a17 	ldw	r22,40(sp)
  80b434:	dd400917 	ldw	r21,36(sp)
  80b438:	dd000817 	ldw	r20,32(sp)
  80b43c:	dcc00717 	ldw	r19,28(sp)
  80b440:	dc800617 	ldw	r18,24(sp)
  80b444:	dc400517 	ldw	r17,20(sp)
  80b448:	dc000417 	ldw	r16,16(sp)
  80b44c:	dec00e04 	addi	sp,sp,56
  80b450:	f800283a 	ret
  80b454:	2404b03a 	or	r2,r4,r16
  80b458:	2027883a 	mov	r19,r4
  80b45c:	10003926 	beq	r2,zero,80b544 <__divdf3+0x2c0>
  80b460:	80012e26 	beq	r16,zero,80b91c <__divdf3+0x698>
  80b464:	8009883a 	mov	r4,r16
  80b468:	d9800315 	stw	r6,12(sp)
  80b46c:	d9c00215 	stw	r7,8(sp)
  80b470:	080cfdc0 	call	80cfdc <__clzsi2>
  80b474:	d9800317 	ldw	r6,12(sp)
  80b478:	d9c00217 	ldw	r7,8(sp)
  80b47c:	113ffd44 	addi	r4,r2,-11
  80b480:	00c00704 	movi	r3,28
  80b484:	19012116 	blt	r3,r4,80b90c <__divdf3+0x688>
  80b488:	00c00744 	movi	r3,29
  80b48c:	147ffe04 	addi	r17,r2,-8
  80b490:	1907c83a 	sub	r3,r3,r4
  80b494:	8460983a 	sll	r16,r16,r17
  80b498:	98c6d83a 	srl	r3,r19,r3
  80b49c:	9c64983a 	sll	r18,r19,r17
  80b4a0:	1c20b03a 	or	r16,r3,r16
  80b4a4:	1080fcc4 	addi	r2,r2,1011
  80b4a8:	00abc83a 	sub	r21,zero,r2
  80b4ac:	0027883a 	mov	r19,zero
  80b4b0:	0013883a 	mov	r9,zero
  80b4b4:	003f9106 	br	80b2fc <__alt_data_end+0xff80b2fc>
  80b4b8:	3446b03a 	or	r3,r6,r17
  80b4bc:	18001f1e 	bne	r3,zero,80b53c <__divdf3+0x2b8>
  80b4c0:	0023883a 	mov	r17,zero
  80b4c4:	0011883a 	mov	r8,zero
  80b4c8:	01c00084 	movi	r7,2
  80b4cc:	003f9d06 	br	80b344 <__alt_data_end+0xff80b344>
  80b4d0:	3446b03a 	or	r3,r6,r17
  80b4d4:	18001526 	beq	r3,zero,80b52c <__divdf3+0x2a8>
  80b4d8:	88011b26 	beq	r17,zero,80b948 <__divdf3+0x6c4>
  80b4dc:	8809883a 	mov	r4,r17
  80b4e0:	d9800315 	stw	r6,12(sp)
  80b4e4:	da400115 	stw	r9,4(sp)
  80b4e8:	080cfdc0 	call	80cfdc <__clzsi2>
  80b4ec:	d9800317 	ldw	r6,12(sp)
  80b4f0:	da400117 	ldw	r9,4(sp)
  80b4f4:	113ffd44 	addi	r4,r2,-11
  80b4f8:	00c00704 	movi	r3,28
  80b4fc:	19010e16 	blt	r3,r4,80b938 <__divdf3+0x6b4>
  80b500:	00c00744 	movi	r3,29
  80b504:	123ffe04 	addi	r8,r2,-8
  80b508:	1907c83a 	sub	r3,r3,r4
  80b50c:	8a22983a 	sll	r17,r17,r8
  80b510:	30c6d83a 	srl	r3,r6,r3
  80b514:	3210983a 	sll	r8,r6,r8
  80b518:	1c62b03a 	or	r17,r3,r17
  80b51c:	1080fcc4 	addi	r2,r2,1011
  80b520:	0085c83a 	sub	r2,zero,r2
  80b524:	000f883a 	mov	r7,zero
  80b528:	003f8606 	br	80b344 <__alt_data_end+0xff80b344>
  80b52c:	0023883a 	mov	r17,zero
  80b530:	0011883a 	mov	r8,zero
  80b534:	01c00044 	movi	r7,1
  80b538:	003f8206 	br	80b344 <__alt_data_end+0xff80b344>
  80b53c:	01c000c4 	movi	r7,3
  80b540:	003f8006 	br	80b344 <__alt_data_end+0xff80b344>
  80b544:	04c00104 	movi	r19,4
  80b548:	0021883a 	mov	r16,zero
  80b54c:	0025883a 	mov	r18,zero
  80b550:	02400044 	movi	r9,1
  80b554:	003f6906 	br	80b2fc <__alt_data_end+0xff80b2fc>
  80b558:	04c00304 	movi	r19,12
  80b55c:	024000c4 	movi	r9,3
  80b560:	003f6606 	br	80b2fc <__alt_data_end+0xff80b2fc>
  80b564:	01400434 	movhi	r5,16
  80b568:	0007883a 	mov	r3,zero
  80b56c:	297fffc4 	addi	r5,r5,-1
  80b570:	04bfffc4 	movi	r18,-1
  80b574:	0081ffc4 	movi	r2,2047
  80b578:	003fa106 	br	80b400 <__alt_data_end+0xff80b400>
  80b57c:	00c00044 	movi	r3,1
  80b580:	1887c83a 	sub	r3,r3,r2
  80b584:	01000e04 	movi	r4,56
  80b588:	20c1210e 	bge	r4,r3,80ba10 <__divdf3+0x78c>
  80b58c:	98c0004c 	andi	r3,r19,1
  80b590:	0005883a 	mov	r2,zero
  80b594:	000b883a 	mov	r5,zero
  80b598:	0025883a 	mov	r18,zero
  80b59c:	003f9806 	br	80b400 <__alt_data_end+0xff80b400>
  80b5a0:	8c00fd36 	bltu	r17,r16,80b998 <__divdf3+0x714>
  80b5a4:	8440fb26 	beq	r16,r17,80b994 <__divdf3+0x710>
  80b5a8:	8007883a 	mov	r3,r16
  80b5ac:	ad7fffc4 	addi	r21,r21,-1
  80b5b0:	0021883a 	mov	r16,zero
  80b5b4:	4004d63a 	srli	r2,r8,24
  80b5b8:	8822923a 	slli	r17,r17,8
  80b5bc:	1809883a 	mov	r4,r3
  80b5c0:	402c923a 	slli	r22,r8,8
  80b5c4:	88b8b03a 	or	fp,r17,r2
  80b5c8:	e028d43a 	srli	r20,fp,16
  80b5cc:	d8c00015 	stw	r3,0(sp)
  80b5d0:	e5ffffcc 	andi	r23,fp,65535
  80b5d4:	a00b883a 	mov	r5,r20
  80b5d8:	08006900 	call	800690 <__udivsi3>
  80b5dc:	d8c00017 	ldw	r3,0(sp)
  80b5e0:	a00b883a 	mov	r5,r20
  80b5e4:	d8800315 	stw	r2,12(sp)
  80b5e8:	1809883a 	mov	r4,r3
  80b5ec:	08006f40 	call	8006f4 <__umodsi3>
  80b5f0:	d9800317 	ldw	r6,12(sp)
  80b5f4:	1006943a 	slli	r3,r2,16
  80b5f8:	9004d43a 	srli	r2,r18,16
  80b5fc:	b9a3383a 	mul	r17,r23,r6
  80b600:	10c4b03a 	or	r2,r2,r3
  80b604:	1440062e 	bgeu	r2,r17,80b620 <__divdf3+0x39c>
  80b608:	1705883a 	add	r2,r2,fp
  80b60c:	30ffffc4 	addi	r3,r6,-1
  80b610:	1700ee36 	bltu	r2,fp,80b9cc <__divdf3+0x748>
  80b614:	1440ed2e 	bgeu	r2,r17,80b9cc <__divdf3+0x748>
  80b618:	31bfff84 	addi	r6,r6,-2
  80b61c:	1705883a 	add	r2,r2,fp
  80b620:	1463c83a 	sub	r17,r2,r17
  80b624:	a00b883a 	mov	r5,r20
  80b628:	8809883a 	mov	r4,r17
  80b62c:	d9800315 	stw	r6,12(sp)
  80b630:	08006900 	call	800690 <__udivsi3>
  80b634:	a00b883a 	mov	r5,r20
  80b638:	8809883a 	mov	r4,r17
  80b63c:	d8800215 	stw	r2,8(sp)
  80b640:	08006f40 	call	8006f4 <__umodsi3>
  80b644:	d9c00217 	ldw	r7,8(sp)
  80b648:	1004943a 	slli	r2,r2,16
  80b64c:	94bfffcc 	andi	r18,r18,65535
  80b650:	b9d1383a 	mul	r8,r23,r7
  80b654:	90a4b03a 	or	r18,r18,r2
  80b658:	d9800317 	ldw	r6,12(sp)
  80b65c:	9200062e 	bgeu	r18,r8,80b678 <__divdf3+0x3f4>
  80b660:	9725883a 	add	r18,r18,fp
  80b664:	38bfffc4 	addi	r2,r7,-1
  80b668:	9700d636 	bltu	r18,fp,80b9c4 <__divdf3+0x740>
  80b66c:	9200d52e 	bgeu	r18,r8,80b9c4 <__divdf3+0x740>
  80b670:	39ffff84 	addi	r7,r7,-2
  80b674:	9725883a 	add	r18,r18,fp
  80b678:	3004943a 	slli	r2,r6,16
  80b67c:	b012d43a 	srli	r9,r22,16
  80b680:	b1bfffcc 	andi	r6,r22,65535
  80b684:	11e2b03a 	or	r17,r2,r7
  80b688:	8806d43a 	srli	r3,r17,16
  80b68c:	893fffcc 	andi	r4,r17,65535
  80b690:	218b383a 	mul	r5,r4,r6
  80b694:	30c5383a 	mul	r2,r6,r3
  80b698:	2249383a 	mul	r4,r4,r9
  80b69c:	280ed43a 	srli	r7,r5,16
  80b6a0:	9225c83a 	sub	r18,r18,r8
  80b6a4:	2089883a 	add	r4,r4,r2
  80b6a8:	3909883a 	add	r4,r7,r4
  80b6ac:	1a47383a 	mul	r3,r3,r9
  80b6b0:	2080022e 	bgeu	r4,r2,80b6bc <__divdf3+0x438>
  80b6b4:	00800074 	movhi	r2,1
  80b6b8:	1887883a 	add	r3,r3,r2
  80b6bc:	2004d43a 	srli	r2,r4,16
  80b6c0:	2008943a 	slli	r4,r4,16
  80b6c4:	297fffcc 	andi	r5,r5,65535
  80b6c8:	10c7883a 	add	r3,r2,r3
  80b6cc:	2149883a 	add	r4,r4,r5
  80b6d0:	90c0a536 	bltu	r18,r3,80b968 <__divdf3+0x6e4>
  80b6d4:	90c0bf26 	beq	r18,r3,80b9d4 <__divdf3+0x750>
  80b6d8:	90c7c83a 	sub	r3,r18,r3
  80b6dc:	810fc83a 	sub	r7,r16,r4
  80b6e0:	81e5803a 	cmpltu	r18,r16,r7
  80b6e4:	1ca5c83a 	sub	r18,r3,r18
  80b6e8:	e480c126 	beq	fp,r18,80b9f0 <__divdf3+0x76c>
  80b6ec:	a00b883a 	mov	r5,r20
  80b6f0:	9009883a 	mov	r4,r18
  80b6f4:	d9800315 	stw	r6,12(sp)
  80b6f8:	d9c00215 	stw	r7,8(sp)
  80b6fc:	da400115 	stw	r9,4(sp)
  80b700:	08006900 	call	800690 <__udivsi3>
  80b704:	a00b883a 	mov	r5,r20
  80b708:	9009883a 	mov	r4,r18
  80b70c:	d8800015 	stw	r2,0(sp)
  80b710:	08006f40 	call	8006f4 <__umodsi3>
  80b714:	d9c00217 	ldw	r7,8(sp)
  80b718:	da000017 	ldw	r8,0(sp)
  80b71c:	1006943a 	slli	r3,r2,16
  80b720:	3804d43a 	srli	r2,r7,16
  80b724:	ba21383a 	mul	r16,r23,r8
  80b728:	d9800317 	ldw	r6,12(sp)
  80b72c:	10c4b03a 	or	r2,r2,r3
  80b730:	da400117 	ldw	r9,4(sp)
  80b734:	1400062e 	bgeu	r2,r16,80b750 <__divdf3+0x4cc>
  80b738:	1705883a 	add	r2,r2,fp
  80b73c:	40ffffc4 	addi	r3,r8,-1
  80b740:	1700ad36 	bltu	r2,fp,80b9f8 <__divdf3+0x774>
  80b744:	1400ac2e 	bgeu	r2,r16,80b9f8 <__divdf3+0x774>
  80b748:	423fff84 	addi	r8,r8,-2
  80b74c:	1705883a 	add	r2,r2,fp
  80b750:	1421c83a 	sub	r16,r2,r16
  80b754:	a00b883a 	mov	r5,r20
  80b758:	8009883a 	mov	r4,r16
  80b75c:	d9800315 	stw	r6,12(sp)
  80b760:	d9c00215 	stw	r7,8(sp)
  80b764:	da000015 	stw	r8,0(sp)
  80b768:	da400115 	stw	r9,4(sp)
  80b76c:	08006900 	call	800690 <__udivsi3>
  80b770:	8009883a 	mov	r4,r16
  80b774:	a00b883a 	mov	r5,r20
  80b778:	1025883a 	mov	r18,r2
  80b77c:	08006f40 	call	8006f4 <__umodsi3>
  80b780:	d9c00217 	ldw	r7,8(sp)
  80b784:	1004943a 	slli	r2,r2,16
  80b788:	bcaf383a 	mul	r23,r23,r18
  80b78c:	393fffcc 	andi	r4,r7,65535
  80b790:	2088b03a 	or	r4,r4,r2
  80b794:	d9800317 	ldw	r6,12(sp)
  80b798:	da000017 	ldw	r8,0(sp)
  80b79c:	da400117 	ldw	r9,4(sp)
  80b7a0:	25c0062e 	bgeu	r4,r23,80b7bc <__divdf3+0x538>
  80b7a4:	2709883a 	add	r4,r4,fp
  80b7a8:	90bfffc4 	addi	r2,r18,-1
  80b7ac:	27009436 	bltu	r4,fp,80ba00 <__divdf3+0x77c>
  80b7b0:	25c0932e 	bgeu	r4,r23,80ba00 <__divdf3+0x77c>
  80b7b4:	94bfff84 	addi	r18,r18,-2
  80b7b8:	2709883a 	add	r4,r4,fp
  80b7bc:	4004943a 	slli	r2,r8,16
  80b7c0:	25efc83a 	sub	r23,r4,r23
  80b7c4:	1490b03a 	or	r8,r2,r18
  80b7c8:	4008d43a 	srli	r4,r8,16
  80b7cc:	40ffffcc 	andi	r3,r8,65535
  80b7d0:	30c5383a 	mul	r2,r6,r3
  80b7d4:	1a47383a 	mul	r3,r3,r9
  80b7d8:	310d383a 	mul	r6,r6,r4
  80b7dc:	100ad43a 	srli	r5,r2,16
  80b7e0:	4913383a 	mul	r9,r9,r4
  80b7e4:	1987883a 	add	r3,r3,r6
  80b7e8:	28c7883a 	add	r3,r5,r3
  80b7ec:	1980022e 	bgeu	r3,r6,80b7f8 <__divdf3+0x574>
  80b7f0:	01000074 	movhi	r4,1
  80b7f4:	4913883a 	add	r9,r9,r4
  80b7f8:	1808d43a 	srli	r4,r3,16
  80b7fc:	1806943a 	slli	r3,r3,16
  80b800:	10bfffcc 	andi	r2,r2,65535
  80b804:	2253883a 	add	r9,r4,r9
  80b808:	1887883a 	add	r3,r3,r2
  80b80c:	ba403836 	bltu	r23,r9,80b8f0 <__divdf3+0x66c>
  80b810:	ba403626 	beq	r23,r9,80b8ec <__divdf3+0x668>
  80b814:	42000054 	ori	r8,r8,1
  80b818:	a880ffc4 	addi	r2,r21,1023
  80b81c:	00bf570e 	bge	zero,r2,80b57c <__alt_data_end+0xff80b57c>
  80b820:	40c001cc 	andi	r3,r8,7
  80b824:	18000726 	beq	r3,zero,80b844 <__divdf3+0x5c0>
  80b828:	40c003cc 	andi	r3,r8,15
  80b82c:	01000104 	movi	r4,4
  80b830:	19000426 	beq	r3,r4,80b844 <__divdf3+0x5c0>
  80b834:	4107883a 	add	r3,r8,r4
  80b838:	1a11803a 	cmpltu	r8,r3,r8
  80b83c:	8a23883a 	add	r17,r17,r8
  80b840:	1811883a 	mov	r8,r3
  80b844:	88c0402c 	andhi	r3,r17,256
  80b848:	18000426 	beq	r3,zero,80b85c <__divdf3+0x5d8>
  80b84c:	00ffc034 	movhi	r3,65280
  80b850:	18ffffc4 	addi	r3,r3,-1
  80b854:	a8810004 	addi	r2,r21,1024
  80b858:	88e2703a 	and	r17,r17,r3
  80b85c:	00c1ff84 	movi	r3,2046
  80b860:	18bee316 	blt	r3,r2,80b3f0 <__alt_data_end+0xff80b3f0>
  80b864:	8824977a 	slli	r18,r17,29
  80b868:	4010d0fa 	srli	r8,r8,3
  80b86c:	8822927a 	slli	r17,r17,9
  80b870:	1081ffcc 	andi	r2,r2,2047
  80b874:	9224b03a 	or	r18,r18,r8
  80b878:	880ad33a 	srli	r5,r17,12
  80b87c:	98c0004c 	andi	r3,r19,1
  80b880:	003edf06 	br	80b400 <__alt_data_end+0xff80b400>
  80b884:	8080022c 	andhi	r2,r16,8
  80b888:	10001226 	beq	r2,zero,80b8d4 <__divdf3+0x650>
  80b88c:	8880022c 	andhi	r2,r17,8
  80b890:	1000101e 	bne	r2,zero,80b8d4 <__divdf3+0x650>
  80b894:	00800434 	movhi	r2,16
  80b898:	89400234 	orhi	r5,r17,8
  80b89c:	10bfffc4 	addi	r2,r2,-1
  80b8a0:	b007883a 	mov	r3,r22
  80b8a4:	288a703a 	and	r5,r5,r2
  80b8a8:	4025883a 	mov	r18,r8
  80b8ac:	003f3106 	br	80b574 <__alt_data_end+0xff80b574>
  80b8b0:	008000c4 	movi	r2,3
  80b8b4:	3880a626 	beq	r7,r2,80bb50 <__divdf3+0x8cc>
  80b8b8:	00800044 	movi	r2,1
  80b8bc:	3880521e 	bne	r7,r2,80ba08 <__divdf3+0x784>
  80b8c0:	b807883a 	mov	r3,r23
  80b8c4:	0005883a 	mov	r2,zero
  80b8c8:	000b883a 	mov	r5,zero
  80b8cc:	0025883a 	mov	r18,zero
  80b8d0:	003ecb06 	br	80b400 <__alt_data_end+0xff80b400>
  80b8d4:	00800434 	movhi	r2,16
  80b8d8:	81400234 	orhi	r5,r16,8
  80b8dc:	10bfffc4 	addi	r2,r2,-1
  80b8e0:	a007883a 	mov	r3,r20
  80b8e4:	288a703a 	and	r5,r5,r2
  80b8e8:	003f2206 	br	80b574 <__alt_data_end+0xff80b574>
  80b8ec:	183fca26 	beq	r3,zero,80b818 <__alt_data_end+0xff80b818>
  80b8f0:	e5ef883a 	add	r23,fp,r23
  80b8f4:	40bfffc4 	addi	r2,r8,-1
  80b8f8:	bf00392e 	bgeu	r23,fp,80b9e0 <__divdf3+0x75c>
  80b8fc:	1011883a 	mov	r8,r2
  80b900:	ba7fc41e 	bne	r23,r9,80b814 <__alt_data_end+0xff80b814>
  80b904:	b0ffc31e 	bne	r22,r3,80b814 <__alt_data_end+0xff80b814>
  80b908:	003fc306 	br	80b818 <__alt_data_end+0xff80b818>
  80b90c:	143ff604 	addi	r16,r2,-40
  80b910:	9c20983a 	sll	r16,r19,r16
  80b914:	0025883a 	mov	r18,zero
  80b918:	003ee206 	br	80b4a4 <__alt_data_end+0xff80b4a4>
  80b91c:	d9800315 	stw	r6,12(sp)
  80b920:	d9c00215 	stw	r7,8(sp)
  80b924:	080cfdc0 	call	80cfdc <__clzsi2>
  80b928:	10800804 	addi	r2,r2,32
  80b92c:	d9c00217 	ldw	r7,8(sp)
  80b930:	d9800317 	ldw	r6,12(sp)
  80b934:	003ed106 	br	80b47c <__alt_data_end+0xff80b47c>
  80b938:	147ff604 	addi	r17,r2,-40
  80b93c:	3462983a 	sll	r17,r6,r17
  80b940:	0011883a 	mov	r8,zero
  80b944:	003ef506 	br	80b51c <__alt_data_end+0xff80b51c>
  80b948:	3009883a 	mov	r4,r6
  80b94c:	d9800315 	stw	r6,12(sp)
  80b950:	da400115 	stw	r9,4(sp)
  80b954:	080cfdc0 	call	80cfdc <__clzsi2>
  80b958:	10800804 	addi	r2,r2,32
  80b95c:	da400117 	ldw	r9,4(sp)
  80b960:	d9800317 	ldw	r6,12(sp)
  80b964:	003ee306 	br	80b4f4 <__alt_data_end+0xff80b4f4>
  80b968:	85a1883a 	add	r16,r16,r22
  80b96c:	8585803a 	cmpltu	r2,r16,r22
  80b970:	1705883a 	add	r2,r2,fp
  80b974:	14a5883a 	add	r18,r2,r18
  80b978:	88bfffc4 	addi	r2,r17,-1
  80b97c:	e4800c2e 	bgeu	fp,r18,80b9b0 <__divdf3+0x72c>
  80b980:	90c03e36 	bltu	r18,r3,80ba7c <__divdf3+0x7f8>
  80b984:	1c806926 	beq	r3,r18,80bb2c <__divdf3+0x8a8>
  80b988:	90c7c83a 	sub	r3,r18,r3
  80b98c:	1023883a 	mov	r17,r2
  80b990:	003f5206 	br	80b6dc <__alt_data_end+0xff80b6dc>
  80b994:	923f0436 	bltu	r18,r8,80b5a8 <__alt_data_end+0xff80b5a8>
  80b998:	800897fa 	slli	r4,r16,31
  80b99c:	9004d07a 	srli	r2,r18,1
  80b9a0:	8006d07a 	srli	r3,r16,1
  80b9a4:	902097fa 	slli	r16,r18,31
  80b9a8:	20a4b03a 	or	r18,r4,r2
  80b9ac:	003f0106 	br	80b5b4 <__alt_data_end+0xff80b5b4>
  80b9b0:	e4bff51e 	bne	fp,r18,80b988 <__alt_data_end+0xff80b988>
  80b9b4:	85bff22e 	bgeu	r16,r22,80b980 <__alt_data_end+0xff80b980>
  80b9b8:	e0c7c83a 	sub	r3,fp,r3
  80b9bc:	1023883a 	mov	r17,r2
  80b9c0:	003f4606 	br	80b6dc <__alt_data_end+0xff80b6dc>
  80b9c4:	100f883a 	mov	r7,r2
  80b9c8:	003f2b06 	br	80b678 <__alt_data_end+0xff80b678>
  80b9cc:	180d883a 	mov	r6,r3
  80b9d0:	003f1306 	br	80b620 <__alt_data_end+0xff80b620>
  80b9d4:	813fe436 	bltu	r16,r4,80b968 <__alt_data_end+0xff80b968>
  80b9d8:	0007883a 	mov	r3,zero
  80b9dc:	003f3f06 	br	80b6dc <__alt_data_end+0xff80b6dc>
  80b9e0:	ba402c36 	bltu	r23,r9,80ba94 <__divdf3+0x810>
  80b9e4:	4dc05426 	beq	r9,r23,80bb38 <__divdf3+0x8b4>
  80b9e8:	1011883a 	mov	r8,r2
  80b9ec:	003f8906 	br	80b814 <__alt_data_end+0xff80b814>
  80b9f0:	023fffc4 	movi	r8,-1
  80b9f4:	003f8806 	br	80b818 <__alt_data_end+0xff80b818>
  80b9f8:	1811883a 	mov	r8,r3
  80b9fc:	003f5406 	br	80b750 <__alt_data_end+0xff80b750>
  80ba00:	1025883a 	mov	r18,r2
  80ba04:	003f6d06 	br	80b7bc <__alt_data_end+0xff80b7bc>
  80ba08:	b827883a 	mov	r19,r23
  80ba0c:	003f8206 	br	80b818 <__alt_data_end+0xff80b818>
  80ba10:	010007c4 	movi	r4,31
  80ba14:	20c02616 	blt	r4,r3,80bab0 <__divdf3+0x82c>
  80ba18:	00800804 	movi	r2,32
  80ba1c:	10c5c83a 	sub	r2,r2,r3
  80ba20:	888a983a 	sll	r5,r17,r2
  80ba24:	40c8d83a 	srl	r4,r8,r3
  80ba28:	4084983a 	sll	r2,r8,r2
  80ba2c:	88e2d83a 	srl	r17,r17,r3
  80ba30:	2906b03a 	or	r3,r5,r4
  80ba34:	1004c03a 	cmpne	r2,r2,zero
  80ba38:	1886b03a 	or	r3,r3,r2
  80ba3c:	188001cc 	andi	r2,r3,7
  80ba40:	10000726 	beq	r2,zero,80ba60 <__divdf3+0x7dc>
  80ba44:	188003cc 	andi	r2,r3,15
  80ba48:	01000104 	movi	r4,4
  80ba4c:	11000426 	beq	r2,r4,80ba60 <__divdf3+0x7dc>
  80ba50:	1805883a 	mov	r2,r3
  80ba54:	10c00104 	addi	r3,r2,4
  80ba58:	1885803a 	cmpltu	r2,r3,r2
  80ba5c:	88a3883a 	add	r17,r17,r2
  80ba60:	8880202c 	andhi	r2,r17,128
  80ba64:	10002726 	beq	r2,zero,80bb04 <__divdf3+0x880>
  80ba68:	98c0004c 	andi	r3,r19,1
  80ba6c:	00800044 	movi	r2,1
  80ba70:	000b883a 	mov	r5,zero
  80ba74:	0025883a 	mov	r18,zero
  80ba78:	003e6106 	br	80b400 <__alt_data_end+0xff80b400>
  80ba7c:	85a1883a 	add	r16,r16,r22
  80ba80:	8585803a 	cmpltu	r2,r16,r22
  80ba84:	1705883a 	add	r2,r2,fp
  80ba88:	14a5883a 	add	r18,r2,r18
  80ba8c:	8c7fff84 	addi	r17,r17,-2
  80ba90:	003f1106 	br	80b6d8 <__alt_data_end+0xff80b6d8>
  80ba94:	b589883a 	add	r4,r22,r22
  80ba98:	25ad803a 	cmpltu	r22,r4,r22
  80ba9c:	b739883a 	add	fp,r22,fp
  80baa0:	40bfff84 	addi	r2,r8,-2
  80baa4:	bf2f883a 	add	r23,r23,fp
  80baa8:	202d883a 	mov	r22,r4
  80baac:	003f9306 	br	80b8fc <__alt_data_end+0xff80b8fc>
  80bab0:	013ff844 	movi	r4,-31
  80bab4:	2085c83a 	sub	r2,r4,r2
  80bab8:	8888d83a 	srl	r4,r17,r2
  80babc:	00800804 	movi	r2,32
  80bac0:	18802126 	beq	r3,r2,80bb48 <__divdf3+0x8c4>
  80bac4:	00801004 	movi	r2,64
  80bac8:	10c5c83a 	sub	r2,r2,r3
  80bacc:	8884983a 	sll	r2,r17,r2
  80bad0:	1204b03a 	or	r2,r2,r8
  80bad4:	1004c03a 	cmpne	r2,r2,zero
  80bad8:	2084b03a 	or	r2,r4,r2
  80badc:	144001cc 	andi	r17,r2,7
  80bae0:	88000d1e 	bne	r17,zero,80bb18 <__divdf3+0x894>
  80bae4:	000b883a 	mov	r5,zero
  80bae8:	1024d0fa 	srli	r18,r2,3
  80baec:	98c0004c 	andi	r3,r19,1
  80baf0:	0005883a 	mov	r2,zero
  80baf4:	9464b03a 	or	r18,r18,r17
  80baf8:	003e4106 	br	80b400 <__alt_data_end+0xff80b400>
  80bafc:	1007883a 	mov	r3,r2
  80bb00:	0023883a 	mov	r17,zero
  80bb04:	880a927a 	slli	r5,r17,9
  80bb08:	1805883a 	mov	r2,r3
  80bb0c:	8822977a 	slli	r17,r17,29
  80bb10:	280ad33a 	srli	r5,r5,12
  80bb14:	003ff406 	br	80bae8 <__alt_data_end+0xff80bae8>
  80bb18:	10c003cc 	andi	r3,r2,15
  80bb1c:	01000104 	movi	r4,4
  80bb20:	193ff626 	beq	r3,r4,80bafc <__alt_data_end+0xff80bafc>
  80bb24:	0023883a 	mov	r17,zero
  80bb28:	003fca06 	br	80ba54 <__alt_data_end+0xff80ba54>
  80bb2c:	813fd336 	bltu	r16,r4,80ba7c <__alt_data_end+0xff80ba7c>
  80bb30:	1023883a 	mov	r17,r2
  80bb34:	003fa806 	br	80b9d8 <__alt_data_end+0xff80b9d8>
  80bb38:	b0ffd636 	bltu	r22,r3,80ba94 <__alt_data_end+0xff80ba94>
  80bb3c:	1011883a 	mov	r8,r2
  80bb40:	b0ff341e 	bne	r22,r3,80b814 <__alt_data_end+0xff80b814>
  80bb44:	003f3406 	br	80b818 <__alt_data_end+0xff80b818>
  80bb48:	0005883a 	mov	r2,zero
  80bb4c:	003fe006 	br	80bad0 <__alt_data_end+0xff80bad0>
  80bb50:	00800434 	movhi	r2,16
  80bb54:	89400234 	orhi	r5,r17,8
  80bb58:	10bfffc4 	addi	r2,r2,-1
  80bb5c:	b807883a 	mov	r3,r23
  80bb60:	288a703a 	and	r5,r5,r2
  80bb64:	4025883a 	mov	r18,r8
  80bb68:	003e8206 	br	80b574 <__alt_data_end+0xff80b574>

0080bb6c <__eqdf2>:
  80bb6c:	2804d53a 	srli	r2,r5,20
  80bb70:	3806d53a 	srli	r3,r7,20
  80bb74:	02000434 	movhi	r8,16
  80bb78:	423fffc4 	addi	r8,r8,-1
  80bb7c:	1081ffcc 	andi	r2,r2,2047
  80bb80:	0281ffc4 	movi	r10,2047
  80bb84:	2a12703a 	and	r9,r5,r8
  80bb88:	18c1ffcc 	andi	r3,r3,2047
  80bb8c:	3a10703a 	and	r8,r7,r8
  80bb90:	280ad7fa 	srli	r5,r5,31
  80bb94:	380ed7fa 	srli	r7,r7,31
  80bb98:	12801026 	beq	r2,r10,80bbdc <__eqdf2+0x70>
  80bb9c:	0281ffc4 	movi	r10,2047
  80bba0:	1a800a26 	beq	r3,r10,80bbcc <__eqdf2+0x60>
  80bba4:	10c00226 	beq	r2,r3,80bbb0 <__eqdf2+0x44>
  80bba8:	00800044 	movi	r2,1
  80bbac:	f800283a 	ret
  80bbb0:	4a3ffd1e 	bne	r9,r8,80bba8 <__alt_data_end+0xff80bba8>
  80bbb4:	21bffc1e 	bne	r4,r6,80bba8 <__alt_data_end+0xff80bba8>
  80bbb8:	29c00c26 	beq	r5,r7,80bbec <__eqdf2+0x80>
  80bbbc:	103ffa1e 	bne	r2,zero,80bba8 <__alt_data_end+0xff80bba8>
  80bbc0:	2244b03a 	or	r2,r4,r9
  80bbc4:	1004c03a 	cmpne	r2,r2,zero
  80bbc8:	f800283a 	ret
  80bbcc:	3214b03a 	or	r10,r6,r8
  80bbd0:	503ff426 	beq	r10,zero,80bba4 <__alt_data_end+0xff80bba4>
  80bbd4:	00800044 	movi	r2,1
  80bbd8:	f800283a 	ret
  80bbdc:	2254b03a 	or	r10,r4,r9
  80bbe0:	503fee26 	beq	r10,zero,80bb9c <__alt_data_end+0xff80bb9c>
  80bbe4:	00800044 	movi	r2,1
  80bbe8:	f800283a 	ret
  80bbec:	0005883a 	mov	r2,zero
  80bbf0:	f800283a 	ret

0080bbf4 <__gedf2>:
  80bbf4:	2804d53a 	srli	r2,r5,20
  80bbf8:	3806d53a 	srli	r3,r7,20
  80bbfc:	02000434 	movhi	r8,16
  80bc00:	423fffc4 	addi	r8,r8,-1
  80bc04:	1081ffcc 	andi	r2,r2,2047
  80bc08:	0241ffc4 	movi	r9,2047
  80bc0c:	2a14703a 	and	r10,r5,r8
  80bc10:	18c1ffcc 	andi	r3,r3,2047
  80bc14:	3a10703a 	and	r8,r7,r8
  80bc18:	280ad7fa 	srli	r5,r5,31
  80bc1c:	380ed7fa 	srli	r7,r7,31
  80bc20:	12401d26 	beq	r2,r9,80bc98 <__gedf2+0xa4>
  80bc24:	0241ffc4 	movi	r9,2047
  80bc28:	1a401226 	beq	r3,r9,80bc74 <__gedf2+0x80>
  80bc2c:	1000081e 	bne	r2,zero,80bc50 <__gedf2+0x5c>
  80bc30:	2296b03a 	or	r11,r4,r10
  80bc34:	5813003a 	cmpeq	r9,r11,zero
  80bc38:	1800091e 	bne	r3,zero,80bc60 <__gedf2+0x6c>
  80bc3c:	3218b03a 	or	r12,r6,r8
  80bc40:	6000071e 	bne	r12,zero,80bc60 <__gedf2+0x6c>
  80bc44:	0005883a 	mov	r2,zero
  80bc48:	5800101e 	bne	r11,zero,80bc8c <__gedf2+0x98>
  80bc4c:	f800283a 	ret
  80bc50:	18000c1e 	bne	r3,zero,80bc84 <__gedf2+0x90>
  80bc54:	3212b03a 	or	r9,r6,r8
  80bc58:	48000c26 	beq	r9,zero,80bc8c <__gedf2+0x98>
  80bc5c:	0013883a 	mov	r9,zero
  80bc60:	39c03fcc 	andi	r7,r7,255
  80bc64:	48000826 	beq	r9,zero,80bc88 <__gedf2+0x94>
  80bc68:	38000926 	beq	r7,zero,80bc90 <__gedf2+0x9c>
  80bc6c:	00800044 	movi	r2,1
  80bc70:	f800283a 	ret
  80bc74:	3212b03a 	or	r9,r6,r8
  80bc78:	483fec26 	beq	r9,zero,80bc2c <__alt_data_end+0xff80bc2c>
  80bc7c:	00bfff84 	movi	r2,-2
  80bc80:	f800283a 	ret
  80bc84:	39c03fcc 	andi	r7,r7,255
  80bc88:	29c00626 	beq	r5,r7,80bca4 <__gedf2+0xb0>
  80bc8c:	283ff726 	beq	r5,zero,80bc6c <__alt_data_end+0xff80bc6c>
  80bc90:	00bfffc4 	movi	r2,-1
  80bc94:	f800283a 	ret
  80bc98:	2292b03a 	or	r9,r4,r10
  80bc9c:	483fe126 	beq	r9,zero,80bc24 <__alt_data_end+0xff80bc24>
  80bca0:	003ff606 	br	80bc7c <__alt_data_end+0xff80bc7c>
  80bca4:	18bff916 	blt	r3,r2,80bc8c <__alt_data_end+0xff80bc8c>
  80bca8:	10c00316 	blt	r2,r3,80bcb8 <__gedf2+0xc4>
  80bcac:	42bff736 	bltu	r8,r10,80bc8c <__alt_data_end+0xff80bc8c>
  80bcb0:	52000326 	beq	r10,r8,80bcc0 <__gedf2+0xcc>
  80bcb4:	5200042e 	bgeu	r10,r8,80bcc8 <__gedf2+0xd4>
  80bcb8:	283fec1e 	bne	r5,zero,80bc6c <__alt_data_end+0xff80bc6c>
  80bcbc:	003ff406 	br	80bc90 <__alt_data_end+0xff80bc90>
  80bcc0:	313ff236 	bltu	r6,r4,80bc8c <__alt_data_end+0xff80bc8c>
  80bcc4:	21bffc36 	bltu	r4,r6,80bcb8 <__alt_data_end+0xff80bcb8>
  80bcc8:	0005883a 	mov	r2,zero
  80bccc:	f800283a 	ret

0080bcd0 <__ledf2>:
  80bcd0:	2804d53a 	srli	r2,r5,20
  80bcd4:	3810d53a 	srli	r8,r7,20
  80bcd8:	00c00434 	movhi	r3,16
  80bcdc:	18ffffc4 	addi	r3,r3,-1
  80bce0:	1081ffcc 	andi	r2,r2,2047
  80bce4:	0241ffc4 	movi	r9,2047
  80bce8:	28d4703a 	and	r10,r5,r3
  80bcec:	4201ffcc 	andi	r8,r8,2047
  80bcf0:	38c6703a 	and	r3,r7,r3
  80bcf4:	280ad7fa 	srli	r5,r5,31
  80bcf8:	380ed7fa 	srli	r7,r7,31
  80bcfc:	12401f26 	beq	r2,r9,80bd7c <__ledf2+0xac>
  80bd00:	0241ffc4 	movi	r9,2047
  80bd04:	42401426 	beq	r8,r9,80bd58 <__ledf2+0x88>
  80bd08:	1000091e 	bne	r2,zero,80bd30 <__ledf2+0x60>
  80bd0c:	2296b03a 	or	r11,r4,r10
  80bd10:	5813003a 	cmpeq	r9,r11,zero
  80bd14:	29403fcc 	andi	r5,r5,255
  80bd18:	40000a1e 	bne	r8,zero,80bd44 <__ledf2+0x74>
  80bd1c:	30d8b03a 	or	r12,r6,r3
  80bd20:	6000081e 	bne	r12,zero,80bd44 <__ledf2+0x74>
  80bd24:	0005883a 	mov	r2,zero
  80bd28:	5800111e 	bne	r11,zero,80bd70 <__ledf2+0xa0>
  80bd2c:	f800283a 	ret
  80bd30:	29403fcc 	andi	r5,r5,255
  80bd34:	40000c1e 	bne	r8,zero,80bd68 <__ledf2+0x98>
  80bd38:	30d2b03a 	or	r9,r6,r3
  80bd3c:	48000c26 	beq	r9,zero,80bd70 <__ledf2+0xa0>
  80bd40:	0013883a 	mov	r9,zero
  80bd44:	39c03fcc 	andi	r7,r7,255
  80bd48:	48000826 	beq	r9,zero,80bd6c <__ledf2+0x9c>
  80bd4c:	38001126 	beq	r7,zero,80bd94 <__ledf2+0xc4>
  80bd50:	00800044 	movi	r2,1
  80bd54:	f800283a 	ret
  80bd58:	30d2b03a 	or	r9,r6,r3
  80bd5c:	483fea26 	beq	r9,zero,80bd08 <__alt_data_end+0xff80bd08>
  80bd60:	00800084 	movi	r2,2
  80bd64:	f800283a 	ret
  80bd68:	39c03fcc 	andi	r7,r7,255
  80bd6c:	39400726 	beq	r7,r5,80bd8c <__ledf2+0xbc>
  80bd70:	2800081e 	bne	r5,zero,80bd94 <__ledf2+0xc4>
  80bd74:	00800044 	movi	r2,1
  80bd78:	f800283a 	ret
  80bd7c:	2292b03a 	or	r9,r4,r10
  80bd80:	483fdf26 	beq	r9,zero,80bd00 <__alt_data_end+0xff80bd00>
  80bd84:	00800084 	movi	r2,2
  80bd88:	f800283a 	ret
  80bd8c:	4080030e 	bge	r8,r2,80bd9c <__ledf2+0xcc>
  80bd90:	383fef26 	beq	r7,zero,80bd50 <__alt_data_end+0xff80bd50>
  80bd94:	00bfffc4 	movi	r2,-1
  80bd98:	f800283a 	ret
  80bd9c:	123feb16 	blt	r2,r8,80bd4c <__alt_data_end+0xff80bd4c>
  80bda0:	1abff336 	bltu	r3,r10,80bd70 <__alt_data_end+0xff80bd70>
  80bda4:	50c00326 	beq	r10,r3,80bdb4 <__ledf2+0xe4>
  80bda8:	50c0042e 	bgeu	r10,r3,80bdbc <__ledf2+0xec>
  80bdac:	283fe81e 	bne	r5,zero,80bd50 <__alt_data_end+0xff80bd50>
  80bdb0:	003ff806 	br	80bd94 <__alt_data_end+0xff80bd94>
  80bdb4:	313fee36 	bltu	r6,r4,80bd70 <__alt_data_end+0xff80bd70>
  80bdb8:	21bffc36 	bltu	r4,r6,80bdac <__alt_data_end+0xff80bdac>
  80bdbc:	0005883a 	mov	r2,zero
  80bdc0:	f800283a 	ret

0080bdc4 <__muldf3>:
  80bdc4:	defff304 	addi	sp,sp,-52
  80bdc8:	2804d53a 	srli	r2,r5,20
  80bdcc:	dd800915 	stw	r22,36(sp)
  80bdd0:	282cd7fa 	srli	r22,r5,31
  80bdd4:	dc000315 	stw	r16,12(sp)
  80bdd8:	04000434 	movhi	r16,16
  80bddc:	dd400815 	stw	r21,32(sp)
  80bde0:	dc800515 	stw	r18,20(sp)
  80bde4:	843fffc4 	addi	r16,r16,-1
  80bde8:	dfc00c15 	stw	ra,48(sp)
  80bdec:	df000b15 	stw	fp,44(sp)
  80bdf0:	ddc00a15 	stw	r23,40(sp)
  80bdf4:	dd000715 	stw	r20,28(sp)
  80bdf8:	dcc00615 	stw	r19,24(sp)
  80bdfc:	dc400415 	stw	r17,16(sp)
  80be00:	1481ffcc 	andi	r18,r2,2047
  80be04:	2c20703a 	and	r16,r5,r16
  80be08:	b02b883a 	mov	r21,r22
  80be0c:	b2403fcc 	andi	r9,r22,255
  80be10:	90006026 	beq	r18,zero,80bf94 <__muldf3+0x1d0>
  80be14:	0081ffc4 	movi	r2,2047
  80be18:	2029883a 	mov	r20,r4
  80be1c:	90803626 	beq	r18,r2,80bef8 <__muldf3+0x134>
  80be20:	80800434 	orhi	r2,r16,16
  80be24:	100490fa 	slli	r2,r2,3
  80be28:	2020d77a 	srli	r16,r4,29
  80be2c:	202890fa 	slli	r20,r4,3
  80be30:	94bf0044 	addi	r18,r18,-1023
  80be34:	80a0b03a 	or	r16,r16,r2
  80be38:	0027883a 	mov	r19,zero
  80be3c:	0039883a 	mov	fp,zero
  80be40:	3804d53a 	srli	r2,r7,20
  80be44:	382ed7fa 	srli	r23,r7,31
  80be48:	04400434 	movhi	r17,16
  80be4c:	8c7fffc4 	addi	r17,r17,-1
  80be50:	1081ffcc 	andi	r2,r2,2047
  80be54:	3011883a 	mov	r8,r6
  80be58:	3c62703a 	and	r17,r7,r17
  80be5c:	ba803fcc 	andi	r10,r23,255
  80be60:	10006d26 	beq	r2,zero,80c018 <__muldf3+0x254>
  80be64:	00c1ffc4 	movi	r3,2047
  80be68:	10c06526 	beq	r2,r3,80c000 <__muldf3+0x23c>
  80be6c:	88c00434 	orhi	r3,r17,16
  80be70:	180690fa 	slli	r3,r3,3
  80be74:	3022d77a 	srli	r17,r6,29
  80be78:	301090fa 	slli	r8,r6,3
  80be7c:	10bf0044 	addi	r2,r2,-1023
  80be80:	88e2b03a 	or	r17,r17,r3
  80be84:	000b883a 	mov	r5,zero
  80be88:	9085883a 	add	r2,r18,r2
  80be8c:	2cc8b03a 	or	r4,r5,r19
  80be90:	00c003c4 	movi	r3,15
  80be94:	bdacf03a 	xor	r22,r23,r22
  80be98:	12c00044 	addi	r11,r2,1
  80be9c:	19009936 	bltu	r3,r4,80c104 <__muldf3+0x340>
  80bea0:	200890ba 	slli	r4,r4,2
  80bea4:	00c02074 	movhi	r3,129
  80bea8:	18efae04 	addi	r3,r3,-16712
  80beac:	20c9883a 	add	r4,r4,r3
  80beb0:	20c00017 	ldw	r3,0(r4)
  80beb4:	1800683a 	jmp	r3
  80beb8:	0080c104 	movi	r2,772
  80bebc:	0080bf18 	cmpnei	r2,zero,764
  80bec0:	0080bf18 	cmpnei	r2,zero,764
  80bec4:	0080bf14 	movui	r2,764
  80bec8:	0080c0e0 	cmpeqi	r2,zero,771
  80becc:	0080c0e0 	cmpeqi	r2,zero,771
  80bed0:	0080c0c8 	cmpgei	r2,zero,771
  80bed4:	0080bf14 	movui	r2,764
  80bed8:	0080c0e0 	cmpeqi	r2,zero,771
  80bedc:	0080c0c8 	cmpgei	r2,zero,771
  80bee0:	0080c0e0 	cmpeqi	r2,zero,771
  80bee4:	0080bf14 	movui	r2,764
  80bee8:	0080c0f0 	cmpltui	r2,zero,771
  80beec:	0080c0f0 	cmpltui	r2,zero,771
  80bef0:	0080c0f0 	cmpltui	r2,zero,771
  80bef4:	0080c30c 	andi	r2,zero,780
  80bef8:	2404b03a 	or	r2,r4,r16
  80befc:	10006f1e 	bne	r2,zero,80c0bc <__muldf3+0x2f8>
  80bf00:	04c00204 	movi	r19,8
  80bf04:	0021883a 	mov	r16,zero
  80bf08:	0029883a 	mov	r20,zero
  80bf0c:	07000084 	movi	fp,2
  80bf10:	003fcb06 	br	80be40 <__alt_data_end+0xff80be40>
  80bf14:	502d883a 	mov	r22,r10
  80bf18:	00800084 	movi	r2,2
  80bf1c:	28805726 	beq	r5,r2,80c07c <__muldf3+0x2b8>
  80bf20:	008000c4 	movi	r2,3
  80bf24:	28816626 	beq	r5,r2,80c4c0 <__muldf3+0x6fc>
  80bf28:	00800044 	movi	r2,1
  80bf2c:	2881411e 	bne	r5,r2,80c434 <__muldf3+0x670>
  80bf30:	b02b883a 	mov	r21,r22
  80bf34:	0005883a 	mov	r2,zero
  80bf38:	000b883a 	mov	r5,zero
  80bf3c:	0029883a 	mov	r20,zero
  80bf40:	1004953a 	slli	r2,r2,20
  80bf44:	a8c03fcc 	andi	r3,r21,255
  80bf48:	04400434 	movhi	r17,16
  80bf4c:	8c7fffc4 	addi	r17,r17,-1
  80bf50:	180697fa 	slli	r3,r3,31
  80bf54:	2c4a703a 	and	r5,r5,r17
  80bf58:	288ab03a 	or	r5,r5,r2
  80bf5c:	28c6b03a 	or	r3,r5,r3
  80bf60:	a005883a 	mov	r2,r20
  80bf64:	dfc00c17 	ldw	ra,48(sp)
  80bf68:	df000b17 	ldw	fp,44(sp)
  80bf6c:	ddc00a17 	ldw	r23,40(sp)
  80bf70:	dd800917 	ldw	r22,36(sp)
  80bf74:	dd400817 	ldw	r21,32(sp)
  80bf78:	dd000717 	ldw	r20,28(sp)
  80bf7c:	dcc00617 	ldw	r19,24(sp)
  80bf80:	dc800517 	ldw	r18,20(sp)
  80bf84:	dc400417 	ldw	r17,16(sp)
  80bf88:	dc000317 	ldw	r16,12(sp)
  80bf8c:	dec00d04 	addi	sp,sp,52
  80bf90:	f800283a 	ret
  80bf94:	2404b03a 	or	r2,r4,r16
  80bf98:	2027883a 	mov	r19,r4
  80bf9c:	10004226 	beq	r2,zero,80c0a8 <__muldf3+0x2e4>
  80bfa0:	8000fc26 	beq	r16,zero,80c394 <__muldf3+0x5d0>
  80bfa4:	8009883a 	mov	r4,r16
  80bfa8:	d9800215 	stw	r6,8(sp)
  80bfac:	d9c00015 	stw	r7,0(sp)
  80bfb0:	da400115 	stw	r9,4(sp)
  80bfb4:	080cfdc0 	call	80cfdc <__clzsi2>
  80bfb8:	d9800217 	ldw	r6,8(sp)
  80bfbc:	d9c00017 	ldw	r7,0(sp)
  80bfc0:	da400117 	ldw	r9,4(sp)
  80bfc4:	113ffd44 	addi	r4,r2,-11
  80bfc8:	00c00704 	movi	r3,28
  80bfcc:	1900ed16 	blt	r3,r4,80c384 <__muldf3+0x5c0>
  80bfd0:	00c00744 	movi	r3,29
  80bfd4:	147ffe04 	addi	r17,r2,-8
  80bfd8:	1907c83a 	sub	r3,r3,r4
  80bfdc:	8460983a 	sll	r16,r16,r17
  80bfe0:	98c6d83a 	srl	r3,r19,r3
  80bfe4:	9c68983a 	sll	r20,r19,r17
  80bfe8:	1c20b03a 	or	r16,r3,r16
  80bfec:	1080fcc4 	addi	r2,r2,1011
  80bff0:	00a5c83a 	sub	r18,zero,r2
  80bff4:	0027883a 	mov	r19,zero
  80bff8:	0039883a 	mov	fp,zero
  80bffc:	003f9006 	br	80be40 <__alt_data_end+0xff80be40>
  80c000:	3446b03a 	or	r3,r6,r17
  80c004:	1800261e 	bne	r3,zero,80c0a0 <__muldf3+0x2dc>
  80c008:	0023883a 	mov	r17,zero
  80c00c:	0011883a 	mov	r8,zero
  80c010:	01400084 	movi	r5,2
  80c014:	003f9c06 	br	80be88 <__alt_data_end+0xff80be88>
  80c018:	3446b03a 	or	r3,r6,r17
  80c01c:	18001c26 	beq	r3,zero,80c090 <__muldf3+0x2cc>
  80c020:	8800ce26 	beq	r17,zero,80c35c <__muldf3+0x598>
  80c024:	8809883a 	mov	r4,r17
  80c028:	d9800215 	stw	r6,8(sp)
  80c02c:	da400115 	stw	r9,4(sp)
  80c030:	da800015 	stw	r10,0(sp)
  80c034:	080cfdc0 	call	80cfdc <__clzsi2>
  80c038:	d9800217 	ldw	r6,8(sp)
  80c03c:	da400117 	ldw	r9,4(sp)
  80c040:	da800017 	ldw	r10,0(sp)
  80c044:	113ffd44 	addi	r4,r2,-11
  80c048:	00c00704 	movi	r3,28
  80c04c:	1900bf16 	blt	r3,r4,80c34c <__muldf3+0x588>
  80c050:	00c00744 	movi	r3,29
  80c054:	123ffe04 	addi	r8,r2,-8
  80c058:	1907c83a 	sub	r3,r3,r4
  80c05c:	8a22983a 	sll	r17,r17,r8
  80c060:	30c6d83a 	srl	r3,r6,r3
  80c064:	3210983a 	sll	r8,r6,r8
  80c068:	1c62b03a 	or	r17,r3,r17
  80c06c:	1080fcc4 	addi	r2,r2,1011
  80c070:	0085c83a 	sub	r2,zero,r2
  80c074:	000b883a 	mov	r5,zero
  80c078:	003f8306 	br	80be88 <__alt_data_end+0xff80be88>
  80c07c:	b02b883a 	mov	r21,r22
  80c080:	0081ffc4 	movi	r2,2047
  80c084:	000b883a 	mov	r5,zero
  80c088:	0029883a 	mov	r20,zero
  80c08c:	003fac06 	br	80bf40 <__alt_data_end+0xff80bf40>
  80c090:	0023883a 	mov	r17,zero
  80c094:	0011883a 	mov	r8,zero
  80c098:	01400044 	movi	r5,1
  80c09c:	003f7a06 	br	80be88 <__alt_data_end+0xff80be88>
  80c0a0:	014000c4 	movi	r5,3
  80c0a4:	003f7806 	br	80be88 <__alt_data_end+0xff80be88>
  80c0a8:	04c00104 	movi	r19,4
  80c0ac:	0021883a 	mov	r16,zero
  80c0b0:	0029883a 	mov	r20,zero
  80c0b4:	07000044 	movi	fp,1
  80c0b8:	003f6106 	br	80be40 <__alt_data_end+0xff80be40>
  80c0bc:	04c00304 	movi	r19,12
  80c0c0:	070000c4 	movi	fp,3
  80c0c4:	003f5e06 	br	80be40 <__alt_data_end+0xff80be40>
  80c0c8:	01400434 	movhi	r5,16
  80c0cc:	002b883a 	mov	r21,zero
  80c0d0:	297fffc4 	addi	r5,r5,-1
  80c0d4:	053fffc4 	movi	r20,-1
  80c0d8:	0081ffc4 	movi	r2,2047
  80c0dc:	003f9806 	br	80bf40 <__alt_data_end+0xff80bf40>
  80c0e0:	8023883a 	mov	r17,r16
  80c0e4:	a011883a 	mov	r8,r20
  80c0e8:	e00b883a 	mov	r5,fp
  80c0ec:	003f8a06 	br	80bf18 <__alt_data_end+0xff80bf18>
  80c0f0:	8023883a 	mov	r17,r16
  80c0f4:	a011883a 	mov	r8,r20
  80c0f8:	482d883a 	mov	r22,r9
  80c0fc:	e00b883a 	mov	r5,fp
  80c100:	003f8506 	br	80bf18 <__alt_data_end+0xff80bf18>
  80c104:	a00ad43a 	srli	r5,r20,16
  80c108:	401ad43a 	srli	r13,r8,16
  80c10c:	a53fffcc 	andi	r20,r20,65535
  80c110:	423fffcc 	andi	r8,r8,65535
  80c114:	4519383a 	mul	r12,r8,r20
  80c118:	4147383a 	mul	r3,r8,r5
  80c11c:	6d09383a 	mul	r4,r13,r20
  80c120:	600cd43a 	srli	r6,r12,16
  80c124:	2b5d383a 	mul	r14,r5,r13
  80c128:	20c9883a 	add	r4,r4,r3
  80c12c:	310d883a 	add	r6,r6,r4
  80c130:	30c0022e 	bgeu	r6,r3,80c13c <__muldf3+0x378>
  80c134:	00c00074 	movhi	r3,1
  80c138:	70dd883a 	add	r14,r14,r3
  80c13c:	8826d43a 	srli	r19,r17,16
  80c140:	8bffffcc 	andi	r15,r17,65535
  80c144:	7d23383a 	mul	r17,r15,r20
  80c148:	7949383a 	mul	r4,r15,r5
  80c14c:	9d29383a 	mul	r20,r19,r20
  80c150:	8814d43a 	srli	r10,r17,16
  80c154:	3012943a 	slli	r9,r6,16
  80c158:	a129883a 	add	r20,r20,r4
  80c15c:	633fffcc 	andi	r12,r12,65535
  80c160:	5515883a 	add	r10,r10,r20
  80c164:	3006d43a 	srli	r3,r6,16
  80c168:	4b13883a 	add	r9,r9,r12
  80c16c:	2ccb383a 	mul	r5,r5,r19
  80c170:	5100022e 	bgeu	r10,r4,80c17c <__muldf3+0x3b8>
  80c174:	01000074 	movhi	r4,1
  80c178:	290b883a 	add	r5,r5,r4
  80c17c:	802ad43a 	srli	r21,r16,16
  80c180:	843fffcc 	andi	r16,r16,65535
  80c184:	440d383a 	mul	r6,r8,r16
  80c188:	4565383a 	mul	r18,r8,r21
  80c18c:	8349383a 	mul	r4,r16,r13
  80c190:	500e943a 	slli	r7,r10,16
  80c194:	3010d43a 	srli	r8,r6,16
  80c198:	5028d43a 	srli	r20,r10,16
  80c19c:	2489883a 	add	r4,r4,r18
  80c1a0:	8abfffcc 	andi	r10,r17,65535
  80c1a4:	3a95883a 	add	r10,r7,r10
  80c1a8:	4119883a 	add	r12,r8,r4
  80c1ac:	a169883a 	add	r20,r20,r5
  80c1b0:	1a87883a 	add	r3,r3,r10
  80c1b4:	6d5b383a 	mul	r13,r13,r21
  80c1b8:	6480022e 	bgeu	r12,r18,80c1c4 <__muldf3+0x400>
  80c1bc:	01000074 	movhi	r4,1
  80c1c0:	691b883a 	add	r13,r13,r4
  80c1c4:	7c25383a 	mul	r18,r15,r16
  80c1c8:	7d4b383a 	mul	r5,r15,r21
  80c1cc:	84cf383a 	mul	r7,r16,r19
  80c1d0:	901ed43a 	srli	r15,r18,16
  80c1d4:	6008d43a 	srli	r4,r12,16
  80c1d8:	6010943a 	slli	r8,r12,16
  80c1dc:	394f883a 	add	r7,r7,r5
  80c1e0:	333fffcc 	andi	r12,r6,65535
  80c1e4:	79df883a 	add	r15,r15,r7
  80c1e8:	235b883a 	add	r13,r4,r13
  80c1ec:	9d63383a 	mul	r17,r19,r21
  80c1f0:	4309883a 	add	r4,r8,r12
  80c1f4:	7940022e 	bgeu	r15,r5,80c200 <__muldf3+0x43c>
  80c1f8:	01400074 	movhi	r5,1
  80c1fc:	8963883a 	add	r17,r17,r5
  80c200:	780a943a 	slli	r5,r15,16
  80c204:	91bfffcc 	andi	r6,r18,65535
  80c208:	70c7883a 	add	r3,r14,r3
  80c20c:	298d883a 	add	r6,r5,r6
  80c210:	1a8f803a 	cmpltu	r7,r3,r10
  80c214:	350b883a 	add	r5,r6,r20
  80c218:	20c7883a 	add	r3,r4,r3
  80c21c:	3955883a 	add	r10,r7,r5
  80c220:	1909803a 	cmpltu	r4,r3,r4
  80c224:	6a91883a 	add	r8,r13,r10
  80c228:	780cd43a 	srli	r6,r15,16
  80c22c:	2219883a 	add	r12,r4,r8
  80c230:	2d0b803a 	cmpltu	r5,r5,r20
  80c234:	51cf803a 	cmpltu	r7,r10,r7
  80c238:	29ceb03a 	or	r7,r5,r7
  80c23c:	4351803a 	cmpltu	r8,r8,r13
  80c240:	610b803a 	cmpltu	r5,r12,r4
  80c244:	4148b03a 	or	r4,r8,r5
  80c248:	398f883a 	add	r7,r7,r6
  80c24c:	3909883a 	add	r4,r7,r4
  80c250:	1810927a 	slli	r8,r3,9
  80c254:	2449883a 	add	r4,r4,r17
  80c258:	2008927a 	slli	r4,r4,9
  80c25c:	6022d5fa 	srli	r17,r12,23
  80c260:	1806d5fa 	srli	r3,r3,23
  80c264:	4252b03a 	or	r9,r8,r9
  80c268:	600a927a 	slli	r5,r12,9
  80c26c:	4810c03a 	cmpne	r8,r9,zero
  80c270:	2462b03a 	or	r17,r4,r17
  80c274:	40c6b03a 	or	r3,r8,r3
  80c278:	8900402c 	andhi	r4,r17,256
  80c27c:	1950b03a 	or	r8,r3,r5
  80c280:	20000726 	beq	r4,zero,80c2a0 <__muldf3+0x4dc>
  80c284:	4006d07a 	srli	r3,r8,1
  80c288:	880497fa 	slli	r2,r17,31
  80c28c:	4200004c 	andi	r8,r8,1
  80c290:	8822d07a 	srli	r17,r17,1
  80c294:	1a10b03a 	or	r8,r3,r8
  80c298:	1210b03a 	or	r8,r2,r8
  80c29c:	5805883a 	mov	r2,r11
  80c2a0:	1140ffc4 	addi	r5,r2,1023
  80c2a4:	0140440e 	bge	zero,r5,80c3b8 <__muldf3+0x5f4>
  80c2a8:	40c001cc 	andi	r3,r8,7
  80c2ac:	18000726 	beq	r3,zero,80c2cc <__muldf3+0x508>
  80c2b0:	40c003cc 	andi	r3,r8,15
  80c2b4:	01000104 	movi	r4,4
  80c2b8:	19000426 	beq	r3,r4,80c2cc <__muldf3+0x508>
  80c2bc:	4107883a 	add	r3,r8,r4
  80c2c0:	1a11803a 	cmpltu	r8,r3,r8
  80c2c4:	8a23883a 	add	r17,r17,r8
  80c2c8:	1811883a 	mov	r8,r3
  80c2cc:	88c0402c 	andhi	r3,r17,256
  80c2d0:	18000426 	beq	r3,zero,80c2e4 <__muldf3+0x520>
  80c2d4:	11410004 	addi	r5,r2,1024
  80c2d8:	00bfc034 	movhi	r2,65280
  80c2dc:	10bfffc4 	addi	r2,r2,-1
  80c2e0:	88a2703a 	and	r17,r17,r2
  80c2e4:	0081ff84 	movi	r2,2046
  80c2e8:	117f6416 	blt	r2,r5,80c07c <__alt_data_end+0xff80c07c>
  80c2ec:	8828977a 	slli	r20,r17,29
  80c2f0:	4010d0fa 	srli	r8,r8,3
  80c2f4:	8822927a 	slli	r17,r17,9
  80c2f8:	2881ffcc 	andi	r2,r5,2047
  80c2fc:	a228b03a 	or	r20,r20,r8
  80c300:	880ad33a 	srli	r5,r17,12
  80c304:	b02b883a 	mov	r21,r22
  80c308:	003f0d06 	br	80bf40 <__alt_data_end+0xff80bf40>
  80c30c:	8080022c 	andhi	r2,r16,8
  80c310:	10000926 	beq	r2,zero,80c338 <__muldf3+0x574>
  80c314:	8880022c 	andhi	r2,r17,8
  80c318:	1000071e 	bne	r2,zero,80c338 <__muldf3+0x574>
  80c31c:	00800434 	movhi	r2,16
  80c320:	89400234 	orhi	r5,r17,8
  80c324:	10bfffc4 	addi	r2,r2,-1
  80c328:	b82b883a 	mov	r21,r23
  80c32c:	288a703a 	and	r5,r5,r2
  80c330:	4029883a 	mov	r20,r8
  80c334:	003f6806 	br	80c0d8 <__alt_data_end+0xff80c0d8>
  80c338:	00800434 	movhi	r2,16
  80c33c:	81400234 	orhi	r5,r16,8
  80c340:	10bfffc4 	addi	r2,r2,-1
  80c344:	288a703a 	and	r5,r5,r2
  80c348:	003f6306 	br	80c0d8 <__alt_data_end+0xff80c0d8>
  80c34c:	147ff604 	addi	r17,r2,-40
  80c350:	3462983a 	sll	r17,r6,r17
  80c354:	0011883a 	mov	r8,zero
  80c358:	003f4406 	br	80c06c <__alt_data_end+0xff80c06c>
  80c35c:	3009883a 	mov	r4,r6
  80c360:	d9800215 	stw	r6,8(sp)
  80c364:	da400115 	stw	r9,4(sp)
  80c368:	da800015 	stw	r10,0(sp)
  80c36c:	080cfdc0 	call	80cfdc <__clzsi2>
  80c370:	10800804 	addi	r2,r2,32
  80c374:	da800017 	ldw	r10,0(sp)
  80c378:	da400117 	ldw	r9,4(sp)
  80c37c:	d9800217 	ldw	r6,8(sp)
  80c380:	003f3006 	br	80c044 <__alt_data_end+0xff80c044>
  80c384:	143ff604 	addi	r16,r2,-40
  80c388:	9c20983a 	sll	r16,r19,r16
  80c38c:	0029883a 	mov	r20,zero
  80c390:	003f1606 	br	80bfec <__alt_data_end+0xff80bfec>
  80c394:	d9800215 	stw	r6,8(sp)
  80c398:	d9c00015 	stw	r7,0(sp)
  80c39c:	da400115 	stw	r9,4(sp)
  80c3a0:	080cfdc0 	call	80cfdc <__clzsi2>
  80c3a4:	10800804 	addi	r2,r2,32
  80c3a8:	da400117 	ldw	r9,4(sp)
  80c3ac:	d9c00017 	ldw	r7,0(sp)
  80c3b0:	d9800217 	ldw	r6,8(sp)
  80c3b4:	003f0306 	br	80bfc4 <__alt_data_end+0xff80bfc4>
  80c3b8:	00c00044 	movi	r3,1
  80c3bc:	1947c83a 	sub	r3,r3,r5
  80c3c0:	00800e04 	movi	r2,56
  80c3c4:	10feda16 	blt	r2,r3,80bf30 <__alt_data_end+0xff80bf30>
  80c3c8:	008007c4 	movi	r2,31
  80c3cc:	10c01b16 	blt	r2,r3,80c43c <__muldf3+0x678>
  80c3d0:	00800804 	movi	r2,32
  80c3d4:	10c5c83a 	sub	r2,r2,r3
  80c3d8:	888a983a 	sll	r5,r17,r2
  80c3dc:	40c8d83a 	srl	r4,r8,r3
  80c3e0:	4084983a 	sll	r2,r8,r2
  80c3e4:	88e2d83a 	srl	r17,r17,r3
  80c3e8:	2906b03a 	or	r3,r5,r4
  80c3ec:	1004c03a 	cmpne	r2,r2,zero
  80c3f0:	1886b03a 	or	r3,r3,r2
  80c3f4:	188001cc 	andi	r2,r3,7
  80c3f8:	10000726 	beq	r2,zero,80c418 <__muldf3+0x654>
  80c3fc:	188003cc 	andi	r2,r3,15
  80c400:	01000104 	movi	r4,4
  80c404:	11000426 	beq	r2,r4,80c418 <__muldf3+0x654>
  80c408:	1805883a 	mov	r2,r3
  80c40c:	10c00104 	addi	r3,r2,4
  80c410:	1885803a 	cmpltu	r2,r3,r2
  80c414:	88a3883a 	add	r17,r17,r2
  80c418:	8880202c 	andhi	r2,r17,128
  80c41c:	10001c26 	beq	r2,zero,80c490 <__muldf3+0x6cc>
  80c420:	b02b883a 	mov	r21,r22
  80c424:	00800044 	movi	r2,1
  80c428:	000b883a 	mov	r5,zero
  80c42c:	0029883a 	mov	r20,zero
  80c430:	003ec306 	br	80bf40 <__alt_data_end+0xff80bf40>
  80c434:	5805883a 	mov	r2,r11
  80c438:	003f9906 	br	80c2a0 <__alt_data_end+0xff80c2a0>
  80c43c:	00bff844 	movi	r2,-31
  80c440:	1145c83a 	sub	r2,r2,r5
  80c444:	8888d83a 	srl	r4,r17,r2
  80c448:	00800804 	movi	r2,32
  80c44c:	18801a26 	beq	r3,r2,80c4b8 <__muldf3+0x6f4>
  80c450:	00801004 	movi	r2,64
  80c454:	10c5c83a 	sub	r2,r2,r3
  80c458:	8884983a 	sll	r2,r17,r2
  80c45c:	1204b03a 	or	r2,r2,r8
  80c460:	1004c03a 	cmpne	r2,r2,zero
  80c464:	2084b03a 	or	r2,r4,r2
  80c468:	144001cc 	andi	r17,r2,7
  80c46c:	88000d1e 	bne	r17,zero,80c4a4 <__muldf3+0x6e0>
  80c470:	000b883a 	mov	r5,zero
  80c474:	1028d0fa 	srli	r20,r2,3
  80c478:	b02b883a 	mov	r21,r22
  80c47c:	0005883a 	mov	r2,zero
  80c480:	a468b03a 	or	r20,r20,r17
  80c484:	003eae06 	br	80bf40 <__alt_data_end+0xff80bf40>
  80c488:	1007883a 	mov	r3,r2
  80c48c:	0023883a 	mov	r17,zero
  80c490:	880a927a 	slli	r5,r17,9
  80c494:	1805883a 	mov	r2,r3
  80c498:	8822977a 	slli	r17,r17,29
  80c49c:	280ad33a 	srli	r5,r5,12
  80c4a0:	003ff406 	br	80c474 <__alt_data_end+0xff80c474>
  80c4a4:	10c003cc 	andi	r3,r2,15
  80c4a8:	01000104 	movi	r4,4
  80c4ac:	193ff626 	beq	r3,r4,80c488 <__alt_data_end+0xff80c488>
  80c4b0:	0023883a 	mov	r17,zero
  80c4b4:	003fd506 	br	80c40c <__alt_data_end+0xff80c40c>
  80c4b8:	0005883a 	mov	r2,zero
  80c4bc:	003fe706 	br	80c45c <__alt_data_end+0xff80c45c>
  80c4c0:	00800434 	movhi	r2,16
  80c4c4:	89400234 	orhi	r5,r17,8
  80c4c8:	10bfffc4 	addi	r2,r2,-1
  80c4cc:	b02b883a 	mov	r21,r22
  80c4d0:	288a703a 	and	r5,r5,r2
  80c4d4:	4029883a 	mov	r20,r8
  80c4d8:	003eff06 	br	80c0d8 <__alt_data_end+0xff80c0d8>

0080c4dc <__subdf3>:
  80c4dc:	02000434 	movhi	r8,16
  80c4e0:	423fffc4 	addi	r8,r8,-1
  80c4e4:	defffb04 	addi	sp,sp,-20
  80c4e8:	2a14703a 	and	r10,r5,r8
  80c4ec:	3812d53a 	srli	r9,r7,20
  80c4f0:	3a10703a 	and	r8,r7,r8
  80c4f4:	2006d77a 	srli	r3,r4,29
  80c4f8:	3004d77a 	srli	r2,r6,29
  80c4fc:	dc000015 	stw	r16,0(sp)
  80c500:	501490fa 	slli	r10,r10,3
  80c504:	2820d53a 	srli	r16,r5,20
  80c508:	401090fa 	slli	r8,r8,3
  80c50c:	dc800215 	stw	r18,8(sp)
  80c510:	dc400115 	stw	r17,4(sp)
  80c514:	dfc00415 	stw	ra,16(sp)
  80c518:	202290fa 	slli	r17,r4,3
  80c51c:	dcc00315 	stw	r19,12(sp)
  80c520:	4a41ffcc 	andi	r9,r9,2047
  80c524:	0101ffc4 	movi	r4,2047
  80c528:	2824d7fa 	srli	r18,r5,31
  80c52c:	8401ffcc 	andi	r16,r16,2047
  80c530:	50c6b03a 	or	r3,r10,r3
  80c534:	380ed7fa 	srli	r7,r7,31
  80c538:	408ab03a 	or	r5,r8,r2
  80c53c:	300c90fa 	slli	r6,r6,3
  80c540:	49009626 	beq	r9,r4,80c79c <__subdf3+0x2c0>
  80c544:	39c0005c 	xori	r7,r7,1
  80c548:	8245c83a 	sub	r2,r16,r9
  80c54c:	3c807426 	beq	r7,r18,80c720 <__subdf3+0x244>
  80c550:	0080af0e 	bge	zero,r2,80c810 <__subdf3+0x334>
  80c554:	48002a1e 	bne	r9,zero,80c600 <__subdf3+0x124>
  80c558:	2988b03a 	or	r4,r5,r6
  80c55c:	20009a1e 	bne	r4,zero,80c7c8 <__subdf3+0x2ec>
  80c560:	888001cc 	andi	r2,r17,7
  80c564:	10000726 	beq	r2,zero,80c584 <__subdf3+0xa8>
  80c568:	888003cc 	andi	r2,r17,15
  80c56c:	01000104 	movi	r4,4
  80c570:	11000426 	beq	r2,r4,80c584 <__subdf3+0xa8>
  80c574:	890b883a 	add	r5,r17,r4
  80c578:	2c63803a 	cmpltu	r17,r5,r17
  80c57c:	1c47883a 	add	r3,r3,r17
  80c580:	2823883a 	mov	r17,r5
  80c584:	1880202c 	andhi	r2,r3,128
  80c588:	10005926 	beq	r2,zero,80c6f0 <__subdf3+0x214>
  80c58c:	84000044 	addi	r16,r16,1
  80c590:	0081ffc4 	movi	r2,2047
  80c594:	8080be26 	beq	r16,r2,80c890 <__subdf3+0x3b4>
  80c598:	017fe034 	movhi	r5,65408
  80c59c:	297fffc4 	addi	r5,r5,-1
  80c5a0:	1946703a 	and	r3,r3,r5
  80c5a4:	1804977a 	slli	r2,r3,29
  80c5a8:	1806927a 	slli	r3,r3,9
  80c5ac:	8822d0fa 	srli	r17,r17,3
  80c5b0:	8401ffcc 	andi	r16,r16,2047
  80c5b4:	180ad33a 	srli	r5,r3,12
  80c5b8:	9100004c 	andi	r4,r18,1
  80c5bc:	1444b03a 	or	r2,r2,r17
  80c5c0:	80c1ffcc 	andi	r3,r16,2047
  80c5c4:	1820953a 	slli	r16,r3,20
  80c5c8:	20c03fcc 	andi	r3,r4,255
  80c5cc:	180897fa 	slli	r4,r3,31
  80c5d0:	00c00434 	movhi	r3,16
  80c5d4:	18ffffc4 	addi	r3,r3,-1
  80c5d8:	28c6703a 	and	r3,r5,r3
  80c5dc:	1c06b03a 	or	r3,r3,r16
  80c5e0:	1906b03a 	or	r3,r3,r4
  80c5e4:	dfc00417 	ldw	ra,16(sp)
  80c5e8:	dcc00317 	ldw	r19,12(sp)
  80c5ec:	dc800217 	ldw	r18,8(sp)
  80c5f0:	dc400117 	ldw	r17,4(sp)
  80c5f4:	dc000017 	ldw	r16,0(sp)
  80c5f8:	dec00504 	addi	sp,sp,20
  80c5fc:	f800283a 	ret
  80c600:	0101ffc4 	movi	r4,2047
  80c604:	813fd626 	beq	r16,r4,80c560 <__alt_data_end+0xff80c560>
  80c608:	29402034 	orhi	r5,r5,128
  80c60c:	01000e04 	movi	r4,56
  80c610:	2080a316 	blt	r4,r2,80c8a0 <__subdf3+0x3c4>
  80c614:	010007c4 	movi	r4,31
  80c618:	2080c616 	blt	r4,r2,80c934 <__subdf3+0x458>
  80c61c:	01000804 	movi	r4,32
  80c620:	2089c83a 	sub	r4,r4,r2
  80c624:	2910983a 	sll	r8,r5,r4
  80c628:	308ed83a 	srl	r7,r6,r2
  80c62c:	3108983a 	sll	r4,r6,r4
  80c630:	2884d83a 	srl	r2,r5,r2
  80c634:	41ccb03a 	or	r6,r8,r7
  80c638:	2008c03a 	cmpne	r4,r4,zero
  80c63c:	310cb03a 	or	r6,r6,r4
  80c640:	898dc83a 	sub	r6,r17,r6
  80c644:	89a3803a 	cmpltu	r17,r17,r6
  80c648:	1887c83a 	sub	r3,r3,r2
  80c64c:	1c47c83a 	sub	r3,r3,r17
  80c650:	3023883a 	mov	r17,r6
  80c654:	1880202c 	andhi	r2,r3,128
  80c658:	10002326 	beq	r2,zero,80c6e8 <__subdf3+0x20c>
  80c65c:	04c02034 	movhi	r19,128
  80c660:	9cffffc4 	addi	r19,r19,-1
  80c664:	1ce6703a 	and	r19,r3,r19
  80c668:	98007a26 	beq	r19,zero,80c854 <__subdf3+0x378>
  80c66c:	9809883a 	mov	r4,r19
  80c670:	080cfdc0 	call	80cfdc <__clzsi2>
  80c674:	113ffe04 	addi	r4,r2,-8
  80c678:	00c007c4 	movi	r3,31
  80c67c:	19007b16 	blt	r3,r4,80c86c <__subdf3+0x390>
  80c680:	00800804 	movi	r2,32
  80c684:	1105c83a 	sub	r2,r2,r4
  80c688:	8884d83a 	srl	r2,r17,r2
  80c68c:	9906983a 	sll	r3,r19,r4
  80c690:	8922983a 	sll	r17,r17,r4
  80c694:	10c4b03a 	or	r2,r2,r3
  80c698:	24007816 	blt	r4,r16,80c87c <__subdf3+0x3a0>
  80c69c:	2421c83a 	sub	r16,r4,r16
  80c6a0:	80c00044 	addi	r3,r16,1
  80c6a4:	010007c4 	movi	r4,31
  80c6a8:	20c09516 	blt	r4,r3,80c900 <__subdf3+0x424>
  80c6ac:	01400804 	movi	r5,32
  80c6b0:	28cbc83a 	sub	r5,r5,r3
  80c6b4:	88c8d83a 	srl	r4,r17,r3
  80c6b8:	8962983a 	sll	r17,r17,r5
  80c6bc:	114a983a 	sll	r5,r2,r5
  80c6c0:	10c6d83a 	srl	r3,r2,r3
  80c6c4:	8804c03a 	cmpne	r2,r17,zero
  80c6c8:	290ab03a 	or	r5,r5,r4
  80c6cc:	28a2b03a 	or	r17,r5,r2
  80c6d0:	0021883a 	mov	r16,zero
  80c6d4:	003fa206 	br	80c560 <__alt_data_end+0xff80c560>
  80c6d8:	2090b03a 	or	r8,r4,r2
  80c6dc:	40018e26 	beq	r8,zero,80cd18 <__subdf3+0x83c>
  80c6e0:	1007883a 	mov	r3,r2
  80c6e4:	2023883a 	mov	r17,r4
  80c6e8:	888001cc 	andi	r2,r17,7
  80c6ec:	103f9e1e 	bne	r2,zero,80c568 <__alt_data_end+0xff80c568>
  80c6f0:	1804977a 	slli	r2,r3,29
  80c6f4:	8822d0fa 	srli	r17,r17,3
  80c6f8:	1810d0fa 	srli	r8,r3,3
  80c6fc:	9100004c 	andi	r4,r18,1
  80c700:	1444b03a 	or	r2,r2,r17
  80c704:	00c1ffc4 	movi	r3,2047
  80c708:	80c02826 	beq	r16,r3,80c7ac <__subdf3+0x2d0>
  80c70c:	01400434 	movhi	r5,16
  80c710:	297fffc4 	addi	r5,r5,-1
  80c714:	80e0703a 	and	r16,r16,r3
  80c718:	414a703a 	and	r5,r8,r5
  80c71c:	003fa806 	br	80c5c0 <__alt_data_end+0xff80c5c0>
  80c720:	0080630e 	bge	zero,r2,80c8b0 <__subdf3+0x3d4>
  80c724:	48003026 	beq	r9,zero,80c7e8 <__subdf3+0x30c>
  80c728:	0101ffc4 	movi	r4,2047
  80c72c:	813f8c26 	beq	r16,r4,80c560 <__alt_data_end+0xff80c560>
  80c730:	29402034 	orhi	r5,r5,128
  80c734:	01000e04 	movi	r4,56
  80c738:	2080a90e 	bge	r4,r2,80c9e0 <__subdf3+0x504>
  80c73c:	298cb03a 	or	r6,r5,r6
  80c740:	3012c03a 	cmpne	r9,r6,zero
  80c744:	0005883a 	mov	r2,zero
  80c748:	4c53883a 	add	r9,r9,r17
  80c74c:	4c63803a 	cmpltu	r17,r9,r17
  80c750:	10c7883a 	add	r3,r2,r3
  80c754:	88c7883a 	add	r3,r17,r3
  80c758:	4823883a 	mov	r17,r9
  80c75c:	1880202c 	andhi	r2,r3,128
  80c760:	1000d026 	beq	r2,zero,80caa4 <__subdf3+0x5c8>
  80c764:	84000044 	addi	r16,r16,1
  80c768:	0081ffc4 	movi	r2,2047
  80c76c:	8080fe26 	beq	r16,r2,80cb68 <__subdf3+0x68c>
  80c770:	00bfe034 	movhi	r2,65408
  80c774:	10bfffc4 	addi	r2,r2,-1
  80c778:	1886703a 	and	r3,r3,r2
  80c77c:	880ad07a 	srli	r5,r17,1
  80c780:	180497fa 	slli	r2,r3,31
  80c784:	8900004c 	andi	r4,r17,1
  80c788:	2922b03a 	or	r17,r5,r4
  80c78c:	1806d07a 	srli	r3,r3,1
  80c790:	1462b03a 	or	r17,r2,r17
  80c794:	3825883a 	mov	r18,r7
  80c798:	003f7106 	br	80c560 <__alt_data_end+0xff80c560>
  80c79c:	2984b03a 	or	r2,r5,r6
  80c7a0:	103f6826 	beq	r2,zero,80c544 <__alt_data_end+0xff80c544>
  80c7a4:	39c03fcc 	andi	r7,r7,255
  80c7a8:	003f6706 	br	80c548 <__alt_data_end+0xff80c548>
  80c7ac:	4086b03a 	or	r3,r8,r2
  80c7b0:	18015226 	beq	r3,zero,80ccfc <__subdf3+0x820>
  80c7b4:	00c00434 	movhi	r3,16
  80c7b8:	41400234 	orhi	r5,r8,8
  80c7bc:	18ffffc4 	addi	r3,r3,-1
  80c7c0:	28ca703a 	and	r5,r5,r3
  80c7c4:	003f7e06 	br	80c5c0 <__alt_data_end+0xff80c5c0>
  80c7c8:	10bfffc4 	addi	r2,r2,-1
  80c7cc:	1000491e 	bne	r2,zero,80c8f4 <__subdf3+0x418>
  80c7d0:	898fc83a 	sub	r7,r17,r6
  80c7d4:	89e3803a 	cmpltu	r17,r17,r7
  80c7d8:	1947c83a 	sub	r3,r3,r5
  80c7dc:	1c47c83a 	sub	r3,r3,r17
  80c7e0:	3823883a 	mov	r17,r7
  80c7e4:	003f9b06 	br	80c654 <__alt_data_end+0xff80c654>
  80c7e8:	2988b03a 	or	r4,r5,r6
  80c7ec:	203f5c26 	beq	r4,zero,80c560 <__alt_data_end+0xff80c560>
  80c7f0:	10bfffc4 	addi	r2,r2,-1
  80c7f4:	1000931e 	bne	r2,zero,80ca44 <__subdf3+0x568>
  80c7f8:	898d883a 	add	r6,r17,r6
  80c7fc:	3463803a 	cmpltu	r17,r6,r17
  80c800:	1947883a 	add	r3,r3,r5
  80c804:	88c7883a 	add	r3,r17,r3
  80c808:	3023883a 	mov	r17,r6
  80c80c:	003fd306 	br	80c75c <__alt_data_end+0xff80c75c>
  80c810:	1000541e 	bne	r2,zero,80c964 <__subdf3+0x488>
  80c814:	80800044 	addi	r2,r16,1
  80c818:	1081ffcc 	andi	r2,r2,2047
  80c81c:	01000044 	movi	r4,1
  80c820:	2080a20e 	bge	r4,r2,80caac <__subdf3+0x5d0>
  80c824:	8989c83a 	sub	r4,r17,r6
  80c828:	8905803a 	cmpltu	r2,r17,r4
  80c82c:	1967c83a 	sub	r19,r3,r5
  80c830:	98a7c83a 	sub	r19,r19,r2
  80c834:	9880202c 	andhi	r2,r19,128
  80c838:	10006326 	beq	r2,zero,80c9c8 <__subdf3+0x4ec>
  80c83c:	3463c83a 	sub	r17,r6,r17
  80c840:	28c7c83a 	sub	r3,r5,r3
  80c844:	344d803a 	cmpltu	r6,r6,r17
  80c848:	19a7c83a 	sub	r19,r3,r6
  80c84c:	3825883a 	mov	r18,r7
  80c850:	983f861e 	bne	r19,zero,80c66c <__alt_data_end+0xff80c66c>
  80c854:	8809883a 	mov	r4,r17
  80c858:	080cfdc0 	call	80cfdc <__clzsi2>
  80c85c:	10800804 	addi	r2,r2,32
  80c860:	113ffe04 	addi	r4,r2,-8
  80c864:	00c007c4 	movi	r3,31
  80c868:	193f850e 	bge	r3,r4,80c680 <__alt_data_end+0xff80c680>
  80c86c:	10bff604 	addi	r2,r2,-40
  80c870:	8884983a 	sll	r2,r17,r2
  80c874:	0023883a 	mov	r17,zero
  80c878:	243f880e 	bge	r4,r16,80c69c <__alt_data_end+0xff80c69c>
  80c87c:	00ffe034 	movhi	r3,65408
  80c880:	18ffffc4 	addi	r3,r3,-1
  80c884:	8121c83a 	sub	r16,r16,r4
  80c888:	10c6703a 	and	r3,r2,r3
  80c88c:	003f3406 	br	80c560 <__alt_data_end+0xff80c560>
  80c890:	9100004c 	andi	r4,r18,1
  80c894:	000b883a 	mov	r5,zero
  80c898:	0005883a 	mov	r2,zero
  80c89c:	003f4806 	br	80c5c0 <__alt_data_end+0xff80c5c0>
  80c8a0:	298cb03a 	or	r6,r5,r6
  80c8a4:	300cc03a 	cmpne	r6,r6,zero
  80c8a8:	0005883a 	mov	r2,zero
  80c8ac:	003f6406 	br	80c640 <__alt_data_end+0xff80c640>
  80c8b0:	10009a1e 	bne	r2,zero,80cb1c <__subdf3+0x640>
  80c8b4:	82400044 	addi	r9,r16,1
  80c8b8:	4881ffcc 	andi	r2,r9,2047
  80c8bc:	02800044 	movi	r10,1
  80c8c0:	5080670e 	bge	r10,r2,80ca60 <__subdf3+0x584>
  80c8c4:	0081ffc4 	movi	r2,2047
  80c8c8:	4880af26 	beq	r9,r2,80cb88 <__subdf3+0x6ac>
  80c8cc:	898d883a 	add	r6,r17,r6
  80c8d0:	1945883a 	add	r2,r3,r5
  80c8d4:	3447803a 	cmpltu	r3,r6,r17
  80c8d8:	1887883a 	add	r3,r3,r2
  80c8dc:	182297fa 	slli	r17,r3,31
  80c8e0:	300cd07a 	srli	r6,r6,1
  80c8e4:	1806d07a 	srli	r3,r3,1
  80c8e8:	4821883a 	mov	r16,r9
  80c8ec:	89a2b03a 	or	r17,r17,r6
  80c8f0:	003f1b06 	br	80c560 <__alt_data_end+0xff80c560>
  80c8f4:	0101ffc4 	movi	r4,2047
  80c8f8:	813f441e 	bne	r16,r4,80c60c <__alt_data_end+0xff80c60c>
  80c8fc:	003f1806 	br	80c560 <__alt_data_end+0xff80c560>
  80c900:	843ff844 	addi	r16,r16,-31
  80c904:	01400804 	movi	r5,32
  80c908:	1408d83a 	srl	r4,r2,r16
  80c90c:	19405026 	beq	r3,r5,80ca50 <__subdf3+0x574>
  80c910:	01401004 	movi	r5,64
  80c914:	28c7c83a 	sub	r3,r5,r3
  80c918:	10c4983a 	sll	r2,r2,r3
  80c91c:	88a2b03a 	or	r17,r17,r2
  80c920:	8822c03a 	cmpne	r17,r17,zero
  80c924:	2462b03a 	or	r17,r4,r17
  80c928:	0007883a 	mov	r3,zero
  80c92c:	0021883a 	mov	r16,zero
  80c930:	003f6d06 	br	80c6e8 <__alt_data_end+0xff80c6e8>
  80c934:	11fff804 	addi	r7,r2,-32
  80c938:	01000804 	movi	r4,32
  80c93c:	29ced83a 	srl	r7,r5,r7
  80c940:	11004526 	beq	r2,r4,80ca58 <__subdf3+0x57c>
  80c944:	01001004 	movi	r4,64
  80c948:	2089c83a 	sub	r4,r4,r2
  80c94c:	2904983a 	sll	r2,r5,r4
  80c950:	118cb03a 	or	r6,r2,r6
  80c954:	300cc03a 	cmpne	r6,r6,zero
  80c958:	398cb03a 	or	r6,r7,r6
  80c95c:	0005883a 	mov	r2,zero
  80c960:	003f3706 	br	80c640 <__alt_data_end+0xff80c640>
  80c964:	80002a26 	beq	r16,zero,80ca10 <__subdf3+0x534>
  80c968:	0101ffc4 	movi	r4,2047
  80c96c:	49006626 	beq	r9,r4,80cb08 <__subdf3+0x62c>
  80c970:	0085c83a 	sub	r2,zero,r2
  80c974:	18c02034 	orhi	r3,r3,128
  80c978:	01000e04 	movi	r4,56
  80c97c:	20807e16 	blt	r4,r2,80cb78 <__subdf3+0x69c>
  80c980:	010007c4 	movi	r4,31
  80c984:	2080e716 	blt	r4,r2,80cd24 <__subdf3+0x848>
  80c988:	01000804 	movi	r4,32
  80c98c:	2089c83a 	sub	r4,r4,r2
  80c990:	1914983a 	sll	r10,r3,r4
  80c994:	8890d83a 	srl	r8,r17,r2
  80c998:	8908983a 	sll	r4,r17,r4
  80c99c:	1884d83a 	srl	r2,r3,r2
  80c9a0:	5222b03a 	or	r17,r10,r8
  80c9a4:	2006c03a 	cmpne	r3,r4,zero
  80c9a8:	88e2b03a 	or	r17,r17,r3
  80c9ac:	3463c83a 	sub	r17,r6,r17
  80c9b0:	2885c83a 	sub	r2,r5,r2
  80c9b4:	344d803a 	cmpltu	r6,r6,r17
  80c9b8:	1187c83a 	sub	r3,r2,r6
  80c9bc:	4821883a 	mov	r16,r9
  80c9c0:	3825883a 	mov	r18,r7
  80c9c4:	003f2306 	br	80c654 <__alt_data_end+0xff80c654>
  80c9c8:	24d0b03a 	or	r8,r4,r19
  80c9cc:	40001b1e 	bne	r8,zero,80ca3c <__subdf3+0x560>
  80c9d0:	0005883a 	mov	r2,zero
  80c9d4:	0009883a 	mov	r4,zero
  80c9d8:	0021883a 	mov	r16,zero
  80c9dc:	003f4906 	br	80c704 <__alt_data_end+0xff80c704>
  80c9e0:	010007c4 	movi	r4,31
  80c9e4:	20803a16 	blt	r4,r2,80cad0 <__subdf3+0x5f4>
  80c9e8:	01000804 	movi	r4,32
  80c9ec:	2089c83a 	sub	r4,r4,r2
  80c9f0:	2912983a 	sll	r9,r5,r4
  80c9f4:	3090d83a 	srl	r8,r6,r2
  80c9f8:	3108983a 	sll	r4,r6,r4
  80c9fc:	2884d83a 	srl	r2,r5,r2
  80ca00:	4a12b03a 	or	r9,r9,r8
  80ca04:	2008c03a 	cmpne	r4,r4,zero
  80ca08:	4912b03a 	or	r9,r9,r4
  80ca0c:	003f4e06 	br	80c748 <__alt_data_end+0xff80c748>
  80ca10:	1c48b03a 	or	r4,r3,r17
  80ca14:	20003c26 	beq	r4,zero,80cb08 <__subdf3+0x62c>
  80ca18:	0084303a 	nor	r2,zero,r2
  80ca1c:	1000381e 	bne	r2,zero,80cb00 <__subdf3+0x624>
  80ca20:	3463c83a 	sub	r17,r6,r17
  80ca24:	28c5c83a 	sub	r2,r5,r3
  80ca28:	344d803a 	cmpltu	r6,r6,r17
  80ca2c:	1187c83a 	sub	r3,r2,r6
  80ca30:	4821883a 	mov	r16,r9
  80ca34:	3825883a 	mov	r18,r7
  80ca38:	003f0606 	br	80c654 <__alt_data_end+0xff80c654>
  80ca3c:	2023883a 	mov	r17,r4
  80ca40:	003f0906 	br	80c668 <__alt_data_end+0xff80c668>
  80ca44:	0101ffc4 	movi	r4,2047
  80ca48:	813f3a1e 	bne	r16,r4,80c734 <__alt_data_end+0xff80c734>
  80ca4c:	003ec406 	br	80c560 <__alt_data_end+0xff80c560>
  80ca50:	0005883a 	mov	r2,zero
  80ca54:	003fb106 	br	80c91c <__alt_data_end+0xff80c91c>
  80ca58:	0005883a 	mov	r2,zero
  80ca5c:	003fbc06 	br	80c950 <__alt_data_end+0xff80c950>
  80ca60:	1c44b03a 	or	r2,r3,r17
  80ca64:	80008e1e 	bne	r16,zero,80cca0 <__subdf3+0x7c4>
  80ca68:	1000c826 	beq	r2,zero,80cd8c <__subdf3+0x8b0>
  80ca6c:	2984b03a 	or	r2,r5,r6
  80ca70:	103ebb26 	beq	r2,zero,80c560 <__alt_data_end+0xff80c560>
  80ca74:	8989883a 	add	r4,r17,r6
  80ca78:	1945883a 	add	r2,r3,r5
  80ca7c:	2447803a 	cmpltu	r3,r4,r17
  80ca80:	1887883a 	add	r3,r3,r2
  80ca84:	1880202c 	andhi	r2,r3,128
  80ca88:	2023883a 	mov	r17,r4
  80ca8c:	103f1626 	beq	r2,zero,80c6e8 <__alt_data_end+0xff80c6e8>
  80ca90:	00bfe034 	movhi	r2,65408
  80ca94:	10bfffc4 	addi	r2,r2,-1
  80ca98:	5021883a 	mov	r16,r10
  80ca9c:	1886703a 	and	r3,r3,r2
  80caa0:	003eaf06 	br	80c560 <__alt_data_end+0xff80c560>
  80caa4:	3825883a 	mov	r18,r7
  80caa8:	003f0f06 	br	80c6e8 <__alt_data_end+0xff80c6e8>
  80caac:	1c44b03a 	or	r2,r3,r17
  80cab0:	8000251e 	bne	r16,zero,80cb48 <__subdf3+0x66c>
  80cab4:	1000661e 	bne	r2,zero,80cc50 <__subdf3+0x774>
  80cab8:	2990b03a 	or	r8,r5,r6
  80cabc:	40009626 	beq	r8,zero,80cd18 <__subdf3+0x83c>
  80cac0:	2807883a 	mov	r3,r5
  80cac4:	3023883a 	mov	r17,r6
  80cac8:	3825883a 	mov	r18,r7
  80cacc:	003ea406 	br	80c560 <__alt_data_end+0xff80c560>
  80cad0:	127ff804 	addi	r9,r2,-32
  80cad4:	01000804 	movi	r4,32
  80cad8:	2a52d83a 	srl	r9,r5,r9
  80cadc:	11008c26 	beq	r2,r4,80cd10 <__subdf3+0x834>
  80cae0:	01001004 	movi	r4,64
  80cae4:	2085c83a 	sub	r2,r4,r2
  80cae8:	2884983a 	sll	r2,r5,r2
  80caec:	118cb03a 	or	r6,r2,r6
  80caf0:	300cc03a 	cmpne	r6,r6,zero
  80caf4:	4992b03a 	or	r9,r9,r6
  80caf8:	0005883a 	mov	r2,zero
  80cafc:	003f1206 	br	80c748 <__alt_data_end+0xff80c748>
  80cb00:	0101ffc4 	movi	r4,2047
  80cb04:	493f9c1e 	bne	r9,r4,80c978 <__alt_data_end+0xff80c978>
  80cb08:	2807883a 	mov	r3,r5
  80cb0c:	3023883a 	mov	r17,r6
  80cb10:	4821883a 	mov	r16,r9
  80cb14:	3825883a 	mov	r18,r7
  80cb18:	003e9106 	br	80c560 <__alt_data_end+0xff80c560>
  80cb1c:	80001f1e 	bne	r16,zero,80cb9c <__subdf3+0x6c0>
  80cb20:	1c48b03a 	or	r4,r3,r17
  80cb24:	20005a26 	beq	r4,zero,80cc90 <__subdf3+0x7b4>
  80cb28:	0084303a 	nor	r2,zero,r2
  80cb2c:	1000561e 	bne	r2,zero,80cc88 <__subdf3+0x7ac>
  80cb30:	89a3883a 	add	r17,r17,r6
  80cb34:	1945883a 	add	r2,r3,r5
  80cb38:	898d803a 	cmpltu	r6,r17,r6
  80cb3c:	3087883a 	add	r3,r6,r2
  80cb40:	4821883a 	mov	r16,r9
  80cb44:	003f0506 	br	80c75c <__alt_data_end+0xff80c75c>
  80cb48:	10002b1e 	bne	r2,zero,80cbf8 <__subdf3+0x71c>
  80cb4c:	2984b03a 	or	r2,r5,r6
  80cb50:	10008026 	beq	r2,zero,80cd54 <__subdf3+0x878>
  80cb54:	2807883a 	mov	r3,r5
  80cb58:	3023883a 	mov	r17,r6
  80cb5c:	3825883a 	mov	r18,r7
  80cb60:	0401ffc4 	movi	r16,2047
  80cb64:	003e7e06 	br	80c560 <__alt_data_end+0xff80c560>
  80cb68:	3809883a 	mov	r4,r7
  80cb6c:	0011883a 	mov	r8,zero
  80cb70:	0005883a 	mov	r2,zero
  80cb74:	003ee306 	br	80c704 <__alt_data_end+0xff80c704>
  80cb78:	1c62b03a 	or	r17,r3,r17
  80cb7c:	8822c03a 	cmpne	r17,r17,zero
  80cb80:	0005883a 	mov	r2,zero
  80cb84:	003f8906 	br	80c9ac <__alt_data_end+0xff80c9ac>
  80cb88:	3809883a 	mov	r4,r7
  80cb8c:	4821883a 	mov	r16,r9
  80cb90:	0011883a 	mov	r8,zero
  80cb94:	0005883a 	mov	r2,zero
  80cb98:	003eda06 	br	80c704 <__alt_data_end+0xff80c704>
  80cb9c:	0101ffc4 	movi	r4,2047
  80cba0:	49003b26 	beq	r9,r4,80cc90 <__subdf3+0x7b4>
  80cba4:	0085c83a 	sub	r2,zero,r2
  80cba8:	18c02034 	orhi	r3,r3,128
  80cbac:	01000e04 	movi	r4,56
  80cbb0:	20806e16 	blt	r4,r2,80cd6c <__subdf3+0x890>
  80cbb4:	010007c4 	movi	r4,31
  80cbb8:	20807716 	blt	r4,r2,80cd98 <__subdf3+0x8bc>
  80cbbc:	01000804 	movi	r4,32
  80cbc0:	2089c83a 	sub	r4,r4,r2
  80cbc4:	1914983a 	sll	r10,r3,r4
  80cbc8:	8890d83a 	srl	r8,r17,r2
  80cbcc:	8908983a 	sll	r4,r17,r4
  80cbd0:	1884d83a 	srl	r2,r3,r2
  80cbd4:	5222b03a 	or	r17,r10,r8
  80cbd8:	2006c03a 	cmpne	r3,r4,zero
  80cbdc:	88e2b03a 	or	r17,r17,r3
  80cbe0:	89a3883a 	add	r17,r17,r6
  80cbe4:	1145883a 	add	r2,r2,r5
  80cbe8:	898d803a 	cmpltu	r6,r17,r6
  80cbec:	3087883a 	add	r3,r6,r2
  80cbf0:	4821883a 	mov	r16,r9
  80cbf4:	003ed906 	br	80c75c <__alt_data_end+0xff80c75c>
  80cbf8:	2984b03a 	or	r2,r5,r6
  80cbfc:	10004226 	beq	r2,zero,80cd08 <__subdf3+0x82c>
  80cc00:	1808d0fa 	srli	r4,r3,3
  80cc04:	8822d0fa 	srli	r17,r17,3
  80cc08:	1806977a 	slli	r3,r3,29
  80cc0c:	2080022c 	andhi	r2,r4,8
  80cc10:	1c62b03a 	or	r17,r3,r17
  80cc14:	10000826 	beq	r2,zero,80cc38 <__subdf3+0x75c>
  80cc18:	2812d0fa 	srli	r9,r5,3
  80cc1c:	4880022c 	andhi	r2,r9,8
  80cc20:	1000051e 	bne	r2,zero,80cc38 <__subdf3+0x75c>
  80cc24:	300cd0fa 	srli	r6,r6,3
  80cc28:	2804977a 	slli	r2,r5,29
  80cc2c:	4809883a 	mov	r4,r9
  80cc30:	3825883a 	mov	r18,r7
  80cc34:	11a2b03a 	or	r17,r2,r6
  80cc38:	8806d77a 	srli	r3,r17,29
  80cc3c:	200890fa 	slli	r4,r4,3
  80cc40:	882290fa 	slli	r17,r17,3
  80cc44:	0401ffc4 	movi	r16,2047
  80cc48:	1906b03a 	or	r3,r3,r4
  80cc4c:	003e4406 	br	80c560 <__alt_data_end+0xff80c560>
  80cc50:	2984b03a 	or	r2,r5,r6
  80cc54:	103e4226 	beq	r2,zero,80c560 <__alt_data_end+0xff80c560>
  80cc58:	8989c83a 	sub	r4,r17,r6
  80cc5c:	8911803a 	cmpltu	r8,r17,r4
  80cc60:	1945c83a 	sub	r2,r3,r5
  80cc64:	1205c83a 	sub	r2,r2,r8
  80cc68:	1200202c 	andhi	r8,r2,128
  80cc6c:	403e9a26 	beq	r8,zero,80c6d8 <__alt_data_end+0xff80c6d8>
  80cc70:	3463c83a 	sub	r17,r6,r17
  80cc74:	28c5c83a 	sub	r2,r5,r3
  80cc78:	344d803a 	cmpltu	r6,r6,r17
  80cc7c:	1187c83a 	sub	r3,r2,r6
  80cc80:	3825883a 	mov	r18,r7
  80cc84:	003e3606 	br	80c560 <__alt_data_end+0xff80c560>
  80cc88:	0101ffc4 	movi	r4,2047
  80cc8c:	493fc71e 	bne	r9,r4,80cbac <__alt_data_end+0xff80cbac>
  80cc90:	2807883a 	mov	r3,r5
  80cc94:	3023883a 	mov	r17,r6
  80cc98:	4821883a 	mov	r16,r9
  80cc9c:	003e3006 	br	80c560 <__alt_data_end+0xff80c560>
  80cca0:	10003626 	beq	r2,zero,80cd7c <__subdf3+0x8a0>
  80cca4:	2984b03a 	or	r2,r5,r6
  80cca8:	10001726 	beq	r2,zero,80cd08 <__subdf3+0x82c>
  80ccac:	1808d0fa 	srli	r4,r3,3
  80ccb0:	8822d0fa 	srli	r17,r17,3
  80ccb4:	1806977a 	slli	r3,r3,29
  80ccb8:	2080022c 	andhi	r2,r4,8
  80ccbc:	1c62b03a 	or	r17,r3,r17
  80ccc0:	10000726 	beq	r2,zero,80cce0 <__subdf3+0x804>
  80ccc4:	2812d0fa 	srli	r9,r5,3
  80ccc8:	4880022c 	andhi	r2,r9,8
  80cccc:	1000041e 	bne	r2,zero,80cce0 <__subdf3+0x804>
  80ccd0:	300cd0fa 	srli	r6,r6,3
  80ccd4:	2804977a 	slli	r2,r5,29
  80ccd8:	4809883a 	mov	r4,r9
  80ccdc:	11a2b03a 	or	r17,r2,r6
  80cce0:	8806d77a 	srli	r3,r17,29
  80cce4:	200890fa 	slli	r4,r4,3
  80cce8:	882290fa 	slli	r17,r17,3
  80ccec:	3825883a 	mov	r18,r7
  80ccf0:	1906b03a 	or	r3,r3,r4
  80ccf4:	0401ffc4 	movi	r16,2047
  80ccf8:	003e1906 	br	80c560 <__alt_data_end+0xff80c560>
  80ccfc:	000b883a 	mov	r5,zero
  80cd00:	0005883a 	mov	r2,zero
  80cd04:	003e2e06 	br	80c5c0 <__alt_data_end+0xff80c5c0>
  80cd08:	0401ffc4 	movi	r16,2047
  80cd0c:	003e1406 	br	80c560 <__alt_data_end+0xff80c560>
  80cd10:	0005883a 	mov	r2,zero
  80cd14:	003f7506 	br	80caec <__alt_data_end+0xff80caec>
  80cd18:	0005883a 	mov	r2,zero
  80cd1c:	0009883a 	mov	r4,zero
  80cd20:	003e7806 	br	80c704 <__alt_data_end+0xff80c704>
  80cd24:	123ff804 	addi	r8,r2,-32
  80cd28:	01000804 	movi	r4,32
  80cd2c:	1a10d83a 	srl	r8,r3,r8
  80cd30:	11002526 	beq	r2,r4,80cdc8 <__subdf3+0x8ec>
  80cd34:	01001004 	movi	r4,64
  80cd38:	2085c83a 	sub	r2,r4,r2
  80cd3c:	1884983a 	sll	r2,r3,r2
  80cd40:	1444b03a 	or	r2,r2,r17
  80cd44:	1004c03a 	cmpne	r2,r2,zero
  80cd48:	40a2b03a 	or	r17,r8,r2
  80cd4c:	0005883a 	mov	r2,zero
  80cd50:	003f1606 	br	80c9ac <__alt_data_end+0xff80c9ac>
  80cd54:	02000434 	movhi	r8,16
  80cd58:	0009883a 	mov	r4,zero
  80cd5c:	423fffc4 	addi	r8,r8,-1
  80cd60:	00bfffc4 	movi	r2,-1
  80cd64:	0401ffc4 	movi	r16,2047
  80cd68:	003e6606 	br	80c704 <__alt_data_end+0xff80c704>
  80cd6c:	1c62b03a 	or	r17,r3,r17
  80cd70:	8822c03a 	cmpne	r17,r17,zero
  80cd74:	0005883a 	mov	r2,zero
  80cd78:	003f9906 	br	80cbe0 <__alt_data_end+0xff80cbe0>
  80cd7c:	2807883a 	mov	r3,r5
  80cd80:	3023883a 	mov	r17,r6
  80cd84:	0401ffc4 	movi	r16,2047
  80cd88:	003df506 	br	80c560 <__alt_data_end+0xff80c560>
  80cd8c:	2807883a 	mov	r3,r5
  80cd90:	3023883a 	mov	r17,r6
  80cd94:	003df206 	br	80c560 <__alt_data_end+0xff80c560>
  80cd98:	123ff804 	addi	r8,r2,-32
  80cd9c:	01000804 	movi	r4,32
  80cda0:	1a10d83a 	srl	r8,r3,r8
  80cda4:	11000a26 	beq	r2,r4,80cdd0 <__subdf3+0x8f4>
  80cda8:	01001004 	movi	r4,64
  80cdac:	2085c83a 	sub	r2,r4,r2
  80cdb0:	1884983a 	sll	r2,r3,r2
  80cdb4:	1444b03a 	or	r2,r2,r17
  80cdb8:	1004c03a 	cmpne	r2,r2,zero
  80cdbc:	40a2b03a 	or	r17,r8,r2
  80cdc0:	0005883a 	mov	r2,zero
  80cdc4:	003f8606 	br	80cbe0 <__alt_data_end+0xff80cbe0>
  80cdc8:	0005883a 	mov	r2,zero
  80cdcc:	003fdc06 	br	80cd40 <__alt_data_end+0xff80cd40>
  80cdd0:	0005883a 	mov	r2,zero
  80cdd4:	003ff706 	br	80cdb4 <__alt_data_end+0xff80cdb4>

0080cdd8 <__fixdfsi>:
  80cdd8:	280cd53a 	srli	r6,r5,20
  80cddc:	00c00434 	movhi	r3,16
  80cde0:	18ffffc4 	addi	r3,r3,-1
  80cde4:	3181ffcc 	andi	r6,r6,2047
  80cde8:	01c0ff84 	movi	r7,1022
  80cdec:	28c6703a 	and	r3,r5,r3
  80cdf0:	280ad7fa 	srli	r5,r5,31
  80cdf4:	3980120e 	bge	r7,r6,80ce40 <__fixdfsi+0x68>
  80cdf8:	00810744 	movi	r2,1053
  80cdfc:	11800c16 	blt	r2,r6,80ce30 <__fixdfsi+0x58>
  80ce00:	00810cc4 	movi	r2,1075
  80ce04:	1185c83a 	sub	r2,r2,r6
  80ce08:	01c007c4 	movi	r7,31
  80ce0c:	18c00434 	orhi	r3,r3,16
  80ce10:	38800d16 	blt	r7,r2,80ce48 <__fixdfsi+0x70>
  80ce14:	31befb44 	addi	r6,r6,-1043
  80ce18:	2084d83a 	srl	r2,r4,r2
  80ce1c:	1986983a 	sll	r3,r3,r6
  80ce20:	1884b03a 	or	r2,r3,r2
  80ce24:	28000726 	beq	r5,zero,80ce44 <__fixdfsi+0x6c>
  80ce28:	0085c83a 	sub	r2,zero,r2
  80ce2c:	f800283a 	ret
  80ce30:	00a00034 	movhi	r2,32768
  80ce34:	10bfffc4 	addi	r2,r2,-1
  80ce38:	2885883a 	add	r2,r5,r2
  80ce3c:	f800283a 	ret
  80ce40:	0005883a 	mov	r2,zero
  80ce44:	f800283a 	ret
  80ce48:	008104c4 	movi	r2,1043
  80ce4c:	1185c83a 	sub	r2,r2,r6
  80ce50:	1884d83a 	srl	r2,r3,r2
  80ce54:	003ff306 	br	80ce24 <__alt_data_end+0xff80ce24>

0080ce58 <__floatsidf>:
  80ce58:	defffd04 	addi	sp,sp,-12
  80ce5c:	dfc00215 	stw	ra,8(sp)
  80ce60:	dc400115 	stw	r17,4(sp)
  80ce64:	dc000015 	stw	r16,0(sp)
  80ce68:	20002b26 	beq	r4,zero,80cf18 <__floatsidf+0xc0>
  80ce6c:	2023883a 	mov	r17,r4
  80ce70:	2020d7fa 	srli	r16,r4,31
  80ce74:	20002d16 	blt	r4,zero,80cf2c <__floatsidf+0xd4>
  80ce78:	8809883a 	mov	r4,r17
  80ce7c:	080cfdc0 	call	80cfdc <__clzsi2>
  80ce80:	01410784 	movi	r5,1054
  80ce84:	288bc83a 	sub	r5,r5,r2
  80ce88:	01010cc4 	movi	r4,1075
  80ce8c:	2149c83a 	sub	r4,r4,r5
  80ce90:	00c007c4 	movi	r3,31
  80ce94:	1900160e 	bge	r3,r4,80cef0 <__floatsidf+0x98>
  80ce98:	00c104c4 	movi	r3,1043
  80ce9c:	1947c83a 	sub	r3,r3,r5
  80cea0:	88c6983a 	sll	r3,r17,r3
  80cea4:	00800434 	movhi	r2,16
  80cea8:	10bfffc4 	addi	r2,r2,-1
  80ceac:	1886703a 	and	r3,r3,r2
  80ceb0:	2941ffcc 	andi	r5,r5,2047
  80ceb4:	800d883a 	mov	r6,r16
  80ceb8:	0005883a 	mov	r2,zero
  80cebc:	280a953a 	slli	r5,r5,20
  80cec0:	31803fcc 	andi	r6,r6,255
  80cec4:	01000434 	movhi	r4,16
  80cec8:	300c97fa 	slli	r6,r6,31
  80cecc:	213fffc4 	addi	r4,r4,-1
  80ced0:	1906703a 	and	r3,r3,r4
  80ced4:	1946b03a 	or	r3,r3,r5
  80ced8:	1986b03a 	or	r3,r3,r6
  80cedc:	dfc00217 	ldw	ra,8(sp)
  80cee0:	dc400117 	ldw	r17,4(sp)
  80cee4:	dc000017 	ldw	r16,0(sp)
  80cee8:	dec00304 	addi	sp,sp,12
  80ceec:	f800283a 	ret
  80cef0:	00c002c4 	movi	r3,11
  80cef4:	1887c83a 	sub	r3,r3,r2
  80cef8:	88c6d83a 	srl	r3,r17,r3
  80cefc:	8904983a 	sll	r2,r17,r4
  80cf00:	01000434 	movhi	r4,16
  80cf04:	213fffc4 	addi	r4,r4,-1
  80cf08:	2941ffcc 	andi	r5,r5,2047
  80cf0c:	1906703a 	and	r3,r3,r4
  80cf10:	800d883a 	mov	r6,r16
  80cf14:	003fe906 	br	80cebc <__alt_data_end+0xff80cebc>
  80cf18:	000d883a 	mov	r6,zero
  80cf1c:	000b883a 	mov	r5,zero
  80cf20:	0007883a 	mov	r3,zero
  80cf24:	0005883a 	mov	r2,zero
  80cf28:	003fe406 	br	80cebc <__alt_data_end+0xff80cebc>
  80cf2c:	0123c83a 	sub	r17,zero,r4
  80cf30:	003fd106 	br	80ce78 <__alt_data_end+0xff80ce78>

0080cf34 <__floatunsidf>:
  80cf34:	defffe04 	addi	sp,sp,-8
  80cf38:	dc000015 	stw	r16,0(sp)
  80cf3c:	dfc00115 	stw	ra,4(sp)
  80cf40:	2021883a 	mov	r16,r4
  80cf44:	20002226 	beq	r4,zero,80cfd0 <__floatunsidf+0x9c>
  80cf48:	080cfdc0 	call	80cfdc <__clzsi2>
  80cf4c:	01010784 	movi	r4,1054
  80cf50:	2089c83a 	sub	r4,r4,r2
  80cf54:	01810cc4 	movi	r6,1075
  80cf58:	310dc83a 	sub	r6,r6,r4
  80cf5c:	00c007c4 	movi	r3,31
  80cf60:	1980120e 	bge	r3,r6,80cfac <__floatunsidf+0x78>
  80cf64:	00c104c4 	movi	r3,1043
  80cf68:	1907c83a 	sub	r3,r3,r4
  80cf6c:	80ca983a 	sll	r5,r16,r3
  80cf70:	00800434 	movhi	r2,16
  80cf74:	10bfffc4 	addi	r2,r2,-1
  80cf78:	2101ffcc 	andi	r4,r4,2047
  80cf7c:	0021883a 	mov	r16,zero
  80cf80:	288a703a 	and	r5,r5,r2
  80cf84:	2008953a 	slli	r4,r4,20
  80cf88:	00c00434 	movhi	r3,16
  80cf8c:	18ffffc4 	addi	r3,r3,-1
  80cf90:	28c6703a 	and	r3,r5,r3
  80cf94:	8005883a 	mov	r2,r16
  80cf98:	1906b03a 	or	r3,r3,r4
  80cf9c:	dfc00117 	ldw	ra,4(sp)
  80cfa0:	dc000017 	ldw	r16,0(sp)
  80cfa4:	dec00204 	addi	sp,sp,8
  80cfa8:	f800283a 	ret
  80cfac:	00c002c4 	movi	r3,11
  80cfb0:	188bc83a 	sub	r5,r3,r2
  80cfb4:	814ad83a 	srl	r5,r16,r5
  80cfb8:	00c00434 	movhi	r3,16
  80cfbc:	18ffffc4 	addi	r3,r3,-1
  80cfc0:	81a0983a 	sll	r16,r16,r6
  80cfc4:	2101ffcc 	andi	r4,r4,2047
  80cfc8:	28ca703a 	and	r5,r5,r3
  80cfcc:	003fed06 	br	80cf84 <__alt_data_end+0xff80cf84>
  80cfd0:	0009883a 	mov	r4,zero
  80cfd4:	000b883a 	mov	r5,zero
  80cfd8:	003fea06 	br	80cf84 <__alt_data_end+0xff80cf84>

0080cfdc <__clzsi2>:
  80cfdc:	00bfffd4 	movui	r2,65535
  80cfe0:	11000536 	bltu	r2,r4,80cff8 <__clzsi2+0x1c>
  80cfe4:	00803fc4 	movi	r2,255
  80cfe8:	11000f36 	bltu	r2,r4,80d028 <__clzsi2+0x4c>
  80cfec:	00800804 	movi	r2,32
  80cff0:	0007883a 	mov	r3,zero
  80cff4:	00000506 	br	80d00c <__clzsi2+0x30>
  80cff8:	00804034 	movhi	r2,256
  80cffc:	10bfffc4 	addi	r2,r2,-1
  80d000:	11000c2e 	bgeu	r2,r4,80d034 <__clzsi2+0x58>
  80d004:	00800204 	movi	r2,8
  80d008:	00c00604 	movi	r3,24
  80d00c:	20c8d83a 	srl	r4,r4,r3
  80d010:	00c02074 	movhi	r3,129
  80d014:	18fee204 	addi	r3,r3,-1144
  80d018:	1909883a 	add	r4,r3,r4
  80d01c:	20c00003 	ldbu	r3,0(r4)
  80d020:	10c5c83a 	sub	r2,r2,r3
  80d024:	f800283a 	ret
  80d028:	00800604 	movi	r2,24
  80d02c:	00c00204 	movi	r3,8
  80d030:	003ff606 	br	80d00c <__alt_data_end+0xff80d00c>
  80d034:	00800404 	movi	r2,16
  80d038:	1007883a 	mov	r3,r2
  80d03c:	003ff306 	br	80d00c <__alt_data_end+0xff80d00c>

0080d040 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d040:	defffe04 	addi	sp,sp,-8
  80d044:	dfc00115 	stw	ra,4(sp)
  80d048:	df000015 	stw	fp,0(sp)
  80d04c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d050:	d0a00b17 	ldw	r2,-32724(gp)
  80d054:	10000326 	beq	r2,zero,80d064 <alt_get_errno+0x24>
  80d058:	d0a00b17 	ldw	r2,-32724(gp)
  80d05c:	103ee83a 	callr	r2
  80d060:	00000106 	br	80d068 <alt_get_errno+0x28>
  80d064:	d0a6d304 	addi	r2,gp,-25780
}
  80d068:	e037883a 	mov	sp,fp
  80d06c:	dfc00117 	ldw	ra,4(sp)
  80d070:	df000017 	ldw	fp,0(sp)
  80d074:	dec00204 	addi	sp,sp,8
  80d078:	f800283a 	ret

0080d07c <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80d07c:	defffb04 	addi	sp,sp,-20
  80d080:	dfc00415 	stw	ra,16(sp)
  80d084:	df000315 	stw	fp,12(sp)
  80d088:	df000304 	addi	fp,sp,12
  80d08c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80d090:	e0bfff17 	ldw	r2,-4(fp)
  80d094:	10000616 	blt	r2,zero,80d0b0 <close+0x34>
  80d098:	e0bfff17 	ldw	r2,-4(fp)
  80d09c:	10c00324 	muli	r3,r2,12
  80d0a0:	00802074 	movhi	r2,129
  80d0a4:	10816004 	addi	r2,r2,1408
  80d0a8:	1885883a 	add	r2,r3,r2
  80d0ac:	00000106 	br	80d0b4 <close+0x38>
  80d0b0:	0005883a 	mov	r2,zero
  80d0b4:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  80d0b8:	e0bffd17 	ldw	r2,-12(fp)
  80d0bc:	10001926 	beq	r2,zero,80d124 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80d0c0:	e0bffd17 	ldw	r2,-12(fp)
  80d0c4:	10800017 	ldw	r2,0(r2)
  80d0c8:	10800417 	ldw	r2,16(r2)
  80d0cc:	10000626 	beq	r2,zero,80d0e8 <close+0x6c>
  80d0d0:	e0bffd17 	ldw	r2,-12(fp)
  80d0d4:	10800017 	ldw	r2,0(r2)
  80d0d8:	10800417 	ldw	r2,16(r2)
  80d0dc:	e13ffd17 	ldw	r4,-12(fp)
  80d0e0:	103ee83a 	callr	r2
  80d0e4:	00000106 	br	80d0ec <close+0x70>
  80d0e8:	0005883a 	mov	r2,zero
  80d0ec:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80d0f0:	e13fff17 	ldw	r4,-4(fp)
  80d0f4:	080d73c0 	call	80d73c <alt_release_fd>
    if (rval < 0)
  80d0f8:	e0bffe17 	ldw	r2,-8(fp)
  80d0fc:	1000070e 	bge	r2,zero,80d11c <close+0xa0>
    {
      ALT_ERRNO = -rval;
  80d100:	080d0400 	call	80d040 <alt_get_errno>
  80d104:	1007883a 	mov	r3,r2
  80d108:	e0bffe17 	ldw	r2,-8(fp)
  80d10c:	0085c83a 	sub	r2,zero,r2
  80d110:	18800015 	stw	r2,0(r3)
      return -1;
  80d114:	00bfffc4 	movi	r2,-1
  80d118:	00000706 	br	80d138 <close+0xbc>
    }
    return 0;
  80d11c:	0005883a 	mov	r2,zero
  80d120:	00000506 	br	80d138 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d124:	080d0400 	call	80d040 <alt_get_errno>
  80d128:	1007883a 	mov	r3,r2
  80d12c:	00801444 	movi	r2,81
  80d130:	18800015 	stw	r2,0(r3)
    return -1;
  80d134:	00bfffc4 	movi	r2,-1
  }
}
  80d138:	e037883a 	mov	sp,fp
  80d13c:	dfc00117 	ldw	ra,4(sp)
  80d140:	df000017 	ldw	fp,0(sp)
  80d144:	dec00204 	addi	sp,sp,8
  80d148:	f800283a 	ret

0080d14c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80d14c:	defffc04 	addi	sp,sp,-16
  80d150:	df000315 	stw	fp,12(sp)
  80d154:	df000304 	addi	fp,sp,12
  80d158:	e13ffd15 	stw	r4,-12(fp)
  80d15c:	e17ffe15 	stw	r5,-8(fp)
  80d160:	e1bfff15 	stw	r6,-4(fp)
  return len;
  80d164:	e0bfff17 	ldw	r2,-4(fp)
}
  80d168:	e037883a 	mov	sp,fp
  80d16c:	df000017 	ldw	fp,0(sp)
  80d170:	dec00104 	addi	sp,sp,4
  80d174:	f800283a 	ret

0080d178 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d178:	defffe04 	addi	sp,sp,-8
  80d17c:	dfc00115 	stw	ra,4(sp)
  80d180:	df000015 	stw	fp,0(sp)
  80d184:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d188:	d0a00b17 	ldw	r2,-32724(gp)
  80d18c:	10000326 	beq	r2,zero,80d19c <alt_get_errno+0x24>
  80d190:	d0a00b17 	ldw	r2,-32724(gp)
  80d194:	103ee83a 	callr	r2
  80d198:	00000106 	br	80d1a0 <alt_get_errno+0x28>
  80d19c:	d0a6d304 	addi	r2,gp,-25780
}
  80d1a0:	e037883a 	mov	sp,fp
  80d1a4:	dfc00117 	ldw	ra,4(sp)
  80d1a8:	df000017 	ldw	fp,0(sp)
  80d1ac:	dec00204 	addi	sp,sp,8
  80d1b0:	f800283a 	ret

0080d1b4 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80d1b4:	defffb04 	addi	sp,sp,-20
  80d1b8:	dfc00415 	stw	ra,16(sp)
  80d1bc:	df000315 	stw	fp,12(sp)
  80d1c0:	df000304 	addi	fp,sp,12
  80d1c4:	e13ffe15 	stw	r4,-8(fp)
  80d1c8:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d1cc:	e0bffe17 	ldw	r2,-8(fp)
  80d1d0:	10000616 	blt	r2,zero,80d1ec <fstat+0x38>
  80d1d4:	e0bffe17 	ldw	r2,-8(fp)
  80d1d8:	10c00324 	muli	r3,r2,12
  80d1dc:	00802074 	movhi	r2,129
  80d1e0:	10816004 	addi	r2,r2,1408
  80d1e4:	1885883a 	add	r2,r3,r2
  80d1e8:	00000106 	br	80d1f0 <fstat+0x3c>
  80d1ec:	0005883a 	mov	r2,zero
  80d1f0:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
  80d1f4:	e0bffd17 	ldw	r2,-12(fp)
  80d1f8:	10001026 	beq	r2,zero,80d23c <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80d1fc:	e0bffd17 	ldw	r2,-12(fp)
  80d200:	10800017 	ldw	r2,0(r2)
  80d204:	10800817 	ldw	r2,32(r2)
  80d208:	10000726 	beq	r2,zero,80d228 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
  80d20c:	e0bffd17 	ldw	r2,-12(fp)
  80d210:	10800017 	ldw	r2,0(r2)
  80d214:	10800817 	ldw	r2,32(r2)
  80d218:	e17fff17 	ldw	r5,-4(fp)
  80d21c:	e13ffd17 	ldw	r4,-12(fp)
  80d220:	103ee83a 	callr	r2
  80d224:	00000a06 	br	80d250 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80d228:	e0bfff17 	ldw	r2,-4(fp)
  80d22c:	00c80004 	movi	r3,8192
  80d230:	10c00115 	stw	r3,4(r2)
      return 0;
  80d234:	0005883a 	mov	r2,zero
  80d238:	00000506 	br	80d250 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d23c:	080d1780 	call	80d178 <alt_get_errno>
  80d240:	1007883a 	mov	r3,r2
  80d244:	00801444 	movi	r2,81
  80d248:	18800015 	stw	r2,0(r3)
    return -1;
  80d24c:	00bfffc4 	movi	r2,-1
  }
}
  80d250:	e037883a 	mov	sp,fp
  80d254:	dfc00117 	ldw	ra,4(sp)
  80d258:	df000017 	ldw	fp,0(sp)
  80d25c:	dec00204 	addi	sp,sp,8
  80d260:	f800283a 	ret

0080d264 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d264:	defffe04 	addi	sp,sp,-8
  80d268:	dfc00115 	stw	ra,4(sp)
  80d26c:	df000015 	stw	fp,0(sp)
  80d270:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d274:	d0a00b17 	ldw	r2,-32724(gp)
  80d278:	10000326 	beq	r2,zero,80d288 <alt_get_errno+0x24>
  80d27c:	d0a00b17 	ldw	r2,-32724(gp)
  80d280:	103ee83a 	callr	r2
  80d284:	00000106 	br	80d28c <alt_get_errno+0x28>
  80d288:	d0a6d304 	addi	r2,gp,-25780
}
  80d28c:	e037883a 	mov	sp,fp
  80d290:	dfc00117 	ldw	ra,4(sp)
  80d294:	df000017 	ldw	fp,0(sp)
  80d298:	dec00204 	addi	sp,sp,8
  80d29c:	f800283a 	ret

0080d2a0 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80d2a0:	deffed04 	addi	sp,sp,-76
  80d2a4:	dfc01215 	stw	ra,72(sp)
  80d2a8:	df001115 	stw	fp,68(sp)
  80d2ac:	df001104 	addi	fp,sp,68
  80d2b0:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d2b4:	e0bfff17 	ldw	r2,-4(fp)
  80d2b8:	10000616 	blt	r2,zero,80d2d4 <isatty+0x34>
  80d2bc:	e0bfff17 	ldw	r2,-4(fp)
  80d2c0:	10c00324 	muli	r3,r2,12
  80d2c4:	00802074 	movhi	r2,129
  80d2c8:	10816004 	addi	r2,r2,1408
  80d2cc:	1885883a 	add	r2,r3,r2
  80d2d0:	00000106 	br	80d2d8 <isatty+0x38>
  80d2d4:	0005883a 	mov	r2,zero
  80d2d8:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
  80d2dc:	e0bfef17 	ldw	r2,-68(fp)
  80d2e0:	10000e26 	beq	r2,zero,80d31c <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80d2e4:	e0bfef17 	ldw	r2,-68(fp)
  80d2e8:	10800017 	ldw	r2,0(r2)
  80d2ec:	10800817 	ldw	r2,32(r2)
  80d2f0:	1000021e 	bne	r2,zero,80d2fc <isatty+0x5c>
    {
      return 1;
  80d2f4:	00800044 	movi	r2,1
  80d2f8:	00000d06 	br	80d330 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80d2fc:	e0bff004 	addi	r2,fp,-64
  80d300:	100b883a 	mov	r5,r2
  80d304:	e13fff17 	ldw	r4,-4(fp)
  80d308:	080d1b40 	call	80d1b4 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80d30c:	e0bff117 	ldw	r2,-60(fp)
  80d310:	10880020 	cmpeqi	r2,r2,8192
  80d314:	10803fcc 	andi	r2,r2,255
  80d318:	00000506 	br	80d330 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d31c:	080d2640 	call	80d264 <alt_get_errno>
  80d320:	1007883a 	mov	r3,r2
  80d324:	00801444 	movi	r2,81
  80d328:	18800015 	stw	r2,0(r3)
    return 0;
  80d32c:	0005883a 	mov	r2,zero
  }
}
  80d330:	e037883a 	mov	sp,fp
  80d334:	dfc00117 	ldw	ra,4(sp)
  80d338:	df000017 	ldw	fp,0(sp)
  80d33c:	dec00204 	addi	sp,sp,8
  80d340:	f800283a 	ret

0080d344 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  80d344:	defffc04 	addi	sp,sp,-16
  80d348:	df000315 	stw	fp,12(sp)
  80d34c:	df000304 	addi	fp,sp,12
  80d350:	e13ffd15 	stw	r4,-12(fp)
  80d354:	e17ffe15 	stw	r5,-8(fp)
  80d358:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  80d35c:	e0fffe17 	ldw	r3,-8(fp)
  80d360:	e0bffd17 	ldw	r2,-12(fp)
  80d364:	18800c26 	beq	r3,r2,80d398 <alt_load_section+0x54>
  {
    while( to != end )
  80d368:	00000806 	br	80d38c <alt_load_section+0x48>
    {
      *to++ = *from++;
  80d36c:	e0bffe17 	ldw	r2,-8(fp)
  80d370:	10c00104 	addi	r3,r2,4
  80d374:	e0fffe15 	stw	r3,-8(fp)
  80d378:	e0fffd17 	ldw	r3,-12(fp)
  80d37c:	19000104 	addi	r4,r3,4
  80d380:	e13ffd15 	stw	r4,-12(fp)
  80d384:	18c00017 	ldw	r3,0(r3)
  80d388:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  80d38c:	e0fffe17 	ldw	r3,-8(fp)
  80d390:	e0bfff17 	ldw	r2,-4(fp)
  80d394:	18bff51e 	bne	r3,r2,80d36c <__alt_data_end+0xff80d36c>
    {
      *to++ = *from++;
    }
  }
}
  80d398:	0001883a 	nop
  80d39c:	e037883a 	mov	sp,fp
  80d3a0:	df000017 	ldw	fp,0(sp)
  80d3a4:	dec00104 	addi	sp,sp,4
  80d3a8:	f800283a 	ret

0080d3ac <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  80d3ac:	defffe04 	addi	sp,sp,-8
  80d3b0:	dfc00115 	stw	ra,4(sp)
  80d3b4:	df000015 	stw	fp,0(sp)
  80d3b8:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  80d3bc:	01802074 	movhi	r6,129
  80d3c0:	3185e804 	addi	r6,r6,6048
  80d3c4:	01402074 	movhi	r5,129
  80d3c8:	297f2d04 	addi	r5,r5,-844
  80d3cc:	01002074 	movhi	r4,129
  80d3d0:	2105e804 	addi	r4,r4,6048
  80d3d4:	080d3440 	call	80d344 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80d3d8:	01802034 	movhi	r6,128
  80d3dc:	31807004 	addi	r6,r6,448
  80d3e0:	01402034 	movhi	r5,128
  80d3e4:	29400804 	addi	r5,r5,32
  80d3e8:	01002034 	movhi	r4,128
  80d3ec:	21000804 	addi	r4,r4,32
  80d3f0:	080d3440 	call	80d344 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  80d3f4:	01802074 	movhi	r6,129
  80d3f8:	31bf2d04 	addi	r6,r6,-844
  80d3fc:	01402074 	movhi	r5,129
  80d400:	297e3704 	addi	r5,r5,-1828
  80d404:	01002074 	movhi	r4,129
  80d408:	213e3704 	addi	r4,r4,-1828
  80d40c:	080d3440 	call	80d344 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  80d410:	080e8640 	call	80e864 <alt_dcache_flush_all>
  alt_icache_flush_all();
  80d414:	080ea4c0 	call	80ea4c <alt_icache_flush_all>
}
  80d418:	0001883a 	nop
  80d41c:	e037883a 	mov	sp,fp
  80d420:	dfc00117 	ldw	ra,4(sp)
  80d424:	df000017 	ldw	fp,0(sp)
  80d428:	dec00204 	addi	sp,sp,8
  80d42c:	f800283a 	ret

0080d430 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d430:	defffe04 	addi	sp,sp,-8
  80d434:	dfc00115 	stw	ra,4(sp)
  80d438:	df000015 	stw	fp,0(sp)
  80d43c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d440:	d0a00b17 	ldw	r2,-32724(gp)
  80d444:	10000326 	beq	r2,zero,80d454 <alt_get_errno+0x24>
  80d448:	d0a00b17 	ldw	r2,-32724(gp)
  80d44c:	103ee83a 	callr	r2
  80d450:	00000106 	br	80d458 <alt_get_errno+0x28>
  80d454:	d0a6d304 	addi	r2,gp,-25780
}
  80d458:	e037883a 	mov	sp,fp
  80d45c:	dfc00117 	ldw	ra,4(sp)
  80d460:	df000017 	ldw	fp,0(sp)
  80d464:	dec00204 	addi	sp,sp,8
  80d468:	f800283a 	ret

0080d46c <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80d46c:	defff904 	addi	sp,sp,-28
  80d470:	dfc00615 	stw	ra,24(sp)
  80d474:	df000515 	stw	fp,20(sp)
  80d478:	df000504 	addi	fp,sp,20
  80d47c:	e13ffd15 	stw	r4,-12(fp)
  80d480:	e17ffe15 	stw	r5,-8(fp)
  80d484:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80d488:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d48c:	e0bffd17 	ldw	r2,-12(fp)
  80d490:	10000616 	blt	r2,zero,80d4ac <lseek+0x40>
  80d494:	e0bffd17 	ldw	r2,-12(fp)
  80d498:	10c00324 	muli	r3,r2,12
  80d49c:	00802074 	movhi	r2,129
  80d4a0:	10816004 	addi	r2,r2,1408
  80d4a4:	1885883a 	add	r2,r3,r2
  80d4a8:	00000106 	br	80d4b0 <lseek+0x44>
  80d4ac:	0005883a 	mov	r2,zero
  80d4b0:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
  80d4b4:	e0bffc17 	ldw	r2,-16(fp)
  80d4b8:	10001026 	beq	r2,zero,80d4fc <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80d4bc:	e0bffc17 	ldw	r2,-16(fp)
  80d4c0:	10800017 	ldw	r2,0(r2)
  80d4c4:	10800717 	ldw	r2,28(r2)
  80d4c8:	10000926 	beq	r2,zero,80d4f0 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80d4cc:	e0bffc17 	ldw	r2,-16(fp)
  80d4d0:	10800017 	ldw	r2,0(r2)
  80d4d4:	10800717 	ldw	r2,28(r2)
  80d4d8:	e1bfff17 	ldw	r6,-4(fp)
  80d4dc:	e17ffe17 	ldw	r5,-8(fp)
  80d4e0:	e13ffc17 	ldw	r4,-16(fp)
  80d4e4:	103ee83a 	callr	r2
  80d4e8:	e0bffb15 	stw	r2,-20(fp)
  80d4ec:	00000506 	br	80d504 <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80d4f0:	00bfde84 	movi	r2,-134
  80d4f4:	e0bffb15 	stw	r2,-20(fp)
  80d4f8:	00000206 	br	80d504 <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
  80d4fc:	00bfebc4 	movi	r2,-81
  80d500:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
  80d504:	e0bffb17 	ldw	r2,-20(fp)
  80d508:	1000070e 	bge	r2,zero,80d528 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
  80d50c:	080d4300 	call	80d430 <alt_get_errno>
  80d510:	1007883a 	mov	r3,r2
  80d514:	e0bffb17 	ldw	r2,-20(fp)
  80d518:	0085c83a 	sub	r2,zero,r2
  80d51c:	18800015 	stw	r2,0(r3)
    rc = -1;
  80d520:	00bfffc4 	movi	r2,-1
  80d524:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
  80d528:	e0bffb17 	ldw	r2,-20(fp)
}
  80d52c:	e037883a 	mov	sp,fp
  80d530:	dfc00117 	ldw	ra,4(sp)
  80d534:	df000017 	ldw	fp,0(sp)
  80d538:	dec00204 	addi	sp,sp,8
  80d53c:	f800283a 	ret

0080d540 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80d540:	defffd04 	addi	sp,sp,-12
  80d544:	dfc00215 	stw	ra,8(sp)
  80d548:	df000115 	stw	fp,4(sp)
  80d54c:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80d550:	0009883a 	mov	r4,zero
  80d554:	080d9e80 	call	80d9e8 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  80d558:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80d55c:	080da200 	call	80da20 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80d560:	01802074 	movhi	r6,129
  80d564:	31bf2504 	addi	r6,r6,-876
  80d568:	01402074 	movhi	r5,129
  80d56c:	297f2504 	addi	r5,r5,-876
  80d570:	01002074 	movhi	r4,129
  80d574:	213f2504 	addi	r4,r4,-876
  80d578:	080ede40 	call	80ede4 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80d57c:	080e98c0 	call	80e98c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80d580:	01002074 	movhi	r4,129
  80d584:	213a7b04 	addi	r4,r4,-5652
  80d588:	080f5480 	call	80f548 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80d58c:	d0a6d417 	ldw	r2,-25776(gp)
  80d590:	d0e6d517 	ldw	r3,-25772(gp)
  80d594:	d126d617 	ldw	r4,-25768(gp)
  80d598:	200d883a 	mov	r6,r4
  80d59c:	180b883a 	mov	r5,r3
  80d5a0:	1009883a 	mov	r4,r2
  80d5a4:	08004980 	call	800498 <main>
  80d5a8:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80d5ac:	01000044 	movi	r4,1
  80d5b0:	080d07c0 	call	80d07c <close>
  exit (result);
  80d5b4:	e13fff17 	ldw	r4,-4(fp)
  80d5b8:	080f55c0 	call	80f55c <exit>

0080d5bc <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  80d5bc:	defffe04 	addi	sp,sp,-8
  80d5c0:	df000115 	stw	fp,4(sp)
  80d5c4:	df000104 	addi	fp,sp,4
  80d5c8:	e13fff15 	stw	r4,-4(fp)
}
  80d5cc:	0001883a 	nop
  80d5d0:	e037883a 	mov	sp,fp
  80d5d4:	df000017 	ldw	fp,0(sp)
  80d5d8:	dec00104 	addi	sp,sp,4
  80d5dc:	f800283a 	ret

0080d5e0 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  80d5e0:	defffe04 	addi	sp,sp,-8
  80d5e4:	df000115 	stw	fp,4(sp)
  80d5e8:	df000104 	addi	fp,sp,4
  80d5ec:	e13fff15 	stw	r4,-4(fp)
}
  80d5f0:	0001883a 	nop
  80d5f4:	e037883a 	mov	sp,fp
  80d5f8:	df000017 	ldw	fp,0(sp)
  80d5fc:	dec00104 	addi	sp,sp,4
  80d600:	f800283a 	ret

0080d604 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d604:	defffe04 	addi	sp,sp,-8
  80d608:	dfc00115 	stw	ra,4(sp)
  80d60c:	df000015 	stw	fp,0(sp)
  80d610:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d614:	d0a00b17 	ldw	r2,-32724(gp)
  80d618:	10000326 	beq	r2,zero,80d628 <alt_get_errno+0x24>
  80d61c:	d0a00b17 	ldw	r2,-32724(gp)
  80d620:	103ee83a 	callr	r2
  80d624:	00000106 	br	80d62c <alt_get_errno+0x28>
  80d628:	d0a6d304 	addi	r2,gp,-25780
}
  80d62c:	e037883a 	mov	sp,fp
  80d630:	dfc00117 	ldw	ra,4(sp)
  80d634:	df000017 	ldw	fp,0(sp)
  80d638:	dec00204 	addi	sp,sp,8
  80d63c:	f800283a 	ret

0080d640 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80d640:	defff904 	addi	sp,sp,-28
  80d644:	dfc00615 	stw	ra,24(sp)
  80d648:	df000515 	stw	fp,20(sp)
  80d64c:	df000504 	addi	fp,sp,20
  80d650:	e13ffd15 	stw	r4,-12(fp)
  80d654:	e17ffe15 	stw	r5,-8(fp)
  80d658:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d65c:	e0bffd17 	ldw	r2,-12(fp)
  80d660:	10000616 	blt	r2,zero,80d67c <read+0x3c>
  80d664:	e0bffd17 	ldw	r2,-12(fp)
  80d668:	10c00324 	muli	r3,r2,12
  80d66c:	00802074 	movhi	r2,129
  80d670:	10816004 	addi	r2,r2,1408
  80d674:	1885883a 	add	r2,r3,r2
  80d678:	00000106 	br	80d680 <read+0x40>
  80d67c:	0005883a 	mov	r2,zero
  80d680:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80d684:	e0bffb17 	ldw	r2,-20(fp)
  80d688:	10002226 	beq	r2,zero,80d714 <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80d68c:	e0bffb17 	ldw	r2,-20(fp)
  80d690:	10800217 	ldw	r2,8(r2)
  80d694:	108000cc 	andi	r2,r2,3
  80d698:	10800060 	cmpeqi	r2,r2,1
  80d69c:	1000181e 	bne	r2,zero,80d700 <read+0xc0>
        (fd->dev->read))
  80d6a0:	e0bffb17 	ldw	r2,-20(fp)
  80d6a4:	10800017 	ldw	r2,0(r2)
  80d6a8:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80d6ac:	10001426 	beq	r2,zero,80d700 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80d6b0:	e0bffb17 	ldw	r2,-20(fp)
  80d6b4:	10800017 	ldw	r2,0(r2)
  80d6b8:	10800517 	ldw	r2,20(r2)
  80d6bc:	e0ffff17 	ldw	r3,-4(fp)
  80d6c0:	180d883a 	mov	r6,r3
  80d6c4:	e17ffe17 	ldw	r5,-8(fp)
  80d6c8:	e13ffb17 	ldw	r4,-20(fp)
  80d6cc:	103ee83a 	callr	r2
  80d6d0:	e0bffc15 	stw	r2,-16(fp)
  80d6d4:	e0bffc17 	ldw	r2,-16(fp)
  80d6d8:	1000070e 	bge	r2,zero,80d6f8 <read+0xb8>
        {
          ALT_ERRNO = -rval;
  80d6dc:	080d6040 	call	80d604 <alt_get_errno>
  80d6e0:	1007883a 	mov	r3,r2
  80d6e4:	e0bffc17 	ldw	r2,-16(fp)
  80d6e8:	0085c83a 	sub	r2,zero,r2
  80d6ec:	18800015 	stw	r2,0(r3)
          return -1;
  80d6f0:	00bfffc4 	movi	r2,-1
  80d6f4:	00000c06 	br	80d728 <read+0xe8>
        }
        return rval;
  80d6f8:	e0bffc17 	ldw	r2,-16(fp)
  80d6fc:	00000a06 	br	80d728 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80d700:	080d6040 	call	80d604 <alt_get_errno>
  80d704:	1007883a 	mov	r3,r2
  80d708:	00800344 	movi	r2,13
  80d70c:	18800015 	stw	r2,0(r3)
  80d710:	00000406 	br	80d724 <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80d714:	080d6040 	call	80d604 <alt_get_errno>
  80d718:	1007883a 	mov	r3,r2
  80d71c:	00801444 	movi	r2,81
  80d720:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80d724:	00bfffc4 	movi	r2,-1
}
  80d728:	e037883a 	mov	sp,fp
  80d72c:	dfc00117 	ldw	ra,4(sp)
  80d730:	df000017 	ldw	fp,0(sp)
  80d734:	dec00204 	addi	sp,sp,8
  80d738:	f800283a 	ret

0080d73c <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80d73c:	defffe04 	addi	sp,sp,-8
  80d740:	df000115 	stw	fp,4(sp)
  80d744:	df000104 	addi	fp,sp,4
  80d748:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  80d74c:	e0bfff17 	ldw	r2,-4(fp)
  80d750:	108000d0 	cmplti	r2,r2,3
  80d754:	10000d1e 	bne	r2,zero,80d78c <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
  80d758:	00802074 	movhi	r2,129
  80d75c:	10816004 	addi	r2,r2,1408
  80d760:	e0ffff17 	ldw	r3,-4(fp)
  80d764:	18c00324 	muli	r3,r3,12
  80d768:	10c5883a 	add	r2,r2,r3
  80d76c:	10800204 	addi	r2,r2,8
  80d770:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  80d774:	00802074 	movhi	r2,129
  80d778:	10816004 	addi	r2,r2,1408
  80d77c:	e0ffff17 	ldw	r3,-4(fp)
  80d780:	18c00324 	muli	r3,r3,12
  80d784:	10c5883a 	add	r2,r2,r3
  80d788:	10000015 	stw	zero,0(r2)
  }
}
  80d78c:	0001883a 	nop
  80d790:	e037883a 	mov	sp,fp
  80d794:	df000017 	ldw	fp,0(sp)
  80d798:	dec00104 	addi	sp,sp,4
  80d79c:	f800283a 	ret

0080d7a0 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80d7a0:	defff904 	addi	sp,sp,-28
  80d7a4:	df000615 	stw	fp,24(sp)
  80d7a8:	df000604 	addi	fp,sp,24
  80d7ac:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80d7b0:	0005303a 	rdctl	r2,status
  80d7b4:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80d7b8:	e0fffe17 	ldw	r3,-8(fp)
  80d7bc:	00bfff84 	movi	r2,-2
  80d7c0:	1884703a 	and	r2,r3,r2
  80d7c4:	1001703a 	wrctl	status,r2
  
  return context;
  80d7c8:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  80d7cc:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  80d7d0:	d0a00c17 	ldw	r2,-32720(gp)
  80d7d4:	10c000c4 	addi	r3,r2,3
  80d7d8:	00bfff04 	movi	r2,-4
  80d7dc:	1884703a 	and	r2,r3,r2
  80d7e0:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  80d7e4:	d0e00c17 	ldw	r3,-32720(gp)
  80d7e8:	e0bfff17 	ldw	r2,-4(fp)
  80d7ec:	1887883a 	add	r3,r3,r2
  80d7f0:	00804034 	movhi	r2,256
  80d7f4:	10800004 	addi	r2,r2,0
  80d7f8:	10c0062e 	bgeu	r2,r3,80d814 <sbrk+0x74>
  80d7fc:	e0bffb17 	ldw	r2,-20(fp)
  80d800:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80d804:	e0bffa17 	ldw	r2,-24(fp)
  80d808:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  80d80c:	00bfffc4 	movi	r2,-1
  80d810:	00000b06 	br	80d840 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  80d814:	d0a00c17 	ldw	r2,-32720(gp)
  80d818:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
  80d81c:	d0e00c17 	ldw	r3,-32720(gp)
  80d820:	e0bfff17 	ldw	r2,-4(fp)
  80d824:	1885883a 	add	r2,r3,r2
  80d828:	d0a00c15 	stw	r2,-32720(gp)
  80d82c:	e0bffb17 	ldw	r2,-20(fp)
  80d830:	e0bffc15 	stw	r2,-16(fp)
  80d834:	e0bffc17 	ldw	r2,-16(fp)
  80d838:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  80d83c:	e0bffd17 	ldw	r2,-12(fp)
} 
  80d840:	e037883a 	mov	sp,fp
  80d844:	df000017 	ldw	fp,0(sp)
  80d848:	dec00104 	addi	sp,sp,4
  80d84c:	f800283a 	ret

0080d850 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
  80d850:	defffd04 	addi	sp,sp,-12
  80d854:	dfc00215 	stw	ra,8(sp)
  80d858:	df000115 	stw	fp,4(sp)
  80d85c:	df000104 	addi	fp,sp,4
  80d860:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
  80d864:	e13fff17 	ldw	r4,-4(fp)
  80d868:	080e70c0 	call	80e70c <alt_busy_sleep>
}
  80d86c:	e037883a 	mov	sp,fp
  80d870:	dfc00117 	ldw	ra,4(sp)
  80d874:	df000017 	ldw	fp,0(sp)
  80d878:	dec00204 	addi	sp,sp,8
  80d87c:	f800283a 	ret

0080d880 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d880:	defffe04 	addi	sp,sp,-8
  80d884:	dfc00115 	stw	ra,4(sp)
  80d888:	df000015 	stw	fp,0(sp)
  80d88c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d890:	d0a00b17 	ldw	r2,-32724(gp)
  80d894:	10000326 	beq	r2,zero,80d8a4 <alt_get_errno+0x24>
  80d898:	d0a00b17 	ldw	r2,-32724(gp)
  80d89c:	103ee83a 	callr	r2
  80d8a0:	00000106 	br	80d8a8 <alt_get_errno+0x28>
  80d8a4:	d0a6d304 	addi	r2,gp,-25780
}
  80d8a8:	e037883a 	mov	sp,fp
  80d8ac:	dfc00117 	ldw	ra,4(sp)
  80d8b0:	df000017 	ldw	fp,0(sp)
  80d8b4:	dec00204 	addi	sp,sp,8
  80d8b8:	f800283a 	ret

0080d8bc <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80d8bc:	defff904 	addi	sp,sp,-28
  80d8c0:	dfc00615 	stw	ra,24(sp)
  80d8c4:	df000515 	stw	fp,20(sp)
  80d8c8:	df000504 	addi	fp,sp,20
  80d8cc:	e13ffd15 	stw	r4,-12(fp)
  80d8d0:	e17ffe15 	stw	r5,-8(fp)
  80d8d4:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d8d8:	e0bffd17 	ldw	r2,-12(fp)
  80d8dc:	10000616 	blt	r2,zero,80d8f8 <write+0x3c>
  80d8e0:	e0bffd17 	ldw	r2,-12(fp)
  80d8e4:	10c00324 	muli	r3,r2,12
  80d8e8:	00802074 	movhi	r2,129
  80d8ec:	10816004 	addi	r2,r2,1408
  80d8f0:	1885883a 	add	r2,r3,r2
  80d8f4:	00000106 	br	80d8fc <write+0x40>
  80d8f8:	0005883a 	mov	r2,zero
  80d8fc:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  80d900:	e0bffb17 	ldw	r2,-20(fp)
  80d904:	10002126 	beq	r2,zero,80d98c <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  80d908:	e0bffb17 	ldw	r2,-20(fp)
  80d90c:	10800217 	ldw	r2,8(r2)
  80d910:	108000cc 	andi	r2,r2,3
  80d914:	10001826 	beq	r2,zero,80d978 <write+0xbc>
  80d918:	e0bffb17 	ldw	r2,-20(fp)
  80d91c:	10800017 	ldw	r2,0(r2)
  80d920:	10800617 	ldw	r2,24(r2)
  80d924:	10001426 	beq	r2,zero,80d978 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  80d928:	e0bffb17 	ldw	r2,-20(fp)
  80d92c:	10800017 	ldw	r2,0(r2)
  80d930:	10800617 	ldw	r2,24(r2)
  80d934:	e0ffff17 	ldw	r3,-4(fp)
  80d938:	180d883a 	mov	r6,r3
  80d93c:	e17ffe17 	ldw	r5,-8(fp)
  80d940:	e13ffb17 	ldw	r4,-20(fp)
  80d944:	103ee83a 	callr	r2
  80d948:	e0bffc15 	stw	r2,-16(fp)
  80d94c:	e0bffc17 	ldw	r2,-16(fp)
  80d950:	1000070e 	bge	r2,zero,80d970 <write+0xb4>
      {
        ALT_ERRNO = -rval;
  80d954:	080d8800 	call	80d880 <alt_get_errno>
  80d958:	1007883a 	mov	r3,r2
  80d95c:	e0bffc17 	ldw	r2,-16(fp)
  80d960:	0085c83a 	sub	r2,zero,r2
  80d964:	18800015 	stw	r2,0(r3)
        return -1;
  80d968:	00bfffc4 	movi	r2,-1
  80d96c:	00000c06 	br	80d9a0 <write+0xe4>
      }
      return rval;
  80d970:	e0bffc17 	ldw	r2,-16(fp)
  80d974:	00000a06 	br	80d9a0 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
  80d978:	080d8800 	call	80d880 <alt_get_errno>
  80d97c:	1007883a 	mov	r3,r2
  80d980:	00800344 	movi	r2,13
  80d984:	18800015 	stw	r2,0(r3)
  80d988:	00000406 	br	80d99c <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  80d98c:	080d8800 	call	80d880 <alt_get_errno>
  80d990:	1007883a 	mov	r3,r2
  80d994:	00801444 	movi	r2,81
  80d998:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80d99c:	00bfffc4 	movi	r2,-1
}
  80d9a0:	e037883a 	mov	sp,fp
  80d9a4:	dfc00117 	ldw	ra,4(sp)
  80d9a8:	df000017 	ldw	fp,0(sp)
  80d9ac:	dec00204 	addi	sp,sp,8
  80d9b0:	f800283a 	ret

0080d9b4 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  80d9b4:	defffd04 	addi	sp,sp,-12
  80d9b8:	dfc00215 	stw	ra,8(sp)
  80d9bc:	df000115 	stw	fp,4(sp)
  80d9c0:	df000104 	addi	fp,sp,4
  80d9c4:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  80d9c8:	d1600804 	addi	r5,gp,-32736
  80d9cc:	e13fff17 	ldw	r4,-4(fp)
  80d9d0:	080e8e80 	call	80e8e8 <alt_dev_llist_insert>
}
  80d9d4:	e037883a 	mov	sp,fp
  80d9d8:	dfc00117 	ldw	ra,4(sp)
  80d9dc:	df000017 	ldw	fp,0(sp)
  80d9e0:	dec00204 	addi	sp,sp,8
  80d9e4:	f800283a 	ret

0080d9e8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  80d9e8:	defffd04 	addi	sp,sp,-12
  80d9ec:	dfc00215 	stw	ra,8(sp)
  80d9f0:	df000115 	stw	fp,4(sp)
  80d9f4:	df000104 	addi	fp,sp,4
  80d9f8:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU, cpu);
  80d9fc:	080f2580 	call	80f258 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  80da00:	00800044 	movi	r2,1
  80da04:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  80da08:	0001883a 	nop
  80da0c:	e037883a 	mov	sp,fp
  80da10:	dfc00117 	ldw	ra,4(sp)
  80da14:	df000017 	ldw	fp,0(sp)
  80da18:	dec00204 	addi	sp,sp,8
  80da1c:	f800283a 	ret

0080da20 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  80da20:	defffe04 	addi	sp,sp,-8
  80da24:	dfc00115 	stw	ra,4(sp)
  80da28:	df000015 	stw	fp,0(sp)
  80da2c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  80da30:	01c0fa04 	movi	r7,1000
  80da34:	01800044 	movi	r6,1
  80da38:	000b883a 	mov	r5,zero
  80da3c:	01004034 	movhi	r4,256
  80da40:	21040004 	addi	r4,r4,4096
  80da44:	080e5640 	call	80e564 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  80da48:	01800404 	movi	r6,16
  80da4c:	000b883a 	mov	r5,zero
  80da50:	01002074 	movhi	r4,129
  80da54:	2101ca04 	addi	r4,r4,1832
  80da58:	080dbe80 	call	80dbe8 <altera_avalon_jtag_uart_init>
  80da5c:	01002074 	movhi	r4,129
  80da60:	2101c004 	addi	r4,r4,1792
  80da64:	080d9b40 	call	80d9b4 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
  80da68:	0001883a 	nop
}
  80da6c:	0001883a 	nop
  80da70:	e037883a 	mov	sp,fp
  80da74:	dfc00117 	ldw	ra,4(sp)
  80da78:	df000017 	ldw	fp,0(sp)
  80da7c:	dec00204 	addi	sp,sp,8
  80da80:	f800283a 	ret

0080da84 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80da84:	defffa04 	addi	sp,sp,-24
  80da88:	dfc00515 	stw	ra,20(sp)
  80da8c:	df000415 	stw	fp,16(sp)
  80da90:	df000404 	addi	fp,sp,16
  80da94:	e13ffd15 	stw	r4,-12(fp)
  80da98:	e17ffe15 	stw	r5,-8(fp)
  80da9c:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80daa0:	e0bffd17 	ldw	r2,-12(fp)
  80daa4:	10800017 	ldw	r2,0(r2)
  80daa8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  80daac:	e0bffc17 	ldw	r2,-16(fp)
  80dab0:	10c00a04 	addi	r3,r2,40
  80dab4:	e0bffd17 	ldw	r2,-12(fp)
  80dab8:	10800217 	ldw	r2,8(r2)
  80dabc:	100f883a 	mov	r7,r2
  80dac0:	e1bfff17 	ldw	r6,-4(fp)
  80dac4:	e17ffe17 	ldw	r5,-8(fp)
  80dac8:	1809883a 	mov	r4,r3
  80dacc:	080e0ac0 	call	80e0ac <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  80dad0:	e037883a 	mov	sp,fp
  80dad4:	dfc00117 	ldw	ra,4(sp)
  80dad8:	df000017 	ldw	fp,0(sp)
  80dadc:	dec00204 	addi	sp,sp,8
  80dae0:	f800283a 	ret

0080dae4 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  80dae4:	defffa04 	addi	sp,sp,-24
  80dae8:	dfc00515 	stw	ra,20(sp)
  80daec:	df000415 	stw	fp,16(sp)
  80daf0:	df000404 	addi	fp,sp,16
  80daf4:	e13ffd15 	stw	r4,-12(fp)
  80daf8:	e17ffe15 	stw	r5,-8(fp)
  80dafc:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80db00:	e0bffd17 	ldw	r2,-12(fp)
  80db04:	10800017 	ldw	r2,0(r2)
  80db08:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  80db0c:	e0bffc17 	ldw	r2,-16(fp)
  80db10:	10c00a04 	addi	r3,r2,40
  80db14:	e0bffd17 	ldw	r2,-12(fp)
  80db18:	10800217 	ldw	r2,8(r2)
  80db1c:	100f883a 	mov	r7,r2
  80db20:	e1bfff17 	ldw	r6,-4(fp)
  80db24:	e17ffe17 	ldw	r5,-8(fp)
  80db28:	1809883a 	mov	r4,r3
  80db2c:	080e2c80 	call	80e2c8 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  80db30:	e037883a 	mov	sp,fp
  80db34:	dfc00117 	ldw	ra,4(sp)
  80db38:	df000017 	ldw	fp,0(sp)
  80db3c:	dec00204 	addi	sp,sp,8
  80db40:	f800283a 	ret

0080db44 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  80db44:	defffc04 	addi	sp,sp,-16
  80db48:	dfc00315 	stw	ra,12(sp)
  80db4c:	df000215 	stw	fp,8(sp)
  80db50:	df000204 	addi	fp,sp,8
  80db54:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80db58:	e0bfff17 	ldw	r2,-4(fp)
  80db5c:	10800017 	ldw	r2,0(r2)
  80db60:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  80db64:	e0bffe17 	ldw	r2,-8(fp)
  80db68:	10c00a04 	addi	r3,r2,40
  80db6c:	e0bfff17 	ldw	r2,-4(fp)
  80db70:	10800217 	ldw	r2,8(r2)
  80db74:	100b883a 	mov	r5,r2
  80db78:	1809883a 	mov	r4,r3
  80db7c:	080df540 	call	80df54 <altera_avalon_jtag_uart_close>
}
  80db80:	e037883a 	mov	sp,fp
  80db84:	dfc00117 	ldw	ra,4(sp)
  80db88:	df000017 	ldw	fp,0(sp)
  80db8c:	dec00204 	addi	sp,sp,8
  80db90:	f800283a 	ret

0080db94 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  80db94:	defffa04 	addi	sp,sp,-24
  80db98:	dfc00515 	stw	ra,20(sp)
  80db9c:	df000415 	stw	fp,16(sp)
  80dba0:	df000404 	addi	fp,sp,16
  80dba4:	e13ffd15 	stw	r4,-12(fp)
  80dba8:	e17ffe15 	stw	r5,-8(fp)
  80dbac:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  80dbb0:	e0bffd17 	ldw	r2,-12(fp)
  80dbb4:	10800017 	ldw	r2,0(r2)
  80dbb8:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  80dbbc:	e0bffc17 	ldw	r2,-16(fp)
  80dbc0:	10800a04 	addi	r2,r2,40
  80dbc4:	e1bfff17 	ldw	r6,-4(fp)
  80dbc8:	e17ffe17 	ldw	r5,-8(fp)
  80dbcc:	1009883a 	mov	r4,r2
  80dbd0:	080dfbc0 	call	80dfbc <altera_avalon_jtag_uart_ioctl>
}
  80dbd4:	e037883a 	mov	sp,fp
  80dbd8:	dfc00117 	ldw	ra,4(sp)
  80dbdc:	df000017 	ldw	fp,0(sp)
  80dbe0:	dec00204 	addi	sp,sp,8
  80dbe4:	f800283a 	ret

0080dbe8 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  80dbe8:	defffa04 	addi	sp,sp,-24
  80dbec:	dfc00515 	stw	ra,20(sp)
  80dbf0:	df000415 	stw	fp,16(sp)
  80dbf4:	df000404 	addi	fp,sp,16
  80dbf8:	e13ffd15 	stw	r4,-12(fp)
  80dbfc:	e17ffe15 	stw	r5,-8(fp)
  80dc00:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80dc04:	e0bffd17 	ldw	r2,-12(fp)
  80dc08:	00c00044 	movi	r3,1
  80dc0c:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  80dc10:	e0bffd17 	ldw	r2,-12(fp)
  80dc14:	10800017 	ldw	r2,0(r2)
  80dc18:	10800104 	addi	r2,r2,4
  80dc1c:	1007883a 	mov	r3,r2
  80dc20:	e0bffd17 	ldw	r2,-12(fp)
  80dc24:	10800817 	ldw	r2,32(r2)
  80dc28:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  80dc2c:	e0bffe17 	ldw	r2,-8(fp)
  80dc30:	e0ffff17 	ldw	r3,-4(fp)
  80dc34:	d8000015 	stw	zero,0(sp)
  80dc38:	e1fffd17 	ldw	r7,-12(fp)
  80dc3c:	01802074 	movhi	r6,129
  80dc40:	31b72a04 	addi	r6,r6,-9048
  80dc44:	180b883a 	mov	r5,r3
  80dc48:	1009883a 	mov	r4,r2
  80dc4c:	080ea800 	call	80ea80 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  80dc50:	e0bffd17 	ldw	r2,-12(fp)
  80dc54:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  80dc58:	e0bffd17 	ldw	r2,-12(fp)
  80dc5c:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80dc60:	d0e6d817 	ldw	r3,-25760(gp)
  80dc64:	e1fffd17 	ldw	r7,-12(fp)
  80dc68:	01802074 	movhi	r6,129
  80dc6c:	31b7ad04 	addi	r6,r6,-8524
  80dc70:	180b883a 	mov	r5,r3
  80dc74:	1009883a 	mov	r4,r2
  80dc78:	080e5e00 	call	80e5e0 <alt_alarm_start>
  80dc7c:	1000040e 	bge	r2,zero,80dc90 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  80dc80:	e0fffd17 	ldw	r3,-12(fp)
  80dc84:	00a00034 	movhi	r2,32768
  80dc88:	10bfffc4 	addi	r2,r2,-1
  80dc8c:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  80dc90:	0001883a 	nop
  80dc94:	e037883a 	mov	sp,fp
  80dc98:	dfc00117 	ldw	ra,4(sp)
  80dc9c:	df000017 	ldw	fp,0(sp)
  80dca0:	dec00204 	addi	sp,sp,8
  80dca4:	f800283a 	ret

0080dca8 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  80dca8:	defff804 	addi	sp,sp,-32
  80dcac:	df000715 	stw	fp,28(sp)
  80dcb0:	df000704 	addi	fp,sp,28
  80dcb4:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  80dcb8:	e0bfff17 	ldw	r2,-4(fp)
  80dcbc:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
  80dcc0:	e0bffb17 	ldw	r2,-20(fp)
  80dcc4:	10800017 	ldw	r2,0(r2)
  80dcc8:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80dccc:	e0bffc17 	ldw	r2,-16(fp)
  80dcd0:	10800104 	addi	r2,r2,4
  80dcd4:	10800037 	ldwio	r2,0(r2)
  80dcd8:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  80dcdc:	e0bffd17 	ldw	r2,-12(fp)
  80dce0:	1080c00c 	andi	r2,r2,768
  80dce4:	10006d26 	beq	r2,zero,80de9c <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  80dce8:	e0bffd17 	ldw	r2,-12(fp)
  80dcec:	1080400c 	andi	r2,r2,256
  80dcf0:	10003526 	beq	r2,zero,80ddc8 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  80dcf4:	00800074 	movhi	r2,1
  80dcf8:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80dcfc:	e0bffb17 	ldw	r2,-20(fp)
  80dd00:	10800a17 	ldw	r2,40(r2)
  80dd04:	10800044 	addi	r2,r2,1
  80dd08:	1081ffcc 	andi	r2,r2,2047
  80dd0c:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
  80dd10:	e0bffb17 	ldw	r2,-20(fp)
  80dd14:	10c00b17 	ldw	r3,44(r2)
  80dd18:	e0bffe17 	ldw	r2,-8(fp)
  80dd1c:	18801526 	beq	r3,r2,80dd74 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  80dd20:	e0bffc17 	ldw	r2,-16(fp)
  80dd24:	10800037 	ldwio	r2,0(r2)
  80dd28:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  80dd2c:	e0bff917 	ldw	r2,-28(fp)
  80dd30:	10a0000c 	andi	r2,r2,32768
  80dd34:	10001126 	beq	r2,zero,80dd7c <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  80dd38:	e0bffb17 	ldw	r2,-20(fp)
  80dd3c:	10800a17 	ldw	r2,40(r2)
  80dd40:	e0fff917 	ldw	r3,-28(fp)
  80dd44:	1809883a 	mov	r4,r3
  80dd48:	e0fffb17 	ldw	r3,-20(fp)
  80dd4c:	1885883a 	add	r2,r3,r2
  80dd50:	10800e04 	addi	r2,r2,56
  80dd54:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80dd58:	e0bffb17 	ldw	r2,-20(fp)
  80dd5c:	10800a17 	ldw	r2,40(r2)
  80dd60:	10800044 	addi	r2,r2,1
  80dd64:	10c1ffcc 	andi	r3,r2,2047
  80dd68:	e0bffb17 	ldw	r2,-20(fp)
  80dd6c:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
  80dd70:	003fe206 	br	80dcfc <__alt_data_end+0xff80dcfc>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
  80dd74:	0001883a 	nop
  80dd78:	00000106 	br	80dd80 <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
  80dd7c:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  80dd80:	e0bff917 	ldw	r2,-28(fp)
  80dd84:	10bfffec 	andhi	r2,r2,65535
  80dd88:	10000f26 	beq	r2,zero,80ddc8 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80dd8c:	e0bffb17 	ldw	r2,-20(fp)
  80dd90:	10c00817 	ldw	r3,32(r2)
  80dd94:	00bfff84 	movi	r2,-2
  80dd98:	1886703a 	and	r3,r3,r2
  80dd9c:	e0bffb17 	ldw	r2,-20(fp)
  80dda0:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  80dda4:	e0bffc17 	ldw	r2,-16(fp)
  80dda8:	10800104 	addi	r2,r2,4
  80ddac:	1007883a 	mov	r3,r2
  80ddb0:	e0bffb17 	ldw	r2,-20(fp)
  80ddb4:	10800817 	ldw	r2,32(r2)
  80ddb8:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80ddbc:	e0bffc17 	ldw	r2,-16(fp)
  80ddc0:	10800104 	addi	r2,r2,4
  80ddc4:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  80ddc8:	e0bffd17 	ldw	r2,-12(fp)
  80ddcc:	1080800c 	andi	r2,r2,512
  80ddd0:	103fbe26 	beq	r2,zero,80dccc <__alt_data_end+0xff80dccc>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  80ddd4:	e0bffd17 	ldw	r2,-12(fp)
  80ddd8:	1004d43a 	srli	r2,r2,16
  80dddc:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  80dde0:	00001406 	br	80de34 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  80dde4:	e0bffc17 	ldw	r2,-16(fp)
  80dde8:	e0fffb17 	ldw	r3,-20(fp)
  80ddec:	18c00d17 	ldw	r3,52(r3)
  80ddf0:	e13ffb17 	ldw	r4,-20(fp)
  80ddf4:	20c7883a 	add	r3,r4,r3
  80ddf8:	18c20e04 	addi	r3,r3,2104
  80ddfc:	18c00003 	ldbu	r3,0(r3)
  80de00:	18c03fcc 	andi	r3,r3,255
  80de04:	18c0201c 	xori	r3,r3,128
  80de08:	18ffe004 	addi	r3,r3,-128
  80de0c:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80de10:	e0bffb17 	ldw	r2,-20(fp)
  80de14:	10800d17 	ldw	r2,52(r2)
  80de18:	10800044 	addi	r2,r2,1
  80de1c:	10c1ffcc 	andi	r3,r2,2047
  80de20:	e0bffb17 	ldw	r2,-20(fp)
  80de24:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  80de28:	e0bffa17 	ldw	r2,-24(fp)
  80de2c:	10bfffc4 	addi	r2,r2,-1
  80de30:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
  80de34:	e0bffa17 	ldw	r2,-24(fp)
  80de38:	10000526 	beq	r2,zero,80de50 <altera_avalon_jtag_uart_irq+0x1a8>
  80de3c:	e0bffb17 	ldw	r2,-20(fp)
  80de40:	10c00d17 	ldw	r3,52(r2)
  80de44:	e0bffb17 	ldw	r2,-20(fp)
  80de48:	10800c17 	ldw	r2,48(r2)
  80de4c:	18bfe51e 	bne	r3,r2,80dde4 <__alt_data_end+0xff80dde4>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
  80de50:	e0bffa17 	ldw	r2,-24(fp)
  80de54:	103f9d26 	beq	r2,zero,80dccc <__alt_data_end+0xff80dccc>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80de58:	e0bffb17 	ldw	r2,-20(fp)
  80de5c:	10c00817 	ldw	r3,32(r2)
  80de60:	00bfff44 	movi	r2,-3
  80de64:	1886703a 	and	r3,r3,r2
  80de68:	e0bffb17 	ldw	r2,-20(fp)
  80de6c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80de70:	e0bffb17 	ldw	r2,-20(fp)
  80de74:	10800017 	ldw	r2,0(r2)
  80de78:	10800104 	addi	r2,r2,4
  80de7c:	1007883a 	mov	r3,r2
  80de80:	e0bffb17 	ldw	r2,-20(fp)
  80de84:	10800817 	ldw	r2,32(r2)
  80de88:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80de8c:	e0bffc17 	ldw	r2,-16(fp)
  80de90:	10800104 	addi	r2,r2,4
  80de94:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
  80de98:	003f8c06 	br	80dccc <__alt_data_end+0xff80dccc>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
  80de9c:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
  80dea0:	0001883a 	nop
  80dea4:	e037883a 	mov	sp,fp
  80dea8:	df000017 	ldw	fp,0(sp)
  80deac:	dec00104 	addi	sp,sp,4
  80deb0:	f800283a 	ret

0080deb4 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  80deb4:	defff804 	addi	sp,sp,-32
  80deb8:	df000715 	stw	fp,28(sp)
  80debc:	df000704 	addi	fp,sp,28
  80dec0:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  80dec4:	e0bffb17 	ldw	r2,-20(fp)
  80dec8:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  80decc:	e0bff917 	ldw	r2,-28(fp)
  80ded0:	10800017 	ldw	r2,0(r2)
  80ded4:	10800104 	addi	r2,r2,4
  80ded8:	10800037 	ldwio	r2,0(r2)
  80dedc:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  80dee0:	e0bffa17 	ldw	r2,-24(fp)
  80dee4:	1081000c 	andi	r2,r2,1024
  80dee8:	10000b26 	beq	r2,zero,80df18 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  80deec:	e0bff917 	ldw	r2,-28(fp)
  80def0:	10800017 	ldw	r2,0(r2)
  80def4:	10800104 	addi	r2,r2,4
  80def8:	1007883a 	mov	r3,r2
  80defc:	e0bff917 	ldw	r2,-28(fp)
  80df00:	10800817 	ldw	r2,32(r2)
  80df04:	10810014 	ori	r2,r2,1024
  80df08:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  80df0c:	e0bff917 	ldw	r2,-28(fp)
  80df10:	10000915 	stw	zero,36(r2)
  80df14:	00000a06 	br	80df40 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  80df18:	e0bff917 	ldw	r2,-28(fp)
  80df1c:	10c00917 	ldw	r3,36(r2)
  80df20:	00a00034 	movhi	r2,32768
  80df24:	10bfff04 	addi	r2,r2,-4
  80df28:	10c00536 	bltu	r2,r3,80df40 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  80df2c:	e0bff917 	ldw	r2,-28(fp)
  80df30:	10800917 	ldw	r2,36(r2)
  80df34:	10c00044 	addi	r3,r2,1
  80df38:	e0bff917 	ldw	r2,-28(fp)
  80df3c:	10c00915 	stw	r3,36(r2)
  80df40:	d0a6d817 	ldw	r2,-25760(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  80df44:	e037883a 	mov	sp,fp
  80df48:	df000017 	ldw	fp,0(sp)
  80df4c:	dec00104 	addi	sp,sp,4
  80df50:	f800283a 	ret

0080df54 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  80df54:	defffd04 	addi	sp,sp,-12
  80df58:	df000215 	stw	fp,8(sp)
  80df5c:	df000204 	addi	fp,sp,8
  80df60:	e13ffe15 	stw	r4,-8(fp)
  80df64:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80df68:	00000506 	br	80df80 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  80df6c:	e0bfff17 	ldw	r2,-4(fp)
  80df70:	1090000c 	andi	r2,r2,16384
  80df74:	10000226 	beq	r2,zero,80df80 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  80df78:	00bffd44 	movi	r2,-11
  80df7c:	00000b06 	br	80dfac <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80df80:	e0bffe17 	ldw	r2,-8(fp)
  80df84:	10c00d17 	ldw	r3,52(r2)
  80df88:	e0bffe17 	ldw	r2,-8(fp)
  80df8c:	10800c17 	ldw	r2,48(r2)
  80df90:	18800526 	beq	r3,r2,80dfa8 <altera_avalon_jtag_uart_close+0x54>
  80df94:	e0bffe17 	ldw	r2,-8(fp)
  80df98:	10c00917 	ldw	r3,36(r2)
  80df9c:	e0bffe17 	ldw	r2,-8(fp)
  80dfa0:	10800117 	ldw	r2,4(r2)
  80dfa4:	18bff136 	bltu	r3,r2,80df6c <__alt_data_end+0xff80df6c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
  80dfa8:	0005883a 	mov	r2,zero
}
  80dfac:	e037883a 	mov	sp,fp
  80dfb0:	df000017 	ldw	fp,0(sp)
  80dfb4:	dec00104 	addi	sp,sp,4
  80dfb8:	f800283a 	ret

0080dfbc <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  80dfbc:	defffa04 	addi	sp,sp,-24
  80dfc0:	df000515 	stw	fp,20(sp)
  80dfc4:	df000504 	addi	fp,sp,20
  80dfc8:	e13ffd15 	stw	r4,-12(fp)
  80dfcc:	e17ffe15 	stw	r5,-8(fp)
  80dfd0:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
  80dfd4:	00bff9c4 	movi	r2,-25
  80dfd8:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
  80dfdc:	e0bffe17 	ldw	r2,-8(fp)
  80dfe0:	10da8060 	cmpeqi	r3,r2,27137
  80dfe4:	1800031e 	bne	r3,zero,80dff4 <altera_avalon_jtag_uart_ioctl+0x38>
  80dfe8:	109a80a0 	cmpeqi	r2,r2,27138
  80dfec:	1000181e 	bne	r2,zero,80e050 <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
  80dff0:	00002906 	br	80e098 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
  80dff4:	e0bffd17 	ldw	r2,-12(fp)
  80dff8:	10c00117 	ldw	r3,4(r2)
  80dffc:	00a00034 	movhi	r2,32768
  80e000:	10bfffc4 	addi	r2,r2,-1
  80e004:	18802126 	beq	r3,r2,80e08c <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
  80e008:	e0bfff17 	ldw	r2,-4(fp)
  80e00c:	10800017 	ldw	r2,0(r2)
  80e010:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  80e014:	e0bffc17 	ldw	r2,-16(fp)
  80e018:	10800090 	cmplti	r2,r2,2
  80e01c:	1000061e 	bne	r2,zero,80e038 <altera_avalon_jtag_uart_ioctl+0x7c>
  80e020:	e0fffc17 	ldw	r3,-16(fp)
  80e024:	00a00034 	movhi	r2,32768
  80e028:	10bfffc4 	addi	r2,r2,-1
  80e02c:	18800226 	beq	r3,r2,80e038 <altera_avalon_jtag_uart_ioctl+0x7c>
  80e030:	e0bffc17 	ldw	r2,-16(fp)
  80e034:	00000206 	br	80e040 <altera_avalon_jtag_uart_ioctl+0x84>
  80e038:	00a00034 	movhi	r2,32768
  80e03c:	10bfff84 	addi	r2,r2,-2
  80e040:	e0fffd17 	ldw	r3,-12(fp)
  80e044:	18800115 	stw	r2,4(r3)
      rc = 0;
  80e048:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  80e04c:	00000f06 	br	80e08c <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
  80e050:	e0bffd17 	ldw	r2,-12(fp)
  80e054:	10c00117 	ldw	r3,4(r2)
  80e058:	00a00034 	movhi	r2,32768
  80e05c:	10bfffc4 	addi	r2,r2,-1
  80e060:	18800c26 	beq	r3,r2,80e094 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  80e064:	e0bffd17 	ldw	r2,-12(fp)
  80e068:	10c00917 	ldw	r3,36(r2)
  80e06c:	e0bffd17 	ldw	r2,-12(fp)
  80e070:	10800117 	ldw	r2,4(r2)
  80e074:	1885803a 	cmpltu	r2,r3,r2
  80e078:	10c03fcc 	andi	r3,r2,255
  80e07c:	e0bfff17 	ldw	r2,-4(fp)
  80e080:	10c00015 	stw	r3,0(r2)
      rc = 0;
  80e084:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
  80e088:	00000206 	br	80e094 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
  80e08c:	0001883a 	nop
  80e090:	00000106 	br	80e098 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
  80e094:	0001883a 	nop

  default:
    break;
  }

  return rc;
  80e098:	e0bffb17 	ldw	r2,-20(fp)
}
  80e09c:	e037883a 	mov	sp,fp
  80e0a0:	df000017 	ldw	fp,0(sp)
  80e0a4:	dec00104 	addi	sp,sp,4
  80e0a8:	f800283a 	ret

0080e0ac <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  80e0ac:	defff304 	addi	sp,sp,-52
  80e0b0:	dfc00c15 	stw	ra,48(sp)
  80e0b4:	df000b15 	stw	fp,44(sp)
  80e0b8:	df000b04 	addi	fp,sp,44
  80e0bc:	e13ffc15 	stw	r4,-16(fp)
  80e0c0:	e17ffd15 	stw	r5,-12(fp)
  80e0c4:	e1bffe15 	stw	r6,-8(fp)
  80e0c8:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
  80e0cc:	e0bffd17 	ldw	r2,-12(fp)
  80e0d0:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80e0d4:	00004706 	br	80e1f4 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  80e0d8:	e0bffc17 	ldw	r2,-16(fp)
  80e0dc:	10800a17 	ldw	r2,40(r2)
  80e0e0:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
  80e0e4:	e0bffc17 	ldw	r2,-16(fp)
  80e0e8:	10800b17 	ldw	r2,44(r2)
  80e0ec:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
  80e0f0:	e0fff717 	ldw	r3,-36(fp)
  80e0f4:	e0bff817 	ldw	r2,-32(fp)
  80e0f8:	18800536 	bltu	r3,r2,80e110 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  80e0fc:	e0fff717 	ldw	r3,-36(fp)
  80e100:	e0bff817 	ldw	r2,-32(fp)
  80e104:	1885c83a 	sub	r2,r3,r2
  80e108:	e0bff615 	stw	r2,-40(fp)
  80e10c:	00000406 	br	80e120 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  80e110:	00c20004 	movi	r3,2048
  80e114:	e0bff817 	ldw	r2,-32(fp)
  80e118:	1885c83a 	sub	r2,r3,r2
  80e11c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  80e120:	e0bff617 	ldw	r2,-40(fp)
  80e124:	10001e26 	beq	r2,zero,80e1a0 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  80e128:	e0fffe17 	ldw	r3,-8(fp)
  80e12c:	e0bff617 	ldw	r2,-40(fp)
  80e130:	1880022e 	bgeu	r3,r2,80e13c <altera_avalon_jtag_uart_read+0x90>
        n = space;
  80e134:	e0bffe17 	ldw	r2,-8(fp)
  80e138:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  80e13c:	e0bffc17 	ldw	r2,-16(fp)
  80e140:	10c00e04 	addi	r3,r2,56
  80e144:	e0bff817 	ldw	r2,-32(fp)
  80e148:	1885883a 	add	r2,r3,r2
  80e14c:	e1bff617 	ldw	r6,-40(fp)
  80e150:	100b883a 	mov	r5,r2
  80e154:	e13ff517 	ldw	r4,-44(fp)
  80e158:	08062380 	call	806238 <memcpy>
      ptr   += n;
  80e15c:	e0fff517 	ldw	r3,-44(fp)
  80e160:	e0bff617 	ldw	r2,-40(fp)
  80e164:	1885883a 	add	r2,r3,r2
  80e168:	e0bff515 	stw	r2,-44(fp)
      space -= n;
  80e16c:	e0fffe17 	ldw	r3,-8(fp)
  80e170:	e0bff617 	ldw	r2,-40(fp)
  80e174:	1885c83a 	sub	r2,r3,r2
  80e178:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e17c:	e0fff817 	ldw	r3,-32(fp)
  80e180:	e0bff617 	ldw	r2,-40(fp)
  80e184:	1885883a 	add	r2,r3,r2
  80e188:	10c1ffcc 	andi	r3,r2,2047
  80e18c:	e0bffc17 	ldw	r2,-16(fp)
  80e190:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  80e194:	e0bffe17 	ldw	r2,-8(fp)
  80e198:	00bfcf16 	blt	zero,r2,80e0d8 <__alt_data_end+0xff80e0d8>
  80e19c:	00000106 	br	80e1a4 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
  80e1a0:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
  80e1a4:	e0fff517 	ldw	r3,-44(fp)
  80e1a8:	e0bffd17 	ldw	r2,-12(fp)
  80e1ac:	1880141e 	bne	r3,r2,80e200 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  80e1b0:	e0bfff17 	ldw	r2,-4(fp)
  80e1b4:	1090000c 	andi	r2,r2,16384
  80e1b8:	1000131e 	bne	r2,zero,80e208 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  80e1bc:	0001883a 	nop
  80e1c0:	e0bffc17 	ldw	r2,-16(fp)
  80e1c4:	10c00a17 	ldw	r3,40(r2)
  80e1c8:	e0bff717 	ldw	r2,-36(fp)
  80e1cc:	1880051e 	bne	r3,r2,80e1e4 <altera_avalon_jtag_uart_read+0x138>
  80e1d0:	e0bffc17 	ldw	r2,-16(fp)
  80e1d4:	10c00917 	ldw	r3,36(r2)
  80e1d8:	e0bffc17 	ldw	r2,-16(fp)
  80e1dc:	10800117 	ldw	r2,4(r2)
  80e1e0:	18bff736 	bltu	r3,r2,80e1c0 <__alt_data_end+0xff80e1c0>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  80e1e4:	e0bffc17 	ldw	r2,-16(fp)
  80e1e8:	10c00a17 	ldw	r3,40(r2)
  80e1ec:	e0bff717 	ldw	r2,-36(fp)
  80e1f0:	18800726 	beq	r3,r2,80e210 <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80e1f4:	e0bffe17 	ldw	r2,-8(fp)
  80e1f8:	00bfb716 	blt	zero,r2,80e0d8 <__alt_data_end+0xff80e0d8>
  80e1fc:	00000506 	br	80e214 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
  80e200:	0001883a 	nop
  80e204:	00000306 	br	80e214 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
  80e208:	0001883a 	nop
  80e20c:	00000106 	br	80e214 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
  80e210:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  80e214:	e0fff517 	ldw	r3,-44(fp)
  80e218:	e0bffd17 	ldw	r2,-12(fp)
  80e21c:	18801826 	beq	r3,r2,80e280 <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e220:	0005303a 	rdctl	r2,status
  80e224:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e228:	e0fffb17 	ldw	r3,-20(fp)
  80e22c:	00bfff84 	movi	r2,-2
  80e230:	1884703a 	and	r2,r3,r2
  80e234:	1001703a 	wrctl	status,r2
  
  return context;
  80e238:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  80e23c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e240:	e0bffc17 	ldw	r2,-16(fp)
  80e244:	10800817 	ldw	r2,32(r2)
  80e248:	10c00054 	ori	r3,r2,1
  80e24c:	e0bffc17 	ldw	r2,-16(fp)
  80e250:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e254:	e0bffc17 	ldw	r2,-16(fp)
  80e258:	10800017 	ldw	r2,0(r2)
  80e25c:	10800104 	addi	r2,r2,4
  80e260:	1007883a 	mov	r3,r2
  80e264:	e0bffc17 	ldw	r2,-16(fp)
  80e268:	10800817 	ldw	r2,32(r2)
  80e26c:	18800035 	stwio	r2,0(r3)
  80e270:	e0bffa17 	ldw	r2,-24(fp)
  80e274:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e278:	e0bff917 	ldw	r2,-28(fp)
  80e27c:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  80e280:	e0fff517 	ldw	r3,-44(fp)
  80e284:	e0bffd17 	ldw	r2,-12(fp)
  80e288:	18800426 	beq	r3,r2,80e29c <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
  80e28c:	e0fff517 	ldw	r3,-44(fp)
  80e290:	e0bffd17 	ldw	r2,-12(fp)
  80e294:	1885c83a 	sub	r2,r3,r2
  80e298:	00000606 	br	80e2b4 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
  80e29c:	e0bfff17 	ldw	r2,-4(fp)
  80e2a0:	1090000c 	andi	r2,r2,16384
  80e2a4:	10000226 	beq	r2,zero,80e2b0 <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
  80e2a8:	00bffd44 	movi	r2,-11
  80e2ac:	00000106 	br	80e2b4 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
  80e2b0:	00bffec4 	movi	r2,-5
}
  80e2b4:	e037883a 	mov	sp,fp
  80e2b8:	dfc00117 	ldw	ra,4(sp)
  80e2bc:	df000017 	ldw	fp,0(sp)
  80e2c0:	dec00204 	addi	sp,sp,8
  80e2c4:	f800283a 	ret

0080e2c8 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  80e2c8:	defff304 	addi	sp,sp,-52
  80e2cc:	dfc00c15 	stw	ra,48(sp)
  80e2d0:	df000b15 	stw	fp,44(sp)
  80e2d4:	df000b04 	addi	fp,sp,44
  80e2d8:	e13ffc15 	stw	r4,-16(fp)
  80e2dc:	e17ffd15 	stw	r5,-12(fp)
  80e2e0:	e1bffe15 	stw	r6,-8(fp)
  80e2e4:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  80e2e8:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  80e2ec:	e0bffd17 	ldw	r2,-12(fp)
  80e2f0:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80e2f4:	00003706 	br	80e3d4 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  80e2f8:	e0bffc17 	ldw	r2,-16(fp)
  80e2fc:	10800c17 	ldw	r2,48(r2)
  80e300:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
  80e304:	e0bffc17 	ldw	r2,-16(fp)
  80e308:	10800d17 	ldw	r2,52(r2)
  80e30c:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
  80e310:	e0fff917 	ldw	r3,-28(fp)
  80e314:	e0bff517 	ldw	r2,-44(fp)
  80e318:	1880062e 	bgeu	r3,r2,80e334 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  80e31c:	e0fff517 	ldw	r3,-44(fp)
  80e320:	e0bff917 	ldw	r2,-28(fp)
  80e324:	1885c83a 	sub	r2,r3,r2
  80e328:	10bfffc4 	addi	r2,r2,-1
  80e32c:	e0bff615 	stw	r2,-40(fp)
  80e330:	00000b06 	br	80e360 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  80e334:	e0bff517 	ldw	r2,-44(fp)
  80e338:	10000526 	beq	r2,zero,80e350 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  80e33c:	00c20004 	movi	r3,2048
  80e340:	e0bff917 	ldw	r2,-28(fp)
  80e344:	1885c83a 	sub	r2,r3,r2
  80e348:	e0bff615 	stw	r2,-40(fp)
  80e34c:	00000406 	br	80e360 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  80e350:	00c1ffc4 	movi	r3,2047
  80e354:	e0bff917 	ldw	r2,-28(fp)
  80e358:	1885c83a 	sub	r2,r3,r2
  80e35c:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
  80e360:	e0bff617 	ldw	r2,-40(fp)
  80e364:	10001e26 	beq	r2,zero,80e3e0 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  80e368:	e0fffe17 	ldw	r3,-8(fp)
  80e36c:	e0bff617 	ldw	r2,-40(fp)
  80e370:	1880022e 	bgeu	r3,r2,80e37c <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  80e374:	e0bffe17 	ldw	r2,-8(fp)
  80e378:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  80e37c:	e0bffc17 	ldw	r2,-16(fp)
  80e380:	10c20e04 	addi	r3,r2,2104
  80e384:	e0bff917 	ldw	r2,-28(fp)
  80e388:	1885883a 	add	r2,r3,r2
  80e38c:	e1bff617 	ldw	r6,-40(fp)
  80e390:	e17ffd17 	ldw	r5,-12(fp)
  80e394:	1009883a 	mov	r4,r2
  80e398:	08062380 	call	806238 <memcpy>
      ptr   += n;
  80e39c:	e0fffd17 	ldw	r3,-12(fp)
  80e3a0:	e0bff617 	ldw	r2,-40(fp)
  80e3a4:	1885883a 	add	r2,r3,r2
  80e3a8:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
  80e3ac:	e0fffe17 	ldw	r3,-8(fp)
  80e3b0:	e0bff617 	ldw	r2,-40(fp)
  80e3b4:	1885c83a 	sub	r2,r3,r2
  80e3b8:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e3bc:	e0fff917 	ldw	r3,-28(fp)
  80e3c0:	e0bff617 	ldw	r2,-40(fp)
  80e3c4:	1885883a 	add	r2,r3,r2
  80e3c8:	10c1ffcc 	andi	r3,r2,2047
  80e3cc:	e0bffc17 	ldw	r2,-16(fp)
  80e3d0:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80e3d4:	e0bffe17 	ldw	r2,-8(fp)
  80e3d8:	00bfc716 	blt	zero,r2,80e2f8 <__alt_data_end+0xff80e2f8>
  80e3dc:	00000106 	br	80e3e4 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
  80e3e0:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e3e4:	0005303a 	rdctl	r2,status
  80e3e8:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e3ec:	e0fffb17 	ldw	r3,-20(fp)
  80e3f0:	00bfff84 	movi	r2,-2
  80e3f4:	1884703a 	and	r2,r3,r2
  80e3f8:	1001703a 	wrctl	status,r2
  
  return context;
  80e3fc:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  80e400:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80e404:	e0bffc17 	ldw	r2,-16(fp)
  80e408:	10800817 	ldw	r2,32(r2)
  80e40c:	10c00094 	ori	r3,r2,2
  80e410:	e0bffc17 	ldw	r2,-16(fp)
  80e414:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e418:	e0bffc17 	ldw	r2,-16(fp)
  80e41c:	10800017 	ldw	r2,0(r2)
  80e420:	10800104 	addi	r2,r2,4
  80e424:	1007883a 	mov	r3,r2
  80e428:	e0bffc17 	ldw	r2,-16(fp)
  80e42c:	10800817 	ldw	r2,32(r2)
  80e430:	18800035 	stwio	r2,0(r3)
  80e434:	e0bffa17 	ldw	r2,-24(fp)
  80e438:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e43c:	e0bff817 	ldw	r2,-32(fp)
  80e440:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  80e444:	e0bffe17 	ldw	r2,-8(fp)
  80e448:	0080100e 	bge	zero,r2,80e48c <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
  80e44c:	e0bfff17 	ldw	r2,-4(fp)
  80e450:	1090000c 	andi	r2,r2,16384
  80e454:	1000101e 	bne	r2,zero,80e498 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  80e458:	0001883a 	nop
  80e45c:	e0bffc17 	ldw	r2,-16(fp)
  80e460:	10c00d17 	ldw	r3,52(r2)
  80e464:	e0bff517 	ldw	r2,-44(fp)
  80e468:	1880051e 	bne	r3,r2,80e480 <altera_avalon_jtag_uart_write+0x1b8>
  80e46c:	e0bffc17 	ldw	r2,-16(fp)
  80e470:	10c00917 	ldw	r3,36(r2)
  80e474:	e0bffc17 	ldw	r2,-16(fp)
  80e478:	10800117 	ldw	r2,4(r2)
  80e47c:	18bff736 	bltu	r3,r2,80e45c <__alt_data_end+0xff80e45c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  80e480:	e0bffc17 	ldw	r2,-16(fp)
  80e484:	10800917 	ldw	r2,36(r2)
  80e488:	1000051e 	bne	r2,zero,80e4a0 <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
  80e48c:	e0bffe17 	ldw	r2,-8(fp)
  80e490:	00bfd016 	blt	zero,r2,80e3d4 <__alt_data_end+0xff80e3d4>
  80e494:	00000306 	br	80e4a4 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
  80e498:	0001883a 	nop
  80e49c:	00000106 	br	80e4a4 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
  80e4a0:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  80e4a4:	e0fffd17 	ldw	r3,-12(fp)
  80e4a8:	e0bff717 	ldw	r2,-36(fp)
  80e4ac:	18800426 	beq	r3,r2,80e4c0 <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
  80e4b0:	e0fffd17 	ldw	r3,-12(fp)
  80e4b4:	e0bff717 	ldw	r2,-36(fp)
  80e4b8:	1885c83a 	sub	r2,r3,r2
  80e4bc:	00000606 	br	80e4d8 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
  80e4c0:	e0bfff17 	ldw	r2,-4(fp)
  80e4c4:	1090000c 	andi	r2,r2,16384
  80e4c8:	10000226 	beq	r2,zero,80e4d4 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
  80e4cc:	00bffd44 	movi	r2,-11
  80e4d0:	00000106 	br	80e4d8 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  80e4d4:	00bffec4 	movi	r2,-5
}
  80e4d8:	e037883a 	mov	sp,fp
  80e4dc:	dfc00117 	ldw	ra,4(sp)
  80e4e0:	df000017 	ldw	fp,0(sp)
  80e4e4:	dec00204 	addi	sp,sp,8
  80e4e8:	f800283a 	ret

0080e4ec <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  80e4ec:	defffa04 	addi	sp,sp,-24
  80e4f0:	dfc00515 	stw	ra,20(sp)
  80e4f4:	df000415 	stw	fp,16(sp)
  80e4f8:	df000404 	addi	fp,sp,16
  80e4fc:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  80e500:	0007883a 	mov	r3,zero
  80e504:	e0bfff17 	ldw	r2,-4(fp)
  80e508:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  80e50c:	e0bfff17 	ldw	r2,-4(fp)
  80e510:	10800104 	addi	r2,r2,4
  80e514:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e518:	0005303a 	rdctl	r2,status
  80e51c:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e520:	e0fffd17 	ldw	r3,-12(fp)
  80e524:	00bfff84 	movi	r2,-2
  80e528:	1884703a 	and	r2,r3,r2
  80e52c:	1001703a 	wrctl	status,r2
  
  return context;
  80e530:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  80e534:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
  80e538:	080f1500 	call	80f150 <alt_tick>
  80e53c:	e0bffc17 	ldw	r2,-16(fp)
  80e540:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e544:	e0bffe17 	ldw	r2,-8(fp)
  80e548:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  80e54c:	0001883a 	nop
  80e550:	e037883a 	mov	sp,fp
  80e554:	dfc00117 	ldw	ra,4(sp)
  80e558:	df000017 	ldw	fp,0(sp)
  80e55c:	dec00204 	addi	sp,sp,8
  80e560:	f800283a 	ret

0080e564 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  80e564:	defff804 	addi	sp,sp,-32
  80e568:	dfc00715 	stw	ra,28(sp)
  80e56c:	df000615 	stw	fp,24(sp)
  80e570:	df000604 	addi	fp,sp,24
  80e574:	e13ffc15 	stw	r4,-16(fp)
  80e578:	e17ffd15 	stw	r5,-12(fp)
  80e57c:	e1bffe15 	stw	r6,-8(fp)
  80e580:	e1ffff15 	stw	r7,-4(fp)
  80e584:	e0bfff17 	ldw	r2,-4(fp)
  80e588:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  80e58c:	d0a6d817 	ldw	r2,-25760(gp)
  80e590:	1000021e 	bne	r2,zero,80e59c <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
  80e594:	e0bffb17 	ldw	r2,-20(fp)
  80e598:	d0a6d815 	stw	r2,-25760(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  80e59c:	e0bffc17 	ldw	r2,-16(fp)
  80e5a0:	10800104 	addi	r2,r2,4
  80e5a4:	00c001c4 	movi	r3,7
  80e5a8:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  80e5ac:	d8000015 	stw	zero,0(sp)
  80e5b0:	e1fffc17 	ldw	r7,-16(fp)
  80e5b4:	01802074 	movhi	r6,129
  80e5b8:	31b93b04 	addi	r6,r6,-6932
  80e5bc:	e17ffe17 	ldw	r5,-8(fp)
  80e5c0:	e13ffd17 	ldw	r4,-12(fp)
  80e5c4:	080ea800 	call	80ea80 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  80e5c8:	0001883a 	nop
  80e5cc:	e037883a 	mov	sp,fp
  80e5d0:	dfc00117 	ldw	ra,4(sp)
  80e5d4:	df000017 	ldw	fp,0(sp)
  80e5d8:	dec00204 	addi	sp,sp,8
  80e5dc:	f800283a 	ret

0080e5e0 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  80e5e0:	defff504 	addi	sp,sp,-44
  80e5e4:	df000a15 	stw	fp,40(sp)
  80e5e8:	df000a04 	addi	fp,sp,40
  80e5ec:	e13ffc15 	stw	r4,-16(fp)
  80e5f0:	e17ffd15 	stw	r5,-12(fp)
  80e5f4:	e1bffe15 	stw	r6,-8(fp)
  80e5f8:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  80e5fc:	e03ff615 	stw	zero,-40(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80e600:	d0a6d817 	ldw	r2,-25760(gp)
  
  if (alt_ticks_per_second ())
  80e604:	10003c26 	beq	r2,zero,80e6f8 <alt_alarm_start+0x118>
  {
    if (alarm)
  80e608:	e0bffc17 	ldw	r2,-16(fp)
  80e60c:	10003826 	beq	r2,zero,80e6f0 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
  80e610:	e0bffc17 	ldw	r2,-16(fp)
  80e614:	e0fffe17 	ldw	r3,-8(fp)
  80e618:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  80e61c:	e0bffc17 	ldw	r2,-16(fp)
  80e620:	e0ffff17 	ldw	r3,-4(fp)
  80e624:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80e628:	0005303a 	rdctl	r2,status
  80e62c:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e630:	e0fff917 	ldw	r3,-28(fp)
  80e634:	00bfff84 	movi	r2,-2
  80e638:	1884703a 	and	r2,r3,r2
  80e63c:	1001703a 	wrctl	status,r2
  
  return context;
  80e640:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
  80e644:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80e648:	d0a6d917 	ldw	r2,-25756(gp)
      
      current_nticks = alt_nticks();
  80e64c:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  80e650:	e0fffd17 	ldw	r3,-12(fp)
  80e654:	e0bff617 	ldw	r2,-40(fp)
  80e658:	1885883a 	add	r2,r3,r2
  80e65c:	10c00044 	addi	r3,r2,1
  80e660:	e0bffc17 	ldw	r2,-16(fp)
  80e664:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  80e668:	e0bffc17 	ldw	r2,-16(fp)
  80e66c:	10c00217 	ldw	r3,8(r2)
  80e670:	e0bff617 	ldw	r2,-40(fp)
  80e674:	1880042e 	bgeu	r3,r2,80e688 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  80e678:	e0bffc17 	ldw	r2,-16(fp)
  80e67c:	00c00044 	movi	r3,1
  80e680:	10c00405 	stb	r3,16(r2)
  80e684:	00000206 	br	80e690 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  80e688:	e0bffc17 	ldw	r2,-16(fp)
  80e68c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  80e690:	e0bffc17 	ldw	r2,-16(fp)
  80e694:	d0e00e04 	addi	r3,gp,-32712
  80e698:	e0fffa15 	stw	r3,-24(fp)
  80e69c:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80e6a0:	e0bffb17 	ldw	r2,-20(fp)
  80e6a4:	e0fffa17 	ldw	r3,-24(fp)
  80e6a8:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80e6ac:	e0bffa17 	ldw	r2,-24(fp)
  80e6b0:	10c00017 	ldw	r3,0(r2)
  80e6b4:	e0bffb17 	ldw	r2,-20(fp)
  80e6b8:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80e6bc:	e0bffa17 	ldw	r2,-24(fp)
  80e6c0:	10800017 	ldw	r2,0(r2)
  80e6c4:	e0fffb17 	ldw	r3,-20(fp)
  80e6c8:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80e6cc:	e0bffa17 	ldw	r2,-24(fp)
  80e6d0:	e0fffb17 	ldw	r3,-20(fp)
  80e6d4:	10c00015 	stw	r3,0(r2)
  80e6d8:	e0bff817 	ldw	r2,-32(fp)
  80e6dc:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80e6e0:	e0bff717 	ldw	r2,-36(fp)
  80e6e4:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
  80e6e8:	0005883a 	mov	r2,zero
  80e6ec:	00000306 	br	80e6fc <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
  80e6f0:	00bffa84 	movi	r2,-22
  80e6f4:	00000106 	br	80e6fc <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
  80e6f8:	00bfde84 	movi	r2,-134
  }
}
  80e6fc:	e037883a 	mov	sp,fp
  80e700:	df000017 	ldw	fp,0(sp)
  80e704:	dec00104 	addi	sp,sp,4
  80e708:	f800283a 	ret

0080e70c <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
  80e70c:	defffa04 	addi	sp,sp,-24
  80e710:	dfc00515 	stw	ra,20(sp)
  80e714:	df000415 	stw	fp,16(sp)
  80e718:	df000404 	addi	fp,sp,16
  80e71c:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
  80e720:	008000c4 	movi	r2,3
  80e724:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
  80e728:	e0fffd17 	ldw	r3,-12(fp)
  80e72c:	008003f4 	movhi	r2,15
  80e730:	10909004 	addi	r2,r2,16960
  80e734:	1885383a 	mul	r2,r3,r2
  80e738:	100b883a 	mov	r5,r2
  80e73c:	0100bef4 	movhi	r4,763
  80e740:	213c2004 	addi	r4,r4,-3968
  80e744:	08006900 	call	800690 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
  80e748:	100b883a 	mov	r5,r2
  80e74c:	01200034 	movhi	r4,32768
  80e750:	213fffc4 	addi	r4,r4,-1
  80e754:	08006900 	call	800690 <__udivsi3>
  80e758:	100b883a 	mov	r5,r2
  80e75c:	e13fff17 	ldw	r4,-4(fp)
  80e760:	08006900 	call	800690 <__udivsi3>
  80e764:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  80e768:	e0bffe17 	ldw	r2,-8(fp)
  80e76c:	10002a26 	beq	r2,zero,80e818 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
  80e770:	e03ffc15 	stw	zero,-16(fp)
  80e774:	00001706 	br	80e7d4 <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
  80e778:	00a00034 	movhi	r2,32768
  80e77c:	10bfffc4 	addi	r2,r2,-1
  80e780:	10bfffc4 	addi	r2,r2,-1
  80e784:	103ffe1e 	bne	r2,zero,80e780 <__alt_data_end+0xff80e780>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
  80e788:	e0fffd17 	ldw	r3,-12(fp)
  80e78c:	008003f4 	movhi	r2,15
  80e790:	10909004 	addi	r2,r2,16960
  80e794:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
  80e798:	100b883a 	mov	r5,r2
  80e79c:	0100bef4 	movhi	r4,763
  80e7a0:	213c2004 	addi	r4,r4,-3968
  80e7a4:	08006900 	call	800690 <__udivsi3>
  80e7a8:	100b883a 	mov	r5,r2
  80e7ac:	01200034 	movhi	r4,32768
  80e7b0:	213fffc4 	addi	r4,r4,-1
  80e7b4:	08006900 	call	800690 <__udivsi3>
  80e7b8:	1007883a 	mov	r3,r2
  80e7bc:	e0bfff17 	ldw	r2,-4(fp)
  80e7c0:	10c5c83a 	sub	r2,r2,r3
  80e7c4:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
  80e7c8:	e0bffc17 	ldw	r2,-16(fp)
  80e7cc:	10800044 	addi	r2,r2,1
  80e7d0:	e0bffc15 	stw	r2,-16(fp)
  80e7d4:	e0fffc17 	ldw	r3,-16(fp)
  80e7d8:	e0bffe17 	ldw	r2,-8(fp)
  80e7dc:	18bfe616 	blt	r3,r2,80e778 <__alt_data_end+0xff80e778>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  80e7e0:	e0fffd17 	ldw	r3,-12(fp)
  80e7e4:	008003f4 	movhi	r2,15
  80e7e8:	10909004 	addi	r2,r2,16960
  80e7ec:	1885383a 	mul	r2,r3,r2
  80e7f0:	100b883a 	mov	r5,r2
  80e7f4:	0100bef4 	movhi	r4,763
  80e7f8:	213c2004 	addi	r4,r4,-3968
  80e7fc:	08006900 	call	800690 <__udivsi3>
  80e800:	1007883a 	mov	r3,r2
  80e804:	e0bfff17 	ldw	r2,-4(fp)
  80e808:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
  80e80c:	10bfffc4 	addi	r2,r2,-1
  80e810:	103ffe1e 	bne	r2,zero,80e80c <__alt_data_end+0xff80e80c>
  80e814:	00000d06 	br	80e84c <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  80e818:	e0fffd17 	ldw	r3,-12(fp)
  80e81c:	008003f4 	movhi	r2,15
  80e820:	10909004 	addi	r2,r2,16960
  80e824:	1885383a 	mul	r2,r3,r2
  80e828:	100b883a 	mov	r5,r2
  80e82c:	0100bef4 	movhi	r4,763
  80e830:	213c2004 	addi	r4,r4,-3968
  80e834:	08006900 	call	800690 <__udivsi3>
  80e838:	1007883a 	mov	r3,r2
  80e83c:	e0bfff17 	ldw	r2,-4(fp)
  80e840:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
  80e844:	10bfffc4 	addi	r2,r2,-1
  80e848:	00bffe16 	blt	zero,r2,80e844 <__alt_data_end+0xff80e844>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
  80e84c:	0005883a 	mov	r2,zero
}
  80e850:	e037883a 	mov	sp,fp
  80e854:	dfc00117 	ldw	ra,4(sp)
  80e858:	df000017 	ldw	fp,0(sp)
  80e85c:	dec00204 	addi	sp,sp,8
  80e860:	f800283a 	ret

0080e864 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  80e864:	defffe04 	addi	sp,sp,-8
  80e868:	df000115 	stw	fp,4(sp)
  80e86c:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80e870:	e03fff15 	stw	zero,-4(fp)
  80e874:	00000506 	br	80e88c <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  80e878:	e0bfff17 	ldw	r2,-4(fp)
  80e87c:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80e880:	e0bfff17 	ldw	r2,-4(fp)
  80e884:	10800804 	addi	r2,r2,32
  80e888:	e0bfff15 	stw	r2,-4(fp)
  80e88c:	e0bfff17 	ldw	r2,-4(fp)
  80e890:	00ffffd4 	movui	r3,65535
  80e894:	18bff82e 	bgeu	r3,r2,80e878 <__alt_data_end+0xff80e878>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  80e898:	0001883a 	nop
  80e89c:	e037883a 	mov	sp,fp
  80e8a0:	df000017 	ldw	fp,0(sp)
  80e8a4:	dec00104 	addi	sp,sp,4
  80e8a8:	f800283a 	ret

0080e8ac <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80e8ac:	defffe04 	addi	sp,sp,-8
  80e8b0:	dfc00115 	stw	ra,4(sp)
  80e8b4:	df000015 	stw	fp,0(sp)
  80e8b8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e8bc:	d0a00b17 	ldw	r2,-32724(gp)
  80e8c0:	10000326 	beq	r2,zero,80e8d0 <alt_get_errno+0x24>
  80e8c4:	d0a00b17 	ldw	r2,-32724(gp)
  80e8c8:	103ee83a 	callr	r2
  80e8cc:	00000106 	br	80e8d4 <alt_get_errno+0x28>
  80e8d0:	d0a6d304 	addi	r2,gp,-25780
}
  80e8d4:	e037883a 	mov	sp,fp
  80e8d8:	dfc00117 	ldw	ra,4(sp)
  80e8dc:	df000017 	ldw	fp,0(sp)
  80e8e0:	dec00204 	addi	sp,sp,8
  80e8e4:	f800283a 	ret

0080e8e8 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  80e8e8:	defffa04 	addi	sp,sp,-24
  80e8ec:	dfc00515 	stw	ra,20(sp)
  80e8f0:	df000415 	stw	fp,16(sp)
  80e8f4:	df000404 	addi	fp,sp,16
  80e8f8:	e13ffe15 	stw	r4,-8(fp)
  80e8fc:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  80e900:	e0bffe17 	ldw	r2,-8(fp)
  80e904:	10000326 	beq	r2,zero,80e914 <alt_dev_llist_insert+0x2c>
  80e908:	e0bffe17 	ldw	r2,-8(fp)
  80e90c:	10800217 	ldw	r2,8(r2)
  80e910:	1000061e 	bne	r2,zero,80e92c <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  80e914:	080e8ac0 	call	80e8ac <alt_get_errno>
  80e918:	1007883a 	mov	r3,r2
  80e91c:	00800584 	movi	r2,22
  80e920:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  80e924:	00bffa84 	movi	r2,-22
  80e928:	00001306 	br	80e978 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  80e92c:	e0bffe17 	ldw	r2,-8(fp)
  80e930:	e0ffff17 	ldw	r3,-4(fp)
  80e934:	e0fffc15 	stw	r3,-16(fp)
  80e938:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80e93c:	e0bffd17 	ldw	r2,-12(fp)
  80e940:	e0fffc17 	ldw	r3,-16(fp)
  80e944:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80e948:	e0bffc17 	ldw	r2,-16(fp)
  80e94c:	10c00017 	ldw	r3,0(r2)
  80e950:	e0bffd17 	ldw	r2,-12(fp)
  80e954:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80e958:	e0bffc17 	ldw	r2,-16(fp)
  80e95c:	10800017 	ldw	r2,0(r2)
  80e960:	e0fffd17 	ldw	r3,-12(fp)
  80e964:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80e968:	e0bffc17 	ldw	r2,-16(fp)
  80e96c:	e0fffd17 	ldw	r3,-12(fp)
  80e970:	10c00015 	stw	r3,0(r2)

  return 0;  
  80e974:	0005883a 	mov	r2,zero
}
  80e978:	e037883a 	mov	sp,fp
  80e97c:	dfc00117 	ldw	ra,4(sp)
  80e980:	df000017 	ldw	fp,0(sp)
  80e984:	dec00204 	addi	sp,sp,8
  80e988:	f800283a 	ret

0080e98c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  80e98c:	defffd04 	addi	sp,sp,-12
  80e990:	dfc00215 	stw	ra,8(sp)
  80e994:	df000115 	stw	fp,4(sp)
  80e998:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80e99c:	00802074 	movhi	r2,129
  80e9a0:	10be3604 	addi	r2,r2,-1832
  80e9a4:	e0bfff15 	stw	r2,-4(fp)
  80e9a8:	00000606 	br	80e9c4 <_do_ctors+0x38>
        (*ctor) (); 
  80e9ac:	e0bfff17 	ldw	r2,-4(fp)
  80e9b0:	10800017 	ldw	r2,0(r2)
  80e9b4:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80e9b8:	e0bfff17 	ldw	r2,-4(fp)
  80e9bc:	10bfff04 	addi	r2,r2,-4
  80e9c0:	e0bfff15 	stw	r2,-4(fp)
  80e9c4:	e0ffff17 	ldw	r3,-4(fp)
  80e9c8:	00802074 	movhi	r2,129
  80e9cc:	10be3704 	addi	r2,r2,-1828
  80e9d0:	18bff62e 	bgeu	r3,r2,80e9ac <__alt_data_end+0xff80e9ac>
        (*ctor) (); 
}
  80e9d4:	0001883a 	nop
  80e9d8:	e037883a 	mov	sp,fp
  80e9dc:	dfc00117 	ldw	ra,4(sp)
  80e9e0:	df000017 	ldw	fp,0(sp)
  80e9e4:	dec00204 	addi	sp,sp,8
  80e9e8:	f800283a 	ret

0080e9ec <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  80e9ec:	defffd04 	addi	sp,sp,-12
  80e9f0:	dfc00215 	stw	ra,8(sp)
  80e9f4:	df000115 	stw	fp,4(sp)
  80e9f8:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80e9fc:	00802074 	movhi	r2,129
  80ea00:	10be3604 	addi	r2,r2,-1832
  80ea04:	e0bfff15 	stw	r2,-4(fp)
  80ea08:	00000606 	br	80ea24 <_do_dtors+0x38>
        (*dtor) (); 
  80ea0c:	e0bfff17 	ldw	r2,-4(fp)
  80ea10:	10800017 	ldw	r2,0(r2)
  80ea14:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80ea18:	e0bfff17 	ldw	r2,-4(fp)
  80ea1c:	10bfff04 	addi	r2,r2,-4
  80ea20:	e0bfff15 	stw	r2,-4(fp)
  80ea24:	e0ffff17 	ldw	r3,-4(fp)
  80ea28:	00802074 	movhi	r2,129
  80ea2c:	10be3704 	addi	r2,r2,-1828
  80ea30:	18bff62e 	bgeu	r3,r2,80ea0c <__alt_data_end+0xff80ea0c>
        (*dtor) (); 
}
  80ea34:	0001883a 	nop
  80ea38:	e037883a 	mov	sp,fp
  80ea3c:	dfc00117 	ldw	ra,4(sp)
  80ea40:	df000017 	ldw	fp,0(sp)
  80ea44:	dec00204 	addi	sp,sp,8
  80ea48:	f800283a 	ret

0080ea4c <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  80ea4c:	defffe04 	addi	sp,sp,-8
  80ea50:	dfc00115 	stw	ra,4(sp)
  80ea54:	df000015 	stw	fp,0(sp)
  80ea58:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  80ea5c:	01420004 	movi	r5,2048
  80ea60:	0009883a 	mov	r4,zero
  80ea64:	080f4b80 	call	80f4b8 <alt_icache_flush>
#endif
}
  80ea68:	0001883a 	nop
  80ea6c:	e037883a 	mov	sp,fp
  80ea70:	dfc00117 	ldw	ra,4(sp)
  80ea74:	df000017 	ldw	fp,0(sp)
  80ea78:	dec00204 	addi	sp,sp,8
  80ea7c:	f800283a 	ret

0080ea80 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80ea80:	defff904 	addi	sp,sp,-28
  80ea84:	dfc00615 	stw	ra,24(sp)
  80ea88:	df000515 	stw	fp,20(sp)
  80ea8c:	df000504 	addi	fp,sp,20
  80ea90:	e13ffc15 	stw	r4,-16(fp)
  80ea94:	e17ffd15 	stw	r5,-12(fp)
  80ea98:	e1bffe15 	stw	r6,-8(fp)
  80ea9c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  80eaa0:	e0800217 	ldw	r2,8(fp)
  80eaa4:	d8800015 	stw	r2,0(sp)
  80eaa8:	e1ffff17 	ldw	r7,-4(fp)
  80eaac:	e1bffe17 	ldw	r6,-8(fp)
  80eab0:	e17ffd17 	ldw	r5,-12(fp)
  80eab4:	e13ffc17 	ldw	r4,-16(fp)
  80eab8:	080ec300 	call	80ec30 <alt_iic_isr_register>
}  
  80eabc:	e037883a 	mov	sp,fp
  80eac0:	dfc00117 	ldw	ra,4(sp)
  80eac4:	df000017 	ldw	fp,0(sp)
  80eac8:	dec00204 	addi	sp,sp,8
  80eacc:	f800283a 	ret

0080ead0 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  80ead0:	defff904 	addi	sp,sp,-28
  80ead4:	df000615 	stw	fp,24(sp)
  80ead8:	df000604 	addi	fp,sp,24
  80eadc:	e13ffe15 	stw	r4,-8(fp)
  80eae0:	e17fff15 	stw	r5,-4(fp)
  80eae4:	e0bfff17 	ldw	r2,-4(fp)
  80eae8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80eaec:	0005303a 	rdctl	r2,status
  80eaf0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80eaf4:	e0fffb17 	ldw	r3,-20(fp)
  80eaf8:	00bfff84 	movi	r2,-2
  80eafc:	1884703a 	and	r2,r3,r2
  80eb00:	1001703a 	wrctl	status,r2
  
  return context;
  80eb04:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80eb08:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
  80eb0c:	00c00044 	movi	r3,1
  80eb10:	e0bffa17 	ldw	r2,-24(fp)
  80eb14:	1884983a 	sll	r2,r3,r2
  80eb18:	1007883a 	mov	r3,r2
  80eb1c:	d0a6d717 	ldw	r2,-25764(gp)
  80eb20:	1884b03a 	or	r2,r3,r2
  80eb24:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80eb28:	d0a6d717 	ldw	r2,-25764(gp)
  80eb2c:	100170fa 	wrctl	ienable,r2
  80eb30:	e0bffc17 	ldw	r2,-16(fp)
  80eb34:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80eb38:	e0bffd17 	ldw	r2,-12(fp)
  80eb3c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80eb40:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
  80eb44:	0001883a 	nop
}
  80eb48:	e037883a 	mov	sp,fp
  80eb4c:	df000017 	ldw	fp,0(sp)
  80eb50:	dec00104 	addi	sp,sp,4
  80eb54:	f800283a 	ret

0080eb58 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  80eb58:	defff904 	addi	sp,sp,-28
  80eb5c:	df000615 	stw	fp,24(sp)
  80eb60:	df000604 	addi	fp,sp,24
  80eb64:	e13ffe15 	stw	r4,-8(fp)
  80eb68:	e17fff15 	stw	r5,-4(fp)
  80eb6c:	e0bfff17 	ldw	r2,-4(fp)
  80eb70:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80eb74:	0005303a 	rdctl	r2,status
  80eb78:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80eb7c:	e0fffb17 	ldw	r3,-20(fp)
  80eb80:	00bfff84 	movi	r2,-2
  80eb84:	1884703a 	and	r2,r3,r2
  80eb88:	1001703a 	wrctl	status,r2
  
  return context;
  80eb8c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80eb90:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
  80eb94:	00c00044 	movi	r3,1
  80eb98:	e0bffa17 	ldw	r2,-24(fp)
  80eb9c:	1884983a 	sll	r2,r3,r2
  80eba0:	0084303a 	nor	r2,zero,r2
  80eba4:	1007883a 	mov	r3,r2
  80eba8:	d0a6d717 	ldw	r2,-25764(gp)
  80ebac:	1884703a 	and	r2,r3,r2
  80ebb0:	d0a6d715 	stw	r2,-25764(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80ebb4:	d0a6d717 	ldw	r2,-25764(gp)
  80ebb8:	100170fa 	wrctl	ienable,r2
  80ebbc:	e0bffc17 	ldw	r2,-16(fp)
  80ebc0:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80ebc4:	e0bffd17 	ldw	r2,-12(fp)
  80ebc8:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80ebcc:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
  80ebd0:	0001883a 	nop
}
  80ebd4:	e037883a 	mov	sp,fp
  80ebd8:	df000017 	ldw	fp,0(sp)
  80ebdc:	dec00104 	addi	sp,sp,4
  80ebe0:	f800283a 	ret

0080ebe4 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  80ebe4:	defffc04 	addi	sp,sp,-16
  80ebe8:	df000315 	stw	fp,12(sp)
  80ebec:	df000304 	addi	fp,sp,12
  80ebf0:	e13ffe15 	stw	r4,-8(fp)
  80ebf4:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  80ebf8:	000530fa 	rdctl	r2,ienable
  80ebfc:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  80ec00:	00c00044 	movi	r3,1
  80ec04:	e0bfff17 	ldw	r2,-4(fp)
  80ec08:	1884983a 	sll	r2,r3,r2
  80ec0c:	1007883a 	mov	r3,r2
  80ec10:	e0bffd17 	ldw	r2,-12(fp)
  80ec14:	1884703a 	and	r2,r3,r2
  80ec18:	1004c03a 	cmpne	r2,r2,zero
  80ec1c:	10803fcc 	andi	r2,r2,255
}
  80ec20:	e037883a 	mov	sp,fp
  80ec24:	df000017 	ldw	fp,0(sp)
  80ec28:	dec00104 	addi	sp,sp,4
  80ec2c:	f800283a 	ret

0080ec30 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80ec30:	defff504 	addi	sp,sp,-44
  80ec34:	dfc00a15 	stw	ra,40(sp)
  80ec38:	df000915 	stw	fp,36(sp)
  80ec3c:	df000904 	addi	fp,sp,36
  80ec40:	e13ffc15 	stw	r4,-16(fp)
  80ec44:	e17ffd15 	stw	r5,-12(fp)
  80ec48:	e1bffe15 	stw	r6,-8(fp)
  80ec4c:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
  80ec50:	00bffa84 	movi	r2,-22
  80ec54:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  80ec58:	e0bffd17 	ldw	r2,-12(fp)
  80ec5c:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  80ec60:	e0bff817 	ldw	r2,-32(fp)
  80ec64:	10800808 	cmpgei	r2,r2,32
  80ec68:	1000271e 	bne	r2,zero,80ed08 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80ec6c:	0005303a 	rdctl	r2,status
  80ec70:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ec74:	e0fffb17 	ldw	r3,-20(fp)
  80ec78:	00bfff84 	movi	r2,-2
  80ec7c:	1884703a 	and	r2,r3,r2
  80ec80:	1001703a 	wrctl	status,r2
  
  return context;
  80ec84:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  80ec88:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
  80ec8c:	00802074 	movhi	r2,129
  80ec90:	108cbc04 	addi	r2,r2,13040
  80ec94:	e0fff817 	ldw	r3,-32(fp)
  80ec98:	180690fa 	slli	r3,r3,3
  80ec9c:	10c5883a 	add	r2,r2,r3
  80eca0:	e0fffe17 	ldw	r3,-8(fp)
  80eca4:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
  80eca8:	00802074 	movhi	r2,129
  80ecac:	108cbc04 	addi	r2,r2,13040
  80ecb0:	e0fff817 	ldw	r3,-32(fp)
  80ecb4:	180690fa 	slli	r3,r3,3
  80ecb8:	10c5883a 	add	r2,r2,r3
  80ecbc:	10800104 	addi	r2,r2,4
  80ecc0:	e0ffff17 	ldw	r3,-4(fp)
  80ecc4:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  80ecc8:	e0bffe17 	ldw	r2,-8(fp)
  80eccc:	10000526 	beq	r2,zero,80ece4 <alt_iic_isr_register+0xb4>
  80ecd0:	e0bff817 	ldw	r2,-32(fp)
  80ecd4:	100b883a 	mov	r5,r2
  80ecd8:	e13ffc17 	ldw	r4,-16(fp)
  80ecdc:	080ead00 	call	80ead0 <alt_ic_irq_enable>
  80ece0:	00000406 	br	80ecf4 <alt_iic_isr_register+0xc4>
  80ece4:	e0bff817 	ldw	r2,-32(fp)
  80ece8:	100b883a 	mov	r5,r2
  80ecec:	e13ffc17 	ldw	r4,-16(fp)
  80ecf0:	080eb580 	call	80eb58 <alt_ic_irq_disable>
  80ecf4:	e0bff715 	stw	r2,-36(fp)
  80ecf8:	e0bffa17 	ldw	r2,-24(fp)
  80ecfc:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80ed00:	e0bff917 	ldw	r2,-28(fp)
  80ed04:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  80ed08:	e0bff717 	ldw	r2,-36(fp)
}
  80ed0c:	e037883a 	mov	sp,fp
  80ed10:	dfc00117 	ldw	ra,4(sp)
  80ed14:	df000017 	ldw	fp,0(sp)
  80ed18:	dec00204 	addi	sp,sp,8
  80ed1c:	f800283a 	ret

0080ed20 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  80ed20:	defff904 	addi	sp,sp,-28
  80ed24:	dfc00615 	stw	ra,24(sp)
  80ed28:	df000515 	stw	fp,20(sp)
  80ed2c:	df000504 	addi	fp,sp,20
  80ed30:	e13ffc15 	stw	r4,-16(fp)
  80ed34:	e17ffd15 	stw	r5,-12(fp)
  80ed38:	e1bffe15 	stw	r6,-8(fp)
  80ed3c:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  80ed40:	e1bfff17 	ldw	r6,-4(fp)
  80ed44:	e17ffe17 	ldw	r5,-8(fp)
  80ed48:	e13ffd17 	ldw	r4,-12(fp)
  80ed4c:	080ef600 	call	80ef60 <open>
  80ed50:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  80ed54:	e0bffb17 	ldw	r2,-20(fp)
  80ed58:	10001c16 	blt	r2,zero,80edcc <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
  80ed5c:	00802074 	movhi	r2,129
  80ed60:	10816004 	addi	r2,r2,1408
  80ed64:	e0fffb17 	ldw	r3,-20(fp)
  80ed68:	18c00324 	muli	r3,r3,12
  80ed6c:	10c5883a 	add	r2,r2,r3
  80ed70:	10c00017 	ldw	r3,0(r2)
  80ed74:	e0bffc17 	ldw	r2,-16(fp)
  80ed78:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  80ed7c:	00802074 	movhi	r2,129
  80ed80:	10816004 	addi	r2,r2,1408
  80ed84:	e0fffb17 	ldw	r3,-20(fp)
  80ed88:	18c00324 	muli	r3,r3,12
  80ed8c:	10c5883a 	add	r2,r2,r3
  80ed90:	10800104 	addi	r2,r2,4
  80ed94:	10c00017 	ldw	r3,0(r2)
  80ed98:	e0bffc17 	ldw	r2,-16(fp)
  80ed9c:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  80eda0:	00802074 	movhi	r2,129
  80eda4:	10816004 	addi	r2,r2,1408
  80eda8:	e0fffb17 	ldw	r3,-20(fp)
  80edac:	18c00324 	muli	r3,r3,12
  80edb0:	10c5883a 	add	r2,r2,r3
  80edb4:	10800204 	addi	r2,r2,8
  80edb8:	10c00017 	ldw	r3,0(r2)
  80edbc:	e0bffc17 	ldw	r2,-16(fp)
  80edc0:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  80edc4:	e13ffb17 	ldw	r4,-20(fp)
  80edc8:	080d73c0 	call	80d73c <alt_release_fd>
  }
} 
  80edcc:	0001883a 	nop
  80edd0:	e037883a 	mov	sp,fp
  80edd4:	dfc00117 	ldw	ra,4(sp)
  80edd8:	df000017 	ldw	fp,0(sp)
  80eddc:	dec00204 	addi	sp,sp,8
  80ede0:	f800283a 	ret

0080ede4 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  80ede4:	defffb04 	addi	sp,sp,-20
  80ede8:	dfc00415 	stw	ra,16(sp)
  80edec:	df000315 	stw	fp,12(sp)
  80edf0:	df000304 	addi	fp,sp,12
  80edf4:	e13ffd15 	stw	r4,-12(fp)
  80edf8:	e17ffe15 	stw	r5,-8(fp)
  80edfc:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  80ee00:	01c07fc4 	movi	r7,511
  80ee04:	01800044 	movi	r6,1
  80ee08:	e17ffd17 	ldw	r5,-12(fp)
  80ee0c:	01002074 	movhi	r4,129
  80ee10:	21016304 	addi	r4,r4,1420
  80ee14:	080ed200 	call	80ed20 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  80ee18:	01c07fc4 	movi	r7,511
  80ee1c:	000d883a 	mov	r6,zero
  80ee20:	e17ffe17 	ldw	r5,-8(fp)
  80ee24:	01002074 	movhi	r4,129
  80ee28:	21016004 	addi	r4,r4,1408
  80ee2c:	080ed200 	call	80ed20 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  80ee30:	01c07fc4 	movi	r7,511
  80ee34:	01800044 	movi	r6,1
  80ee38:	e17fff17 	ldw	r5,-4(fp)
  80ee3c:	01002074 	movhi	r4,129
  80ee40:	21016604 	addi	r4,r4,1432
  80ee44:	080ed200 	call	80ed20 <alt_open_fd>
}  
  80ee48:	0001883a 	nop
  80ee4c:	e037883a 	mov	sp,fp
  80ee50:	dfc00117 	ldw	ra,4(sp)
  80ee54:	df000017 	ldw	fp,0(sp)
  80ee58:	dec00204 	addi	sp,sp,8
  80ee5c:	f800283a 	ret

0080ee60 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80ee60:	defffe04 	addi	sp,sp,-8
  80ee64:	dfc00115 	stw	ra,4(sp)
  80ee68:	df000015 	stw	fp,0(sp)
  80ee6c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80ee70:	d0a00b17 	ldw	r2,-32724(gp)
  80ee74:	10000326 	beq	r2,zero,80ee84 <alt_get_errno+0x24>
  80ee78:	d0a00b17 	ldw	r2,-32724(gp)
  80ee7c:	103ee83a 	callr	r2
  80ee80:	00000106 	br	80ee88 <alt_get_errno+0x28>
  80ee84:	d0a6d304 	addi	r2,gp,-25780
}
  80ee88:	e037883a 	mov	sp,fp
  80ee8c:	dfc00117 	ldw	ra,4(sp)
  80ee90:	df000017 	ldw	fp,0(sp)
  80ee94:	dec00204 	addi	sp,sp,8
  80ee98:	f800283a 	ret

0080ee9c <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  80ee9c:	defffd04 	addi	sp,sp,-12
  80eea0:	df000215 	stw	fp,8(sp)
  80eea4:	df000204 	addi	fp,sp,8
  80eea8:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  80eeac:	e0bfff17 	ldw	r2,-4(fp)
  80eeb0:	10800217 	ldw	r2,8(r2)
  80eeb4:	10d00034 	orhi	r3,r2,16384
  80eeb8:	e0bfff17 	ldw	r2,-4(fp)
  80eebc:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80eec0:	e03ffe15 	stw	zero,-8(fp)
  80eec4:	00001d06 	br	80ef3c <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80eec8:	00802074 	movhi	r2,129
  80eecc:	10816004 	addi	r2,r2,1408
  80eed0:	e0fffe17 	ldw	r3,-8(fp)
  80eed4:	18c00324 	muli	r3,r3,12
  80eed8:	10c5883a 	add	r2,r2,r3
  80eedc:	10c00017 	ldw	r3,0(r2)
  80eee0:	e0bfff17 	ldw	r2,-4(fp)
  80eee4:	10800017 	ldw	r2,0(r2)
  80eee8:	1880111e 	bne	r3,r2,80ef30 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80eeec:	00802074 	movhi	r2,129
  80eef0:	10816004 	addi	r2,r2,1408
  80eef4:	e0fffe17 	ldw	r3,-8(fp)
  80eef8:	18c00324 	muli	r3,r3,12
  80eefc:	10c5883a 	add	r2,r2,r3
  80ef00:	10800204 	addi	r2,r2,8
  80ef04:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80ef08:	1000090e 	bge	r2,zero,80ef30 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  80ef0c:	e0bffe17 	ldw	r2,-8(fp)
  80ef10:	10c00324 	muli	r3,r2,12
  80ef14:	00802074 	movhi	r2,129
  80ef18:	10816004 	addi	r2,r2,1408
  80ef1c:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80ef20:	e0bfff17 	ldw	r2,-4(fp)
  80ef24:	18800226 	beq	r3,r2,80ef30 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  80ef28:	00bffcc4 	movi	r2,-13
  80ef2c:	00000806 	br	80ef50 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80ef30:	e0bffe17 	ldw	r2,-8(fp)
  80ef34:	10800044 	addi	r2,r2,1
  80ef38:	e0bffe15 	stw	r2,-8(fp)
  80ef3c:	d0a00a17 	ldw	r2,-32728(gp)
  80ef40:	1007883a 	mov	r3,r2
  80ef44:	e0bffe17 	ldw	r2,-8(fp)
  80ef48:	18bfdf2e 	bgeu	r3,r2,80eec8 <__alt_data_end+0xff80eec8>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  80ef4c:	0005883a 	mov	r2,zero
}
  80ef50:	e037883a 	mov	sp,fp
  80ef54:	df000017 	ldw	fp,0(sp)
  80ef58:	dec00104 	addi	sp,sp,4
  80ef5c:	f800283a 	ret

0080ef60 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  80ef60:	defff604 	addi	sp,sp,-40
  80ef64:	dfc00915 	stw	ra,36(sp)
  80ef68:	df000815 	stw	fp,32(sp)
  80ef6c:	df000804 	addi	fp,sp,32
  80ef70:	e13ffd15 	stw	r4,-12(fp)
  80ef74:	e17ffe15 	stw	r5,-8(fp)
  80ef78:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  80ef7c:	00bfffc4 	movi	r2,-1
  80ef80:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  80ef84:	00bffb44 	movi	r2,-19
  80ef88:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  80ef8c:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  80ef90:	d1600804 	addi	r5,gp,-32736
  80ef94:	e13ffd17 	ldw	r4,-12(fp)
  80ef98:	080f27c0 	call	80f27c <alt_find_dev>
  80ef9c:	e0bff815 	stw	r2,-32(fp)
  80efa0:	e0bff817 	ldw	r2,-32(fp)
  80efa4:	1000051e 	bne	r2,zero,80efbc <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  80efa8:	e13ffd17 	ldw	r4,-12(fp)
  80efac:	080f30c0 	call	80f30c <alt_find_file>
  80efb0:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  80efb4:	00800044 	movi	r2,1
  80efb8:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  80efbc:	e0bff817 	ldw	r2,-32(fp)
  80efc0:	10002926 	beq	r2,zero,80f068 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
  80efc4:	e13ff817 	ldw	r4,-32(fp)
  80efc8:	080f4140 	call	80f414 <alt_get_fd>
  80efcc:	e0bff915 	stw	r2,-28(fp)
  80efd0:	e0bff917 	ldw	r2,-28(fp)
  80efd4:	1000030e 	bge	r2,zero,80efe4 <open+0x84>
    {
      status = index;
  80efd8:	e0bff917 	ldw	r2,-28(fp)
  80efdc:	e0bffa15 	stw	r2,-24(fp)
  80efe0:	00002306 	br	80f070 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
  80efe4:	e0bff917 	ldw	r2,-28(fp)
  80efe8:	10c00324 	muli	r3,r2,12
  80efec:	00802074 	movhi	r2,129
  80eff0:	10816004 	addi	r2,r2,1408
  80eff4:	1885883a 	add	r2,r3,r2
  80eff8:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  80effc:	e0fffe17 	ldw	r3,-8(fp)
  80f000:	00900034 	movhi	r2,16384
  80f004:	10bfffc4 	addi	r2,r2,-1
  80f008:	1886703a 	and	r3,r3,r2
  80f00c:	e0bffc17 	ldw	r2,-16(fp)
  80f010:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  80f014:	e0bffb17 	ldw	r2,-20(fp)
  80f018:	1000051e 	bne	r2,zero,80f030 <open+0xd0>
  80f01c:	e13ffc17 	ldw	r4,-16(fp)
  80f020:	080ee9c0 	call	80ee9c <alt_file_locked>
  80f024:	e0bffa15 	stw	r2,-24(fp)
  80f028:	e0bffa17 	ldw	r2,-24(fp)
  80f02c:	10001016 	blt	r2,zero,80f070 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  80f030:	e0bff817 	ldw	r2,-32(fp)
  80f034:	10800317 	ldw	r2,12(r2)
  80f038:	10000826 	beq	r2,zero,80f05c <open+0xfc>
  80f03c:	e0bff817 	ldw	r2,-32(fp)
  80f040:	10800317 	ldw	r2,12(r2)
  80f044:	e1ffff17 	ldw	r7,-4(fp)
  80f048:	e1bffe17 	ldw	r6,-8(fp)
  80f04c:	e17ffd17 	ldw	r5,-12(fp)
  80f050:	e13ffc17 	ldw	r4,-16(fp)
  80f054:	103ee83a 	callr	r2
  80f058:	00000106 	br	80f060 <open+0x100>
  80f05c:	0005883a 	mov	r2,zero
  80f060:	e0bffa15 	stw	r2,-24(fp)
  80f064:	00000206 	br	80f070 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
  80f068:	00bffb44 	movi	r2,-19
  80f06c:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  80f070:	e0bffa17 	ldw	r2,-24(fp)
  80f074:	1000090e 	bge	r2,zero,80f09c <open+0x13c>
  {
    alt_release_fd (index);  
  80f078:	e13ff917 	ldw	r4,-28(fp)
  80f07c:	080d73c0 	call	80d73c <alt_release_fd>
    ALT_ERRNO = -status;
  80f080:	080ee600 	call	80ee60 <alt_get_errno>
  80f084:	1007883a 	mov	r3,r2
  80f088:	e0bffa17 	ldw	r2,-24(fp)
  80f08c:	0085c83a 	sub	r2,zero,r2
  80f090:	18800015 	stw	r2,0(r3)
    return -1;
  80f094:	00bfffc4 	movi	r2,-1
  80f098:	00000106 	br	80f0a0 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
  80f09c:	e0bff917 	ldw	r2,-28(fp)
}
  80f0a0:	e037883a 	mov	sp,fp
  80f0a4:	dfc00117 	ldw	ra,4(sp)
  80f0a8:	df000017 	ldw	fp,0(sp)
  80f0ac:	dec00204 	addi	sp,sp,8
  80f0b0:	f800283a 	ret

0080f0b4 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  80f0b4:	defffa04 	addi	sp,sp,-24
  80f0b8:	df000515 	stw	fp,20(sp)
  80f0bc:	df000504 	addi	fp,sp,20
  80f0c0:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80f0c4:	0005303a 	rdctl	r2,status
  80f0c8:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f0cc:	e0fffc17 	ldw	r3,-16(fp)
  80f0d0:	00bfff84 	movi	r2,-2
  80f0d4:	1884703a 	and	r2,r3,r2
  80f0d8:	1001703a 	wrctl	status,r2
  
  return context;
  80f0dc:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  80f0e0:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  80f0e4:	e0bfff17 	ldw	r2,-4(fp)
  80f0e8:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  80f0ec:	e0bffd17 	ldw	r2,-12(fp)
  80f0f0:	10800017 	ldw	r2,0(r2)
  80f0f4:	e0fffd17 	ldw	r3,-12(fp)
  80f0f8:	18c00117 	ldw	r3,4(r3)
  80f0fc:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  80f100:	e0bffd17 	ldw	r2,-12(fp)
  80f104:	10800117 	ldw	r2,4(r2)
  80f108:	e0fffd17 	ldw	r3,-12(fp)
  80f10c:	18c00017 	ldw	r3,0(r3)
  80f110:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  80f114:	e0bffd17 	ldw	r2,-12(fp)
  80f118:	e0fffd17 	ldw	r3,-12(fp)
  80f11c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  80f120:	e0bffd17 	ldw	r2,-12(fp)
  80f124:	e0fffd17 	ldw	r3,-12(fp)
  80f128:	10c00015 	stw	r3,0(r2)
  80f12c:	e0bffb17 	ldw	r2,-20(fp)
  80f130:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80f134:	e0bffe17 	ldw	r2,-8(fp)
  80f138:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  80f13c:	0001883a 	nop
  80f140:	e037883a 	mov	sp,fp
  80f144:	df000017 	ldw	fp,0(sp)
  80f148:	dec00104 	addi	sp,sp,4
  80f14c:	f800283a 	ret

0080f150 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  80f150:	defffb04 	addi	sp,sp,-20
  80f154:	dfc00415 	stw	ra,16(sp)
  80f158:	df000315 	stw	fp,12(sp)
  80f15c:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  80f160:	d0a00e17 	ldw	r2,-32712(gp)
  80f164:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  80f168:	d0a6d917 	ldw	r2,-25756(gp)
  80f16c:	10800044 	addi	r2,r2,1
  80f170:	d0a6d915 	stw	r2,-25756(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80f174:	00002e06 	br	80f230 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  80f178:	e0bffd17 	ldw	r2,-12(fp)
  80f17c:	10800017 	ldw	r2,0(r2)
  80f180:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  80f184:	e0bffd17 	ldw	r2,-12(fp)
  80f188:	10800403 	ldbu	r2,16(r2)
  80f18c:	10803fcc 	andi	r2,r2,255
  80f190:	10000426 	beq	r2,zero,80f1a4 <alt_tick+0x54>
  80f194:	d0a6d917 	ldw	r2,-25756(gp)
  80f198:	1000021e 	bne	r2,zero,80f1a4 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  80f19c:	e0bffd17 	ldw	r2,-12(fp)
  80f1a0:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  80f1a4:	e0bffd17 	ldw	r2,-12(fp)
  80f1a8:	10800217 	ldw	r2,8(r2)
  80f1ac:	d0e6d917 	ldw	r3,-25756(gp)
  80f1b0:	18801d36 	bltu	r3,r2,80f228 <alt_tick+0xd8>
  80f1b4:	e0bffd17 	ldw	r2,-12(fp)
  80f1b8:	10800403 	ldbu	r2,16(r2)
  80f1bc:	10803fcc 	andi	r2,r2,255
  80f1c0:	1000191e 	bne	r2,zero,80f228 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  80f1c4:	e0bffd17 	ldw	r2,-12(fp)
  80f1c8:	10800317 	ldw	r2,12(r2)
  80f1cc:	e0fffd17 	ldw	r3,-12(fp)
  80f1d0:	18c00517 	ldw	r3,20(r3)
  80f1d4:	1809883a 	mov	r4,r3
  80f1d8:	103ee83a 	callr	r2
  80f1dc:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  80f1e0:	e0bfff17 	ldw	r2,-4(fp)
  80f1e4:	1000031e 	bne	r2,zero,80f1f4 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  80f1e8:	e13ffd17 	ldw	r4,-12(fp)
  80f1ec:	080f0b40 	call	80f0b4 <alt_alarm_stop>
  80f1f0:	00000d06 	br	80f228 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  80f1f4:	e0bffd17 	ldw	r2,-12(fp)
  80f1f8:	10c00217 	ldw	r3,8(r2)
  80f1fc:	e0bfff17 	ldw	r2,-4(fp)
  80f200:	1887883a 	add	r3,r3,r2
  80f204:	e0bffd17 	ldw	r2,-12(fp)
  80f208:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  80f20c:	e0bffd17 	ldw	r2,-12(fp)
  80f210:	10c00217 	ldw	r3,8(r2)
  80f214:	d0a6d917 	ldw	r2,-25756(gp)
  80f218:	1880032e 	bgeu	r3,r2,80f228 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  80f21c:	e0bffd17 	ldw	r2,-12(fp)
  80f220:	00c00044 	movi	r3,1
  80f224:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  80f228:	e0bffe17 	ldw	r2,-8(fp)
  80f22c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80f230:	e0fffd17 	ldw	r3,-12(fp)
  80f234:	d0a00e04 	addi	r2,gp,-32712
  80f238:	18bfcf1e 	bne	r3,r2,80f178 <__alt_data_end+0xff80f178>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  80f23c:	0001883a 	nop
}
  80f240:	0001883a 	nop
  80f244:	e037883a 	mov	sp,fp
  80f248:	dfc00117 	ldw	ra,4(sp)
  80f24c:	df000017 	ldw	fp,0(sp)
  80f250:	dec00204 	addi	sp,sp,8
  80f254:	f800283a 	ret

0080f258 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
  80f258:	deffff04 	addi	sp,sp,-4
  80f25c:	df000015 	stw	fp,0(sp)
  80f260:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  80f264:	000170fa 	wrctl	ienable,zero
}
  80f268:	0001883a 	nop
  80f26c:	e037883a 	mov	sp,fp
  80f270:	df000017 	ldw	fp,0(sp)
  80f274:	dec00104 	addi	sp,sp,4
  80f278:	f800283a 	ret

0080f27c <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  80f27c:	defffa04 	addi	sp,sp,-24
  80f280:	dfc00515 	stw	ra,20(sp)
  80f284:	df000415 	stw	fp,16(sp)
  80f288:	df000404 	addi	fp,sp,16
  80f28c:	e13ffe15 	stw	r4,-8(fp)
  80f290:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  80f294:	e0bfff17 	ldw	r2,-4(fp)
  80f298:	10800017 	ldw	r2,0(r2)
  80f29c:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  80f2a0:	e13ffe17 	ldw	r4,-8(fp)
  80f2a4:	08008ac0 	call	8008ac <strlen>
  80f2a8:	10800044 	addi	r2,r2,1
  80f2ac:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80f2b0:	00000d06 	br	80f2e8 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  80f2b4:	e0bffc17 	ldw	r2,-16(fp)
  80f2b8:	10800217 	ldw	r2,8(r2)
  80f2bc:	e0fffd17 	ldw	r3,-12(fp)
  80f2c0:	180d883a 	mov	r6,r3
  80f2c4:	e17ffe17 	ldw	r5,-8(fp)
  80f2c8:	1009883a 	mov	r4,r2
  80f2cc:	080f5940 	call	80f594 <memcmp>
  80f2d0:	1000021e 	bne	r2,zero,80f2dc <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  80f2d4:	e0bffc17 	ldw	r2,-16(fp)
  80f2d8:	00000706 	br	80f2f8 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  80f2dc:	e0bffc17 	ldw	r2,-16(fp)
  80f2e0:	10800017 	ldw	r2,0(r2)
  80f2e4:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80f2e8:	e0fffc17 	ldw	r3,-16(fp)
  80f2ec:	e0bfff17 	ldw	r2,-4(fp)
  80f2f0:	18bff01e 	bne	r3,r2,80f2b4 <__alt_data_end+0xff80f2b4>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  80f2f4:	0005883a 	mov	r2,zero
}
  80f2f8:	e037883a 	mov	sp,fp
  80f2fc:	dfc00117 	ldw	ra,4(sp)
  80f300:	df000017 	ldw	fp,0(sp)
  80f304:	dec00204 	addi	sp,sp,8
  80f308:	f800283a 	ret

0080f30c <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  80f30c:	defffb04 	addi	sp,sp,-20
  80f310:	dfc00415 	stw	ra,16(sp)
  80f314:	df000315 	stw	fp,12(sp)
  80f318:	df000304 	addi	fp,sp,12
  80f31c:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  80f320:	d0a00617 	ldw	r2,-32744(gp)
  80f324:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  80f328:	00003106 	br	80f3f0 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  80f32c:	e0bffd17 	ldw	r2,-12(fp)
  80f330:	10800217 	ldw	r2,8(r2)
  80f334:	1009883a 	mov	r4,r2
  80f338:	08008ac0 	call	8008ac <strlen>
  80f33c:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  80f340:	e0bffd17 	ldw	r2,-12(fp)
  80f344:	10c00217 	ldw	r3,8(r2)
  80f348:	e0bffe17 	ldw	r2,-8(fp)
  80f34c:	10bfffc4 	addi	r2,r2,-1
  80f350:	1885883a 	add	r2,r3,r2
  80f354:	10800003 	ldbu	r2,0(r2)
  80f358:	10803fcc 	andi	r2,r2,255
  80f35c:	1080201c 	xori	r2,r2,128
  80f360:	10bfe004 	addi	r2,r2,-128
  80f364:	10800bd8 	cmpnei	r2,r2,47
  80f368:	1000031e 	bne	r2,zero,80f378 <alt_find_file+0x6c>
    {
      len -= 1;
  80f36c:	e0bffe17 	ldw	r2,-8(fp)
  80f370:	10bfffc4 	addi	r2,r2,-1
  80f374:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  80f378:	e0bffe17 	ldw	r2,-8(fp)
  80f37c:	e0ffff17 	ldw	r3,-4(fp)
  80f380:	1885883a 	add	r2,r3,r2
  80f384:	10800003 	ldbu	r2,0(r2)
  80f388:	10803fcc 	andi	r2,r2,255
  80f38c:	1080201c 	xori	r2,r2,128
  80f390:	10bfe004 	addi	r2,r2,-128
  80f394:	10800be0 	cmpeqi	r2,r2,47
  80f398:	1000081e 	bne	r2,zero,80f3bc <alt_find_file+0xb0>
  80f39c:	e0bffe17 	ldw	r2,-8(fp)
  80f3a0:	e0ffff17 	ldw	r3,-4(fp)
  80f3a4:	1885883a 	add	r2,r3,r2
  80f3a8:	10800003 	ldbu	r2,0(r2)
  80f3ac:	10803fcc 	andi	r2,r2,255
  80f3b0:	1080201c 	xori	r2,r2,128
  80f3b4:	10bfe004 	addi	r2,r2,-128
  80f3b8:	10000a1e 	bne	r2,zero,80f3e4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  80f3bc:	e0bffd17 	ldw	r2,-12(fp)
  80f3c0:	10800217 	ldw	r2,8(r2)
  80f3c4:	e0fffe17 	ldw	r3,-8(fp)
  80f3c8:	180d883a 	mov	r6,r3
  80f3cc:	e17fff17 	ldw	r5,-4(fp)
  80f3d0:	1009883a 	mov	r4,r2
  80f3d4:	080f5940 	call	80f594 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  80f3d8:	1000021e 	bne	r2,zero,80f3e4 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  80f3dc:	e0bffd17 	ldw	r2,-12(fp)
  80f3e0:	00000706 	br	80f400 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  80f3e4:	e0bffd17 	ldw	r2,-12(fp)
  80f3e8:	10800017 	ldw	r2,0(r2)
  80f3ec:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  80f3f0:	e0fffd17 	ldw	r3,-12(fp)
  80f3f4:	d0a00604 	addi	r2,gp,-32744
  80f3f8:	18bfcc1e 	bne	r3,r2,80f32c <__alt_data_end+0xff80f32c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  80f3fc:	0005883a 	mov	r2,zero
}
  80f400:	e037883a 	mov	sp,fp
  80f404:	dfc00117 	ldw	ra,4(sp)
  80f408:	df000017 	ldw	fp,0(sp)
  80f40c:	dec00204 	addi	sp,sp,8
  80f410:	f800283a 	ret

0080f414 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  80f414:	defffc04 	addi	sp,sp,-16
  80f418:	df000315 	stw	fp,12(sp)
  80f41c:	df000304 	addi	fp,sp,12
  80f420:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  80f424:	00bffa04 	movi	r2,-24
  80f428:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  80f42c:	e03ffd15 	stw	zero,-12(fp)
  80f430:	00001906 	br	80f498 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
  80f434:	00802074 	movhi	r2,129
  80f438:	10816004 	addi	r2,r2,1408
  80f43c:	e0fffd17 	ldw	r3,-12(fp)
  80f440:	18c00324 	muli	r3,r3,12
  80f444:	10c5883a 	add	r2,r2,r3
  80f448:	10800017 	ldw	r2,0(r2)
  80f44c:	10000f1e 	bne	r2,zero,80f48c <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
  80f450:	00802074 	movhi	r2,129
  80f454:	10816004 	addi	r2,r2,1408
  80f458:	e0fffd17 	ldw	r3,-12(fp)
  80f45c:	18c00324 	muli	r3,r3,12
  80f460:	10c5883a 	add	r2,r2,r3
  80f464:	e0ffff17 	ldw	r3,-4(fp)
  80f468:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  80f46c:	d0e00a17 	ldw	r3,-32728(gp)
  80f470:	e0bffd17 	ldw	r2,-12(fp)
  80f474:	1880020e 	bge	r3,r2,80f480 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
  80f478:	e0bffd17 	ldw	r2,-12(fp)
  80f47c:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
  80f480:	e0bffd17 	ldw	r2,-12(fp)
  80f484:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  80f488:	00000606 	br	80f4a4 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  80f48c:	e0bffd17 	ldw	r2,-12(fp)
  80f490:	10800044 	addi	r2,r2,1
  80f494:	e0bffd15 	stw	r2,-12(fp)
  80f498:	e0bffd17 	ldw	r2,-12(fp)
  80f49c:	10800810 	cmplti	r2,r2,32
  80f4a0:	103fe41e 	bne	r2,zero,80f434 <__alt_data_end+0xff80f434>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  80f4a4:	e0bffe17 	ldw	r2,-8(fp)
}
  80f4a8:	e037883a 	mov	sp,fp
  80f4ac:	df000017 	ldw	fp,0(sp)
  80f4b0:	dec00104 	addi	sp,sp,4
  80f4b4:	f800283a 	ret

0080f4b8 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  80f4b8:	defffb04 	addi	sp,sp,-20
  80f4bc:	df000415 	stw	fp,16(sp)
  80f4c0:	df000404 	addi	fp,sp,16
  80f4c4:	e13ffe15 	stw	r4,-8(fp)
  80f4c8:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  80f4cc:	e0bfff17 	ldw	r2,-4(fp)
  80f4d0:	10820070 	cmpltui	r2,r2,2049
  80f4d4:	1000021e 	bne	r2,zero,80f4e0 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  80f4d8:	00820004 	movi	r2,2048
  80f4dc:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  80f4e0:	e0fffe17 	ldw	r3,-8(fp)
  80f4e4:	e0bfff17 	ldw	r2,-4(fp)
  80f4e8:	1885883a 	add	r2,r3,r2
  80f4ec:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80f4f0:	e0bffe17 	ldw	r2,-8(fp)
  80f4f4:	e0bffc15 	stw	r2,-16(fp)
  80f4f8:	00000506 	br	80f510 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  80f4fc:	e0bffc17 	ldw	r2,-16(fp)
  80f500:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80f504:	e0bffc17 	ldw	r2,-16(fp)
  80f508:	10800804 	addi	r2,r2,32
  80f50c:	e0bffc15 	stw	r2,-16(fp)
  80f510:	e0fffc17 	ldw	r3,-16(fp)
  80f514:	e0bffd17 	ldw	r2,-12(fp)
  80f518:	18bff836 	bltu	r3,r2,80f4fc <__alt_data_end+0xff80f4fc>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  80f51c:	e0bffe17 	ldw	r2,-8(fp)
  80f520:	108007cc 	andi	r2,r2,31
  80f524:	10000226 	beq	r2,zero,80f530 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  80f528:	e0bffc17 	ldw	r2,-16(fp)
  80f52c:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  80f530:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  80f534:	0001883a 	nop
  80f538:	e037883a 	mov	sp,fp
  80f53c:	df000017 	ldw	fp,0(sp)
  80f540:	dec00104 	addi	sp,sp,4
  80f544:	f800283a 	ret

0080f548 <atexit>:
  80f548:	200b883a 	mov	r5,r4
  80f54c:	000f883a 	mov	r7,zero
  80f550:	000d883a 	mov	r6,zero
  80f554:	0009883a 	mov	r4,zero
  80f558:	080f6101 	jmpi	80f610 <__register_exitproc>

0080f55c <exit>:
  80f55c:	defffe04 	addi	sp,sp,-8
  80f560:	000b883a 	mov	r5,zero
  80f564:	dc000015 	stw	r16,0(sp)
  80f568:	dfc00115 	stw	ra,4(sp)
  80f56c:	2021883a 	mov	r16,r4
  80f570:	080f7280 	call	80f728 <__call_exitprocs>
  80f574:	00802074 	movhi	r2,129
  80f578:	1085d804 	addi	r2,r2,5984
  80f57c:	11000017 	ldw	r4,0(r2)
  80f580:	20800f17 	ldw	r2,60(r4)
  80f584:	10000126 	beq	r2,zero,80f58c <exit+0x30>
  80f588:	103ee83a 	callr	r2
  80f58c:	8009883a 	mov	r4,r16
  80f590:	080f8a80 	call	80f8a8 <_exit>

0080f594 <memcmp>:
  80f594:	01c000c4 	movi	r7,3
  80f598:	3980192e 	bgeu	r7,r6,80f600 <memcmp+0x6c>
  80f59c:	2144b03a 	or	r2,r4,r5
  80f5a0:	11c4703a 	and	r2,r2,r7
  80f5a4:	10000f26 	beq	r2,zero,80f5e4 <memcmp+0x50>
  80f5a8:	20800003 	ldbu	r2,0(r4)
  80f5ac:	28c00003 	ldbu	r3,0(r5)
  80f5b0:	10c0151e 	bne	r2,r3,80f608 <memcmp+0x74>
  80f5b4:	31bfff84 	addi	r6,r6,-2
  80f5b8:	01ffffc4 	movi	r7,-1
  80f5bc:	00000406 	br	80f5d0 <memcmp+0x3c>
  80f5c0:	20800003 	ldbu	r2,0(r4)
  80f5c4:	28c00003 	ldbu	r3,0(r5)
  80f5c8:	31bfffc4 	addi	r6,r6,-1
  80f5cc:	10c00e1e 	bne	r2,r3,80f608 <memcmp+0x74>
  80f5d0:	21000044 	addi	r4,r4,1
  80f5d4:	29400044 	addi	r5,r5,1
  80f5d8:	31fff91e 	bne	r6,r7,80f5c0 <__alt_data_end+0xff80f5c0>
  80f5dc:	0005883a 	mov	r2,zero
  80f5e0:	f800283a 	ret
  80f5e4:	20c00017 	ldw	r3,0(r4)
  80f5e8:	28800017 	ldw	r2,0(r5)
  80f5ec:	18bfee1e 	bne	r3,r2,80f5a8 <__alt_data_end+0xff80f5a8>
  80f5f0:	31bfff04 	addi	r6,r6,-4
  80f5f4:	21000104 	addi	r4,r4,4
  80f5f8:	29400104 	addi	r5,r5,4
  80f5fc:	39bff936 	bltu	r7,r6,80f5e4 <__alt_data_end+0xff80f5e4>
  80f600:	303fe91e 	bne	r6,zero,80f5a8 <__alt_data_end+0xff80f5a8>
  80f604:	003ff506 	br	80f5dc <__alt_data_end+0xff80f5dc>
  80f608:	10c5c83a 	sub	r2,r2,r3
  80f60c:	f800283a 	ret

0080f610 <__register_exitproc>:
  80f610:	defffa04 	addi	sp,sp,-24
  80f614:	dc000315 	stw	r16,12(sp)
  80f618:	04002074 	movhi	r16,129
  80f61c:	8405d804 	addi	r16,r16,5984
  80f620:	80c00017 	ldw	r3,0(r16)
  80f624:	dc400415 	stw	r17,16(sp)
  80f628:	dfc00515 	stw	ra,20(sp)
  80f62c:	18805217 	ldw	r2,328(r3)
  80f630:	2023883a 	mov	r17,r4
  80f634:	10003726 	beq	r2,zero,80f714 <__register_exitproc+0x104>
  80f638:	10c00117 	ldw	r3,4(r2)
  80f63c:	010007c4 	movi	r4,31
  80f640:	20c00e16 	blt	r4,r3,80f67c <__register_exitproc+0x6c>
  80f644:	1a000044 	addi	r8,r3,1
  80f648:	8800221e 	bne	r17,zero,80f6d4 <__register_exitproc+0xc4>
  80f64c:	18c00084 	addi	r3,r3,2
  80f650:	18c7883a 	add	r3,r3,r3
  80f654:	18c7883a 	add	r3,r3,r3
  80f658:	12000115 	stw	r8,4(r2)
  80f65c:	10c7883a 	add	r3,r2,r3
  80f660:	19400015 	stw	r5,0(r3)
  80f664:	0005883a 	mov	r2,zero
  80f668:	dfc00517 	ldw	ra,20(sp)
  80f66c:	dc400417 	ldw	r17,16(sp)
  80f670:	dc000317 	ldw	r16,12(sp)
  80f674:	dec00604 	addi	sp,sp,24
  80f678:	f800283a 	ret
  80f67c:	00800034 	movhi	r2,0
  80f680:	10800004 	addi	r2,r2,0
  80f684:	10002626 	beq	r2,zero,80f720 <__register_exitproc+0x110>
  80f688:	01006404 	movi	r4,400
  80f68c:	d9400015 	stw	r5,0(sp)
  80f690:	d9800115 	stw	r6,4(sp)
  80f694:	d9c00215 	stw	r7,8(sp)
  80f698:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  80f69c:	d9400017 	ldw	r5,0(sp)
  80f6a0:	d9800117 	ldw	r6,4(sp)
  80f6a4:	d9c00217 	ldw	r7,8(sp)
  80f6a8:	10001d26 	beq	r2,zero,80f720 <__register_exitproc+0x110>
  80f6ac:	81000017 	ldw	r4,0(r16)
  80f6b0:	10000115 	stw	zero,4(r2)
  80f6b4:	02000044 	movi	r8,1
  80f6b8:	22405217 	ldw	r9,328(r4)
  80f6bc:	0007883a 	mov	r3,zero
  80f6c0:	12400015 	stw	r9,0(r2)
  80f6c4:	20805215 	stw	r2,328(r4)
  80f6c8:	10006215 	stw	zero,392(r2)
  80f6cc:	10006315 	stw	zero,396(r2)
  80f6d0:	883fde26 	beq	r17,zero,80f64c <__alt_data_end+0xff80f64c>
  80f6d4:	18c9883a 	add	r4,r3,r3
  80f6d8:	2109883a 	add	r4,r4,r4
  80f6dc:	1109883a 	add	r4,r2,r4
  80f6e0:	21802215 	stw	r6,136(r4)
  80f6e4:	01800044 	movi	r6,1
  80f6e8:	12406217 	ldw	r9,392(r2)
  80f6ec:	30cc983a 	sll	r6,r6,r3
  80f6f0:	4992b03a 	or	r9,r9,r6
  80f6f4:	12406215 	stw	r9,392(r2)
  80f6f8:	21c04215 	stw	r7,264(r4)
  80f6fc:	01000084 	movi	r4,2
  80f700:	893fd21e 	bne	r17,r4,80f64c <__alt_data_end+0xff80f64c>
  80f704:	11006317 	ldw	r4,396(r2)
  80f708:	218cb03a 	or	r6,r4,r6
  80f70c:	11806315 	stw	r6,396(r2)
  80f710:	003fce06 	br	80f64c <__alt_data_end+0xff80f64c>
  80f714:	18805304 	addi	r2,r3,332
  80f718:	18805215 	stw	r2,328(r3)
  80f71c:	003fc606 	br	80f638 <__alt_data_end+0xff80f638>
  80f720:	00bfffc4 	movi	r2,-1
  80f724:	003fd006 	br	80f668 <__alt_data_end+0xff80f668>

0080f728 <__call_exitprocs>:
  80f728:	defff504 	addi	sp,sp,-44
  80f72c:	df000915 	stw	fp,36(sp)
  80f730:	dd400615 	stw	r21,24(sp)
  80f734:	dc800315 	stw	r18,12(sp)
  80f738:	dfc00a15 	stw	ra,40(sp)
  80f73c:	ddc00815 	stw	r23,32(sp)
  80f740:	dd800715 	stw	r22,28(sp)
  80f744:	dd000515 	stw	r20,20(sp)
  80f748:	dcc00415 	stw	r19,16(sp)
  80f74c:	dc400215 	stw	r17,8(sp)
  80f750:	dc000115 	stw	r16,4(sp)
  80f754:	d9000015 	stw	r4,0(sp)
  80f758:	2839883a 	mov	fp,r5
  80f75c:	04800044 	movi	r18,1
  80f760:	057fffc4 	movi	r21,-1
  80f764:	00802074 	movhi	r2,129
  80f768:	1085d804 	addi	r2,r2,5984
  80f76c:	12000017 	ldw	r8,0(r2)
  80f770:	45005217 	ldw	r20,328(r8)
  80f774:	44c05204 	addi	r19,r8,328
  80f778:	a0001c26 	beq	r20,zero,80f7ec <__call_exitprocs+0xc4>
  80f77c:	a0800117 	ldw	r2,4(r20)
  80f780:	15ffffc4 	addi	r23,r2,-1
  80f784:	b8000d16 	blt	r23,zero,80f7bc <__call_exitprocs+0x94>
  80f788:	14000044 	addi	r16,r2,1
  80f78c:	8421883a 	add	r16,r16,r16
  80f790:	8421883a 	add	r16,r16,r16
  80f794:	84402004 	addi	r17,r16,128
  80f798:	a463883a 	add	r17,r20,r17
  80f79c:	a421883a 	add	r16,r20,r16
  80f7a0:	e0001e26 	beq	fp,zero,80f81c <__call_exitprocs+0xf4>
  80f7a4:	80804017 	ldw	r2,256(r16)
  80f7a8:	e0801c26 	beq	fp,r2,80f81c <__call_exitprocs+0xf4>
  80f7ac:	bdffffc4 	addi	r23,r23,-1
  80f7b0:	843fff04 	addi	r16,r16,-4
  80f7b4:	8c7fff04 	addi	r17,r17,-4
  80f7b8:	bd7ff91e 	bne	r23,r21,80f7a0 <__alt_data_end+0xff80f7a0>
  80f7bc:	00800034 	movhi	r2,0
  80f7c0:	10800004 	addi	r2,r2,0
  80f7c4:	10000926 	beq	r2,zero,80f7ec <__call_exitprocs+0xc4>
  80f7c8:	a0800117 	ldw	r2,4(r20)
  80f7cc:	1000301e 	bne	r2,zero,80f890 <__call_exitprocs+0x168>
  80f7d0:	a0800017 	ldw	r2,0(r20)
  80f7d4:	10003226 	beq	r2,zero,80f8a0 <__call_exitprocs+0x178>
  80f7d8:	a009883a 	mov	r4,r20
  80f7dc:	98800015 	stw	r2,0(r19)
  80f7e0:	00000000 	call	0 <__alt_mem_sdram-0x800000>
  80f7e4:	9d000017 	ldw	r20,0(r19)
  80f7e8:	a03fe41e 	bne	r20,zero,80f77c <__alt_data_end+0xff80f77c>
  80f7ec:	dfc00a17 	ldw	ra,40(sp)
  80f7f0:	df000917 	ldw	fp,36(sp)
  80f7f4:	ddc00817 	ldw	r23,32(sp)
  80f7f8:	dd800717 	ldw	r22,28(sp)
  80f7fc:	dd400617 	ldw	r21,24(sp)
  80f800:	dd000517 	ldw	r20,20(sp)
  80f804:	dcc00417 	ldw	r19,16(sp)
  80f808:	dc800317 	ldw	r18,12(sp)
  80f80c:	dc400217 	ldw	r17,8(sp)
  80f810:	dc000117 	ldw	r16,4(sp)
  80f814:	dec00b04 	addi	sp,sp,44
  80f818:	f800283a 	ret
  80f81c:	a0800117 	ldw	r2,4(r20)
  80f820:	80c00017 	ldw	r3,0(r16)
  80f824:	10bfffc4 	addi	r2,r2,-1
  80f828:	15c01426 	beq	r2,r23,80f87c <__call_exitprocs+0x154>
  80f82c:	80000015 	stw	zero,0(r16)
  80f830:	183fde26 	beq	r3,zero,80f7ac <__alt_data_end+0xff80f7ac>
  80f834:	95c8983a 	sll	r4,r18,r23
  80f838:	a0806217 	ldw	r2,392(r20)
  80f83c:	a5800117 	ldw	r22,4(r20)
  80f840:	2084703a 	and	r2,r4,r2
  80f844:	10000b26 	beq	r2,zero,80f874 <__call_exitprocs+0x14c>
  80f848:	a0806317 	ldw	r2,396(r20)
  80f84c:	2088703a 	and	r4,r4,r2
  80f850:	20000c1e 	bne	r4,zero,80f884 <__call_exitprocs+0x15c>
  80f854:	89400017 	ldw	r5,0(r17)
  80f858:	d9000017 	ldw	r4,0(sp)
  80f85c:	183ee83a 	callr	r3
  80f860:	a0800117 	ldw	r2,4(r20)
  80f864:	15bfbf1e 	bne	r2,r22,80f764 <__alt_data_end+0xff80f764>
  80f868:	98800017 	ldw	r2,0(r19)
  80f86c:	153fcf26 	beq	r2,r20,80f7ac <__alt_data_end+0xff80f7ac>
  80f870:	003fbc06 	br	80f764 <__alt_data_end+0xff80f764>
  80f874:	183ee83a 	callr	r3
  80f878:	003ff906 	br	80f860 <__alt_data_end+0xff80f860>
  80f87c:	a5c00115 	stw	r23,4(r20)
  80f880:	003feb06 	br	80f830 <__alt_data_end+0xff80f830>
  80f884:	89000017 	ldw	r4,0(r17)
  80f888:	183ee83a 	callr	r3
  80f88c:	003ff406 	br	80f860 <__alt_data_end+0xff80f860>
  80f890:	a0800017 	ldw	r2,0(r20)
  80f894:	a027883a 	mov	r19,r20
  80f898:	1029883a 	mov	r20,r2
  80f89c:	003fb606 	br	80f778 <__alt_data_end+0xff80f778>
  80f8a0:	0005883a 	mov	r2,zero
  80f8a4:	003ffb06 	br	80f894 <__alt_data_end+0xff80f894>

0080f8a8 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  80f8a8:	defffd04 	addi	sp,sp,-12
  80f8ac:	df000215 	stw	fp,8(sp)
  80f8b0:	df000204 	addi	fp,sp,8
  80f8b4:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  80f8b8:	0001883a 	nop
  80f8bc:	e0bfff17 	ldw	r2,-4(fp)
  80f8c0:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  80f8c4:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  80f8c8:	10000226 	beq	r2,zero,80f8d4 <_exit+0x2c>
    ALT_SIM_FAIL();
  80f8cc:	002af070 	cmpltui	zero,zero,43969
  80f8d0:	00000106 	br	80f8d8 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  80f8d4:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  80f8d8:	003fff06 	br	80f8d8 <__alt_data_end+0xff80f8d8>
