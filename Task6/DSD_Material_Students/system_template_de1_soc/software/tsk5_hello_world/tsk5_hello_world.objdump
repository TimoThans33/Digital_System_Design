
tsk5_hello_world.elf:     file format elf32-littlenios2
tsk5_hello_world.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x008001c0

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x0000b294 memsz 0x0000b294 flags r-x
    LOAD off    0x0000c2b4 vaddr 0x0080b2b4 paddr 0x0080b598 align 2**12
         filesz 0x000002e4 memsz 0x000002e4 flags rw-
    LOAD off    0x0000c87c vaddr 0x0080b87c paddr 0x0080b87c align 2**12
         filesz 0x00000000 memsz 0x00000124 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   000001a0  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000ac70  008001c0  008001c0  000011c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000484  0080ae30  0080ae30  0000be30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       000002e4  0080b2b4  0080b598  0000c2b4  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000124  0080b87c  0080b87c  0000c87c  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  0080b9a0  0080b9a0  0000c598  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  0000c598  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000bf8  00000000  00000000  0000c5c0  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   0001267f  00000000  00000000  0000d1b8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 0000616b  00000000  00000000  0001f837  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00007b94  00000000  00000000  000259a2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000018b8  00000000  00000000  0002d538  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00002a6a  00000000  00000000  0002edf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    0000f834  00000000  00000000  0003185a  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000030  00000000  00000000  00041090  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001198  00000000  00000000  000410c0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000448b6  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  000448b9  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000448bc  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000448bd  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000448be  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000448c2  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000448c6  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  000448ca  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  000448d3  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  000448dc  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 00000012  00000000  00000000  000448e5  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000043  00000000  00000000  000448f7  2**0
                  CONTENTS, READONLY
 29 .jdi          00004f66  00000000  00000000  0004493a  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     000384b8  00000000  00000000  000498a0  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
008001c0 l    d  .text	00000000 .text
0080ae30 l    d  .rodata	00000000 .rodata
0080b2b4 l    d  .rwdata	00000000 .rwdata
0080b87c l    d  .bss	00000000 .bss
0080b9a0 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../tsk5_hello_world_bsp//obj/HAL/src/crt0.o
00800208 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
00800094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 s_cos.c
00000000 l    df *ABS*	00000000 e_rem_pio2.c
0080aef4 l     O .rodata	00000108 two_over_pi
0080ae74 l     O .rodata	00000080 npio2_hw
00000000 l    df *ABS*	00000000 k_cos.c
00000000 l    df *ABS*	00000000 k_rem_pio2.c
0080b03c l     O .rodata	00000010 init_jk
0080affc l     O .rodata	00000040 PIo2
00000000 l    df *ABS*	00000000 k_sin.c
00000000 l    df *ABS*	00000000 s_fabs.c
00000000 l    df *ABS*	00000000 s_floor.c
00000000 l    df *ABS*	00000000 s_scalbn.c
00000000 l    df *ABS*	00000000 s_copysign.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 divsf3.c
00000000 l    df *ABS*	00000000 mulsf3.c
00000000 l    df *ABS*	00000000 subsf3.c
00000000 l    df *ABS*	00000000 fixsfsi.c
00000000 l    df *ABS*	00000000 floatunsisf.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 extendsfdf2.c
00000000 l    df *ABS*	00000000 truncdfsf2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 efgcvt.c
00000000 l    df *ABS*	00000000 impure.c
0080b2b4 l     O .rwdata	000000e0 impure_data
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 ecvtbuf.c
008058f4 l     F .text	000001d4 print_e
00000000 l    df *ABS*	00000000 fvwrite_small_dev.c
00000000 l    df *ABS*	00000000 mprec.c
0080b150 l     O .rodata	0000000c p05.2796
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 dtoa.c
008075b8 l     F .text	000001ec quorem
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 nano-mallocr.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 alt_load.c
008095e8 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_putstr.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0080b570 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_times.c
0080982c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_write.c
008098e0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
00809a14 l     F .text	00000034 alt_dev_reg
0080b394 l     O .rwdata	0000002c jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
00809d10 l     F .text	00000078 alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_close.c
00809e04 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
00809f58 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00809f84 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0080a338 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0080a478 l     F .text	0000003c alt_get_errno
0080a4b4 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 fputs.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00808bf0 g     F .text	0000001c _malloc_usable_size_r
0080716c g     F .text	00000068 _mprec_log10
0080722c g     F .text	00000070 __any_on
0080b15c g     O .rodata	00000028 __mprec_tinytens
008096d4 g     F .text	0000006c alt_main
00807534 g     F .text	0000002c strcpy
00805844 g     F .text	00000080 _puts_r
0080b8a0 g     O .bss	00000100 alt_irq
00802344 g     F .text	00000014 fabs
0080b598 g       *ABS*	00000000 __flash_rwdata_start
00803fdc g     F .text	00000088 .hidden __eqdf2
0080b9a0 g       *ABS*	00000000 __alt_heap_start
00805ac8 g     F .text	0000016c fcvtbuf
008028b0 g     F .text	00000440 .hidden __divsf3
00806358 g     F .text	000000e4 _Balloc
008035d0 g     F .text	00000070 .hidden __fixsfsi
00809740 g     F .text	0000003c alt_putstr
00804064 g     F .text	000000dc .hidden __gtdf2
00800000 g     F .entry	0000001c __reset
00809868 g     F .text	00000078 times
00800020 g       *ABS*	00000000 __flash_exceptions_start
0080b884 g     O .bss	00000004 errno
00802358 g     F .text	000001ec floor
0080b88c g     O .bss	00000004 alt_argv
00813568 g       *ABS*	00000000 _gp
008030ec g     F .text	000004e4 .hidden __subsf3
0080b3e8 g     O .rwdata	00000180 alt_fd_list
008006d8 g     F .text	0000076c __ieee754_rem_pio2
0080a8f8 g     F .text	00000090 alt_find_dev
00808ac4 g     F .text	00000028 memcpy
008051d4 g     F .text	000000dc .hidden __floatsidf
0080a3fc g     F .text	0000007c alt_io_redirect
008094f4 g     F .text	000000f4 .hidden __ltdf2
008058c4 g     F .text	00000014 puts
008070c8 g     F .text	000000a4 __ratio
00809b90 g     F .text	000000ec altera_avalon_jtag_uart_read
00808a9c g     F .text	00000014 malloc
008027f4 g     F .text	00000064 .hidden __udivsi3
0080b1ac g     O .rodata	000000c8 __mprec_tens
00800e44 g     F .text	000004a4 __kernel_cos
00805804 g     F .text	00000040 gcvtf
0080ab34 g     F .text	00000090 alt_icache_flush
008067d0 g     F .text	0000003c __i2b
008074e4 g     F .text	00000050 _sbrk_r
0080b584 g     O .rwdata	00000004 alt_max_fd
00802078 g     F .text	000002cc __kernel_sin
00805358 g     F .text	00000110 .hidden __extendsfdf2
00803730 g     F .text	000008ac .hidden __adddf3
00806e84 g     F .text	00000104 __b2d
0080b568 g     O .rwdata	00000004 _global_impure_ptr
00807440 g     F .text	000000a4 _realloc_r
0080b9a0 g       *ABS*	00000000 __bss_end
0080a248 g     F .text	000000f0 alt_iic_isr_register
0080a7cc g     F .text	00000108 alt_tick
0080b184 g     O .rodata	00000028 __mprec_bigtens
008065b4 g     F .text	00000104 __s2b
008052b0 g     F .text	000000a8 .hidden __floatunsidf
00806c60 g     F .text	0000005c __mcmp
0080a1fc g     F .text	0000004c alt_ic_irq_enabled
0080a730 g     F .text	0000009c alt_alarm_stop
0080b894 g     O .bss	00000004 alt_irq_active
008000ec g     F .exceptions	000000d4 alt_irq_handler
0080b3c0 g     O .rwdata	00000028 alt_dev_null
008012e8 g     F .text	00000d90 __kernel_rem_pio2
00809f10 g     F .text	00000048 alt_dcache_flush_all
008066b8 g     F .text	00000068 __hi0bits
00805154 g     F .text	00000080 .hidden __fixdfsi
0080b598 g       *ABS*	00000000 __ram_rwdata_end
0080b57c g     O .rwdata	00000008 alt_dev_list
0080991c g     F .text	000000f8 write
0080b2b4 g       *ABS*	00000000 __ram_rodata_end
008094f4 g     F .text	000000f4 .hidden __ledf2
008069e4 g     F .text	00000134 __pow5mult
00802858 g     F .text	00000058 .hidden __umodsi3
0080b9a0 g       *ABS*	00000000 end
01000000 g       *ABS*	00000000 __alt_stack_pointer
00806034 g     F .text	0000026c _dcvt
00809d88 g     F .text	0000007c alt_avalon_timer_sc_init
00805610 g     F .text	00000064 .hidden __clzsi2
00809c7c g     F .text	00000094 altera_avalon_jtag_uart_write
008005ec g     F .text	000000ec cos
00808b0c g     F .text	000000e4 _free_r
0080ac6c g     F .text	00000190 __call_exitprocs
008001c0 g     F .text	0000004c _start
0080b898 g     O .bss	00000004 _alt_tick_rate
00805d3c g     F .text	000002f8 _gcvt
00806b18 g     F .text	00000148 __lshift
0080b89c g     O .bss	00000004 _alt_nticks
00809a80 g     F .text	00000050 alt_sys_init
0080680c g     F .text	000001d8 __multiply
0080b2b4 g       *ABS*	00000000 __ram_rwdata_start
0080ae30 g       *ABS*	00000000 __ram_rodata_start
00806f88 g     F .text	00000140 __d2b
00809ad0 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0080aa90 g     F .text	000000a4 alt_get_fd
0080020c g     F .text	00000098 generateVector
0080ac3c g     F .text	00000030 memcmp
0080b9a0 g       *ABS*	00000000 __alt_stack_base
00808c0c g     F .text	000008e8 .hidden __divdf3
008071d4 g     F .text	00000058 __copybits
00804140 g     F .text	00000718 .hidden __muldf3
0080a988 g     F .text	00000108 alt_find_file
00809fc0 g     F .text	000000a4 alt_dev_llist_insert
0080977c g     F .text	000000b0 sbrk
0080729c g     F .text	0000004c _calloc_r
008062a0 g     F .text	000000b8 __sfvwrite_small_dev
0080b87c g       *ABS*	00000000 __bss_start
00808aec g     F .text	00000020 memset
008004a4 g     F .text	00000148 main
00805674 g     F .text	00000024 fcvt
0080b890 g     O .bss	00000004 alt_envp
00809b30 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00805c34 g     F .text	00000108 ecvtbuf
01000000 g       *ABS*	00000000 __alt_heap_limit
00805468 g     F .text	000001a8 .hidden __truncdfsf2
008077a4 g     F .text	000012f8 _dtoa_r
008072e8 g     F .text	00000158 _malloc_r
0080b588 g     O .rwdata	00000004 alt_errno
00805710 g     F .text	00000054 ecvtf
008026fc g     F .text	00000084 .hidden __divsi3
00802cf0 g     F .text	000003fc .hidden __mulsf3
0080ae30 g       *ABS*	00000000 __flash_rodata_start
008026e0 g     F .text	0000001c copysign
00803fdc g     F .text	00000088 .hidden __nedf2
00809a48 g     F .text	00000038 alt_irq_init
0080a6cc g     F .text	00000064 alt_release_fd
0080b04c g     O .rodata	00000100 .hidden __clz_tab
008002a4 g     F .text	00000200 sumVector
00807560 g     F .text	00000058 _write_r
0080b56c g     O .rwdata	00000004 _impure_ptr
0080b888 g     O .bss	00000004 alt_argc
00802544 g     F .text	0000019c scalbn
00800020 g       .exceptions	00000000 alt_irq_entry
00806e30 g     F .text	00000054 __ulp
008056ec g     F .text	00000024 ecvt
0080b574 g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
0080a098 g     F .text	00000050 alt_ic_isr_register
0080b598 g       *ABS*	00000000 _edata
0080b9a0 g       *ABS*	00000000 _end
008001c0 g       *ABS*	00000000 __ram_exceptions_end
0080a170 g     F .text	0000008c alt_ic_irq_disable
00805698 g     F .text	00000054 fcvtf
0080a8d4 g     F .text	00000024 altera_nios2_qsys_irq_init
0080abc4 g     F .text	00000020 exit
00803640 g     F .text	000000f0 .hidden __floatunsisf
00806cbc g     F .text	00000174 __mdiff
00802780 g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
00800000 g       *ABS*	00000000 __alt_mem_sdram
00805764 g     F .text	000000a0 gcvt
0080adfc g     F .text	00000034 _exit
008058d8 g     F .text	0000001c strlen
0080a578 g     F .text	00000154 open
00804064 g     F .text	000000dc .hidden __gedf2
0080b87c g     O .bss	00000004 __malloc_sbrk_start
0080a064 g     F .text	00000034 alt_icache_flush_all
0080abe4 g     F .text	00000058 fputs
0080b58c g     O .rwdata	00000004 alt_priority_mask
0080b880 g     O .bss	00000004 __malloc_free_list
0080a0e8 g     F .text	00000088 alt_ic_irq_enable
00804858 g     F .text	000008fc .hidden __subdf3
00806720 g     F .text	000000b0 __lo0bits
0080b590 g     O .rwdata	00000008 alt_alarm_list
00809e40 g     F .text	000000d0 close
00809650 g     F .text	00000084 alt_load
00808ab0 g     F .text	00000014 free
008064b4 g     F .text	00000100 __multadd
0080643c g     F .text	00000078 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && !defined(ALT_SIM_OPTIMIZE)
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00820014 	movui	r2,2048
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__alt_data_end+0xff800004>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08407014 	ori	at,at,448
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__alt_mem_sdram-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000ec0 	call	8000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000306 	br	800098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
  80008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)

00800094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
  800094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  800098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  80009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000e8:	ef80083a 	eret

008000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000ec:	defff904 	addi	sp,sp,-28
  8000f0:	dfc00615 	stw	ra,24(sp)
  8000f4:	df000515 	stw	fp,20(sp)
  8000f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  8000fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800100:	0005313a 	rdctl	r2,ipending
  800104:	e0bffe15 	stw	r2,-8(fp)

  return active;
  800108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
  800110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800114:	00800044 	movi	r2,1
  800118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80011c:	e0fffb17 	ldw	r3,-20(fp)
  800120:	e0bffc17 	ldw	r2,-16(fp)
  800124:	1884703a 	and	r2,r3,r2
  800128:	10001426 	beq	r2,zero,80017c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80012c:	00802074 	movhi	r2,129
  800130:	10ae2804 	addi	r2,r2,-18272
  800134:	e0fffd17 	ldw	r3,-12(fp)
  800138:	180690fa 	slli	r3,r3,3
  80013c:	10c5883a 	add	r2,r2,r3
  800140:	10c00017 	ldw	r3,0(r2)
  800144:	00802074 	movhi	r2,129
  800148:	10ae2804 	addi	r2,r2,-18272
  80014c:	e13ffd17 	ldw	r4,-12(fp)
  800150:	200890fa 	slli	r4,r4,3
  800154:	1105883a 	add	r2,r2,r4
  800158:	10800104 	addi	r2,r2,4
  80015c:	10800017 	ldw	r2,0(r2)
  800160:	1009883a 	mov	r4,r2
  800164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  800168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  80016c:	0005313a 	rdctl	r2,ipending
  800170:	e0bfff15 	stw	r2,-4(fp)

  return active;
  800174:	e0bfff17 	ldw	r2,-4(fp)
  800178:	00000706 	br	800198 <alt_irq_handler+0xac>
      }
      mask <<= 1;
  80017c:	e0bffc17 	ldw	r2,-16(fp)
  800180:	1085883a 	add	r2,r2,r2
  800184:	e0bffc15 	stw	r2,-16(fp)
      i++;
  800188:	e0bffd17 	ldw	r2,-12(fp)
  80018c:	10800044 	addi	r2,r2,1
  800190:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
  800194:	003fe106 	br	80011c <__alt_data_end+0xff80011c>

    active = alt_irq_pending ();
  800198:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
  80019c:	e0bffb17 	ldw	r2,-20(fp)
  8001a0:	103fdb1e 	bne	r2,zero,800110 <__alt_data_end+0xff800110>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001a4:	0001883a 	nop
}
  8001a8:	0001883a 	nop
  8001ac:	e037883a 	mov	sp,fp
  8001b0:	dfc00117 	ldw	ra,4(sp)
  8001b4:	df000017 	ldw	fp,0(sp)
  8001b8:	dec00204 	addi	sp,sp,8
  8001bc:	f800283a 	ret

Disassembly of section .text:

008001c0 <_start>:

#if NIOS2_DCACHE_SIZE > 0 && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
  8001c0:	00800074 	movhi	r2,1
#else
    movui r2, NIOS2_DCACHE_SIZE
#endif

0:
    initd 0(r2)
  8001c4:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  8001c8:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  8001cc:	00bffd16 	blt	zero,r2,8001c4 <__alt_data_end+0xff8001c4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  8001d0:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  8001d4:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  8001d8:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  8001dc:	d68d5a14 	ori	gp,gp,13672
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  8001e0:	00802034 	movhi	r2,128
    ori r2, r2, %lo(__bss_start)
  8001e4:	10ae1f14 	ori	r2,r2,47228

    movhi r3, %hi(__bss_end)
  8001e8:	00c02034 	movhi	r3,128
    ori r3, r3, %lo(__bss_end)
  8001ec:	18ee6814 	ori	r3,r3,47520

    beq r2, r3, 1f
  8001f0:	10c00326 	beq	r2,r3,800200 <_start+0x40>

0:
    stw zero, (r2)
  8001f4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  8001f8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  8001fc:	10fffd36 	bltu	r2,r3,8001f4 <__alt_data_end+0xff8001f4>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800200:	08096500 	call	809650 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  800204:	08096d40 	call	8096d4 <alt_main>

00800208 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  800208:	003fff06 	br	800208 <__alt_data_end+0xff800208>

0080020c <generateVector>:
//#define step 1/1024.0
//#define N 261121

// Generates the vector x and stores it in the memory
void generateVector(float *x, int length, float STEP)
{
  80020c:	defff904 	addi	sp,sp,-28
  800210:	dfc00615 	stw	ra,24(sp)
  800214:	df000515 	stw	fp,20(sp)
  800218:	dc000415 	stw	r16,16(sp)
  80021c:	df000504 	addi	fp,sp,20
  800220:	e13ffc15 	stw	r4,-16(fp)
  800224:	e17ffd15 	stw	r5,-12(fp)
  800228:	e1bffe15 	stw	r6,-8(fp)
	for (unsigned int i = 0; i < length; ++i)
  80022c:	e03ffb15 	stw	zero,-20(fp)
  800230:	00001206 	br	80027c <generateVector+0x70>
	{
		x[i] = i*STEP;
  800234:	e0bffb17 	ldw	r2,-20(fp)
  800238:	1085883a 	add	r2,r2,r2
  80023c:	1085883a 	add	r2,r2,r2
  800240:	1007883a 	mov	r3,r2
  800244:	e0bffc17 	ldw	r2,-16(fp)
  800248:	10e1883a 	add	r16,r2,r3
  80024c:	e13ffb17 	ldw	r4,-20(fp)
  800250:	08036400 	call	803640 <__floatunsisf>
  800254:	1007883a 	mov	r3,r2
  800258:	e17ffe17 	ldw	r5,-8(fp)
  80025c:	1809883a 	mov	r4,r3
  800260:	0802cf00 	call	802cf0 <__mulsf3>
  800264:	1007883a 	mov	r3,r2
  800268:	1805883a 	mov	r2,r3
  80026c:	80800015 	stw	r2,0(r16)
//#define N 261121

// Generates the vector x and stores it in the memory
void generateVector(float *x, int length, float STEP)
{
	for (unsigned int i = 0; i < length; ++i)
  800270:	e0bffb17 	ldw	r2,-20(fp)
  800274:	10800044 	addi	r2,r2,1
  800278:	e0bffb15 	stw	r2,-20(fp)
  80027c:	e0bffd17 	ldw	r2,-12(fp)
  800280:	e0fffb17 	ldw	r3,-20(fp)
  800284:	18bfeb36 	bltu	r3,r2,800234 <__alt_data_end+0xff800234>
	{
		x[i] = i*STEP;
	}
}
  800288:	0001883a 	nop
  80028c:	e6ffff04 	addi	sp,fp,-4
  800290:	dfc00217 	ldw	ra,8(sp)
  800294:	df000117 	ldw	fp,4(sp)
  800298:	dc000017 	ldw	r16,0(sp)
  80029c:	dec00304 	addi	sp,sp,12
  8002a0:	f800283a 	ret

008002a4 <sumVector>:

float sumVector(float x[], int M)
{
  8002a4:	defff404 	addi	sp,sp,-48
  8002a8:	dfc00b15 	stw	ra,44(sp)
  8002ac:	df000a15 	stw	fp,40(sp)
  8002b0:	dd400915 	stw	r21,36(sp)
  8002b4:	dd000815 	stw	r20,32(sp)
  8002b8:	dcc00715 	stw	r19,28(sp)
  8002bc:	dc800615 	stw	r18,24(sp)
  8002c0:	dc400515 	stw	r17,20(sp)
  8002c4:	dc000415 	stw	r16,16(sp)
  8002c8:	df000a04 	addi	fp,sp,40
  8002cc:	e13ff815 	stw	r4,-32(fp)
  8002d0:	e17ff915 	stw	r5,-28(fp)
    float k = 0;
  8002d4:	e03ff615 	stw	zero,-40(fp)
    for (int i=0; i<M; i++){
  8002d8:	e03ff715 	stw	zero,-36(fp)
  8002dc:	00006006 	br	800460 <sumVector+0x1bc>
        k += x[i]*(0.5 + x[i]*cos(x[i]/128-1));
  8002e0:	e13ff617 	ldw	r4,-40(fp)
  8002e4:	08053580 	call	805358 <__extendsfdf2>
  8002e8:	1021883a 	mov	r16,r2
  8002ec:	1823883a 	mov	r17,r3
  8002f0:	e0bff717 	ldw	r2,-36(fp)
  8002f4:	1085883a 	add	r2,r2,r2
  8002f8:	1085883a 	add	r2,r2,r2
  8002fc:	1007883a 	mov	r3,r2
  800300:	e0bff817 	ldw	r2,-32(fp)
  800304:	10c5883a 	add	r2,r2,r3
  800308:	10c00017 	ldw	r3,0(r2)
  80030c:	1809883a 	mov	r4,r3
  800310:	08053580 	call	805358 <__extendsfdf2>
  800314:	1025883a 	mov	r18,r2
  800318:	1827883a 	mov	r19,r3
  80031c:	e0bff717 	ldw	r2,-36(fp)
  800320:	1085883a 	add	r2,r2,r2
  800324:	1085883a 	add	r2,r2,r2
  800328:	1007883a 	mov	r3,r2
  80032c:	e0bff817 	ldw	r2,-32(fp)
  800330:	10c5883a 	add	r2,r2,r3
  800334:	10c00017 	ldw	r3,0(r2)
  800338:	1809883a 	mov	r4,r3
  80033c:	08053580 	call	805358 <__extendsfdf2>
  800340:	1029883a 	mov	r20,r2
  800344:	182b883a 	mov	r21,r3
  800348:	e0bff717 	ldw	r2,-36(fp)
  80034c:	1085883a 	add	r2,r2,r2
  800350:	1085883a 	add	r2,r2,r2
  800354:	1007883a 	mov	r3,r2
  800358:	e0bff817 	ldw	r2,-32(fp)
  80035c:	10c5883a 	add	r2,r2,r3
  800360:	10c00017 	ldw	r3,0(r2)
  800364:	0150c034 	movhi	r5,17152
  800368:	1809883a 	mov	r4,r3
  80036c:	08028b00 	call	8028b0 <__divsf3>
  800370:	1007883a 	mov	r3,r2
  800374:	1805883a 	mov	r2,r3
  800378:	014fe034 	movhi	r5,16256
  80037c:	1009883a 	mov	r4,r2
  800380:	08030ec0 	call	8030ec <__subsf3>
  800384:	1007883a 	mov	r3,r2
  800388:	1805883a 	mov	r2,r3
  80038c:	1009883a 	mov	r4,r2
  800390:	08053580 	call	805358 <__extendsfdf2>
  800394:	100b883a 	mov	r5,r2
  800398:	180d883a 	mov	r6,r3
  80039c:	2809883a 	mov	r4,r5
  8003a0:	300b883a 	mov	r5,r6
  8003a4:	08005ec0 	call	8005ec <cos>
  8003a8:	1009883a 	mov	r4,r2
  8003ac:	180b883a 	mov	r5,r3
  8003b0:	200d883a 	mov	r6,r4
  8003b4:	280f883a 	mov	r7,r5
  8003b8:	a009883a 	mov	r4,r20
  8003bc:	a80b883a 	mov	r5,r21
  8003c0:	08041400 	call	804140 <__muldf3>
  8003c4:	1009883a 	mov	r4,r2
  8003c8:	180b883a 	mov	r5,r3
  8003cc:	2005883a 	mov	r2,r4
  8003d0:	2807883a 	mov	r3,r5
  8003d4:	000d883a 	mov	r6,zero
  8003d8:	01cff834 	movhi	r7,16352
  8003dc:	1009883a 	mov	r4,r2
  8003e0:	180b883a 	mov	r5,r3
  8003e4:	08037300 	call	803730 <__adddf3>
  8003e8:	1009883a 	mov	r4,r2
  8003ec:	180b883a 	mov	r5,r3
  8003f0:	2005883a 	mov	r2,r4
  8003f4:	2807883a 	mov	r3,r5
  8003f8:	100d883a 	mov	r6,r2
  8003fc:	180f883a 	mov	r7,r3
  800400:	9009883a 	mov	r4,r18
  800404:	980b883a 	mov	r5,r19
  800408:	08041400 	call	804140 <__muldf3>
  80040c:	1009883a 	mov	r4,r2
  800410:	180b883a 	mov	r5,r3
  800414:	2005883a 	mov	r2,r4
  800418:	2807883a 	mov	r3,r5
  80041c:	100d883a 	mov	r6,r2
  800420:	180f883a 	mov	r7,r3
  800424:	8009883a 	mov	r4,r16
  800428:	880b883a 	mov	r5,r17
  80042c:	08037300 	call	803730 <__adddf3>
  800430:	1009883a 	mov	r4,r2
  800434:	180b883a 	mov	r5,r3
  800438:	2005883a 	mov	r2,r4
  80043c:	2807883a 	mov	r3,r5
  800440:	1009883a 	mov	r4,r2
  800444:	180b883a 	mov	r5,r3
  800448:	08054680 	call	805468 <__truncdfsf2>
  80044c:	1007883a 	mov	r3,r2
  800450:	e0fff615 	stw	r3,-40(fp)
}

float sumVector(float x[], int M)
{
    float k = 0;
    for (int i=0; i<M; i++){
  800454:	e0bff717 	ldw	r2,-36(fp)
  800458:	10800044 	addi	r2,r2,1
  80045c:	e0bff715 	stw	r2,-36(fp)
  800460:	e0fff717 	ldw	r3,-36(fp)
  800464:	e0bff917 	ldw	r2,-28(fp)
  800468:	18bf9d16 	blt	r3,r2,8002e0 <__alt_data_end+0xff8002e0>
        k += x[i]*(0.5 + x[i]*cos(x[i]/128-1));
    }
    return(k);
  80046c:	e0bff617 	ldw	r2,-40(fp)
  800470:	1007883a 	mov	r3,r2
}
  800474:	1805883a 	mov	r2,r3
  800478:	e6fffa04 	addi	sp,fp,-24
  80047c:	dfc00717 	ldw	ra,28(sp)
  800480:	df000617 	ldw	fp,24(sp)
  800484:	dd400517 	ldw	r21,20(sp)
  800488:	dd000417 	ldw	r20,16(sp)
  80048c:	dcc00317 	ldw	r19,12(sp)
  800490:	dc800217 	ldw	r18,8(sp)
  800494:	dc400117 	ldw	r17,4(sp)
  800498:	dc000017 	ldw	r16,0(sp)
  80049c:	dec00804 	addi	sp,sp,32
  8004a0:	f800283a 	ret

008004a4 <main>:
int main()
{
  8004a4:	def7f404 	addi	sp,sp,-8240
  8004a8:	dfc80b15 	stw	ra,8236(sp)
  8004ac:	df080a15 	stw	fp,8232(sp)
  8004b0:	df080a04 	addi	fp,sp,8232
 printf("Task 2!\n");
  8004b4:	01002074 	movhi	r4,129
  8004b8:	212b8c04 	addi	r4,r4,-20944
  8004bc:	08058c40 	call	8058c4 <puts>
 // Define input vector
 float x[N];
 // Returned result
 float y;
 generateVector(x, N, step);
  8004c0:	e0b7fa04 	addi	r2,fp,-8216
  8004c4:	018f8034 	movhi	r6,15872
  8004c8:	0141fe44 	movi	r5,2041
  8004cc:	1009883a 	mov	r4,r2
  8004d0:	080020c0 	call	80020c <generateVector>
 // The following is used for timing
 char buf[50];
 clock_t exec_t1, exec_t2;
 exec_t1 = times(NULL); // get system time before starting the process
  8004d4:	0009883a 	mov	r4,zero
  8004d8:	08098680 	call	809868 <times>
  8004dc:	e0b7f815 	stw	r2,-8224(fp)

// The code that you want to time goes here
 y = sumVector(x, N);
  8004e0:	e0b7fa04 	addi	r2,fp,-8216
  8004e4:	0141fe44 	movi	r5,2041
  8004e8:	1009883a 	mov	r4,r2
  8004ec:	08002a40 	call	8002a4 <sumVector>
  8004f0:	e0b7f615 	stw	r2,-8232(fp)
 // till here
 exec_t2 = times(NULL); // get system time after finishing the process
  8004f4:	0009883a 	mov	r4,zero
  8004f8:	08098680 	call	809868 <times>
  8004fc:	e0b7f915 	stw	r2,-8220(fp)
 gcvt((exec_t2 - exec_t1), 10, buf);
  800500:	e0f7f917 	ldw	r3,-8220(fp)
  800504:	e0b7f817 	ldw	r2,-8224(fp)
  800508:	1885c83a 	sub	r2,r3,r2
  80050c:	1009883a 	mov	r4,r2
  800510:	08052b00 	call	8052b0 <__floatunsidf>
  800514:	1011883a 	mov	r8,r2
  800518:	1813883a 	mov	r9,r3
  80051c:	e0bff304 	addi	r2,fp,-52
  800520:	100f883a 	mov	r7,r2
  800524:	01800284 	movi	r6,10
  800528:	4009883a 	mov	r4,r8
  80052c:	480b883a 	mov	r5,r9
  800530:	08057640 	call	805764 <gcvt>
 alt_putstr(" proc time = "); alt_putstr(buf); alt_putstr(" ticks \n");
  800534:	01002074 	movhi	r4,129
  800538:	212b8e04 	addi	r4,r4,-20936
  80053c:	08097400 	call	809740 <alt_putstr>
  800540:	e0bff304 	addi	r2,fp,-52
  800544:	1009883a 	mov	r4,r2
  800548:	08097400 	call	809740 <alt_putstr>
  80054c:	01002074 	movhi	r4,129
  800550:	212b9204 	addi	r4,r4,-20920
  800554:	08097400 	call	809740 <alt_putstr>
 // printf could be used if there was enough memory
 int i;
 for (i=0; i<10; i++)
  800558:	e037f715 	stw	zero,-8228(fp)
  80055c:	00000806 	br	800580 <main+0xdc>
 y = y/2.0;
  800560:	01500034 	movhi	r5,16384
  800564:	e137f617 	ldw	r4,-8232(fp)
  800568:	08028b00 	call	8028b0 <__divsf3>
  80056c:	1007883a 	mov	r3,r2
  800570:	e0f7f615 	stw	r3,-8232(fp)
 exec_t2 = times(NULL); // get system time after finishing the process
 gcvt((exec_t2 - exec_t1), 10, buf);
 alt_putstr(" proc time = "); alt_putstr(buf); alt_putstr(" ticks \n");
 // printf could be used if there was enough memory
 int i;
 for (i=0; i<10; i++)
  800574:	e0b7f717 	ldw	r2,-8228(fp)
  800578:	10800044 	addi	r2,r2,1
  80057c:	e0b7f715 	stw	r2,-8228(fp)
  800580:	e0b7f717 	ldw	r2,-8228(fp)
  800584:	10800290 	cmplti	r2,r2,10
  800588:	103ff51e 	bne	r2,zero,800560 <__alt_data_end+0xff800560>
 y = y/2.0;
 gcvt(((int) y), 10, buf);
  80058c:	e137f617 	ldw	r4,-8232(fp)
  800590:	08035d00 	call	8035d0 <__fixsfsi>
  800594:	1009883a 	mov	r4,r2
  800598:	08051d40 	call	8051d4 <__floatsidf>
  80059c:	1011883a 	mov	r8,r2
  8005a0:	1813883a 	mov	r9,r3
  8005a4:	e0bff304 	addi	r2,fp,-52
  8005a8:	100f883a 	mov	r7,r2
  8005ac:	01800284 	movi	r6,10
  8005b0:	4009883a 	mov	r4,r8
  8005b4:	480b883a 	mov	r5,r9
  8005b8:	08057640 	call	805764 <gcvt>
 alt_putstr(" Result (divided by 1024) = "); alt_putstr(buf);
  8005bc:	01002074 	movhi	r4,129
  8005c0:	212b9504 	addi	r4,r4,-20908
  8005c4:	08097400 	call	809740 <alt_putstr>
  8005c8:	e0bff304 	addi	r2,fp,-52
  8005cc:	1009883a 	mov	r4,r2
  8005d0:	08097400 	call	809740 <alt_putstr>
 // printf could be used if there was enough memory
 return 0;
  8005d4:	0005883a 	mov	r2,zero
}
  8005d8:	e037883a 	mov	sp,fp
  8005dc:	dfc00117 	ldw	ra,4(sp)
  8005e0:	df000017 	ldw	fp,0(sp)
  8005e4:	dec00204 	addi	sp,sp,8
  8005e8:	f800283a 	ret

008005ec <cos>:
  8005ec:	00a00034 	movhi	r2,32768
  8005f0:	defffa04 	addi	sp,sp,-24
  8005f4:	10bfffc4 	addi	r2,r2,-1
  8005f8:	00cffa74 	movhi	r3,16361
  8005fc:	dfc00515 	stw	ra,20(sp)
  800600:	2884703a 	and	r2,r5,r2
  800604:	18c87ec4 	addi	r3,r3,8699
  800608:	1880180e 	bge	r3,r2,80066c <cos+0x80>
  80060c:	00dffc34 	movhi	r3,32752
  800610:	18ffffc4 	addi	r3,r3,-1
  800614:	1880060e 	bge	r3,r2,800630 <cos+0x44>
  800618:	280f883a 	mov	r7,r5
  80061c:	200d883a 	mov	r6,r4
  800620:	08048580 	call	804858 <__subdf3>
  800624:	dfc00517 	ldw	ra,20(sp)
  800628:	dec00604 	addi	sp,sp,24
  80062c:	f800283a 	ret
  800630:	d9800104 	addi	r6,sp,4
  800634:	08006d80 	call	8006d8 <__ieee754_rem_pio2>
  800638:	108000cc 	andi	r2,r2,3
  80063c:	00c00044 	movi	r3,1
  800640:	10c01726 	beq	r2,r3,8006a0 <cos+0xb4>
  800644:	01000084 	movi	r4,2
  800648:	11000e26 	beq	r2,r4,800684 <cos+0x98>
  80064c:	10001c26 	beq	r2,zero,8006c0 <cos+0xd4>
  800650:	d9800317 	ldw	r6,12(sp)
  800654:	d9c00417 	ldw	r7,16(sp)
  800658:	d9000117 	ldw	r4,4(sp)
  80065c:	d9400217 	ldw	r5,8(sp)
  800660:	d8c00015 	stw	r3,0(sp)
  800664:	08020780 	call	802078 <__kernel_sin>
  800668:	003fee06 	br	800624 <__alt_data_end+0xff800624>
  80066c:	000d883a 	mov	r6,zero
  800670:	000f883a 	mov	r7,zero
  800674:	0800e440 	call	800e44 <__kernel_cos>
  800678:	dfc00517 	ldw	ra,20(sp)
  80067c:	dec00604 	addi	sp,sp,24
  800680:	f800283a 	ret
  800684:	d9800317 	ldw	r6,12(sp)
  800688:	d9c00417 	ldw	r7,16(sp)
  80068c:	d9000117 	ldw	r4,4(sp)
  800690:	d9400217 	ldw	r5,8(sp)
  800694:	0800e440 	call	800e44 <__kernel_cos>
  800698:	18e0003c 	xorhi	r3,r3,32768
  80069c:	003fe106 	br	800624 <__alt_data_end+0xff800624>
  8006a0:	d9800317 	ldw	r6,12(sp)
  8006a4:	d9c00417 	ldw	r7,16(sp)
  8006a8:	d9000117 	ldw	r4,4(sp)
  8006ac:	d9400217 	ldw	r5,8(sp)
  8006b0:	d8800015 	stw	r2,0(sp)
  8006b4:	08020780 	call	802078 <__kernel_sin>
  8006b8:	18e0003c 	xorhi	r3,r3,32768
  8006bc:	003fd906 	br	800624 <__alt_data_end+0xff800624>
  8006c0:	d9800317 	ldw	r6,12(sp)
  8006c4:	d9c00417 	ldw	r7,16(sp)
  8006c8:	d9000117 	ldw	r4,4(sp)
  8006cc:	d9400217 	ldw	r5,8(sp)
  8006d0:	0800e440 	call	800e44 <__kernel_cos>
  8006d4:	003fd306 	br	800624 <__alt_data_end+0xff800624>

008006d8 <__ieee754_rem_pio2>:
  8006d8:	02200034 	movhi	r8,32768
  8006dc:	deffea04 	addi	sp,sp,-88
  8006e0:	423fffc4 	addi	r8,r8,-1
  8006e4:	00cffa74 	movhi	r3,16361
  8006e8:	ddc01315 	stw	r23,76(sp)
  8006ec:	dc400d15 	stw	r17,52(sp)
  8006f0:	dfc01515 	stw	ra,84(sp)
  8006f4:	df001415 	stw	fp,80(sp)
  8006f8:	dd801215 	stw	r22,72(sp)
  8006fc:	dd401115 	stw	r21,68(sp)
  800700:	dd001015 	stw	r20,64(sp)
  800704:	dcc00f15 	stw	r19,60(sp)
  800708:	dc800e15 	stw	r18,56(sp)
  80070c:	dc000c15 	stw	r16,48(sp)
  800710:	2a2e703a 	and	r23,r5,r8
  800714:	18c87ec4 	addi	r3,r3,8699
  800718:	2823883a 	mov	r17,r5
  80071c:	1dc0790e 	bge	r3,r23,800904 <__ieee754_rem_pio2+0x22c>
  800720:	009000f4 	movhi	r2,16387
  800724:	10b65ec4 	addi	r2,r2,-9861
  800728:	3021883a 	mov	r16,r6
  80072c:	2027883a 	mov	r19,r4
  800730:	15c02316 	blt	r2,r23,8007c0 <__ieee754_rem_pio2+0xe8>
  800734:	01cffe74 	movhi	r7,16377
  800738:	39c87ec4 	addi	r7,r7,8699
  80073c:	01951034 	movhi	r6,21568
  800740:	01417a0e 	bge	zero,r5,800d2c <__ieee754_rem_pio2+0x654>
  800744:	08048580 	call	804858 <__subdf3>
  800748:	1025883a 	mov	r18,r2
  80074c:	008ffe74 	movhi	r2,16377
  800750:	10887ec4 	addi	r2,r2,8699
  800754:	1823883a 	mov	r17,r3
  800758:	b8808426 	beq	r23,r2,80096c <__ieee754_rem_pio2+0x294>
  80075c:	018698b4 	movhi	r6,6754
  800760:	01cf7474 	movhi	r7,15825
  800764:	3198cc44 	addi	r6,r6,25393
  800768:	39ed1844 	addi	r7,r7,-19359
  80076c:	9009883a 	mov	r4,r18
  800770:	180b883a 	mov	r5,r3
  800774:	08048580 	call	804858 <__subdf3>
  800778:	100d883a 	mov	r6,r2
  80077c:	180f883a 	mov	r7,r3
  800780:	9009883a 	mov	r4,r18
  800784:	880b883a 	mov	r5,r17
  800788:	80800015 	stw	r2,0(r16)
  80078c:	80c00115 	stw	r3,4(r16)
  800790:	08048580 	call	804858 <__subdf3>
  800794:	018698b4 	movhi	r6,6754
  800798:	01cf7474 	movhi	r7,15825
  80079c:	3198cc44 	addi	r6,r6,25393
  8007a0:	39ed1844 	addi	r7,r7,-19359
  8007a4:	1009883a 	mov	r4,r2
  8007a8:	180b883a 	mov	r5,r3
  8007ac:	08048580 	call	804858 <__subdf3>
  8007b0:	80800215 	stw	r2,8(r16)
  8007b4:	80c00315 	stw	r3,12(r16)
  8007b8:	00800044 	movi	r2,1
  8007bc:	00005606 	br	800918 <__ieee754_rem_pio2+0x240>
  8007c0:	00904e74 	movhi	r2,16697
  8007c4:	10887ec4 	addi	r2,r2,8699
  8007c8:	15c0830e 	bge	r2,r23,8009d8 <__ieee754_rem_pio2+0x300>
  8007cc:	009ffc34 	movhi	r2,32752
  8007d0:	10bfffc4 	addi	r2,r2,-1
  8007d4:	15c05c16 	blt	r2,r23,800948 <__ieee754_rem_pio2+0x270>
  8007d8:	b829d53a 	srai	r20,r23,20
  8007dc:	a53efa84 	addi	r20,r20,-1046
  8007e0:	a024953a 	slli	r18,r20,20
  8007e4:	bca5c83a 	sub	r18,r23,r18
  8007e8:	900b883a 	mov	r5,r18
  8007ec:	08051540 	call	805154 <__fixdfsi>
  8007f0:	1009883a 	mov	r4,r2
  8007f4:	08051d40 	call	8051d4 <__floatsidf>
  8007f8:	9809883a 	mov	r4,r19
  8007fc:	900b883a 	mov	r5,r18
  800800:	100d883a 	mov	r6,r2
  800804:	180f883a 	mov	r7,r3
  800808:	d8800215 	stw	r2,8(sp)
  80080c:	d8c00315 	stw	r3,12(sp)
  800810:	08048580 	call	804858 <__subdf3>
  800814:	000d883a 	mov	r6,zero
  800818:	01d05c34 	movhi	r7,16752
  80081c:	1009883a 	mov	r4,r2
  800820:	180b883a 	mov	r5,r3
  800824:	08041400 	call	804140 <__muldf3>
  800828:	180b883a 	mov	r5,r3
  80082c:	1009883a 	mov	r4,r2
  800830:	182b883a 	mov	r21,r3
  800834:	102d883a 	mov	r22,r2
  800838:	08051540 	call	805154 <__fixdfsi>
  80083c:	1009883a 	mov	r4,r2
  800840:	08051d40 	call	8051d4 <__floatsidf>
  800844:	100d883a 	mov	r6,r2
  800848:	180f883a 	mov	r7,r3
  80084c:	b009883a 	mov	r4,r22
  800850:	a80b883a 	mov	r5,r21
  800854:	1027883a 	mov	r19,r2
  800858:	1825883a 	mov	r18,r3
  80085c:	d8800415 	stw	r2,16(sp)
  800860:	d8c00515 	stw	r3,20(sp)
  800864:	08048580 	call	804858 <__subdf3>
  800868:	000d883a 	mov	r6,zero
  80086c:	01d05c34 	movhi	r7,16752
  800870:	1009883a 	mov	r4,r2
  800874:	180b883a 	mov	r5,r3
  800878:	08041400 	call	804140 <__muldf3>
  80087c:	000d883a 	mov	r6,zero
  800880:	000f883a 	mov	r7,zero
  800884:	1009883a 	mov	r4,r2
  800888:	180b883a 	mov	r5,r3
  80088c:	d8800615 	stw	r2,24(sp)
  800890:	d8c00715 	stw	r3,28(sp)
  800894:	0803fdc0 	call	803fdc <__eqdf2>
  800898:	1001431e 	bne	r2,zero,800da8 <__ieee754_rem_pio2+0x6d0>
  80089c:	000f883a 	mov	r7,zero
  8008a0:	000d883a 	mov	r6,zero
  8008a4:	9809883a 	mov	r4,r19
  8008a8:	900b883a 	mov	r5,r18
  8008ac:	0803fdc0 	call	803fdc <__eqdf2>
  8008b0:	100f003a 	cmpeq	r7,r2,zero
  8008b4:	00800084 	movi	r2,2
  8008b8:	11cfc83a 	sub	r7,r2,r7
  8008bc:	00800084 	movi	r2,2
  8008c0:	d8800015 	stw	r2,0(sp)
  8008c4:	00802074 	movhi	r2,129
  8008c8:	10abbd04 	addi	r2,r2,-20748
  8008cc:	d8800115 	stw	r2,4(sp)
  8008d0:	a00d883a 	mov	r6,r20
  8008d4:	800b883a 	mov	r5,r16
  8008d8:	d9000204 	addi	r4,sp,8
  8008dc:	08012e80 	call	8012e8 <__kernel_rem_pio2>
  8008e0:	88000d0e 	bge	r17,zero,800918 <__ieee754_rem_pio2+0x240>
  8008e4:	81000117 	ldw	r4,4(r16)
  8008e8:	80c00317 	ldw	r3,12(r16)
  8008ec:	0085c83a 	sub	r2,zero,r2
  8008f0:	2120003c 	xorhi	r4,r4,32768
  8008f4:	18e0003c 	xorhi	r3,r3,32768
  8008f8:	81000115 	stw	r4,4(r16)
  8008fc:	80c00315 	stw	r3,12(r16)
  800900:	00000506 	br	800918 <__ieee754_rem_pio2+0x240>
  800904:	31000015 	stw	r4,0(r6)
  800908:	31400115 	stw	r5,4(r6)
  80090c:	30000215 	stw	zero,8(r6)
  800910:	30000315 	stw	zero,12(r6)
  800914:	0005883a 	mov	r2,zero
  800918:	dfc01517 	ldw	ra,84(sp)
  80091c:	df001417 	ldw	fp,80(sp)
  800920:	ddc01317 	ldw	r23,76(sp)
  800924:	dd801217 	ldw	r22,72(sp)
  800928:	dd401117 	ldw	r21,68(sp)
  80092c:	dd001017 	ldw	r20,64(sp)
  800930:	dcc00f17 	ldw	r19,60(sp)
  800934:	dc800e17 	ldw	r18,56(sp)
  800938:	dc400d17 	ldw	r17,52(sp)
  80093c:	dc000c17 	ldw	r16,48(sp)
  800940:	dec01604 	addi	sp,sp,88
  800944:	f800283a 	ret
  800948:	200d883a 	mov	r6,r4
  80094c:	280f883a 	mov	r7,r5
  800950:	08048580 	call	804858 <__subdf3>
  800954:	80800215 	stw	r2,8(r16)
  800958:	80800015 	stw	r2,0(r16)
  80095c:	80c00315 	stw	r3,12(r16)
  800960:	80c00115 	stw	r3,4(r16)
  800964:	0005883a 	mov	r2,zero
  800968:	003feb06 	br	800918 <__alt_data_end+0xff800918>
  80096c:	01cf7474 	movhi	r7,15825
  800970:	9009883a 	mov	r4,r18
  800974:	39ed1844 	addi	r7,r7,-19359
  800978:	01869834 	movhi	r6,6752
  80097c:	180b883a 	mov	r5,r3
  800980:	08048580 	call	804858 <__subdf3>
  800984:	018b80f4 	movhi	r6,11779
  800988:	01cee8f4 	movhi	r7,15267
  80098c:	319c1cc4 	addi	r6,r6,28787
  800990:	39c66284 	addi	r7,r7,6538
  800994:	1009883a 	mov	r4,r2
  800998:	180b883a 	mov	r5,r3
  80099c:	1025883a 	mov	r18,r2
  8009a0:	1823883a 	mov	r17,r3
  8009a4:	08048580 	call	804858 <__subdf3>
  8009a8:	100d883a 	mov	r6,r2
  8009ac:	180f883a 	mov	r7,r3
  8009b0:	9009883a 	mov	r4,r18
  8009b4:	880b883a 	mov	r5,r17
  8009b8:	80800015 	stw	r2,0(r16)
  8009bc:	80c00115 	stw	r3,4(r16)
  8009c0:	08048580 	call	804858 <__subdf3>
  8009c4:	018b80f4 	movhi	r6,11779
  8009c8:	01cee8f4 	movhi	r7,15267
  8009cc:	319c1cc4 	addi	r6,r6,28787
  8009d0:	39c66284 	addi	r7,r7,6538
  8009d4:	003f7306 	br	8007a4 <__alt_data_end+0xff8007a4>
  8009d8:	08023440 	call	802344 <fabs>
  8009dc:	019b72b4 	movhi	r6,28106
  8009e0:	01cff934 	movhi	r7,16356
  8009e4:	31b220c4 	addi	r6,r6,-14205
  8009e8:	39d7cc04 	addi	r7,r7,24368
  8009ec:	1009883a 	mov	r4,r2
  8009f0:	180b883a 	mov	r5,r3
  8009f4:	102d883a 	mov	r22,r2
  8009f8:	182b883a 	mov	r21,r3
  8009fc:	08041400 	call	804140 <__muldf3>
  800a00:	000d883a 	mov	r6,zero
  800a04:	01cff834 	movhi	r7,16352
  800a08:	1009883a 	mov	r4,r2
  800a0c:	180b883a 	mov	r5,r3
  800a10:	08037300 	call	803730 <__adddf3>
  800a14:	180b883a 	mov	r5,r3
  800a18:	1009883a 	mov	r4,r2
  800a1c:	08051540 	call	805154 <__fixdfsi>
  800a20:	1009883a 	mov	r4,r2
  800a24:	1025883a 	mov	r18,r2
  800a28:	08051d40 	call	8051d4 <__floatsidf>
  800a2c:	01cffe74 	movhi	r7,16377
  800a30:	39c87ec4 	addi	r7,r7,8699
  800a34:	01951034 	movhi	r6,21568
  800a38:	1009883a 	mov	r4,r2
  800a3c:	180b883a 	mov	r5,r3
  800a40:	1029883a 	mov	r20,r2
  800a44:	1827883a 	mov	r19,r3
  800a48:	08041400 	call	804140 <__muldf3>
  800a4c:	b009883a 	mov	r4,r22
  800a50:	a80b883a 	mov	r5,r21
  800a54:	100d883a 	mov	r6,r2
  800a58:	180f883a 	mov	r7,r3
  800a5c:	08048580 	call	804858 <__subdf3>
  800a60:	018698b4 	movhi	r6,6754
  800a64:	01cf7474 	movhi	r7,15825
  800a68:	a009883a 	mov	r4,r20
  800a6c:	3198cc44 	addi	r6,r6,25393
  800a70:	39ed1844 	addi	r7,r7,-19359
  800a74:	980b883a 	mov	r5,r19
  800a78:	1039883a 	mov	fp,r2
  800a7c:	d8c00815 	stw	r3,32(sp)
  800a80:	08041400 	call	804140 <__muldf3>
  800a84:	010007c4 	movi	r4,31
  800a88:	e017883a 	mov	r11,fp
  800a8c:	da800817 	ldw	r10,32(sp)
  800a90:	102d883a 	mov	r22,r2
  800a94:	182b883a 	mov	r21,r3
  800a98:	24802816 	blt	r4,r18,800b3c <__ieee754_rem_pio2+0x464>
  800a9c:	913fffc4 	addi	r4,r18,-1
  800aa0:	2109883a 	add	r4,r4,r4
  800aa4:	01402074 	movhi	r5,129
  800aa8:	2109883a 	add	r4,r4,r4
  800aac:	296b9d04 	addi	r5,r5,-20876
  800ab0:	2909883a 	add	r4,r5,r4
  800ab4:	21000017 	ldw	r4,0(r4)
  800ab8:	b9002026 	beq	r23,r4,800b3c <__ieee754_rem_pio2+0x464>
  800abc:	100d883a 	mov	r6,r2
  800ac0:	180f883a 	mov	r7,r3
  800ac4:	e009883a 	mov	r4,fp
  800ac8:	500b883a 	mov	r5,r10
  800acc:	da800b15 	stw	r10,44(sp)
  800ad0:	df000a15 	stw	fp,40(sp)
  800ad4:	08048580 	call	804858 <__subdf3>
  800ad8:	da800b17 	ldw	r10,44(sp)
  800adc:	dac00a17 	ldw	r11,40(sp)
  800ae0:	1019883a 	mov	r12,r2
  800ae4:	1813883a 	mov	r9,r3
  800ae8:	80800015 	stw	r2,0(r16)
  800aec:	80c00115 	stw	r3,4(r16)
  800af0:	600d883a 	mov	r6,r12
  800af4:	480f883a 	mov	r7,r9
  800af8:	5809883a 	mov	r4,r11
  800afc:	500b883a 	mov	r5,r10
  800b00:	da400b15 	stw	r9,44(sp)
  800b04:	db000a15 	stw	r12,40(sp)
  800b08:	08048580 	call	804858 <__subdf3>
  800b0c:	b00d883a 	mov	r6,r22
  800b10:	a80f883a 	mov	r7,r21
  800b14:	1009883a 	mov	r4,r2
  800b18:	180b883a 	mov	r5,r3
  800b1c:	08048580 	call	804858 <__subdf3>
  800b20:	80800215 	stw	r2,8(r16)
  800b24:	80c00315 	stw	r3,12(r16)
  800b28:	da400b17 	ldw	r9,44(sp)
  800b2c:	db000a17 	ldw	r12,40(sp)
  800b30:	88009f16 	blt	r17,zero,800db0 <__ieee754_rem_pio2+0x6d8>
  800b34:	9005883a 	mov	r2,r18
  800b38:	003f7706 	br	800918 <__alt_data_end+0xff800918>
  800b3c:	d9400817 	ldw	r5,32(sp)
  800b40:	100d883a 	mov	r6,r2
  800b44:	180f883a 	mov	r7,r3
  800b48:	e009883a 	mov	r4,fp
  800b4c:	da800b15 	stw	r10,44(sp)
  800b50:	dac00a15 	stw	r11,40(sp)
  800b54:	08048580 	call	804858 <__subdf3>
  800b58:	1019883a 	mov	r12,r2
  800b5c:	1804d53a 	srli	r2,r3,20
  800b60:	b811d53a 	srai	r8,r23,20
  800b64:	1813883a 	mov	r9,r3
  800b68:	1081ffcc 	andi	r2,r2,2047
  800b6c:	80c00115 	stw	r3,4(r16)
  800b70:	83000015 	stw	r12,0(r16)
  800b74:	4085c83a 	sub	r2,r8,r2
  800b78:	00c00404 	movi	r3,16
  800b7c:	da800b17 	ldw	r10,44(sp)
  800b80:	dac00a17 	ldw	r11,40(sp)
  800b84:	18bfda0e 	bge	r3,r2,800af0 <__alt_data_end+0xff800af0>
  800b88:	01cf7474 	movhi	r7,15825
  800b8c:	39ed1844 	addi	r7,r7,-19359
  800b90:	01869834 	movhi	r6,6752
  800b94:	a009883a 	mov	r4,r20
  800b98:	980b883a 	mov	r5,r19
  800b9c:	da000a15 	stw	r8,40(sp)
  800ba0:	08041400 	call	804140 <__muldf3>
  800ba4:	d9400817 	ldw	r5,32(sp)
  800ba8:	100d883a 	mov	r6,r2
  800bac:	180f883a 	mov	r7,r3
  800bb0:	e009883a 	mov	r4,fp
  800bb4:	102d883a 	mov	r22,r2
  800bb8:	182b883a 	mov	r21,r3
  800bbc:	08048580 	call	804858 <__subdf3>
  800bc0:	d9400817 	ldw	r5,32(sp)
  800bc4:	100d883a 	mov	r6,r2
  800bc8:	180f883a 	mov	r7,r3
  800bcc:	e009883a 	mov	r4,fp
  800bd0:	182f883a 	mov	r23,r3
  800bd4:	d8800915 	stw	r2,36(sp)
  800bd8:	08048580 	call	804858 <__subdf3>
  800bdc:	b00d883a 	mov	r6,r22
  800be0:	a80f883a 	mov	r7,r21
  800be4:	1009883a 	mov	r4,r2
  800be8:	180b883a 	mov	r5,r3
  800bec:	08048580 	call	804858 <__subdf3>
  800bf0:	018b80f4 	movhi	r6,11779
  800bf4:	01cee8f4 	movhi	r7,15267
  800bf8:	319c1cc4 	addi	r6,r6,28787
  800bfc:	39c66284 	addi	r7,r7,6538
  800c00:	a009883a 	mov	r4,r20
  800c04:	980b883a 	mov	r5,r19
  800c08:	102d883a 	mov	r22,r2
  800c0c:	182b883a 	mov	r21,r3
  800c10:	08041400 	call	804140 <__muldf3>
  800c14:	b00d883a 	mov	r6,r22
  800c18:	a80f883a 	mov	r7,r21
  800c1c:	1009883a 	mov	r4,r2
  800c20:	180b883a 	mov	r5,r3
  800c24:	08048580 	call	804858 <__subdf3>
  800c28:	d9000917 	ldw	r4,36(sp)
  800c2c:	100d883a 	mov	r6,r2
  800c30:	180f883a 	mov	r7,r3
  800c34:	b80b883a 	mov	r5,r23
  800c38:	102d883a 	mov	r22,r2
  800c3c:	182b883a 	mov	r21,r3
  800c40:	08048580 	call	804858 <__subdf3>
  800c44:	1019883a 	mov	r12,r2
  800c48:	1804d53a 	srli	r2,r3,20
  800c4c:	da000a17 	ldw	r8,40(sp)
  800c50:	83000015 	stw	r12,0(r16)
  800c54:	1081ffcc 	andi	r2,r2,2047
  800c58:	4091c83a 	sub	r8,r8,r2
  800c5c:	80c00115 	stw	r3,4(r16)
  800c60:	00800c44 	movi	r2,49
  800c64:	1813883a 	mov	r9,r3
  800c68:	1200730e 	bge	r2,r8,800e38 <__ieee754_rem_pio2+0x760>
  800c6c:	01cee8f4 	movhi	r7,15267
  800c70:	39c66284 	addi	r7,r7,6538
  800c74:	018b8034 	movhi	r6,11776
  800c78:	a009883a 	mov	r4,r20
  800c7c:	980b883a 	mov	r5,r19
  800c80:	08041400 	call	804140 <__muldf3>
  800c84:	d9000917 	ldw	r4,36(sp)
  800c88:	100d883a 	mov	r6,r2
  800c8c:	180f883a 	mov	r7,r3
  800c90:	b80b883a 	mov	r5,r23
  800c94:	102d883a 	mov	r22,r2
  800c98:	182b883a 	mov	r21,r3
  800c9c:	08048580 	call	804858 <__subdf3>
  800ca0:	d9000917 	ldw	r4,36(sp)
  800ca4:	100d883a 	mov	r6,r2
  800ca8:	180f883a 	mov	r7,r3
  800cac:	b80b883a 	mov	r5,r23
  800cb0:	d8c00b15 	stw	r3,44(sp)
  800cb4:	d8800a15 	stw	r2,40(sp)
  800cb8:	08048580 	call	804858 <__subdf3>
  800cbc:	b00d883a 	mov	r6,r22
  800cc0:	a80f883a 	mov	r7,r21
  800cc4:	1009883a 	mov	r4,r2
  800cc8:	180b883a 	mov	r5,r3
  800ccc:	08048580 	call	804858 <__subdf3>
  800cd0:	01894834 	movhi	r6,9504
  800cd4:	01ce5f34 	movhi	r7,14716
  800cd8:	31927044 	addi	r6,r6,18881
  800cdc:	39e0e684 	addi	r7,r7,-31846
  800ce0:	a009883a 	mov	r4,r20
  800ce4:	980b883a 	mov	r5,r19
  800ce8:	102d883a 	mov	r22,r2
  800cec:	182b883a 	mov	r21,r3
  800cf0:	08041400 	call	804140 <__muldf3>
  800cf4:	b00d883a 	mov	r6,r22
  800cf8:	a80f883a 	mov	r7,r21
  800cfc:	1009883a 	mov	r4,r2
  800d00:	180b883a 	mov	r5,r3
  800d04:	08048580 	call	804858 <__subdf3>
  800d08:	dac00a17 	ldw	r11,40(sp)
  800d0c:	da800b17 	ldw	r10,44(sp)
  800d10:	102d883a 	mov	r22,r2
  800d14:	182b883a 	mov	r21,r3
  800d18:	100d883a 	mov	r6,r2
  800d1c:	180f883a 	mov	r7,r3
  800d20:	5809883a 	mov	r4,r11
  800d24:	500b883a 	mov	r5,r10
  800d28:	003f6a06 	br	800ad4 <__alt_data_end+0xff800ad4>
  800d2c:	08037300 	call	803730 <__adddf3>
  800d30:	1025883a 	mov	r18,r2
  800d34:	008ffe74 	movhi	r2,16377
  800d38:	10887ec4 	addi	r2,r2,8699
  800d3c:	1823883a 	mov	r17,r3
  800d40:	b8802226 	beq	r23,r2,800dcc <__ieee754_rem_pio2+0x6f4>
  800d44:	018698b4 	movhi	r6,6754
  800d48:	01cf7474 	movhi	r7,15825
  800d4c:	3198cc44 	addi	r6,r6,25393
  800d50:	39ed1844 	addi	r7,r7,-19359
  800d54:	9009883a 	mov	r4,r18
  800d58:	180b883a 	mov	r5,r3
  800d5c:	08037300 	call	803730 <__adddf3>
  800d60:	100d883a 	mov	r6,r2
  800d64:	180f883a 	mov	r7,r3
  800d68:	9009883a 	mov	r4,r18
  800d6c:	880b883a 	mov	r5,r17
  800d70:	80800015 	stw	r2,0(r16)
  800d74:	80c00115 	stw	r3,4(r16)
  800d78:	08048580 	call	804858 <__subdf3>
  800d7c:	018698b4 	movhi	r6,6754
  800d80:	01cf7474 	movhi	r7,15825
  800d84:	3198cc44 	addi	r6,r6,25393
  800d88:	39ed1844 	addi	r7,r7,-19359
  800d8c:	1009883a 	mov	r4,r2
  800d90:	180b883a 	mov	r5,r3
  800d94:	08037300 	call	803730 <__adddf3>
  800d98:	80800215 	stw	r2,8(r16)
  800d9c:	80c00315 	stw	r3,12(r16)
  800da0:	00bfffc4 	movi	r2,-1
  800da4:	003edc06 	br	800918 <__alt_data_end+0xff800918>
  800da8:	01c000c4 	movi	r7,3
  800dac:	003ec306 	br	8008bc <__alt_data_end+0xff8008bc>
  800db0:	4a60003c 	xorhi	r9,r9,32768
  800db4:	18e0003c 	xorhi	r3,r3,32768
  800db8:	83000015 	stw	r12,0(r16)
  800dbc:	82400115 	stw	r9,4(r16)
  800dc0:	80c00315 	stw	r3,12(r16)
  800dc4:	0485c83a 	sub	r2,zero,r18
  800dc8:	003ed306 	br	800918 <__alt_data_end+0xff800918>
  800dcc:	01cf7474 	movhi	r7,15825
  800dd0:	9009883a 	mov	r4,r18
  800dd4:	39ed1844 	addi	r7,r7,-19359
  800dd8:	01869834 	movhi	r6,6752
  800ddc:	180b883a 	mov	r5,r3
  800de0:	08037300 	call	803730 <__adddf3>
  800de4:	018b80f4 	movhi	r6,11779
  800de8:	01cee8f4 	movhi	r7,15267
  800dec:	319c1cc4 	addi	r6,r6,28787
  800df0:	39c66284 	addi	r7,r7,6538
  800df4:	1009883a 	mov	r4,r2
  800df8:	180b883a 	mov	r5,r3
  800dfc:	1025883a 	mov	r18,r2
  800e00:	1823883a 	mov	r17,r3
  800e04:	08037300 	call	803730 <__adddf3>
  800e08:	100d883a 	mov	r6,r2
  800e0c:	180f883a 	mov	r7,r3
  800e10:	9009883a 	mov	r4,r18
  800e14:	880b883a 	mov	r5,r17
  800e18:	80800015 	stw	r2,0(r16)
  800e1c:	80c00115 	stw	r3,4(r16)
  800e20:	08048580 	call	804858 <__subdf3>
  800e24:	018b80f4 	movhi	r6,11779
  800e28:	01cee8f4 	movhi	r7,15267
  800e2c:	319c1cc4 	addi	r6,r6,28787
  800e30:	39c66284 	addi	r7,r7,6538
  800e34:	003fd506 	br	800d8c <__alt_data_end+0xff800d8c>
  800e38:	dac00917 	ldw	r11,36(sp)
  800e3c:	b815883a 	mov	r10,r23
  800e40:	003f2b06 	br	800af0 <__alt_data_end+0xff800af0>

00800e44 <__kernel_cos>:
  800e44:	defff304 	addi	sp,sp,-52
  800e48:	dc000315 	stw	r16,12(sp)
  800e4c:	04200034 	movhi	r16,32768
  800e50:	843fffc4 	addi	r16,r16,-1
  800e54:	008f9034 	movhi	r2,15936
  800e58:	df000b15 	stw	fp,44(sp)
  800e5c:	ddc00a15 	stw	r23,40(sp)
  800e60:	dd800915 	stw	r22,36(sp)
  800e64:	dcc00615 	stw	r19,24(sp)
  800e68:	dfc00c15 	stw	ra,48(sp)
  800e6c:	dd400815 	stw	r21,32(sp)
  800e70:	dd000715 	stw	r20,28(sp)
  800e74:	dc800515 	stw	r18,20(sp)
  800e78:	dc400415 	stw	r17,16(sp)
  800e7c:	2c20703a 	and	r16,r5,r16
  800e80:	10bfffc4 	addi	r2,r2,-1
  800e84:	2827883a 	mov	r19,r5
  800e88:	202d883a 	mov	r22,r4
  800e8c:	302f883a 	mov	r23,r6
  800e90:	3839883a 	mov	fp,r7
  800e94:	14007516 	blt	r2,r16,80106c <__kernel_cos+0x228>
  800e98:	08051540 	call	805154 <__fixdfsi>
  800e9c:	10010f26 	beq	r2,zero,8012dc <__kernel_cos+0x498>
  800ea0:	b00d883a 	mov	r6,r22
  800ea4:	980f883a 	mov	r7,r19
  800ea8:	b009883a 	mov	r4,r22
  800eac:	980b883a 	mov	r5,r19
  800eb0:	08041400 	call	804140 <__muldf3>
  800eb4:	01afa234 	movhi	r6,48776
  800eb8:	01ef6a74 	movhi	r7,48553
  800ebc:	318e3504 	addi	r6,r6,14548
  800ec0:	39feba44 	addi	r7,r7,-1303
  800ec4:	1009883a 	mov	r4,r2
  800ec8:	180b883a 	mov	r5,r3
  800ecc:	102b883a 	mov	r21,r2
  800ed0:	1829883a 	mov	r20,r3
  800ed4:	08041400 	call	804140 <__muldf3>
  800ed8:	01af6d74 	movhi	r6,48565
  800edc:	01cf88b4 	movhi	r7,15906
  800ee0:	31ac7104 	addi	r6,r6,-20028
  800ee4:	39fba784 	addi	r7,r7,-4450
  800ee8:	1009883a 	mov	r4,r2
  800eec:	180b883a 	mov	r5,r3
  800ef0:	08037300 	call	803730 <__adddf3>
  800ef4:	a80d883a 	mov	r6,r21
  800ef8:	a00f883a 	mov	r7,r20
  800efc:	1009883a 	mov	r4,r2
  800f00:	180b883a 	mov	r5,r3
  800f04:	08041400 	call	804140 <__muldf3>
  800f08:	01a02734 	movhi	r6,32924
  800f0c:	01cfa4b4 	movhi	r7,16018
  800f10:	3194ab44 	addi	r6,r6,21165
  800f14:	39df93c4 	addi	r7,r7,32335
  800f18:	1009883a 	mov	r4,r2
  800f1c:	180b883a 	mov	r5,r3
  800f20:	08048580 	call	804858 <__subdf3>
  800f24:	a80d883a 	mov	r6,r21
  800f28:	a00f883a 	mov	r7,r20
  800f2c:	1009883a 	mov	r4,r2
  800f30:	180b883a 	mov	r5,r3
  800f34:	08041400 	call	804140 <__muldf3>
  800f38:	018672f4 	movhi	r6,6603
  800f3c:	01cfbeb4 	movhi	r7,16122
  800f40:	31856404 	addi	r6,r6,5520
  800f44:	39c06804 	addi	r7,r7,416
  800f48:	1009883a 	mov	r4,r2
  800f4c:	180b883a 	mov	r5,r3
  800f50:	08037300 	call	803730 <__adddf3>
  800f54:	a80d883a 	mov	r6,r21
  800f58:	a00f883a 	mov	r7,r20
  800f5c:	1009883a 	mov	r4,r2
  800f60:	180b883a 	mov	r5,r3
  800f64:	08041400 	call	804140 <__muldf3>
  800f68:	0185b074 	movhi	r6,5825
  800f6c:	01cfd5f4 	movhi	r7,16215
  800f70:	31945dc4 	addi	r6,r6,20855
  800f74:	39f05b04 	addi	r7,r7,-16020
  800f78:	1009883a 	mov	r4,r2
  800f7c:	180b883a 	mov	r5,r3
  800f80:	08048580 	call	804858 <__subdf3>
  800f84:	a80d883a 	mov	r6,r21
  800f88:	a00f883a 	mov	r7,r20
  800f8c:	1009883a 	mov	r4,r2
  800f90:	180b883a 	mov	r5,r3
  800f94:	08041400 	call	804140 <__muldf3>
  800f98:	01955574 	movhi	r6,21845
  800f9c:	01cfe974 	movhi	r7,16293
  800fa0:	31955304 	addi	r6,r6,21836
  800fa4:	39d55544 	addi	r7,r7,21845
  800fa8:	1009883a 	mov	r4,r2
  800fac:	180b883a 	mov	r5,r3
  800fb0:	08037300 	call	803730 <__adddf3>
  800fb4:	a80d883a 	mov	r6,r21
  800fb8:	a00f883a 	mov	r7,r20
  800fbc:	1009883a 	mov	r4,r2
  800fc0:	180b883a 	mov	r5,r3
  800fc4:	08041400 	call	804140 <__muldf3>
  800fc8:	1017883a 	mov	r11,r2
  800fcc:	1815883a 	mov	r10,r3
  800fd0:	a809883a 	mov	r4,r21
  800fd4:	a00b883a 	mov	r5,r20
  800fd8:	000d883a 	mov	r6,zero
  800fdc:	01cff834 	movhi	r7,16352
  800fe0:	da800215 	stw	r10,8(sp)
  800fe4:	dac00115 	stw	r11,4(sp)
  800fe8:	08041400 	call	804140 <__muldf3>
  800fec:	dac00117 	ldw	r11,4(sp)
  800ff0:	da800217 	ldw	r10,8(sp)
  800ff4:	a809883a 	mov	r4,r21
  800ff8:	580d883a 	mov	r6,r11
  800ffc:	500f883a 	mov	r7,r10
  801000:	a00b883a 	mov	r5,r20
  801004:	1023883a 	mov	r17,r2
  801008:	1821883a 	mov	r16,r3
  80100c:	08041400 	call	804140 <__muldf3>
  801010:	b80d883a 	mov	r6,r23
  801014:	e00f883a 	mov	r7,fp
  801018:	b009883a 	mov	r4,r22
  80101c:	980b883a 	mov	r5,r19
  801020:	1029883a 	mov	r20,r2
  801024:	1825883a 	mov	r18,r3
  801028:	08041400 	call	804140 <__muldf3>
  80102c:	a009883a 	mov	r4,r20
  801030:	900b883a 	mov	r5,r18
  801034:	100d883a 	mov	r6,r2
  801038:	180f883a 	mov	r7,r3
  80103c:	08048580 	call	804858 <__subdf3>
  801040:	8809883a 	mov	r4,r17
  801044:	800b883a 	mov	r5,r16
  801048:	100d883a 	mov	r6,r2
  80104c:	180f883a 	mov	r7,r3
  801050:	08048580 	call	804858 <__subdf3>
  801054:	100d883a 	mov	r6,r2
  801058:	180f883a 	mov	r7,r3
  80105c:	0009883a 	mov	r4,zero
  801060:	014ffc34 	movhi	r5,16368
  801064:	08048580 	call	804858 <__subdf3>
  801068:	00008b06 	br	801298 <__kernel_cos+0x454>
  80106c:	200d883a 	mov	r6,r4
  801070:	280f883a 	mov	r7,r5
  801074:	08041400 	call	804140 <__muldf3>
  801078:	01afa234 	movhi	r6,48776
  80107c:	01ef6a74 	movhi	r7,48553
  801080:	318e3504 	addi	r6,r6,14548
  801084:	39feba44 	addi	r7,r7,-1303
  801088:	1009883a 	mov	r4,r2
  80108c:	180b883a 	mov	r5,r3
  801090:	1025883a 	mov	r18,r2
  801094:	1823883a 	mov	r17,r3
  801098:	08041400 	call	804140 <__muldf3>
  80109c:	01af6d74 	movhi	r6,48565
  8010a0:	01cf88b4 	movhi	r7,15906
  8010a4:	31ac7104 	addi	r6,r6,-20028
  8010a8:	39fba784 	addi	r7,r7,-4450
  8010ac:	1009883a 	mov	r4,r2
  8010b0:	180b883a 	mov	r5,r3
  8010b4:	08037300 	call	803730 <__adddf3>
  8010b8:	900d883a 	mov	r6,r18
  8010bc:	880f883a 	mov	r7,r17
  8010c0:	1009883a 	mov	r4,r2
  8010c4:	180b883a 	mov	r5,r3
  8010c8:	08041400 	call	804140 <__muldf3>
  8010cc:	01a02734 	movhi	r6,32924
  8010d0:	01cfa4b4 	movhi	r7,16018
  8010d4:	3194ab44 	addi	r6,r6,21165
  8010d8:	39df93c4 	addi	r7,r7,32335
  8010dc:	1009883a 	mov	r4,r2
  8010e0:	180b883a 	mov	r5,r3
  8010e4:	08048580 	call	804858 <__subdf3>
  8010e8:	900d883a 	mov	r6,r18
  8010ec:	880f883a 	mov	r7,r17
  8010f0:	1009883a 	mov	r4,r2
  8010f4:	180b883a 	mov	r5,r3
  8010f8:	08041400 	call	804140 <__muldf3>
  8010fc:	018672f4 	movhi	r6,6603
  801100:	01cfbeb4 	movhi	r7,16122
  801104:	31856404 	addi	r6,r6,5520
  801108:	39c06804 	addi	r7,r7,416
  80110c:	1009883a 	mov	r4,r2
  801110:	180b883a 	mov	r5,r3
  801114:	08037300 	call	803730 <__adddf3>
  801118:	900d883a 	mov	r6,r18
  80111c:	880f883a 	mov	r7,r17
  801120:	1009883a 	mov	r4,r2
  801124:	180b883a 	mov	r5,r3
  801128:	08041400 	call	804140 <__muldf3>
  80112c:	0185b074 	movhi	r6,5825
  801130:	01cfd5f4 	movhi	r7,16215
  801134:	31945dc4 	addi	r6,r6,20855
  801138:	39f05b04 	addi	r7,r7,-16020
  80113c:	1009883a 	mov	r4,r2
  801140:	180b883a 	mov	r5,r3
  801144:	08048580 	call	804858 <__subdf3>
  801148:	900d883a 	mov	r6,r18
  80114c:	880f883a 	mov	r7,r17
  801150:	1009883a 	mov	r4,r2
  801154:	180b883a 	mov	r5,r3
  801158:	08041400 	call	804140 <__muldf3>
  80115c:	01955574 	movhi	r6,21845
  801160:	01cfe974 	movhi	r7,16293
  801164:	31955304 	addi	r6,r6,21836
  801168:	39d55544 	addi	r7,r7,21845
  80116c:	1009883a 	mov	r4,r2
  801170:	180b883a 	mov	r5,r3
  801174:	08037300 	call	803730 <__adddf3>
  801178:	900d883a 	mov	r6,r18
  80117c:	880f883a 	mov	r7,r17
  801180:	1009883a 	mov	r4,r2
  801184:	180b883a 	mov	r5,r3
  801188:	08041400 	call	804140 <__muldf3>
  80118c:	1013883a 	mov	r9,r2
  801190:	1017883a 	mov	r11,r2
  801194:	008ff4f4 	movhi	r2,16339
  801198:	108ccc84 	addi	r2,r2,13106
  80119c:	1811883a 	mov	r8,r3
  8011a0:	902b883a 	mov	r21,r18
  8011a4:	8829883a 	mov	r20,r17
  8011a8:	1815883a 	mov	r10,r3
  8011ac:	143f880e 	bge	r2,r16,800fd0 <__alt_data_end+0xff800fd0>
  8011b0:	008ffa74 	movhi	r2,16361
  8011b4:	14004416 	blt	r2,r16,8012c8 <__kernel_cos+0x484>
  8011b8:	00bff834 	movhi	r2,65504
  8011bc:	80a1883a 	add	r16,r16,r2
  8011c0:	000d883a 	mov	r6,zero
  8011c4:	800f883a 	mov	r7,r16
  8011c8:	0009883a 	mov	r4,zero
  8011cc:	014ffc34 	movhi	r5,16368
  8011d0:	da400115 	stw	r9,4(sp)
  8011d4:	d8c00215 	stw	r3,8(sp)
  8011d8:	08048580 	call	804858 <__subdf3>
  8011dc:	da000217 	ldw	r8,8(sp)
  8011e0:	da400117 	ldw	r9,4(sp)
  8011e4:	102b883a 	mov	r21,r2
  8011e8:	d8c00015 	stw	r3,0(sp)
  8011ec:	9009883a 	mov	r4,r18
  8011f0:	880b883a 	mov	r5,r17
  8011f4:	000d883a 	mov	r6,zero
  8011f8:	01cff834 	movhi	r7,16352
  8011fc:	da000215 	stw	r8,8(sp)
  801200:	da400115 	stw	r9,4(sp)
  801204:	08041400 	call	804140 <__muldf3>
  801208:	800f883a 	mov	r7,r16
  80120c:	000d883a 	mov	r6,zero
  801210:	1009883a 	mov	r4,r2
  801214:	180b883a 	mov	r5,r3
  801218:	08048580 	call	804858 <__subdf3>
  80121c:	da400117 	ldw	r9,4(sp)
  801220:	da000217 	ldw	r8,8(sp)
  801224:	9009883a 	mov	r4,r18
  801228:	480d883a 	mov	r6,r9
  80122c:	400f883a 	mov	r7,r8
  801230:	880b883a 	mov	r5,r17
  801234:	1029883a 	mov	r20,r2
  801238:	1821883a 	mov	r16,r3
  80123c:	08041400 	call	804140 <__muldf3>
  801240:	b80d883a 	mov	r6,r23
  801244:	e00f883a 	mov	r7,fp
  801248:	b009883a 	mov	r4,r22
  80124c:	980b883a 	mov	r5,r19
  801250:	1025883a 	mov	r18,r2
  801254:	1823883a 	mov	r17,r3
  801258:	08041400 	call	804140 <__muldf3>
  80125c:	100d883a 	mov	r6,r2
  801260:	180f883a 	mov	r7,r3
  801264:	9009883a 	mov	r4,r18
  801268:	880b883a 	mov	r5,r17
  80126c:	08048580 	call	804858 <__subdf3>
  801270:	100d883a 	mov	r6,r2
  801274:	180f883a 	mov	r7,r3
  801278:	a009883a 	mov	r4,r20
  80127c:	800b883a 	mov	r5,r16
  801280:	08048580 	call	804858 <__subdf3>
  801284:	d9400017 	ldw	r5,0(sp)
  801288:	100d883a 	mov	r6,r2
  80128c:	180f883a 	mov	r7,r3
  801290:	a809883a 	mov	r4,r21
  801294:	08048580 	call	804858 <__subdf3>
  801298:	dfc00c17 	ldw	ra,48(sp)
  80129c:	df000b17 	ldw	fp,44(sp)
  8012a0:	ddc00a17 	ldw	r23,40(sp)
  8012a4:	dd800917 	ldw	r22,36(sp)
  8012a8:	dd400817 	ldw	r21,32(sp)
  8012ac:	dd000717 	ldw	r20,28(sp)
  8012b0:	dcc00617 	ldw	r19,24(sp)
  8012b4:	dc800517 	ldw	r18,20(sp)
  8012b8:	dc400417 	ldw	r17,16(sp)
  8012bc:	dc000317 	ldw	r16,12(sp)
  8012c0:	dec00d04 	addi	sp,sp,52
  8012c4:	f800283a 	ret
  8012c8:	008ff9f4 	movhi	r2,16359
  8012cc:	002b883a 	mov	r21,zero
  8012d0:	d8800015 	stw	r2,0(sp)
  8012d4:	040ff4b4 	movhi	r16,16338
  8012d8:	003fc406 	br	8011ec <__alt_data_end+0xff8011ec>
  8012dc:	0005883a 	mov	r2,zero
  8012e0:	00cffc34 	movhi	r3,16368
  8012e4:	003fec06 	br	801298 <__alt_data_end+0xff801298>

008012e8 <__kernel_rem_pio2>:
  8012e8:	deff5a04 	addi	sp,sp,-664
  8012ec:	da00a617 	ldw	r8,664(sp)
  8012f0:	00c02074 	movhi	r3,129
  8012f4:	18ec0f04 	addi	r3,r3,-20420
  8012f8:	4205883a 	add	r2,r8,r8
  8012fc:	1085883a 	add	r2,r2,r2
  801300:	1885883a 	add	r2,r3,r2
  801304:	d9008e15 	stw	r4,568(sp)
  801308:	d9408f15 	stw	r5,572(sp)
  80130c:	313fff44 	addi	r4,r6,-3
  801310:	01400604 	movi	r5,24
  801314:	dd80a215 	stw	r22,648(sp)
  801318:	dc009c15 	stw	r16,624(sp)
  80131c:	dfc0a515 	stw	ra,660(sp)
  801320:	df00a415 	stw	fp,656(sp)
  801324:	ddc0a315 	stw	r23,652(sp)
  801328:	dd40a115 	stw	r21,644(sp)
  80132c:	dd00a015 	stw	r20,640(sp)
  801330:	dcc09f15 	stw	r19,636(sp)
  801334:	dc809e15 	stw	r18,632(sp)
  801338:	dc409d15 	stw	r17,628(sp)
  80133c:	3021883a 	mov	r16,r6
  801340:	d9c09315 	stw	r7,588(sp)
  801344:	15800017 	ldw	r22,0(r2)
  801348:	08026fc0 	call	8026fc <__divsi3>
  80134c:	da009317 	ldw	r8,588(sp)
  801350:	d8809215 	stw	r2,584(sp)
  801354:	423fffc4 	addi	r8,r8,-1
  801358:	da008d15 	stw	r8,564(sp)
  80135c:	10033b16 	blt	r2,zero,80204c <__kernel_rem_pio2+0xd64>
  801360:	da009217 	ldw	r8,584(sp)
  801364:	d9009217 	ldw	r4,584(sp)
  801368:	42000044 	addi	r8,r8,1
  80136c:	40fffa24 	muli	r3,r8,-24
  801370:	da009515 	stw	r8,596(sp)
  801374:	da008d17 	ldw	r8,564(sp)
  801378:	1c07883a 	add	r3,r3,r16
  80137c:	d8c09015 	stw	r3,576(sp)
  801380:	b205883a 	add	r2,r22,r8
  801384:	2223c83a 	sub	r17,r4,r8
  801388:	10001016 	blt	r2,zero,8013cc <__kernel_rem_pio2+0xe4>
  80138c:	da00a717 	ldw	r8,668(sp)
  801390:	8c65883a 	add	r18,r17,r17
  801394:	94a5883a 	add	r18,r18,r18
  801398:	1445883a 	add	r2,r2,r17
  80139c:	dcc05004 	addi	r19,sp,320
  8013a0:	44a5883a 	add	r18,r8,r18
  8013a4:	14000044 	addi	r16,r2,1
  8013a8:	88015316 	blt	r17,zero,8018f8 <__kernel_rem_pio2+0x610>
  8013ac:	91000017 	ldw	r4,0(r18)
  8013b0:	08051d40 	call	8051d4 <__floatsidf>
  8013b4:	98800015 	stw	r2,0(r19)
  8013b8:	98c00115 	stw	r3,4(r19)
  8013bc:	8c400044 	addi	r17,r17,1
  8013c0:	9cc00204 	addi	r19,r19,8
  8013c4:	94800104 	addi	r18,r18,4
  8013c8:	8c3ff71e 	bne	r17,r16,8013a8 <__alt_data_end+0xff8013a8>
  8013cc:	b0002816 	blt	r22,zero,801470 <__kernel_rem_pio2+0x188>
  8013d0:	da008d17 	ldw	r8,564(sp)
  8013d4:	b4c00044 	addi	r19,r22,1
  8013d8:	982690fa 	slli	r19,r19,3
  8013dc:	402490fa 	slli	r18,r8,3
  8013e0:	da008e17 	ldw	r8,568(sp)
  8013e4:	d8805004 	addi	r2,sp,320
  8013e8:	94000204 	addi	r16,r18,8
  8013ec:	d823883a 	mov	r17,sp
  8013f0:	14a5883a 	add	r18,r2,r18
  8013f4:	dcef883a 	add	r23,sp,r19
  8013f8:	4421883a 	add	r16,r8,r16
  8013fc:	dd809115 	stw	r22,580(sp)
  801400:	4039883a 	mov	fp,r8
  801404:	da008d17 	ldw	r8,564(sp)
  801408:	40016016 	blt	r8,zero,80198c <__kernel_rem_pio2+0x6a4>
  80140c:	e027883a 	mov	r19,fp
  801410:	9029883a 	mov	r20,r18
  801414:	002d883a 	mov	r22,zero
  801418:	002b883a 	mov	r21,zero
  80141c:	a1800017 	ldw	r6,0(r20)
  801420:	a1c00117 	ldw	r7,4(r20)
  801424:	99000017 	ldw	r4,0(r19)
  801428:	99400117 	ldw	r5,4(r19)
  80142c:	9cc00204 	addi	r19,r19,8
  801430:	a53ffe04 	addi	r20,r20,-8
  801434:	08041400 	call	804140 <__muldf3>
  801438:	b009883a 	mov	r4,r22
  80143c:	a80b883a 	mov	r5,r21
  801440:	100d883a 	mov	r6,r2
  801444:	180f883a 	mov	r7,r3
  801448:	08037300 	call	803730 <__adddf3>
  80144c:	102d883a 	mov	r22,r2
  801450:	182b883a 	mov	r21,r3
  801454:	9c3ff11e 	bne	r19,r16,80141c <__alt_data_end+0xff80141c>
  801458:	8d800015 	stw	r22,0(r17)
  80145c:	8d400115 	stw	r21,4(r17)
  801460:	8c400204 	addi	r17,r17,8
  801464:	94800204 	addi	r18,r18,8
  801468:	8dffe61e 	bne	r17,r23,801404 <__alt_data_end+0xff801404>
  80146c:	dd809117 	ldw	r22,580(sp)
  801470:	00d00034 	movhi	r3,16384
  801474:	da009317 	ldw	r8,588(sp)
  801478:	18ffff84 	addi	r3,r3,-2
  80147c:	b0c7883a 	add	r3,r22,r3
  801480:	18c7883a 	add	r3,r3,r3
  801484:	402090fa 	slli	r16,r8,3
  801488:	18c7883a 	add	r3,r3,r3
  80148c:	da007804 	addi	r8,sp,480
  801490:	40d1883a 	add	r8,r8,r3
  801494:	b0bfffc4 	addi	r2,r22,-1
  801498:	da009615 	stw	r8,600(sp)
  80149c:	da008e17 	ldw	r8,568(sp)
  8014a0:	1085883a 	add	r2,r2,r2
  8014a4:	1085883a 	add	r2,r2,r2
  8014a8:	19000104 	addi	r4,r3,4
  8014ac:	d885883a 	add	r2,sp,r2
  8014b0:	4421883a 	add	r16,r8,r16
  8014b4:	da007804 	addi	r8,sp,480
  8014b8:	4111883a 	add	r8,r8,r4
  8014bc:	10807804 	addi	r2,r2,480
  8014c0:	da009715 	stw	r8,604(sp)
  8014c4:	b025883a 	mov	r18,r22
  8014c8:	d8809815 	stw	r2,608(sp)
  8014cc:	dd809415 	stw	r22,592(sp)
  8014d0:	900490fa 	slli	r2,r18,3
  8014d4:	d885883a 	add	r2,sp,r2
  8014d8:	17000017 	ldw	fp,0(r2)
  8014dc:	15400117 	ldw	r21,4(r2)
  8014e0:	04802b0e 	bge	zero,r18,801590 <__kernel_rem_pio2+0x2a8>
  8014e4:	00880034 	movhi	r2,8192
  8014e8:	10bfffc4 	addi	r2,r2,-1
  8014ec:	90a9883a 	add	r20,r18,r2
  8014f0:	a02890fa 	slli	r20,r20,3
  8014f4:	dc407804 	addi	r17,sp,480
  8014f8:	dcfffe04 	addi	r19,sp,-8
  8014fc:	dd29883a 	add	r20,sp,r20
  801500:	000d883a 	mov	r6,zero
  801504:	01cf9c34 	movhi	r7,15984
  801508:	e009883a 	mov	r4,fp
  80150c:	a80b883a 	mov	r5,r21
  801510:	08041400 	call	804140 <__muldf3>
  801514:	180b883a 	mov	r5,r3
  801518:	1009883a 	mov	r4,r2
  80151c:	08051540 	call	805154 <__fixdfsi>
  801520:	1009883a 	mov	r4,r2
  801524:	08051d40 	call	8051d4 <__floatsidf>
  801528:	000d883a 	mov	r6,zero
  80152c:	01d05c34 	movhi	r7,16752
  801530:	1009883a 	mov	r4,r2
  801534:	180b883a 	mov	r5,r3
  801538:	102f883a 	mov	r23,r2
  80153c:	182d883a 	mov	r22,r3
  801540:	08041400 	call	804140 <__muldf3>
  801544:	100d883a 	mov	r6,r2
  801548:	180f883a 	mov	r7,r3
  80154c:	e009883a 	mov	r4,fp
  801550:	a80b883a 	mov	r5,r21
  801554:	08048580 	call	804858 <__subdf3>
  801558:	180b883a 	mov	r5,r3
  80155c:	1009883a 	mov	r4,r2
  801560:	08051540 	call	805154 <__fixdfsi>
  801564:	a1800017 	ldw	r6,0(r20)
  801568:	a1c00117 	ldw	r7,4(r20)
  80156c:	88800015 	stw	r2,0(r17)
  801570:	b809883a 	mov	r4,r23
  801574:	b00b883a 	mov	r5,r22
  801578:	08037300 	call	803730 <__adddf3>
  80157c:	a53ffe04 	addi	r20,r20,-8
  801580:	1039883a 	mov	fp,r2
  801584:	182b883a 	mov	r21,r3
  801588:	8c400104 	addi	r17,r17,4
  80158c:	a4ffdc1e 	bne	r20,r19,801500 <__alt_data_end+0xff801500>
  801590:	d9809017 	ldw	r6,576(sp)
  801594:	a80b883a 	mov	r5,r21
  801598:	e009883a 	mov	r4,fp
  80159c:	08025440 	call	802544 <scalbn>
  8015a0:	000d883a 	mov	r6,zero
  8015a4:	01cff034 	movhi	r7,16320
  8015a8:	1009883a 	mov	r4,r2
  8015ac:	180b883a 	mov	r5,r3
  8015b0:	1027883a 	mov	r19,r2
  8015b4:	1823883a 	mov	r17,r3
  8015b8:	08041400 	call	804140 <__muldf3>
  8015bc:	1009883a 	mov	r4,r2
  8015c0:	180b883a 	mov	r5,r3
  8015c4:	08023580 	call	802358 <floor>
  8015c8:	000d883a 	mov	r6,zero
  8015cc:	01d00834 	movhi	r7,16416
  8015d0:	1009883a 	mov	r4,r2
  8015d4:	180b883a 	mov	r5,r3
  8015d8:	08041400 	call	804140 <__muldf3>
  8015dc:	100d883a 	mov	r6,r2
  8015e0:	180f883a 	mov	r7,r3
  8015e4:	9809883a 	mov	r4,r19
  8015e8:	880b883a 	mov	r5,r17
  8015ec:	08048580 	call	804858 <__subdf3>
  8015f0:	180b883a 	mov	r5,r3
  8015f4:	1009883a 	mov	r4,r2
  8015f8:	1827883a 	mov	r19,r3
  8015fc:	1029883a 	mov	r20,r2
  801600:	08051540 	call	805154 <__fixdfsi>
  801604:	1009883a 	mov	r4,r2
  801608:	1023883a 	mov	r17,r2
  80160c:	08051d40 	call	8051d4 <__floatsidf>
  801610:	a009883a 	mov	r4,r20
  801614:	100d883a 	mov	r6,r2
  801618:	180f883a 	mov	r7,r3
  80161c:	980b883a 	mov	r5,r19
  801620:	08048580 	call	804858 <__subdf3>
  801624:	d9009017 	ldw	r4,576(sp)
  801628:	1013883a 	mov	r9,r2
  80162c:	102b883a 	mov	r21,r2
  801630:	1811883a 	mov	r8,r3
  801634:	0100b30e 	bge	zero,r4,801904 <__kernel_rem_pio2+0x61c>
  801638:	90bfffc4 	addi	r2,r18,-1
  80163c:	1085883a 	add	r2,r2,r2
  801640:	1085883a 	add	r2,r2,r2
  801644:	d885883a 	add	r2,sp,r2
  801648:	10807804 	addi	r2,r2,480
  80164c:	d9809017 	ldw	r6,576(sp)
  801650:	11400017 	ldw	r5,0(r2)
  801654:	01000604 	movi	r4,24
  801658:	2189c83a 	sub	r4,r4,r6
  80165c:	290dd83a 	sra	r6,r5,r4
  801660:	d9c09017 	ldw	r7,576(sp)
  801664:	04c005c4 	movi	r19,23
  801668:	3108983a 	sll	r4,r6,r4
  80166c:	99e7c83a 	sub	r19,r19,r7
  801670:	89a3883a 	add	r17,r17,r6
  801674:	2909c83a 	sub	r4,r5,r4
  801678:	24e7d83a 	sra	r19,r4,r19
  80167c:	11000015 	stw	r4,0(r2)
  801680:	04c02a0e 	bge	zero,r19,80172c <__kernel_rem_pio2+0x444>
  801684:	8c400044 	addi	r17,r17,1
  801688:	0481570e 	bge	zero,r18,801be8 <__kernel_rem_pio2+0x900>
  80168c:	02804034 	movhi	r10,256
  801690:	52bfffc4 	addi	r10,r10,-1
  801694:	d8807804 	addi	r2,sp,480
  801698:	000b883a 	mov	r5,zero
  80169c:	0029883a 	mov	r20,zero
  8016a0:	01c04034 	movhi	r7,256
  8016a4:	00000706 	br	8016c4 <__kernel_rem_pio2+0x3dc>
  8016a8:	390dc83a 	sub	r6,r7,r4
  8016ac:	20000226 	beq	r4,zero,8016b8 <__kernel_rem_pio2+0x3d0>
  8016b0:	11800015 	stw	r6,0(r2)
  8016b4:	05000044 	movi	r20,1
  8016b8:	29400044 	addi	r5,r5,1
  8016bc:	10800104 	addi	r2,r2,4
  8016c0:	2c80080e 	bge	r5,r18,8016e4 <__kernel_rem_pio2+0x3fc>
  8016c4:	11000017 	ldw	r4,0(r2)
  8016c8:	a03ff726 	beq	r20,zero,8016a8 <__alt_data_end+0xff8016a8>
  8016cc:	5109c83a 	sub	r4,r10,r4
  8016d0:	11000015 	stw	r4,0(r2)
  8016d4:	29400044 	addi	r5,r5,1
  8016d8:	05000044 	movi	r20,1
  8016dc:	10800104 	addi	r2,r2,4
  8016e0:	2cbff816 	blt	r5,r18,8016c4 <__alt_data_end+0xff8016c4>
  8016e4:	d9009017 	ldw	r4,576(sp)
  8016e8:	01000e0e 	bge	zero,r4,801724 <__kernel_rem_pio2+0x43c>
  8016ec:	00800044 	movi	r2,1
  8016f0:	20808d26 	beq	r4,r2,801928 <__kernel_rem_pio2+0x640>
  8016f4:	00800084 	movi	r2,2
  8016f8:	20800a1e 	bne	r4,r2,801724 <__kernel_rem_pio2+0x43c>
  8016fc:	90bfffc4 	addi	r2,r18,-1
  801700:	1085883a 	add	r2,r2,r2
  801704:	1085883a 	add	r2,r2,r2
  801708:	d885883a 	add	r2,sp,r2
  80170c:	10807804 	addi	r2,r2,480
  801710:	11400017 	ldw	r5,0(r2)
  801714:	01001034 	movhi	r4,64
  801718:	213fffc4 	addi	r4,r4,-1
  80171c:	2908703a 	and	r4,r5,r4
  801720:	11000015 	stw	r4,0(r2)
  801724:	00800084 	movi	r2,2
  801728:	98805d26 	beq	r19,r2,8018a0 <__kernel_rem_pio2+0x5b8>
  80172c:	400b883a 	mov	r5,r8
  801730:	000d883a 	mov	r6,zero
  801734:	000f883a 	mov	r7,zero
  801738:	a809883a 	mov	r4,r21
  80173c:	da009b15 	stw	r8,620(sp)
  801740:	0803fdc0 	call	803fdc <__eqdf2>
  801744:	da009b17 	ldw	r8,620(sp)
  801748:	10012b1e 	bne	r2,zero,801bf8 <__kernel_rem_pio2+0x910>
  80174c:	da009417 	ldw	r8,592(sp)
  801750:	917fffc4 	addi	r5,r18,-1
  801754:	2a000e16 	blt	r5,r8,801790 <__kernel_rem_pio2+0x4a8>
  801758:	00900034 	movhi	r2,16384
  80175c:	10bfffc4 	addi	r2,r2,-1
  801760:	9085883a 	add	r2,r18,r2
  801764:	1085883a 	add	r2,r2,r2
  801768:	d9809717 	ldw	r6,604(sp)
  80176c:	1085883a 	add	r2,r2,r2
  801770:	d9007804 	addi	r4,sp,480
  801774:	0007883a 	mov	r3,zero
  801778:	2085883a 	add	r2,r4,r2
  80177c:	11000017 	ldw	r4,0(r2)
  801780:	10bfff04 	addi	r2,r2,-4
  801784:	1906b03a 	or	r3,r3,r4
  801788:	11bffc1e 	bne	r2,r6,80177c <__alt_data_end+0xff80177c>
  80178c:	1800821e 	bne	r3,zero,801998 <__kernel_rem_pio2+0x6b0>
  801790:	da009817 	ldw	r8,608(sp)
  801794:	40800017 	ldw	r2,0(r8)
  801798:	1001151e 	bne	r2,zero,801bf0 <__kernel_rem_pio2+0x908>
  80179c:	d8809617 	ldw	r2,600(sp)
  8017a0:	05000044 	movi	r20,1
  8017a4:	10bfff04 	addi	r2,r2,-4
  8017a8:	10c00117 	ldw	r3,4(r2)
  8017ac:	a5000044 	addi	r20,r20,1
  8017b0:	183ffc26 	beq	r3,zero,8017a4 <__alt_data_end+0xff8017a4>
  8017b4:	9529883a 	add	r20,r18,r20
  8017b8:	90800044 	addi	r2,r18,1
  8017bc:	dd009115 	stw	r20,580(sp)
  8017c0:	a0803216 	blt	r20,r2,80188c <__kernel_rem_pio2+0x5a4>
  8017c4:	da009317 	ldw	r8,588(sp)
  8017c8:	d8c09117 	ldw	r3,580(sp)
  8017cc:	44a3883a 	add	r17,r8,r18
  8017d0:	da009217 	ldw	r8,584(sp)
  8017d4:	882290fa 	slli	r17,r17,3
  8017d8:	40a5883a 	add	r18,r8,r2
  8017dc:	da009517 	ldw	r8,596(sp)
  8017e0:	100490fa 	slli	r2,r2,3
  8017e4:	94a5883a 	add	r18,r18,r18
  8017e8:	40eb883a 	add	r21,r8,r3
  8017ec:	da00a717 	ldw	r8,668(sp)
  8017f0:	ad6b883a 	add	r21,r21,r21
  8017f4:	94a5883a 	add	r18,r18,r18
  8017f8:	ad6b883a 	add	r21,r21,r21
  8017fc:	d8c05004 	addi	r3,sp,320
  801800:	44a5883a 	add	r18,r8,r18
  801804:	1c63883a 	add	r17,r3,r17
  801808:	d8a7883a 	add	r19,sp,r2
  80180c:	456b883a 	add	r21,r8,r21
  801810:	91000017 	ldw	r4,0(r18)
  801814:	08051d40 	call	8051d4 <__floatsidf>
  801818:	da008d17 	ldw	r8,564(sp)
  80181c:	88800015 	stw	r2,0(r17)
  801820:	88c00115 	stw	r3,4(r17)
  801824:	40001b16 	blt	r8,zero,801894 <__kernel_rem_pio2+0x5ac>
  801828:	dd008e17 	ldw	r20,568(sp)
  80182c:	882d883a 	mov	r22,r17
  801830:	002f883a 	mov	r23,zero
  801834:	0039883a 	mov	fp,zero
  801838:	b1800017 	ldw	r6,0(r22)
  80183c:	b1c00117 	ldw	r7,4(r22)
  801840:	a1000017 	ldw	r4,0(r20)
  801844:	a1400117 	ldw	r5,4(r20)
  801848:	a5000204 	addi	r20,r20,8
  80184c:	b5bffe04 	addi	r22,r22,-8
  801850:	08041400 	call	804140 <__muldf3>
  801854:	b809883a 	mov	r4,r23
  801858:	e00b883a 	mov	r5,fp
  80185c:	100d883a 	mov	r6,r2
  801860:	180f883a 	mov	r7,r3
  801864:	08037300 	call	803730 <__adddf3>
  801868:	102f883a 	mov	r23,r2
  80186c:	1839883a 	mov	fp,r3
  801870:	a43ff11e 	bne	r20,r16,801838 <__alt_data_end+0xff801838>
  801874:	9dc00015 	stw	r23,0(r19)
  801878:	9f000115 	stw	fp,4(r19)
  80187c:	94800104 	addi	r18,r18,4
  801880:	8c400204 	addi	r17,r17,8
  801884:	9cc00204 	addi	r19,r19,8
  801888:	957fe11e 	bne	r18,r21,801810 <__alt_data_end+0xff801810>
  80188c:	dc809117 	ldw	r18,580(sp)
  801890:	003f0f06 	br	8014d0 <__alt_data_end+0xff8014d0>
  801894:	002f883a 	mov	r23,zero
  801898:	0039883a 	mov	fp,zero
  80189c:	003ff506 	br	801874 <__alt_data_end+0xff801874>
  8018a0:	480d883a 	mov	r6,r9
  8018a4:	180f883a 	mov	r7,r3
  8018a8:	0009883a 	mov	r4,zero
  8018ac:	014ffc34 	movhi	r5,16368
  8018b0:	08048580 	call	804858 <__subdf3>
  8018b4:	102b883a 	mov	r21,r2
  8018b8:	1811883a 	mov	r8,r3
  8018bc:	a03f9b26 	beq	r20,zero,80172c <__alt_data_end+0xff80172c>
  8018c0:	d9809017 	ldw	r6,576(sp)
  8018c4:	0009883a 	mov	r4,zero
  8018c8:	014ffc34 	movhi	r5,16368
  8018cc:	d8c09b15 	stw	r3,620(sp)
  8018d0:	08025440 	call	802544 <scalbn>
  8018d4:	da009b17 	ldw	r8,620(sp)
  8018d8:	a809883a 	mov	r4,r21
  8018dc:	100d883a 	mov	r6,r2
  8018e0:	400b883a 	mov	r5,r8
  8018e4:	180f883a 	mov	r7,r3
  8018e8:	08048580 	call	804858 <__subdf3>
  8018ec:	102b883a 	mov	r21,r2
  8018f0:	1811883a 	mov	r8,r3
  8018f4:	003f8d06 	br	80172c <__alt_data_end+0xff80172c>
  8018f8:	0005883a 	mov	r2,zero
  8018fc:	0007883a 	mov	r3,zero
  801900:	003eac06 	br	8013b4 <__alt_data_end+0xff8013b4>
  801904:	d8809017 	ldw	r2,576(sp)
  801908:	1000121e 	bne	r2,zero,801954 <__kernel_rem_pio2+0x66c>
  80190c:	90bfffc4 	addi	r2,r18,-1
  801910:	1085883a 	add	r2,r2,r2
  801914:	1085883a 	add	r2,r2,r2
  801918:	d885883a 	add	r2,sp,r2
  80191c:	14c07817 	ldw	r19,480(r2)
  801920:	9827d5fa 	srai	r19,r19,23
  801924:	003f5606 	br	801680 <__alt_data_end+0xff801680>
  801928:	90bfffc4 	addi	r2,r18,-1
  80192c:	1085883a 	add	r2,r2,r2
  801930:	1085883a 	add	r2,r2,r2
  801934:	d885883a 	add	r2,sp,r2
  801938:	10807804 	addi	r2,r2,480
  80193c:	11000017 	ldw	r4,0(r2)
  801940:	01402034 	movhi	r5,128
  801944:	297fffc4 	addi	r5,r5,-1
  801948:	2148703a 	and	r4,r4,r5
  80194c:	11000015 	stw	r4,0(r2)
  801950:	003f7406 	br	801724 <__alt_data_end+0xff801724>
  801954:	4809883a 	mov	r4,r9
  801958:	180b883a 	mov	r5,r3
  80195c:	000d883a 	mov	r6,zero
  801960:	01cff834 	movhi	r7,16352
  801964:	d8c09a15 	stw	r3,616(sp)
  801968:	d8c09b15 	stw	r3,620(sp)
  80196c:	da409915 	stw	r9,612(sp)
  801970:	08040640 	call	804064 <__gedf2>
  801974:	d8c09a17 	ldw	r3,616(sp)
  801978:	da009b17 	ldw	r8,620(sp)
  80197c:	da409917 	ldw	r9,612(sp)
  801980:	1000920e 	bge	r2,zero,801bcc <__kernel_rem_pio2+0x8e4>
  801984:	0027883a 	mov	r19,zero
  801988:	003f6806 	br	80172c <__alt_data_end+0xff80172c>
  80198c:	002d883a 	mov	r22,zero
  801990:	002b883a 	mov	r21,zero
  801994:	003eb006 	br	801458 <__alt_data_end+0xff801458>
  801998:	2945883a 	add	r2,r5,r5
  80199c:	da009017 	ldw	r8,576(sp)
  8019a0:	1085883a 	add	r2,r2,r2
  8019a4:	d885883a 	add	r2,sp,r2
  8019a8:	10807817 	ldw	r2,480(r2)
  8019ac:	423ffa04 	addi	r8,r8,-24
  8019b0:	dc409115 	stw	r17,580(sp)
  8019b4:	dcc08d15 	stw	r19,564(sp)
  8019b8:	da009015 	stw	r8,576(sp)
  8019bc:	dd809417 	ldw	r22,592(sp)
  8019c0:	2823883a 	mov	r17,r5
  8019c4:	10000e1e 	bne	r2,zero,801a00 <__kernel_rem_pio2+0x718>
  8019c8:	00900034 	movhi	r2,16384
  8019cc:	10bfffc4 	addi	r2,r2,-1
  8019d0:	2885883a 	add	r2,r5,r2
  8019d4:	1085883a 	add	r2,r2,r2
  8019d8:	d8c07804 	addi	r3,sp,480
  8019dc:	1085883a 	add	r2,r2,r2
  8019e0:	1885883a 	add	r2,r3,r2
  8019e4:	4007883a 	mov	r3,r8
  8019e8:	10bfff04 	addi	r2,r2,-4
  8019ec:	11000117 	ldw	r4,4(r2)
  8019f0:	8c7fffc4 	addi	r17,r17,-1
  8019f4:	18fffa04 	addi	r3,r3,-24
  8019f8:	203ffb26 	beq	r4,zero,8019e8 <__alt_data_end+0xff8019e8>
  8019fc:	d8c09015 	stw	r3,576(sp)
  801a00:	d9809017 	ldw	r6,576(sp)
  801a04:	0009883a 	mov	r4,zero
  801a08:	014ffc34 	movhi	r5,16368
  801a0c:	08025440 	call	802544 <scalbn>
  801a10:	1029883a 	mov	r20,r2
  801a14:	182b883a 	mov	r21,r3
  801a18:	88018416 	blt	r17,zero,80202c <__kernel_rem_pio2+0xd44>
  801a1c:	881090fa 	slli	r8,r17,3
  801a20:	d8c07804 	addi	r3,sp,480
  801a24:	da008e15 	stw	r8,568(sp)
  801a28:	d8808e17 	ldw	r2,568(sp)
  801a2c:	8c51883a 	add	r8,r17,r17
  801a30:	4211883a 	add	r8,r8,r8
  801a34:	d8a1883a 	add	r16,sp,r2
  801a38:	1a25883a 	add	r18,r3,r8
  801a3c:	da3ffe04 	addi	r8,sp,-8
  801a40:	da008c15 	stw	r8,560(sp)
  801a44:	8039883a 	mov	fp,r16
  801a48:	91000017 	ldw	r4,0(r18)
  801a4c:	e73ffe04 	addi	fp,fp,-8
  801a50:	94bfff04 	addi	r18,r18,-4
  801a54:	08051d40 	call	8051d4 <__floatsidf>
  801a58:	a00d883a 	mov	r6,r20
  801a5c:	a80f883a 	mov	r7,r21
  801a60:	1009883a 	mov	r4,r2
  801a64:	180b883a 	mov	r5,r3
  801a68:	08041400 	call	804140 <__muldf3>
  801a6c:	a009883a 	mov	r4,r20
  801a70:	a80b883a 	mov	r5,r21
  801a74:	e0800215 	stw	r2,8(fp)
  801a78:	e0c00315 	stw	r3,12(fp)
  801a7c:	000d883a 	mov	r6,zero
  801a80:	01cf9c34 	movhi	r7,15984
  801a84:	08041400 	call	804140 <__muldf3>
  801a88:	da008c17 	ldw	r8,560(sp)
  801a8c:	1029883a 	mov	r20,r2
  801a90:	182b883a 	mov	r21,r3
  801a94:	e23fec1e 	bne	fp,r8,801a48 <__alt_data_end+0xff801a48>
  801a98:	0029883a 	mov	r20,zero
  801a9c:	b0004f16 	blt	r22,zero,801bdc <__kernel_rem_pio2+0x8f4>
  801aa0:	05402074 	movhi	r21,129
  801aa4:	014ffe74 	movhi	r5,16377
  801aa8:	ad6c0104 	addi	r21,r21,-20476
  801aac:	8027883a 	mov	r19,r16
  801ab0:	01100034 	movhi	r4,16384
  801ab4:	29487ec4 	addi	r5,r5,8699
  801ab8:	0039883a 	mov	fp,zero
  801abc:	002f883a 	mov	r23,zero
  801ac0:	0025883a 	mov	r18,zero
  801ac4:	00000506 	br	801adc <__kernel_rem_pio2+0x7f4>
  801ac8:	9cc00204 	addi	r19,r19,8
  801acc:	a4800f16 	blt	r20,r18,801b0c <__kernel_rem_pio2+0x824>
  801ad0:	a9000017 	ldw	r4,0(r21)
  801ad4:	a9400117 	ldw	r5,4(r21)
  801ad8:	ad400204 	addi	r21,r21,8
  801adc:	99800017 	ldw	r6,0(r19)
  801ae0:	99c00117 	ldw	r7,4(r19)
  801ae4:	94800044 	addi	r18,r18,1
  801ae8:	08041400 	call	804140 <__muldf3>
  801aec:	e009883a 	mov	r4,fp
  801af0:	b80b883a 	mov	r5,r23
  801af4:	100d883a 	mov	r6,r2
  801af8:	180f883a 	mov	r7,r3
  801afc:	08037300 	call	803730 <__adddf3>
  801b00:	1039883a 	mov	fp,r2
  801b04:	182f883a 	mov	r23,r3
  801b08:	b4bfef0e 	bge	r22,r18,801ac8 <__alt_data_end+0xff801ac8>
  801b0c:	a00490fa 	slli	r2,r20,3
  801b10:	da008c17 	ldw	r8,560(sp)
  801b14:	843ffe04 	addi	r16,r16,-8
  801b18:	d885883a 	add	r2,sp,r2
  801b1c:	10802804 	addi	r2,r2,160
  801b20:	17000015 	stw	fp,0(r2)
  801b24:	15c00115 	stw	r23,4(r2)
  801b28:	a5000044 	addi	r20,r20,1
  801b2c:	823fdb1e 	bne	r16,r8,801a9c <__alt_data_end+0xff801a9c>
  801b30:	da00a617 	ldw	r8,664(sp)
  801b34:	00800084 	movi	r2,2
  801b38:	12006616 	blt	r2,r8,801cd4 <__kernel_rem_pio2+0x9ec>
  801b3c:	0200de16 	blt	zero,r8,801eb8 <__kernel_rem_pio2+0xbd0>
  801b40:	4000141e 	bne	r8,zero,801b94 <__kernel_rem_pio2+0x8ac>
  801b44:	da008e17 	ldw	r8,568(sp)
  801b48:	d8802804 	addi	r2,sp,160
  801b4c:	0007883a 	mov	r3,zero
  801b50:	1225883a 	add	r18,r2,r8
  801b54:	043fffc4 	movi	r16,-1
  801b58:	0005883a 	mov	r2,zero
  801b5c:	91800017 	ldw	r6,0(r18)
  801b60:	91c00117 	ldw	r7,4(r18)
  801b64:	1009883a 	mov	r4,r2
  801b68:	180b883a 	mov	r5,r3
  801b6c:	8c7fffc4 	addi	r17,r17,-1
  801b70:	08037300 	call	803730 <__adddf3>
  801b74:	94bffe04 	addi	r18,r18,-8
  801b78:	8c3ff81e 	bne	r17,r16,801b5c <__alt_data_end+0xff801b5c>
  801b7c:	da008d17 	ldw	r8,564(sp)
  801b80:	40000126 	beq	r8,zero,801b88 <__kernel_rem_pio2+0x8a0>
  801b84:	18e0003c 	xorhi	r3,r3,32768
  801b88:	da008f17 	ldw	r8,572(sp)
  801b8c:	40800015 	stw	r2,0(r8)
  801b90:	40c00115 	stw	r3,4(r8)
  801b94:	da009117 	ldw	r8,580(sp)
  801b98:	408001cc 	andi	r2,r8,7
  801b9c:	dfc0a517 	ldw	ra,660(sp)
  801ba0:	df00a417 	ldw	fp,656(sp)
  801ba4:	ddc0a317 	ldw	r23,652(sp)
  801ba8:	dd80a217 	ldw	r22,648(sp)
  801bac:	dd40a117 	ldw	r21,644(sp)
  801bb0:	dd00a017 	ldw	r20,640(sp)
  801bb4:	dcc09f17 	ldw	r19,636(sp)
  801bb8:	dc809e17 	ldw	r18,632(sp)
  801bbc:	dc409d17 	ldw	r17,628(sp)
  801bc0:	dc009c17 	ldw	r16,624(sp)
  801bc4:	dec0a604 	addi	sp,sp,664
  801bc8:	f800283a 	ret
  801bcc:	8c400044 	addi	r17,r17,1
  801bd0:	04810d0e 	bge	zero,r18,802008 <__kernel_rem_pio2+0xd20>
  801bd4:	04c00084 	movi	r19,2
  801bd8:	003eac06 	br	80168c <__alt_data_end+0xff80168c>
  801bdc:	0039883a 	mov	fp,zero
  801be0:	002f883a 	mov	r23,zero
  801be4:	003fc906 	br	801b0c <__alt_data_end+0xff801b0c>
  801be8:	0029883a 	mov	r20,zero
  801bec:	003ebd06 	br	8016e4 <__alt_data_end+0xff8016e4>
  801bf0:	05000044 	movi	r20,1
  801bf4:	003eef06 	br	8017b4 <__alt_data_end+0xff8017b4>
  801bf8:	4029883a 	mov	r20,r8
  801bfc:	da009017 	ldw	r8,576(sp)
  801c00:	a809883a 	mov	r4,r21
  801c04:	a00b883a 	mov	r5,r20
  801c08:	020dc83a 	sub	r6,zero,r8
  801c0c:	dc409115 	stw	r17,580(sp)
  801c10:	dd809417 	ldw	r22,592(sp)
  801c14:	dcc08d15 	stw	r19,564(sp)
  801c18:	08025440 	call	802544 <scalbn>
  801c1c:	000d883a 	mov	r6,zero
  801c20:	01d05c34 	movhi	r7,16752
  801c24:	1009883a 	mov	r4,r2
  801c28:	180b883a 	mov	r5,r3
  801c2c:	102b883a 	mov	r21,r2
  801c30:	1823883a 	mov	r17,r3
  801c34:	08040640 	call	804064 <__gedf2>
  801c38:	1000e916 	blt	r2,zero,801fe0 <__kernel_rem_pio2+0xcf8>
  801c3c:	000d883a 	mov	r6,zero
  801c40:	01cf9c34 	movhi	r7,15984
  801c44:	880b883a 	mov	r5,r17
  801c48:	a809883a 	mov	r4,r21
  801c4c:	08041400 	call	804140 <__muldf3>
  801c50:	180b883a 	mov	r5,r3
  801c54:	1009883a 	mov	r4,r2
  801c58:	08051540 	call	805154 <__fixdfsi>
  801c5c:	1029883a 	mov	r20,r2
  801c60:	9485883a 	add	r2,r18,r18
  801c64:	1085883a 	add	r2,r2,r2
  801c68:	a009883a 	mov	r4,r20
  801c6c:	d8a1883a 	add	r16,sp,r2
  801c70:	08051d40 	call	8051d4 <__floatsidf>
  801c74:	000d883a 	mov	r6,zero
  801c78:	01d05c34 	movhi	r7,16752
  801c7c:	1009883a 	mov	r4,r2
  801c80:	180b883a 	mov	r5,r3
  801c84:	08041400 	call	804140 <__muldf3>
  801c88:	880b883a 	mov	r5,r17
  801c8c:	100d883a 	mov	r6,r2
  801c90:	180f883a 	mov	r7,r3
  801c94:	a809883a 	mov	r4,r21
  801c98:	08048580 	call	804858 <__subdf3>
  801c9c:	180b883a 	mov	r5,r3
  801ca0:	1009883a 	mov	r4,r2
  801ca4:	08051540 	call	805154 <__fixdfsi>
  801ca8:	da009017 	ldw	r8,576(sp)
  801cac:	94400044 	addi	r17,r18,1
  801cb0:	8c47883a 	add	r3,r17,r17
  801cb4:	84007804 	addi	r16,r16,480
  801cb8:	18c7883a 	add	r3,r3,r3
  801cbc:	80800015 	stw	r2,0(r16)
  801cc0:	d8c7883a 	add	r3,sp,r3
  801cc4:	42000604 	addi	r8,r8,24
  801cc8:	da009015 	stw	r8,576(sp)
  801ccc:	1d007815 	stw	r20,480(r3)
  801cd0:	003f4b06 	br	801a00 <__alt_data_end+0xff801a00>
  801cd4:	da00a617 	ldw	r8,664(sp)
  801cd8:	008000c4 	movi	r2,3
  801cdc:	40bfad1e 	bne	r8,r2,801b94 <__alt_data_end+0xff801b94>
  801ce0:	0440bc0e 	bge	zero,r17,801fd4 <__kernel_rem_pio2+0xcec>
  801ce4:	da008e17 	ldw	r8,568(sp)
  801ce8:	882090fa 	slli	r16,r17,3
  801cec:	dd402804 	addi	r21,sp,160
  801cf0:	da05883a 	add	r2,sp,r8
  801cf4:	10802804 	addi	r2,r2,160
  801cf8:	15c00017 	ldw	r23,0(r2)
  801cfc:	15800117 	ldw	r22,4(r2)
  801d00:	8029883a 	mov	r20,r16
  801d04:	843ffe04 	addi	r16,r16,-8
  801d08:	ac21883a 	add	r16,r21,r16
  801d0c:	ad29883a 	add	r20,r21,r20
  801d10:	dac02604 	addi	r11,sp,152
  801d14:	8811883a 	mov	r8,r17
  801d18:	84400017 	ldw	r17,0(r16)
  801d1c:	87000117 	ldw	fp,4(r16)
  801d20:	b80d883a 	mov	r6,r23
  801d24:	b00f883a 	mov	r7,r22
  801d28:	8809883a 	mov	r4,r17
  801d2c:	e00b883a 	mov	r5,fp
  801d30:	da009b15 	stw	r8,620(sp)
  801d34:	dac09915 	stw	r11,612(sp)
  801d38:	08037300 	call	803730 <__adddf3>
  801d3c:	100d883a 	mov	r6,r2
  801d40:	180f883a 	mov	r7,r3
  801d44:	8809883a 	mov	r4,r17
  801d48:	e00b883a 	mov	r5,fp
  801d4c:	1027883a 	mov	r19,r2
  801d50:	1825883a 	mov	r18,r3
  801d54:	08048580 	call	804858 <__subdf3>
  801d58:	b80d883a 	mov	r6,r23
  801d5c:	b00f883a 	mov	r7,r22
  801d60:	1009883a 	mov	r4,r2
  801d64:	180b883a 	mov	r5,r3
  801d68:	08037300 	call	803730 <__adddf3>
  801d6c:	dac09917 	ldw	r11,612(sp)
  801d70:	a0800015 	stw	r2,0(r20)
  801d74:	a0c00115 	stw	r3,4(r20)
  801d78:	84c00015 	stw	r19,0(r16)
  801d7c:	84800115 	stw	r18,4(r16)
  801d80:	843ffe04 	addi	r16,r16,-8
  801d84:	a53ffe04 	addi	r20,r20,-8
  801d88:	982f883a 	mov	r23,r19
  801d8c:	902d883a 	mov	r22,r18
  801d90:	da009b17 	ldw	r8,620(sp)
  801d94:	5c3fe01e 	bne	r11,r16,801d18 <__alt_data_end+0xff801d18>
  801d98:	00800044 	movi	r2,1
  801d9c:	12008d0e 	bge	r2,r8,801fd4 <__kernel_rem_pio2+0xcec>
  801da0:	402090fa 	slli	r16,r8,3
  801da4:	da008e17 	ldw	r8,568(sp)
  801da8:	8023883a 	mov	r17,r16
  801dac:	da05883a 	add	r2,sp,r8
  801db0:	10802804 	addi	r2,r2,160
  801db4:	15800017 	ldw	r22,0(r2)
  801db8:	15000117 	ldw	r20,4(r2)
  801dbc:	ac63883a 	add	r17,r21,r17
  801dc0:	843ffe04 	addi	r16,r16,-8
  801dc4:	ac21883a 	add	r16,r21,r16
  801dc8:	8825883a 	mov	r18,r17
  801dcc:	8811883a 	mov	r8,r17
  801dd0:	84400017 	ldw	r17,0(r16)
  801dd4:	87000117 	ldw	fp,4(r16)
  801dd8:	b009883a 	mov	r4,r22
  801ddc:	a00b883a 	mov	r5,r20
  801de0:	880d883a 	mov	r6,r17
  801de4:	e00f883a 	mov	r7,fp
  801de8:	da009b15 	stw	r8,620(sp)
  801dec:	08037300 	call	803730 <__adddf3>
  801df0:	100d883a 	mov	r6,r2
  801df4:	180f883a 	mov	r7,r3
  801df8:	8809883a 	mov	r4,r17
  801dfc:	e00b883a 	mov	r5,fp
  801e00:	102f883a 	mov	r23,r2
  801e04:	1827883a 	mov	r19,r3
  801e08:	08048580 	call	804858 <__subdf3>
  801e0c:	b00d883a 	mov	r6,r22
  801e10:	a00f883a 	mov	r7,r20
  801e14:	1009883a 	mov	r4,r2
  801e18:	180b883a 	mov	r5,r3
  801e1c:	08037300 	call	803730 <__adddf3>
  801e20:	90800015 	stw	r2,0(r18)
  801e24:	90c00115 	stw	r3,4(r18)
  801e28:	85c00015 	stw	r23,0(r16)
  801e2c:	84c00115 	stw	r19,4(r16)
  801e30:	843ffe04 	addi	r16,r16,-8
  801e34:	94bffe04 	addi	r18,r18,-8
  801e38:	b82d883a 	mov	r22,r23
  801e3c:	9829883a 	mov	r20,r19
  801e40:	da009b17 	ldw	r8,620(sp)
  801e44:	ac3fe21e 	bne	r21,r16,801dd0 <__alt_data_end+0xff801dd0>
  801e48:	4023883a 	mov	r17,r8
  801e4c:	dc002a04 	addi	r16,sp,168
  801e50:	0005883a 	mov	r2,zero
  801e54:	0007883a 	mov	r3,zero
  801e58:	89800017 	ldw	r6,0(r17)
  801e5c:	89c00117 	ldw	r7,4(r17)
  801e60:	1009883a 	mov	r4,r2
  801e64:	8c7ffe04 	addi	r17,r17,-8
  801e68:	180b883a 	mov	r5,r3
  801e6c:	08037300 	call	803730 <__adddf3>
  801e70:	847ff91e 	bne	r16,r17,801e58 <__alt_data_end+0xff801e58>
  801e74:	da008d17 	ldw	r8,564(sp)
  801e78:	40004726 	beq	r8,zero,801f98 <__kernel_rem_pio2+0xcb0>
  801e7c:	d9002b17 	ldw	r4,172(sp)
  801e80:	d9402917 	ldw	r5,164(sp)
  801e84:	d9802a17 	ldw	r6,168(sp)
  801e88:	da008f17 	ldw	r8,572(sp)
  801e8c:	d9c02817 	ldw	r7,160(sp)
  801e90:	2960003c 	xorhi	r5,r5,32768
  801e94:	2120003c 	xorhi	r4,r4,32768
  801e98:	18e0003c 	xorhi	r3,r3,32768
  801e9c:	41c00015 	stw	r7,0(r8)
  801ea0:	41400115 	stw	r5,4(r8)
  801ea4:	41800215 	stw	r6,8(r8)
  801ea8:	41000315 	stw	r4,12(r8)
  801eac:	40800415 	stw	r2,16(r8)
  801eb0:	40c00515 	stw	r3,20(r8)
  801eb4:	003f3706 	br	801b94 <__alt_data_end+0xff801b94>
  801eb8:	da008e17 	ldw	r8,568(sp)
  801ebc:	d8802804 	addi	r2,sp,160
  801ec0:	dc002604 	addi	r16,sp,152
  801ec4:	1225883a 	add	r18,r2,r8
  801ec8:	0007883a 	mov	r3,zero
  801ecc:	0005883a 	mov	r2,zero
  801ed0:	91800017 	ldw	r6,0(r18)
  801ed4:	91c00117 	ldw	r7,4(r18)
  801ed8:	1009883a 	mov	r4,r2
  801edc:	94bffe04 	addi	r18,r18,-8
  801ee0:	180b883a 	mov	r5,r3
  801ee4:	08037300 	call	803730 <__adddf3>
  801ee8:	943ff91e 	bne	r18,r16,801ed0 <__alt_data_end+0xff801ed0>
  801eec:	da008d17 	ldw	r8,564(sp)
  801ef0:	d9002817 	ldw	r4,160(sp)
  801ef4:	d9402917 	ldw	r5,164(sp)
  801ef8:	40001a26 	beq	r8,zero,801f64 <__kernel_rem_pio2+0xc7c>
  801efc:	da008f17 	ldw	r8,572(sp)
  801f00:	19a0003c 	xorhi	r6,r3,32768
  801f04:	180f883a 	mov	r7,r3
  801f08:	41800115 	stw	r6,4(r8)
  801f0c:	40800015 	stw	r2,0(r8)
  801f10:	100d883a 	mov	r6,r2
  801f14:	08048580 	call	804858 <__subdf3>
  801f18:	04400c0e 	bge	zero,r17,801f4c <__kernel_rem_pio2+0xc64>
  801f1c:	dc002a04 	addi	r16,sp,168
  801f20:	04800044 	movi	r18,1
  801f24:	81800017 	ldw	r6,0(r16)
  801f28:	81c00117 	ldw	r7,4(r16)
  801f2c:	1009883a 	mov	r4,r2
  801f30:	180b883a 	mov	r5,r3
  801f34:	94800044 	addi	r18,r18,1
  801f38:	08037300 	call	803730 <__adddf3>
  801f3c:	84000204 	addi	r16,r16,8
  801f40:	8cbff80e 	bge	r17,r18,801f24 <__alt_data_end+0xff801f24>
  801f44:	da008d17 	ldw	r8,564(sp)
  801f48:	40004226 	beq	r8,zero,802054 <__kernel_rem_pio2+0xd6c>
  801f4c:	da008f17 	ldw	r8,572(sp)
  801f50:	1009883a 	mov	r4,r2
  801f54:	18a0003c 	xorhi	r2,r3,32768
  801f58:	41000215 	stw	r4,8(r8)
  801f5c:	40800315 	stw	r2,12(r8)
  801f60:	003f0c06 	br	801b94 <__alt_data_end+0xff801b94>
  801f64:	da008f17 	ldw	r8,572(sp)
  801f68:	100d883a 	mov	r6,r2
  801f6c:	180f883a 	mov	r7,r3
  801f70:	40800015 	stw	r2,0(r8)
  801f74:	40c00115 	stw	r3,4(r8)
  801f78:	08048580 	call	804858 <__subdf3>
  801f7c:	047fe716 	blt	zero,r17,801f1c <__alt_data_end+0xff801f1c>
  801f80:	da008f17 	ldw	r8,572(sp)
  801f84:	1009883a 	mov	r4,r2
  801f88:	1805883a 	mov	r2,r3
  801f8c:	41000215 	stw	r4,8(r8)
  801f90:	40800315 	stw	r2,12(r8)
  801f94:	003eff06 	br	801b94 <__alt_data_end+0xff801b94>
  801f98:	da008f17 	ldw	r8,572(sp)
  801f9c:	d9802817 	ldw	r6,160(sp)
  801fa0:	d9402a17 	ldw	r5,168(sp)
  801fa4:	d9002b17 	ldw	r4,172(sp)
  801fa8:	41800015 	stw	r6,0(r8)
  801fac:	d9802917 	ldw	r6,164(sp)
  801fb0:	41400215 	stw	r5,8(r8)
  801fb4:	41000315 	stw	r4,12(r8)
  801fb8:	41800115 	stw	r6,4(r8)
  801fbc:	40800415 	stw	r2,16(r8)
  801fc0:	40c00515 	stw	r3,20(r8)
  801fc4:	003ef306 	br	801b94 <__alt_data_end+0xff801b94>
  801fc8:	da00a617 	ldw	r8,664(sp)
  801fcc:	008000c4 	movi	r2,3
  801fd0:	40bef01e 	bne	r8,r2,801b94 <__alt_data_end+0xff801b94>
  801fd4:	0005883a 	mov	r2,zero
  801fd8:	0007883a 	mov	r3,zero
  801fdc:	003fa506 	br	801e74 <__alt_data_end+0xff801e74>
  801fe0:	9485883a 	add	r2,r18,r18
  801fe4:	1085883a 	add	r2,r2,r2
  801fe8:	d8a1883a 	add	r16,sp,r2
  801fec:	880b883a 	mov	r5,r17
  801ff0:	a809883a 	mov	r4,r21
  801ff4:	84007804 	addi	r16,r16,480
  801ff8:	08051540 	call	805154 <__fixdfsi>
  801ffc:	80800015 	stw	r2,0(r16)
  802000:	9023883a 	mov	r17,r18
  802004:	003e7e06 	br	801a00 <__alt_data_end+0xff801a00>
  802008:	a80d883a 	mov	r6,r21
  80200c:	400f883a 	mov	r7,r8
  802010:	0009883a 	mov	r4,zero
  802014:	014ffc34 	movhi	r5,16368
  802018:	08048580 	call	804858 <__subdf3>
  80201c:	102b883a 	mov	r21,r2
  802020:	1811883a 	mov	r8,r3
  802024:	04c00084 	movi	r19,2
  802028:	003dc006 	br	80172c <__alt_data_end+0xff80172c>
  80202c:	da00a617 	ldw	r8,664(sp)
  802030:	00800084 	movi	r2,2
  802034:	123fe416 	blt	r2,r8,801fc8 <__alt_data_end+0xff801fc8>
  802038:	02000c16 	blt	zero,r8,80206c <__kernel_rem_pio2+0xd84>
  80203c:	403ed51e 	bne	r8,zero,801b94 <__alt_data_end+0xff801b94>
  802040:	0005883a 	mov	r2,zero
  802044:	0007883a 	mov	r3,zero
  802048:	003ecc06 	br	801b7c <__alt_data_end+0xff801b7c>
  80204c:	d8009215 	stw	zero,584(sp)
  802050:	003cc306 	br	801360 <__alt_data_end+0xff801360>
  802054:	da008f17 	ldw	r8,572(sp)
  802058:	1009883a 	mov	r4,r2
  80205c:	1805883a 	mov	r2,r3
  802060:	41000215 	stw	r4,8(r8)
  802064:	40800315 	stw	r2,12(r8)
  802068:	003eca06 	br	801b94 <__alt_data_end+0xff801b94>
  80206c:	0005883a 	mov	r2,zero
  802070:	0007883a 	mov	r3,zero
  802074:	003f9d06 	br	801eec <__alt_data_end+0xff801eec>

00802078 <__kernel_sin>:
  802078:	00a00034 	movhi	r2,32768
  80207c:	defff404 	addi	sp,sp,-48
  802080:	10bfffc4 	addi	r2,r2,-1
  802084:	00cf9034 	movhi	r3,15936
  802088:	ddc00915 	stw	r23,36(sp)
  80208c:	dd800815 	stw	r22,32(sp)
  802090:	dc400315 	stw	r17,12(sp)
  802094:	dc000215 	stw	r16,8(sp)
  802098:	dfc00b15 	stw	ra,44(sp)
  80209c:	df000a15 	stw	fp,40(sp)
  8020a0:	dd400715 	stw	r21,28(sp)
  8020a4:	dd000615 	stw	r20,24(sp)
  8020a8:	dcc00515 	stw	r19,20(sp)
  8020ac:	dc800415 	stw	r18,16(sp)
  8020b0:	2884703a 	and	r2,r5,r2
  8020b4:	18ffffc4 	addi	r3,r3,-1
  8020b8:	2821883a 	mov	r16,r5
  8020bc:	2023883a 	mov	r17,r4
  8020c0:	302f883a 	mov	r23,r6
  8020c4:	382d883a 	mov	r22,r7
  8020c8:	18800216 	blt	r3,r2,8020d4 <__kernel_sin+0x5c>
  8020cc:	08051540 	call	805154 <__fixdfsi>
  8020d0:	10009926 	beq	r2,zero,802338 <__kernel_sin+0x2c0>
  8020d4:	880d883a 	mov	r6,r17
  8020d8:	800f883a 	mov	r7,r16
  8020dc:	8809883a 	mov	r4,r17
  8020e0:	800b883a 	mov	r5,r16
  8020e4:	08041400 	call	804140 <__muldf3>
  8020e8:	100d883a 	mov	r6,r2
  8020ec:	180f883a 	mov	r7,r3
  8020f0:	8809883a 	mov	r4,r17
  8020f4:	800b883a 	mov	r5,r16
  8020f8:	1027883a 	mov	r19,r2
  8020fc:	1825883a 	mov	r18,r3
  802100:	08041400 	call	804140 <__muldf3>
  802104:	0196b434 	movhi	r6,23248
  802108:	01cf79b4 	movhi	r7,15846
  80210c:	31b55f04 	addi	r6,r6,-10884
  802110:	39f64e84 	addi	r7,r7,-9926
  802114:	9809883a 	mov	r4,r19
  802118:	900b883a 	mov	r5,r18
  80211c:	102b883a 	mov	r21,r2
  802120:	1829883a 	mov	r20,r3
  802124:	08041400 	call	804140 <__muldf3>
  802128:	01a28b34 	movhi	r6,35372
  80212c:	01cf96f4 	movhi	r7,15963
  802130:	31a73ac4 	addi	r6,r6,-25365
  802134:	39f97984 	addi	r7,r7,-6682
  802138:	1009883a 	mov	r4,r2
  80213c:	180b883a 	mov	r5,r3
  802140:	08048580 	call	804858 <__subdf3>
  802144:	980d883a 	mov	r6,r19
  802148:	900f883a 	mov	r7,r18
  80214c:	1009883a 	mov	r4,r2
  802150:	180b883a 	mov	r5,r3
  802154:	08041400 	call	804140 <__muldf3>
  802158:	0195ecb4 	movhi	r6,22450
  80215c:	01cfb1f4 	movhi	r7,16071
  802160:	31bf9f44 	addi	r6,r6,-387
  802164:	39c778c4 	addi	r7,r7,7651
  802168:	1009883a 	mov	r4,r2
  80216c:	180b883a 	mov	r5,r3
  802170:	08037300 	call	803730 <__adddf3>
  802174:	980d883a 	mov	r6,r19
  802178:	900f883a 	mov	r7,r18
  80217c:	1009883a 	mov	r4,r2
  802180:	180b883a 	mov	r5,r3
  802184:	08041400 	call	804140 <__muldf3>
  802188:	01867074 	movhi	r6,6593
  80218c:	01cfcab4 	movhi	r7,16170
  802190:	31987544 	addi	r6,r6,25045
  802194:	39c06804 	addi	r7,r7,416
  802198:	1009883a 	mov	r4,r2
  80219c:	180b883a 	mov	r5,r3
  8021a0:	08048580 	call	804858 <__subdf3>
  8021a4:	980d883a 	mov	r6,r19
  8021a8:	900f883a 	mov	r7,r18
  8021ac:	1009883a 	mov	r4,r2
  8021b0:	180b883a 	mov	r5,r3
  8021b4:	08041400 	call	804140 <__muldf3>
  8021b8:	01844474 	movhi	r6,4369
  8021bc:	01cfe074 	movhi	r7,16257
  8021c0:	31be2984 	addi	r6,r6,-1882
  8021c4:	39c44444 	addi	r7,r7,4369
  8021c8:	1009883a 	mov	r4,r2
  8021cc:	180b883a 	mov	r5,r3
  8021d0:	08037300 	call	803730 <__adddf3>
  8021d4:	1011883a 	mov	r8,r2
  8021d8:	d8800c17 	ldw	r2,48(sp)
  8021dc:	1839883a 	mov	fp,r3
  8021e0:	10003e26 	beq	r2,zero,8022dc <__kernel_sin+0x264>
  8021e4:	000d883a 	mov	r6,zero
  8021e8:	01cff834 	movhi	r7,16352
  8021ec:	b809883a 	mov	r4,r23
  8021f0:	b00b883a 	mov	r5,r22
  8021f4:	da000015 	stw	r8,0(sp)
  8021f8:	08041400 	call	804140 <__muldf3>
  8021fc:	da000017 	ldw	r8,0(sp)
  802200:	e00f883a 	mov	r7,fp
  802204:	a809883a 	mov	r4,r21
  802208:	400d883a 	mov	r6,r8
  80220c:	a00b883a 	mov	r5,r20
  802210:	d8c00115 	stw	r3,4(sp)
  802214:	d8800015 	stw	r2,0(sp)
  802218:	08041400 	call	804140 <__muldf3>
  80221c:	da800017 	ldw	r10,0(sp)
  802220:	da400117 	ldw	r9,4(sp)
  802224:	100d883a 	mov	r6,r2
  802228:	5009883a 	mov	r4,r10
  80222c:	480b883a 	mov	r5,r9
  802230:	180f883a 	mov	r7,r3
  802234:	08048580 	call	804858 <__subdf3>
  802238:	980d883a 	mov	r6,r19
  80223c:	900f883a 	mov	r7,r18
  802240:	1009883a 	mov	r4,r2
  802244:	180b883a 	mov	r5,r3
  802248:	08041400 	call	804140 <__muldf3>
  80224c:	b80d883a 	mov	r6,r23
  802250:	b00f883a 	mov	r7,r22
  802254:	1009883a 	mov	r4,r2
  802258:	180b883a 	mov	r5,r3
  80225c:	08048580 	call	804858 <__subdf3>
  802260:	01955574 	movhi	r6,21845
  802264:	01cff174 	movhi	r7,16325
  802268:	31955244 	addi	r6,r6,21833
  80226c:	39d55544 	addi	r7,r7,21845
  802270:	a809883a 	mov	r4,r21
  802274:	a00b883a 	mov	r5,r20
  802278:	1027883a 	mov	r19,r2
  80227c:	1825883a 	mov	r18,r3
  802280:	08041400 	call	804140 <__muldf3>
  802284:	100d883a 	mov	r6,r2
  802288:	180f883a 	mov	r7,r3
  80228c:	9809883a 	mov	r4,r19
  802290:	900b883a 	mov	r5,r18
  802294:	08037300 	call	803730 <__adddf3>
  802298:	100d883a 	mov	r6,r2
  80229c:	180f883a 	mov	r7,r3
  8022a0:	8809883a 	mov	r4,r17
  8022a4:	800b883a 	mov	r5,r16
  8022a8:	08048580 	call	804858 <__subdf3>
  8022ac:	dfc00b17 	ldw	ra,44(sp)
  8022b0:	df000a17 	ldw	fp,40(sp)
  8022b4:	ddc00917 	ldw	r23,36(sp)
  8022b8:	dd800817 	ldw	r22,32(sp)
  8022bc:	dd400717 	ldw	r21,28(sp)
  8022c0:	dd000617 	ldw	r20,24(sp)
  8022c4:	dcc00517 	ldw	r19,20(sp)
  8022c8:	dc800417 	ldw	r18,16(sp)
  8022cc:	dc400317 	ldw	r17,12(sp)
  8022d0:	dc000217 	ldw	r16,8(sp)
  8022d4:	dec00c04 	addi	sp,sp,48
  8022d8:	f800283a 	ret
  8022dc:	400d883a 	mov	r6,r8
  8022e0:	9809883a 	mov	r4,r19
  8022e4:	900b883a 	mov	r5,r18
  8022e8:	180f883a 	mov	r7,r3
  8022ec:	08041400 	call	804140 <__muldf3>
  8022f0:	01955574 	movhi	r6,21845
  8022f4:	01cff174 	movhi	r7,16325
  8022f8:	31955244 	addi	r6,r6,21833
  8022fc:	39d55544 	addi	r7,r7,21845
  802300:	1009883a 	mov	r4,r2
  802304:	180b883a 	mov	r5,r3
  802308:	08048580 	call	804858 <__subdf3>
  80230c:	a80d883a 	mov	r6,r21
  802310:	a00f883a 	mov	r7,r20
  802314:	1009883a 	mov	r4,r2
  802318:	180b883a 	mov	r5,r3
  80231c:	08041400 	call	804140 <__muldf3>
  802320:	880d883a 	mov	r6,r17
  802324:	800f883a 	mov	r7,r16
  802328:	1009883a 	mov	r4,r2
  80232c:	180b883a 	mov	r5,r3
  802330:	08037300 	call	803730 <__adddf3>
  802334:	003fdd06 	br	8022ac <__alt_data_end+0xff8022ac>
  802338:	8805883a 	mov	r2,r17
  80233c:	8007883a 	mov	r3,r16
  802340:	003fda06 	br	8022ac <__alt_data_end+0xff8022ac>

00802344 <fabs>:
  802344:	00e00034 	movhi	r3,32768
  802348:	18ffffc4 	addi	r3,r3,-1
  80234c:	2005883a 	mov	r2,r4
  802350:	28c6703a 	and	r3,r5,r3
  802354:	f800283a 	ret

00802358 <floor>:
  802358:	2811d53a 	srai	r8,r5,20
  80235c:	defffa04 	addi	sp,sp,-24
  802360:	dcc00315 	stw	r19,12(sp)
  802364:	4201ffcc 	andi	r8,r8,2047
  802368:	dc800215 	stw	r18,8(sp)
  80236c:	dc400115 	stw	r17,4(sp)
  802370:	dc000015 	stw	r16,0(sp)
  802374:	dfc00515 	stw	ra,20(sp)
  802378:	dd000415 	stw	r20,16(sp)
  80237c:	44bf0044 	addi	r18,r8,-1023
  802380:	018004c4 	movi	r6,19
  802384:	2821883a 	mov	r16,r5
  802388:	2005883a 	mov	r2,r4
  80238c:	280f883a 	mov	r7,r5
  802390:	2827883a 	mov	r19,r5
  802394:	2023883a 	mov	r17,r4
  802398:	34801916 	blt	r6,r18,802400 <floor+0xa8>
  80239c:	90003c16 	blt	r18,zero,802490 <floor+0x138>
  8023a0:	05000434 	movhi	r20,16
  8023a4:	a53fffc4 	addi	r20,r20,-1
  8023a8:	a4a9d83a 	sra	r20,r20,r18
  8023ac:	2d0c703a 	and	r6,r5,r20
  8023b0:	310cb03a 	or	r6,r6,r4
  8023b4:	30001626 	beq	r6,zero,802410 <floor+0xb8>
  8023b8:	01a20034 	movhi	r6,34816
  8023bc:	01df8e34 	movhi	r7,32312
  8023c0:	319d6704 	addi	r6,r6,30108
  8023c4:	39f90f04 	addi	r7,r7,-7108
  8023c8:	08037300 	call	803730 <__adddf3>
  8023cc:	000d883a 	mov	r6,zero
  8023d0:	000f883a 	mov	r7,zero
  8023d4:	1009883a 	mov	r4,r2
  8023d8:	180b883a 	mov	r5,r3
  8023dc:	08040640 	call	804064 <__gedf2>
  8023e0:	0080040e 	bge	zero,r2,8023f4 <floor+0x9c>
  8023e4:	80003c16 	blt	r16,zero,8024d8 <floor+0x180>
  8023e8:	0520303a 	nor	r16,zero,r20
  8023ec:	84e0703a 	and	r16,r16,r19
  8023f0:	0023883a 	mov	r17,zero
  8023f4:	8805883a 	mov	r2,r17
  8023f8:	8007883a 	mov	r3,r16
  8023fc:	00000506 	br	802414 <floor+0xbc>
  802400:	01800cc4 	movi	r6,51
  802404:	34800b0e 	bge	r6,r18,802434 <floor+0xdc>
  802408:	01810004 	movi	r6,1024
  80240c:	91802f26 	beq	r18,r6,8024cc <floor+0x174>
  802410:	3807883a 	mov	r3,r7
  802414:	dfc00517 	ldw	ra,20(sp)
  802418:	dd000417 	ldw	r20,16(sp)
  80241c:	dcc00317 	ldw	r19,12(sp)
  802420:	dc800217 	ldw	r18,8(sp)
  802424:	dc400117 	ldw	r17,4(sp)
  802428:	dc000017 	ldw	r16,0(sp)
  80242c:	dec00604 	addi	sp,sp,24
  802430:	f800283a 	ret
  802434:	423efb44 	addi	r8,r8,-1043
  802438:	053fffc4 	movi	r20,-1
  80243c:	a228d83a 	srl	r20,r20,r8
  802440:	250c703a 	and	r6,r4,r20
  802444:	303ff226 	beq	r6,zero,802410 <__alt_data_end+0xff802410>
  802448:	01a20034 	movhi	r6,34816
  80244c:	01df8e34 	movhi	r7,32312
  802450:	319d6704 	addi	r6,r6,30108
  802454:	39f90f04 	addi	r7,r7,-7108
  802458:	08037300 	call	803730 <__adddf3>
  80245c:	000d883a 	mov	r6,zero
  802460:	000f883a 	mov	r7,zero
  802464:	1009883a 	mov	r4,r2
  802468:	180b883a 	mov	r5,r3
  80246c:	08040640 	call	804064 <__gedf2>
  802470:	00bfe00e 	bge	zero,r2,8023f4 <__alt_data_end+0xff8023f4>
  802474:	80001c16 	blt	r16,zero,8024e8 <floor+0x190>
  802478:	0510303a 	nor	r8,zero,r20
  80247c:	9821883a 	mov	r16,r19
  802480:	8a22703a 	and	r17,r17,r8
  802484:	8805883a 	mov	r2,r17
  802488:	8007883a 	mov	r3,r16
  80248c:	003fe106 	br	802414 <__alt_data_end+0xff802414>
  802490:	01a20034 	movhi	r6,34816
  802494:	01df8e34 	movhi	r7,32312
  802498:	319d6704 	addi	r6,r6,30108
  80249c:	39f90f04 	addi	r7,r7,-7108
  8024a0:	08037300 	call	803730 <__adddf3>
  8024a4:	000d883a 	mov	r6,zero
  8024a8:	000f883a 	mov	r7,zero
  8024ac:	1009883a 	mov	r4,r2
  8024b0:	180b883a 	mov	r5,r3
  8024b4:	08040640 	call	804064 <__gedf2>
  8024b8:	00bfce0e 	bge	zero,r2,8023f4 <__alt_data_end+0xff8023f4>
  8024bc:	80001516 	blt	r16,zero,802514 <floor+0x1bc>
  8024c0:	0023883a 	mov	r17,zero
  8024c4:	0021883a 	mov	r16,zero
  8024c8:	003fca06 	br	8023f4 <__alt_data_end+0xff8023f4>
  8024cc:	200d883a 	mov	r6,r4
  8024d0:	08037300 	call	803730 <__adddf3>
  8024d4:	003fcf06 	br	802414 <__alt_data_end+0xff802414>
  8024d8:	00800434 	movhi	r2,16
  8024dc:	14a5d83a 	sra	r18,r2,r18
  8024e0:	84a7883a 	add	r19,r16,r18
  8024e4:	003fc006 	br	8023e8 <__alt_data_end+0xff8023e8>
  8024e8:	00800504 	movi	r2,20
  8024ec:	90801326 	beq	r18,r2,80253c <floor+0x1e4>
  8024f0:	00800d04 	movi	r2,52
  8024f4:	14a5c83a 	sub	r18,r2,r18
  8024f8:	00800044 	movi	r2,1
  8024fc:	1484983a 	sll	r2,r2,r18
  802500:	1445883a 	add	r2,r2,r17
  802504:	14400b2e 	bgeu	r2,r17,802534 <floor+0x1dc>
  802508:	84c00044 	addi	r19,r16,1
  80250c:	1023883a 	mov	r17,r2
  802510:	003fd906 	br	802478 <__alt_data_end+0xff802478>
  802514:	00a00034 	movhi	r2,32768
  802518:	10bfffc4 	addi	r2,r2,-1
  80251c:	8084703a 	and	r2,r16,r2
  802520:	1462b03a 	or	r17,r2,r17
  802524:	883fb326 	beq	r17,zero,8023f4 <__alt_data_end+0xff8023f4>
  802528:	0023883a 	mov	r17,zero
  80252c:	042ffc34 	movhi	r16,49136
  802530:	003fb006 	br	8023f4 <__alt_data_end+0xff8023f4>
  802534:	1023883a 	mov	r17,r2
  802538:	003fcf06 	br	802478 <__alt_data_end+0xff802478>
  80253c:	84c00044 	addi	r19,r16,1
  802540:	003fcd06 	br	802478 <__alt_data_end+0xff802478>

00802544 <scalbn>:
  802544:	2a1ffc2c 	andhi	r8,r5,32752
  802548:	4011d53a 	srai	r8,r8,20
  80254c:	defffe04 	addi	sp,sp,-8
  802550:	dc000015 	stw	r16,0(sp)
  802554:	dfc00115 	stw	ra,4(sp)
  802558:	280f883a 	mov	r7,r5
  80255c:	2015883a 	mov	r10,r4
  802560:	3021883a 	mov	r16,r6
  802564:	40001e1e 	bne	r8,zero,8025e0 <scalbn+0x9c>
  802568:	00a00034 	movhi	r2,32768
  80256c:	10bfffc4 	addi	r2,r2,-1
  802570:	2884703a 	and	r2,r5,r2
  802574:	1104b03a 	or	r2,r2,r4
  802578:	10002226 	beq	r2,zero,802604 <scalbn+0xc0>
  80257c:	01d0d434 	movhi	r7,17232
  802580:	000d883a 	mov	r6,zero
  802584:	08041400 	call	804140 <__muldf3>
  802588:	013ffff4 	movhi	r4,65535
  80258c:	210f2c04 	addi	r4,r4,15536
  802590:	1015883a 	mov	r10,r2
  802594:	180f883a 	mov	r7,r3
  802598:	81002a16 	blt	r16,r4,802644 <scalbn+0x100>
  80259c:	191ffc2c 	andhi	r4,r3,32752
  8025a0:	2009d53a 	srai	r4,r4,20
  8025a4:	223ff284 	addi	r8,r4,-54
  8025a8:	8211883a 	add	r8,r16,r8
  8025ac:	0081ff84 	movi	r2,2046
  8025b0:	12002f16 	blt	r2,r8,802670 <scalbn+0x12c>
  8025b4:	0200190e 	bge	zero,r8,80261c <scalbn+0xd8>
  8025b8:	4010953a 	slli	r8,r8,20
  8025bc:	01600434 	movhi	r5,32784
  8025c0:	297fffc4 	addi	r5,r5,-1
  8025c4:	194e703a 	and	r7,r3,r5
  8025c8:	5005883a 	mov	r2,r10
  8025cc:	3a06b03a 	or	r3,r7,r8
  8025d0:	dfc00117 	ldw	ra,4(sp)
  8025d4:	dc000017 	ldw	r16,0(sp)
  8025d8:	dec00204 	addi	sp,sp,8
  8025dc:	f800283a 	ret
  8025e0:	0081ffc4 	movi	r2,2047
  8025e4:	2807883a 	mov	r3,r5
  8025e8:	40bfef1e 	bne	r8,r2,8025a8 <__alt_data_end+0xff8025a8>
  8025ec:	200d883a 	mov	r6,r4
  8025f0:	08037300 	call	803730 <__adddf3>
  8025f4:	dfc00117 	ldw	ra,4(sp)
  8025f8:	dc000017 	ldw	r16,0(sp)
  8025fc:	dec00204 	addi	sp,sp,8
  802600:	f800283a 	ret
  802604:	2005883a 	mov	r2,r4
  802608:	2807883a 	mov	r3,r5
  80260c:	dfc00117 	ldw	ra,4(sp)
  802610:	dc000017 	ldw	r16,0(sp)
  802614:	dec00204 	addi	sp,sp,8
  802618:	f800283a 	ret
  80261c:	00bff2c4 	movi	r2,-53
  802620:	4080240e 	bge	r8,r2,8026b4 <scalbn+0x170>
  802624:	00b0d414 	movui	r2,50000
  802628:	14001116 	blt	r2,r16,802670 <scalbn+0x12c>
  80262c:	0130be74 	movhi	r4,49913
  802630:	01406974 	movhi	r5,421
  802634:	213cd644 	addi	r4,r4,-3239
  802638:	295b87c4 	addi	r5,r5,28191
  80263c:	500d883a 	mov	r6,r10
  802640:	08026e00 	call	8026e0 <copysign>
  802644:	01b0be74 	movhi	r6,49913
  802648:	01c06974 	movhi	r7,421
  80264c:	31bcd644 	addi	r6,r6,-3239
  802650:	39db87c4 	addi	r7,r7,28191
  802654:	1009883a 	mov	r4,r2
  802658:	180b883a 	mov	r5,r3
  80265c:	08041400 	call	804140 <__muldf3>
  802660:	dfc00117 	ldw	ra,4(sp)
  802664:	dc000017 	ldw	r16,0(sp)
  802668:	dec00204 	addi	sp,sp,8
  80266c:	f800283a 	ret
  802670:	01220034 	movhi	r4,34816
  802674:	015f8e34 	movhi	r5,32312
  802678:	500d883a 	mov	r6,r10
  80267c:	211d6704 	addi	r4,r4,30108
  802680:	29790f04 	addi	r5,r5,-7108
  802684:	08026e00 	call	8026e0 <copysign>
  802688:	01a20034 	movhi	r6,34816
  80268c:	01df8e34 	movhi	r7,32312
  802690:	319d6704 	addi	r6,r6,30108
  802694:	39f90f04 	addi	r7,r7,-7108
  802698:	1009883a 	mov	r4,r2
  80269c:	180b883a 	mov	r5,r3
  8026a0:	08041400 	call	804140 <__muldf3>
  8026a4:	dfc00117 	ldw	ra,4(sp)
  8026a8:	dc000017 	ldw	r16,0(sp)
  8026ac:	dec00204 	addi	sp,sp,8
  8026b0:	f800283a 	ret
  8026b4:	42000d84 	addi	r8,r8,54
  8026b8:	4012953a 	slli	r9,r8,20
  8026bc:	01e00434 	movhi	r7,32784
  8026c0:	39ffffc4 	addi	r7,r7,-1
  8026c4:	19ca703a 	and	r5,r3,r7
  8026c8:	000d883a 	mov	r6,zero
  8026cc:	01cf2434 	movhi	r7,15504
  8026d0:	5009883a 	mov	r4,r10
  8026d4:	494ab03a 	or	r5,r9,r5
  8026d8:	08041400 	call	804140 <__muldf3>
  8026dc:	003fbc06 	br	8025d0 <__alt_data_end+0xff8025d0>

008026e0 <copysign>:
  8026e0:	2005883a 	mov	r2,r4
  8026e4:	01200034 	movhi	r4,32768
  8026e8:	213fffc4 	addi	r4,r4,-1
  8026ec:	38e0002c 	andhi	r3,r7,32768
  8026f0:	290a703a 	and	r5,r5,r4
  8026f4:	28c6b03a 	or	r3,r5,r3
  8026f8:	f800283a 	ret

008026fc <__divsi3>:
  8026fc:	20001b16 	blt	r4,zero,80276c <__divsi3+0x70>
  802700:	000f883a 	mov	r7,zero
  802704:	28001616 	blt	r5,zero,802760 <__divsi3+0x64>
  802708:	200d883a 	mov	r6,r4
  80270c:	29001a2e 	bgeu	r5,r4,802778 <__divsi3+0x7c>
  802710:	00800804 	movi	r2,32
  802714:	00c00044 	movi	r3,1
  802718:	00000106 	br	802720 <__divsi3+0x24>
  80271c:	10000d26 	beq	r2,zero,802754 <__divsi3+0x58>
  802720:	294b883a 	add	r5,r5,r5
  802724:	10bfffc4 	addi	r2,r2,-1
  802728:	18c7883a 	add	r3,r3,r3
  80272c:	293ffb36 	bltu	r5,r4,80271c <__alt_data_end+0xff80271c>
  802730:	0005883a 	mov	r2,zero
  802734:	18000726 	beq	r3,zero,802754 <__divsi3+0x58>
  802738:	0005883a 	mov	r2,zero
  80273c:	31400236 	bltu	r6,r5,802748 <__divsi3+0x4c>
  802740:	314dc83a 	sub	r6,r6,r5
  802744:	10c4b03a 	or	r2,r2,r3
  802748:	1806d07a 	srli	r3,r3,1
  80274c:	280ad07a 	srli	r5,r5,1
  802750:	183ffa1e 	bne	r3,zero,80273c <__alt_data_end+0xff80273c>
  802754:	38000126 	beq	r7,zero,80275c <__divsi3+0x60>
  802758:	0085c83a 	sub	r2,zero,r2
  80275c:	f800283a 	ret
  802760:	014bc83a 	sub	r5,zero,r5
  802764:	39c0005c 	xori	r7,r7,1
  802768:	003fe706 	br	802708 <__alt_data_end+0xff802708>
  80276c:	0109c83a 	sub	r4,zero,r4
  802770:	01c00044 	movi	r7,1
  802774:	003fe306 	br	802704 <__alt_data_end+0xff802704>
  802778:	00c00044 	movi	r3,1
  80277c:	003fee06 	br	802738 <__alt_data_end+0xff802738>

00802780 <__modsi3>:
  802780:	20001716 	blt	r4,zero,8027e0 <__modsi3+0x60>
  802784:	000f883a 	mov	r7,zero
  802788:	2005883a 	mov	r2,r4
  80278c:	28001216 	blt	r5,zero,8027d8 <__modsi3+0x58>
  802790:	2900162e 	bgeu	r5,r4,8027ec <__modsi3+0x6c>
  802794:	01800804 	movi	r6,32
  802798:	00c00044 	movi	r3,1
  80279c:	00000106 	br	8027a4 <__modsi3+0x24>
  8027a0:	30000a26 	beq	r6,zero,8027cc <__modsi3+0x4c>
  8027a4:	294b883a 	add	r5,r5,r5
  8027a8:	31bfffc4 	addi	r6,r6,-1
  8027ac:	18c7883a 	add	r3,r3,r3
  8027b0:	293ffb36 	bltu	r5,r4,8027a0 <__alt_data_end+0xff8027a0>
  8027b4:	18000526 	beq	r3,zero,8027cc <__modsi3+0x4c>
  8027b8:	1806d07a 	srli	r3,r3,1
  8027bc:	11400136 	bltu	r2,r5,8027c4 <__modsi3+0x44>
  8027c0:	1145c83a 	sub	r2,r2,r5
  8027c4:	280ad07a 	srli	r5,r5,1
  8027c8:	183ffb1e 	bne	r3,zero,8027b8 <__alt_data_end+0xff8027b8>
  8027cc:	38000126 	beq	r7,zero,8027d4 <__modsi3+0x54>
  8027d0:	0085c83a 	sub	r2,zero,r2
  8027d4:	f800283a 	ret
  8027d8:	014bc83a 	sub	r5,zero,r5
  8027dc:	003fec06 	br	802790 <__alt_data_end+0xff802790>
  8027e0:	0109c83a 	sub	r4,zero,r4
  8027e4:	01c00044 	movi	r7,1
  8027e8:	003fe706 	br	802788 <__alt_data_end+0xff802788>
  8027ec:	00c00044 	movi	r3,1
  8027f0:	003ff106 	br	8027b8 <__alt_data_end+0xff8027b8>

008027f4 <__udivsi3>:
  8027f4:	200d883a 	mov	r6,r4
  8027f8:	2900152e 	bgeu	r5,r4,802850 <__udivsi3+0x5c>
  8027fc:	28001416 	blt	r5,zero,802850 <__udivsi3+0x5c>
  802800:	00800804 	movi	r2,32
  802804:	00c00044 	movi	r3,1
  802808:	00000206 	br	802814 <__udivsi3+0x20>
  80280c:	10000e26 	beq	r2,zero,802848 <__udivsi3+0x54>
  802810:	28000516 	blt	r5,zero,802828 <__udivsi3+0x34>
  802814:	294b883a 	add	r5,r5,r5
  802818:	10bfffc4 	addi	r2,r2,-1
  80281c:	18c7883a 	add	r3,r3,r3
  802820:	293ffa36 	bltu	r5,r4,80280c <__alt_data_end+0xff80280c>
  802824:	18000826 	beq	r3,zero,802848 <__udivsi3+0x54>
  802828:	0005883a 	mov	r2,zero
  80282c:	31400236 	bltu	r6,r5,802838 <__udivsi3+0x44>
  802830:	314dc83a 	sub	r6,r6,r5
  802834:	10c4b03a 	or	r2,r2,r3
  802838:	1806d07a 	srli	r3,r3,1
  80283c:	280ad07a 	srli	r5,r5,1
  802840:	183ffa1e 	bne	r3,zero,80282c <__alt_data_end+0xff80282c>
  802844:	f800283a 	ret
  802848:	0005883a 	mov	r2,zero
  80284c:	f800283a 	ret
  802850:	00c00044 	movi	r3,1
  802854:	003ff406 	br	802828 <__alt_data_end+0xff802828>

00802858 <__umodsi3>:
  802858:	2005883a 	mov	r2,r4
  80285c:	2900122e 	bgeu	r5,r4,8028a8 <__umodsi3+0x50>
  802860:	28001116 	blt	r5,zero,8028a8 <__umodsi3+0x50>
  802864:	01800804 	movi	r6,32
  802868:	00c00044 	movi	r3,1
  80286c:	00000206 	br	802878 <__umodsi3+0x20>
  802870:	30000c26 	beq	r6,zero,8028a4 <__umodsi3+0x4c>
  802874:	28000516 	blt	r5,zero,80288c <__umodsi3+0x34>
  802878:	294b883a 	add	r5,r5,r5
  80287c:	31bfffc4 	addi	r6,r6,-1
  802880:	18c7883a 	add	r3,r3,r3
  802884:	293ffa36 	bltu	r5,r4,802870 <__alt_data_end+0xff802870>
  802888:	18000626 	beq	r3,zero,8028a4 <__umodsi3+0x4c>
  80288c:	1806d07a 	srli	r3,r3,1
  802890:	11400136 	bltu	r2,r5,802898 <__umodsi3+0x40>
  802894:	1145c83a 	sub	r2,r2,r5
  802898:	280ad07a 	srli	r5,r5,1
  80289c:	183ffb1e 	bne	r3,zero,80288c <__alt_data_end+0xff80288c>
  8028a0:	f800283a 	ret
  8028a4:	f800283a 	ret
  8028a8:	00c00044 	movi	r3,1
  8028ac:	003ff706 	br	80288c <__alt_data_end+0xff80288c>

008028b0 <__divsf3>:
  8028b0:	defff504 	addi	sp,sp,-44
  8028b4:	200cd5fa 	srli	r6,r4,23
  8028b8:	dcc00415 	stw	r19,16(sp)
  8028bc:	2026d7fa 	srli	r19,r4,31
  8028c0:	00c02034 	movhi	r3,128
  8028c4:	dd800715 	stw	r22,28(sp)
  8028c8:	dd000515 	stw	r20,20(sp)
  8028cc:	dc800315 	stw	r18,12(sp)
  8028d0:	18ffffc4 	addi	r3,r3,-1
  8028d4:	dfc00a15 	stw	ra,40(sp)
  8028d8:	df000915 	stw	fp,36(sp)
  8028dc:	ddc00815 	stw	r23,32(sp)
  8028e0:	dd400615 	stw	r21,24(sp)
  8028e4:	dc400215 	stw	r17,8(sp)
  8028e8:	dc000115 	stw	r16,4(sp)
  8028ec:	35003fcc 	andi	r20,r6,255
  8028f0:	1924703a 	and	r18,r3,r4
  8028f4:	9d803fcc 	andi	r22,r19,255
  8028f8:	a0005226 	beq	r20,zero,802a44 <__divsf3+0x194>
  8028fc:	00803fc4 	movi	r2,255
  802900:	a0802e26 	beq	r20,r2,8029bc <__divsf3+0x10c>
  802904:	91002034 	orhi	r4,r18,128
  802908:	202490fa 	slli	r18,r4,3
  80290c:	a53fe044 	addi	r20,r20,-127
  802910:	0021883a 	mov	r16,zero
  802914:	002f883a 	mov	r23,zero
  802918:	280cd5fa 	srli	r6,r5,23
  80291c:	282ad7fa 	srli	r21,r5,31
  802920:	00c02034 	movhi	r3,128
  802924:	18ffffc4 	addi	r3,r3,-1
  802928:	31803fcc 	andi	r6,r6,255
  80292c:	1962703a 	and	r17,r3,r5
  802930:	af003fcc 	andi	fp,r21,255
  802934:	30004a26 	beq	r6,zero,802a60 <__divsf3+0x1b0>
  802938:	00803fc4 	movi	r2,255
  80293c:	30804526 	beq	r6,r2,802a54 <__divsf3+0x1a4>
  802940:	89402034 	orhi	r5,r17,128
  802944:	282290fa 	slli	r17,r5,3
  802948:	31bfe044 	addi	r6,r6,-127
  80294c:	000b883a 	mov	r5,zero
  802950:	2c20b03a 	or	r16,r5,r16
  802954:	802090ba 	slli	r16,r16,2
  802958:	00802034 	movhi	r2,128
  80295c:	108a5f04 	addi	r2,r2,10620
  802960:	80a1883a 	add	r16,r16,r2
  802964:	81000017 	ldw	r4,0(r16)
  802968:	9d46f03a 	xor	r3,r19,r21
  80296c:	180f883a 	mov	r7,r3
  802970:	18803fcc 	andi	r2,r3,255
  802974:	a18dc83a 	sub	r6,r20,r6
  802978:	2000683a 	jmp	r4
  80297c:	00802b60 	cmpeqi	r2,zero,173
  802980:	008029e4 	muli	r2,zero,167
  802984:	00802b54 	movui	r2,173
  802988:	008029d0 	cmplti	r2,zero,167
  80298c:	00802b54 	movui	r2,173
  802990:	00802b2c 	andhi	r2,zero,172
  802994:	00802b54 	movui	r2,173
  802998:	008029d0 	cmplti	r2,zero,167
  80299c:	008029e4 	muli	r2,zero,167
  8029a0:	008029e4 	muli	r2,zero,167
  8029a4:	00802b2c 	andhi	r2,zero,172
  8029a8:	008029d0 	cmplti	r2,zero,167
  8029ac:	00802c40 	call	802c4 <__alt_mem_sdram-0x77fd3c>
  8029b0:	00802c40 	call	802c4 <__alt_mem_sdram-0x77fd3c>
  8029b4:	00802c40 	call	802c4 <__alt_mem_sdram-0x77fd3c>
  8029b8:	00802bf4 	movhi	r2,175
  8029bc:	9000581e 	bne	r18,zero,802b20 <__divsf3+0x270>
  8029c0:	04000204 	movi	r16,8
  8029c4:	05c00084 	movi	r23,2
  8029c8:	003fd306 	br	802918 <__alt_data_end+0xff802918>
  8029cc:	0023883a 	mov	r17,zero
  8029d0:	e02d883a 	mov	r22,fp
  8029d4:	282f883a 	mov	r23,r5
  8029d8:	00800084 	movi	r2,2
  8029dc:	b8808f1e 	bne	r23,r2,802c1c <__divsf3+0x36c>
  8029e0:	b005883a 	mov	r2,r22
  8029e4:	11c0004c 	andi	r7,r2,1
  8029e8:	013fffc4 	movi	r4,-1
  8029ec:	000d883a 	mov	r6,zero
  8029f0:	21003fcc 	andi	r4,r4,255
  8029f4:	200895fa 	slli	r4,r4,23
  8029f8:	38803fcc 	andi	r2,r7,255
  8029fc:	00c02034 	movhi	r3,128
  802a00:	100497fa 	slli	r2,r2,31
  802a04:	18ffffc4 	addi	r3,r3,-1
  802a08:	30c6703a 	and	r3,r6,r3
  802a0c:	1906b03a 	or	r3,r3,r4
  802a10:	1884b03a 	or	r2,r3,r2
  802a14:	dfc00a17 	ldw	ra,40(sp)
  802a18:	df000917 	ldw	fp,36(sp)
  802a1c:	ddc00817 	ldw	r23,32(sp)
  802a20:	dd800717 	ldw	r22,28(sp)
  802a24:	dd400617 	ldw	r21,24(sp)
  802a28:	dd000517 	ldw	r20,20(sp)
  802a2c:	dcc00417 	ldw	r19,16(sp)
  802a30:	dc800317 	ldw	r18,12(sp)
  802a34:	dc400217 	ldw	r17,8(sp)
  802a38:	dc000117 	ldw	r16,4(sp)
  802a3c:	dec00b04 	addi	sp,sp,44
  802a40:	f800283a 	ret
  802a44:	90002b1e 	bne	r18,zero,802af4 <__divsf3+0x244>
  802a48:	04000104 	movi	r16,4
  802a4c:	05c00044 	movi	r23,1
  802a50:	003fb106 	br	802918 <__alt_data_end+0xff802918>
  802a54:	8800251e 	bne	r17,zero,802aec <__divsf3+0x23c>
  802a58:	01400084 	movi	r5,2
  802a5c:	00000206 	br	802a68 <__divsf3+0x1b8>
  802a60:	88001a1e 	bne	r17,zero,802acc <__divsf3+0x21c>
  802a64:	01400044 	movi	r5,1
  802a68:	8160b03a 	or	r16,r16,r5
  802a6c:	802090ba 	slli	r16,r16,2
  802a70:	00c02034 	movhi	r3,128
  802a74:	18caa304 	addi	r3,r3,10892
  802a78:	80e1883a 	add	r16,r16,r3
  802a7c:	80c00017 	ldw	r3,0(r16)
  802a80:	9d44f03a 	xor	r2,r19,r21
  802a84:	a18dc83a 	sub	r6,r20,r6
  802a88:	1800683a 	jmp	r3
  802a8c:	008029e4 	muli	r2,zero,167
  802a90:	008029e4 	muli	r2,zero,167
  802a94:	00802c30 	cmpltui	r2,zero,176
  802a98:	008029cc 	andi	r2,zero,167
  802a9c:	00802c30 	cmpltui	r2,zero,176
  802aa0:	00802b2c 	andhi	r2,zero,172
  802aa4:	00802c30 	cmpltui	r2,zero,176
  802aa8:	008029cc 	andi	r2,zero,167
  802aac:	008029e4 	muli	r2,zero,167
  802ab0:	008029e4 	muli	r2,zero,167
  802ab4:	00802b2c 	andhi	r2,zero,172
  802ab8:	008029cc 	andi	r2,zero,167
  802abc:	00802c40 	call	802c4 <__alt_mem_sdram-0x77fd3c>
  802ac0:	00802c40 	call	802c4 <__alt_mem_sdram-0x77fd3c>
  802ac4:	00802c40 	call	802c4 <__alt_mem_sdram-0x77fd3c>
  802ac8:	00802c58 	cmpnei	r2,zero,177
  802acc:	8809883a 	mov	r4,r17
  802ad0:	08056100 	call	805610 <__clzsi2>
  802ad4:	10fffec4 	addi	r3,r2,-5
  802ad8:	10801d84 	addi	r2,r2,118
  802adc:	88e2983a 	sll	r17,r17,r3
  802ae0:	008dc83a 	sub	r6,zero,r2
  802ae4:	000b883a 	mov	r5,zero
  802ae8:	003f9906 	br	802950 <__alt_data_end+0xff802950>
  802aec:	014000c4 	movi	r5,3
  802af0:	003f9706 	br	802950 <__alt_data_end+0xff802950>
  802af4:	9009883a 	mov	r4,r18
  802af8:	d9400015 	stw	r5,0(sp)
  802afc:	08056100 	call	805610 <__clzsi2>
  802b00:	10fffec4 	addi	r3,r2,-5
  802b04:	11801d84 	addi	r6,r2,118
  802b08:	90e4983a 	sll	r18,r18,r3
  802b0c:	01a9c83a 	sub	r20,zero,r6
  802b10:	0021883a 	mov	r16,zero
  802b14:	002f883a 	mov	r23,zero
  802b18:	d9400017 	ldw	r5,0(sp)
  802b1c:	003f7e06 	br	802918 <__alt_data_end+0xff802918>
  802b20:	04000304 	movi	r16,12
  802b24:	05c000c4 	movi	r23,3
  802b28:	003f7b06 	br	802918 <__alt_data_end+0xff802918>
  802b2c:	01802034 	movhi	r6,128
  802b30:	000f883a 	mov	r7,zero
  802b34:	31bfffc4 	addi	r6,r6,-1
  802b38:	013fffc4 	movi	r4,-1
  802b3c:	003fac06 	br	8029f0 <__alt_data_end+0xff8029f0>
  802b40:	01400044 	movi	r5,1
  802b44:	2909c83a 	sub	r4,r5,r4
  802b48:	00c006c4 	movi	r3,27
  802b4c:	19004b0e 	bge	r3,r4,802c7c <__divsf3+0x3cc>
  802b50:	114e703a 	and	r7,r2,r5
  802b54:	0009883a 	mov	r4,zero
  802b58:	000d883a 	mov	r6,zero
  802b5c:	003fa406 	br	8029f0 <__alt_data_end+0xff8029f0>
  802b60:	9006917a 	slli	r3,r18,5
  802b64:	8822917a 	slli	r17,r17,5
  802b68:	1c40372e 	bgeu	r3,r17,802c48 <__divsf3+0x398>
  802b6c:	31bfffc4 	addi	r6,r6,-1
  802b70:	010006c4 	movi	r4,27
  802b74:	000b883a 	mov	r5,zero
  802b78:	180f883a 	mov	r7,r3
  802b7c:	294b883a 	add	r5,r5,r5
  802b80:	18c7883a 	add	r3,r3,r3
  802b84:	38000116 	blt	r7,zero,802b8c <__divsf3+0x2dc>
  802b88:	1c400236 	bltu	r3,r17,802b94 <__divsf3+0x2e4>
  802b8c:	1c47c83a 	sub	r3,r3,r17
  802b90:	29400054 	ori	r5,r5,1
  802b94:	213fffc4 	addi	r4,r4,-1
  802b98:	203ff71e 	bne	r4,zero,802b78 <__alt_data_end+0xff802b78>
  802b9c:	1806c03a 	cmpne	r3,r3,zero
  802ba0:	1962b03a 	or	r17,r3,r5
  802ba4:	31001fc4 	addi	r4,r6,127
  802ba8:	013fe50e 	bge	zero,r4,802b40 <__alt_data_end+0xff802b40>
  802bac:	88c001cc 	andi	r3,r17,7
  802bb0:	18000426 	beq	r3,zero,802bc4 <__divsf3+0x314>
  802bb4:	88c003cc 	andi	r3,r17,15
  802bb8:	01400104 	movi	r5,4
  802bbc:	19400126 	beq	r3,r5,802bc4 <__divsf3+0x314>
  802bc0:	8963883a 	add	r17,r17,r5
  802bc4:	88c2002c 	andhi	r3,r17,2048
  802bc8:	18000426 	beq	r3,zero,802bdc <__divsf3+0x32c>
  802bcc:	00fe0034 	movhi	r3,63488
  802bd0:	18ffffc4 	addi	r3,r3,-1
  802bd4:	31002004 	addi	r4,r6,128
  802bd8:	88e2703a 	and	r17,r17,r3
  802bdc:	00c03f84 	movi	r3,254
  802be0:	193f8016 	blt	r3,r4,8029e4 <__alt_data_end+0xff8029e4>
  802be4:	880c91ba 	slli	r6,r17,6
  802be8:	11c0004c 	andi	r7,r2,1
  802bec:	300cd27a 	srli	r6,r6,9
  802bf0:	003f7f06 	br	8029f0 <__alt_data_end+0xff8029f0>
  802bf4:	9080102c 	andhi	r2,r18,64
  802bf8:	10000226 	beq	r2,zero,802c04 <__divsf3+0x354>
  802bfc:	8880102c 	andhi	r2,r17,64
  802c00:	10001826 	beq	r2,zero,802c64 <__divsf3+0x3b4>
  802c04:	00802034 	movhi	r2,128
  802c08:	91801034 	orhi	r6,r18,64
  802c0c:	10bfffc4 	addi	r2,r2,-1
  802c10:	980f883a 	mov	r7,r19
  802c14:	308c703a 	and	r6,r6,r2
  802c18:	003fc706 	br	802b38 <__alt_data_end+0xff802b38>
  802c1c:	008000c4 	movi	r2,3
  802c20:	b8802d26 	beq	r23,r2,802cd8 <__divsf3+0x428>
  802c24:	00c00044 	movi	r3,1
  802c28:	b005883a 	mov	r2,r22
  802c2c:	b8ffdd1e 	bne	r23,r3,802ba4 <__alt_data_end+0xff802ba4>
  802c30:	11c0004c 	andi	r7,r2,1
  802c34:	0009883a 	mov	r4,zero
  802c38:	000d883a 	mov	r6,zero
  802c3c:	003f6c06 	br	8029f0 <__alt_data_end+0xff8029f0>
  802c40:	9023883a 	mov	r17,r18
  802c44:	003f6406 	br	8029d8 <__alt_data_end+0xff8029d8>
  802c48:	1c47c83a 	sub	r3,r3,r17
  802c4c:	01000684 	movi	r4,26
  802c50:	01400044 	movi	r5,1
  802c54:	003fc806 	br	802b78 <__alt_data_end+0xff802b78>
  802c58:	9080102c 	andhi	r2,r18,64
  802c5c:	103fe926 	beq	r2,zero,802c04 <__alt_data_end+0xff802c04>
  802c60:	0023883a 	mov	r17,zero
  802c64:	00802034 	movhi	r2,128
  802c68:	89801034 	orhi	r6,r17,64
  802c6c:	10bfffc4 	addi	r2,r2,-1
  802c70:	a80f883a 	mov	r7,r21
  802c74:	308c703a 	and	r6,r6,r2
  802c78:	003faf06 	br	802b38 <__alt_data_end+0xff802b38>
  802c7c:	01c00804 	movi	r7,32
  802c80:	390fc83a 	sub	r7,r7,r4
  802c84:	89ce983a 	sll	r7,r17,r7
  802c88:	890ad83a 	srl	r5,r17,r4
  802c8c:	380ec03a 	cmpne	r7,r7,zero
  802c90:	29cab03a 	or	r5,r5,r7
  802c94:	28c001cc 	andi	r3,r5,7
  802c98:	18000426 	beq	r3,zero,802cac <__divsf3+0x3fc>
  802c9c:	28c003cc 	andi	r3,r5,15
  802ca0:	01000104 	movi	r4,4
  802ca4:	19000126 	beq	r3,r4,802cac <__divsf3+0x3fc>
  802ca8:	290b883a 	add	r5,r5,r4
  802cac:	28c1002c 	andhi	r3,r5,1024
  802cb0:	18000426 	beq	r3,zero,802cc4 <__divsf3+0x414>
  802cb4:	11c0004c 	andi	r7,r2,1
  802cb8:	01000044 	movi	r4,1
  802cbc:	000d883a 	mov	r6,zero
  802cc0:	003f4b06 	br	8029f0 <__alt_data_end+0xff8029f0>
  802cc4:	280a91ba 	slli	r5,r5,6
  802cc8:	11c0004c 	andi	r7,r2,1
  802ccc:	0009883a 	mov	r4,zero
  802cd0:	280cd27a 	srli	r6,r5,9
  802cd4:	003f4606 	br	8029f0 <__alt_data_end+0xff8029f0>
  802cd8:	00802034 	movhi	r2,128
  802cdc:	89801034 	orhi	r6,r17,64
  802ce0:	10bfffc4 	addi	r2,r2,-1
  802ce4:	b00f883a 	mov	r7,r22
  802ce8:	308c703a 	and	r6,r6,r2
  802cec:	003f9206 	br	802b38 <__alt_data_end+0xff802b38>

00802cf0 <__mulsf3>:
  802cf0:	defff504 	addi	sp,sp,-44
  802cf4:	dc000115 	stw	r16,4(sp)
  802cf8:	2020d5fa 	srli	r16,r4,23
  802cfc:	dd400615 	stw	r21,24(sp)
  802d00:	202ad7fa 	srli	r21,r4,31
  802d04:	dc800315 	stw	r18,12(sp)
  802d08:	04802034 	movhi	r18,128
  802d0c:	df000915 	stw	fp,36(sp)
  802d10:	dd000515 	stw	r20,20(sp)
  802d14:	94bfffc4 	addi	r18,r18,-1
  802d18:	dfc00a15 	stw	ra,40(sp)
  802d1c:	ddc00815 	stw	r23,32(sp)
  802d20:	dd800715 	stw	r22,28(sp)
  802d24:	dcc00415 	stw	r19,16(sp)
  802d28:	dc400215 	stw	r17,8(sp)
  802d2c:	84003fcc 	andi	r16,r16,255
  802d30:	9124703a 	and	r18,r18,r4
  802d34:	a829883a 	mov	r20,r21
  802d38:	af003fcc 	andi	fp,r21,255
  802d3c:	80005426 	beq	r16,zero,802e90 <__mulsf3+0x1a0>
  802d40:	00803fc4 	movi	r2,255
  802d44:	80802f26 	beq	r16,r2,802e04 <__mulsf3+0x114>
  802d48:	91002034 	orhi	r4,r18,128
  802d4c:	202490fa 	slli	r18,r4,3
  802d50:	843fe044 	addi	r16,r16,-127
  802d54:	0023883a 	mov	r17,zero
  802d58:	002f883a 	mov	r23,zero
  802d5c:	2804d5fa 	srli	r2,r5,23
  802d60:	282cd7fa 	srli	r22,r5,31
  802d64:	01002034 	movhi	r4,128
  802d68:	213fffc4 	addi	r4,r4,-1
  802d6c:	10803fcc 	andi	r2,r2,255
  802d70:	2166703a 	and	r19,r4,r5
  802d74:	b1803fcc 	andi	r6,r22,255
  802d78:	10004c26 	beq	r2,zero,802eac <__mulsf3+0x1bc>
  802d7c:	00c03fc4 	movi	r3,255
  802d80:	10c04726 	beq	r2,r3,802ea0 <__mulsf3+0x1b0>
  802d84:	99002034 	orhi	r4,r19,128
  802d88:	202690fa 	slli	r19,r4,3
  802d8c:	10bfe044 	addi	r2,r2,-127
  802d90:	0007883a 	mov	r3,zero
  802d94:	80a1883a 	add	r16,r16,r2
  802d98:	010003c4 	movi	r4,15
  802d9c:	1c44b03a 	or	r2,r3,r17
  802da0:	b56af03a 	xor	r21,r22,r21
  802da4:	81c00044 	addi	r7,r16,1
  802da8:	20806b36 	bltu	r4,r2,802f58 <__mulsf3+0x268>
  802dac:	100490ba 	slli	r2,r2,2
  802db0:	01002034 	movhi	r4,128
  802db4:	210b7104 	addi	r4,r4,11716
  802db8:	1105883a 	add	r2,r2,r4
  802dbc:	10800017 	ldw	r2,0(r2)
  802dc0:	1000683a 	jmp	r2
  802dc4:	00802f58 	cmpnei	r2,zero,189
  802dc8:	00802e18 	cmpnei	r2,zero,184
  802dcc:	00802e18 	cmpnei	r2,zero,184
  802dd0:	00802e14 	movui	r2,184
  802dd4:	00802f3c 	xorhi	r2,zero,188
  802dd8:	00802f3c 	xorhi	r2,zero,188
  802ddc:	00802f28 	cmpgeui	r2,zero,188
  802de0:	00802e14 	movui	r2,184
  802de4:	00802f3c 	xorhi	r2,zero,188
  802de8:	00802f28 	cmpgeui	r2,zero,188
  802dec:	00802f3c 	xorhi	r2,zero,188
  802df0:	00802e14 	movui	r2,184
  802df4:	00802f48 	cmpgei	r2,zero,189
  802df8:	00802f48 	cmpgei	r2,zero,189
  802dfc:	00802f48 	cmpgei	r2,zero,189
  802e00:	00803024 	muli	r2,zero,192
  802e04:	90003b1e 	bne	r18,zero,802ef4 <__mulsf3+0x204>
  802e08:	04400204 	movi	r17,8
  802e0c:	05c00084 	movi	r23,2
  802e10:	003fd206 	br	802d5c <__alt_data_end+0xff802d5c>
  802e14:	302b883a 	mov	r21,r6
  802e18:	00800084 	movi	r2,2
  802e1c:	18802626 	beq	r3,r2,802eb8 <__mulsf3+0x1c8>
  802e20:	008000c4 	movi	r2,3
  802e24:	1880ab26 	beq	r3,r2,8030d4 <__mulsf3+0x3e4>
  802e28:	00800044 	movi	r2,1
  802e2c:	1880a21e 	bne	r3,r2,8030b8 <__mulsf3+0x3c8>
  802e30:	a829883a 	mov	r20,r21
  802e34:	0007883a 	mov	r3,zero
  802e38:	0009883a 	mov	r4,zero
  802e3c:	18803fcc 	andi	r2,r3,255
  802e40:	100695fa 	slli	r3,r2,23
  802e44:	a0803fcc 	andi	r2,r20,255
  802e48:	100a97fa 	slli	r5,r2,31
  802e4c:	00802034 	movhi	r2,128
  802e50:	10bfffc4 	addi	r2,r2,-1
  802e54:	2084703a 	and	r2,r4,r2
  802e58:	10c4b03a 	or	r2,r2,r3
  802e5c:	1144b03a 	or	r2,r2,r5
  802e60:	dfc00a17 	ldw	ra,40(sp)
  802e64:	df000917 	ldw	fp,36(sp)
  802e68:	ddc00817 	ldw	r23,32(sp)
  802e6c:	dd800717 	ldw	r22,28(sp)
  802e70:	dd400617 	ldw	r21,24(sp)
  802e74:	dd000517 	ldw	r20,20(sp)
  802e78:	dcc00417 	ldw	r19,16(sp)
  802e7c:	dc800317 	ldw	r18,12(sp)
  802e80:	dc400217 	ldw	r17,8(sp)
  802e84:	dc000117 	ldw	r16,4(sp)
  802e88:	dec00b04 	addi	sp,sp,44
  802e8c:	f800283a 	ret
  802e90:	90000d1e 	bne	r18,zero,802ec8 <__mulsf3+0x1d8>
  802e94:	04400104 	movi	r17,4
  802e98:	05c00044 	movi	r23,1
  802e9c:	003faf06 	br	802d5c <__alt_data_end+0xff802d5c>
  802ea0:	9806c03a 	cmpne	r3,r19,zero
  802ea4:	18c00084 	addi	r3,r3,2
  802ea8:	003fba06 	br	802d94 <__alt_data_end+0xff802d94>
  802eac:	9800141e 	bne	r19,zero,802f00 <__mulsf3+0x210>
  802eb0:	00c00044 	movi	r3,1
  802eb4:	003fb706 	br	802d94 <__alt_data_end+0xff802d94>
  802eb8:	a829883a 	mov	r20,r21
  802ebc:	00ffffc4 	movi	r3,-1
  802ec0:	0009883a 	mov	r4,zero
  802ec4:	003fdd06 	br	802e3c <__alt_data_end+0xff802e3c>
  802ec8:	9009883a 	mov	r4,r18
  802ecc:	d9400015 	stw	r5,0(sp)
  802ed0:	08056100 	call	805610 <__clzsi2>
  802ed4:	10fffec4 	addi	r3,r2,-5
  802ed8:	10801d84 	addi	r2,r2,118
  802edc:	90e4983a 	sll	r18,r18,r3
  802ee0:	00a1c83a 	sub	r16,zero,r2
  802ee4:	0023883a 	mov	r17,zero
  802ee8:	002f883a 	mov	r23,zero
  802eec:	d9400017 	ldw	r5,0(sp)
  802ef0:	003f9a06 	br	802d5c <__alt_data_end+0xff802d5c>
  802ef4:	04400304 	movi	r17,12
  802ef8:	05c000c4 	movi	r23,3
  802efc:	003f9706 	br	802d5c <__alt_data_end+0xff802d5c>
  802f00:	9809883a 	mov	r4,r19
  802f04:	d9800015 	stw	r6,0(sp)
  802f08:	08056100 	call	805610 <__clzsi2>
  802f0c:	10fffec4 	addi	r3,r2,-5
  802f10:	10801d84 	addi	r2,r2,118
  802f14:	98e6983a 	sll	r19,r19,r3
  802f18:	0085c83a 	sub	r2,zero,r2
  802f1c:	0007883a 	mov	r3,zero
  802f20:	d9800017 	ldw	r6,0(sp)
  802f24:	003f9b06 	br	802d94 <__alt_data_end+0xff802d94>
  802f28:	01002034 	movhi	r4,128
  802f2c:	0029883a 	mov	r20,zero
  802f30:	213fffc4 	addi	r4,r4,-1
  802f34:	00ffffc4 	movi	r3,-1
  802f38:	003fc006 	br	802e3c <__alt_data_end+0xff802e3c>
  802f3c:	9027883a 	mov	r19,r18
  802f40:	b807883a 	mov	r3,r23
  802f44:	003fb406 	br	802e18 <__alt_data_end+0xff802e18>
  802f48:	9027883a 	mov	r19,r18
  802f4c:	e02b883a 	mov	r21,fp
  802f50:	b807883a 	mov	r3,r23
  802f54:	003fb006 	br	802e18 <__alt_data_end+0xff802e18>
  802f58:	9004d43a 	srli	r2,r18,16
  802f5c:	9810d43a 	srli	r8,r19,16
  802f60:	94bfffcc 	andi	r18,r18,65535
  802f64:	993fffcc 	andi	r4,r19,65535
  802f68:	910d383a 	mul	r6,r18,r4
  802f6c:	20a7383a 	mul	r19,r4,r2
  802f70:	9225383a 	mul	r18,r18,r8
  802f74:	3006d43a 	srli	r3,r6,16
  802f78:	1211383a 	mul	r8,r2,r8
  802f7c:	94e5883a 	add	r18,r18,r19
  802f80:	1c87883a 	add	r3,r3,r18
  802f84:	1cc0022e 	bgeu	r3,r19,802f90 <__mulsf3+0x2a0>
  802f88:	00800074 	movhi	r2,1
  802f8c:	4091883a 	add	r8,r8,r2
  802f90:	1804943a 	slli	r2,r3,16
  802f94:	31bfffcc 	andi	r6,r6,65535
  802f98:	1806d43a 	srli	r3,r3,16
  802f9c:	1185883a 	add	r2,r2,r6
  802fa0:	102691ba 	slli	r19,r2,6
  802fa4:	1a07883a 	add	r3,r3,r8
  802fa8:	1004d6ba 	srli	r2,r2,26
  802fac:	180891ba 	slli	r4,r3,6
  802fb0:	9826c03a 	cmpne	r19,r19,zero
  802fb4:	9884b03a 	or	r2,r19,r2
  802fb8:	1126b03a 	or	r19,r2,r4
  802fbc:	9882002c 	andhi	r2,r19,2048
  802fc0:	10000426 	beq	r2,zero,802fd4 <__mulsf3+0x2e4>
  802fc4:	9804d07a 	srli	r2,r19,1
  802fc8:	9900004c 	andi	r4,r19,1
  802fcc:	3821883a 	mov	r16,r7
  802fd0:	1126b03a 	or	r19,r2,r4
  802fd4:	80c01fc4 	addi	r3,r16,127
  802fd8:	00c0210e 	bge	zero,r3,803060 <__mulsf3+0x370>
  802fdc:	988001cc 	andi	r2,r19,7
  802fe0:	10000426 	beq	r2,zero,802ff4 <__mulsf3+0x304>
  802fe4:	988003cc 	andi	r2,r19,15
  802fe8:	01000104 	movi	r4,4
  802fec:	11000126 	beq	r2,r4,802ff4 <__mulsf3+0x304>
  802ff0:	9927883a 	add	r19,r19,r4
  802ff4:	9882002c 	andhi	r2,r19,2048
  802ff8:	10000426 	beq	r2,zero,80300c <__mulsf3+0x31c>
  802ffc:	00be0034 	movhi	r2,63488
  803000:	10bfffc4 	addi	r2,r2,-1
  803004:	80c02004 	addi	r3,r16,128
  803008:	98a6703a 	and	r19,r19,r2
  80300c:	00803f84 	movi	r2,254
  803010:	10ffa916 	blt	r2,r3,802eb8 <__alt_data_end+0xff802eb8>
  803014:	980891ba 	slli	r4,r19,6
  803018:	a829883a 	mov	r20,r21
  80301c:	2008d27a 	srli	r4,r4,9
  803020:	003f8606 	br	802e3c <__alt_data_end+0xff802e3c>
  803024:	9080102c 	andhi	r2,r18,64
  803028:	10000826 	beq	r2,zero,80304c <__mulsf3+0x35c>
  80302c:	9880102c 	andhi	r2,r19,64
  803030:	1000061e 	bne	r2,zero,80304c <__mulsf3+0x35c>
  803034:	00802034 	movhi	r2,128
  803038:	99001034 	orhi	r4,r19,64
  80303c:	10bfffc4 	addi	r2,r2,-1
  803040:	b029883a 	mov	r20,r22
  803044:	2088703a 	and	r4,r4,r2
  803048:	003fba06 	br	802f34 <__alt_data_end+0xff802f34>
  80304c:	00802034 	movhi	r2,128
  803050:	91001034 	orhi	r4,r18,64
  803054:	10bfffc4 	addi	r2,r2,-1
  803058:	2088703a 	and	r4,r4,r2
  80305c:	003fb506 	br	802f34 <__alt_data_end+0xff802f34>
  803060:	00800044 	movi	r2,1
  803064:	10c7c83a 	sub	r3,r2,r3
  803068:	008006c4 	movi	r2,27
  80306c:	10ff7016 	blt	r2,r3,802e30 <__alt_data_end+0xff802e30>
  803070:	00800804 	movi	r2,32
  803074:	10c5c83a 	sub	r2,r2,r3
  803078:	9884983a 	sll	r2,r19,r2
  80307c:	98c6d83a 	srl	r3,r19,r3
  803080:	1004c03a 	cmpne	r2,r2,zero
  803084:	1884b03a 	or	r2,r3,r2
  803088:	10c001cc 	andi	r3,r2,7
  80308c:	18000426 	beq	r3,zero,8030a0 <__mulsf3+0x3b0>
  803090:	10c003cc 	andi	r3,r2,15
  803094:	01000104 	movi	r4,4
  803098:	19000126 	beq	r3,r4,8030a0 <__mulsf3+0x3b0>
  80309c:	1105883a 	add	r2,r2,r4
  8030a0:	10c1002c 	andhi	r3,r2,1024
  8030a4:	18000626 	beq	r3,zero,8030c0 <__mulsf3+0x3d0>
  8030a8:	a829883a 	mov	r20,r21
  8030ac:	00c00044 	movi	r3,1
  8030b0:	0009883a 	mov	r4,zero
  8030b4:	003f6106 	br	802e3c <__alt_data_end+0xff802e3c>
  8030b8:	3821883a 	mov	r16,r7
  8030bc:	003fc506 	br	802fd4 <__alt_data_end+0xff802fd4>
  8030c0:	100491ba 	slli	r2,r2,6
  8030c4:	a829883a 	mov	r20,r21
  8030c8:	0007883a 	mov	r3,zero
  8030cc:	1008d27a 	srli	r4,r2,9
  8030d0:	003f5a06 	br	802e3c <__alt_data_end+0xff802e3c>
  8030d4:	00802034 	movhi	r2,128
  8030d8:	99001034 	orhi	r4,r19,64
  8030dc:	10bfffc4 	addi	r2,r2,-1
  8030e0:	a829883a 	mov	r20,r21
  8030e4:	2088703a 	and	r4,r4,r2
  8030e8:	003f9206 	br	802f34 <__alt_data_end+0xff802f34>

008030ec <__subsf3>:
  8030ec:	defffc04 	addi	sp,sp,-16
  8030f0:	280cd5fa 	srli	r6,r5,23
  8030f4:	dc000015 	stw	r16,0(sp)
  8030f8:	01c02034 	movhi	r7,128
  8030fc:	2020d5fa 	srli	r16,r4,23
  803100:	39ffffc4 	addi	r7,r7,-1
  803104:	3906703a 	and	r3,r7,r4
  803108:	dc400115 	stw	r17,4(sp)
  80310c:	394e703a 	and	r7,r7,r5
  803110:	2022d7fa 	srli	r17,r4,31
  803114:	dfc00315 	stw	ra,12(sp)
  803118:	dc800215 	stw	r18,8(sp)
  80311c:	31803fcc 	andi	r6,r6,255
  803120:	01003fc4 	movi	r4,255
  803124:	84003fcc 	andi	r16,r16,255
  803128:	180690fa 	slli	r3,r3,3
  80312c:	2804d7fa 	srli	r2,r5,31
  803130:	380e90fa 	slli	r7,r7,3
  803134:	31006d26 	beq	r6,r4,8032ec <__subsf3+0x200>
  803138:	1080005c 	xori	r2,r2,1
  80313c:	8189c83a 	sub	r4,r16,r6
  803140:	14404f26 	beq	r2,r17,803280 <__subsf3+0x194>
  803144:	0100770e 	bge	zero,r4,803324 <__subsf3+0x238>
  803148:	30001e1e 	bne	r6,zero,8031c4 <__subsf3+0xd8>
  80314c:	38006a1e 	bne	r7,zero,8032f8 <__subsf3+0x20c>
  803150:	188001cc 	andi	r2,r3,7
  803154:	10000426 	beq	r2,zero,803168 <__subsf3+0x7c>
  803158:	188003cc 	andi	r2,r3,15
  80315c:	01000104 	movi	r4,4
  803160:	11000126 	beq	r2,r4,803168 <__subsf3+0x7c>
  803164:	1907883a 	add	r3,r3,r4
  803168:	1881002c 	andhi	r2,r3,1024
  80316c:	10003926 	beq	r2,zero,803254 <__subsf3+0x168>
  803170:	84000044 	addi	r16,r16,1
  803174:	00803fc4 	movi	r2,255
  803178:	80807526 	beq	r16,r2,803350 <__subsf3+0x264>
  80317c:	180691ba 	slli	r3,r3,6
  803180:	8880004c 	andi	r2,r17,1
  803184:	180ad27a 	srli	r5,r3,9
  803188:	84003fcc 	andi	r16,r16,255
  80318c:	800695fa 	slli	r3,r16,23
  803190:	10803fcc 	andi	r2,r2,255
  803194:	01002034 	movhi	r4,128
  803198:	213fffc4 	addi	r4,r4,-1
  80319c:	100497fa 	slli	r2,r2,31
  8031a0:	2920703a 	and	r16,r5,r4
  8031a4:	80e0b03a 	or	r16,r16,r3
  8031a8:	8084b03a 	or	r2,r16,r2
  8031ac:	dfc00317 	ldw	ra,12(sp)
  8031b0:	dc800217 	ldw	r18,8(sp)
  8031b4:	dc400117 	ldw	r17,4(sp)
  8031b8:	dc000017 	ldw	r16,0(sp)
  8031bc:	dec00404 	addi	sp,sp,16
  8031c0:	f800283a 	ret
  8031c4:	00803fc4 	movi	r2,255
  8031c8:	80bfe126 	beq	r16,r2,803150 <__alt_data_end+0xff803150>
  8031cc:	39c10034 	orhi	r7,r7,1024
  8031d0:	008006c4 	movi	r2,27
  8031d4:	11007416 	blt	r2,r4,8033a8 <__subsf3+0x2bc>
  8031d8:	00800804 	movi	r2,32
  8031dc:	1105c83a 	sub	r2,r2,r4
  8031e0:	3884983a 	sll	r2,r7,r2
  8031e4:	390ed83a 	srl	r7,r7,r4
  8031e8:	1008c03a 	cmpne	r4,r2,zero
  8031ec:	390eb03a 	or	r7,r7,r4
  8031f0:	19c7c83a 	sub	r3,r3,r7
  8031f4:	1881002c 	andhi	r2,r3,1024
  8031f8:	10001426 	beq	r2,zero,80324c <__subsf3+0x160>
  8031fc:	04810034 	movhi	r18,1024
  803200:	94bfffc4 	addi	r18,r18,-1
  803204:	1ca4703a 	and	r18,r3,r18
  803208:	9009883a 	mov	r4,r18
  80320c:	08056100 	call	805610 <__clzsi2>
  803210:	10bffec4 	addi	r2,r2,-5
  803214:	90a4983a 	sll	r18,r18,r2
  803218:	14005116 	blt	r2,r16,803360 <__subsf3+0x274>
  80321c:	1405c83a 	sub	r2,r2,r16
  803220:	10c00044 	addi	r3,r2,1
  803224:	00800804 	movi	r2,32
  803228:	10c5c83a 	sub	r2,r2,r3
  80322c:	9084983a 	sll	r2,r18,r2
  803230:	90e4d83a 	srl	r18,r18,r3
  803234:	0021883a 	mov	r16,zero
  803238:	1006c03a 	cmpne	r3,r2,zero
  80323c:	90c6b03a 	or	r3,r18,r3
  803240:	003fc306 	br	803150 <__alt_data_end+0xff803150>
  803244:	2000e026 	beq	r4,zero,8035c8 <__subsf3+0x4dc>
  803248:	2007883a 	mov	r3,r4
  80324c:	188001cc 	andi	r2,r3,7
  803250:	103fc11e 	bne	r2,zero,803158 <__alt_data_end+0xff803158>
  803254:	180ad0fa 	srli	r5,r3,3
  803258:	00c03fc4 	movi	r3,255
  80325c:	8880004c 	andi	r2,r17,1
  803260:	80c0031e 	bne	r16,r3,803270 <__subsf3+0x184>
  803264:	28006d26 	beq	r5,zero,80341c <__subsf3+0x330>
  803268:	29401034 	orhi	r5,r5,64
  80326c:	043fffc4 	movi	r16,-1
  803270:	00c02034 	movhi	r3,128
  803274:	18ffffc4 	addi	r3,r3,-1
  803278:	28ca703a 	and	r5,r5,r3
  80327c:	003fc206 	br	803188 <__alt_data_end+0xff803188>
  803280:	01003c0e 	bge	zero,r4,803374 <__subsf3+0x288>
  803284:	30002126 	beq	r6,zero,80330c <__subsf3+0x220>
  803288:	01403fc4 	movi	r5,255
  80328c:	817fb026 	beq	r16,r5,803150 <__alt_data_end+0xff803150>
  803290:	39c10034 	orhi	r7,r7,1024
  803294:	014006c4 	movi	r5,27
  803298:	29007416 	blt	r5,r4,80346c <__subsf3+0x380>
  80329c:	01400804 	movi	r5,32
  8032a0:	290bc83a 	sub	r5,r5,r4
  8032a4:	394a983a 	sll	r5,r7,r5
  8032a8:	390ed83a 	srl	r7,r7,r4
  8032ac:	2808c03a 	cmpne	r4,r5,zero
  8032b0:	390eb03a 	or	r7,r7,r4
  8032b4:	19c7883a 	add	r3,r3,r7
  8032b8:	1901002c 	andhi	r4,r3,1024
  8032bc:	20003826 	beq	r4,zero,8033a0 <__subsf3+0x2b4>
  8032c0:	84000044 	addi	r16,r16,1
  8032c4:	01003fc4 	movi	r4,255
  8032c8:	81005426 	beq	r16,r4,80341c <__subsf3+0x330>
  8032cc:	1023883a 	mov	r17,r2
  8032d0:	00bf0034 	movhi	r2,64512
  8032d4:	10bfffc4 	addi	r2,r2,-1
  8032d8:	1900004c 	andi	r4,r3,1
  8032dc:	1886703a 	and	r3,r3,r2
  8032e0:	1806d07a 	srli	r3,r3,1
  8032e4:	1906b03a 	or	r3,r3,r4
  8032e8:	003f9906 	br	803150 <__alt_data_end+0xff803150>
  8032ec:	383f9226 	beq	r7,zero,803138 <__alt_data_end+0xff803138>
  8032f0:	10803fcc 	andi	r2,r2,255
  8032f4:	003f9106 	br	80313c <__alt_data_end+0xff80313c>
  8032f8:	213fffc4 	addi	r4,r4,-1
  8032fc:	203fbc26 	beq	r4,zero,8031f0 <__alt_data_end+0xff8031f0>
  803300:	00803fc4 	movi	r2,255
  803304:	80bfb21e 	bne	r16,r2,8031d0 <__alt_data_end+0xff8031d0>
  803308:	003f9106 	br	803150 <__alt_data_end+0xff803150>
  80330c:	383f9026 	beq	r7,zero,803150 <__alt_data_end+0xff803150>
  803310:	213fffc4 	addi	r4,r4,-1
  803314:	203fe726 	beq	r4,zero,8032b4 <__alt_data_end+0xff8032b4>
  803318:	01403fc4 	movi	r5,255
  80331c:	817fdd1e 	bne	r16,r5,803294 <__alt_data_end+0xff803294>
  803320:	003f8b06 	br	803150 <__alt_data_end+0xff803150>
  803324:	2000221e 	bne	r4,zero,8033b0 <__subsf3+0x2c4>
  803328:	81000044 	addi	r4,r16,1
  80332c:	21003fcc 	andi	r4,r4,255
  803330:	01400044 	movi	r5,1
  803334:	2900470e 	bge	r5,r4,803454 <__subsf3+0x368>
  803338:	19e5c83a 	sub	r18,r3,r7
  80333c:	9141002c 	andhi	r5,r18,1024
  803340:	28002d26 	beq	r5,zero,8033f8 <__subsf3+0x30c>
  803344:	38e5c83a 	sub	r18,r7,r3
  803348:	1023883a 	mov	r17,r2
  80334c:	003fae06 	br	803208 <__alt_data_end+0xff803208>
  803350:	8880004c 	andi	r2,r17,1
  803354:	043fffc4 	movi	r16,-1
  803358:	000b883a 	mov	r5,zero
  80335c:	003f8a06 	br	803188 <__alt_data_end+0xff803188>
  803360:	00ff0034 	movhi	r3,64512
  803364:	18ffffc4 	addi	r3,r3,-1
  803368:	80a1c83a 	sub	r16,r16,r2
  80336c:	90c6703a 	and	r3,r18,r3
  803370:	003f7706 	br	803150 <__alt_data_end+0xff803150>
  803374:	2000431e 	bne	r4,zero,803484 <__subsf3+0x398>
  803378:	81000044 	addi	r4,r16,1
  80337c:	21803fcc 	andi	r6,r4,255
  803380:	01400044 	movi	r5,1
  803384:	2980280e 	bge	r5,r6,803428 <__subsf3+0x33c>
  803388:	01403fc4 	movi	r5,255
  80338c:	21402326 	beq	r4,r5,80341c <__subsf3+0x330>
  803390:	19c7883a 	add	r3,r3,r7
  803394:	1806d07a 	srli	r3,r3,1
  803398:	2021883a 	mov	r16,r4
  80339c:	003f6c06 	br	803150 <__alt_data_end+0xff803150>
  8033a0:	1023883a 	mov	r17,r2
  8033a4:	003fa906 	br	80324c <__alt_data_end+0xff80324c>
  8033a8:	01c00044 	movi	r7,1
  8033ac:	003f9006 	br	8031f0 <__alt_data_end+0xff8031f0>
  8033b0:	8000151e 	bne	r16,zero,803408 <__subsf3+0x31c>
  8033b4:	18002f26 	beq	r3,zero,803474 <__subsf3+0x388>
  8033b8:	0108303a 	nor	r4,zero,r4
  8033bc:	20000a26 	beq	r4,zero,8033e8 <__subsf3+0x2fc>
  8033c0:	01403fc4 	movi	r5,255
  8033c4:	31402b26 	beq	r6,r5,803474 <__subsf3+0x388>
  8033c8:	014006c4 	movi	r5,27
  8033cc:	29006e16 	blt	r5,r4,803588 <__subsf3+0x49c>
  8033d0:	01400804 	movi	r5,32
  8033d4:	290bc83a 	sub	r5,r5,r4
  8033d8:	194a983a 	sll	r5,r3,r5
  8033dc:	1908d83a 	srl	r4,r3,r4
  8033e0:	2806c03a 	cmpne	r3,r5,zero
  8033e4:	20c6b03a 	or	r3,r4,r3
  8033e8:	38c7c83a 	sub	r3,r7,r3
  8033ec:	3021883a 	mov	r16,r6
  8033f0:	1023883a 	mov	r17,r2
  8033f4:	003f7f06 	br	8031f4 <__alt_data_end+0xff8031f4>
  8033f8:	903f831e 	bne	r18,zero,803208 <__alt_data_end+0xff803208>
  8033fc:	0005883a 	mov	r2,zero
  803400:	0021883a 	mov	r16,zero
  803404:	003f9a06 	br	803270 <__alt_data_end+0xff803270>
  803408:	01403fc4 	movi	r5,255
  80340c:	31401926 	beq	r6,r5,803474 <__subsf3+0x388>
  803410:	0109c83a 	sub	r4,zero,r4
  803414:	18c10034 	orhi	r3,r3,1024
  803418:	003feb06 	br	8033c8 <__alt_data_end+0xff8033c8>
  80341c:	043fffc4 	movi	r16,-1
  803420:	000b883a 	mov	r5,zero
  803424:	003f5806 	br	803188 <__alt_data_end+0xff803188>
  803428:	8000481e 	bne	r16,zero,80354c <__subsf3+0x460>
  80342c:	18006226 	beq	r3,zero,8035b8 <__subsf3+0x4cc>
  803430:	383f4726 	beq	r7,zero,803150 <__alt_data_end+0xff803150>
  803434:	19c7883a 	add	r3,r3,r7
  803438:	1881002c 	andhi	r2,r3,1024
  80343c:	103f8326 	beq	r2,zero,80324c <__alt_data_end+0xff80324c>
  803440:	00bf0034 	movhi	r2,64512
  803444:	10bfffc4 	addi	r2,r2,-1
  803448:	2821883a 	mov	r16,r5
  80344c:	1886703a 	and	r3,r3,r2
  803450:	003f3f06 	br	803150 <__alt_data_end+0xff803150>
  803454:	80001c1e 	bne	r16,zero,8034c8 <__subsf3+0x3dc>
  803458:	1800261e 	bne	r3,zero,8034f4 <__subsf3+0x408>
  80345c:	38004c26 	beq	r7,zero,803590 <__subsf3+0x4a4>
  803460:	3807883a 	mov	r3,r7
  803464:	1023883a 	mov	r17,r2
  803468:	003f3906 	br	803150 <__alt_data_end+0xff803150>
  80346c:	01c00044 	movi	r7,1
  803470:	003f9006 	br	8032b4 <__alt_data_end+0xff8032b4>
  803474:	3807883a 	mov	r3,r7
  803478:	3021883a 	mov	r16,r6
  80347c:	1023883a 	mov	r17,r2
  803480:	003f3306 	br	803150 <__alt_data_end+0xff803150>
  803484:	8000161e 	bne	r16,zero,8034e0 <__subsf3+0x3f4>
  803488:	18002d26 	beq	r3,zero,803540 <__subsf3+0x454>
  80348c:	0108303a 	nor	r4,zero,r4
  803490:	20000a26 	beq	r4,zero,8034bc <__subsf3+0x3d0>
  803494:	01403fc4 	movi	r5,255
  803498:	31402926 	beq	r6,r5,803540 <__subsf3+0x454>
  80349c:	014006c4 	movi	r5,27
  8034a0:	29004716 	blt	r5,r4,8035c0 <__subsf3+0x4d4>
  8034a4:	01400804 	movi	r5,32
  8034a8:	290bc83a 	sub	r5,r5,r4
  8034ac:	194a983a 	sll	r5,r3,r5
  8034b0:	1908d83a 	srl	r4,r3,r4
  8034b4:	2806c03a 	cmpne	r3,r5,zero
  8034b8:	20c6b03a 	or	r3,r4,r3
  8034bc:	19c7883a 	add	r3,r3,r7
  8034c0:	3021883a 	mov	r16,r6
  8034c4:	003f7c06 	br	8032b8 <__alt_data_end+0xff8032b8>
  8034c8:	1800111e 	bne	r3,zero,803510 <__subsf3+0x424>
  8034cc:	38003326 	beq	r7,zero,80359c <__subsf3+0x4b0>
  8034d0:	3807883a 	mov	r3,r7
  8034d4:	1023883a 	mov	r17,r2
  8034d8:	04003fc4 	movi	r16,255
  8034dc:	003f1c06 	br	803150 <__alt_data_end+0xff803150>
  8034e0:	01403fc4 	movi	r5,255
  8034e4:	31401626 	beq	r6,r5,803540 <__subsf3+0x454>
  8034e8:	0109c83a 	sub	r4,zero,r4
  8034ec:	18c10034 	orhi	r3,r3,1024
  8034f0:	003fea06 	br	80349c <__alt_data_end+0xff80349c>
  8034f4:	383f1626 	beq	r7,zero,803150 <__alt_data_end+0xff803150>
  8034f8:	19c9c83a 	sub	r4,r3,r7
  8034fc:	2141002c 	andhi	r5,r4,1024
  803500:	283f5026 	beq	r5,zero,803244 <__alt_data_end+0xff803244>
  803504:	38c7c83a 	sub	r3,r7,r3
  803508:	1023883a 	mov	r17,r2
  80350c:	003f1006 	br	803150 <__alt_data_end+0xff803150>
  803510:	38001b26 	beq	r7,zero,803580 <__subsf3+0x494>
  803514:	1806d0fa 	srli	r3,r3,3
  803518:	1900102c 	andhi	r4,r3,64
  80351c:	20000526 	beq	r4,zero,803534 <__subsf3+0x448>
  803520:	380ed0fa 	srli	r7,r7,3
  803524:	3900102c 	andhi	r4,r7,64
  803528:	2000021e 	bne	r4,zero,803534 <__subsf3+0x448>
  80352c:	3807883a 	mov	r3,r7
  803530:	1023883a 	mov	r17,r2
  803534:	180690fa 	slli	r3,r3,3
  803538:	04003fc4 	movi	r16,255
  80353c:	003f0406 	br	803150 <__alt_data_end+0xff803150>
  803540:	3807883a 	mov	r3,r7
  803544:	3021883a 	mov	r16,r6
  803548:	003f0106 	br	803150 <__alt_data_end+0xff803150>
  80354c:	18001726 	beq	r3,zero,8035ac <__subsf3+0x4c0>
  803550:	38000b26 	beq	r7,zero,803580 <__subsf3+0x494>
  803554:	1806d0fa 	srli	r3,r3,3
  803558:	1900102c 	andhi	r4,r3,64
  80355c:	20000426 	beq	r4,zero,803570 <__subsf3+0x484>
  803560:	380ed0fa 	srli	r7,r7,3
  803564:	3900102c 	andhi	r4,r7,64
  803568:	2000011e 	bne	r4,zero,803570 <__subsf3+0x484>
  80356c:	3807883a 	mov	r3,r7
  803570:	180690fa 	slli	r3,r3,3
  803574:	1023883a 	mov	r17,r2
  803578:	04003fc4 	movi	r16,255
  80357c:	003ef406 	br	803150 <__alt_data_end+0xff803150>
  803580:	04003fc4 	movi	r16,255
  803584:	003ef206 	br	803150 <__alt_data_end+0xff803150>
  803588:	00c00044 	movi	r3,1
  80358c:	003f9606 	br	8033e8 <__alt_data_end+0xff8033e8>
  803590:	000b883a 	mov	r5,zero
  803594:	0005883a 	mov	r2,zero
  803598:	003f3506 	br	803270 <__alt_data_end+0xff803270>
  80359c:	01402034 	movhi	r5,128
  8035a0:	297fffc4 	addi	r5,r5,-1
  8035a4:	0005883a 	mov	r2,zero
  8035a8:	003f2f06 	br	803268 <__alt_data_end+0xff803268>
  8035ac:	3807883a 	mov	r3,r7
  8035b0:	04003fc4 	movi	r16,255
  8035b4:	003ee606 	br	803150 <__alt_data_end+0xff803150>
  8035b8:	3807883a 	mov	r3,r7
  8035bc:	003ee406 	br	803150 <__alt_data_end+0xff803150>
  8035c0:	00c00044 	movi	r3,1
  8035c4:	003fbd06 	br	8034bc <__alt_data_end+0xff8034bc>
  8035c8:	0005883a 	mov	r2,zero
  8035cc:	003f2806 	br	803270 <__alt_data_end+0xff803270>

008035d0 <__fixsfsi>:
  8035d0:	200ad5fa 	srli	r5,r4,23
  8035d4:	00c02034 	movhi	r3,128
  8035d8:	18ffffc4 	addi	r3,r3,-1
  8035dc:	29403fcc 	andi	r5,r5,255
  8035e0:	00801f84 	movi	r2,126
  8035e4:	1906703a 	and	r3,r3,r4
  8035e8:	2008d7fa 	srli	r4,r4,31
  8035ec:	11400e0e 	bge	r2,r5,803628 <__fixsfsi+0x58>
  8035f0:	00802744 	movi	r2,157
  8035f4:	11400816 	blt	r2,r5,803618 <__fixsfsi+0x48>
  8035f8:	00802544 	movi	r2,149
  8035fc:	18c02034 	orhi	r3,r3,128
  803600:	11400b0e 	bge	r2,r5,803630 <__fixsfsi+0x60>
  803604:	28bfda84 	addi	r2,r5,-150
  803608:	1884983a 	sll	r2,r3,r2
  80360c:	20000726 	beq	r4,zero,80362c <__fixsfsi+0x5c>
  803610:	0085c83a 	sub	r2,zero,r2
  803614:	f800283a 	ret
  803618:	00a00034 	movhi	r2,32768
  80361c:	10bfffc4 	addi	r2,r2,-1
  803620:	2085883a 	add	r2,r4,r2
  803624:	f800283a 	ret
  803628:	0005883a 	mov	r2,zero
  80362c:	f800283a 	ret
  803630:	00802584 	movi	r2,150
  803634:	1145c83a 	sub	r2,r2,r5
  803638:	1884d83a 	srl	r2,r3,r2
  80363c:	003ff306 	br	80360c <__alt_data_end+0xff80360c>

00803640 <__floatunsisf>:
  803640:	defffe04 	addi	sp,sp,-8
  803644:	dfc00115 	stw	ra,4(sp)
  803648:	dc000015 	stw	r16,0(sp)
  80364c:	20002c26 	beq	r4,zero,803700 <__floatunsisf+0xc0>
  803650:	2021883a 	mov	r16,r4
  803654:	08056100 	call	805610 <__clzsi2>
  803658:	00c02784 	movi	r3,158
  80365c:	1887c83a 	sub	r3,r3,r2
  803660:	01002584 	movi	r4,150
  803664:	20c00f16 	blt	r4,r3,8036a4 <__floatunsisf+0x64>
  803668:	20c9c83a 	sub	r4,r4,r3
  80366c:	8108983a 	sll	r4,r16,r4
  803670:	00802034 	movhi	r2,128
  803674:	10bfffc4 	addi	r2,r2,-1
  803678:	2088703a 	and	r4,r4,r2
  80367c:	18803fcc 	andi	r2,r3,255
  803680:	100695fa 	slli	r3,r2,23
  803684:	00802034 	movhi	r2,128
  803688:	10bfffc4 	addi	r2,r2,-1
  80368c:	2084703a 	and	r2,r4,r2
  803690:	10c4b03a 	or	r2,r2,r3
  803694:	dfc00117 	ldw	ra,4(sp)
  803698:	dc000017 	ldw	r16,0(sp)
  80369c:	dec00204 	addi	sp,sp,8
  8036a0:	f800283a 	ret
  8036a4:	01002644 	movi	r4,153
  8036a8:	20c01816 	blt	r4,r3,80370c <__floatunsisf+0xcc>
  8036ac:	20c9c83a 	sub	r4,r4,r3
  8036b0:	8108983a 	sll	r4,r16,r4
  8036b4:	017f0034 	movhi	r5,64512
  8036b8:	297fffc4 	addi	r5,r5,-1
  8036bc:	218001cc 	andi	r6,r4,7
  8036c0:	214a703a 	and	r5,r4,r5
  8036c4:	30000426 	beq	r6,zero,8036d8 <__floatunsisf+0x98>
  8036c8:	210003cc 	andi	r4,r4,15
  8036cc:	01800104 	movi	r6,4
  8036d0:	21800126 	beq	r4,r6,8036d8 <__floatunsisf+0x98>
  8036d4:	298b883a 	add	r5,r5,r6
  8036d8:	2901002c 	andhi	r4,r5,1024
  8036dc:	20000526 	beq	r4,zero,8036f4 <__floatunsisf+0xb4>
  8036e0:	00c027c4 	movi	r3,159
  8036e4:	1887c83a 	sub	r3,r3,r2
  8036e8:	00bf0034 	movhi	r2,64512
  8036ec:	10bfffc4 	addi	r2,r2,-1
  8036f0:	288a703a 	and	r5,r5,r2
  8036f4:	280891ba 	slli	r4,r5,6
  8036f8:	2008d27a 	srli	r4,r4,9
  8036fc:	003fdf06 	br	80367c <__alt_data_end+0xff80367c>
  803700:	0007883a 	mov	r3,zero
  803704:	0009883a 	mov	r4,zero
  803708:	003fdc06 	br	80367c <__alt_data_end+0xff80367c>
  80370c:	01402e44 	movi	r5,185
  803710:	28cbc83a 	sub	r5,r5,r3
  803714:	01000144 	movi	r4,5
  803718:	2089c83a 	sub	r4,r4,r2
  80371c:	814a983a 	sll	r5,r16,r5
  803720:	8108d83a 	srl	r4,r16,r4
  803724:	2820c03a 	cmpne	r16,r5,zero
  803728:	2408b03a 	or	r4,r4,r16
  80372c:	003fe106 	br	8036b4 <__alt_data_end+0xff8036b4>

00803730 <__adddf3>:
  803730:	02c00434 	movhi	r11,16
  803734:	5affffc4 	addi	r11,r11,-1
  803738:	2806d7fa 	srli	r3,r5,31
  80373c:	2ad4703a 	and	r10,r5,r11
  803740:	3ad2703a 	and	r9,r7,r11
  803744:	3804d53a 	srli	r2,r7,20
  803748:	3018d77a 	srli	r12,r6,29
  80374c:	280ad53a 	srli	r5,r5,20
  803750:	501490fa 	slli	r10,r10,3
  803754:	2010d77a 	srli	r8,r4,29
  803758:	481290fa 	slli	r9,r9,3
  80375c:	380ed7fa 	srli	r7,r7,31
  803760:	defffb04 	addi	sp,sp,-20
  803764:	dc800215 	stw	r18,8(sp)
  803768:	dc400115 	stw	r17,4(sp)
  80376c:	dc000015 	stw	r16,0(sp)
  803770:	dfc00415 	stw	ra,16(sp)
  803774:	dcc00315 	stw	r19,12(sp)
  803778:	1c803fcc 	andi	r18,r3,255
  80377c:	2c01ffcc 	andi	r16,r5,2047
  803780:	5210b03a 	or	r8,r10,r8
  803784:	202290fa 	slli	r17,r4,3
  803788:	1081ffcc 	andi	r2,r2,2047
  80378c:	4b12b03a 	or	r9,r9,r12
  803790:	300c90fa 	slli	r6,r6,3
  803794:	91c07526 	beq	r18,r7,80396c <__adddf3+0x23c>
  803798:	8087c83a 	sub	r3,r16,r2
  80379c:	00c0ab0e 	bge	zero,r3,803a4c <__adddf3+0x31c>
  8037a0:	10002a1e 	bne	r2,zero,80384c <__adddf3+0x11c>
  8037a4:	4984b03a 	or	r2,r9,r6
  8037a8:	1000961e 	bne	r2,zero,803a04 <__adddf3+0x2d4>
  8037ac:	888001cc 	andi	r2,r17,7
  8037b0:	10000726 	beq	r2,zero,8037d0 <__adddf3+0xa0>
  8037b4:	888003cc 	andi	r2,r17,15
  8037b8:	00c00104 	movi	r3,4
  8037bc:	10c00426 	beq	r2,r3,8037d0 <__adddf3+0xa0>
  8037c0:	88c7883a 	add	r3,r17,r3
  8037c4:	1c63803a 	cmpltu	r17,r3,r17
  8037c8:	4451883a 	add	r8,r8,r17
  8037cc:	1823883a 	mov	r17,r3
  8037d0:	4080202c 	andhi	r2,r8,128
  8037d4:	10005926 	beq	r2,zero,80393c <__adddf3+0x20c>
  8037d8:	84000044 	addi	r16,r16,1
  8037dc:	0081ffc4 	movi	r2,2047
  8037e0:	8080ba26 	beq	r16,r2,803acc <__adddf3+0x39c>
  8037e4:	00bfe034 	movhi	r2,65408
  8037e8:	10bfffc4 	addi	r2,r2,-1
  8037ec:	4090703a 	and	r8,r8,r2
  8037f0:	4004977a 	slli	r2,r8,29
  8037f4:	4010927a 	slli	r8,r8,9
  8037f8:	8822d0fa 	srli	r17,r17,3
  8037fc:	8401ffcc 	andi	r16,r16,2047
  803800:	4010d33a 	srli	r8,r8,12
  803804:	9007883a 	mov	r3,r18
  803808:	1444b03a 	or	r2,r2,r17
  80380c:	8401ffcc 	andi	r16,r16,2047
  803810:	8020953a 	slli	r16,r16,20
  803814:	18c03fcc 	andi	r3,r3,255
  803818:	01000434 	movhi	r4,16
  80381c:	213fffc4 	addi	r4,r4,-1
  803820:	180697fa 	slli	r3,r3,31
  803824:	4110703a 	and	r8,r8,r4
  803828:	4410b03a 	or	r8,r8,r16
  80382c:	40c6b03a 	or	r3,r8,r3
  803830:	dfc00417 	ldw	ra,16(sp)
  803834:	dcc00317 	ldw	r19,12(sp)
  803838:	dc800217 	ldw	r18,8(sp)
  80383c:	dc400117 	ldw	r17,4(sp)
  803840:	dc000017 	ldw	r16,0(sp)
  803844:	dec00504 	addi	sp,sp,20
  803848:	f800283a 	ret
  80384c:	0081ffc4 	movi	r2,2047
  803850:	80bfd626 	beq	r16,r2,8037ac <__alt_data_end+0xff8037ac>
  803854:	4a402034 	orhi	r9,r9,128
  803858:	00800e04 	movi	r2,56
  80385c:	10c09f16 	blt	r2,r3,803adc <__adddf3+0x3ac>
  803860:	008007c4 	movi	r2,31
  803864:	10c0c216 	blt	r2,r3,803b70 <__adddf3+0x440>
  803868:	00800804 	movi	r2,32
  80386c:	10c5c83a 	sub	r2,r2,r3
  803870:	488a983a 	sll	r5,r9,r2
  803874:	30c8d83a 	srl	r4,r6,r3
  803878:	3084983a 	sll	r2,r6,r2
  80387c:	48c6d83a 	srl	r3,r9,r3
  803880:	290cb03a 	or	r6,r5,r4
  803884:	1004c03a 	cmpne	r2,r2,zero
  803888:	308cb03a 	or	r6,r6,r2
  80388c:	898dc83a 	sub	r6,r17,r6
  803890:	89a3803a 	cmpltu	r17,r17,r6
  803894:	40d1c83a 	sub	r8,r8,r3
  803898:	4451c83a 	sub	r8,r8,r17
  80389c:	3023883a 	mov	r17,r6
  8038a0:	4080202c 	andhi	r2,r8,128
  8038a4:	10002326 	beq	r2,zero,803934 <__adddf3+0x204>
  8038a8:	04c02034 	movhi	r19,128
  8038ac:	9cffffc4 	addi	r19,r19,-1
  8038b0:	44e6703a 	and	r19,r8,r19
  8038b4:	98007626 	beq	r19,zero,803a90 <__adddf3+0x360>
  8038b8:	9809883a 	mov	r4,r19
  8038bc:	08056100 	call	805610 <__clzsi2>
  8038c0:	10fffe04 	addi	r3,r2,-8
  8038c4:	010007c4 	movi	r4,31
  8038c8:	20c07716 	blt	r4,r3,803aa8 <__adddf3+0x378>
  8038cc:	00800804 	movi	r2,32
  8038d0:	10c5c83a 	sub	r2,r2,r3
  8038d4:	8884d83a 	srl	r2,r17,r2
  8038d8:	98d0983a 	sll	r8,r19,r3
  8038dc:	88e2983a 	sll	r17,r17,r3
  8038e0:	1204b03a 	or	r2,r2,r8
  8038e4:	1c007416 	blt	r3,r16,803ab8 <__adddf3+0x388>
  8038e8:	1c21c83a 	sub	r16,r3,r16
  8038ec:	82000044 	addi	r8,r16,1
  8038f0:	00c007c4 	movi	r3,31
  8038f4:	1a009116 	blt	r3,r8,803b3c <__adddf3+0x40c>
  8038f8:	00c00804 	movi	r3,32
  8038fc:	1a07c83a 	sub	r3,r3,r8
  803900:	8a08d83a 	srl	r4,r17,r8
  803904:	88e2983a 	sll	r17,r17,r3
  803908:	10c6983a 	sll	r3,r2,r3
  80390c:	1210d83a 	srl	r8,r2,r8
  803910:	8804c03a 	cmpne	r2,r17,zero
  803914:	1906b03a 	or	r3,r3,r4
  803918:	18a2b03a 	or	r17,r3,r2
  80391c:	0021883a 	mov	r16,zero
  803920:	003fa206 	br	8037ac <__alt_data_end+0xff8037ac>
  803924:	1890b03a 	or	r8,r3,r2
  803928:	40017d26 	beq	r8,zero,803f20 <__adddf3+0x7f0>
  80392c:	1011883a 	mov	r8,r2
  803930:	1823883a 	mov	r17,r3
  803934:	888001cc 	andi	r2,r17,7
  803938:	103f9e1e 	bne	r2,zero,8037b4 <__alt_data_end+0xff8037b4>
  80393c:	4004977a 	slli	r2,r8,29
  803940:	8822d0fa 	srli	r17,r17,3
  803944:	4010d0fa 	srli	r8,r8,3
  803948:	9007883a 	mov	r3,r18
  80394c:	1444b03a 	or	r2,r2,r17
  803950:	0101ffc4 	movi	r4,2047
  803954:	81002426 	beq	r16,r4,8039e8 <__adddf3+0x2b8>
  803958:	8120703a 	and	r16,r16,r4
  80395c:	01000434 	movhi	r4,16
  803960:	213fffc4 	addi	r4,r4,-1
  803964:	4110703a 	and	r8,r8,r4
  803968:	003fa806 	br	80380c <__alt_data_end+0xff80380c>
  80396c:	8089c83a 	sub	r4,r16,r2
  803970:	01005e0e 	bge	zero,r4,803aec <__adddf3+0x3bc>
  803974:	10002b26 	beq	r2,zero,803a24 <__adddf3+0x2f4>
  803978:	0081ffc4 	movi	r2,2047
  80397c:	80bf8b26 	beq	r16,r2,8037ac <__alt_data_end+0xff8037ac>
  803980:	4a402034 	orhi	r9,r9,128
  803984:	00800e04 	movi	r2,56
  803988:	1100a40e 	bge	r2,r4,803c1c <__adddf3+0x4ec>
  80398c:	498cb03a 	or	r6,r9,r6
  803990:	300ac03a 	cmpne	r5,r6,zero
  803994:	0013883a 	mov	r9,zero
  803998:	2c4b883a 	add	r5,r5,r17
  80399c:	2c63803a 	cmpltu	r17,r5,r17
  8039a0:	4a11883a 	add	r8,r9,r8
  8039a4:	8a11883a 	add	r8,r17,r8
  8039a8:	2823883a 	mov	r17,r5
  8039ac:	4080202c 	andhi	r2,r8,128
  8039b0:	103fe026 	beq	r2,zero,803934 <__alt_data_end+0xff803934>
  8039b4:	84000044 	addi	r16,r16,1
  8039b8:	0081ffc4 	movi	r2,2047
  8039bc:	8080d226 	beq	r16,r2,803d08 <__adddf3+0x5d8>
  8039c0:	00bfe034 	movhi	r2,65408
  8039c4:	10bfffc4 	addi	r2,r2,-1
  8039c8:	4090703a 	and	r8,r8,r2
  8039cc:	880ad07a 	srli	r5,r17,1
  8039d0:	400897fa 	slli	r4,r8,31
  8039d4:	88c0004c 	andi	r3,r17,1
  8039d8:	28e2b03a 	or	r17,r5,r3
  8039dc:	4010d07a 	srli	r8,r8,1
  8039e0:	2462b03a 	or	r17,r4,r17
  8039e4:	003f7106 	br	8037ac <__alt_data_end+0xff8037ac>
  8039e8:	4088b03a 	or	r4,r8,r2
  8039ec:	20014526 	beq	r4,zero,803f04 <__adddf3+0x7d4>
  8039f0:	01000434 	movhi	r4,16
  8039f4:	42000234 	orhi	r8,r8,8
  8039f8:	213fffc4 	addi	r4,r4,-1
  8039fc:	4110703a 	and	r8,r8,r4
  803a00:	003f8206 	br	80380c <__alt_data_end+0xff80380c>
  803a04:	18ffffc4 	addi	r3,r3,-1
  803a08:	1800491e 	bne	r3,zero,803b30 <__adddf3+0x400>
  803a0c:	898bc83a 	sub	r5,r17,r6
  803a10:	8963803a 	cmpltu	r17,r17,r5
  803a14:	4251c83a 	sub	r8,r8,r9
  803a18:	4451c83a 	sub	r8,r8,r17
  803a1c:	2823883a 	mov	r17,r5
  803a20:	003f9f06 	br	8038a0 <__alt_data_end+0xff8038a0>
  803a24:	4984b03a 	or	r2,r9,r6
  803a28:	103f6026 	beq	r2,zero,8037ac <__alt_data_end+0xff8037ac>
  803a2c:	213fffc4 	addi	r4,r4,-1
  803a30:	2000931e 	bne	r4,zero,803c80 <__adddf3+0x550>
  803a34:	898d883a 	add	r6,r17,r6
  803a38:	3463803a 	cmpltu	r17,r6,r17
  803a3c:	4251883a 	add	r8,r8,r9
  803a40:	8a11883a 	add	r8,r17,r8
  803a44:	3023883a 	mov	r17,r6
  803a48:	003fd806 	br	8039ac <__alt_data_end+0xff8039ac>
  803a4c:	1800541e 	bne	r3,zero,803ba0 <__adddf3+0x470>
  803a50:	80800044 	addi	r2,r16,1
  803a54:	1081ffcc 	andi	r2,r2,2047
  803a58:	00c00044 	movi	r3,1
  803a5c:	1880a00e 	bge	r3,r2,803ce0 <__adddf3+0x5b0>
  803a60:	8989c83a 	sub	r4,r17,r6
  803a64:	8905803a 	cmpltu	r2,r17,r4
  803a68:	4267c83a 	sub	r19,r8,r9
  803a6c:	98a7c83a 	sub	r19,r19,r2
  803a70:	9880202c 	andhi	r2,r19,128
  803a74:	10006326 	beq	r2,zero,803c04 <__adddf3+0x4d4>
  803a78:	3463c83a 	sub	r17,r6,r17
  803a7c:	4a07c83a 	sub	r3,r9,r8
  803a80:	344d803a 	cmpltu	r6,r6,r17
  803a84:	19a7c83a 	sub	r19,r3,r6
  803a88:	3825883a 	mov	r18,r7
  803a8c:	983f8a1e 	bne	r19,zero,8038b8 <__alt_data_end+0xff8038b8>
  803a90:	8809883a 	mov	r4,r17
  803a94:	08056100 	call	805610 <__clzsi2>
  803a98:	10800804 	addi	r2,r2,32
  803a9c:	10fffe04 	addi	r3,r2,-8
  803aa0:	010007c4 	movi	r4,31
  803aa4:	20ff890e 	bge	r4,r3,8038cc <__alt_data_end+0xff8038cc>
  803aa8:	10bff604 	addi	r2,r2,-40
  803aac:	8884983a 	sll	r2,r17,r2
  803ab0:	0023883a 	mov	r17,zero
  803ab4:	1c3f8c0e 	bge	r3,r16,8038e8 <__alt_data_end+0xff8038e8>
  803ab8:	023fe034 	movhi	r8,65408
  803abc:	423fffc4 	addi	r8,r8,-1
  803ac0:	80e1c83a 	sub	r16,r16,r3
  803ac4:	1210703a 	and	r8,r2,r8
  803ac8:	003f3806 	br	8037ac <__alt_data_end+0xff8037ac>
  803acc:	9007883a 	mov	r3,r18
  803ad0:	0011883a 	mov	r8,zero
  803ad4:	0005883a 	mov	r2,zero
  803ad8:	003f4c06 	br	80380c <__alt_data_end+0xff80380c>
  803adc:	498cb03a 	or	r6,r9,r6
  803ae0:	300cc03a 	cmpne	r6,r6,zero
  803ae4:	0007883a 	mov	r3,zero
  803ae8:	003f6806 	br	80388c <__alt_data_end+0xff80388c>
  803aec:	20009c1e 	bne	r4,zero,803d60 <__adddf3+0x630>
  803af0:	80800044 	addi	r2,r16,1
  803af4:	1141ffcc 	andi	r5,r2,2047
  803af8:	01000044 	movi	r4,1
  803afc:	2140670e 	bge	r4,r5,803c9c <__adddf3+0x56c>
  803b00:	0101ffc4 	movi	r4,2047
  803b04:	11007f26 	beq	r2,r4,803d04 <__adddf3+0x5d4>
  803b08:	898d883a 	add	r6,r17,r6
  803b0c:	4247883a 	add	r3,r8,r9
  803b10:	3451803a 	cmpltu	r8,r6,r17
  803b14:	40d1883a 	add	r8,r8,r3
  803b18:	402297fa 	slli	r17,r8,31
  803b1c:	300cd07a 	srli	r6,r6,1
  803b20:	4010d07a 	srli	r8,r8,1
  803b24:	1021883a 	mov	r16,r2
  803b28:	89a2b03a 	or	r17,r17,r6
  803b2c:	003f1f06 	br	8037ac <__alt_data_end+0xff8037ac>
  803b30:	0081ffc4 	movi	r2,2047
  803b34:	80bf481e 	bne	r16,r2,803858 <__alt_data_end+0xff803858>
  803b38:	003f1c06 	br	8037ac <__alt_data_end+0xff8037ac>
  803b3c:	843ff844 	addi	r16,r16,-31
  803b40:	01000804 	movi	r4,32
  803b44:	1406d83a 	srl	r3,r2,r16
  803b48:	41005026 	beq	r8,r4,803c8c <__adddf3+0x55c>
  803b4c:	01001004 	movi	r4,64
  803b50:	2211c83a 	sub	r8,r4,r8
  803b54:	1204983a 	sll	r2,r2,r8
  803b58:	88a2b03a 	or	r17,r17,r2
  803b5c:	8822c03a 	cmpne	r17,r17,zero
  803b60:	1c62b03a 	or	r17,r3,r17
  803b64:	0011883a 	mov	r8,zero
  803b68:	0021883a 	mov	r16,zero
  803b6c:	003f7106 	br	803934 <__alt_data_end+0xff803934>
  803b70:	193ff804 	addi	r4,r3,-32
  803b74:	00800804 	movi	r2,32
  803b78:	4908d83a 	srl	r4,r9,r4
  803b7c:	18804526 	beq	r3,r2,803c94 <__adddf3+0x564>
  803b80:	00801004 	movi	r2,64
  803b84:	10c5c83a 	sub	r2,r2,r3
  803b88:	4886983a 	sll	r3,r9,r2
  803b8c:	198cb03a 	or	r6,r3,r6
  803b90:	300cc03a 	cmpne	r6,r6,zero
  803b94:	218cb03a 	or	r6,r4,r6
  803b98:	0007883a 	mov	r3,zero
  803b9c:	003f3b06 	br	80388c <__alt_data_end+0xff80388c>
  803ba0:	80002a26 	beq	r16,zero,803c4c <__adddf3+0x51c>
  803ba4:	0101ffc4 	movi	r4,2047
  803ba8:	11006826 	beq	r2,r4,803d4c <__adddf3+0x61c>
  803bac:	00c7c83a 	sub	r3,zero,r3
  803bb0:	42002034 	orhi	r8,r8,128
  803bb4:	01000e04 	movi	r4,56
  803bb8:	20c07c16 	blt	r4,r3,803dac <__adddf3+0x67c>
  803bbc:	010007c4 	movi	r4,31
  803bc0:	20c0da16 	blt	r4,r3,803f2c <__adddf3+0x7fc>
  803bc4:	01000804 	movi	r4,32
  803bc8:	20c9c83a 	sub	r4,r4,r3
  803bcc:	4114983a 	sll	r10,r8,r4
  803bd0:	88cad83a 	srl	r5,r17,r3
  803bd4:	8908983a 	sll	r4,r17,r4
  803bd8:	40c6d83a 	srl	r3,r8,r3
  803bdc:	5162b03a 	or	r17,r10,r5
  803be0:	2008c03a 	cmpne	r4,r4,zero
  803be4:	8922b03a 	or	r17,r17,r4
  803be8:	3463c83a 	sub	r17,r6,r17
  803bec:	48c7c83a 	sub	r3,r9,r3
  803bf0:	344d803a 	cmpltu	r6,r6,r17
  803bf4:	1991c83a 	sub	r8,r3,r6
  803bf8:	1021883a 	mov	r16,r2
  803bfc:	3825883a 	mov	r18,r7
  803c00:	003f2706 	br	8038a0 <__alt_data_end+0xff8038a0>
  803c04:	24d0b03a 	or	r8,r4,r19
  803c08:	40001b1e 	bne	r8,zero,803c78 <__adddf3+0x548>
  803c0c:	0005883a 	mov	r2,zero
  803c10:	0007883a 	mov	r3,zero
  803c14:	0021883a 	mov	r16,zero
  803c18:	003f4d06 	br	803950 <__alt_data_end+0xff803950>
  803c1c:	008007c4 	movi	r2,31
  803c20:	11003c16 	blt	r2,r4,803d14 <__adddf3+0x5e4>
  803c24:	00800804 	movi	r2,32
  803c28:	1105c83a 	sub	r2,r2,r4
  803c2c:	488e983a 	sll	r7,r9,r2
  803c30:	310ad83a 	srl	r5,r6,r4
  803c34:	3084983a 	sll	r2,r6,r2
  803c38:	4912d83a 	srl	r9,r9,r4
  803c3c:	394ab03a 	or	r5,r7,r5
  803c40:	1004c03a 	cmpne	r2,r2,zero
  803c44:	288ab03a 	or	r5,r5,r2
  803c48:	003f5306 	br	803998 <__alt_data_end+0xff803998>
  803c4c:	4448b03a 	or	r4,r8,r17
  803c50:	20003e26 	beq	r4,zero,803d4c <__adddf3+0x61c>
  803c54:	00c6303a 	nor	r3,zero,r3
  803c58:	18003a1e 	bne	r3,zero,803d44 <__adddf3+0x614>
  803c5c:	3463c83a 	sub	r17,r6,r17
  803c60:	4a07c83a 	sub	r3,r9,r8
  803c64:	344d803a 	cmpltu	r6,r6,r17
  803c68:	1991c83a 	sub	r8,r3,r6
  803c6c:	1021883a 	mov	r16,r2
  803c70:	3825883a 	mov	r18,r7
  803c74:	003f0a06 	br	8038a0 <__alt_data_end+0xff8038a0>
  803c78:	2023883a 	mov	r17,r4
  803c7c:	003f0d06 	br	8038b4 <__alt_data_end+0xff8038b4>
  803c80:	0081ffc4 	movi	r2,2047
  803c84:	80bf3f1e 	bne	r16,r2,803984 <__alt_data_end+0xff803984>
  803c88:	003ec806 	br	8037ac <__alt_data_end+0xff8037ac>
  803c8c:	0005883a 	mov	r2,zero
  803c90:	003fb106 	br	803b58 <__alt_data_end+0xff803b58>
  803c94:	0007883a 	mov	r3,zero
  803c98:	003fbc06 	br	803b8c <__alt_data_end+0xff803b8c>
  803c9c:	4444b03a 	or	r2,r8,r17
  803ca0:	8000871e 	bne	r16,zero,803ec0 <__adddf3+0x790>
  803ca4:	1000ba26 	beq	r2,zero,803f90 <__adddf3+0x860>
  803ca8:	4984b03a 	or	r2,r9,r6
  803cac:	103ebf26 	beq	r2,zero,8037ac <__alt_data_end+0xff8037ac>
  803cb0:	8985883a 	add	r2,r17,r6
  803cb4:	4247883a 	add	r3,r8,r9
  803cb8:	1451803a 	cmpltu	r8,r2,r17
  803cbc:	40d1883a 	add	r8,r8,r3
  803cc0:	40c0202c 	andhi	r3,r8,128
  803cc4:	1023883a 	mov	r17,r2
  803cc8:	183f1a26 	beq	r3,zero,803934 <__alt_data_end+0xff803934>
  803ccc:	00bfe034 	movhi	r2,65408
  803cd0:	10bfffc4 	addi	r2,r2,-1
  803cd4:	2021883a 	mov	r16,r4
  803cd8:	4090703a 	and	r8,r8,r2
  803cdc:	003eb306 	br	8037ac <__alt_data_end+0xff8037ac>
  803ce0:	4444b03a 	or	r2,r8,r17
  803ce4:	8000291e 	bne	r16,zero,803d8c <__adddf3+0x65c>
  803ce8:	10004b1e 	bne	r2,zero,803e18 <__adddf3+0x6e8>
  803cec:	4990b03a 	or	r8,r9,r6
  803cf0:	40008b26 	beq	r8,zero,803f20 <__adddf3+0x7f0>
  803cf4:	4811883a 	mov	r8,r9
  803cf8:	3023883a 	mov	r17,r6
  803cfc:	3825883a 	mov	r18,r7
  803d00:	003eaa06 	br	8037ac <__alt_data_end+0xff8037ac>
  803d04:	1021883a 	mov	r16,r2
  803d08:	0011883a 	mov	r8,zero
  803d0c:	0005883a 	mov	r2,zero
  803d10:	003f0f06 	br	803950 <__alt_data_end+0xff803950>
  803d14:	217ff804 	addi	r5,r4,-32
  803d18:	00800804 	movi	r2,32
  803d1c:	494ad83a 	srl	r5,r9,r5
  803d20:	20807d26 	beq	r4,r2,803f18 <__adddf3+0x7e8>
  803d24:	00801004 	movi	r2,64
  803d28:	1109c83a 	sub	r4,r2,r4
  803d2c:	4912983a 	sll	r9,r9,r4
  803d30:	498cb03a 	or	r6,r9,r6
  803d34:	300cc03a 	cmpne	r6,r6,zero
  803d38:	298ab03a 	or	r5,r5,r6
  803d3c:	0013883a 	mov	r9,zero
  803d40:	003f1506 	br	803998 <__alt_data_end+0xff803998>
  803d44:	0101ffc4 	movi	r4,2047
  803d48:	113f9a1e 	bne	r2,r4,803bb4 <__alt_data_end+0xff803bb4>
  803d4c:	4811883a 	mov	r8,r9
  803d50:	3023883a 	mov	r17,r6
  803d54:	1021883a 	mov	r16,r2
  803d58:	3825883a 	mov	r18,r7
  803d5c:	003e9306 	br	8037ac <__alt_data_end+0xff8037ac>
  803d60:	8000161e 	bne	r16,zero,803dbc <__adddf3+0x68c>
  803d64:	444ab03a 	or	r5,r8,r17
  803d68:	28005126 	beq	r5,zero,803eb0 <__adddf3+0x780>
  803d6c:	0108303a 	nor	r4,zero,r4
  803d70:	20004d1e 	bne	r4,zero,803ea8 <__adddf3+0x778>
  803d74:	89a3883a 	add	r17,r17,r6
  803d78:	4253883a 	add	r9,r8,r9
  803d7c:	898d803a 	cmpltu	r6,r17,r6
  803d80:	3251883a 	add	r8,r6,r9
  803d84:	1021883a 	mov	r16,r2
  803d88:	003f0806 	br	8039ac <__alt_data_end+0xff8039ac>
  803d8c:	1000301e 	bne	r2,zero,803e50 <__adddf3+0x720>
  803d90:	4984b03a 	or	r2,r9,r6
  803d94:	10007126 	beq	r2,zero,803f5c <__adddf3+0x82c>
  803d98:	4811883a 	mov	r8,r9
  803d9c:	3023883a 	mov	r17,r6
  803da0:	3825883a 	mov	r18,r7
  803da4:	0401ffc4 	movi	r16,2047
  803da8:	003e8006 	br	8037ac <__alt_data_end+0xff8037ac>
  803dac:	4462b03a 	or	r17,r8,r17
  803db0:	8822c03a 	cmpne	r17,r17,zero
  803db4:	0007883a 	mov	r3,zero
  803db8:	003f8b06 	br	803be8 <__alt_data_end+0xff803be8>
  803dbc:	0141ffc4 	movi	r5,2047
  803dc0:	11403b26 	beq	r2,r5,803eb0 <__adddf3+0x780>
  803dc4:	0109c83a 	sub	r4,zero,r4
  803dc8:	42002034 	orhi	r8,r8,128
  803dcc:	01400e04 	movi	r5,56
  803dd0:	29006716 	blt	r5,r4,803f70 <__adddf3+0x840>
  803dd4:	014007c4 	movi	r5,31
  803dd8:	29007016 	blt	r5,r4,803f9c <__adddf3+0x86c>
  803ddc:	01400804 	movi	r5,32
  803de0:	290bc83a 	sub	r5,r5,r4
  803de4:	4154983a 	sll	r10,r8,r5
  803de8:	890ed83a 	srl	r7,r17,r4
  803dec:	894a983a 	sll	r5,r17,r5
  803df0:	4108d83a 	srl	r4,r8,r4
  803df4:	51e2b03a 	or	r17,r10,r7
  803df8:	280ac03a 	cmpne	r5,r5,zero
  803dfc:	8962b03a 	or	r17,r17,r5
  803e00:	89a3883a 	add	r17,r17,r6
  803e04:	2253883a 	add	r9,r4,r9
  803e08:	898d803a 	cmpltu	r6,r17,r6
  803e0c:	3251883a 	add	r8,r6,r9
  803e10:	1021883a 	mov	r16,r2
  803e14:	003ee506 	br	8039ac <__alt_data_end+0xff8039ac>
  803e18:	4984b03a 	or	r2,r9,r6
  803e1c:	103e6326 	beq	r2,zero,8037ac <__alt_data_end+0xff8037ac>
  803e20:	8987c83a 	sub	r3,r17,r6
  803e24:	88c9803a 	cmpltu	r4,r17,r3
  803e28:	4245c83a 	sub	r2,r8,r9
  803e2c:	1105c83a 	sub	r2,r2,r4
  803e30:	1100202c 	andhi	r4,r2,128
  803e34:	203ebb26 	beq	r4,zero,803924 <__alt_data_end+0xff803924>
  803e38:	3463c83a 	sub	r17,r6,r17
  803e3c:	4a07c83a 	sub	r3,r9,r8
  803e40:	344d803a 	cmpltu	r6,r6,r17
  803e44:	1991c83a 	sub	r8,r3,r6
  803e48:	3825883a 	mov	r18,r7
  803e4c:	003e5706 	br	8037ac <__alt_data_end+0xff8037ac>
  803e50:	4984b03a 	or	r2,r9,r6
  803e54:	10002e26 	beq	r2,zero,803f10 <__adddf3+0x7e0>
  803e58:	4004d0fa 	srli	r2,r8,3
  803e5c:	8822d0fa 	srli	r17,r17,3
  803e60:	4010977a 	slli	r8,r8,29
  803e64:	10c0022c 	andhi	r3,r2,8
  803e68:	4462b03a 	or	r17,r8,r17
  803e6c:	18000826 	beq	r3,zero,803e90 <__adddf3+0x760>
  803e70:	4808d0fa 	srli	r4,r9,3
  803e74:	20c0022c 	andhi	r3,r4,8
  803e78:	1800051e 	bne	r3,zero,803e90 <__adddf3+0x760>
  803e7c:	300cd0fa 	srli	r6,r6,3
  803e80:	4806977a 	slli	r3,r9,29
  803e84:	2005883a 	mov	r2,r4
  803e88:	3825883a 	mov	r18,r7
  803e8c:	19a2b03a 	or	r17,r3,r6
  803e90:	8810d77a 	srli	r8,r17,29
  803e94:	100490fa 	slli	r2,r2,3
  803e98:	882290fa 	slli	r17,r17,3
  803e9c:	0401ffc4 	movi	r16,2047
  803ea0:	4090b03a 	or	r8,r8,r2
  803ea4:	003e4106 	br	8037ac <__alt_data_end+0xff8037ac>
  803ea8:	0141ffc4 	movi	r5,2047
  803eac:	117fc71e 	bne	r2,r5,803dcc <__alt_data_end+0xff803dcc>
  803eb0:	4811883a 	mov	r8,r9
  803eb4:	3023883a 	mov	r17,r6
  803eb8:	1021883a 	mov	r16,r2
  803ebc:	003e3b06 	br	8037ac <__alt_data_end+0xff8037ac>
  803ec0:	10002f26 	beq	r2,zero,803f80 <__adddf3+0x850>
  803ec4:	4984b03a 	or	r2,r9,r6
  803ec8:	10001126 	beq	r2,zero,803f10 <__adddf3+0x7e0>
  803ecc:	4004d0fa 	srli	r2,r8,3
  803ed0:	8822d0fa 	srli	r17,r17,3
  803ed4:	4010977a 	slli	r8,r8,29
  803ed8:	10c0022c 	andhi	r3,r2,8
  803edc:	4462b03a 	or	r17,r8,r17
  803ee0:	183feb26 	beq	r3,zero,803e90 <__alt_data_end+0xff803e90>
  803ee4:	4808d0fa 	srli	r4,r9,3
  803ee8:	20c0022c 	andhi	r3,r4,8
  803eec:	183fe81e 	bne	r3,zero,803e90 <__alt_data_end+0xff803e90>
  803ef0:	300cd0fa 	srli	r6,r6,3
  803ef4:	4806977a 	slli	r3,r9,29
  803ef8:	2005883a 	mov	r2,r4
  803efc:	19a2b03a 	or	r17,r3,r6
  803f00:	003fe306 	br	803e90 <__alt_data_end+0xff803e90>
  803f04:	0011883a 	mov	r8,zero
  803f08:	0005883a 	mov	r2,zero
  803f0c:	003e3f06 	br	80380c <__alt_data_end+0xff80380c>
  803f10:	0401ffc4 	movi	r16,2047
  803f14:	003e2506 	br	8037ac <__alt_data_end+0xff8037ac>
  803f18:	0013883a 	mov	r9,zero
  803f1c:	003f8406 	br	803d30 <__alt_data_end+0xff803d30>
  803f20:	0005883a 	mov	r2,zero
  803f24:	0007883a 	mov	r3,zero
  803f28:	003e8906 	br	803950 <__alt_data_end+0xff803950>
  803f2c:	197ff804 	addi	r5,r3,-32
  803f30:	01000804 	movi	r4,32
  803f34:	414ad83a 	srl	r5,r8,r5
  803f38:	19002426 	beq	r3,r4,803fcc <__adddf3+0x89c>
  803f3c:	01001004 	movi	r4,64
  803f40:	20c7c83a 	sub	r3,r4,r3
  803f44:	40c6983a 	sll	r3,r8,r3
  803f48:	1c46b03a 	or	r3,r3,r17
  803f4c:	1806c03a 	cmpne	r3,r3,zero
  803f50:	28e2b03a 	or	r17,r5,r3
  803f54:	0007883a 	mov	r3,zero
  803f58:	003f2306 	br	803be8 <__alt_data_end+0xff803be8>
  803f5c:	0007883a 	mov	r3,zero
  803f60:	5811883a 	mov	r8,r11
  803f64:	00bfffc4 	movi	r2,-1
  803f68:	0401ffc4 	movi	r16,2047
  803f6c:	003e7806 	br	803950 <__alt_data_end+0xff803950>
  803f70:	4462b03a 	or	r17,r8,r17
  803f74:	8822c03a 	cmpne	r17,r17,zero
  803f78:	0009883a 	mov	r4,zero
  803f7c:	003fa006 	br	803e00 <__alt_data_end+0xff803e00>
  803f80:	4811883a 	mov	r8,r9
  803f84:	3023883a 	mov	r17,r6
  803f88:	0401ffc4 	movi	r16,2047
  803f8c:	003e0706 	br	8037ac <__alt_data_end+0xff8037ac>
  803f90:	4811883a 	mov	r8,r9
  803f94:	3023883a 	mov	r17,r6
  803f98:	003e0406 	br	8037ac <__alt_data_end+0xff8037ac>
  803f9c:	21fff804 	addi	r7,r4,-32
  803fa0:	01400804 	movi	r5,32
  803fa4:	41ced83a 	srl	r7,r8,r7
  803fa8:	21400a26 	beq	r4,r5,803fd4 <__adddf3+0x8a4>
  803fac:	01401004 	movi	r5,64
  803fb0:	2909c83a 	sub	r4,r5,r4
  803fb4:	4108983a 	sll	r4,r8,r4
  803fb8:	2448b03a 	or	r4,r4,r17
  803fbc:	2008c03a 	cmpne	r4,r4,zero
  803fc0:	3922b03a 	or	r17,r7,r4
  803fc4:	0009883a 	mov	r4,zero
  803fc8:	003f8d06 	br	803e00 <__alt_data_end+0xff803e00>
  803fcc:	0007883a 	mov	r3,zero
  803fd0:	003fdd06 	br	803f48 <__alt_data_end+0xff803f48>
  803fd4:	0009883a 	mov	r4,zero
  803fd8:	003ff706 	br	803fb8 <__alt_data_end+0xff803fb8>

00803fdc <__eqdf2>:
  803fdc:	2804d53a 	srli	r2,r5,20
  803fe0:	3806d53a 	srli	r3,r7,20
  803fe4:	02000434 	movhi	r8,16
  803fe8:	423fffc4 	addi	r8,r8,-1
  803fec:	1081ffcc 	andi	r2,r2,2047
  803ff0:	0281ffc4 	movi	r10,2047
  803ff4:	2a12703a 	and	r9,r5,r8
  803ff8:	18c1ffcc 	andi	r3,r3,2047
  803ffc:	3a10703a 	and	r8,r7,r8
  804000:	280ad7fa 	srli	r5,r5,31
  804004:	380ed7fa 	srli	r7,r7,31
  804008:	12801026 	beq	r2,r10,80404c <__eqdf2+0x70>
  80400c:	0281ffc4 	movi	r10,2047
  804010:	1a800a26 	beq	r3,r10,80403c <__eqdf2+0x60>
  804014:	10c00226 	beq	r2,r3,804020 <__eqdf2+0x44>
  804018:	00800044 	movi	r2,1
  80401c:	f800283a 	ret
  804020:	4a3ffd1e 	bne	r9,r8,804018 <__alt_data_end+0xff804018>
  804024:	21bffc1e 	bne	r4,r6,804018 <__alt_data_end+0xff804018>
  804028:	29c00c26 	beq	r5,r7,80405c <__eqdf2+0x80>
  80402c:	103ffa1e 	bne	r2,zero,804018 <__alt_data_end+0xff804018>
  804030:	2244b03a 	or	r2,r4,r9
  804034:	1004c03a 	cmpne	r2,r2,zero
  804038:	f800283a 	ret
  80403c:	3214b03a 	or	r10,r6,r8
  804040:	503ff426 	beq	r10,zero,804014 <__alt_data_end+0xff804014>
  804044:	00800044 	movi	r2,1
  804048:	f800283a 	ret
  80404c:	2254b03a 	or	r10,r4,r9
  804050:	503fee26 	beq	r10,zero,80400c <__alt_data_end+0xff80400c>
  804054:	00800044 	movi	r2,1
  804058:	f800283a 	ret
  80405c:	0005883a 	mov	r2,zero
  804060:	f800283a 	ret

00804064 <__gedf2>:
  804064:	2804d53a 	srli	r2,r5,20
  804068:	3806d53a 	srli	r3,r7,20
  80406c:	02000434 	movhi	r8,16
  804070:	423fffc4 	addi	r8,r8,-1
  804074:	1081ffcc 	andi	r2,r2,2047
  804078:	0241ffc4 	movi	r9,2047
  80407c:	2a14703a 	and	r10,r5,r8
  804080:	18c1ffcc 	andi	r3,r3,2047
  804084:	3a10703a 	and	r8,r7,r8
  804088:	280ad7fa 	srli	r5,r5,31
  80408c:	380ed7fa 	srli	r7,r7,31
  804090:	12401d26 	beq	r2,r9,804108 <__gedf2+0xa4>
  804094:	0241ffc4 	movi	r9,2047
  804098:	1a401226 	beq	r3,r9,8040e4 <__gedf2+0x80>
  80409c:	1000081e 	bne	r2,zero,8040c0 <__gedf2+0x5c>
  8040a0:	2296b03a 	or	r11,r4,r10
  8040a4:	5813003a 	cmpeq	r9,r11,zero
  8040a8:	1800091e 	bne	r3,zero,8040d0 <__gedf2+0x6c>
  8040ac:	3218b03a 	or	r12,r6,r8
  8040b0:	6000071e 	bne	r12,zero,8040d0 <__gedf2+0x6c>
  8040b4:	0005883a 	mov	r2,zero
  8040b8:	5800101e 	bne	r11,zero,8040fc <__gedf2+0x98>
  8040bc:	f800283a 	ret
  8040c0:	18000c1e 	bne	r3,zero,8040f4 <__gedf2+0x90>
  8040c4:	3212b03a 	or	r9,r6,r8
  8040c8:	48000c26 	beq	r9,zero,8040fc <__gedf2+0x98>
  8040cc:	0013883a 	mov	r9,zero
  8040d0:	39c03fcc 	andi	r7,r7,255
  8040d4:	48000826 	beq	r9,zero,8040f8 <__gedf2+0x94>
  8040d8:	38000926 	beq	r7,zero,804100 <__gedf2+0x9c>
  8040dc:	00800044 	movi	r2,1
  8040e0:	f800283a 	ret
  8040e4:	3212b03a 	or	r9,r6,r8
  8040e8:	483fec26 	beq	r9,zero,80409c <__alt_data_end+0xff80409c>
  8040ec:	00bfff84 	movi	r2,-2
  8040f0:	f800283a 	ret
  8040f4:	39c03fcc 	andi	r7,r7,255
  8040f8:	29c00626 	beq	r5,r7,804114 <__gedf2+0xb0>
  8040fc:	283ff726 	beq	r5,zero,8040dc <__alt_data_end+0xff8040dc>
  804100:	00bfffc4 	movi	r2,-1
  804104:	f800283a 	ret
  804108:	2292b03a 	or	r9,r4,r10
  80410c:	483fe126 	beq	r9,zero,804094 <__alt_data_end+0xff804094>
  804110:	003ff606 	br	8040ec <__alt_data_end+0xff8040ec>
  804114:	18bff916 	blt	r3,r2,8040fc <__alt_data_end+0xff8040fc>
  804118:	10c00316 	blt	r2,r3,804128 <__gedf2+0xc4>
  80411c:	42bff736 	bltu	r8,r10,8040fc <__alt_data_end+0xff8040fc>
  804120:	52000326 	beq	r10,r8,804130 <__gedf2+0xcc>
  804124:	5200042e 	bgeu	r10,r8,804138 <__gedf2+0xd4>
  804128:	283fec1e 	bne	r5,zero,8040dc <__alt_data_end+0xff8040dc>
  80412c:	003ff406 	br	804100 <__alt_data_end+0xff804100>
  804130:	313ff236 	bltu	r6,r4,8040fc <__alt_data_end+0xff8040fc>
  804134:	21bffc36 	bltu	r4,r6,804128 <__alt_data_end+0xff804128>
  804138:	0005883a 	mov	r2,zero
  80413c:	f800283a 	ret

00804140 <__muldf3>:
  804140:	defff304 	addi	sp,sp,-52
  804144:	2804d53a 	srli	r2,r5,20
  804148:	dd800915 	stw	r22,36(sp)
  80414c:	282cd7fa 	srli	r22,r5,31
  804150:	dc000315 	stw	r16,12(sp)
  804154:	04000434 	movhi	r16,16
  804158:	dd400815 	stw	r21,32(sp)
  80415c:	dc800515 	stw	r18,20(sp)
  804160:	843fffc4 	addi	r16,r16,-1
  804164:	dfc00c15 	stw	ra,48(sp)
  804168:	df000b15 	stw	fp,44(sp)
  80416c:	ddc00a15 	stw	r23,40(sp)
  804170:	dd000715 	stw	r20,28(sp)
  804174:	dcc00615 	stw	r19,24(sp)
  804178:	dc400415 	stw	r17,16(sp)
  80417c:	1481ffcc 	andi	r18,r2,2047
  804180:	2c20703a 	and	r16,r5,r16
  804184:	b02b883a 	mov	r21,r22
  804188:	b2403fcc 	andi	r9,r22,255
  80418c:	90006026 	beq	r18,zero,804310 <__muldf3+0x1d0>
  804190:	0081ffc4 	movi	r2,2047
  804194:	2029883a 	mov	r20,r4
  804198:	90803626 	beq	r18,r2,804274 <__muldf3+0x134>
  80419c:	80800434 	orhi	r2,r16,16
  8041a0:	100490fa 	slli	r2,r2,3
  8041a4:	2020d77a 	srli	r16,r4,29
  8041a8:	202890fa 	slli	r20,r4,3
  8041ac:	94bf0044 	addi	r18,r18,-1023
  8041b0:	80a0b03a 	or	r16,r16,r2
  8041b4:	0027883a 	mov	r19,zero
  8041b8:	0039883a 	mov	fp,zero
  8041bc:	3804d53a 	srli	r2,r7,20
  8041c0:	382ed7fa 	srli	r23,r7,31
  8041c4:	04400434 	movhi	r17,16
  8041c8:	8c7fffc4 	addi	r17,r17,-1
  8041cc:	1081ffcc 	andi	r2,r2,2047
  8041d0:	3011883a 	mov	r8,r6
  8041d4:	3c62703a 	and	r17,r7,r17
  8041d8:	ba803fcc 	andi	r10,r23,255
  8041dc:	10006d26 	beq	r2,zero,804394 <__muldf3+0x254>
  8041e0:	00c1ffc4 	movi	r3,2047
  8041e4:	10c06526 	beq	r2,r3,80437c <__muldf3+0x23c>
  8041e8:	88c00434 	orhi	r3,r17,16
  8041ec:	180690fa 	slli	r3,r3,3
  8041f0:	3022d77a 	srli	r17,r6,29
  8041f4:	301090fa 	slli	r8,r6,3
  8041f8:	10bf0044 	addi	r2,r2,-1023
  8041fc:	88e2b03a 	or	r17,r17,r3
  804200:	000b883a 	mov	r5,zero
  804204:	9085883a 	add	r2,r18,r2
  804208:	2cc8b03a 	or	r4,r5,r19
  80420c:	00c003c4 	movi	r3,15
  804210:	bdacf03a 	xor	r22,r23,r22
  804214:	12c00044 	addi	r11,r2,1
  804218:	19009936 	bltu	r3,r4,804480 <__muldf3+0x340>
  80421c:	200890ba 	slli	r4,r4,2
  804220:	00c02034 	movhi	r3,128
  804224:	18d08d04 	addi	r3,r3,16948
  804228:	20c9883a 	add	r4,r4,r3
  80422c:	20c00017 	ldw	r3,0(r4)
  804230:	1800683a 	jmp	r3
  804234:	00804480 	call	80448 <__alt_mem_sdram-0x77fbb8>
  804238:	00804294 	movui	r2,266
  80423c:	00804294 	movui	r2,266
  804240:	00804290 	cmplti	r2,zero,266
  804244:	0080445c 	xori	r2,zero,273
  804248:	0080445c 	xori	r2,zero,273
  80424c:	00804444 	movi	r2,273
  804250:	00804290 	cmplti	r2,zero,266
  804254:	0080445c 	xori	r2,zero,273
  804258:	00804444 	movi	r2,273
  80425c:	0080445c 	xori	r2,zero,273
  804260:	00804290 	cmplti	r2,zero,266
  804264:	0080446c 	andhi	r2,zero,273
  804268:	0080446c 	andhi	r2,zero,273
  80426c:	0080446c 	andhi	r2,zero,273
  804270:	00804688 	cmpgei	r2,zero,282
  804274:	2404b03a 	or	r2,r4,r16
  804278:	10006f1e 	bne	r2,zero,804438 <__muldf3+0x2f8>
  80427c:	04c00204 	movi	r19,8
  804280:	0021883a 	mov	r16,zero
  804284:	0029883a 	mov	r20,zero
  804288:	07000084 	movi	fp,2
  80428c:	003fcb06 	br	8041bc <__alt_data_end+0xff8041bc>
  804290:	502d883a 	mov	r22,r10
  804294:	00800084 	movi	r2,2
  804298:	28805726 	beq	r5,r2,8043f8 <__muldf3+0x2b8>
  80429c:	008000c4 	movi	r2,3
  8042a0:	28816626 	beq	r5,r2,80483c <__muldf3+0x6fc>
  8042a4:	00800044 	movi	r2,1
  8042a8:	2881411e 	bne	r5,r2,8047b0 <__muldf3+0x670>
  8042ac:	b02b883a 	mov	r21,r22
  8042b0:	0005883a 	mov	r2,zero
  8042b4:	000b883a 	mov	r5,zero
  8042b8:	0029883a 	mov	r20,zero
  8042bc:	1004953a 	slli	r2,r2,20
  8042c0:	a8c03fcc 	andi	r3,r21,255
  8042c4:	04400434 	movhi	r17,16
  8042c8:	8c7fffc4 	addi	r17,r17,-1
  8042cc:	180697fa 	slli	r3,r3,31
  8042d0:	2c4a703a 	and	r5,r5,r17
  8042d4:	288ab03a 	or	r5,r5,r2
  8042d8:	28c6b03a 	or	r3,r5,r3
  8042dc:	a005883a 	mov	r2,r20
  8042e0:	dfc00c17 	ldw	ra,48(sp)
  8042e4:	df000b17 	ldw	fp,44(sp)
  8042e8:	ddc00a17 	ldw	r23,40(sp)
  8042ec:	dd800917 	ldw	r22,36(sp)
  8042f0:	dd400817 	ldw	r21,32(sp)
  8042f4:	dd000717 	ldw	r20,28(sp)
  8042f8:	dcc00617 	ldw	r19,24(sp)
  8042fc:	dc800517 	ldw	r18,20(sp)
  804300:	dc400417 	ldw	r17,16(sp)
  804304:	dc000317 	ldw	r16,12(sp)
  804308:	dec00d04 	addi	sp,sp,52
  80430c:	f800283a 	ret
  804310:	2404b03a 	or	r2,r4,r16
  804314:	2027883a 	mov	r19,r4
  804318:	10004226 	beq	r2,zero,804424 <__muldf3+0x2e4>
  80431c:	8000fc26 	beq	r16,zero,804710 <__muldf3+0x5d0>
  804320:	8009883a 	mov	r4,r16
  804324:	d9800215 	stw	r6,8(sp)
  804328:	d9c00015 	stw	r7,0(sp)
  80432c:	da400115 	stw	r9,4(sp)
  804330:	08056100 	call	805610 <__clzsi2>
  804334:	d9800217 	ldw	r6,8(sp)
  804338:	d9c00017 	ldw	r7,0(sp)
  80433c:	da400117 	ldw	r9,4(sp)
  804340:	113ffd44 	addi	r4,r2,-11
  804344:	00c00704 	movi	r3,28
  804348:	1900ed16 	blt	r3,r4,804700 <__muldf3+0x5c0>
  80434c:	00c00744 	movi	r3,29
  804350:	147ffe04 	addi	r17,r2,-8
  804354:	1907c83a 	sub	r3,r3,r4
  804358:	8460983a 	sll	r16,r16,r17
  80435c:	98c6d83a 	srl	r3,r19,r3
  804360:	9c68983a 	sll	r20,r19,r17
  804364:	1c20b03a 	or	r16,r3,r16
  804368:	1080fcc4 	addi	r2,r2,1011
  80436c:	00a5c83a 	sub	r18,zero,r2
  804370:	0027883a 	mov	r19,zero
  804374:	0039883a 	mov	fp,zero
  804378:	003f9006 	br	8041bc <__alt_data_end+0xff8041bc>
  80437c:	3446b03a 	or	r3,r6,r17
  804380:	1800261e 	bne	r3,zero,80441c <__muldf3+0x2dc>
  804384:	0023883a 	mov	r17,zero
  804388:	0011883a 	mov	r8,zero
  80438c:	01400084 	movi	r5,2
  804390:	003f9c06 	br	804204 <__alt_data_end+0xff804204>
  804394:	3446b03a 	or	r3,r6,r17
  804398:	18001c26 	beq	r3,zero,80440c <__muldf3+0x2cc>
  80439c:	8800ce26 	beq	r17,zero,8046d8 <__muldf3+0x598>
  8043a0:	8809883a 	mov	r4,r17
  8043a4:	d9800215 	stw	r6,8(sp)
  8043a8:	da400115 	stw	r9,4(sp)
  8043ac:	da800015 	stw	r10,0(sp)
  8043b0:	08056100 	call	805610 <__clzsi2>
  8043b4:	d9800217 	ldw	r6,8(sp)
  8043b8:	da400117 	ldw	r9,4(sp)
  8043bc:	da800017 	ldw	r10,0(sp)
  8043c0:	113ffd44 	addi	r4,r2,-11
  8043c4:	00c00704 	movi	r3,28
  8043c8:	1900bf16 	blt	r3,r4,8046c8 <__muldf3+0x588>
  8043cc:	00c00744 	movi	r3,29
  8043d0:	123ffe04 	addi	r8,r2,-8
  8043d4:	1907c83a 	sub	r3,r3,r4
  8043d8:	8a22983a 	sll	r17,r17,r8
  8043dc:	30c6d83a 	srl	r3,r6,r3
  8043e0:	3210983a 	sll	r8,r6,r8
  8043e4:	1c62b03a 	or	r17,r3,r17
  8043e8:	1080fcc4 	addi	r2,r2,1011
  8043ec:	0085c83a 	sub	r2,zero,r2
  8043f0:	000b883a 	mov	r5,zero
  8043f4:	003f8306 	br	804204 <__alt_data_end+0xff804204>
  8043f8:	b02b883a 	mov	r21,r22
  8043fc:	0081ffc4 	movi	r2,2047
  804400:	000b883a 	mov	r5,zero
  804404:	0029883a 	mov	r20,zero
  804408:	003fac06 	br	8042bc <__alt_data_end+0xff8042bc>
  80440c:	0023883a 	mov	r17,zero
  804410:	0011883a 	mov	r8,zero
  804414:	01400044 	movi	r5,1
  804418:	003f7a06 	br	804204 <__alt_data_end+0xff804204>
  80441c:	014000c4 	movi	r5,3
  804420:	003f7806 	br	804204 <__alt_data_end+0xff804204>
  804424:	04c00104 	movi	r19,4
  804428:	0021883a 	mov	r16,zero
  80442c:	0029883a 	mov	r20,zero
  804430:	07000044 	movi	fp,1
  804434:	003f6106 	br	8041bc <__alt_data_end+0xff8041bc>
  804438:	04c00304 	movi	r19,12
  80443c:	070000c4 	movi	fp,3
  804440:	003f5e06 	br	8041bc <__alt_data_end+0xff8041bc>
  804444:	01400434 	movhi	r5,16
  804448:	002b883a 	mov	r21,zero
  80444c:	297fffc4 	addi	r5,r5,-1
  804450:	053fffc4 	movi	r20,-1
  804454:	0081ffc4 	movi	r2,2047
  804458:	003f9806 	br	8042bc <__alt_data_end+0xff8042bc>
  80445c:	8023883a 	mov	r17,r16
  804460:	a011883a 	mov	r8,r20
  804464:	e00b883a 	mov	r5,fp
  804468:	003f8a06 	br	804294 <__alt_data_end+0xff804294>
  80446c:	8023883a 	mov	r17,r16
  804470:	a011883a 	mov	r8,r20
  804474:	482d883a 	mov	r22,r9
  804478:	e00b883a 	mov	r5,fp
  80447c:	003f8506 	br	804294 <__alt_data_end+0xff804294>
  804480:	a00ad43a 	srli	r5,r20,16
  804484:	401ad43a 	srli	r13,r8,16
  804488:	a53fffcc 	andi	r20,r20,65535
  80448c:	423fffcc 	andi	r8,r8,65535
  804490:	4519383a 	mul	r12,r8,r20
  804494:	4147383a 	mul	r3,r8,r5
  804498:	6d09383a 	mul	r4,r13,r20
  80449c:	600cd43a 	srli	r6,r12,16
  8044a0:	2b5d383a 	mul	r14,r5,r13
  8044a4:	20c9883a 	add	r4,r4,r3
  8044a8:	310d883a 	add	r6,r6,r4
  8044ac:	30c0022e 	bgeu	r6,r3,8044b8 <__muldf3+0x378>
  8044b0:	00c00074 	movhi	r3,1
  8044b4:	70dd883a 	add	r14,r14,r3
  8044b8:	8826d43a 	srli	r19,r17,16
  8044bc:	8bffffcc 	andi	r15,r17,65535
  8044c0:	7d23383a 	mul	r17,r15,r20
  8044c4:	7949383a 	mul	r4,r15,r5
  8044c8:	9d29383a 	mul	r20,r19,r20
  8044cc:	8814d43a 	srli	r10,r17,16
  8044d0:	3012943a 	slli	r9,r6,16
  8044d4:	a129883a 	add	r20,r20,r4
  8044d8:	633fffcc 	andi	r12,r12,65535
  8044dc:	5515883a 	add	r10,r10,r20
  8044e0:	3006d43a 	srli	r3,r6,16
  8044e4:	4b13883a 	add	r9,r9,r12
  8044e8:	2ccb383a 	mul	r5,r5,r19
  8044ec:	5100022e 	bgeu	r10,r4,8044f8 <__muldf3+0x3b8>
  8044f0:	01000074 	movhi	r4,1
  8044f4:	290b883a 	add	r5,r5,r4
  8044f8:	802ad43a 	srli	r21,r16,16
  8044fc:	843fffcc 	andi	r16,r16,65535
  804500:	440d383a 	mul	r6,r8,r16
  804504:	4565383a 	mul	r18,r8,r21
  804508:	8349383a 	mul	r4,r16,r13
  80450c:	500e943a 	slli	r7,r10,16
  804510:	3010d43a 	srli	r8,r6,16
  804514:	5028d43a 	srli	r20,r10,16
  804518:	2489883a 	add	r4,r4,r18
  80451c:	8abfffcc 	andi	r10,r17,65535
  804520:	3a95883a 	add	r10,r7,r10
  804524:	4119883a 	add	r12,r8,r4
  804528:	a169883a 	add	r20,r20,r5
  80452c:	1a87883a 	add	r3,r3,r10
  804530:	6d5b383a 	mul	r13,r13,r21
  804534:	6480022e 	bgeu	r12,r18,804540 <__muldf3+0x400>
  804538:	01000074 	movhi	r4,1
  80453c:	691b883a 	add	r13,r13,r4
  804540:	7c25383a 	mul	r18,r15,r16
  804544:	7d4b383a 	mul	r5,r15,r21
  804548:	84cf383a 	mul	r7,r16,r19
  80454c:	901ed43a 	srli	r15,r18,16
  804550:	6008d43a 	srli	r4,r12,16
  804554:	6010943a 	slli	r8,r12,16
  804558:	394f883a 	add	r7,r7,r5
  80455c:	333fffcc 	andi	r12,r6,65535
  804560:	79df883a 	add	r15,r15,r7
  804564:	235b883a 	add	r13,r4,r13
  804568:	9d63383a 	mul	r17,r19,r21
  80456c:	4309883a 	add	r4,r8,r12
  804570:	7940022e 	bgeu	r15,r5,80457c <__muldf3+0x43c>
  804574:	01400074 	movhi	r5,1
  804578:	8963883a 	add	r17,r17,r5
  80457c:	780a943a 	slli	r5,r15,16
  804580:	91bfffcc 	andi	r6,r18,65535
  804584:	70c7883a 	add	r3,r14,r3
  804588:	298d883a 	add	r6,r5,r6
  80458c:	1a8f803a 	cmpltu	r7,r3,r10
  804590:	350b883a 	add	r5,r6,r20
  804594:	20c7883a 	add	r3,r4,r3
  804598:	3955883a 	add	r10,r7,r5
  80459c:	1909803a 	cmpltu	r4,r3,r4
  8045a0:	6a91883a 	add	r8,r13,r10
  8045a4:	780cd43a 	srli	r6,r15,16
  8045a8:	2219883a 	add	r12,r4,r8
  8045ac:	2d0b803a 	cmpltu	r5,r5,r20
  8045b0:	51cf803a 	cmpltu	r7,r10,r7
  8045b4:	29ceb03a 	or	r7,r5,r7
  8045b8:	4351803a 	cmpltu	r8,r8,r13
  8045bc:	610b803a 	cmpltu	r5,r12,r4
  8045c0:	4148b03a 	or	r4,r8,r5
  8045c4:	398f883a 	add	r7,r7,r6
  8045c8:	3909883a 	add	r4,r7,r4
  8045cc:	1810927a 	slli	r8,r3,9
  8045d0:	2449883a 	add	r4,r4,r17
  8045d4:	2008927a 	slli	r4,r4,9
  8045d8:	6022d5fa 	srli	r17,r12,23
  8045dc:	1806d5fa 	srli	r3,r3,23
  8045e0:	4252b03a 	or	r9,r8,r9
  8045e4:	600a927a 	slli	r5,r12,9
  8045e8:	4810c03a 	cmpne	r8,r9,zero
  8045ec:	2462b03a 	or	r17,r4,r17
  8045f0:	40c6b03a 	or	r3,r8,r3
  8045f4:	8900402c 	andhi	r4,r17,256
  8045f8:	1950b03a 	or	r8,r3,r5
  8045fc:	20000726 	beq	r4,zero,80461c <__muldf3+0x4dc>
  804600:	4006d07a 	srli	r3,r8,1
  804604:	880497fa 	slli	r2,r17,31
  804608:	4200004c 	andi	r8,r8,1
  80460c:	8822d07a 	srli	r17,r17,1
  804610:	1a10b03a 	or	r8,r3,r8
  804614:	1210b03a 	or	r8,r2,r8
  804618:	5805883a 	mov	r2,r11
  80461c:	1140ffc4 	addi	r5,r2,1023
  804620:	0140440e 	bge	zero,r5,804734 <__muldf3+0x5f4>
  804624:	40c001cc 	andi	r3,r8,7
  804628:	18000726 	beq	r3,zero,804648 <__muldf3+0x508>
  80462c:	40c003cc 	andi	r3,r8,15
  804630:	01000104 	movi	r4,4
  804634:	19000426 	beq	r3,r4,804648 <__muldf3+0x508>
  804638:	4107883a 	add	r3,r8,r4
  80463c:	1a11803a 	cmpltu	r8,r3,r8
  804640:	8a23883a 	add	r17,r17,r8
  804644:	1811883a 	mov	r8,r3
  804648:	88c0402c 	andhi	r3,r17,256
  80464c:	18000426 	beq	r3,zero,804660 <__muldf3+0x520>
  804650:	11410004 	addi	r5,r2,1024
  804654:	00bfc034 	movhi	r2,65280
  804658:	10bfffc4 	addi	r2,r2,-1
  80465c:	88a2703a 	and	r17,r17,r2
  804660:	0081ff84 	movi	r2,2046
  804664:	117f6416 	blt	r2,r5,8043f8 <__alt_data_end+0xff8043f8>
  804668:	8828977a 	slli	r20,r17,29
  80466c:	4010d0fa 	srli	r8,r8,3
  804670:	8822927a 	slli	r17,r17,9
  804674:	2881ffcc 	andi	r2,r5,2047
  804678:	a228b03a 	or	r20,r20,r8
  80467c:	880ad33a 	srli	r5,r17,12
  804680:	b02b883a 	mov	r21,r22
  804684:	003f0d06 	br	8042bc <__alt_data_end+0xff8042bc>
  804688:	8080022c 	andhi	r2,r16,8
  80468c:	10000926 	beq	r2,zero,8046b4 <__muldf3+0x574>
  804690:	8880022c 	andhi	r2,r17,8
  804694:	1000071e 	bne	r2,zero,8046b4 <__muldf3+0x574>
  804698:	00800434 	movhi	r2,16
  80469c:	89400234 	orhi	r5,r17,8
  8046a0:	10bfffc4 	addi	r2,r2,-1
  8046a4:	b82b883a 	mov	r21,r23
  8046a8:	288a703a 	and	r5,r5,r2
  8046ac:	4029883a 	mov	r20,r8
  8046b0:	003f6806 	br	804454 <__alt_data_end+0xff804454>
  8046b4:	00800434 	movhi	r2,16
  8046b8:	81400234 	orhi	r5,r16,8
  8046bc:	10bfffc4 	addi	r2,r2,-1
  8046c0:	288a703a 	and	r5,r5,r2
  8046c4:	003f6306 	br	804454 <__alt_data_end+0xff804454>
  8046c8:	147ff604 	addi	r17,r2,-40
  8046cc:	3462983a 	sll	r17,r6,r17
  8046d0:	0011883a 	mov	r8,zero
  8046d4:	003f4406 	br	8043e8 <__alt_data_end+0xff8043e8>
  8046d8:	3009883a 	mov	r4,r6
  8046dc:	d9800215 	stw	r6,8(sp)
  8046e0:	da400115 	stw	r9,4(sp)
  8046e4:	da800015 	stw	r10,0(sp)
  8046e8:	08056100 	call	805610 <__clzsi2>
  8046ec:	10800804 	addi	r2,r2,32
  8046f0:	da800017 	ldw	r10,0(sp)
  8046f4:	da400117 	ldw	r9,4(sp)
  8046f8:	d9800217 	ldw	r6,8(sp)
  8046fc:	003f3006 	br	8043c0 <__alt_data_end+0xff8043c0>
  804700:	143ff604 	addi	r16,r2,-40
  804704:	9c20983a 	sll	r16,r19,r16
  804708:	0029883a 	mov	r20,zero
  80470c:	003f1606 	br	804368 <__alt_data_end+0xff804368>
  804710:	d9800215 	stw	r6,8(sp)
  804714:	d9c00015 	stw	r7,0(sp)
  804718:	da400115 	stw	r9,4(sp)
  80471c:	08056100 	call	805610 <__clzsi2>
  804720:	10800804 	addi	r2,r2,32
  804724:	da400117 	ldw	r9,4(sp)
  804728:	d9c00017 	ldw	r7,0(sp)
  80472c:	d9800217 	ldw	r6,8(sp)
  804730:	003f0306 	br	804340 <__alt_data_end+0xff804340>
  804734:	00c00044 	movi	r3,1
  804738:	1947c83a 	sub	r3,r3,r5
  80473c:	00800e04 	movi	r2,56
  804740:	10feda16 	blt	r2,r3,8042ac <__alt_data_end+0xff8042ac>
  804744:	008007c4 	movi	r2,31
  804748:	10c01b16 	blt	r2,r3,8047b8 <__muldf3+0x678>
  80474c:	00800804 	movi	r2,32
  804750:	10c5c83a 	sub	r2,r2,r3
  804754:	888a983a 	sll	r5,r17,r2
  804758:	40c8d83a 	srl	r4,r8,r3
  80475c:	4084983a 	sll	r2,r8,r2
  804760:	88e2d83a 	srl	r17,r17,r3
  804764:	2906b03a 	or	r3,r5,r4
  804768:	1004c03a 	cmpne	r2,r2,zero
  80476c:	1886b03a 	or	r3,r3,r2
  804770:	188001cc 	andi	r2,r3,7
  804774:	10000726 	beq	r2,zero,804794 <__muldf3+0x654>
  804778:	188003cc 	andi	r2,r3,15
  80477c:	01000104 	movi	r4,4
  804780:	11000426 	beq	r2,r4,804794 <__muldf3+0x654>
  804784:	1805883a 	mov	r2,r3
  804788:	10c00104 	addi	r3,r2,4
  80478c:	1885803a 	cmpltu	r2,r3,r2
  804790:	88a3883a 	add	r17,r17,r2
  804794:	8880202c 	andhi	r2,r17,128
  804798:	10001c26 	beq	r2,zero,80480c <__muldf3+0x6cc>
  80479c:	b02b883a 	mov	r21,r22
  8047a0:	00800044 	movi	r2,1
  8047a4:	000b883a 	mov	r5,zero
  8047a8:	0029883a 	mov	r20,zero
  8047ac:	003ec306 	br	8042bc <__alt_data_end+0xff8042bc>
  8047b0:	5805883a 	mov	r2,r11
  8047b4:	003f9906 	br	80461c <__alt_data_end+0xff80461c>
  8047b8:	00bff844 	movi	r2,-31
  8047bc:	1145c83a 	sub	r2,r2,r5
  8047c0:	8888d83a 	srl	r4,r17,r2
  8047c4:	00800804 	movi	r2,32
  8047c8:	18801a26 	beq	r3,r2,804834 <__muldf3+0x6f4>
  8047cc:	00801004 	movi	r2,64
  8047d0:	10c5c83a 	sub	r2,r2,r3
  8047d4:	8884983a 	sll	r2,r17,r2
  8047d8:	1204b03a 	or	r2,r2,r8
  8047dc:	1004c03a 	cmpne	r2,r2,zero
  8047e0:	2084b03a 	or	r2,r4,r2
  8047e4:	144001cc 	andi	r17,r2,7
  8047e8:	88000d1e 	bne	r17,zero,804820 <__muldf3+0x6e0>
  8047ec:	000b883a 	mov	r5,zero
  8047f0:	1028d0fa 	srli	r20,r2,3
  8047f4:	b02b883a 	mov	r21,r22
  8047f8:	0005883a 	mov	r2,zero
  8047fc:	a468b03a 	or	r20,r20,r17
  804800:	003eae06 	br	8042bc <__alt_data_end+0xff8042bc>
  804804:	1007883a 	mov	r3,r2
  804808:	0023883a 	mov	r17,zero
  80480c:	880a927a 	slli	r5,r17,9
  804810:	1805883a 	mov	r2,r3
  804814:	8822977a 	slli	r17,r17,29
  804818:	280ad33a 	srli	r5,r5,12
  80481c:	003ff406 	br	8047f0 <__alt_data_end+0xff8047f0>
  804820:	10c003cc 	andi	r3,r2,15
  804824:	01000104 	movi	r4,4
  804828:	193ff626 	beq	r3,r4,804804 <__alt_data_end+0xff804804>
  80482c:	0023883a 	mov	r17,zero
  804830:	003fd506 	br	804788 <__alt_data_end+0xff804788>
  804834:	0005883a 	mov	r2,zero
  804838:	003fe706 	br	8047d8 <__alt_data_end+0xff8047d8>
  80483c:	00800434 	movhi	r2,16
  804840:	89400234 	orhi	r5,r17,8
  804844:	10bfffc4 	addi	r2,r2,-1
  804848:	b02b883a 	mov	r21,r22
  80484c:	288a703a 	and	r5,r5,r2
  804850:	4029883a 	mov	r20,r8
  804854:	003eff06 	br	804454 <__alt_data_end+0xff804454>

00804858 <__subdf3>:
  804858:	02000434 	movhi	r8,16
  80485c:	423fffc4 	addi	r8,r8,-1
  804860:	defffb04 	addi	sp,sp,-20
  804864:	2a14703a 	and	r10,r5,r8
  804868:	3812d53a 	srli	r9,r7,20
  80486c:	3a10703a 	and	r8,r7,r8
  804870:	2006d77a 	srli	r3,r4,29
  804874:	3004d77a 	srli	r2,r6,29
  804878:	dc000015 	stw	r16,0(sp)
  80487c:	501490fa 	slli	r10,r10,3
  804880:	2820d53a 	srli	r16,r5,20
  804884:	401090fa 	slli	r8,r8,3
  804888:	dc800215 	stw	r18,8(sp)
  80488c:	dc400115 	stw	r17,4(sp)
  804890:	dfc00415 	stw	ra,16(sp)
  804894:	202290fa 	slli	r17,r4,3
  804898:	dcc00315 	stw	r19,12(sp)
  80489c:	4a41ffcc 	andi	r9,r9,2047
  8048a0:	0101ffc4 	movi	r4,2047
  8048a4:	2824d7fa 	srli	r18,r5,31
  8048a8:	8401ffcc 	andi	r16,r16,2047
  8048ac:	50c6b03a 	or	r3,r10,r3
  8048b0:	380ed7fa 	srli	r7,r7,31
  8048b4:	408ab03a 	or	r5,r8,r2
  8048b8:	300c90fa 	slli	r6,r6,3
  8048bc:	49009626 	beq	r9,r4,804b18 <__subdf3+0x2c0>
  8048c0:	39c0005c 	xori	r7,r7,1
  8048c4:	8245c83a 	sub	r2,r16,r9
  8048c8:	3c807426 	beq	r7,r18,804a9c <__subdf3+0x244>
  8048cc:	0080af0e 	bge	zero,r2,804b8c <__subdf3+0x334>
  8048d0:	48002a1e 	bne	r9,zero,80497c <__subdf3+0x124>
  8048d4:	2988b03a 	or	r4,r5,r6
  8048d8:	20009a1e 	bne	r4,zero,804b44 <__subdf3+0x2ec>
  8048dc:	888001cc 	andi	r2,r17,7
  8048e0:	10000726 	beq	r2,zero,804900 <__subdf3+0xa8>
  8048e4:	888003cc 	andi	r2,r17,15
  8048e8:	01000104 	movi	r4,4
  8048ec:	11000426 	beq	r2,r4,804900 <__subdf3+0xa8>
  8048f0:	890b883a 	add	r5,r17,r4
  8048f4:	2c63803a 	cmpltu	r17,r5,r17
  8048f8:	1c47883a 	add	r3,r3,r17
  8048fc:	2823883a 	mov	r17,r5
  804900:	1880202c 	andhi	r2,r3,128
  804904:	10005926 	beq	r2,zero,804a6c <__subdf3+0x214>
  804908:	84000044 	addi	r16,r16,1
  80490c:	0081ffc4 	movi	r2,2047
  804910:	8080be26 	beq	r16,r2,804c0c <__subdf3+0x3b4>
  804914:	017fe034 	movhi	r5,65408
  804918:	297fffc4 	addi	r5,r5,-1
  80491c:	1946703a 	and	r3,r3,r5
  804920:	1804977a 	slli	r2,r3,29
  804924:	1806927a 	slli	r3,r3,9
  804928:	8822d0fa 	srli	r17,r17,3
  80492c:	8401ffcc 	andi	r16,r16,2047
  804930:	180ad33a 	srli	r5,r3,12
  804934:	9100004c 	andi	r4,r18,1
  804938:	1444b03a 	or	r2,r2,r17
  80493c:	80c1ffcc 	andi	r3,r16,2047
  804940:	1820953a 	slli	r16,r3,20
  804944:	20c03fcc 	andi	r3,r4,255
  804948:	180897fa 	slli	r4,r3,31
  80494c:	00c00434 	movhi	r3,16
  804950:	18ffffc4 	addi	r3,r3,-1
  804954:	28c6703a 	and	r3,r5,r3
  804958:	1c06b03a 	or	r3,r3,r16
  80495c:	1906b03a 	or	r3,r3,r4
  804960:	dfc00417 	ldw	ra,16(sp)
  804964:	dcc00317 	ldw	r19,12(sp)
  804968:	dc800217 	ldw	r18,8(sp)
  80496c:	dc400117 	ldw	r17,4(sp)
  804970:	dc000017 	ldw	r16,0(sp)
  804974:	dec00504 	addi	sp,sp,20
  804978:	f800283a 	ret
  80497c:	0101ffc4 	movi	r4,2047
  804980:	813fd626 	beq	r16,r4,8048dc <__alt_data_end+0xff8048dc>
  804984:	29402034 	orhi	r5,r5,128
  804988:	01000e04 	movi	r4,56
  80498c:	2080a316 	blt	r4,r2,804c1c <__subdf3+0x3c4>
  804990:	010007c4 	movi	r4,31
  804994:	2080c616 	blt	r4,r2,804cb0 <__subdf3+0x458>
  804998:	01000804 	movi	r4,32
  80499c:	2089c83a 	sub	r4,r4,r2
  8049a0:	2910983a 	sll	r8,r5,r4
  8049a4:	308ed83a 	srl	r7,r6,r2
  8049a8:	3108983a 	sll	r4,r6,r4
  8049ac:	2884d83a 	srl	r2,r5,r2
  8049b0:	41ccb03a 	or	r6,r8,r7
  8049b4:	2008c03a 	cmpne	r4,r4,zero
  8049b8:	310cb03a 	or	r6,r6,r4
  8049bc:	898dc83a 	sub	r6,r17,r6
  8049c0:	89a3803a 	cmpltu	r17,r17,r6
  8049c4:	1887c83a 	sub	r3,r3,r2
  8049c8:	1c47c83a 	sub	r3,r3,r17
  8049cc:	3023883a 	mov	r17,r6
  8049d0:	1880202c 	andhi	r2,r3,128
  8049d4:	10002326 	beq	r2,zero,804a64 <__subdf3+0x20c>
  8049d8:	04c02034 	movhi	r19,128
  8049dc:	9cffffc4 	addi	r19,r19,-1
  8049e0:	1ce6703a 	and	r19,r3,r19
  8049e4:	98007a26 	beq	r19,zero,804bd0 <__subdf3+0x378>
  8049e8:	9809883a 	mov	r4,r19
  8049ec:	08056100 	call	805610 <__clzsi2>
  8049f0:	113ffe04 	addi	r4,r2,-8
  8049f4:	00c007c4 	movi	r3,31
  8049f8:	19007b16 	blt	r3,r4,804be8 <__subdf3+0x390>
  8049fc:	00800804 	movi	r2,32
  804a00:	1105c83a 	sub	r2,r2,r4
  804a04:	8884d83a 	srl	r2,r17,r2
  804a08:	9906983a 	sll	r3,r19,r4
  804a0c:	8922983a 	sll	r17,r17,r4
  804a10:	10c4b03a 	or	r2,r2,r3
  804a14:	24007816 	blt	r4,r16,804bf8 <__subdf3+0x3a0>
  804a18:	2421c83a 	sub	r16,r4,r16
  804a1c:	80c00044 	addi	r3,r16,1
  804a20:	010007c4 	movi	r4,31
  804a24:	20c09516 	blt	r4,r3,804c7c <__subdf3+0x424>
  804a28:	01400804 	movi	r5,32
  804a2c:	28cbc83a 	sub	r5,r5,r3
  804a30:	88c8d83a 	srl	r4,r17,r3
  804a34:	8962983a 	sll	r17,r17,r5
  804a38:	114a983a 	sll	r5,r2,r5
  804a3c:	10c6d83a 	srl	r3,r2,r3
  804a40:	8804c03a 	cmpne	r2,r17,zero
  804a44:	290ab03a 	or	r5,r5,r4
  804a48:	28a2b03a 	or	r17,r5,r2
  804a4c:	0021883a 	mov	r16,zero
  804a50:	003fa206 	br	8048dc <__alt_data_end+0xff8048dc>
  804a54:	2090b03a 	or	r8,r4,r2
  804a58:	40018e26 	beq	r8,zero,805094 <__subdf3+0x83c>
  804a5c:	1007883a 	mov	r3,r2
  804a60:	2023883a 	mov	r17,r4
  804a64:	888001cc 	andi	r2,r17,7
  804a68:	103f9e1e 	bne	r2,zero,8048e4 <__alt_data_end+0xff8048e4>
  804a6c:	1804977a 	slli	r2,r3,29
  804a70:	8822d0fa 	srli	r17,r17,3
  804a74:	1810d0fa 	srli	r8,r3,3
  804a78:	9100004c 	andi	r4,r18,1
  804a7c:	1444b03a 	or	r2,r2,r17
  804a80:	00c1ffc4 	movi	r3,2047
  804a84:	80c02826 	beq	r16,r3,804b28 <__subdf3+0x2d0>
  804a88:	01400434 	movhi	r5,16
  804a8c:	297fffc4 	addi	r5,r5,-1
  804a90:	80e0703a 	and	r16,r16,r3
  804a94:	414a703a 	and	r5,r8,r5
  804a98:	003fa806 	br	80493c <__alt_data_end+0xff80493c>
  804a9c:	0080630e 	bge	zero,r2,804c2c <__subdf3+0x3d4>
  804aa0:	48003026 	beq	r9,zero,804b64 <__subdf3+0x30c>
  804aa4:	0101ffc4 	movi	r4,2047
  804aa8:	813f8c26 	beq	r16,r4,8048dc <__alt_data_end+0xff8048dc>
  804aac:	29402034 	orhi	r5,r5,128
  804ab0:	01000e04 	movi	r4,56
  804ab4:	2080a90e 	bge	r4,r2,804d5c <__subdf3+0x504>
  804ab8:	298cb03a 	or	r6,r5,r6
  804abc:	3012c03a 	cmpne	r9,r6,zero
  804ac0:	0005883a 	mov	r2,zero
  804ac4:	4c53883a 	add	r9,r9,r17
  804ac8:	4c63803a 	cmpltu	r17,r9,r17
  804acc:	10c7883a 	add	r3,r2,r3
  804ad0:	88c7883a 	add	r3,r17,r3
  804ad4:	4823883a 	mov	r17,r9
  804ad8:	1880202c 	andhi	r2,r3,128
  804adc:	1000d026 	beq	r2,zero,804e20 <__subdf3+0x5c8>
  804ae0:	84000044 	addi	r16,r16,1
  804ae4:	0081ffc4 	movi	r2,2047
  804ae8:	8080fe26 	beq	r16,r2,804ee4 <__subdf3+0x68c>
  804aec:	00bfe034 	movhi	r2,65408
  804af0:	10bfffc4 	addi	r2,r2,-1
  804af4:	1886703a 	and	r3,r3,r2
  804af8:	880ad07a 	srli	r5,r17,1
  804afc:	180497fa 	slli	r2,r3,31
  804b00:	8900004c 	andi	r4,r17,1
  804b04:	2922b03a 	or	r17,r5,r4
  804b08:	1806d07a 	srli	r3,r3,1
  804b0c:	1462b03a 	or	r17,r2,r17
  804b10:	3825883a 	mov	r18,r7
  804b14:	003f7106 	br	8048dc <__alt_data_end+0xff8048dc>
  804b18:	2984b03a 	or	r2,r5,r6
  804b1c:	103f6826 	beq	r2,zero,8048c0 <__alt_data_end+0xff8048c0>
  804b20:	39c03fcc 	andi	r7,r7,255
  804b24:	003f6706 	br	8048c4 <__alt_data_end+0xff8048c4>
  804b28:	4086b03a 	or	r3,r8,r2
  804b2c:	18015226 	beq	r3,zero,805078 <__subdf3+0x820>
  804b30:	00c00434 	movhi	r3,16
  804b34:	41400234 	orhi	r5,r8,8
  804b38:	18ffffc4 	addi	r3,r3,-1
  804b3c:	28ca703a 	and	r5,r5,r3
  804b40:	003f7e06 	br	80493c <__alt_data_end+0xff80493c>
  804b44:	10bfffc4 	addi	r2,r2,-1
  804b48:	1000491e 	bne	r2,zero,804c70 <__subdf3+0x418>
  804b4c:	898fc83a 	sub	r7,r17,r6
  804b50:	89e3803a 	cmpltu	r17,r17,r7
  804b54:	1947c83a 	sub	r3,r3,r5
  804b58:	1c47c83a 	sub	r3,r3,r17
  804b5c:	3823883a 	mov	r17,r7
  804b60:	003f9b06 	br	8049d0 <__alt_data_end+0xff8049d0>
  804b64:	2988b03a 	or	r4,r5,r6
  804b68:	203f5c26 	beq	r4,zero,8048dc <__alt_data_end+0xff8048dc>
  804b6c:	10bfffc4 	addi	r2,r2,-1
  804b70:	1000931e 	bne	r2,zero,804dc0 <__subdf3+0x568>
  804b74:	898d883a 	add	r6,r17,r6
  804b78:	3463803a 	cmpltu	r17,r6,r17
  804b7c:	1947883a 	add	r3,r3,r5
  804b80:	88c7883a 	add	r3,r17,r3
  804b84:	3023883a 	mov	r17,r6
  804b88:	003fd306 	br	804ad8 <__alt_data_end+0xff804ad8>
  804b8c:	1000541e 	bne	r2,zero,804ce0 <__subdf3+0x488>
  804b90:	80800044 	addi	r2,r16,1
  804b94:	1081ffcc 	andi	r2,r2,2047
  804b98:	01000044 	movi	r4,1
  804b9c:	2080a20e 	bge	r4,r2,804e28 <__subdf3+0x5d0>
  804ba0:	8989c83a 	sub	r4,r17,r6
  804ba4:	8905803a 	cmpltu	r2,r17,r4
  804ba8:	1967c83a 	sub	r19,r3,r5
  804bac:	98a7c83a 	sub	r19,r19,r2
  804bb0:	9880202c 	andhi	r2,r19,128
  804bb4:	10006326 	beq	r2,zero,804d44 <__subdf3+0x4ec>
  804bb8:	3463c83a 	sub	r17,r6,r17
  804bbc:	28c7c83a 	sub	r3,r5,r3
  804bc0:	344d803a 	cmpltu	r6,r6,r17
  804bc4:	19a7c83a 	sub	r19,r3,r6
  804bc8:	3825883a 	mov	r18,r7
  804bcc:	983f861e 	bne	r19,zero,8049e8 <__alt_data_end+0xff8049e8>
  804bd0:	8809883a 	mov	r4,r17
  804bd4:	08056100 	call	805610 <__clzsi2>
  804bd8:	10800804 	addi	r2,r2,32
  804bdc:	113ffe04 	addi	r4,r2,-8
  804be0:	00c007c4 	movi	r3,31
  804be4:	193f850e 	bge	r3,r4,8049fc <__alt_data_end+0xff8049fc>
  804be8:	10bff604 	addi	r2,r2,-40
  804bec:	8884983a 	sll	r2,r17,r2
  804bf0:	0023883a 	mov	r17,zero
  804bf4:	243f880e 	bge	r4,r16,804a18 <__alt_data_end+0xff804a18>
  804bf8:	00ffe034 	movhi	r3,65408
  804bfc:	18ffffc4 	addi	r3,r3,-1
  804c00:	8121c83a 	sub	r16,r16,r4
  804c04:	10c6703a 	and	r3,r2,r3
  804c08:	003f3406 	br	8048dc <__alt_data_end+0xff8048dc>
  804c0c:	9100004c 	andi	r4,r18,1
  804c10:	000b883a 	mov	r5,zero
  804c14:	0005883a 	mov	r2,zero
  804c18:	003f4806 	br	80493c <__alt_data_end+0xff80493c>
  804c1c:	298cb03a 	or	r6,r5,r6
  804c20:	300cc03a 	cmpne	r6,r6,zero
  804c24:	0005883a 	mov	r2,zero
  804c28:	003f6406 	br	8049bc <__alt_data_end+0xff8049bc>
  804c2c:	10009a1e 	bne	r2,zero,804e98 <__subdf3+0x640>
  804c30:	82400044 	addi	r9,r16,1
  804c34:	4881ffcc 	andi	r2,r9,2047
  804c38:	02800044 	movi	r10,1
  804c3c:	5080670e 	bge	r10,r2,804ddc <__subdf3+0x584>
  804c40:	0081ffc4 	movi	r2,2047
  804c44:	4880af26 	beq	r9,r2,804f04 <__subdf3+0x6ac>
  804c48:	898d883a 	add	r6,r17,r6
  804c4c:	1945883a 	add	r2,r3,r5
  804c50:	3447803a 	cmpltu	r3,r6,r17
  804c54:	1887883a 	add	r3,r3,r2
  804c58:	182297fa 	slli	r17,r3,31
  804c5c:	300cd07a 	srli	r6,r6,1
  804c60:	1806d07a 	srli	r3,r3,1
  804c64:	4821883a 	mov	r16,r9
  804c68:	89a2b03a 	or	r17,r17,r6
  804c6c:	003f1b06 	br	8048dc <__alt_data_end+0xff8048dc>
  804c70:	0101ffc4 	movi	r4,2047
  804c74:	813f441e 	bne	r16,r4,804988 <__alt_data_end+0xff804988>
  804c78:	003f1806 	br	8048dc <__alt_data_end+0xff8048dc>
  804c7c:	843ff844 	addi	r16,r16,-31
  804c80:	01400804 	movi	r5,32
  804c84:	1408d83a 	srl	r4,r2,r16
  804c88:	19405026 	beq	r3,r5,804dcc <__subdf3+0x574>
  804c8c:	01401004 	movi	r5,64
  804c90:	28c7c83a 	sub	r3,r5,r3
  804c94:	10c4983a 	sll	r2,r2,r3
  804c98:	88a2b03a 	or	r17,r17,r2
  804c9c:	8822c03a 	cmpne	r17,r17,zero
  804ca0:	2462b03a 	or	r17,r4,r17
  804ca4:	0007883a 	mov	r3,zero
  804ca8:	0021883a 	mov	r16,zero
  804cac:	003f6d06 	br	804a64 <__alt_data_end+0xff804a64>
  804cb0:	11fff804 	addi	r7,r2,-32
  804cb4:	01000804 	movi	r4,32
  804cb8:	29ced83a 	srl	r7,r5,r7
  804cbc:	11004526 	beq	r2,r4,804dd4 <__subdf3+0x57c>
  804cc0:	01001004 	movi	r4,64
  804cc4:	2089c83a 	sub	r4,r4,r2
  804cc8:	2904983a 	sll	r2,r5,r4
  804ccc:	118cb03a 	or	r6,r2,r6
  804cd0:	300cc03a 	cmpne	r6,r6,zero
  804cd4:	398cb03a 	or	r6,r7,r6
  804cd8:	0005883a 	mov	r2,zero
  804cdc:	003f3706 	br	8049bc <__alt_data_end+0xff8049bc>
  804ce0:	80002a26 	beq	r16,zero,804d8c <__subdf3+0x534>
  804ce4:	0101ffc4 	movi	r4,2047
  804ce8:	49006626 	beq	r9,r4,804e84 <__subdf3+0x62c>
  804cec:	0085c83a 	sub	r2,zero,r2
  804cf0:	18c02034 	orhi	r3,r3,128
  804cf4:	01000e04 	movi	r4,56
  804cf8:	20807e16 	blt	r4,r2,804ef4 <__subdf3+0x69c>
  804cfc:	010007c4 	movi	r4,31
  804d00:	2080e716 	blt	r4,r2,8050a0 <__subdf3+0x848>
  804d04:	01000804 	movi	r4,32
  804d08:	2089c83a 	sub	r4,r4,r2
  804d0c:	1914983a 	sll	r10,r3,r4
  804d10:	8890d83a 	srl	r8,r17,r2
  804d14:	8908983a 	sll	r4,r17,r4
  804d18:	1884d83a 	srl	r2,r3,r2
  804d1c:	5222b03a 	or	r17,r10,r8
  804d20:	2006c03a 	cmpne	r3,r4,zero
  804d24:	88e2b03a 	or	r17,r17,r3
  804d28:	3463c83a 	sub	r17,r6,r17
  804d2c:	2885c83a 	sub	r2,r5,r2
  804d30:	344d803a 	cmpltu	r6,r6,r17
  804d34:	1187c83a 	sub	r3,r2,r6
  804d38:	4821883a 	mov	r16,r9
  804d3c:	3825883a 	mov	r18,r7
  804d40:	003f2306 	br	8049d0 <__alt_data_end+0xff8049d0>
  804d44:	24d0b03a 	or	r8,r4,r19
  804d48:	40001b1e 	bne	r8,zero,804db8 <__subdf3+0x560>
  804d4c:	0005883a 	mov	r2,zero
  804d50:	0009883a 	mov	r4,zero
  804d54:	0021883a 	mov	r16,zero
  804d58:	003f4906 	br	804a80 <__alt_data_end+0xff804a80>
  804d5c:	010007c4 	movi	r4,31
  804d60:	20803a16 	blt	r4,r2,804e4c <__subdf3+0x5f4>
  804d64:	01000804 	movi	r4,32
  804d68:	2089c83a 	sub	r4,r4,r2
  804d6c:	2912983a 	sll	r9,r5,r4
  804d70:	3090d83a 	srl	r8,r6,r2
  804d74:	3108983a 	sll	r4,r6,r4
  804d78:	2884d83a 	srl	r2,r5,r2
  804d7c:	4a12b03a 	or	r9,r9,r8
  804d80:	2008c03a 	cmpne	r4,r4,zero
  804d84:	4912b03a 	or	r9,r9,r4
  804d88:	003f4e06 	br	804ac4 <__alt_data_end+0xff804ac4>
  804d8c:	1c48b03a 	or	r4,r3,r17
  804d90:	20003c26 	beq	r4,zero,804e84 <__subdf3+0x62c>
  804d94:	0084303a 	nor	r2,zero,r2
  804d98:	1000381e 	bne	r2,zero,804e7c <__subdf3+0x624>
  804d9c:	3463c83a 	sub	r17,r6,r17
  804da0:	28c5c83a 	sub	r2,r5,r3
  804da4:	344d803a 	cmpltu	r6,r6,r17
  804da8:	1187c83a 	sub	r3,r2,r6
  804dac:	4821883a 	mov	r16,r9
  804db0:	3825883a 	mov	r18,r7
  804db4:	003f0606 	br	8049d0 <__alt_data_end+0xff8049d0>
  804db8:	2023883a 	mov	r17,r4
  804dbc:	003f0906 	br	8049e4 <__alt_data_end+0xff8049e4>
  804dc0:	0101ffc4 	movi	r4,2047
  804dc4:	813f3a1e 	bne	r16,r4,804ab0 <__alt_data_end+0xff804ab0>
  804dc8:	003ec406 	br	8048dc <__alt_data_end+0xff8048dc>
  804dcc:	0005883a 	mov	r2,zero
  804dd0:	003fb106 	br	804c98 <__alt_data_end+0xff804c98>
  804dd4:	0005883a 	mov	r2,zero
  804dd8:	003fbc06 	br	804ccc <__alt_data_end+0xff804ccc>
  804ddc:	1c44b03a 	or	r2,r3,r17
  804de0:	80008e1e 	bne	r16,zero,80501c <__subdf3+0x7c4>
  804de4:	1000c826 	beq	r2,zero,805108 <__subdf3+0x8b0>
  804de8:	2984b03a 	or	r2,r5,r6
  804dec:	103ebb26 	beq	r2,zero,8048dc <__alt_data_end+0xff8048dc>
  804df0:	8989883a 	add	r4,r17,r6
  804df4:	1945883a 	add	r2,r3,r5
  804df8:	2447803a 	cmpltu	r3,r4,r17
  804dfc:	1887883a 	add	r3,r3,r2
  804e00:	1880202c 	andhi	r2,r3,128
  804e04:	2023883a 	mov	r17,r4
  804e08:	103f1626 	beq	r2,zero,804a64 <__alt_data_end+0xff804a64>
  804e0c:	00bfe034 	movhi	r2,65408
  804e10:	10bfffc4 	addi	r2,r2,-1
  804e14:	5021883a 	mov	r16,r10
  804e18:	1886703a 	and	r3,r3,r2
  804e1c:	003eaf06 	br	8048dc <__alt_data_end+0xff8048dc>
  804e20:	3825883a 	mov	r18,r7
  804e24:	003f0f06 	br	804a64 <__alt_data_end+0xff804a64>
  804e28:	1c44b03a 	or	r2,r3,r17
  804e2c:	8000251e 	bne	r16,zero,804ec4 <__subdf3+0x66c>
  804e30:	1000661e 	bne	r2,zero,804fcc <__subdf3+0x774>
  804e34:	2990b03a 	or	r8,r5,r6
  804e38:	40009626 	beq	r8,zero,805094 <__subdf3+0x83c>
  804e3c:	2807883a 	mov	r3,r5
  804e40:	3023883a 	mov	r17,r6
  804e44:	3825883a 	mov	r18,r7
  804e48:	003ea406 	br	8048dc <__alt_data_end+0xff8048dc>
  804e4c:	127ff804 	addi	r9,r2,-32
  804e50:	01000804 	movi	r4,32
  804e54:	2a52d83a 	srl	r9,r5,r9
  804e58:	11008c26 	beq	r2,r4,80508c <__subdf3+0x834>
  804e5c:	01001004 	movi	r4,64
  804e60:	2085c83a 	sub	r2,r4,r2
  804e64:	2884983a 	sll	r2,r5,r2
  804e68:	118cb03a 	or	r6,r2,r6
  804e6c:	300cc03a 	cmpne	r6,r6,zero
  804e70:	4992b03a 	or	r9,r9,r6
  804e74:	0005883a 	mov	r2,zero
  804e78:	003f1206 	br	804ac4 <__alt_data_end+0xff804ac4>
  804e7c:	0101ffc4 	movi	r4,2047
  804e80:	493f9c1e 	bne	r9,r4,804cf4 <__alt_data_end+0xff804cf4>
  804e84:	2807883a 	mov	r3,r5
  804e88:	3023883a 	mov	r17,r6
  804e8c:	4821883a 	mov	r16,r9
  804e90:	3825883a 	mov	r18,r7
  804e94:	003e9106 	br	8048dc <__alt_data_end+0xff8048dc>
  804e98:	80001f1e 	bne	r16,zero,804f18 <__subdf3+0x6c0>
  804e9c:	1c48b03a 	or	r4,r3,r17
  804ea0:	20005a26 	beq	r4,zero,80500c <__subdf3+0x7b4>
  804ea4:	0084303a 	nor	r2,zero,r2
  804ea8:	1000561e 	bne	r2,zero,805004 <__subdf3+0x7ac>
  804eac:	89a3883a 	add	r17,r17,r6
  804eb0:	1945883a 	add	r2,r3,r5
  804eb4:	898d803a 	cmpltu	r6,r17,r6
  804eb8:	3087883a 	add	r3,r6,r2
  804ebc:	4821883a 	mov	r16,r9
  804ec0:	003f0506 	br	804ad8 <__alt_data_end+0xff804ad8>
  804ec4:	10002b1e 	bne	r2,zero,804f74 <__subdf3+0x71c>
  804ec8:	2984b03a 	or	r2,r5,r6
  804ecc:	10008026 	beq	r2,zero,8050d0 <__subdf3+0x878>
  804ed0:	2807883a 	mov	r3,r5
  804ed4:	3023883a 	mov	r17,r6
  804ed8:	3825883a 	mov	r18,r7
  804edc:	0401ffc4 	movi	r16,2047
  804ee0:	003e7e06 	br	8048dc <__alt_data_end+0xff8048dc>
  804ee4:	3809883a 	mov	r4,r7
  804ee8:	0011883a 	mov	r8,zero
  804eec:	0005883a 	mov	r2,zero
  804ef0:	003ee306 	br	804a80 <__alt_data_end+0xff804a80>
  804ef4:	1c62b03a 	or	r17,r3,r17
  804ef8:	8822c03a 	cmpne	r17,r17,zero
  804efc:	0005883a 	mov	r2,zero
  804f00:	003f8906 	br	804d28 <__alt_data_end+0xff804d28>
  804f04:	3809883a 	mov	r4,r7
  804f08:	4821883a 	mov	r16,r9
  804f0c:	0011883a 	mov	r8,zero
  804f10:	0005883a 	mov	r2,zero
  804f14:	003eda06 	br	804a80 <__alt_data_end+0xff804a80>
  804f18:	0101ffc4 	movi	r4,2047
  804f1c:	49003b26 	beq	r9,r4,80500c <__subdf3+0x7b4>
  804f20:	0085c83a 	sub	r2,zero,r2
  804f24:	18c02034 	orhi	r3,r3,128
  804f28:	01000e04 	movi	r4,56
  804f2c:	20806e16 	blt	r4,r2,8050e8 <__subdf3+0x890>
  804f30:	010007c4 	movi	r4,31
  804f34:	20807716 	blt	r4,r2,805114 <__subdf3+0x8bc>
  804f38:	01000804 	movi	r4,32
  804f3c:	2089c83a 	sub	r4,r4,r2
  804f40:	1914983a 	sll	r10,r3,r4
  804f44:	8890d83a 	srl	r8,r17,r2
  804f48:	8908983a 	sll	r4,r17,r4
  804f4c:	1884d83a 	srl	r2,r3,r2
  804f50:	5222b03a 	or	r17,r10,r8
  804f54:	2006c03a 	cmpne	r3,r4,zero
  804f58:	88e2b03a 	or	r17,r17,r3
  804f5c:	89a3883a 	add	r17,r17,r6
  804f60:	1145883a 	add	r2,r2,r5
  804f64:	898d803a 	cmpltu	r6,r17,r6
  804f68:	3087883a 	add	r3,r6,r2
  804f6c:	4821883a 	mov	r16,r9
  804f70:	003ed906 	br	804ad8 <__alt_data_end+0xff804ad8>
  804f74:	2984b03a 	or	r2,r5,r6
  804f78:	10004226 	beq	r2,zero,805084 <__subdf3+0x82c>
  804f7c:	1808d0fa 	srli	r4,r3,3
  804f80:	8822d0fa 	srli	r17,r17,3
  804f84:	1806977a 	slli	r3,r3,29
  804f88:	2080022c 	andhi	r2,r4,8
  804f8c:	1c62b03a 	or	r17,r3,r17
  804f90:	10000826 	beq	r2,zero,804fb4 <__subdf3+0x75c>
  804f94:	2812d0fa 	srli	r9,r5,3
  804f98:	4880022c 	andhi	r2,r9,8
  804f9c:	1000051e 	bne	r2,zero,804fb4 <__subdf3+0x75c>
  804fa0:	300cd0fa 	srli	r6,r6,3
  804fa4:	2804977a 	slli	r2,r5,29
  804fa8:	4809883a 	mov	r4,r9
  804fac:	3825883a 	mov	r18,r7
  804fb0:	11a2b03a 	or	r17,r2,r6
  804fb4:	8806d77a 	srli	r3,r17,29
  804fb8:	200890fa 	slli	r4,r4,3
  804fbc:	882290fa 	slli	r17,r17,3
  804fc0:	0401ffc4 	movi	r16,2047
  804fc4:	1906b03a 	or	r3,r3,r4
  804fc8:	003e4406 	br	8048dc <__alt_data_end+0xff8048dc>
  804fcc:	2984b03a 	or	r2,r5,r6
  804fd0:	103e4226 	beq	r2,zero,8048dc <__alt_data_end+0xff8048dc>
  804fd4:	8989c83a 	sub	r4,r17,r6
  804fd8:	8911803a 	cmpltu	r8,r17,r4
  804fdc:	1945c83a 	sub	r2,r3,r5
  804fe0:	1205c83a 	sub	r2,r2,r8
  804fe4:	1200202c 	andhi	r8,r2,128
  804fe8:	403e9a26 	beq	r8,zero,804a54 <__alt_data_end+0xff804a54>
  804fec:	3463c83a 	sub	r17,r6,r17
  804ff0:	28c5c83a 	sub	r2,r5,r3
  804ff4:	344d803a 	cmpltu	r6,r6,r17
  804ff8:	1187c83a 	sub	r3,r2,r6
  804ffc:	3825883a 	mov	r18,r7
  805000:	003e3606 	br	8048dc <__alt_data_end+0xff8048dc>
  805004:	0101ffc4 	movi	r4,2047
  805008:	493fc71e 	bne	r9,r4,804f28 <__alt_data_end+0xff804f28>
  80500c:	2807883a 	mov	r3,r5
  805010:	3023883a 	mov	r17,r6
  805014:	4821883a 	mov	r16,r9
  805018:	003e3006 	br	8048dc <__alt_data_end+0xff8048dc>
  80501c:	10003626 	beq	r2,zero,8050f8 <__subdf3+0x8a0>
  805020:	2984b03a 	or	r2,r5,r6
  805024:	10001726 	beq	r2,zero,805084 <__subdf3+0x82c>
  805028:	1808d0fa 	srli	r4,r3,3
  80502c:	8822d0fa 	srli	r17,r17,3
  805030:	1806977a 	slli	r3,r3,29
  805034:	2080022c 	andhi	r2,r4,8
  805038:	1c62b03a 	or	r17,r3,r17
  80503c:	10000726 	beq	r2,zero,80505c <__subdf3+0x804>
  805040:	2812d0fa 	srli	r9,r5,3
  805044:	4880022c 	andhi	r2,r9,8
  805048:	1000041e 	bne	r2,zero,80505c <__subdf3+0x804>
  80504c:	300cd0fa 	srli	r6,r6,3
  805050:	2804977a 	slli	r2,r5,29
  805054:	4809883a 	mov	r4,r9
  805058:	11a2b03a 	or	r17,r2,r6
  80505c:	8806d77a 	srli	r3,r17,29
  805060:	200890fa 	slli	r4,r4,3
  805064:	882290fa 	slli	r17,r17,3
  805068:	3825883a 	mov	r18,r7
  80506c:	1906b03a 	or	r3,r3,r4
  805070:	0401ffc4 	movi	r16,2047
  805074:	003e1906 	br	8048dc <__alt_data_end+0xff8048dc>
  805078:	000b883a 	mov	r5,zero
  80507c:	0005883a 	mov	r2,zero
  805080:	003e2e06 	br	80493c <__alt_data_end+0xff80493c>
  805084:	0401ffc4 	movi	r16,2047
  805088:	003e1406 	br	8048dc <__alt_data_end+0xff8048dc>
  80508c:	0005883a 	mov	r2,zero
  805090:	003f7506 	br	804e68 <__alt_data_end+0xff804e68>
  805094:	0005883a 	mov	r2,zero
  805098:	0009883a 	mov	r4,zero
  80509c:	003e7806 	br	804a80 <__alt_data_end+0xff804a80>
  8050a0:	123ff804 	addi	r8,r2,-32
  8050a4:	01000804 	movi	r4,32
  8050a8:	1a10d83a 	srl	r8,r3,r8
  8050ac:	11002526 	beq	r2,r4,805144 <__subdf3+0x8ec>
  8050b0:	01001004 	movi	r4,64
  8050b4:	2085c83a 	sub	r2,r4,r2
  8050b8:	1884983a 	sll	r2,r3,r2
  8050bc:	1444b03a 	or	r2,r2,r17
  8050c0:	1004c03a 	cmpne	r2,r2,zero
  8050c4:	40a2b03a 	or	r17,r8,r2
  8050c8:	0005883a 	mov	r2,zero
  8050cc:	003f1606 	br	804d28 <__alt_data_end+0xff804d28>
  8050d0:	02000434 	movhi	r8,16
  8050d4:	0009883a 	mov	r4,zero
  8050d8:	423fffc4 	addi	r8,r8,-1
  8050dc:	00bfffc4 	movi	r2,-1
  8050e0:	0401ffc4 	movi	r16,2047
  8050e4:	003e6606 	br	804a80 <__alt_data_end+0xff804a80>
  8050e8:	1c62b03a 	or	r17,r3,r17
  8050ec:	8822c03a 	cmpne	r17,r17,zero
  8050f0:	0005883a 	mov	r2,zero
  8050f4:	003f9906 	br	804f5c <__alt_data_end+0xff804f5c>
  8050f8:	2807883a 	mov	r3,r5
  8050fc:	3023883a 	mov	r17,r6
  805100:	0401ffc4 	movi	r16,2047
  805104:	003df506 	br	8048dc <__alt_data_end+0xff8048dc>
  805108:	2807883a 	mov	r3,r5
  80510c:	3023883a 	mov	r17,r6
  805110:	003df206 	br	8048dc <__alt_data_end+0xff8048dc>
  805114:	123ff804 	addi	r8,r2,-32
  805118:	01000804 	movi	r4,32
  80511c:	1a10d83a 	srl	r8,r3,r8
  805120:	11000a26 	beq	r2,r4,80514c <__subdf3+0x8f4>
  805124:	01001004 	movi	r4,64
  805128:	2085c83a 	sub	r2,r4,r2
  80512c:	1884983a 	sll	r2,r3,r2
  805130:	1444b03a 	or	r2,r2,r17
  805134:	1004c03a 	cmpne	r2,r2,zero
  805138:	40a2b03a 	or	r17,r8,r2
  80513c:	0005883a 	mov	r2,zero
  805140:	003f8606 	br	804f5c <__alt_data_end+0xff804f5c>
  805144:	0005883a 	mov	r2,zero
  805148:	003fdc06 	br	8050bc <__alt_data_end+0xff8050bc>
  80514c:	0005883a 	mov	r2,zero
  805150:	003ff706 	br	805130 <__alt_data_end+0xff805130>

00805154 <__fixdfsi>:
  805154:	280cd53a 	srli	r6,r5,20
  805158:	00c00434 	movhi	r3,16
  80515c:	18ffffc4 	addi	r3,r3,-1
  805160:	3181ffcc 	andi	r6,r6,2047
  805164:	01c0ff84 	movi	r7,1022
  805168:	28c6703a 	and	r3,r5,r3
  80516c:	280ad7fa 	srli	r5,r5,31
  805170:	3980120e 	bge	r7,r6,8051bc <__fixdfsi+0x68>
  805174:	00810744 	movi	r2,1053
  805178:	11800c16 	blt	r2,r6,8051ac <__fixdfsi+0x58>
  80517c:	00810cc4 	movi	r2,1075
  805180:	1185c83a 	sub	r2,r2,r6
  805184:	01c007c4 	movi	r7,31
  805188:	18c00434 	orhi	r3,r3,16
  80518c:	38800d16 	blt	r7,r2,8051c4 <__fixdfsi+0x70>
  805190:	31befb44 	addi	r6,r6,-1043
  805194:	2084d83a 	srl	r2,r4,r2
  805198:	1986983a 	sll	r3,r3,r6
  80519c:	1884b03a 	or	r2,r3,r2
  8051a0:	28000726 	beq	r5,zero,8051c0 <__fixdfsi+0x6c>
  8051a4:	0085c83a 	sub	r2,zero,r2
  8051a8:	f800283a 	ret
  8051ac:	00a00034 	movhi	r2,32768
  8051b0:	10bfffc4 	addi	r2,r2,-1
  8051b4:	2885883a 	add	r2,r5,r2
  8051b8:	f800283a 	ret
  8051bc:	0005883a 	mov	r2,zero
  8051c0:	f800283a 	ret
  8051c4:	008104c4 	movi	r2,1043
  8051c8:	1185c83a 	sub	r2,r2,r6
  8051cc:	1884d83a 	srl	r2,r3,r2
  8051d0:	003ff306 	br	8051a0 <__alt_data_end+0xff8051a0>

008051d4 <__floatsidf>:
  8051d4:	defffd04 	addi	sp,sp,-12
  8051d8:	dfc00215 	stw	ra,8(sp)
  8051dc:	dc400115 	stw	r17,4(sp)
  8051e0:	dc000015 	stw	r16,0(sp)
  8051e4:	20002b26 	beq	r4,zero,805294 <__floatsidf+0xc0>
  8051e8:	2023883a 	mov	r17,r4
  8051ec:	2020d7fa 	srli	r16,r4,31
  8051f0:	20002d16 	blt	r4,zero,8052a8 <__floatsidf+0xd4>
  8051f4:	8809883a 	mov	r4,r17
  8051f8:	08056100 	call	805610 <__clzsi2>
  8051fc:	01410784 	movi	r5,1054
  805200:	288bc83a 	sub	r5,r5,r2
  805204:	01010cc4 	movi	r4,1075
  805208:	2149c83a 	sub	r4,r4,r5
  80520c:	00c007c4 	movi	r3,31
  805210:	1900160e 	bge	r3,r4,80526c <__floatsidf+0x98>
  805214:	00c104c4 	movi	r3,1043
  805218:	1947c83a 	sub	r3,r3,r5
  80521c:	88c6983a 	sll	r3,r17,r3
  805220:	00800434 	movhi	r2,16
  805224:	10bfffc4 	addi	r2,r2,-1
  805228:	1886703a 	and	r3,r3,r2
  80522c:	2941ffcc 	andi	r5,r5,2047
  805230:	800d883a 	mov	r6,r16
  805234:	0005883a 	mov	r2,zero
  805238:	280a953a 	slli	r5,r5,20
  80523c:	31803fcc 	andi	r6,r6,255
  805240:	01000434 	movhi	r4,16
  805244:	300c97fa 	slli	r6,r6,31
  805248:	213fffc4 	addi	r4,r4,-1
  80524c:	1906703a 	and	r3,r3,r4
  805250:	1946b03a 	or	r3,r3,r5
  805254:	1986b03a 	or	r3,r3,r6
  805258:	dfc00217 	ldw	ra,8(sp)
  80525c:	dc400117 	ldw	r17,4(sp)
  805260:	dc000017 	ldw	r16,0(sp)
  805264:	dec00304 	addi	sp,sp,12
  805268:	f800283a 	ret
  80526c:	00c002c4 	movi	r3,11
  805270:	1887c83a 	sub	r3,r3,r2
  805274:	88c6d83a 	srl	r3,r17,r3
  805278:	8904983a 	sll	r2,r17,r4
  80527c:	01000434 	movhi	r4,16
  805280:	213fffc4 	addi	r4,r4,-1
  805284:	2941ffcc 	andi	r5,r5,2047
  805288:	1906703a 	and	r3,r3,r4
  80528c:	800d883a 	mov	r6,r16
  805290:	003fe906 	br	805238 <__alt_data_end+0xff805238>
  805294:	000d883a 	mov	r6,zero
  805298:	000b883a 	mov	r5,zero
  80529c:	0007883a 	mov	r3,zero
  8052a0:	0005883a 	mov	r2,zero
  8052a4:	003fe406 	br	805238 <__alt_data_end+0xff805238>
  8052a8:	0123c83a 	sub	r17,zero,r4
  8052ac:	003fd106 	br	8051f4 <__alt_data_end+0xff8051f4>

008052b0 <__floatunsidf>:
  8052b0:	defffe04 	addi	sp,sp,-8
  8052b4:	dc000015 	stw	r16,0(sp)
  8052b8:	dfc00115 	stw	ra,4(sp)
  8052bc:	2021883a 	mov	r16,r4
  8052c0:	20002226 	beq	r4,zero,80534c <__floatunsidf+0x9c>
  8052c4:	08056100 	call	805610 <__clzsi2>
  8052c8:	01010784 	movi	r4,1054
  8052cc:	2089c83a 	sub	r4,r4,r2
  8052d0:	01810cc4 	movi	r6,1075
  8052d4:	310dc83a 	sub	r6,r6,r4
  8052d8:	00c007c4 	movi	r3,31
  8052dc:	1980120e 	bge	r3,r6,805328 <__floatunsidf+0x78>
  8052e0:	00c104c4 	movi	r3,1043
  8052e4:	1907c83a 	sub	r3,r3,r4
  8052e8:	80ca983a 	sll	r5,r16,r3
  8052ec:	00800434 	movhi	r2,16
  8052f0:	10bfffc4 	addi	r2,r2,-1
  8052f4:	2101ffcc 	andi	r4,r4,2047
  8052f8:	0021883a 	mov	r16,zero
  8052fc:	288a703a 	and	r5,r5,r2
  805300:	2008953a 	slli	r4,r4,20
  805304:	00c00434 	movhi	r3,16
  805308:	18ffffc4 	addi	r3,r3,-1
  80530c:	28c6703a 	and	r3,r5,r3
  805310:	8005883a 	mov	r2,r16
  805314:	1906b03a 	or	r3,r3,r4
  805318:	dfc00117 	ldw	ra,4(sp)
  80531c:	dc000017 	ldw	r16,0(sp)
  805320:	dec00204 	addi	sp,sp,8
  805324:	f800283a 	ret
  805328:	00c002c4 	movi	r3,11
  80532c:	188bc83a 	sub	r5,r3,r2
  805330:	814ad83a 	srl	r5,r16,r5
  805334:	00c00434 	movhi	r3,16
  805338:	18ffffc4 	addi	r3,r3,-1
  80533c:	81a0983a 	sll	r16,r16,r6
  805340:	2101ffcc 	andi	r4,r4,2047
  805344:	28ca703a 	and	r5,r5,r3
  805348:	003fed06 	br	805300 <__alt_data_end+0xff805300>
  80534c:	0009883a 	mov	r4,zero
  805350:	000b883a 	mov	r5,zero
  805354:	003fea06 	br	805300 <__alt_data_end+0xff805300>

00805358 <__extendsfdf2>:
  805358:	200ad5fa 	srli	r5,r4,23
  80535c:	defffd04 	addi	sp,sp,-12
  805360:	dc400115 	stw	r17,4(sp)
  805364:	29403fcc 	andi	r5,r5,255
  805368:	29800044 	addi	r6,r5,1
  80536c:	04402034 	movhi	r17,128
  805370:	dc000015 	stw	r16,0(sp)
  805374:	8c7fffc4 	addi	r17,r17,-1
  805378:	dfc00215 	stw	ra,8(sp)
  80537c:	31803fcc 	andi	r6,r6,255
  805380:	00800044 	movi	r2,1
  805384:	8922703a 	and	r17,r17,r4
  805388:	2020d7fa 	srli	r16,r4,31
  80538c:	1180110e 	bge	r2,r6,8053d4 <__extendsfdf2+0x7c>
  805390:	880cd0fa 	srli	r6,r17,3
  805394:	8822977a 	slli	r17,r17,29
  805398:	2940e004 	addi	r5,r5,896
  80539c:	2941ffcc 	andi	r5,r5,2047
  8053a0:	2804953a 	slli	r2,r5,20
  8053a4:	01400434 	movhi	r5,16
  8053a8:	800697fa 	slli	r3,r16,31
  8053ac:	297fffc4 	addi	r5,r5,-1
  8053b0:	314a703a 	and	r5,r6,r5
  8053b4:	288ab03a 	or	r5,r5,r2
  8053b8:	28c6b03a 	or	r3,r5,r3
  8053bc:	8805883a 	mov	r2,r17
  8053c0:	dfc00217 	ldw	ra,8(sp)
  8053c4:	dc400117 	ldw	r17,4(sp)
  8053c8:	dc000017 	ldw	r16,0(sp)
  8053cc:	dec00304 	addi	sp,sp,12
  8053d0:	f800283a 	ret
  8053d4:	2800111e 	bne	r5,zero,80541c <__extendsfdf2+0xc4>
  8053d8:	88001c26 	beq	r17,zero,80544c <__extendsfdf2+0xf4>
  8053dc:	8809883a 	mov	r4,r17
  8053e0:	08056100 	call	805610 <__clzsi2>
  8053e4:	00c00284 	movi	r3,10
  8053e8:	18801b16 	blt	r3,r2,805458 <__extendsfdf2+0x100>
  8053ec:	018002c4 	movi	r6,11
  8053f0:	308dc83a 	sub	r6,r6,r2
  8053f4:	11000544 	addi	r4,r2,21
  8053f8:	8986d83a 	srl	r3,r17,r6
  8053fc:	8922983a 	sll	r17,r17,r4
  805400:	0180e244 	movi	r6,905
  805404:	01400434 	movhi	r5,16
  805408:	3085c83a 	sub	r2,r6,r2
  80540c:	297fffc4 	addi	r5,r5,-1
  805410:	194c703a 	and	r6,r3,r5
  805414:	1141ffcc 	andi	r5,r2,2047
  805418:	003fe006 	br	80539c <__alt_data_end+0xff80539c>
  80541c:	88000826 	beq	r17,zero,805440 <__extendsfdf2+0xe8>
  805420:	880cd0fa 	srli	r6,r17,3
  805424:	00800434 	movhi	r2,16
  805428:	10bfffc4 	addi	r2,r2,-1
  80542c:	31800234 	orhi	r6,r6,8
  805430:	8822977a 	slli	r17,r17,29
  805434:	308c703a 	and	r6,r6,r2
  805438:	0141ffc4 	movi	r5,2047
  80543c:	003fd706 	br	80539c <__alt_data_end+0xff80539c>
  805440:	0141ffc4 	movi	r5,2047
  805444:	000d883a 	mov	r6,zero
  805448:	003fd406 	br	80539c <__alt_data_end+0xff80539c>
  80544c:	000b883a 	mov	r5,zero
  805450:	000d883a 	mov	r6,zero
  805454:	003fd106 	br	80539c <__alt_data_end+0xff80539c>
  805458:	11bffd44 	addi	r6,r2,-11
  80545c:	8986983a 	sll	r3,r17,r6
  805460:	0023883a 	mov	r17,zero
  805464:	003fe606 	br	805400 <__alt_data_end+0xff805400>

00805468 <__truncdfsf2>:
  805468:	2810d53a 	srli	r8,r5,20
  80546c:	01c00434 	movhi	r7,16
  805470:	39ffffc4 	addi	r7,r7,-1
  805474:	29ce703a 	and	r7,r5,r7
  805478:	4201ffcc 	andi	r8,r8,2047
  80547c:	380e90fa 	slli	r7,r7,3
  805480:	200cd77a 	srli	r6,r4,29
  805484:	42400044 	addi	r9,r8,1
  805488:	4a41ffcc 	andi	r9,r9,2047
  80548c:	00c00044 	movi	r3,1
  805490:	280ad7fa 	srli	r5,r5,31
  805494:	31ceb03a 	or	r7,r6,r7
  805498:	200490fa 	slli	r2,r4,3
  80549c:	1a40230e 	bge	r3,r9,80552c <__truncdfsf2+0xc4>
  8054a0:	40ff2004 	addi	r3,r8,-896
  8054a4:	01803f84 	movi	r6,254
  8054a8:	30c01516 	blt	r6,r3,805500 <__truncdfsf2+0x98>
  8054ac:	00c0380e 	bge	zero,r3,805590 <__truncdfsf2+0x128>
  8054b0:	200c91ba 	slli	r6,r4,6
  8054b4:	380e90fa 	slli	r7,r7,3
  8054b8:	1004d77a 	srli	r2,r2,29
  8054bc:	300cc03a 	cmpne	r6,r6,zero
  8054c0:	31ccb03a 	or	r6,r6,r7
  8054c4:	308cb03a 	or	r6,r6,r2
  8054c8:	308001cc 	andi	r2,r6,7
  8054cc:	10000426 	beq	r2,zero,8054e0 <__truncdfsf2+0x78>
  8054d0:	308003cc 	andi	r2,r6,15
  8054d4:	01000104 	movi	r4,4
  8054d8:	11000126 	beq	r2,r4,8054e0 <__truncdfsf2+0x78>
  8054dc:	31800104 	addi	r6,r6,4
  8054e0:	3081002c 	andhi	r2,r6,1024
  8054e4:	10001626 	beq	r2,zero,805540 <__truncdfsf2+0xd8>
  8054e8:	18c00044 	addi	r3,r3,1
  8054ec:	00803fc4 	movi	r2,255
  8054f0:	18800326 	beq	r3,r2,805500 <__truncdfsf2+0x98>
  8054f4:	300c91ba 	slli	r6,r6,6
  8054f8:	300cd27a 	srli	r6,r6,9
  8054fc:	00000206 	br	805508 <__truncdfsf2+0xa0>
  805500:	00ffffc4 	movi	r3,-1
  805504:	000d883a 	mov	r6,zero
  805508:	18c03fcc 	andi	r3,r3,255
  80550c:	180895fa 	slli	r4,r3,23
  805510:	00c02034 	movhi	r3,128
  805514:	280a97fa 	slli	r5,r5,31
  805518:	18ffffc4 	addi	r3,r3,-1
  80551c:	30c6703a 	and	r3,r6,r3
  805520:	1906b03a 	or	r3,r3,r4
  805524:	1944b03a 	or	r2,r3,r5
  805528:	f800283a 	ret
  80552c:	40000b1e 	bne	r8,zero,80555c <__truncdfsf2+0xf4>
  805530:	388cb03a 	or	r6,r7,r2
  805534:	0007883a 	mov	r3,zero
  805538:	30000426 	beq	r6,zero,80554c <__truncdfsf2+0xe4>
  80553c:	01800144 	movi	r6,5
  805540:	00803fc4 	movi	r2,255
  805544:	300cd0fa 	srli	r6,r6,3
  805548:	18800a26 	beq	r3,r2,805574 <__truncdfsf2+0x10c>
  80554c:	00802034 	movhi	r2,128
  805550:	10bfffc4 	addi	r2,r2,-1
  805554:	308c703a 	and	r6,r6,r2
  805558:	003feb06 	br	805508 <__alt_data_end+0xff805508>
  80555c:	3888b03a 	or	r4,r7,r2
  805560:	203fe726 	beq	r4,zero,805500 <__alt_data_end+0xff805500>
  805564:	380c90fa 	slli	r6,r7,3
  805568:	00c03fc4 	movi	r3,255
  80556c:	31808034 	orhi	r6,r6,512
  805570:	003fd506 	br	8054c8 <__alt_data_end+0xff8054c8>
  805574:	303fe226 	beq	r6,zero,805500 <__alt_data_end+0xff805500>
  805578:	00802034 	movhi	r2,128
  80557c:	31801034 	orhi	r6,r6,64
  805580:	10bfffc4 	addi	r2,r2,-1
  805584:	00ffffc4 	movi	r3,-1
  805588:	308c703a 	and	r6,r6,r2
  80558c:	003fde06 	br	805508 <__alt_data_end+0xff805508>
  805590:	013ffa44 	movi	r4,-23
  805594:	19000e16 	blt	r3,r4,8055d0 <__truncdfsf2+0x168>
  805598:	01000784 	movi	r4,30
  80559c:	20c9c83a 	sub	r4,r4,r3
  8055a0:	018007c4 	movi	r6,31
  8055a4:	39c02034 	orhi	r7,r7,128
  8055a8:	31000b16 	blt	r6,r4,8055d8 <__truncdfsf2+0x170>
  8055ac:	423f2084 	addi	r8,r8,-894
  8055b0:	120c983a 	sll	r6,r2,r8
  8055b4:	3a0e983a 	sll	r7,r7,r8
  8055b8:	1104d83a 	srl	r2,r2,r4
  8055bc:	300cc03a 	cmpne	r6,r6,zero
  8055c0:	31ceb03a 	or	r7,r6,r7
  8055c4:	388cb03a 	or	r6,r7,r2
  8055c8:	0007883a 	mov	r3,zero
  8055cc:	003fbe06 	br	8054c8 <__alt_data_end+0xff8054c8>
  8055d0:	0007883a 	mov	r3,zero
  8055d4:	003fd906 	br	80553c <__alt_data_end+0xff80553c>
  8055d8:	01bfff84 	movi	r6,-2
  8055dc:	30cdc83a 	sub	r6,r6,r3
  8055e0:	00c00804 	movi	r3,32
  8055e4:	398cd83a 	srl	r6,r7,r6
  8055e8:	20c00726 	beq	r4,r3,805608 <__truncdfsf2+0x1a0>
  8055ec:	423f2884 	addi	r8,r8,-862
  8055f0:	3a0e983a 	sll	r7,r7,r8
  8055f4:	3884b03a 	or	r2,r7,r2
  8055f8:	1004c03a 	cmpne	r2,r2,zero
  8055fc:	118cb03a 	or	r6,r2,r6
  805600:	0007883a 	mov	r3,zero
  805604:	003fb006 	br	8054c8 <__alt_data_end+0xff8054c8>
  805608:	000f883a 	mov	r7,zero
  80560c:	003ff906 	br	8055f4 <__alt_data_end+0xff8055f4>

00805610 <__clzsi2>:
  805610:	00bfffd4 	movui	r2,65535
  805614:	11000536 	bltu	r2,r4,80562c <__clzsi2+0x1c>
  805618:	00803fc4 	movi	r2,255
  80561c:	11000f36 	bltu	r2,r4,80565c <__clzsi2+0x4c>
  805620:	00800804 	movi	r2,32
  805624:	0007883a 	mov	r3,zero
  805628:	00000506 	br	805640 <__clzsi2+0x30>
  80562c:	00804034 	movhi	r2,256
  805630:	10bfffc4 	addi	r2,r2,-1
  805634:	11000c2e 	bgeu	r2,r4,805668 <__clzsi2+0x58>
  805638:	00800204 	movi	r2,8
  80563c:	00c00604 	movi	r3,24
  805640:	20c8d83a 	srl	r4,r4,r3
  805644:	00c02074 	movhi	r3,129
  805648:	18ec1304 	addi	r3,r3,-20404
  80564c:	1909883a 	add	r4,r3,r4
  805650:	20c00003 	ldbu	r3,0(r4)
  805654:	10c5c83a 	sub	r2,r2,r3
  805658:	f800283a 	ret
  80565c:	00800604 	movi	r2,24
  805660:	00c00204 	movi	r3,8
  805664:	003ff606 	br	805640 <__alt_data_end+0xff805640>
  805668:	00800404 	movi	r2,16
  80566c:	1007883a 	mov	r3,r2
  805670:	003ff306 	br	805640 <__alt_data_end+0xff805640>

00805674 <fcvt>:
  805674:	defffd04 	addi	sp,sp,-12
  805678:	d8800317 	ldw	r2,12(sp)
  80567c:	d8000115 	stw	zero,4(sp)
  805680:	dfc00215 	stw	ra,8(sp)
  805684:	d8800015 	stw	r2,0(sp)
  805688:	0805ac80 	call	805ac8 <fcvtbuf>
  80568c:	dfc00217 	ldw	ra,8(sp)
  805690:	dec00304 	addi	sp,sp,12
  805694:	f800283a 	ret

00805698 <fcvtf>:
  805698:	defffb04 	addi	sp,sp,-20
  80569c:	dfc00415 	stw	ra,16(sp)
  8056a0:	dc800315 	stw	r18,12(sp)
  8056a4:	dc400215 	stw	r17,8(sp)
  8056a8:	3825883a 	mov	r18,r7
  8056ac:	3023883a 	mov	r17,r6
  8056b0:	dc000115 	stw	r16,4(sp)
  8056b4:	2821883a 	mov	r16,r5
  8056b8:	08053580 	call	805358 <__extendsfdf2>
  8056bc:	880f883a 	mov	r7,r17
  8056c0:	dc800015 	stw	r18,0(sp)
  8056c4:	800d883a 	mov	r6,r16
  8056c8:	1009883a 	mov	r4,r2
  8056cc:	180b883a 	mov	r5,r3
  8056d0:	08056740 	call	805674 <fcvt>
  8056d4:	dfc00417 	ldw	ra,16(sp)
  8056d8:	dc800317 	ldw	r18,12(sp)
  8056dc:	dc400217 	ldw	r17,8(sp)
  8056e0:	dc000117 	ldw	r16,4(sp)
  8056e4:	dec00504 	addi	sp,sp,20
  8056e8:	f800283a 	ret

008056ec <ecvt>:
  8056ec:	defffd04 	addi	sp,sp,-12
  8056f0:	d8800317 	ldw	r2,12(sp)
  8056f4:	d8000115 	stw	zero,4(sp)
  8056f8:	dfc00215 	stw	ra,8(sp)
  8056fc:	d8800015 	stw	r2,0(sp)
  805700:	0805c340 	call	805c34 <ecvtbuf>
  805704:	dfc00217 	ldw	ra,8(sp)
  805708:	dec00304 	addi	sp,sp,12
  80570c:	f800283a 	ret

00805710 <ecvtf>:
  805710:	defffb04 	addi	sp,sp,-20
  805714:	dfc00415 	stw	ra,16(sp)
  805718:	dc800315 	stw	r18,12(sp)
  80571c:	dc400215 	stw	r17,8(sp)
  805720:	3825883a 	mov	r18,r7
  805724:	3023883a 	mov	r17,r6
  805728:	dc000115 	stw	r16,4(sp)
  80572c:	2821883a 	mov	r16,r5
  805730:	08053580 	call	805358 <__extendsfdf2>
  805734:	880f883a 	mov	r7,r17
  805738:	dc800015 	stw	r18,0(sp)
  80573c:	800d883a 	mov	r6,r16
  805740:	1009883a 	mov	r4,r2
  805744:	180b883a 	mov	r5,r3
  805748:	08056ec0 	call	8056ec <ecvt>
  80574c:	dfc00417 	ldw	ra,16(sp)
  805750:	dc800317 	ldw	r18,12(sp)
  805754:	dc400217 	ldw	r17,8(sp)
  805758:	dc000117 	ldw	r16,4(sp)
  80575c:	dec00504 	addi	sp,sp,20
  805760:	f800283a 	ret

00805764 <gcvt>:
  805764:	defff804 	addi	sp,sp,-32
  805768:	dc400415 	stw	r17,16(sp)
  80576c:	dc000315 	stw	r16,12(sp)
  805770:	3023883a 	mov	r17,r6
  805774:	3821883a 	mov	r16,r7
  805778:	000d883a 	mov	r6,zero
  80577c:	000f883a 	mov	r7,zero
  805780:	dcc00615 	stw	r19,24(sp)
  805784:	dc800515 	stw	r18,20(sp)
  805788:	dfc00715 	stw	ra,28(sp)
  80578c:	2027883a 	mov	r19,r4
  805790:	2825883a 	mov	r18,r5
  805794:	08094f40 	call	8094f4 <__ledf2>
  805798:	1000050e 	bge	r2,zero,8057b0 <gcvt+0x4c>
  80579c:	00800b44 	movi	r2,45
  8057a0:	80800005 	stb	r2,0(r16)
  8057a4:	8c7fffc4 	addi	r17,r17,-1
  8057a8:	80800044 	addi	r2,r16,1
  8057ac:	00000106 	br	8057b4 <gcvt+0x50>
  8057b0:	8005883a 	mov	r2,r16
  8057b4:	d8800015 	stw	r2,0(sp)
  8057b8:	00c019c4 	movi	r3,103
  8057bc:	00802074 	movhi	r2,129
  8057c0:	d8000215 	stw	zero,8(sp)
  8057c4:	d8c00115 	stw	r3,4(sp)
  8057c8:	10ad5b04 	addi	r2,r2,-19092
  8057cc:	11000017 	ldw	r4,0(r2)
  8057d0:	880f883a 	mov	r7,r17
  8057d4:	980b883a 	mov	r5,r19
  8057d8:	900d883a 	mov	r6,r18
  8057dc:	0805d3c0 	call	805d3c <_gcvt>
  8057e0:	10000126 	beq	r2,zero,8057e8 <gcvt+0x84>
  8057e4:	8005883a 	mov	r2,r16
  8057e8:	dfc00717 	ldw	ra,28(sp)
  8057ec:	dcc00617 	ldw	r19,24(sp)
  8057f0:	dc800517 	ldw	r18,20(sp)
  8057f4:	dc400417 	ldw	r17,16(sp)
  8057f8:	dc000317 	ldw	r16,12(sp)
  8057fc:	dec00804 	addi	sp,sp,32
  805800:	f800283a 	ret

00805804 <gcvtf>:
  805804:	defffd04 	addi	sp,sp,-12
  805808:	dc400115 	stw	r17,4(sp)
  80580c:	dc000015 	stw	r16,0(sp)
  805810:	3023883a 	mov	r17,r6
  805814:	2821883a 	mov	r16,r5
  805818:	dfc00215 	stw	ra,8(sp)
  80581c:	08053580 	call	805358 <__extendsfdf2>
  805820:	880f883a 	mov	r7,r17
  805824:	800d883a 	mov	r6,r16
  805828:	1009883a 	mov	r4,r2
  80582c:	180b883a 	mov	r5,r3
  805830:	dfc00217 	ldw	ra,8(sp)
  805834:	dc400117 	ldw	r17,4(sp)
  805838:	dc000017 	ldw	r16,0(sp)
  80583c:	dec00304 	addi	sp,sp,12
  805840:	08057641 	jmpi	805764 <gcvt>

00805844 <_puts_r>:
  805844:	defffd04 	addi	sp,sp,-12
  805848:	dc000015 	stw	r16,0(sp)
  80584c:	2021883a 	mov	r16,r4
  805850:	2809883a 	mov	r4,r5
  805854:	dfc00215 	stw	ra,8(sp)
  805858:	dc400115 	stw	r17,4(sp)
  80585c:	2823883a 	mov	r17,r5
  805860:	08058d80 	call	8058d8 <strlen>
  805864:	81400217 	ldw	r5,8(r16)
  805868:	01002034 	movhi	r4,128
  80586c:	2118a804 	addi	r4,r4,25248
  805870:	29000115 	stw	r4,4(r5)
  805874:	100f883a 	mov	r7,r2
  805878:	880d883a 	mov	r6,r17
  80587c:	8009883a 	mov	r4,r16
  805880:	08062a00 	call	8062a0 <__sfvwrite_small_dev>
  805884:	00ffffc4 	movi	r3,-1
  805888:	10c00926 	beq	r2,r3,8058b0 <_puts_r+0x6c>
  80588c:	81400217 	ldw	r5,8(r16)
  805890:	01802074 	movhi	r6,129
  805894:	01c00044 	movi	r7,1
  805898:	28800117 	ldw	r2,4(r5)
  80589c:	31ac5304 	addi	r6,r6,-20148
  8058a0:	8009883a 	mov	r4,r16
  8058a4:	103ee83a 	callr	r2
  8058a8:	10bfffe0 	cmpeqi	r2,r2,-1
  8058ac:	0085c83a 	sub	r2,zero,r2
  8058b0:	dfc00217 	ldw	ra,8(sp)
  8058b4:	dc400117 	ldw	r17,4(sp)
  8058b8:	dc000017 	ldw	r16,0(sp)
  8058bc:	dec00304 	addi	sp,sp,12
  8058c0:	f800283a 	ret

008058c4 <puts>:
  8058c4:	00802074 	movhi	r2,129
  8058c8:	10ad5b04 	addi	r2,r2,-19092
  8058cc:	200b883a 	mov	r5,r4
  8058d0:	11000017 	ldw	r4,0(r2)
  8058d4:	08058441 	jmpi	805844 <_puts_r>

008058d8 <strlen>:
  8058d8:	2005883a 	mov	r2,r4
  8058dc:	10c00007 	ldb	r3,0(r2)
  8058e0:	18000226 	beq	r3,zero,8058ec <strlen+0x14>
  8058e4:	10800044 	addi	r2,r2,1
  8058e8:	003ffc06 	br	8058dc <__alt_data_end+0xff8058dc>
  8058ec:	1105c83a 	sub	r2,r2,r4
  8058f0:	f800283a 	ret

008058f4 <print_e>:
  8058f4:	defff404 	addi	sp,sp,-48
  8058f8:	dc000715 	stw	r16,28(sp)
  8058fc:	d8c00504 	addi	r3,sp,20
  805900:	dc000c17 	ldw	r16,48(sp)
  805904:	d8c00315 	stw	r3,12(sp)
  805908:	d8c00604 	addi	r3,sp,24
  80590c:	d8c00215 	stw	r3,8(sp)
  805910:	d8c00404 	addi	r3,sp,16
  805914:	3805883a 	mov	r2,r7
  805918:	d8c00115 	stw	r3,4(sp)
  80591c:	80c00044 	addi	r3,r16,1
  805920:	dc800915 	stw	r18,36(sp)
  805924:	d8c00015 	stw	r3,0(sp)
  805928:	2825883a 	mov	r18,r5
  80592c:	01c00084 	movi	r7,2
  805930:	300b883a 	mov	r5,r6
  805934:	100d883a 	mov	r6,r2
  805938:	dc400815 	stw	r17,32(sp)
  80593c:	dfc00b15 	stw	ra,44(sp)
  805940:	dcc00a15 	stw	r19,40(sp)
  805944:	dc400d17 	ldw	r17,52(sp)
  805948:	08077a40 	call	8077a4 <_dtoa_r>
  80594c:	d8c00417 	ldw	r3,16(sp)
  805950:	0109c3c4 	movi	r4,9999
  805954:	1900041e 	bne	r3,r4,805968 <print_e+0x74>
  805958:	100b883a 	mov	r5,r2
  80595c:	9009883a 	mov	r4,r18
  805960:	08075340 	call	807534 <strcpy>
  805964:	00005106 	br	805aac <print_e+0x1b8>
  805968:	11800044 	addi	r6,r2,1
  80596c:	10800003 	ldbu	r2,0(r2)
  805970:	8827883a 	mov	r19,r17
  805974:	90800005 	stb	r2,0(r18)
  805978:	d8800e17 	ldw	r2,56(sp)
  80597c:	1000031e 	bne	r2,zero,80598c <print_e+0x98>
  805980:	8000021e 	bne	r16,zero,80598c <print_e+0x98>
  805984:	90800044 	addi	r2,r18,1
  805988:	00000906 	br	8059b0 <print_e+0xbc>
  80598c:	01000b84 	movi	r4,46
  805990:	90800084 	addi	r2,r18,2
  805994:	91000045 	stb	r4,1(r18)
  805998:	00000506 	br	8059b0 <print_e+0xbc>
  80599c:	04000a0e 	bge	zero,r16,8059c8 <print_e+0xd4>
  8059a0:	11400005 	stb	r5,0(r2)
  8059a4:	31800044 	addi	r6,r6,1
  8059a8:	843fffc4 	addi	r16,r16,-1
  8059ac:	10800044 	addi	r2,r2,1
  8059b0:	31400003 	ldbu	r5,0(r6)
  8059b4:	1009883a 	mov	r4,r2
  8059b8:	29c03fcc 	andi	r7,r5,255
  8059bc:	39c0201c 	xori	r7,r7,128
  8059c0:	39ffe004 	addi	r7,r7,-128
  8059c4:	383ff51e 	bne	r7,zero,80599c <__alt_data_end+0xff80599c>
  8059c8:	8c403fcc 	andi	r17,r17,255
  8059cc:	8c40201c 	xori	r17,r17,128
  8059d0:	8c7fe004 	addi	r17,r17,-128
  8059d4:	014019c4 	movi	r5,103
  8059d8:	89400d26 	beq	r17,r5,805a10 <print_e+0x11c>
  8059dc:	014011c4 	movi	r5,71
  8059e0:	89400d26 	beq	r17,r5,805a18 <print_e+0x124>
  8059e4:	800b883a 	mov	r5,r16
  8059e8:	01800c04 	movi	r6,48
  8059ec:	0140040e 	bge	zero,r5,805a00 <print_e+0x10c>
  8059f0:	11800005 	stb	r6,0(r2)
  8059f4:	297fffc4 	addi	r5,r5,-1
  8059f8:	10800044 	addi	r2,r2,1
  8059fc:	003ffb06 	br	8059ec <__alt_data_end+0xff8059ec>
  805a00:	8000010e 	bge	r16,zero,805a08 <print_e+0x114>
  805a04:	0021883a 	mov	r16,zero
  805a08:	2409883a 	add	r4,r4,r16
  805a0c:	00000306 	br	805a1c <print_e+0x128>
  805a10:	04c01944 	movi	r19,101
  805a14:	00000106 	br	805a1c <print_e+0x128>
  805a18:	04c01144 	movi	r19,69
  805a1c:	18bfffc4 	addi	r2,r3,-1
  805a20:	24800084 	addi	r18,r4,2
  805a24:	24c00005 	stb	r19,0(r4)
  805a28:	d8800415 	stw	r2,16(sp)
  805a2c:	9023883a 	mov	r17,r18
  805a30:	1000050e 	bge	r2,zero,805a48 <print_e+0x154>
  805a34:	00c00b44 	movi	r3,45
  805a38:	0085c83a 	sub	r2,zero,r2
  805a3c:	20c00045 	stb	r3,1(r4)
  805a40:	d8800415 	stw	r2,16(sp)
  805a44:	00000206 	br	805a50 <print_e+0x15c>
  805a48:	00800ac4 	movi	r2,43
  805a4c:	20800045 	stb	r2,1(r4)
  805a50:	dc000417 	ldw	r16,16(sp)
  805a54:	008018c4 	movi	r2,99
  805a58:	1400090e 	bge	r2,r16,805a80 <print_e+0x18c>
  805a5c:	8009883a 	mov	r4,r16
  805a60:	01401904 	movi	r5,100
  805a64:	08026fc0 	call	8026fc <__divsi3>
  805a68:	10c00c04 	addi	r3,r2,48
  805a6c:	10bfe724 	muli	r2,r2,-100
  805a70:	90c00005 	stb	r3,0(r18)
  805a74:	94400044 	addi	r17,r18,1
  805a78:	1421883a 	add	r16,r2,r16
  805a7c:	dc000415 	stw	r16,16(sp)
  805a80:	dc000417 	ldw	r16,16(sp)
  805a84:	01400284 	movi	r5,10
  805a88:	8009883a 	mov	r4,r16
  805a8c:	08026fc0 	call	8026fc <__divsi3>
  805a90:	10c00c04 	addi	r3,r2,48
  805a94:	10bffda4 	muli	r2,r2,-10
  805a98:	88c00005 	stb	r3,0(r17)
  805a9c:	88000085 	stb	zero,2(r17)
  805aa0:	1421883a 	add	r16,r2,r16
  805aa4:	84000c04 	addi	r16,r16,48
  805aa8:	8c000045 	stb	r16,1(r17)
  805aac:	dfc00b17 	ldw	ra,44(sp)
  805ab0:	dcc00a17 	ldw	r19,40(sp)
  805ab4:	dc800917 	ldw	r18,36(sp)
  805ab8:	dc400817 	ldw	r17,32(sp)
  805abc:	dc000717 	ldw	r16,28(sp)
  805ac0:	dec00c04 	addi	sp,sp,48
  805ac4:	f800283a 	ret

00805ac8 <fcvtbuf>:
  805ac8:	defff304 	addi	sp,sp,-52
  805acc:	dc000515 	stw	r16,20(sp)
  805ad0:	dc000e17 	ldw	r16,56(sp)
  805ad4:	00802074 	movhi	r2,129
  805ad8:	dd800b15 	stw	r22,44(sp)
  805adc:	dd400a15 	stw	r21,40(sp)
  805ae0:	dd000915 	stw	r20,36(sp)
  805ae4:	dcc00815 	stw	r19,32(sp)
  805ae8:	dc800715 	stw	r18,28(sp)
  805aec:	dc400615 	stw	r17,24(sp)
  805af0:	10ad5b04 	addi	r2,r2,-19092
  805af4:	dfc00c15 	stw	ra,48(sp)
  805af8:	2029883a 	mov	r20,r4
  805afc:	2827883a 	mov	r19,r5
  805b00:	3025883a 	mov	r18,r6
  805b04:	382b883a 	mov	r21,r7
  805b08:	dd800d17 	ldw	r22,52(sp)
  805b0c:	14400017 	ldw	r17,0(r2)
  805b10:	80000c1e 	bne	r16,zero,805b44 <fcvtbuf+0x7c>
  805b14:	88c00617 	ldw	r3,24(r17)
  805b18:	308008c4 	addi	r2,r6,35
  805b1c:	10c00816 	blt	r2,r3,805b40 <fcvtbuf+0x78>
  805b20:	89400717 	ldw	r5,28(r17)
  805b24:	34000904 	addi	r16,r6,36
  805b28:	800d883a 	mov	r6,r16
  805b2c:	8809883a 	mov	r4,r17
  805b30:	08074400 	call	807440 <_realloc_r>
  805b34:	10003426 	beq	r2,zero,805c08 <fcvtbuf+0x140>
  805b38:	8c000615 	stw	r16,24(r17)
  805b3c:	88800715 	stw	r2,28(r17)
  805b40:	8c000717 	ldw	r16,28(r17)
  805b44:	000d883a 	mov	r6,zero
  805b48:	01cffc34 	movhi	r7,16368
  805b4c:	a009883a 	mov	r4,r20
  805b50:	980b883a 	mov	r5,r19
  805b54:	08094f40 	call	8094f4 <__ledf2>
  805b58:	10000d0e 	bge	r2,zero,805b90 <fcvtbuf+0xc8>
  805b5c:	000d883a 	mov	r6,zero
  805b60:	01effc34 	movhi	r7,49136
  805b64:	a009883a 	mov	r4,r20
  805b68:	980b883a 	mov	r5,r19
  805b6c:	08040640 	call	804064 <__gedf2>
  805b70:	0080070e 	bge	zero,r2,805b90 <fcvtbuf+0xc8>
  805b74:	d8800404 	addi	r2,sp,16
  805b78:	d8800315 	stw	r2,12(sp)
  805b7c:	dd800215 	stw	r22,8(sp)
  805b80:	dd400115 	stw	r21,4(sp)
  805b84:	dc800015 	stw	r18,0(sp)
  805b88:	01c00084 	movi	r7,2
  805b8c:	00000606 	br	805ba8 <fcvtbuf+0xe0>
  805b90:	d8800404 	addi	r2,sp,16
  805b94:	d8800315 	stw	r2,12(sp)
  805b98:	dd800215 	stw	r22,8(sp)
  805b9c:	dd400115 	stw	r21,4(sp)
  805ba0:	dc800015 	stw	r18,0(sp)
  805ba4:	01c000c4 	movi	r7,3
  805ba8:	8809883a 	mov	r4,r17
  805bac:	a00b883a 	mov	r5,r20
  805bb0:	980d883a 	mov	r6,r19
  805bb4:	08077a40 	call	8077a4 <_dtoa_r>
  805bb8:	a9000017 	ldw	r4,0(r21)
  805bbc:	8007883a 	mov	r3,r16
  805bc0:	0109c83a 	sub	r4,zero,r4
  805bc4:	2409c83a 	sub	r4,r4,r16
  805bc8:	d9400417 	ldw	r5,16(sp)
  805bcc:	1140052e 	bgeu	r2,r5,805be4 <fcvtbuf+0x11c>
  805bd0:	11400003 	ldbu	r5,0(r2)
  805bd4:	18c00044 	addi	r3,r3,1
  805bd8:	10800044 	addi	r2,r2,1
  805bdc:	197fffc5 	stb	r5,-1(r3)
  805be0:	003ff906 	br	805bc8 <__alt_data_end+0xff805bc8>
  805be4:	01400c04 	movi	r5,48
  805be8:	1905883a 	add	r2,r3,r4
  805bec:	1480030e 	bge	r2,r18,805bfc <fcvtbuf+0x134>
  805bf0:	19400005 	stb	r5,0(r3)
  805bf4:	18c00044 	addi	r3,r3,1
  805bf8:	003ffb06 	br	805be8 <__alt_data_end+0xff805be8>
  805bfc:	18000005 	stb	zero,0(r3)
  805c00:	8005883a 	mov	r2,r16
  805c04:	00000106 	br	805c0c <fcvtbuf+0x144>
  805c08:	0005883a 	mov	r2,zero
  805c0c:	dfc00c17 	ldw	ra,48(sp)
  805c10:	dd800b17 	ldw	r22,44(sp)
  805c14:	dd400a17 	ldw	r21,40(sp)
  805c18:	dd000917 	ldw	r20,36(sp)
  805c1c:	dcc00817 	ldw	r19,32(sp)
  805c20:	dc800717 	ldw	r18,28(sp)
  805c24:	dc400617 	ldw	r17,24(sp)
  805c28:	dc000517 	ldw	r16,20(sp)
  805c2c:	dec00d04 	addi	sp,sp,52
  805c30:	f800283a 	ret

00805c34 <ecvtbuf>:
  805c34:	defff404 	addi	sp,sp,-48
  805c38:	dc000515 	stw	r16,20(sp)
  805c3c:	dc000d17 	ldw	r16,52(sp)
  805c40:	00802074 	movhi	r2,129
  805c44:	dd400a15 	stw	r21,40(sp)
  805c48:	dd000915 	stw	r20,36(sp)
  805c4c:	dcc00815 	stw	r19,32(sp)
  805c50:	dc800715 	stw	r18,28(sp)
  805c54:	dc400615 	stw	r17,24(sp)
  805c58:	10ad5b04 	addi	r2,r2,-19092
  805c5c:	dfc00b15 	stw	ra,44(sp)
  805c60:	2029883a 	mov	r20,r4
  805c64:	2827883a 	mov	r19,r5
  805c68:	3025883a 	mov	r18,r6
  805c6c:	382b883a 	mov	r21,r7
  805c70:	14400017 	ldw	r17,0(r2)
  805c74:	80000b1e 	bne	r16,zero,805ca4 <ecvtbuf+0x70>
  805c78:	88800617 	ldw	r2,24(r17)
  805c7c:	30800816 	blt	r6,r2,805ca0 <ecvtbuf+0x6c>
  805c80:	89400717 	ldw	r5,28(r17)
  805c84:	34000044 	addi	r16,r6,1
  805c88:	800d883a 	mov	r6,r16
  805c8c:	8809883a 	mov	r4,r17
  805c90:	08074400 	call	807440 <_realloc_r>
  805c94:	10001f26 	beq	r2,zero,805d14 <ecvtbuf+0xe0>
  805c98:	8c000615 	stw	r16,24(r17)
  805c9c:	88800715 	stw	r2,28(r17)
  805ca0:	8c000717 	ldw	r16,28(r17)
  805ca4:	d8800404 	addi	r2,sp,16
  805ca8:	d8800315 	stw	r2,12(sp)
  805cac:	d8800c17 	ldw	r2,48(sp)
  805cb0:	dd400115 	stw	r21,4(sp)
  805cb4:	dc800015 	stw	r18,0(sp)
  805cb8:	d8800215 	stw	r2,8(sp)
  805cbc:	01c00084 	movi	r7,2
  805cc0:	a00b883a 	mov	r5,r20
  805cc4:	980d883a 	mov	r6,r19
  805cc8:	8809883a 	mov	r4,r17
  805ccc:	08077a40 	call	8077a4 <_dtoa_r>
  805cd0:	8007883a 	mov	r3,r16
  805cd4:	d9000417 	ldw	r4,16(sp)
  805cd8:	1100052e 	bgeu	r2,r4,805cf0 <ecvtbuf+0xbc>
  805cdc:	11000003 	ldbu	r4,0(r2)
  805ce0:	18c00044 	addi	r3,r3,1
  805ce4:	10800044 	addi	r2,r2,1
  805ce8:	193fffc5 	stb	r4,-1(r3)
  805cec:	003ff906 	br	805cd4 <__alt_data_end+0xff805cd4>
  805cf0:	01000c04 	movi	r4,48
  805cf4:	1c05c83a 	sub	r2,r3,r16
  805cf8:	1480030e 	bge	r2,r18,805d08 <ecvtbuf+0xd4>
  805cfc:	19000005 	stb	r4,0(r3)
  805d00:	18c00044 	addi	r3,r3,1
  805d04:	003ffb06 	br	805cf4 <__alt_data_end+0xff805cf4>
  805d08:	18000005 	stb	zero,0(r3)
  805d0c:	8005883a 	mov	r2,r16
  805d10:	00000106 	br	805d18 <ecvtbuf+0xe4>
  805d14:	0005883a 	mov	r2,zero
  805d18:	dfc00b17 	ldw	ra,44(sp)
  805d1c:	dd400a17 	ldw	r21,40(sp)
  805d20:	dd000917 	ldw	r20,36(sp)
  805d24:	dcc00817 	ldw	r19,32(sp)
  805d28:	dc800717 	ldw	r18,28(sp)
  805d2c:	dc400617 	ldw	r17,24(sp)
  805d30:	dc000517 	ldw	r16,20(sp)
  805d34:	dec00c04 	addi	sp,sp,48
  805d38:	f800283a 	ret

00805d3c <_gcvt>:
  805d3c:	defff104 	addi	sp,sp,-60
  805d40:	dc400815 	stw	r17,32(sp)
  805d44:	3023883a 	mov	r17,r6
  805d48:	dd400c15 	stw	r21,48(sp)
  805d4c:	dd000b15 	stw	r20,44(sp)
  805d50:	dc800915 	stw	r18,36(sp)
  805d54:	202b883a 	mov	r21,r4
  805d58:	2825883a 	mov	r18,r5
  805d5c:	3829883a 	mov	r20,r7
  805d60:	2809883a 	mov	r4,r5
  805d64:	000d883a 	mov	r6,zero
  805d68:	000f883a 	mov	r7,zero
  805d6c:	880b883a 	mov	r5,r17
  805d70:	dd800d15 	stw	r22,52(sp)
  805d74:	dcc00a15 	stw	r19,40(sp)
  805d78:	dc000715 	stw	r16,28(sp)
  805d7c:	dfc00e15 	stw	ra,56(sp)
  805d80:	dc000f17 	ldw	r16,60(sp)
  805d84:	dd801017 	ldw	r22,64(sp)
  805d88:	dcc01117 	ldw	r19,68(sp)
  805d8c:	08094f40 	call	8094f4 <__ledf2>
  805d90:	1000010e 	bge	r2,zero,805d98 <_gcvt+0x5c>
  805d94:	8c60003c 	xorhi	r17,r17,32768
  805d98:	000d883a 	mov	r6,zero
  805d9c:	000f883a 	mov	r7,zero
  805da0:	9009883a 	mov	r4,r18
  805da4:	880b883a 	mov	r5,r17
  805da8:	0803fdc0 	call	803fdc <__eqdf2>
  805dac:	1000041e 	bne	r2,zero,805dc0 <_gcvt+0x84>
  805db0:	00800c04 	movi	r2,48
  805db4:	80800005 	stb	r2,0(r16)
  805db8:	80000045 	stb	zero,1(r16)
  805dbc:	00009206 	br	806008 <_gcvt+0x2cc>
  805dc0:	01bac734 	movhi	r6,60188
  805dc4:	01cfc6b4 	movhi	r7,16154
  805dc8:	3190cb44 	addi	r6,r6,17197
  805dcc:	39cdb884 	addi	r7,r7,14050
  805dd0:	9009883a 	mov	r4,r18
  805dd4:	880b883a 	mov	r5,r17
  805dd8:	08094f40 	call	8094f4 <__ledf2>
  805ddc:	00800d16 	blt	zero,r2,805e14 <_gcvt+0xd8>
  805de0:	b5803fcc 	andi	r22,r22,255
  805de4:	b580201c 	xori	r22,r22,128
  805de8:	b5bfe004 	addi	r22,r22,-128
  805dec:	a53fffc4 	addi	r20,r20,-1
  805df0:	dcc00215 	stw	r19,8(sp)
  805df4:	dd800115 	stw	r22,4(sp)
  805df8:	dd000015 	stw	r20,0(sp)
  805dfc:	900d883a 	mov	r6,r18
  805e00:	880f883a 	mov	r7,r17
  805e04:	800b883a 	mov	r5,r16
  805e08:	a809883a 	mov	r4,r21
  805e0c:	08058f40 	call	8058f4 <print_e>
  805e10:	00007d06 	br	806008 <_gcvt+0x2cc>
  805e14:	a009883a 	mov	r4,r20
  805e18:	080716c0 	call	80716c <_mprec_log10>
  805e1c:	100d883a 	mov	r6,r2
  805e20:	180f883a 	mov	r7,r3
  805e24:	9009883a 	mov	r4,r18
  805e28:	880b883a 	mov	r5,r17
  805e2c:	08040640 	call	804064 <__gedf2>
  805e30:	103feb0e 	bge	r2,zero,805de0 <__alt_data_end+0xff805de0>
  805e34:	9009883a 	mov	r4,r18
  805e38:	000d883a 	mov	r6,zero
  805e3c:	01cffc34 	movhi	r7,16368
  805e40:	880b883a 	mov	r5,r17
  805e44:	08094f40 	call	8094f4 <__ledf2>
  805e48:	d9000504 	addi	r4,sp,20
  805e4c:	d8c00604 	addi	r3,sp,24
  805e50:	1000070e 	bge	r2,zero,805e70 <_gcvt+0x134>
  805e54:	d8800404 	addi	r2,sp,16
  805e58:	d8800315 	stw	r2,12(sp)
  805e5c:	d9000215 	stw	r4,8(sp)
  805e60:	d8c00115 	stw	r3,4(sp)
  805e64:	dd000015 	stw	r20,0(sp)
  805e68:	01c000c4 	movi	r7,3
  805e6c:	00000606 	br	805e88 <_gcvt+0x14c>
  805e70:	d8800404 	addi	r2,sp,16
  805e74:	d8800315 	stw	r2,12(sp)
  805e78:	d9000215 	stw	r4,8(sp)
  805e7c:	d8c00115 	stw	r3,4(sp)
  805e80:	dd000015 	stw	r20,0(sp)
  805e84:	01c00084 	movi	r7,2
  805e88:	a809883a 	mov	r4,r21
  805e8c:	900b883a 	mov	r5,r18
  805e90:	880d883a 	mov	r6,r17
  805e94:	08077a40 	call	8077a4 <_dtoa_r>
  805e98:	d9000617 	ldw	r4,24(sp)
  805e9c:	00c9c3c4 	movi	r3,9999
  805ea0:	20c00226 	beq	r4,r3,805eac <_gcvt+0x170>
  805ea4:	8009883a 	mov	r4,r16
  805ea8:	00000a06 	br	805ed4 <_gcvt+0x198>
  805eac:	100b883a 	mov	r5,r2
  805eb0:	8009883a 	mov	r4,r16
  805eb4:	08075340 	call	807534 <strcpy>
  805eb8:	00005306 	br	806008 <_gcvt+0x2cc>
  805ebc:	01c01d0e 	bge	zero,r7,805f34 <_gcvt+0x1f8>
  805ec0:	39ffffc4 	addi	r7,r7,-1
  805ec4:	21800005 	stb	r6,0(r4)
  805ec8:	10800044 	addi	r2,r2,1
  805ecc:	d9c00615 	stw	r7,24(sp)
  805ed0:	21000044 	addi	r4,r4,1
  805ed4:	11800003 	ldbu	r6,0(r2)
  805ed8:	a107c83a 	sub	r3,r20,r4
  805edc:	200b883a 	mov	r5,r4
  805ee0:	32003fcc 	andi	r8,r6,255
  805ee4:	4200201c 	xori	r8,r8,128
  805ee8:	423fe004 	addi	r8,r8,-128
  805eec:	80c7883a 	add	r3,r16,r3
  805ef0:	d9c00617 	ldw	r7,24(sp)
  805ef4:	403ff11e 	bne	r8,zero,805ebc <__alt_data_end+0xff805ebc>
  805ef8:	000d883a 	mov	r6,zero
  805efc:	38cfc83a 	sub	r7,r7,r3
  805f00:	02400c04 	movi	r9,48
  805f04:	00000506 	br	805f1c <_gcvt+0x1e0>
  805f08:	00c0070e 	bge	zero,r3,805f28 <_gcvt+0x1ec>
  805f0c:	22400005 	stb	r9,0(r4)
  805f10:	18ffffc4 	addi	r3,r3,-1
  805f14:	21000044 	addi	r4,r4,1
  805f18:	01800044 	movi	r6,1
  805f1c:	38d1883a 	add	r8,r7,r3
  805f20:	200b883a 	mov	r5,r4
  805f24:	023ff816 	blt	zero,r8,805f08 <__alt_data_end+0xff805f08>
  805f28:	31803fcc 	andi	r6,r6,255
  805f2c:	30000126 	beq	r6,zero,805f34 <_gcvt+0x1f8>
  805f30:	da000615 	stw	r8,24(sp)
  805f34:	9800021e 	bne	r19,zero,805f40 <_gcvt+0x204>
  805f38:	11800007 	ldb	r6,0(r2)
  805f3c:	30003126 	beq	r6,zero,806004 <_gcvt+0x2c8>
  805f40:	8100031e 	bne	r16,r4,805f50 <_gcvt+0x214>
  805f44:	01000c04 	movi	r4,48
  805f48:	81400044 	addi	r5,r16,1
  805f4c:	81000005 	stb	r4,0(r16)
  805f50:	d9800617 	ldw	r6,24(sp)
  805f54:	01000b84 	movi	r4,46
  805f58:	29000005 	stb	r4,0(r5)
  805f5c:	02000c04 	movi	r8,48
  805f60:	29000044 	addi	r4,r5,1
  805f64:	000b883a 	mov	r5,zero
  805f68:	300f883a 	mov	r7,r6
  805f6c:	30000416 	blt	r6,zero,805f80 <_gcvt+0x244>
  805f70:	29403fcc 	andi	r5,r5,255
  805f74:	28001226 	beq	r5,zero,805fc0 <_gcvt+0x284>
  805f78:	d9800615 	stw	r6,24(sp)
  805f7c:	00001006 	br	805fc0 <_gcvt+0x284>
  805f80:	31800044 	addi	r6,r6,1
  805f84:	00c0050e 	bge	zero,r3,805f9c <_gcvt+0x260>
  805f88:	22000005 	stb	r8,0(r4)
  805f8c:	18ffffc4 	addi	r3,r3,-1
  805f90:	21000044 	addi	r4,r4,1
  805f94:	01400044 	movi	r5,1
  805f98:	003ff306 	br	805f68 <__alt_data_end+0xff805f68>
  805f9c:	29403fcc 	andi	r5,r5,255
  805fa0:	28000726 	beq	r5,zero,805fc0 <_gcvt+0x284>
  805fa4:	d9c00615 	stw	r7,24(sp)
  805fa8:	00000506 	br	805fc0 <_gcvt+0x284>
  805fac:	00c00a0e 	bge	zero,r3,805fd8 <_gcvt+0x29c>
  805fb0:	21800005 	stb	r6,0(r4)
  805fb4:	10800044 	addi	r2,r2,1
  805fb8:	18ffffc4 	addi	r3,r3,-1
  805fbc:	21000044 	addi	r4,r4,1
  805fc0:	11800003 	ldbu	r6,0(r2)
  805fc4:	200b883a 	mov	r5,r4
  805fc8:	31c03fcc 	andi	r7,r6,255
  805fcc:	39c0201c 	xori	r7,r7,128
  805fd0:	39ffe004 	addi	r7,r7,-128
  805fd4:	383ff51e 	bne	r7,zero,805fac <__alt_data_end+0xff805fac>
  805fd8:	98000a26 	beq	r19,zero,806004 <_gcvt+0x2c8>
  805fdc:	1805883a 	mov	r2,r3
  805fe0:	01800c04 	movi	r6,48
  805fe4:	0080040e 	bge	zero,r2,805ff8 <_gcvt+0x2bc>
  805fe8:	21800005 	stb	r6,0(r4)
  805fec:	10bfffc4 	addi	r2,r2,-1
  805ff0:	21000044 	addi	r4,r4,1
  805ff4:	003ffb06 	br	805fe4 <__alt_data_end+0xff805fe4>
  805ff8:	1800010e 	bge	r3,zero,806000 <_gcvt+0x2c4>
  805ffc:	0007883a 	mov	r3,zero
  806000:	28cb883a 	add	r5,r5,r3
  806004:	28000005 	stb	zero,0(r5)
  806008:	8005883a 	mov	r2,r16
  80600c:	dfc00e17 	ldw	ra,56(sp)
  806010:	dd800d17 	ldw	r22,52(sp)
  806014:	dd400c17 	ldw	r21,48(sp)
  806018:	dd000b17 	ldw	r20,44(sp)
  80601c:	dcc00a17 	ldw	r19,40(sp)
  806020:	dc800917 	ldw	r18,36(sp)
  806024:	dc400817 	ldw	r17,32(sp)
  806028:	dc000717 	ldw	r16,28(sp)
  80602c:	dec00f04 	addi	sp,sp,60
  806030:	f800283a 	ret

00806034 <_dcvt>:
  806034:	defff504 	addi	sp,sp,-44
  806038:	d8800d07 	ldb	r2,52(sp)
  80603c:	dc400815 	stw	r17,32(sp)
  806040:	dc000715 	stw	r16,28(sp)
  806044:	2823883a 	mov	r17,r5
  806048:	dfc00a15 	stw	ra,40(sp)
  80604c:	300b883a 	mov	r5,r6
  806050:	dc800915 	stw	r18,36(sp)
  806054:	018011c4 	movi	r6,71
  806058:	3811883a 	mov	r8,r7
  80605c:	dc000b17 	ldw	r16,44(sp)
  806060:	d8c00e17 	ldw	r3,56(sp)
  806064:	11807726 	beq	r2,r6,806244 <_dcvt+0x210>
  806068:	30800516 	blt	r6,r2,806080 <_dcvt+0x4c>
  80606c:	01801144 	movi	r6,69
  806070:	11807d26 	beq	r2,r6,806268 <_dcvt+0x234>
  806074:	01801184 	movi	r6,70
  806078:	11800826 	beq	r2,r6,80609c <_dcvt+0x68>
  80607c:	00008106 	br	806284 <_dcvt+0x250>
  806080:	01801984 	movi	r6,102
  806084:	11800526 	beq	r2,r6,80609c <_dcvt+0x68>
  806088:	018019c4 	movi	r6,103
  80608c:	11806d26 	beq	r2,r6,806244 <_dcvt+0x210>
  806090:	01801944 	movi	r6,101
  806094:	11807b1e 	bne	r2,r6,806284 <_dcvt+0x250>
  806098:	00007306 	br	806268 <_dcvt+0x234>
  80609c:	80000226 	beq	r16,zero,8060a8 <_dcvt+0x74>
  8060a0:	04800044 	movi	r18,1
  8060a4:	00000106 	br	8060ac <_dcvt+0x78>
  8060a8:	1825883a 	mov	r18,r3
  8060ac:	d8800404 	addi	r2,sp,16
  8060b0:	d8800315 	stw	r2,12(sp)
  8060b4:	d8800504 	addi	r2,sp,20
  8060b8:	d8800215 	stw	r2,8(sp)
  8060bc:	d8800604 	addi	r2,sp,24
  8060c0:	d8800115 	stw	r2,4(sp)
  8060c4:	dc000015 	stw	r16,0(sp)
  8060c8:	01c000c4 	movi	r7,3
  8060cc:	400d883a 	mov	r6,r8
  8060d0:	08077a40 	call	8077a4 <_dtoa_r>
  8060d4:	d9000617 	ldw	r4,24(sp)
  8060d8:	00c9c3c4 	movi	r3,9999
  8060dc:	20c00326 	beq	r4,r3,8060ec <_dcvt+0xb8>
  8060e0:	880f883a 	mov	r7,r17
  8060e4:	100d883a 	mov	r6,r2
  8060e8:	00000a06 	br	806114 <_dcvt+0xe0>
  8060ec:	100b883a 	mov	r5,r2
  8060f0:	8809883a 	mov	r4,r17
  8060f4:	08075340 	call	807534 <strcpy>
  8060f8:	00006206 	br	806284 <_dcvt+0x250>
  8060fc:	01001c0e 	bge	zero,r4,806170 <_dcvt+0x13c>
  806100:	213fffc4 	addi	r4,r4,-1
  806104:	39400005 	stb	r5,0(r7)
  806108:	31800044 	addi	r6,r6,1
  80610c:	d9000615 	stw	r4,24(sp)
  806110:	39c00044 	addi	r7,r7,1
  806114:	31400003 	ldbu	r5,0(r6)
  806118:	3807883a 	mov	r3,r7
  80611c:	d9000617 	ldw	r4,24(sp)
  806120:	2a003fcc 	andi	r8,r5,255
  806124:	4200201c 	xori	r8,r8,128
  806128:	423fe004 	addi	r8,r8,-128
  80612c:	403ff31e 	bne	r8,zero,8060fc <__alt_data_end+0xff8060fc>
  806130:	02400c04 	movi	r9,48
  806134:	21cbc83a 	sub	r5,r4,r7
  806138:	194b883a 	add	r5,r3,r5
  80613c:	0140040e 	bge	zero,r5,806150 <_dcvt+0x11c>
  806140:	3a400005 	stb	r9,0(r7)
  806144:	02000044 	movi	r8,1
  806148:	39c00044 	addi	r7,r7,1
  80614c:	003ff906 	br	806134 <__alt_data_end+0xff806134>
  806150:	200b883a 	mov	r5,r4
  806154:	2000010e 	bge	r4,zero,80615c <_dcvt+0x128>
  806158:	000b883a 	mov	r5,zero
  80615c:	42003fcc 	andi	r8,r8,255
  806160:	1947883a 	add	r3,r3,r5
  806164:	2149c83a 	sub	r4,r4,r5
  806168:	40000126 	beq	r8,zero,806170 <_dcvt+0x13c>
  80616c:	d9000615 	stw	r4,24(sp)
  806170:	9000021e 	bne	r18,zero,80617c <_dcvt+0x148>
  806174:	31000007 	ldb	r4,0(r6)
  806178:	20003026 	beq	r4,zero,80623c <_dcvt+0x208>
  80617c:	1180031e 	bne	r2,r6,80618c <_dcvt+0x158>
  806180:	00800c04 	movi	r2,48
  806184:	18800005 	stb	r2,0(r3)
  806188:	18c00044 	addi	r3,r3,1
  80618c:	d9000617 	ldw	r4,24(sp)
  806190:	00800b84 	movi	r2,46
  806194:	18800005 	stb	r2,0(r3)
  806198:	01c00c04 	movi	r7,48
  80619c:	18800044 	addi	r2,r3,1
  8061a0:	0007883a 	mov	r3,zero
  8061a4:	200b883a 	mov	r5,r4
  8061a8:	20000416 	blt	r4,zero,8061bc <_dcvt+0x188>
  8061ac:	18c03fcc 	andi	r3,r3,255
  8061b0:	18001226 	beq	r3,zero,8061fc <_dcvt+0x1c8>
  8061b4:	d9000615 	stw	r4,24(sp)
  8061b8:	00001006 	br	8061fc <_dcvt+0x1c8>
  8061bc:	21000044 	addi	r4,r4,1
  8061c0:	0400050e 	bge	zero,r16,8061d8 <_dcvt+0x1a4>
  8061c4:	11c00005 	stb	r7,0(r2)
  8061c8:	843fffc4 	addi	r16,r16,-1
  8061cc:	10800044 	addi	r2,r2,1
  8061d0:	00c00044 	movi	r3,1
  8061d4:	003ff306 	br	8061a4 <__alt_data_end+0xff8061a4>
  8061d8:	18c03fcc 	andi	r3,r3,255
  8061dc:	18000726 	beq	r3,zero,8061fc <_dcvt+0x1c8>
  8061e0:	d9400615 	stw	r5,24(sp)
  8061e4:	00000506 	br	8061fc <_dcvt+0x1c8>
  8061e8:	0400140e 	bge	zero,r16,80623c <_dcvt+0x208>
  8061ec:	11000005 	stb	r4,0(r2)
  8061f0:	31800044 	addi	r6,r6,1
  8061f4:	843fffc4 	addi	r16,r16,-1
  8061f8:	10800044 	addi	r2,r2,1
  8061fc:	31000003 	ldbu	r4,0(r6)
  806200:	1007883a 	mov	r3,r2
  806204:	21403fcc 	andi	r5,r4,255
  806208:	2940201c 	xori	r5,r5,128
  80620c:	297fe004 	addi	r5,r5,-128
  806210:	283ff51e 	bne	r5,zero,8061e8 <__alt_data_end+0xff8061e8>
  806214:	8009883a 	mov	r4,r16
  806218:	01400c04 	movi	r5,48
  80621c:	0100040e 	bge	zero,r4,806230 <_dcvt+0x1fc>
  806220:	11400005 	stb	r5,0(r2)
  806224:	213fffc4 	addi	r4,r4,-1
  806228:	10800044 	addi	r2,r2,1
  80622c:	003ffb06 	br	80621c <__alt_data_end+0xff80621c>
  806230:	8000010e 	bge	r16,zero,806238 <_dcvt+0x204>
  806234:	0021883a 	mov	r16,zero
  806238:	1c07883a 	add	r3,r3,r16
  80623c:	18000005 	stb	zero,0(r3)
  806240:	00001006 	br	806284 <_dcvt+0x250>
  806244:	8000011e 	bne	r16,zero,80624c <_dcvt+0x218>
  806248:	04000044 	movi	r16,1
  80624c:	d8c00215 	stw	r3,8(sp)
  806250:	d8800115 	stw	r2,4(sp)
  806254:	dc400015 	stw	r17,0(sp)
  806258:	800f883a 	mov	r7,r16
  80625c:	400d883a 	mov	r6,r8
  806260:	0805d3c0 	call	805d3c <_gcvt>
  806264:	00000706 	br	806284 <_dcvt+0x250>
  806268:	280d883a 	mov	r6,r5
  80626c:	d8c00215 	stw	r3,8(sp)
  806270:	d8800115 	stw	r2,4(sp)
  806274:	dc000015 	stw	r16,0(sp)
  806278:	400f883a 	mov	r7,r8
  80627c:	880b883a 	mov	r5,r17
  806280:	08058f40 	call	8058f4 <print_e>
  806284:	8805883a 	mov	r2,r17
  806288:	dfc00a17 	ldw	ra,40(sp)
  80628c:	dc800917 	ldw	r18,36(sp)
  806290:	dc400817 	ldw	r17,32(sp)
  806294:	dc000717 	ldw	r16,28(sp)
  806298:	dec00b04 	addi	sp,sp,44
  80629c:	f800283a 	ret

008062a0 <__sfvwrite_small_dev>:
  8062a0:	2880000b 	ldhu	r2,0(r5)
  8062a4:	1080020c 	andi	r2,r2,8
  8062a8:	10002126 	beq	r2,zero,806330 <__sfvwrite_small_dev+0x90>
  8062ac:	2880008f 	ldh	r2,2(r5)
  8062b0:	defffa04 	addi	sp,sp,-24
  8062b4:	dc000015 	stw	r16,0(sp)
  8062b8:	dfc00515 	stw	ra,20(sp)
  8062bc:	dd000415 	stw	r20,16(sp)
  8062c0:	dcc00315 	stw	r19,12(sp)
  8062c4:	dc800215 	stw	r18,8(sp)
  8062c8:	dc400115 	stw	r17,4(sp)
  8062cc:	2821883a 	mov	r16,r5
  8062d0:	10001216 	blt	r2,zero,80631c <__sfvwrite_small_dev+0x7c>
  8062d4:	2027883a 	mov	r19,r4
  8062d8:	3025883a 	mov	r18,r6
  8062dc:	3823883a 	mov	r17,r7
  8062e0:	05010004 	movi	r20,1024
  8062e4:	04400b0e 	bge	zero,r17,806314 <__sfvwrite_small_dev+0x74>
  8062e8:	880f883a 	mov	r7,r17
  8062ec:	a440010e 	bge	r20,r17,8062f4 <__sfvwrite_small_dev+0x54>
  8062f0:	01c10004 	movi	r7,1024
  8062f4:	8140008f 	ldh	r5,2(r16)
  8062f8:	900d883a 	mov	r6,r18
  8062fc:	9809883a 	mov	r4,r19
  806300:	08075600 	call	807560 <_write_r>
  806304:	0080050e 	bge	zero,r2,80631c <__sfvwrite_small_dev+0x7c>
  806308:	88a3c83a 	sub	r17,r17,r2
  80630c:	90a5883a 	add	r18,r18,r2
  806310:	003ff406 	br	8062e4 <__alt_data_end+0xff8062e4>
  806314:	0005883a 	mov	r2,zero
  806318:	00000706 	br	806338 <__sfvwrite_small_dev+0x98>
  80631c:	8080000b 	ldhu	r2,0(r16)
  806320:	10801014 	ori	r2,r2,64
  806324:	8080000d 	sth	r2,0(r16)
  806328:	00bfffc4 	movi	r2,-1
  80632c:	00000206 	br	806338 <__sfvwrite_small_dev+0x98>
  806330:	00bfffc4 	movi	r2,-1
  806334:	f800283a 	ret
  806338:	dfc00517 	ldw	ra,20(sp)
  80633c:	dd000417 	ldw	r20,16(sp)
  806340:	dcc00317 	ldw	r19,12(sp)
  806344:	dc800217 	ldw	r18,8(sp)
  806348:	dc400117 	ldw	r17,4(sp)
  80634c:	dc000017 	ldw	r16,0(sp)
  806350:	dec00604 	addi	sp,sp,24
  806354:	f800283a 	ret

00806358 <_Balloc>:
  806358:	20800417 	ldw	r2,16(r4)
  80635c:	defffc04 	addi	sp,sp,-16
  806360:	dc400115 	stw	r17,4(sp)
  806364:	dc000015 	stw	r16,0(sp)
  806368:	dfc00315 	stw	ra,12(sp)
  80636c:	dc800215 	stw	r18,8(sp)
  806370:	2021883a 	mov	r16,r4
  806374:	2823883a 	mov	r17,r5
  806378:	1000071e 	bne	r2,zero,806398 <_Balloc+0x40>
  80637c:	01000404 	movi	r4,16
  806380:	0808a9c0 	call	808a9c <malloc>
  806384:	80800415 	stw	r2,16(r16)
  806388:	10000115 	stw	zero,4(r2)
  80638c:	10000215 	stw	zero,8(r2)
  806390:	10000015 	stw	zero,0(r2)
  806394:	10000315 	stw	zero,12(r2)
  806398:	84800417 	ldw	r18,16(r16)
  80639c:	90800317 	ldw	r2,12(r18)
  8063a0:	10000a26 	beq	r2,zero,8063cc <_Balloc+0x74>
  8063a4:	80800417 	ldw	r2,16(r16)
  8063a8:	8c47883a 	add	r3,r17,r17
  8063ac:	18c7883a 	add	r3,r3,r3
  8063b0:	10800317 	ldw	r2,12(r2)
  8063b4:	10c7883a 	add	r3,r2,r3
  8063b8:	18800017 	ldw	r2,0(r3)
  8063bc:	10000d26 	beq	r2,zero,8063f4 <_Balloc+0x9c>
  8063c0:	11000017 	ldw	r4,0(r2)
  8063c4:	19000015 	stw	r4,0(r3)
  8063c8:	00001406 	br	80641c <_Balloc+0xc4>
  8063cc:	01800844 	movi	r6,33
  8063d0:	01400104 	movi	r5,4
  8063d4:	8009883a 	mov	r4,r16
  8063d8:	080729c0 	call	80729c <_calloc_r>
  8063dc:	90800315 	stw	r2,12(r18)
  8063e0:	80800417 	ldw	r2,16(r16)
  8063e4:	10800317 	ldw	r2,12(r2)
  8063e8:	103fee1e 	bne	r2,zero,8063a4 <__alt_data_end+0xff8063a4>
  8063ec:	0005883a 	mov	r2,zero
  8063f0:	00000c06 	br	806424 <_Balloc+0xcc>
  8063f4:	01400044 	movi	r5,1
  8063f8:	2c64983a 	sll	r18,r5,r17
  8063fc:	8009883a 	mov	r4,r16
  806400:	91800144 	addi	r6,r18,5
  806404:	318d883a 	add	r6,r6,r6
  806408:	318d883a 	add	r6,r6,r6
  80640c:	080729c0 	call	80729c <_calloc_r>
  806410:	103ff626 	beq	r2,zero,8063ec <__alt_data_end+0xff8063ec>
  806414:	14400115 	stw	r17,4(r2)
  806418:	14800215 	stw	r18,8(r2)
  80641c:	10000415 	stw	zero,16(r2)
  806420:	10000315 	stw	zero,12(r2)
  806424:	dfc00317 	ldw	ra,12(sp)
  806428:	dc800217 	ldw	r18,8(sp)
  80642c:	dc400117 	ldw	r17,4(sp)
  806430:	dc000017 	ldw	r16,0(sp)
  806434:	dec00404 	addi	sp,sp,16
  806438:	f800283a 	ret

0080643c <_Bfree>:
  80643c:	20800417 	ldw	r2,16(r4)
  806440:	defffd04 	addi	sp,sp,-12
  806444:	dc400115 	stw	r17,4(sp)
  806448:	dc000015 	stw	r16,0(sp)
  80644c:	dfc00215 	stw	ra,8(sp)
  806450:	2023883a 	mov	r17,r4
  806454:	2821883a 	mov	r16,r5
  806458:	1000071e 	bne	r2,zero,806478 <_Bfree+0x3c>
  80645c:	01000404 	movi	r4,16
  806460:	0808a9c0 	call	808a9c <malloc>
  806464:	88800415 	stw	r2,16(r17)
  806468:	10000115 	stw	zero,4(r2)
  80646c:	10000215 	stw	zero,8(r2)
  806470:	10000015 	stw	zero,0(r2)
  806474:	10000315 	stw	zero,12(r2)
  806478:	80000926 	beq	r16,zero,8064a0 <_Bfree+0x64>
  80647c:	88c00417 	ldw	r3,16(r17)
  806480:	80800117 	ldw	r2,4(r16)
  806484:	18c00317 	ldw	r3,12(r3)
  806488:	1085883a 	add	r2,r2,r2
  80648c:	1085883a 	add	r2,r2,r2
  806490:	1885883a 	add	r2,r3,r2
  806494:	10c00017 	ldw	r3,0(r2)
  806498:	80c00015 	stw	r3,0(r16)
  80649c:	14000015 	stw	r16,0(r2)
  8064a0:	dfc00217 	ldw	ra,8(sp)
  8064a4:	dc400117 	ldw	r17,4(sp)
  8064a8:	dc000017 	ldw	r16,0(sp)
  8064ac:	dec00304 	addi	sp,sp,12
  8064b0:	f800283a 	ret

008064b4 <__multadd>:
  8064b4:	defffa04 	addi	sp,sp,-24
  8064b8:	dcc00315 	stw	r19,12(sp)
  8064bc:	dc800215 	stw	r18,8(sp)
  8064c0:	dc400115 	stw	r17,4(sp)
  8064c4:	dc000015 	stw	r16,0(sp)
  8064c8:	3825883a 	mov	r18,r7
  8064cc:	2821883a 	mov	r16,r5
  8064d0:	2c400417 	ldw	r17,16(r5)
  8064d4:	dfc00515 	stw	ra,20(sp)
  8064d8:	dd000415 	stw	r20,16(sp)
  8064dc:	2027883a 	mov	r19,r4
  8064e0:	29400504 	addi	r5,r5,20
  8064e4:	000f883a 	mov	r7,zero
  8064e8:	28c00017 	ldw	r3,0(r5)
  8064ec:	39c00044 	addi	r7,r7,1
  8064f0:	29400104 	addi	r5,r5,4
  8064f4:	18bfffcc 	andi	r2,r3,65535
  8064f8:	1185383a 	mul	r2,r2,r6
  8064fc:	1806d43a 	srli	r3,r3,16
  806500:	1485883a 	add	r2,r2,r18
  806504:	1989383a 	mul	r4,r3,r6
  806508:	1006d43a 	srli	r3,r2,16
  80650c:	10bfffcc 	andi	r2,r2,65535
  806510:	20c7883a 	add	r3,r4,r3
  806514:	1824d43a 	srli	r18,r3,16
  806518:	1806943a 	slli	r3,r3,16
  80651c:	1885883a 	add	r2,r3,r2
  806520:	28bfff15 	stw	r2,-4(r5)
  806524:	3c7ff016 	blt	r7,r17,8064e8 <__alt_data_end+0xff8064e8>
  806528:	90001926 	beq	r18,zero,806590 <__multadd+0xdc>
  80652c:	80800217 	ldw	r2,8(r16)
  806530:	88801016 	blt	r17,r2,806574 <__multadd+0xc0>
  806534:	81400117 	ldw	r5,4(r16)
  806538:	9809883a 	mov	r4,r19
  80653c:	29400044 	addi	r5,r5,1
  806540:	08063580 	call	806358 <_Balloc>
  806544:	81800417 	ldw	r6,16(r16)
  806548:	81400304 	addi	r5,r16,12
  80654c:	11000304 	addi	r4,r2,12
  806550:	31800084 	addi	r6,r6,2
  806554:	318d883a 	add	r6,r6,r6
  806558:	318d883a 	add	r6,r6,r6
  80655c:	1029883a 	mov	r20,r2
  806560:	0808ac40 	call	808ac4 <memcpy>
  806564:	800b883a 	mov	r5,r16
  806568:	9809883a 	mov	r4,r19
  80656c:	080643c0 	call	80643c <_Bfree>
  806570:	a021883a 	mov	r16,r20
  806574:	88800144 	addi	r2,r17,5
  806578:	1085883a 	add	r2,r2,r2
  80657c:	1085883a 	add	r2,r2,r2
  806580:	8085883a 	add	r2,r16,r2
  806584:	14800015 	stw	r18,0(r2)
  806588:	8c400044 	addi	r17,r17,1
  80658c:	84400415 	stw	r17,16(r16)
  806590:	8005883a 	mov	r2,r16
  806594:	dfc00517 	ldw	ra,20(sp)
  806598:	dd000417 	ldw	r20,16(sp)
  80659c:	dcc00317 	ldw	r19,12(sp)
  8065a0:	dc800217 	ldw	r18,8(sp)
  8065a4:	dc400117 	ldw	r17,4(sp)
  8065a8:	dc000017 	ldw	r16,0(sp)
  8065ac:	dec00604 	addi	sp,sp,24
  8065b0:	f800283a 	ret

008065b4 <__s2b>:
  8065b4:	defff904 	addi	sp,sp,-28
  8065b8:	dc800215 	stw	r18,8(sp)
  8065bc:	dc000015 	stw	r16,0(sp)
  8065c0:	2025883a 	mov	r18,r4
  8065c4:	2821883a 	mov	r16,r5
  8065c8:	39000204 	addi	r4,r7,8
  8065cc:	01400244 	movi	r5,9
  8065d0:	dcc00315 	stw	r19,12(sp)
  8065d4:	dc400115 	stw	r17,4(sp)
  8065d8:	dfc00615 	stw	ra,24(sp)
  8065dc:	dd400515 	stw	r21,20(sp)
  8065e0:	dd000415 	stw	r20,16(sp)
  8065e4:	3023883a 	mov	r17,r6
  8065e8:	3827883a 	mov	r19,r7
  8065ec:	08026fc0 	call	8026fc <__divsi3>
  8065f0:	00c00044 	movi	r3,1
  8065f4:	000b883a 	mov	r5,zero
  8065f8:	1880030e 	bge	r3,r2,806608 <__s2b+0x54>
  8065fc:	18c7883a 	add	r3,r3,r3
  806600:	29400044 	addi	r5,r5,1
  806604:	003ffc06 	br	8065f8 <__alt_data_end+0xff8065f8>
  806608:	9009883a 	mov	r4,r18
  80660c:	08063580 	call	806358 <_Balloc>
  806610:	d8c00717 	ldw	r3,28(sp)
  806614:	10c00515 	stw	r3,20(r2)
  806618:	00c00044 	movi	r3,1
  80661c:	10c00415 	stw	r3,16(r2)
  806620:	00c00244 	movi	r3,9
  806624:	1c400e0e 	bge	r3,r17,806660 <__s2b+0xac>
  806628:	80e9883a 	add	r20,r16,r3
  80662c:	a02b883a 	mov	r21,r20
  806630:	8461883a 	add	r16,r16,r17
  806634:	a9c00007 	ldb	r7,0(r21)
  806638:	01800284 	movi	r6,10
  80663c:	100b883a 	mov	r5,r2
  806640:	39fff404 	addi	r7,r7,-48
  806644:	9009883a 	mov	r4,r18
  806648:	ad400044 	addi	r21,r21,1
  80664c:	08064b40 	call	8064b4 <__multadd>
  806650:	ac3ff81e 	bne	r21,r16,806634 <__alt_data_end+0xff806634>
  806654:	a461883a 	add	r16,r20,r17
  806658:	843ffe04 	addi	r16,r16,-8
  80665c:	00000206 	br	806668 <__s2b+0xb4>
  806660:	84000284 	addi	r16,r16,10
  806664:	1823883a 	mov	r17,r3
  806668:	8c23c83a 	sub	r17,r17,r16
  80666c:	8c07883a 	add	r3,r17,r16
  806670:	1cc0080e 	bge	r3,r19,806694 <__s2b+0xe0>
  806674:	81c00007 	ldb	r7,0(r16)
  806678:	01800284 	movi	r6,10
  80667c:	100b883a 	mov	r5,r2
  806680:	39fff404 	addi	r7,r7,-48
  806684:	9009883a 	mov	r4,r18
  806688:	08064b40 	call	8064b4 <__multadd>
  80668c:	84000044 	addi	r16,r16,1
  806690:	003ff606 	br	80666c <__alt_data_end+0xff80666c>
  806694:	dfc00617 	ldw	ra,24(sp)
  806698:	dd400517 	ldw	r21,20(sp)
  80669c:	dd000417 	ldw	r20,16(sp)
  8066a0:	dcc00317 	ldw	r19,12(sp)
  8066a4:	dc800217 	ldw	r18,8(sp)
  8066a8:	dc400117 	ldw	r17,4(sp)
  8066ac:	dc000017 	ldw	r16,0(sp)
  8066b0:	dec00704 	addi	sp,sp,28
  8066b4:	f800283a 	ret

008066b8 <__hi0bits>:
  8066b8:	20bfffec 	andhi	r2,r4,65535
  8066bc:	1000031e 	bne	r2,zero,8066cc <__hi0bits+0x14>
  8066c0:	2008943a 	slli	r4,r4,16
  8066c4:	00800404 	movi	r2,16
  8066c8:	00000106 	br	8066d0 <__hi0bits+0x18>
  8066cc:	0005883a 	mov	r2,zero
  8066d0:	20ffc02c 	andhi	r3,r4,65280
  8066d4:	1800021e 	bne	r3,zero,8066e0 <__hi0bits+0x28>
  8066d8:	2008923a 	slli	r4,r4,8
  8066dc:	10800204 	addi	r2,r2,8
  8066e0:	20fc002c 	andhi	r3,r4,61440
  8066e4:	1800021e 	bne	r3,zero,8066f0 <__hi0bits+0x38>
  8066e8:	2008913a 	slli	r4,r4,4
  8066ec:	10800104 	addi	r2,r2,4
  8066f0:	20f0002c 	andhi	r3,r4,49152
  8066f4:	1800031e 	bne	r3,zero,806704 <__hi0bits+0x4c>
  8066f8:	2109883a 	add	r4,r4,r4
  8066fc:	10800084 	addi	r2,r2,2
  806700:	2109883a 	add	r4,r4,r4
  806704:	20000516 	blt	r4,zero,80671c <__hi0bits+0x64>
  806708:	2110002c 	andhi	r4,r4,16384
  80670c:	20000226 	beq	r4,zero,806718 <__hi0bits+0x60>
  806710:	10800044 	addi	r2,r2,1
  806714:	f800283a 	ret
  806718:	00800804 	movi	r2,32
  80671c:	f800283a 	ret

00806720 <__lo0bits>:
  806720:	20c00017 	ldw	r3,0(r4)
  806724:	188001cc 	andi	r2,r3,7
  806728:	10000c26 	beq	r2,zero,80675c <__lo0bits+0x3c>
  80672c:	1880004c 	andi	r2,r3,1
  806730:	1000231e 	bne	r2,zero,8067c0 <__lo0bits+0xa0>
  806734:	1880008c 	andi	r2,r3,2
  806738:	10000426 	beq	r2,zero,80674c <__lo0bits+0x2c>
  80673c:	1806d07a 	srli	r3,r3,1
  806740:	00800044 	movi	r2,1
  806744:	20c00015 	stw	r3,0(r4)
  806748:	f800283a 	ret
  80674c:	1806d0ba 	srli	r3,r3,2
  806750:	00800084 	movi	r2,2
  806754:	20c00015 	stw	r3,0(r4)
  806758:	f800283a 	ret
  80675c:	18bfffcc 	andi	r2,r3,65535
  806760:	1000031e 	bne	r2,zero,806770 <__lo0bits+0x50>
  806764:	1806d43a 	srli	r3,r3,16
  806768:	00800404 	movi	r2,16
  80676c:	00000106 	br	806774 <__lo0bits+0x54>
  806770:	0005883a 	mov	r2,zero
  806774:	19403fcc 	andi	r5,r3,255
  806778:	2800021e 	bne	r5,zero,806784 <__lo0bits+0x64>
  80677c:	1806d23a 	srli	r3,r3,8
  806780:	10800204 	addi	r2,r2,8
  806784:	194003cc 	andi	r5,r3,15
  806788:	2800021e 	bne	r5,zero,806794 <__lo0bits+0x74>
  80678c:	1806d13a 	srli	r3,r3,4
  806790:	10800104 	addi	r2,r2,4
  806794:	194000cc 	andi	r5,r3,3
  806798:	2800021e 	bne	r5,zero,8067a4 <__lo0bits+0x84>
  80679c:	1806d0ba 	srli	r3,r3,2
  8067a0:	10800084 	addi	r2,r2,2
  8067a4:	1940004c 	andi	r5,r3,1
  8067a8:	2800031e 	bne	r5,zero,8067b8 <__lo0bits+0x98>
  8067ac:	1806d07a 	srli	r3,r3,1
  8067b0:	18000526 	beq	r3,zero,8067c8 <__lo0bits+0xa8>
  8067b4:	10800044 	addi	r2,r2,1
  8067b8:	20c00015 	stw	r3,0(r4)
  8067bc:	f800283a 	ret
  8067c0:	0005883a 	mov	r2,zero
  8067c4:	f800283a 	ret
  8067c8:	00800804 	movi	r2,32
  8067cc:	f800283a 	ret

008067d0 <__i2b>:
  8067d0:	defffd04 	addi	sp,sp,-12
  8067d4:	dc000015 	stw	r16,0(sp)
  8067d8:	04000044 	movi	r16,1
  8067dc:	dc400115 	stw	r17,4(sp)
  8067e0:	2823883a 	mov	r17,r5
  8067e4:	800b883a 	mov	r5,r16
  8067e8:	dfc00215 	stw	ra,8(sp)
  8067ec:	08063580 	call	806358 <_Balloc>
  8067f0:	14400515 	stw	r17,20(r2)
  8067f4:	14000415 	stw	r16,16(r2)
  8067f8:	dfc00217 	ldw	ra,8(sp)
  8067fc:	dc400117 	ldw	r17,4(sp)
  806800:	dc000017 	ldw	r16,0(sp)
  806804:	dec00304 	addi	sp,sp,12
  806808:	f800283a 	ret

0080680c <__multiply>:
  80680c:	28c00417 	ldw	r3,16(r5)
  806810:	30800417 	ldw	r2,16(r6)
  806814:	defffa04 	addi	sp,sp,-24
  806818:	dd000415 	stw	r20,16(sp)
  80681c:	dcc00315 	stw	r19,12(sp)
  806820:	dfc00515 	stw	ra,20(sp)
  806824:	dc800215 	stw	r18,8(sp)
  806828:	dc400115 	stw	r17,4(sp)
  80682c:	dc000015 	stw	r16,0(sp)
  806830:	2827883a 	mov	r19,r5
  806834:	3029883a 	mov	r20,r6
  806838:	1880020e 	bge	r3,r2,806844 <__multiply+0x38>
  80683c:	3027883a 	mov	r19,r6
  806840:	2829883a 	mov	r20,r5
  806844:	9c400417 	ldw	r17,16(r19)
  806848:	a4000417 	ldw	r16,16(r20)
  80684c:	98800217 	ldw	r2,8(r19)
  806850:	99400117 	ldw	r5,4(r19)
  806854:	8c25883a 	add	r18,r17,r16
  806858:	1480010e 	bge	r2,r18,806860 <__multiply+0x54>
  80685c:	29400044 	addi	r5,r5,1
  806860:	08063580 	call	806358 <_Balloc>
  806864:	948f883a 	add	r7,r18,r18
  806868:	12000504 	addi	r8,r2,20
  80686c:	39cf883a 	add	r7,r7,r7
  806870:	41cf883a 	add	r7,r8,r7
  806874:	4007883a 	mov	r3,r8
  806878:	19c0032e 	bgeu	r3,r7,806888 <__multiply+0x7c>
  80687c:	18000015 	stw	zero,0(r3)
  806880:	18c00104 	addi	r3,r3,4
  806884:	003ffc06 	br	806878 <__alt_data_end+0xff806878>
  806888:	8c63883a 	add	r17,r17,r17
  80688c:	8421883a 	add	r16,r16,r16
  806890:	99400504 	addi	r5,r19,20
  806894:	8c63883a 	add	r17,r17,r17
  806898:	a1800504 	addi	r6,r20,20
  80689c:	8421883a 	add	r16,r16,r16
  8068a0:	2c63883a 	add	r17,r5,r17
  8068a4:	3421883a 	add	r16,r6,r16
  8068a8:	3400442e 	bgeu	r6,r16,8069bc <__multiply+0x1b0>
  8068ac:	3340000b 	ldhu	r13,0(r6)
  8068b0:	68001a26 	beq	r13,zero,80691c <__multiply+0x110>
  8068b4:	4017883a 	mov	r11,r8
  8068b8:	2819883a 	mov	r12,r5
  8068bc:	001f883a 	mov	r15,zero
  8068c0:	62800017 	ldw	r10,0(r12)
  8068c4:	5a400017 	ldw	r9,0(r11)
  8068c8:	63000104 	addi	r12,r12,4
  8068cc:	50ffffcc 	andi	r3,r10,65535
  8068d0:	1b47383a 	mul	r3,r3,r13
  8068d4:	493fffcc 	andi	r4,r9,65535
  8068d8:	4812d43a 	srli	r9,r9,16
  8068dc:	1907883a 	add	r3,r3,r4
  8068e0:	5008d43a 	srli	r4,r10,16
  8068e4:	1bc7883a 	add	r3,r3,r15
  8068e8:	581d883a 	mov	r14,r11
  8068ec:	2349383a 	mul	r4,r4,r13
  8068f0:	5ac00104 	addi	r11,r11,4
  8068f4:	2253883a 	add	r9,r4,r9
  8068f8:	1808d43a 	srli	r4,r3,16
  8068fc:	18ffffcc 	andi	r3,r3,65535
  806900:	4909883a 	add	r4,r9,r4
  806904:	201ed43a 	srli	r15,r4,16
  806908:	2008943a 	slli	r4,r4,16
  80690c:	20c6b03a 	or	r3,r4,r3
  806910:	58ffff15 	stw	r3,-4(r11)
  806914:	647fea36 	bltu	r12,r17,8068c0 <__alt_data_end+0xff8068c0>
  806918:	73c00115 	stw	r15,4(r14)
  80691c:	32c00017 	ldw	r11,0(r6)
  806920:	5816d43a 	srli	r11,r11,16
  806924:	58001e26 	beq	r11,zero,8069a0 <__multiply+0x194>
  806928:	40c00017 	ldw	r3,0(r8)
  80692c:	2815883a 	mov	r10,r5
  806930:	401b883a 	mov	r13,r8
  806934:	4019883a 	mov	r12,r8
  806938:	0009883a 	mov	r4,zero
  80693c:	5240000b 	ldhu	r9,0(r10)
  806940:	18ffffcc 	andi	r3,r3,65535
  806944:	52800104 	addi	r10,r10,4
  806948:	4add383a 	mul	r14,r9,r11
  80694c:	62400017 	ldw	r9,0(r12)
  806950:	6b400104 	addi	r13,r13,4
  806954:	4812d43a 	srli	r9,r9,16
  806958:	7253883a 	add	r9,r14,r9
  80695c:	4913883a 	add	r9,r9,r4
  806960:	4808943a 	slli	r4,r9,16
  806964:	63800104 	addi	r14,r12,4
  806968:	20c6b03a 	or	r3,r4,r3
  80696c:	68ffff15 	stw	r3,-4(r13)
  806970:	50ffff17 	ldw	r3,-4(r10)
  806974:	7100000b 	ldhu	r4,0(r14)
  806978:	1806d43a 	srli	r3,r3,16
  80697c:	1ac7383a 	mul	r3,r3,r11
  806980:	1909883a 	add	r4,r3,r4
  806984:	4806d43a 	srli	r3,r9,16
  806988:	20c7883a 	add	r3,r4,r3
  80698c:	1808d43a 	srli	r4,r3,16
  806990:	5440022e 	bgeu	r10,r17,80699c <__multiply+0x190>
  806994:	7019883a 	mov	r12,r14
  806998:	003fe806 	br	80693c <__alt_data_end+0xff80693c>
  80699c:	60c00115 	stw	r3,4(r12)
  8069a0:	31800104 	addi	r6,r6,4
  8069a4:	42000104 	addi	r8,r8,4
  8069a8:	003fbf06 	br	8068a8 <__alt_data_end+0xff8068a8>
  8069ac:	39ffff04 	addi	r7,r7,-4
  8069b0:	38c00017 	ldw	r3,0(r7)
  8069b4:	1800021e 	bne	r3,zero,8069c0 <__multiply+0x1b4>
  8069b8:	94bfffc4 	addi	r18,r18,-1
  8069bc:	04bffb16 	blt	zero,r18,8069ac <__alt_data_end+0xff8069ac>
  8069c0:	14800415 	stw	r18,16(r2)
  8069c4:	dfc00517 	ldw	ra,20(sp)
  8069c8:	dd000417 	ldw	r20,16(sp)
  8069cc:	dcc00317 	ldw	r19,12(sp)
  8069d0:	dc800217 	ldw	r18,8(sp)
  8069d4:	dc400117 	ldw	r17,4(sp)
  8069d8:	dc000017 	ldw	r16,0(sp)
  8069dc:	dec00604 	addi	sp,sp,24
  8069e0:	f800283a 	ret

008069e4 <__pow5mult>:
  8069e4:	defffa04 	addi	sp,sp,-24
  8069e8:	dc800215 	stw	r18,8(sp)
  8069ec:	dc400115 	stw	r17,4(sp)
  8069f0:	dfc00515 	stw	ra,20(sp)
  8069f4:	dd000415 	stw	r20,16(sp)
  8069f8:	dcc00315 	stw	r19,12(sp)
  8069fc:	dc000015 	stw	r16,0(sp)
  806a00:	308000cc 	andi	r2,r6,3
  806a04:	2025883a 	mov	r18,r4
  806a08:	3023883a 	mov	r17,r6
  806a0c:	10000b26 	beq	r2,zero,806a3c <__pow5mult+0x58>
  806a10:	10bfffc4 	addi	r2,r2,-1
  806a14:	1085883a 	add	r2,r2,r2
  806a18:	00c02074 	movhi	r3,129
  806a1c:	18ec5404 	addi	r3,r3,-20144
  806a20:	1085883a 	add	r2,r2,r2
  806a24:	1885883a 	add	r2,r3,r2
  806a28:	11800017 	ldw	r6,0(r2)
  806a2c:	000f883a 	mov	r7,zero
  806a30:	08064b40 	call	8064b4 <__multadd>
  806a34:	1029883a 	mov	r20,r2
  806a38:	00000106 	br	806a40 <__pow5mult+0x5c>
  806a3c:	2829883a 	mov	r20,r5
  806a40:	8823d0ba 	srai	r17,r17,2
  806a44:	88002b26 	beq	r17,zero,806af4 <__pow5mult+0x110>
  806a48:	90800417 	ldw	r2,16(r18)
  806a4c:	1000071e 	bne	r2,zero,806a6c <__pow5mult+0x88>
  806a50:	01000404 	movi	r4,16
  806a54:	0808a9c0 	call	808a9c <malloc>
  806a58:	90800415 	stw	r2,16(r18)
  806a5c:	10000115 	stw	zero,4(r2)
  806a60:	10000215 	stw	zero,8(r2)
  806a64:	10000015 	stw	zero,0(r2)
  806a68:	10000315 	stw	zero,12(r2)
  806a6c:	94c00417 	ldw	r19,16(r18)
  806a70:	9c000217 	ldw	r16,8(r19)
  806a74:	80000c1e 	bne	r16,zero,806aa8 <__pow5mult+0xc4>
  806a78:	01409c44 	movi	r5,625
  806a7c:	9009883a 	mov	r4,r18
  806a80:	08067d00 	call	8067d0 <__i2b>
  806a84:	98800215 	stw	r2,8(r19)
  806a88:	1021883a 	mov	r16,r2
  806a8c:	10000015 	stw	zero,0(r2)
  806a90:	00000506 	br	806aa8 <__pow5mult+0xc4>
  806a94:	8823d07a 	srai	r17,r17,1
  806a98:	88001626 	beq	r17,zero,806af4 <__pow5mult+0x110>
  806a9c:	80800017 	ldw	r2,0(r16)
  806aa0:	10000d26 	beq	r2,zero,806ad8 <__pow5mult+0xf4>
  806aa4:	1021883a 	mov	r16,r2
  806aa8:	8880004c 	andi	r2,r17,1
  806aac:	103ff926 	beq	r2,zero,806a94 <__alt_data_end+0xff806a94>
  806ab0:	a00b883a 	mov	r5,r20
  806ab4:	800d883a 	mov	r6,r16
  806ab8:	9009883a 	mov	r4,r18
  806abc:	080680c0 	call	80680c <__multiply>
  806ac0:	1027883a 	mov	r19,r2
  806ac4:	a00b883a 	mov	r5,r20
  806ac8:	9009883a 	mov	r4,r18
  806acc:	080643c0 	call	80643c <_Bfree>
  806ad0:	9829883a 	mov	r20,r19
  806ad4:	003fef06 	br	806a94 <__alt_data_end+0xff806a94>
  806ad8:	800d883a 	mov	r6,r16
  806adc:	800b883a 	mov	r5,r16
  806ae0:	9009883a 	mov	r4,r18
  806ae4:	080680c0 	call	80680c <__multiply>
  806ae8:	80800015 	stw	r2,0(r16)
  806aec:	10000015 	stw	zero,0(r2)
  806af0:	003fec06 	br	806aa4 <__alt_data_end+0xff806aa4>
  806af4:	a005883a 	mov	r2,r20
  806af8:	dfc00517 	ldw	ra,20(sp)
  806afc:	dd000417 	ldw	r20,16(sp)
  806b00:	dcc00317 	ldw	r19,12(sp)
  806b04:	dc800217 	ldw	r18,8(sp)
  806b08:	dc400117 	ldw	r17,4(sp)
  806b0c:	dc000017 	ldw	r16,0(sp)
  806b10:	dec00604 	addi	sp,sp,24
  806b14:	f800283a 	ret

00806b18 <__lshift>:
  806b18:	defff804 	addi	sp,sp,-32
  806b1c:	dc400215 	stw	r17,8(sp)
  806b20:	2823883a 	mov	r17,r5
  806b24:	dd000515 	stw	r20,20(sp)
  806b28:	dc000115 	stw	r16,4(sp)
  806b2c:	8d000417 	ldw	r20,16(r17)
  806b30:	3021d17a 	srai	r16,r6,5
  806b34:	29400117 	ldw	r5,4(r5)
  806b38:	88800217 	ldw	r2,8(r17)
  806b3c:	8529883a 	add	r20,r16,r20
  806b40:	dd400615 	stw	r21,24(sp)
  806b44:	dcc00415 	stw	r19,16(sp)
  806b48:	dc800315 	stw	r18,12(sp)
  806b4c:	dfc00715 	stw	ra,28(sp)
  806b50:	2025883a 	mov	r18,r4
  806b54:	302b883a 	mov	r21,r6
  806b58:	a4c00044 	addi	r19,r20,1
  806b5c:	14c0030e 	bge	r2,r19,806b6c <__lshift+0x54>
  806b60:	29400044 	addi	r5,r5,1
  806b64:	1085883a 	add	r2,r2,r2
  806b68:	003ffc06 	br	806b5c <__alt_data_end+0xff806b5c>
  806b6c:	9009883a 	mov	r4,r18
  806b70:	08063580 	call	806358 <_Balloc>
  806b74:	10c00504 	addi	r3,r2,20
  806b78:	180d883a 	mov	r6,r3
  806b7c:	000b883a 	mov	r5,zero
  806b80:	2c00040e 	bge	r5,r16,806b94 <__lshift+0x7c>
  806b84:	30000015 	stw	zero,0(r6)
  806b88:	29400044 	addi	r5,r5,1
  806b8c:	31800104 	addi	r6,r6,4
  806b90:	003ffb06 	br	806b80 <__alt_data_end+0xff806b80>
  806b94:	8009883a 	mov	r4,r16
  806b98:	8000010e 	bge	r16,zero,806ba0 <__lshift+0x88>
  806b9c:	0009883a 	mov	r4,zero
  806ba0:	89400417 	ldw	r5,16(r17)
  806ba4:	2109883a 	add	r4,r4,r4
  806ba8:	2109883a 	add	r4,r4,r4
  806bac:	294b883a 	add	r5,r5,r5
  806bb0:	1907883a 	add	r3,r3,r4
  806bb4:	294b883a 	add	r5,r5,r5
  806bb8:	89000504 	addi	r4,r17,20
  806bbc:	a98007cc 	andi	r6,r21,31
  806bc0:	214b883a 	add	r5,r4,r5
  806bc4:	30001126 	beq	r6,zero,806c0c <__lshift+0xf4>
  806bc8:	02000804 	movi	r8,32
  806bcc:	4191c83a 	sub	r8,r8,r6
  806bd0:	000f883a 	mov	r7,zero
  806bd4:	22400017 	ldw	r9,0(r4)
  806bd8:	21000104 	addi	r4,r4,4
  806bdc:	1815883a 	mov	r10,r3
  806be0:	4992983a 	sll	r9,r9,r6
  806be4:	18c00104 	addi	r3,r3,4
  806be8:	49ceb03a 	or	r7,r9,r7
  806bec:	19ffff15 	stw	r7,-4(r3)
  806bf0:	21ffff17 	ldw	r7,-4(r4)
  806bf4:	3a0ed83a 	srl	r7,r7,r8
  806bf8:	217ff636 	bltu	r4,r5,806bd4 <__alt_data_end+0xff806bd4>
  806bfc:	51c00115 	stw	r7,4(r10)
  806c00:	38000726 	beq	r7,zero,806c20 <__lshift+0x108>
  806c04:	a4c00084 	addi	r19,r20,2
  806c08:	00000506 	br	806c20 <__lshift+0x108>
  806c0c:	21800017 	ldw	r6,0(r4)
  806c10:	21000104 	addi	r4,r4,4
  806c14:	18c00104 	addi	r3,r3,4
  806c18:	19bfff15 	stw	r6,-4(r3)
  806c1c:	217ffb36 	bltu	r4,r5,806c0c <__alt_data_end+0xff806c0c>
  806c20:	9cffffc4 	addi	r19,r19,-1
  806c24:	14c00415 	stw	r19,16(r2)
  806c28:	880b883a 	mov	r5,r17
  806c2c:	9009883a 	mov	r4,r18
  806c30:	d8800015 	stw	r2,0(sp)
  806c34:	080643c0 	call	80643c <_Bfree>
  806c38:	d8800017 	ldw	r2,0(sp)
  806c3c:	dfc00717 	ldw	ra,28(sp)
  806c40:	dd400617 	ldw	r21,24(sp)
  806c44:	dd000517 	ldw	r20,20(sp)
  806c48:	dcc00417 	ldw	r19,16(sp)
  806c4c:	dc800317 	ldw	r18,12(sp)
  806c50:	dc400217 	ldw	r17,8(sp)
  806c54:	dc000117 	ldw	r16,4(sp)
  806c58:	dec00804 	addi	sp,sp,32
  806c5c:	f800283a 	ret

00806c60 <__mcmp>:
  806c60:	20800417 	ldw	r2,16(r4)
  806c64:	28c00417 	ldw	r3,16(r5)
  806c68:	10c5c83a 	sub	r2,r2,r3
  806c6c:	1000121e 	bne	r2,zero,806cb8 <__mcmp+0x58>
  806c70:	18c7883a 	add	r3,r3,r3
  806c74:	18c7883a 	add	r3,r3,r3
  806c78:	21000504 	addi	r4,r4,20
  806c7c:	29400504 	addi	r5,r5,20
  806c80:	20c5883a 	add	r2,r4,r3
  806c84:	28cb883a 	add	r5,r5,r3
  806c88:	10bfff04 	addi	r2,r2,-4
  806c8c:	297fff04 	addi	r5,r5,-4
  806c90:	11800017 	ldw	r6,0(r2)
  806c94:	28c00017 	ldw	r3,0(r5)
  806c98:	30c00326 	beq	r6,r3,806ca8 <__mcmp+0x48>
  806c9c:	30c00536 	bltu	r6,r3,806cb4 <__mcmp+0x54>
  806ca0:	00800044 	movi	r2,1
  806ca4:	f800283a 	ret
  806ca8:	20bff736 	bltu	r4,r2,806c88 <__alt_data_end+0xff806c88>
  806cac:	0005883a 	mov	r2,zero
  806cb0:	f800283a 	ret
  806cb4:	00bfffc4 	movi	r2,-1
  806cb8:	f800283a 	ret

00806cbc <__mdiff>:
  806cbc:	defffb04 	addi	sp,sp,-20
  806cc0:	dc000015 	stw	r16,0(sp)
  806cc4:	2821883a 	mov	r16,r5
  806cc8:	dcc00315 	stw	r19,12(sp)
  806ccc:	300b883a 	mov	r5,r6
  806cd0:	2027883a 	mov	r19,r4
  806cd4:	8009883a 	mov	r4,r16
  806cd8:	dc400115 	stw	r17,4(sp)
  806cdc:	dfc00415 	stw	ra,16(sp)
  806ce0:	dc800215 	stw	r18,8(sp)
  806ce4:	3023883a 	mov	r17,r6
  806ce8:	0806c600 	call	806c60 <__mcmp>
  806cec:	1000071e 	bne	r2,zero,806d0c <__mdiff+0x50>
  806cf0:	000b883a 	mov	r5,zero
  806cf4:	9809883a 	mov	r4,r19
  806cf8:	08063580 	call	806358 <_Balloc>
  806cfc:	00c00044 	movi	r3,1
  806d00:	10c00415 	stw	r3,16(r2)
  806d04:	10000515 	stw	zero,20(r2)
  806d08:	00004206 	br	806e14 <__mdiff+0x158>
  806d0c:	1000050e 	bge	r2,zero,806d24 <__mdiff+0x68>
  806d10:	8005883a 	mov	r2,r16
  806d14:	04800044 	movi	r18,1
  806d18:	8821883a 	mov	r16,r17
  806d1c:	1023883a 	mov	r17,r2
  806d20:	00000106 	br	806d28 <__mdiff+0x6c>
  806d24:	0025883a 	mov	r18,zero
  806d28:	81400117 	ldw	r5,4(r16)
  806d2c:	9809883a 	mov	r4,r19
  806d30:	08063580 	call	806358 <_Balloc>
  806d34:	82000417 	ldw	r8,16(r16)
  806d38:	88c00417 	ldw	r3,16(r17)
  806d3c:	81400504 	addi	r5,r16,20
  806d40:	420f883a 	add	r7,r8,r8
  806d44:	18c7883a 	add	r3,r3,r3
  806d48:	39cf883a 	add	r7,r7,r7
  806d4c:	8a800504 	addi	r10,r17,20
  806d50:	18c7883a 	add	r3,r3,r3
  806d54:	14800315 	stw	r18,12(r2)
  806d58:	29cf883a 	add	r7,r5,r7
  806d5c:	50c9883a 	add	r4,r10,r3
  806d60:	13000504 	addi	r12,r2,20
  806d64:	0017883a 	mov	r11,zero
  806d68:	29800017 	ldw	r6,0(r5)
  806d6c:	52400017 	ldw	r9,0(r10)
  806d70:	52800104 	addi	r10,r10,4
  806d74:	30ffffcc 	andi	r3,r6,65535
  806d78:	1ac7883a 	add	r3,r3,r11
  806d7c:	300cd43a 	srli	r6,r6,16
  806d80:	4affffcc 	andi	r11,r9,65535
  806d84:	4812d43a 	srli	r9,r9,16
  806d88:	1ac7c83a 	sub	r3,r3,r11
  806d8c:	29400104 	addi	r5,r5,4
  806d90:	3253c83a 	sub	r9,r6,r9
  806d94:	180dd43a 	srai	r6,r3,16
  806d98:	18ffffcc 	andi	r3,r3,65535
  806d9c:	498d883a 	add	r6,r9,r6
  806da0:	3017d43a 	srai	r11,r6,16
  806da4:	300c943a 	slli	r6,r6,16
  806da8:	62400104 	addi	r9,r12,4
  806dac:	30c6b03a 	or	r3,r6,r3
  806db0:	60c00015 	stw	r3,0(r12)
  806db4:	4819883a 	mov	r12,r9
  806db8:	513feb36 	bltu	r10,r4,806d68 <__alt_data_end+0xff806d68>
  806dbc:	4807883a 	mov	r3,r9
  806dc0:	29c00e2e 	bgeu	r5,r7,806dfc <__mdiff+0x140>
  806dc4:	29800017 	ldw	r6,0(r5)
  806dc8:	4a400104 	addi	r9,r9,4
  806dcc:	29400104 	addi	r5,r5,4
  806dd0:	313fffcc 	andi	r4,r6,65535
  806dd4:	22c9883a 	add	r4,r4,r11
  806dd8:	2007d43a 	srai	r3,r4,16
  806ddc:	300cd43a 	srli	r6,r6,16
  806de0:	213fffcc 	andi	r4,r4,65535
  806de4:	30cd883a 	add	r6,r6,r3
  806de8:	3017d43a 	srai	r11,r6,16
  806dec:	300c943a 	slli	r6,r6,16
  806df0:	3108b03a 	or	r4,r6,r4
  806df4:	493fff15 	stw	r4,-4(r9)
  806df8:	003ff006 	br	806dbc <__alt_data_end+0xff806dbc>
  806dfc:	18ffff04 	addi	r3,r3,-4
  806e00:	19000017 	ldw	r4,0(r3)
  806e04:	2000021e 	bne	r4,zero,806e10 <__mdiff+0x154>
  806e08:	423fffc4 	addi	r8,r8,-1
  806e0c:	003ffb06 	br	806dfc <__alt_data_end+0xff806dfc>
  806e10:	12000415 	stw	r8,16(r2)
  806e14:	dfc00417 	ldw	ra,16(sp)
  806e18:	dcc00317 	ldw	r19,12(sp)
  806e1c:	dc800217 	ldw	r18,8(sp)
  806e20:	dc400117 	ldw	r17,4(sp)
  806e24:	dc000017 	ldw	r16,0(sp)
  806e28:	dec00504 	addi	sp,sp,20
  806e2c:	f800283a 	ret

00806e30 <__ulp>:
  806e30:	295ffc2c 	andhi	r5,r5,32752
  806e34:	00bf3034 	movhi	r2,64704
  806e38:	2887883a 	add	r3,r5,r2
  806e3c:	00c00616 	blt	zero,r3,806e58 <__ulp+0x28>
  806e40:	00c7c83a 	sub	r3,zero,r3
  806e44:	1805d53a 	srai	r2,r3,20
  806e48:	00c004c4 	movi	r3,19
  806e4c:	18800416 	blt	r3,r2,806e60 <__ulp+0x30>
  806e50:	00c00234 	movhi	r3,8
  806e54:	1887d83a 	sra	r3,r3,r2
  806e58:	0005883a 	mov	r2,zero
  806e5c:	f800283a 	ret
  806e60:	117ffb04 	addi	r5,r2,-20
  806e64:	01000784 	movi	r4,30
  806e68:	0007883a 	mov	r3,zero
  806e6c:	00800044 	movi	r2,1
  806e70:	21400316 	blt	r4,r5,806e80 <__ulp+0x50>
  806e74:	010007c4 	movi	r4,31
  806e78:	214bc83a 	sub	r5,r4,r5
  806e7c:	1144983a 	sll	r2,r2,r5
  806e80:	f800283a 	ret

00806e84 <__b2d>:
  806e84:	defffa04 	addi	sp,sp,-24
  806e88:	dc000015 	stw	r16,0(sp)
  806e8c:	24000417 	ldw	r16,16(r4)
  806e90:	dcc00315 	stw	r19,12(sp)
  806e94:	24c00504 	addi	r19,r4,20
  806e98:	8421883a 	add	r16,r16,r16
  806e9c:	8421883a 	add	r16,r16,r16
  806ea0:	9c21883a 	add	r16,r19,r16
  806ea4:	dc400115 	stw	r17,4(sp)
  806ea8:	847fff17 	ldw	r17,-4(r16)
  806eac:	dd000415 	stw	r20,16(sp)
  806eb0:	dc800215 	stw	r18,8(sp)
  806eb4:	8809883a 	mov	r4,r17
  806eb8:	2829883a 	mov	r20,r5
  806ebc:	dfc00515 	stw	ra,20(sp)
  806ec0:	08066b80 	call	8066b8 <__hi0bits>
  806ec4:	01000804 	movi	r4,32
  806ec8:	2087c83a 	sub	r3,r4,r2
  806ecc:	a0c00015 	stw	r3,0(r20)
  806ed0:	00c00284 	movi	r3,10
  806ed4:	84bfff04 	addi	r18,r16,-4
  806ed8:	18800d16 	blt	r3,r2,806f10 <__b2d+0x8c>
  806edc:	018002c4 	movi	r6,11
  806ee0:	308bc83a 	sub	r5,r6,r2
  806ee4:	8946d83a 	srl	r3,r17,r5
  806ee8:	18cffc34 	orhi	r3,r3,16368
  806eec:	9c80022e 	bgeu	r19,r18,806ef8 <__b2d+0x74>
  806ef0:	81bffe17 	ldw	r6,-8(r16)
  806ef4:	00000106 	br	806efc <__b2d+0x78>
  806ef8:	000d883a 	mov	r6,zero
  806efc:	10800544 	addi	r2,r2,21
  806f00:	8884983a 	sll	r2,r17,r2
  806f04:	314cd83a 	srl	r6,r6,r5
  806f08:	1184b03a 	or	r2,r2,r6
  806f0c:	00001606 	br	806f68 <__b2d+0xe4>
  806f10:	9c80032e 	bgeu	r19,r18,806f20 <__b2d+0x9c>
  806f14:	84bffe04 	addi	r18,r16,-8
  806f18:	817ffe17 	ldw	r5,-8(r16)
  806f1c:	00000106 	br	806f24 <__b2d+0xa0>
  806f20:	000b883a 	mov	r5,zero
  806f24:	10bffd44 	addi	r2,r2,-11
  806f28:	10000d26 	beq	r2,zero,806f60 <__b2d+0xdc>
  806f2c:	2089c83a 	sub	r4,r4,r2
  806f30:	88a2983a 	sll	r17,r17,r2
  806f34:	2906d83a 	srl	r3,r5,r4
  806f38:	8c4ffc34 	orhi	r17,r17,16368
  806f3c:	88c6b03a 	or	r3,r17,r3
  806f40:	9c80022e 	bgeu	r19,r18,806f4c <__b2d+0xc8>
  806f44:	91bfff17 	ldw	r6,-4(r18)
  806f48:	00000106 	br	806f50 <__b2d+0xcc>
  806f4c:	000d883a 	mov	r6,zero
  806f50:	288a983a 	sll	r5,r5,r2
  806f54:	3104d83a 	srl	r2,r6,r4
  806f58:	2884b03a 	or	r2,r5,r2
  806f5c:	00000206 	br	806f68 <__b2d+0xe4>
  806f60:	88cffc34 	orhi	r3,r17,16368
  806f64:	2805883a 	mov	r2,r5
  806f68:	dfc00517 	ldw	ra,20(sp)
  806f6c:	dd000417 	ldw	r20,16(sp)
  806f70:	dcc00317 	ldw	r19,12(sp)
  806f74:	dc800217 	ldw	r18,8(sp)
  806f78:	dc400117 	ldw	r17,4(sp)
  806f7c:	dc000017 	ldw	r16,0(sp)
  806f80:	dec00604 	addi	sp,sp,24
  806f84:	f800283a 	ret

00806f88 <__d2b>:
  806f88:	defff804 	addi	sp,sp,-32
  806f8c:	dc000215 	stw	r16,8(sp)
  806f90:	2821883a 	mov	r16,r5
  806f94:	01400044 	movi	r5,1
  806f98:	dd000615 	stw	r20,24(sp)
  806f9c:	dcc00515 	stw	r19,20(sp)
  806fa0:	dc800415 	stw	r18,16(sp)
  806fa4:	dc400315 	stw	r17,12(sp)
  806fa8:	dfc00715 	stw	ra,28(sp)
  806fac:	3023883a 	mov	r17,r6
  806fb0:	3827883a 	mov	r19,r7
  806fb4:	dc800817 	ldw	r18,32(sp)
  806fb8:	08063580 	call	806358 <_Balloc>
  806fbc:	1029883a 	mov	r20,r2
  806fc0:	00800434 	movhi	r2,16
  806fc4:	10bfffc4 	addi	r2,r2,-1
  806fc8:	8884703a 	and	r2,r17,r2
  806fcc:	8822907a 	slli	r17,r17,1
  806fd0:	8822d57a 	srli	r17,r17,21
  806fd4:	88000126 	beq	r17,zero,806fdc <__d2b+0x54>
  806fd8:	10800434 	orhi	r2,r2,16
  806fdc:	d8800015 	stw	r2,0(sp)
  806fe0:	80001526 	beq	r16,zero,807038 <__d2b+0xb0>
  806fe4:	d9000104 	addi	r4,sp,4
  806fe8:	dc000115 	stw	r16,4(sp)
  806fec:	08067200 	call	806720 <__lo0bits>
  806ff0:	d9000117 	ldw	r4,4(sp)
  806ff4:	10000926 	beq	r2,zero,80701c <__d2b+0x94>
  806ff8:	d9400017 	ldw	r5,0(sp)
  806ffc:	00c00804 	movi	r3,32
  807000:	1887c83a 	sub	r3,r3,r2
  807004:	28c6983a 	sll	r3,r5,r3
  807008:	288ad83a 	srl	r5,r5,r2
  80700c:	1906b03a 	or	r3,r3,r4
  807010:	a0c00515 	stw	r3,20(r20)
  807014:	d9400015 	stw	r5,0(sp)
  807018:	00000106 	br	807020 <__d2b+0x98>
  80701c:	a1000515 	stw	r4,20(r20)
  807020:	dc000017 	ldw	r16,0(sp)
  807024:	a4000615 	stw	r16,24(r20)
  807028:	8020c03a 	cmpne	r16,r16,zero
  80702c:	84000044 	addi	r16,r16,1
  807030:	a4000415 	stw	r16,16(r20)
  807034:	00000706 	br	807054 <__d2b+0xcc>
  807038:	d809883a 	mov	r4,sp
  80703c:	08067200 	call	806720 <__lo0bits>
  807040:	d8c00017 	ldw	r3,0(sp)
  807044:	04000044 	movi	r16,1
  807048:	a4000415 	stw	r16,16(r20)
  80704c:	a0c00515 	stw	r3,20(r20)
  807050:	10800804 	addi	r2,r2,32
  807054:	88000626 	beq	r17,zero,807070 <__d2b+0xe8>
  807058:	8c7ef344 	addi	r17,r17,-1075
  80705c:	88a3883a 	add	r17,r17,r2
  807060:	00c00d44 	movi	r3,53
  807064:	9c400015 	stw	r17,0(r19)
  807068:	1885c83a 	sub	r2,r3,r2
  80706c:	00000c06 	br	8070a0 <__d2b+0x118>
  807070:	10bef384 	addi	r2,r2,-1074
  807074:	98800015 	stw	r2,0(r19)
  807078:	00900034 	movhi	r2,16384
  80707c:	10bfffc4 	addi	r2,r2,-1
  807080:	8085883a 	add	r2,r16,r2
  807084:	1085883a 	add	r2,r2,r2
  807088:	1085883a 	add	r2,r2,r2
  80708c:	a085883a 	add	r2,r20,r2
  807090:	11000517 	ldw	r4,20(r2)
  807094:	8020917a 	slli	r16,r16,5
  807098:	08066b80 	call	8066b8 <__hi0bits>
  80709c:	8085c83a 	sub	r2,r16,r2
  8070a0:	90800015 	stw	r2,0(r18)
  8070a4:	a005883a 	mov	r2,r20
  8070a8:	dfc00717 	ldw	ra,28(sp)
  8070ac:	dd000617 	ldw	r20,24(sp)
  8070b0:	dcc00517 	ldw	r19,20(sp)
  8070b4:	dc800417 	ldw	r18,16(sp)
  8070b8:	dc400317 	ldw	r17,12(sp)
  8070bc:	dc000217 	ldw	r16,8(sp)
  8070c0:	dec00804 	addi	sp,sp,32
  8070c4:	f800283a 	ret

008070c8 <__ratio>:
  8070c8:	defff904 	addi	sp,sp,-28
  8070cc:	dc400315 	stw	r17,12(sp)
  8070d0:	2823883a 	mov	r17,r5
  8070d4:	d9400104 	addi	r5,sp,4
  8070d8:	dfc00615 	stw	ra,24(sp)
  8070dc:	dcc00515 	stw	r19,20(sp)
  8070e0:	dc800415 	stw	r18,16(sp)
  8070e4:	2027883a 	mov	r19,r4
  8070e8:	dc000215 	stw	r16,8(sp)
  8070ec:	0806e840 	call	806e84 <__b2d>
  8070f0:	d80b883a 	mov	r5,sp
  8070f4:	8809883a 	mov	r4,r17
  8070f8:	1025883a 	mov	r18,r2
  8070fc:	1821883a 	mov	r16,r3
  807100:	0806e840 	call	806e84 <__b2d>
  807104:	8a000417 	ldw	r8,16(r17)
  807108:	99000417 	ldw	r4,16(r19)
  80710c:	d9400117 	ldw	r5,4(sp)
  807110:	2209c83a 	sub	r4,r4,r8
  807114:	2010917a 	slli	r8,r4,5
  807118:	d9000017 	ldw	r4,0(sp)
  80711c:	2909c83a 	sub	r4,r5,r4
  807120:	4109883a 	add	r4,r8,r4
  807124:	0100030e 	bge	zero,r4,807134 <__ratio+0x6c>
  807128:	2008953a 	slli	r4,r4,20
  80712c:	2421883a 	add	r16,r4,r16
  807130:	00000206 	br	80713c <__ratio+0x74>
  807134:	2008953a 	slli	r4,r4,20
  807138:	1907c83a 	sub	r3,r3,r4
  80713c:	100d883a 	mov	r6,r2
  807140:	180f883a 	mov	r7,r3
  807144:	9009883a 	mov	r4,r18
  807148:	800b883a 	mov	r5,r16
  80714c:	0808c0c0 	call	808c0c <__divdf3>
  807150:	dfc00617 	ldw	ra,24(sp)
  807154:	dcc00517 	ldw	r19,20(sp)
  807158:	dc800417 	ldw	r18,16(sp)
  80715c:	dc400317 	ldw	r17,12(sp)
  807160:	dc000217 	ldw	r16,8(sp)
  807164:	dec00704 	addi	sp,sp,28
  807168:	f800283a 	ret

0080716c <_mprec_log10>:
  80716c:	defffe04 	addi	sp,sp,-8
  807170:	dc000015 	stw	r16,0(sp)
  807174:	dfc00115 	stw	ra,4(sp)
  807178:	008005c4 	movi	r2,23
  80717c:	2021883a 	mov	r16,r4
  807180:	11000716 	blt	r2,r4,8071a0 <_mprec_log10+0x34>
  807184:	202090fa 	slli	r16,r4,3
  807188:	00802074 	movhi	r2,129
  80718c:	10ac6b04 	addi	r2,r2,-20052
  807190:	1421883a 	add	r16,r2,r16
  807194:	80800017 	ldw	r2,0(r16)
  807198:	80c00117 	ldw	r3,4(r16)
  80719c:	00000906 	br	8071c4 <_mprec_log10+0x58>
  8071a0:	0005883a 	mov	r2,zero
  8071a4:	00cffc34 	movhi	r3,16368
  8071a8:	000d883a 	mov	r6,zero
  8071ac:	01d00934 	movhi	r7,16420
  8071b0:	1009883a 	mov	r4,r2
  8071b4:	180b883a 	mov	r5,r3
  8071b8:	843fffc4 	addi	r16,r16,-1
  8071bc:	08041400 	call	804140 <__muldf3>
  8071c0:	803ff91e 	bne	r16,zero,8071a8 <__alt_data_end+0xff8071a8>
  8071c4:	dfc00117 	ldw	ra,4(sp)
  8071c8:	dc000017 	ldw	r16,0(sp)
  8071cc:	dec00204 	addi	sp,sp,8
  8071d0:	f800283a 	ret

008071d4 <__copybits>:
  8071d4:	297fffc4 	addi	r5,r5,-1
  8071d8:	280bd17a 	srai	r5,r5,5
  8071dc:	30800417 	ldw	r2,16(r6)
  8071e0:	30c00504 	addi	r3,r6,20
  8071e4:	29400044 	addi	r5,r5,1
  8071e8:	294b883a 	add	r5,r5,r5
  8071ec:	1085883a 	add	r2,r2,r2
  8071f0:	294b883a 	add	r5,r5,r5
  8071f4:	1085883a 	add	r2,r2,r2
  8071f8:	214b883a 	add	r5,r4,r5
  8071fc:	1885883a 	add	r2,r3,r2
  807200:	1880052e 	bgeu	r3,r2,807218 <__copybits+0x44>
  807204:	19800017 	ldw	r6,0(r3)
  807208:	21000104 	addi	r4,r4,4
  80720c:	18c00104 	addi	r3,r3,4
  807210:	21bfff15 	stw	r6,-4(r4)
  807214:	003ffa06 	br	807200 <__alt_data_end+0xff807200>
  807218:	2140032e 	bgeu	r4,r5,807228 <__copybits+0x54>
  80721c:	20000015 	stw	zero,0(r4)
  807220:	21000104 	addi	r4,r4,4
  807224:	003ffc06 	br	807218 <__alt_data_end+0xff807218>
  807228:	f800283a 	ret

0080722c <__any_on>:
  80722c:	20c00417 	ldw	r3,16(r4)
  807230:	2805d17a 	srai	r2,r5,5
  807234:	21800504 	addi	r6,r4,20
  807238:	18800b16 	blt	r3,r2,807268 <__any_on+0x3c>
  80723c:	10c00b0e 	bge	r2,r3,80726c <__any_on+0x40>
  807240:	294007cc 	andi	r5,r5,31
  807244:	28000926 	beq	r5,zero,80726c <__any_on+0x40>
  807248:	1087883a 	add	r3,r2,r2
  80724c:	18c7883a 	add	r3,r3,r3
  807250:	30c7883a 	add	r3,r6,r3
  807254:	19000017 	ldw	r4,0(r3)
  807258:	2146d83a 	srl	r3,r4,r5
  80725c:	194a983a 	sll	r5,r3,r5
  807260:	21400c1e 	bne	r4,r5,807294 <__any_on+0x68>
  807264:	00000106 	br	80726c <__any_on+0x40>
  807268:	1805883a 	mov	r2,r3
  80726c:	1085883a 	add	r2,r2,r2
  807270:	1085883a 	add	r2,r2,r2
  807274:	3085883a 	add	r2,r6,r2
  807278:	3080042e 	bgeu	r6,r2,80728c <__any_on+0x60>
  80727c:	10bfff04 	addi	r2,r2,-4
  807280:	10c00017 	ldw	r3,0(r2)
  807284:	183ffc26 	beq	r3,zero,807278 <__alt_data_end+0xff807278>
  807288:	00000206 	br	807294 <__any_on+0x68>
  80728c:	0005883a 	mov	r2,zero
  807290:	f800283a 	ret
  807294:	00800044 	movi	r2,1
  807298:	f800283a 	ret

0080729c <_calloc_r>:
  80729c:	defffd04 	addi	sp,sp,-12
  8072a0:	dc400115 	stw	r17,4(sp)
  8072a4:	29a3383a 	mul	r17,r5,r6
  8072a8:	dc000015 	stw	r16,0(sp)
  8072ac:	dfc00215 	stw	ra,8(sp)
  8072b0:	880b883a 	mov	r5,r17
  8072b4:	08072e80 	call	8072e8 <_malloc_r>
  8072b8:	1021883a 	mov	r16,r2
  8072bc:	10000426 	beq	r2,zero,8072d0 <_calloc_r+0x34>
  8072c0:	880d883a 	mov	r6,r17
  8072c4:	000b883a 	mov	r5,zero
  8072c8:	1009883a 	mov	r4,r2
  8072cc:	0808aec0 	call	808aec <memset>
  8072d0:	8005883a 	mov	r2,r16
  8072d4:	dfc00217 	ldw	ra,8(sp)
  8072d8:	dc400117 	ldw	r17,4(sp)
  8072dc:	dc000017 	ldw	r16,0(sp)
  8072e0:	dec00304 	addi	sp,sp,12
  8072e4:	f800283a 	ret

008072e8 <_malloc_r>:
  8072e8:	defffb04 	addi	sp,sp,-20
  8072ec:	00bfff04 	movi	r2,-4
  8072f0:	dc400115 	stw	r17,4(sp)
  8072f4:	2c4000c4 	addi	r17,r5,3
  8072f8:	88a2703a 	and	r17,r17,r2
  8072fc:	dc800215 	stw	r18,8(sp)
  807300:	dfc00415 	stw	ra,16(sp)
  807304:	dcc00315 	stw	r19,12(sp)
  807308:	dc000015 	stw	r16,0(sp)
  80730c:	8c400204 	addi	r17,r17,8
  807310:	00800304 	movi	r2,12
  807314:	2025883a 	mov	r18,r4
  807318:	8880022e 	bgeu	r17,r2,807324 <_malloc_r+0x3c>
  80731c:	1023883a 	mov	r17,r2
  807320:	00000506 	br	807338 <_malloc_r+0x50>
  807324:	8800040e 	bge	r17,zero,807338 <_malloc_r+0x50>
  807328:	00800304 	movi	r2,12
  80732c:	90800015 	stw	r2,0(r18)
  807330:	0005883a 	mov	r2,zero
  807334:	00003b06 	br	807424 <_malloc_r+0x13c>
  807338:	897ffb36 	bltu	r17,r5,807328 <__alt_data_end+0xff807328>
  80733c:	00802074 	movhi	r2,129
  807340:	10ae2004 	addi	r2,r2,-18304
  807344:	10c00017 	ldw	r3,0(r2)
  807348:	1009883a 	mov	r4,r2
  80734c:	1821883a 	mov	r16,r3
  807350:	80000926 	beq	r16,zero,807378 <_malloc_r+0x90>
  807354:	80800017 	ldw	r2,0(r16)
  807358:	1445c83a 	sub	r2,r2,r17
  80735c:	10001516 	blt	r2,zero,8073b4 <_malloc_r+0xcc>
  807360:	014002c4 	movi	r5,11
  807364:	28800d2e 	bgeu	r5,r2,80739c <_malloc_r+0xb4>
  807368:	80800015 	stw	r2,0(r16)
  80736c:	80a1883a 	add	r16,r16,r2
  807370:	84400015 	stw	r17,0(r16)
  807374:	8000221e 	bne	r16,zero,807400 <_malloc_r+0x118>
  807378:	04002074 	movhi	r16,129
  80737c:	842e1f04 	addi	r16,r16,-18308
  807380:	80800017 	ldw	r2,0(r16)
  807384:	10000e1e 	bne	r2,zero,8073c0 <_malloc_r+0xd8>
  807388:	000b883a 	mov	r5,zero
  80738c:	9009883a 	mov	r4,r18
  807390:	08074e40 	call	8074e4 <_sbrk_r>
  807394:	80800015 	stw	r2,0(r16)
  807398:	00000906 	br	8073c0 <_malloc_r+0xd8>
  80739c:	80800117 	ldw	r2,4(r16)
  8073a0:	1c00021e 	bne	r3,r16,8073ac <_malloc_r+0xc4>
  8073a4:	20800015 	stw	r2,0(r4)
  8073a8:	00001506 	br	807400 <_malloc_r+0x118>
  8073ac:	18800115 	stw	r2,4(r3)
  8073b0:	00001306 	br	807400 <_malloc_r+0x118>
  8073b4:	8007883a 	mov	r3,r16
  8073b8:	84000117 	ldw	r16,4(r16)
  8073bc:	003fe406 	br	807350 <__alt_data_end+0xff807350>
  8073c0:	880b883a 	mov	r5,r17
  8073c4:	9009883a 	mov	r4,r18
  8073c8:	08074e40 	call	8074e4 <_sbrk_r>
  8073cc:	04ffffc4 	movi	r19,-1
  8073d0:	14ffd526 	beq	r2,r19,807328 <__alt_data_end+0xff807328>
  8073d4:	140000c4 	addi	r16,r2,3
  8073d8:	00ffff04 	movi	r3,-4
  8073dc:	80e0703a 	and	r16,r16,r3
  8073e0:	1400021e 	bne	r2,r16,8073ec <_malloc_r+0x104>
  8073e4:	84400015 	stw	r17,0(r16)
  8073e8:	00000506 	br	807400 <_malloc_r+0x118>
  8073ec:	808bc83a 	sub	r5,r16,r2
  8073f0:	9009883a 	mov	r4,r18
  8073f4:	08074e40 	call	8074e4 <_sbrk_r>
  8073f8:	14fffa1e 	bne	r2,r19,8073e4 <__alt_data_end+0xff8073e4>
  8073fc:	003fca06 	br	807328 <__alt_data_end+0xff807328>
  807400:	810002c4 	addi	r4,r16,11
  807404:	00bffe04 	movi	r2,-8
  807408:	80c00104 	addi	r3,r16,4
  80740c:	2084703a 	and	r2,r4,r2
  807410:	10c7c83a 	sub	r3,r2,r3
  807414:	18000326 	beq	r3,zero,807424 <_malloc_r+0x13c>
  807418:	80e1883a 	add	r16,r16,r3
  80741c:	00c7c83a 	sub	r3,zero,r3
  807420:	80c00015 	stw	r3,0(r16)
  807424:	dfc00417 	ldw	ra,16(sp)
  807428:	dcc00317 	ldw	r19,12(sp)
  80742c:	dc800217 	ldw	r18,8(sp)
  807430:	dc400117 	ldw	r17,4(sp)
  807434:	dc000017 	ldw	r16,0(sp)
  807438:	dec00504 	addi	sp,sp,20
  80743c:	f800283a 	ret

00807440 <_realloc_r>:
  807440:	2800021e 	bne	r5,zero,80744c <_realloc_r+0xc>
  807444:	300b883a 	mov	r5,r6
  807448:	08072e81 	jmpi	8072e8 <_malloc_r>
  80744c:	defffb04 	addi	sp,sp,-20
  807450:	dc400115 	stw	r17,4(sp)
  807454:	dc000015 	stw	r16,0(sp)
  807458:	dfc00415 	stw	ra,16(sp)
  80745c:	dcc00315 	stw	r19,12(sp)
  807460:	dc800215 	stw	r18,8(sp)
  807464:	3023883a 	mov	r17,r6
  807468:	2821883a 	mov	r16,r5
  80746c:	3000021e 	bne	r6,zero,807478 <_realloc_r+0x38>
  807470:	0808b0c0 	call	808b0c <_free_r>
  807474:	00001306 	br	8074c4 <_realloc_r+0x84>
  807478:	2025883a 	mov	r18,r4
  80747c:	0808bf00 	call	808bf0 <_malloc_usable_size_r>
  807480:	14400e2e 	bgeu	r2,r17,8074bc <_realloc_r+0x7c>
  807484:	880b883a 	mov	r5,r17
  807488:	9009883a 	mov	r4,r18
  80748c:	08072e80 	call	8072e8 <_malloc_r>
  807490:	1027883a 	mov	r19,r2
  807494:	10000b26 	beq	r2,zero,8074c4 <_realloc_r+0x84>
  807498:	880d883a 	mov	r6,r17
  80749c:	800b883a 	mov	r5,r16
  8074a0:	1009883a 	mov	r4,r2
  8074a4:	0808ac40 	call	808ac4 <memcpy>
  8074a8:	800b883a 	mov	r5,r16
  8074ac:	9009883a 	mov	r4,r18
  8074b0:	0808b0c0 	call	808b0c <_free_r>
  8074b4:	9805883a 	mov	r2,r19
  8074b8:	00000306 	br	8074c8 <_realloc_r+0x88>
  8074bc:	8005883a 	mov	r2,r16
  8074c0:	00000106 	br	8074c8 <_realloc_r+0x88>
  8074c4:	0005883a 	mov	r2,zero
  8074c8:	dfc00417 	ldw	ra,16(sp)
  8074cc:	dcc00317 	ldw	r19,12(sp)
  8074d0:	dc800217 	ldw	r18,8(sp)
  8074d4:	dc400117 	ldw	r17,4(sp)
  8074d8:	dc000017 	ldw	r16,0(sp)
  8074dc:	dec00504 	addi	sp,sp,20
  8074e0:	f800283a 	ret

008074e4 <_sbrk_r>:
  8074e4:	defffd04 	addi	sp,sp,-12
  8074e8:	dc000015 	stw	r16,0(sp)
  8074ec:	04002074 	movhi	r16,129
  8074f0:	dc400115 	stw	r17,4(sp)
  8074f4:	842e2104 	addi	r16,r16,-18300
  8074f8:	2023883a 	mov	r17,r4
  8074fc:	2809883a 	mov	r4,r5
  807500:	dfc00215 	stw	ra,8(sp)
  807504:	80000015 	stw	zero,0(r16)
  807508:	080977c0 	call	80977c <sbrk>
  80750c:	00ffffc4 	movi	r3,-1
  807510:	10c0031e 	bne	r2,r3,807520 <_sbrk_r+0x3c>
  807514:	80c00017 	ldw	r3,0(r16)
  807518:	18000126 	beq	r3,zero,807520 <_sbrk_r+0x3c>
  80751c:	88c00015 	stw	r3,0(r17)
  807520:	dfc00217 	ldw	ra,8(sp)
  807524:	dc400117 	ldw	r17,4(sp)
  807528:	dc000017 	ldw	r16,0(sp)
  80752c:	dec00304 	addi	sp,sp,12
  807530:	f800283a 	ret

00807534 <strcpy>:
  807534:	2005883a 	mov	r2,r4
  807538:	200d883a 	mov	r6,r4
  80753c:	28c00003 	ldbu	r3,0(r5)
  807540:	31800044 	addi	r6,r6,1
  807544:	29400044 	addi	r5,r5,1
  807548:	30ffffc5 	stb	r3,-1(r6)
  80754c:	18c03fcc 	andi	r3,r3,255
  807550:	18c0201c 	xori	r3,r3,128
  807554:	18ffe004 	addi	r3,r3,-128
  807558:	183ff81e 	bne	r3,zero,80753c <__alt_data_end+0xff80753c>
  80755c:	f800283a 	ret

00807560 <_write_r>:
  807560:	defffd04 	addi	sp,sp,-12
  807564:	dc000015 	stw	r16,0(sp)
  807568:	04002074 	movhi	r16,129
  80756c:	dc400115 	stw	r17,4(sp)
  807570:	842e2104 	addi	r16,r16,-18300
  807574:	2023883a 	mov	r17,r4
  807578:	2809883a 	mov	r4,r5
  80757c:	300b883a 	mov	r5,r6
  807580:	380d883a 	mov	r6,r7
  807584:	dfc00215 	stw	ra,8(sp)
  807588:	80000015 	stw	zero,0(r16)
  80758c:	080991c0 	call	80991c <write>
  807590:	00ffffc4 	movi	r3,-1
  807594:	10c0031e 	bne	r2,r3,8075a4 <_write_r+0x44>
  807598:	80c00017 	ldw	r3,0(r16)
  80759c:	18000126 	beq	r3,zero,8075a4 <_write_r+0x44>
  8075a0:	88c00015 	stw	r3,0(r17)
  8075a4:	dfc00217 	ldw	ra,8(sp)
  8075a8:	dc400117 	ldw	r17,4(sp)
  8075ac:	dc000017 	ldw	r16,0(sp)
  8075b0:	dec00304 	addi	sp,sp,12
  8075b4:	f800283a 	ret

008075b8 <quorem>:
  8075b8:	defff704 	addi	sp,sp,-36
  8075bc:	dc000015 	stw	r16,0(sp)
  8075c0:	20800417 	ldw	r2,16(r4)
  8075c4:	2c000417 	ldw	r16,16(r5)
  8075c8:	dfc00815 	stw	ra,32(sp)
  8075cc:	ddc00715 	stw	r23,28(sp)
  8075d0:	dd800615 	stw	r22,24(sp)
  8075d4:	dd400515 	stw	r21,20(sp)
  8075d8:	dd000415 	stw	r20,16(sp)
  8075dc:	dcc00315 	stw	r19,12(sp)
  8075e0:	dc800215 	stw	r18,8(sp)
  8075e4:	dc400115 	stw	r17,4(sp)
  8075e8:	14006216 	blt	r2,r16,807774 <quorem+0x1bc>
  8075ec:	843fffc4 	addi	r16,r16,-1
  8075f0:	8423883a 	add	r17,r16,r16
  8075f4:	2cc00504 	addi	r19,r5,20
  8075f8:	8c63883a 	add	r17,r17,r17
  8075fc:	9c6d883a 	add	r22,r19,r17
  807600:	25400504 	addi	r21,r4,20
  807604:	282f883a 	mov	r23,r5
  807608:	ac63883a 	add	r17,r21,r17
  80760c:	b1400017 	ldw	r5,0(r22)
  807610:	2029883a 	mov	r20,r4
  807614:	89000017 	ldw	r4,0(r17)
  807618:	29400044 	addi	r5,r5,1
  80761c:	08027f40 	call	8027f4 <__udivsi3>
  807620:	1025883a 	mov	r18,r2
  807624:	10002926 	beq	r2,zero,8076cc <quorem+0x114>
  807628:	a80f883a 	mov	r7,r21
  80762c:	980b883a 	mov	r5,r19
  807630:	0011883a 	mov	r8,zero
  807634:	0015883a 	mov	r10,zero
  807638:	2a400017 	ldw	r9,0(r5)
  80763c:	29400104 	addi	r5,r5,4
  807640:	39c00104 	addi	r7,r7,4
  807644:	48bfffcc 	andi	r2,r9,65535
  807648:	1485383a 	mul	r2,r2,r18
  80764c:	4812d43a 	srli	r9,r9,16
  807650:	1205883a 	add	r2,r2,r8
  807654:	1008d43a 	srli	r4,r2,16
  807658:	4c93383a 	mul	r9,r9,r18
  80765c:	10ffffcc 	andi	r3,r2,65535
  807660:	4913883a 	add	r9,r9,r4
  807664:	393fff17 	ldw	r4,-4(r7)
  807668:	48bfffcc 	andi	r2,r9,65535
  80766c:	4810d43a 	srli	r8,r9,16
  807670:	21bfffcc 	andi	r6,r4,65535
  807674:	2008d43a 	srli	r4,r4,16
  807678:	328d883a 	add	r6,r6,r10
  80767c:	30c7c83a 	sub	r3,r6,r3
  807680:	2089c83a 	sub	r4,r4,r2
  807684:	1805d43a 	srai	r2,r3,16
  807688:	18ffffcc 	andi	r3,r3,65535
  80768c:	2085883a 	add	r2,r4,r2
  807690:	1015d43a 	srai	r10,r2,16
  807694:	1004943a 	slli	r2,r2,16
  807698:	10c6b03a 	or	r3,r2,r3
  80769c:	38ffff15 	stw	r3,-4(r7)
  8076a0:	b17fe52e 	bgeu	r22,r5,807638 <__alt_data_end+0xff807638>
  8076a4:	88800017 	ldw	r2,0(r17)
  8076a8:	1000081e 	bne	r2,zero,8076cc <quorem+0x114>
  8076ac:	8c7fff04 	addi	r17,r17,-4
  8076b0:	ac400236 	bltu	r21,r17,8076bc <quorem+0x104>
  8076b4:	a4000415 	stw	r16,16(r20)
  8076b8:	00000406 	br	8076cc <quorem+0x114>
  8076bc:	88800017 	ldw	r2,0(r17)
  8076c0:	103ffc1e 	bne	r2,zero,8076b4 <__alt_data_end+0xff8076b4>
  8076c4:	843fffc4 	addi	r16,r16,-1
  8076c8:	003ff806 	br	8076ac <__alt_data_end+0xff8076ac>
  8076cc:	b80b883a 	mov	r5,r23
  8076d0:	a009883a 	mov	r4,r20
  8076d4:	0806c600 	call	806c60 <__mcmp>
  8076d8:	10002416 	blt	r2,zero,80776c <quorem+0x1b4>
  8076dc:	94800044 	addi	r18,r18,1
  8076e0:	a80d883a 	mov	r6,r21
  8076e4:	9805883a 	mov	r2,r19
  8076e8:	000f883a 	mov	r7,zero
  8076ec:	31000017 	ldw	r4,0(r6)
  8076f0:	11400017 	ldw	r5,0(r2)
  8076f4:	10800104 	addi	r2,r2,4
  8076f8:	20ffffcc 	andi	r3,r4,65535
  8076fc:	19cf883a 	add	r7,r3,r7
  807700:	2008d43a 	srli	r4,r4,16
  807704:	28ffffcc 	andi	r3,r5,65535
  807708:	280ad43a 	srli	r5,r5,16
  80770c:	38c7c83a 	sub	r3,r7,r3
  807710:	31800104 	addi	r6,r6,4
  807714:	214bc83a 	sub	r5,r4,r5
  807718:	1809d43a 	srai	r4,r3,16
  80771c:	18ffffcc 	andi	r3,r3,65535
  807720:	2909883a 	add	r4,r5,r4
  807724:	200fd43a 	srai	r7,r4,16
  807728:	2008943a 	slli	r4,r4,16
  80772c:	20c6b03a 	or	r3,r4,r3
  807730:	30ffff15 	stw	r3,-4(r6)
  807734:	b0bfed2e 	bgeu	r22,r2,8076ec <__alt_data_end+0xff8076ec>
  807738:	8407883a 	add	r3,r16,r16
  80773c:	18c7883a 	add	r3,r3,r3
  807740:	a8c7883a 	add	r3,r21,r3
  807744:	18800017 	ldw	r2,0(r3)
  807748:	1000081e 	bne	r2,zero,80776c <quorem+0x1b4>
  80774c:	18ffff04 	addi	r3,r3,-4
  807750:	a8c00236 	bltu	r21,r3,80775c <quorem+0x1a4>
  807754:	a4000415 	stw	r16,16(r20)
  807758:	00000406 	br	80776c <quorem+0x1b4>
  80775c:	18800017 	ldw	r2,0(r3)
  807760:	103ffc1e 	bne	r2,zero,807754 <__alt_data_end+0xff807754>
  807764:	843fffc4 	addi	r16,r16,-1
  807768:	003ff806 	br	80774c <__alt_data_end+0xff80774c>
  80776c:	9005883a 	mov	r2,r18
  807770:	00000106 	br	807778 <quorem+0x1c0>
  807774:	0005883a 	mov	r2,zero
  807778:	dfc00817 	ldw	ra,32(sp)
  80777c:	ddc00717 	ldw	r23,28(sp)
  807780:	dd800617 	ldw	r22,24(sp)
  807784:	dd400517 	ldw	r21,20(sp)
  807788:	dd000417 	ldw	r20,16(sp)
  80778c:	dcc00317 	ldw	r19,12(sp)
  807790:	dc800217 	ldw	r18,8(sp)
  807794:	dc400117 	ldw	r17,4(sp)
  807798:	dc000017 	ldw	r16,0(sp)
  80779c:	dec00904 	addi	sp,sp,36
  8077a0:	f800283a 	ret

008077a4 <_dtoa_r>:
  8077a4:	20800417 	ldw	r2,16(r4)
  8077a8:	deffe004 	addi	sp,sp,-128
  8077ac:	dd001a15 	stw	r20,104(sp)
  8077b0:	dcc01915 	stw	r19,100(sp)
  8077b4:	dc801815 	stw	r18,96(sp)
  8077b8:	dc401715 	stw	r17,92(sp)
  8077bc:	dc001615 	stw	r16,88(sp)
  8077c0:	dfc01f15 	stw	ra,124(sp)
  8077c4:	df001e15 	stw	fp,120(sp)
  8077c8:	ddc01d15 	stw	r23,116(sp)
  8077cc:	dd801c15 	stw	r22,112(sp)
  8077d0:	dd401b15 	stw	r21,108(sp)
  8077d4:	d9400915 	stw	r5,36(sp)
  8077d8:	d9c00815 	stw	r7,32(sp)
  8077dc:	2021883a 	mov	r16,r4
  8077e0:	3029883a 	mov	r20,r6
  8077e4:	dc802217 	ldw	r18,136(sp)
  8077e8:	2823883a 	mov	r17,r5
  8077ec:	3027883a 	mov	r19,r6
  8077f0:	1000071e 	bne	r2,zero,807810 <_dtoa_r+0x6c>
  8077f4:	01000404 	movi	r4,16
  8077f8:	0808a9c0 	call	808a9c <malloc>
  8077fc:	80800415 	stw	r2,16(r16)
  807800:	10000115 	stw	zero,4(r2)
  807804:	10000215 	stw	zero,8(r2)
  807808:	10000015 	stw	zero,0(r2)
  80780c:	10000315 	stw	zero,12(r2)
  807810:	80800417 	ldw	r2,16(r16)
  807814:	11400017 	ldw	r5,0(r2)
  807818:	28000926 	beq	r5,zero,807840 <_dtoa_r+0x9c>
  80781c:	10c00117 	ldw	r3,4(r2)
  807820:	00800044 	movi	r2,1
  807824:	8009883a 	mov	r4,r16
  807828:	10c4983a 	sll	r2,r2,r3
  80782c:	28c00115 	stw	r3,4(r5)
  807830:	28800215 	stw	r2,8(r5)
  807834:	080643c0 	call	80643c <_Bfree>
  807838:	80800417 	ldw	r2,16(r16)
  80783c:	10000015 	stw	zero,0(r2)
  807840:	a000060e 	bge	r20,zero,80785c <_dtoa_r+0xb8>
  807844:	04e00034 	movhi	r19,32768
  807848:	00800044 	movi	r2,1
  80784c:	9cffffc4 	addi	r19,r19,-1
  807850:	90800015 	stw	r2,0(r18)
  807854:	a4e6703a 	and	r19,r20,r19
  807858:	00000106 	br	807860 <_dtoa_r+0xbc>
  80785c:	90000015 	stw	zero,0(r18)
  807860:	989ffc2c 	andhi	r2,r19,32752
  807864:	00dffc34 	movhi	r3,32752
  807868:	10c0181e 	bne	r2,r3,8078cc <_dtoa_r+0x128>
  80786c:	d8c02117 	ldw	r3,132(sp)
  807870:	d9000917 	ldw	r4,36(sp)
  807874:	0089c3c4 	movi	r2,9999
  807878:	18800015 	stw	r2,0(r3)
  80787c:	2000071e 	bne	r4,zero,80789c <_dtoa_r+0xf8>
  807880:	00800434 	movhi	r2,16
  807884:	10bfffc4 	addi	r2,r2,-1
  807888:	98a6703a 	and	r19,r19,r2
  80788c:	9800031e 	bne	r19,zero,80789c <_dtoa_r+0xf8>
  807890:	00802074 	movhi	r2,129
  807894:	10ac9d04 	addi	r2,r2,-19852
  807898:	00000206 	br	8078a4 <_dtoa_r+0x100>
  80789c:	00802074 	movhi	r2,129
  8078a0:	10aca004 	addi	r2,r2,-19840
  8078a4:	d8c02317 	ldw	r3,140(sp)
  8078a8:	18047026 	beq	r3,zero,808a6c <_dtoa_r+0x12c8>
  8078ac:	10c000c7 	ldb	r3,3(r2)
  8078b0:	18000226 	beq	r3,zero,8078bc <_dtoa_r+0x118>
  8078b4:	10c00204 	addi	r3,r2,8
  8078b8:	00000106 	br	8078c0 <_dtoa_r+0x11c>
  8078bc:	10c000c4 	addi	r3,r2,3
  8078c0:	d9002317 	ldw	r4,140(sp)
  8078c4:	20c00015 	stw	r3,0(r4)
  8078c8:	00046806 	br	808a6c <_dtoa_r+0x12c8>
  8078cc:	d9000917 	ldw	r4,36(sp)
  8078d0:	000d883a 	mov	r6,zero
  8078d4:	000f883a 	mov	r7,zero
  8078d8:	980b883a 	mov	r5,r19
  8078dc:	0803fdc0 	call	803fdc <__eqdf2>
  8078e0:	10000a1e 	bne	r2,zero,80790c <_dtoa_r+0x168>
  8078e4:	d8c02117 	ldw	r3,132(sp)
  8078e8:	d9002317 	ldw	r4,140(sp)
  8078ec:	00800044 	movi	r2,1
  8078f0:	18800015 	stw	r2,0(r3)
  8078f4:	20044926 	beq	r4,zero,808a1c <_dtoa_r+0x1278>
  8078f8:	00802074 	movhi	r2,129
  8078fc:	10aca144 	addi	r2,r2,-19835
  807900:	20800015 	stw	r2,0(r4)
  807904:	10bfffc4 	addi	r2,r2,-1
  807908:	00045806 	br	808a6c <_dtoa_r+0x12c8>
  80790c:	d9400917 	ldw	r5,36(sp)
  807910:	d8800204 	addi	r2,sp,8
  807914:	9824d53a 	srli	r18,r19,20
  807918:	d8800015 	stw	r2,0(sp)
  80791c:	d9c00104 	addi	r7,sp,4
  807920:	980d883a 	mov	r6,r19
  807924:	8009883a 	mov	r4,r16
  807928:	0806f880 	call	806f88 <__d2b>
  80792c:	d8800315 	stw	r2,12(sp)
  807930:	9481ffcc 	andi	r18,r18,2047
  807934:	dd000217 	ldw	r20,8(sp)
  807938:	90000826 	beq	r18,zero,80795c <_dtoa_r+0x1b8>
  80793c:	01400434 	movhi	r5,16
  807940:	297fffc4 	addi	r5,r5,-1
  807944:	994a703a 	and	r5,r19,r5
  807948:	d8800917 	ldw	r2,36(sp)
  80794c:	294ffc34 	orhi	r5,r5,16368
  807950:	94bf0044 	addi	r18,r18,-1023
  807954:	d8001015 	stw	zero,64(sp)
  807958:	00001606 	br	8079b4 <_dtoa_r+0x210>
  80795c:	dc800117 	ldw	r18,4(sp)
  807960:	00800804 	movi	r2,32
  807964:	a4a5883a 	add	r18,r20,r18
  807968:	91010c84 	addi	r4,r18,1074
  80796c:	1100080e 	bge	r2,r4,807990 <_dtoa_r+0x1ec>
  807970:	d8800917 	ldw	r2,36(sp)
  807974:	91410484 	addi	r5,r18,1042
  807978:	00c01004 	movi	r3,64
  80797c:	114ad83a 	srl	r5,r2,r5
  807980:	1905c83a 	sub	r2,r3,r4
  807984:	9884983a 	sll	r2,r19,r2
  807988:	2888b03a 	or	r4,r5,r2
  80798c:	00000306 	br	80799c <_dtoa_r+0x1f8>
  807990:	d8c00917 	ldw	r3,36(sp)
  807994:	1109c83a 	sub	r4,r2,r4
  807998:	1908983a 	sll	r4,r3,r4
  80799c:	08052b00 	call	8052b0 <__floatunsidf>
  8079a0:	017f8434 	movhi	r5,65040
  8079a4:	01000044 	movi	r4,1
  8079a8:	194b883a 	add	r5,r3,r5
  8079ac:	94bfffc4 	addi	r18,r18,-1
  8079b0:	d9001015 	stw	r4,64(sp)
  8079b4:	000d883a 	mov	r6,zero
  8079b8:	01cffe34 	movhi	r7,16376
  8079bc:	1009883a 	mov	r4,r2
  8079c0:	08048580 	call	804858 <__subdf3>
  8079c4:	0198dbf4 	movhi	r6,25455
  8079c8:	01cff4f4 	movhi	r7,16339
  8079cc:	3190d844 	addi	r6,r6,17249
  8079d0:	39e1e9c4 	addi	r7,r7,-30809
  8079d4:	1009883a 	mov	r4,r2
  8079d8:	180b883a 	mov	r5,r3
  8079dc:	08041400 	call	804140 <__muldf3>
  8079e0:	01a2d874 	movhi	r6,35681
  8079e4:	01cff1f4 	movhi	r7,16327
  8079e8:	31b22cc4 	addi	r6,r6,-14157
  8079ec:	39e28a04 	addi	r7,r7,-30168
  8079f0:	180b883a 	mov	r5,r3
  8079f4:	1009883a 	mov	r4,r2
  8079f8:	08037300 	call	803730 <__adddf3>
  8079fc:	9009883a 	mov	r4,r18
  807a00:	102d883a 	mov	r22,r2
  807a04:	182b883a 	mov	r21,r3
  807a08:	08051d40 	call	8051d4 <__floatsidf>
  807a0c:	019427f4 	movhi	r6,20639
  807a10:	01cff4f4 	movhi	r7,16339
  807a14:	319e7ec4 	addi	r6,r6,31227
  807a18:	39d104c4 	addi	r7,r7,17427
  807a1c:	1009883a 	mov	r4,r2
  807a20:	180b883a 	mov	r5,r3
  807a24:	08041400 	call	804140 <__muldf3>
  807a28:	100d883a 	mov	r6,r2
  807a2c:	180f883a 	mov	r7,r3
  807a30:	b009883a 	mov	r4,r22
  807a34:	a80b883a 	mov	r5,r21
  807a38:	08037300 	call	803730 <__adddf3>
  807a3c:	1009883a 	mov	r4,r2
  807a40:	180b883a 	mov	r5,r3
  807a44:	102d883a 	mov	r22,r2
  807a48:	182b883a 	mov	r21,r3
  807a4c:	08051540 	call	805154 <__fixdfsi>
  807a50:	000d883a 	mov	r6,zero
  807a54:	000f883a 	mov	r7,zero
  807a58:	b009883a 	mov	r4,r22
  807a5c:	a80b883a 	mov	r5,r21
  807a60:	1039883a 	mov	fp,r2
  807a64:	08094f40 	call	8094f4 <__ledf2>
  807a68:	1000090e 	bge	r2,zero,807a90 <_dtoa_r+0x2ec>
  807a6c:	e009883a 	mov	r4,fp
  807a70:	08051d40 	call	8051d4 <__floatsidf>
  807a74:	100d883a 	mov	r6,r2
  807a78:	180f883a 	mov	r7,r3
  807a7c:	b009883a 	mov	r4,r22
  807a80:	a80b883a 	mov	r5,r21
  807a84:	0803fdc0 	call	803fdc <__eqdf2>
  807a88:	10000126 	beq	r2,zero,807a90 <_dtoa_r+0x2ec>
  807a8c:	e73fffc4 	addi	fp,fp,-1
  807a90:	00800584 	movi	r2,22
  807a94:	17000c36 	bltu	r2,fp,807ac8 <_dtoa_r+0x324>
  807a98:	e00490fa 	slli	r2,fp,3
  807a9c:	00c02074 	movhi	r3,129
  807aa0:	18ec6b04 	addi	r3,r3,-20052
  807aa4:	1885883a 	add	r2,r3,r2
  807aa8:	d9800917 	ldw	r6,36(sp)
  807aac:	11000017 	ldw	r4,0(r2)
  807ab0:	11400117 	ldw	r5,4(r2)
  807ab4:	980f883a 	mov	r7,r19
  807ab8:	08040640 	call	804064 <__gedf2>
  807abc:	0080050e 	bge	zero,r2,807ad4 <_dtoa_r+0x330>
  807ac0:	e73fffc4 	addi	fp,fp,-1
  807ac4:	00000306 	br	807ad4 <_dtoa_r+0x330>
  807ac8:	00800044 	movi	r2,1
  807acc:	d8800f15 	stw	r2,60(sp)
  807ad0:	00000106 	br	807ad8 <_dtoa_r+0x334>
  807ad4:	d8000f15 	stw	zero,60(sp)
  807ad8:	a4afc83a 	sub	r23,r20,r18
  807adc:	bdffffc4 	addi	r23,r23,-1
  807ae0:	b800040e 	bge	r23,zero,807af4 <_dtoa_r+0x350>
  807ae4:	05efc83a 	sub	r23,zero,r23
  807ae8:	ddc00615 	stw	r23,24(sp)
  807aec:	002f883a 	mov	r23,zero
  807af0:	00000106 	br	807af8 <_dtoa_r+0x354>
  807af4:	d8000615 	stw	zero,24(sp)
  807af8:	e0000416 	blt	fp,zero,807b0c <_dtoa_r+0x368>
  807afc:	bf2f883a 	add	r23,r23,fp
  807b00:	df000d15 	stw	fp,52(sp)
  807b04:	d8000a15 	stw	zero,40(sp)
  807b08:	00000606 	br	807b24 <_dtoa_r+0x380>
  807b0c:	d8c00617 	ldw	r3,24(sp)
  807b10:	0709c83a 	sub	r4,zero,fp
  807b14:	d9000a15 	stw	r4,40(sp)
  807b18:	1f07c83a 	sub	r3,r3,fp
  807b1c:	d8c00615 	stw	r3,24(sp)
  807b20:	d8000d15 	stw	zero,52(sp)
  807b24:	d8c00817 	ldw	r3,32(sp)
  807b28:	00800244 	movi	r2,9
  807b2c:	10c02736 	bltu	r2,r3,807bcc <_dtoa_r+0x428>
  807b30:	00800144 	movi	r2,5
  807b34:	10c0040e 	bge	r2,r3,807b48 <_dtoa_r+0x3a4>
  807b38:	18ffff04 	addi	r3,r3,-4
  807b3c:	d8c00815 	stw	r3,32(sp)
  807b40:	0025883a 	mov	r18,zero
  807b44:	00000106 	br	807b4c <_dtoa_r+0x3a8>
  807b48:	04800044 	movi	r18,1
  807b4c:	d9000817 	ldw	r4,32(sp)
  807b50:	00c000c4 	movi	r3,3
  807b54:	20c01426 	beq	r4,r3,807ba8 <_dtoa_r+0x404>
  807b58:	19000416 	blt	r3,r4,807b6c <_dtoa_r+0x3c8>
  807b5c:	00800084 	movi	r2,2
  807b60:	2080211e 	bne	r4,r2,807be8 <_dtoa_r+0x444>
  807b64:	d8000b15 	stw	zero,44(sp)
  807b68:	00000906 	br	807b90 <_dtoa_r+0x3ec>
  807b6c:	d9000817 	ldw	r4,32(sp)
  807b70:	00c00104 	movi	r3,4
  807b74:	20c00426 	beq	r4,r3,807b88 <_dtoa_r+0x3e4>
  807b78:	20801b1e 	bne	r4,r2,807be8 <_dtoa_r+0x444>
  807b7c:	00c00044 	movi	r3,1
  807b80:	d8c00b15 	stw	r3,44(sp)
  807b84:	00000906 	br	807bac <_dtoa_r+0x408>
  807b88:	00800044 	movi	r2,1
  807b8c:	d8800b15 	stw	r2,44(sp)
  807b90:	d9002017 	ldw	r4,128(sp)
  807b94:	01001c0e 	bge	zero,r4,807c08 <_dtoa_r+0x464>
  807b98:	d9000515 	stw	r4,20(sp)
  807b9c:	d9000415 	stw	r4,16(sp)
  807ba0:	2005883a 	mov	r2,r4
  807ba4:	00001f06 	br	807c24 <_dtoa_r+0x480>
  807ba8:	d8000b15 	stw	zero,44(sp)
  807bac:	d8802017 	ldw	r2,128(sp)
  807bb0:	e085883a 	add	r2,fp,r2
  807bb4:	10c00044 	addi	r3,r2,1
  807bb8:	d8800515 	stw	r2,20(sp)
  807bbc:	d8c00415 	stw	r3,16(sp)
  807bc0:	00c0170e 	bge	zero,r3,807c20 <_dtoa_r+0x47c>
  807bc4:	1805883a 	mov	r2,r3
  807bc8:	00001606 	br	807c24 <_dtoa_r+0x480>
  807bcc:	013fffc4 	movi	r4,-1
  807bd0:	04800044 	movi	r18,1
  807bd4:	d8000815 	stw	zero,32(sp)
  807bd8:	dc800b15 	stw	r18,44(sp)
  807bdc:	d9000515 	stw	r4,20(sp)
  807be0:	d9000415 	stw	r4,16(sp)
  807be4:	00000506 	br	807bfc <_dtoa_r+0x458>
  807be8:	00ffffc4 	movi	r3,-1
  807bec:	00800044 	movi	r2,1
  807bf0:	d8800b15 	stw	r2,44(sp)
  807bf4:	d8c00515 	stw	r3,20(sp)
  807bf8:	d8c00415 	stw	r3,16(sp)
  807bfc:	00800484 	movi	r2,18
  807c00:	d8002015 	stw	zero,128(sp)
  807c04:	00000706 	br	807c24 <_dtoa_r+0x480>
  807c08:	01000044 	movi	r4,1
  807c0c:	d9000515 	stw	r4,20(sp)
  807c10:	d9000415 	stw	r4,16(sp)
  807c14:	2005883a 	mov	r2,r4
  807c18:	d9002015 	stw	r4,128(sp)
  807c1c:	00000106 	br	807c24 <_dtoa_r+0x480>
  807c20:	00800044 	movi	r2,1
  807c24:	85000417 	ldw	r20,16(r16)
  807c28:	00c00104 	movi	r3,4
  807c2c:	a0000115 	stw	zero,4(r20)
  807c30:	19000504 	addi	r4,r3,20
  807c34:	a1400117 	ldw	r5,4(r20)
  807c38:	11000436 	bltu	r2,r4,807c4c <_dtoa_r+0x4a8>
  807c3c:	29400044 	addi	r5,r5,1
  807c40:	a1400115 	stw	r5,4(r20)
  807c44:	18c7883a 	add	r3,r3,r3
  807c48:	003ff906 	br	807c30 <__alt_data_end+0xff807c30>
  807c4c:	8009883a 	mov	r4,r16
  807c50:	08063580 	call	806358 <_Balloc>
  807c54:	a0800015 	stw	r2,0(r20)
  807c58:	80800417 	ldw	r2,16(r16)
  807c5c:	d8c00417 	ldw	r3,16(sp)
  807c60:	10800017 	ldw	r2,0(r2)
  807c64:	d8800715 	stw	r2,28(sp)
  807c68:	00800384 	movi	r2,14
  807c6c:	10c13436 	bltu	r2,r3,808140 <_dtoa_r+0x99c>
  807c70:	90013326 	beq	r18,zero,808140 <_dtoa_r+0x99c>
  807c74:	dcc01315 	stw	r19,76(sp)
  807c78:	0700330e 	bge	zero,fp,807d48 <_dtoa_r+0x5a4>
  807c7c:	e08003cc 	andi	r2,fp,15
  807c80:	100490fa 	slli	r2,r2,3
  807c84:	00c02074 	movhi	r3,129
  807c88:	e029d13a 	srai	r20,fp,4
  807c8c:	18ec6b04 	addi	r3,r3,-20052
  807c90:	1885883a 	add	r2,r3,r2
  807c94:	15800017 	ldw	r22,0(r2)
  807c98:	15400117 	ldw	r21,4(r2)
  807c9c:	a080040c 	andi	r2,r20,16
  807ca0:	10000c26 	beq	r2,zero,807cd4 <_dtoa_r+0x530>
  807ca4:	00802074 	movhi	r2,129
  807ca8:	10ac6104 	addi	r2,r2,-20092
  807cac:	11800817 	ldw	r6,32(r2)
  807cb0:	11c00917 	ldw	r7,36(r2)
  807cb4:	d9000917 	ldw	r4,36(sp)
  807cb8:	980b883a 	mov	r5,r19
  807cbc:	a50003cc 	andi	r20,r20,15
  807cc0:	0808c0c0 	call	808c0c <__divdf3>
  807cc4:	1023883a 	mov	r17,r2
  807cc8:	1827883a 	mov	r19,r3
  807ccc:	048000c4 	movi	r18,3
  807cd0:	00000106 	br	807cd8 <_dtoa_r+0x534>
  807cd4:	04800084 	movi	r18,2
  807cd8:	02402074 	movhi	r9,129
  807cdc:	0011883a 	mov	r8,zero
  807ce0:	4a6c6104 	addi	r9,r9,-20092
  807ce4:	a0001226 	beq	r20,zero,807d30 <_dtoa_r+0x58c>
  807ce8:	a080004c 	andi	r2,r20,1
  807cec:	10000d26 	beq	r2,zero,807d24 <_dtoa_r+0x580>
  807cf0:	4245883a 	add	r2,r8,r9
  807cf4:	11800017 	ldw	r6,0(r2)
  807cf8:	11c00117 	ldw	r7,4(r2)
  807cfc:	b009883a 	mov	r4,r22
  807d00:	a80b883a 	mov	r5,r21
  807d04:	da001415 	stw	r8,80(sp)
  807d08:	da401515 	stw	r9,84(sp)
  807d0c:	08041400 	call	804140 <__muldf3>
  807d10:	da401517 	ldw	r9,84(sp)
  807d14:	da001417 	ldw	r8,80(sp)
  807d18:	94800044 	addi	r18,r18,1
  807d1c:	102d883a 	mov	r22,r2
  807d20:	182b883a 	mov	r21,r3
  807d24:	a029d07a 	srai	r20,r20,1
  807d28:	42000204 	addi	r8,r8,8
  807d2c:	003fed06 	br	807ce4 <__alt_data_end+0xff807ce4>
  807d30:	b00d883a 	mov	r6,r22
  807d34:	a80f883a 	mov	r7,r21
  807d38:	8809883a 	mov	r4,r17
  807d3c:	980b883a 	mov	r5,r19
  807d40:	0808c0c0 	call	808c0c <__divdf3>
  807d44:	00002406 	br	807dd8 <_dtoa_r+0x634>
  807d48:	0729c83a 	sub	r20,zero,fp
  807d4c:	a0002526 	beq	r20,zero,807de4 <_dtoa_r+0x640>
  807d50:	a08003cc 	andi	r2,r20,15
  807d54:	100490fa 	slli	r2,r2,3
  807d58:	00c02074 	movhi	r3,129
  807d5c:	18ec6b04 	addi	r3,r3,-20052
  807d60:	1885883a 	add	r2,r3,r2
  807d64:	d9000917 	ldw	r4,36(sp)
  807d68:	11800017 	ldw	r6,0(r2)
  807d6c:	11c00117 	ldw	r7,4(r2)
  807d70:	980b883a 	mov	r5,r19
  807d74:	a029d13a 	srai	r20,r20,4
  807d78:	08041400 	call	804140 <__muldf3>
  807d7c:	05802074 	movhi	r22,129
  807d80:	1023883a 	mov	r17,r2
  807d84:	1827883a 	mov	r19,r3
  807d88:	002b883a 	mov	r21,zero
  807d8c:	0009883a 	mov	r4,zero
  807d90:	04800084 	movi	r18,2
  807d94:	b5ac6104 	addi	r22,r22,-20092
  807d98:	a0000d26 	beq	r20,zero,807dd0 <_dtoa_r+0x62c>
  807d9c:	a140004c 	andi	r5,r20,1
  807da0:	28000826 	beq	r5,zero,807dc4 <_dtoa_r+0x620>
  807da4:	ad89883a 	add	r4,r21,r22
  807da8:	21800017 	ldw	r6,0(r4)
  807dac:	21c00117 	ldw	r7,4(r4)
  807db0:	180b883a 	mov	r5,r3
  807db4:	1009883a 	mov	r4,r2
  807db8:	08041400 	call	804140 <__muldf3>
  807dbc:	94800044 	addi	r18,r18,1
  807dc0:	01000044 	movi	r4,1
  807dc4:	a029d07a 	srai	r20,r20,1
  807dc8:	ad400204 	addi	r21,r21,8
  807dcc:	003ff206 	br	807d98 <__alt_data_end+0xff807d98>
  807dd0:	21003fcc 	andi	r4,r4,255
  807dd4:	20000426 	beq	r4,zero,807de8 <_dtoa_r+0x644>
  807dd8:	1023883a 	mov	r17,r2
  807ddc:	1827883a 	mov	r19,r3
  807de0:	00000106 	br	807de8 <_dtoa_r+0x644>
  807de4:	04800084 	movi	r18,2
  807de8:	d9000f17 	ldw	r4,60(sp)
  807dec:	20001626 	beq	r4,zero,807e48 <_dtoa_r+0x6a4>
  807df0:	000d883a 	mov	r6,zero
  807df4:	01cffc34 	movhi	r7,16368
  807df8:	8809883a 	mov	r4,r17
  807dfc:	980b883a 	mov	r5,r19
  807e00:	08094f40 	call	8094f4 <__ledf2>
  807e04:	1000140e 	bge	r2,zero,807e58 <_dtoa_r+0x6b4>
  807e08:	d8800417 	ldw	r2,16(sp)
  807e0c:	10001626 	beq	r2,zero,807e68 <_dtoa_r+0x6c4>
  807e10:	d8c00517 	ldw	r3,20(sp)
  807e14:	00c0c90e 	bge	zero,r3,80813c <_dtoa_r+0x998>
  807e18:	8809883a 	mov	r4,r17
  807e1c:	980b883a 	mov	r5,r19
  807e20:	000d883a 	mov	r6,zero
  807e24:	01d00934 	movhi	r7,16420
  807e28:	08041400 	call	804140 <__muldf3>
  807e2c:	d9000517 	ldw	r4,20(sp)
  807e30:	e57fffc4 	addi	r21,fp,-1
  807e34:	1023883a 	mov	r17,r2
  807e38:	1827883a 	mov	r19,r3
  807e3c:	94800044 	addi	r18,r18,1
  807e40:	d9000c15 	stw	r4,48(sp)
  807e44:	00000a06 	br	807e70 <_dtoa_r+0x6cc>
  807e48:	d8800417 	ldw	r2,16(sp)
  807e4c:	e02b883a 	mov	r21,fp
  807e50:	d8800c15 	stw	r2,48(sp)
  807e54:	00000606 	br	807e70 <_dtoa_r+0x6cc>
  807e58:	d8c00417 	ldw	r3,16(sp)
  807e5c:	e02b883a 	mov	r21,fp
  807e60:	d8c00c15 	stw	r3,48(sp)
  807e64:	00000206 	br	807e70 <_dtoa_r+0x6cc>
  807e68:	e02b883a 	mov	r21,fp
  807e6c:	d8000c15 	stw	zero,48(sp)
  807e70:	9009883a 	mov	r4,r18
  807e74:	dc400e15 	stw	r17,56(sp)
  807e78:	08051d40 	call	8051d4 <__floatsidf>
  807e7c:	880d883a 	mov	r6,r17
  807e80:	980f883a 	mov	r7,r19
  807e84:	1009883a 	mov	r4,r2
  807e88:	180b883a 	mov	r5,r3
  807e8c:	08041400 	call	804140 <__muldf3>
  807e90:	1009883a 	mov	r4,r2
  807e94:	000d883a 	mov	r6,zero
  807e98:	01d00734 	movhi	r7,16412
  807e9c:	180b883a 	mov	r5,r3
  807ea0:	08037300 	call	803730 <__adddf3>
  807ea4:	d9000c17 	ldw	r4,48(sp)
  807ea8:	04bf3034 	movhi	r18,64704
  807eac:	9829883a 	mov	r20,r19
  807eb0:	102d883a 	mov	r22,r2
  807eb4:	1ca5883a 	add	r18,r3,r18
  807eb8:	2000141e 	bne	r4,zero,807f0c <_dtoa_r+0x768>
  807ebc:	8809883a 	mov	r4,r17
  807ec0:	980b883a 	mov	r5,r19
  807ec4:	000d883a 	mov	r6,zero
  807ec8:	01d00534 	movhi	r7,16404
  807ecc:	08048580 	call	804858 <__subdf3>
  807ed0:	b00d883a 	mov	r6,r22
  807ed4:	900f883a 	mov	r7,r18
  807ed8:	1009883a 	mov	r4,r2
  807edc:	180b883a 	mov	r5,r3
  807ee0:	1027883a 	mov	r19,r2
  807ee4:	1823883a 	mov	r17,r3
  807ee8:	08040640 	call	804064 <__gedf2>
  807eec:	0081dc16 	blt	zero,r2,808660 <_dtoa_r+0xebc>
  807ef0:	91e0003c 	xorhi	r7,r18,32768
  807ef4:	b00d883a 	mov	r6,r22
  807ef8:	9809883a 	mov	r4,r19
  807efc:	880b883a 	mov	r5,r17
  807f00:	08094f40 	call	8094f4 <__ledf2>
  807f04:	1001d016 	blt	r2,zero,808648 <_dtoa_r+0xea4>
  807f08:	00008c06 	br	80813c <_dtoa_r+0x998>
  807f0c:	d9000c17 	ldw	r4,48(sp)
  807f10:	00802074 	movhi	r2,129
  807f14:	10ac6b04 	addi	r2,r2,-20052
  807f18:	20ffffc4 	addi	r3,r4,-1
  807f1c:	180690fa 	slli	r3,r3,3
  807f20:	d9000b17 	ldw	r4,44(sp)
  807f24:	10c5883a 	add	r2,r2,r3
  807f28:	20004526 	beq	r4,zero,808040 <_dtoa_r+0x89c>
  807f2c:	11800017 	ldw	r6,0(r2)
  807f30:	11c00117 	ldw	r7,4(r2)
  807f34:	0009883a 	mov	r4,zero
  807f38:	014ff834 	movhi	r5,16352
  807f3c:	0808c0c0 	call	808c0c <__divdf3>
  807f40:	900f883a 	mov	r7,r18
  807f44:	b00d883a 	mov	r6,r22
  807f48:	1009883a 	mov	r4,r2
  807f4c:	180b883a 	mov	r5,r3
  807f50:	08048580 	call	804858 <__subdf3>
  807f54:	da400717 	ldw	r9,28(sp)
  807f58:	1025883a 	mov	r18,r2
  807f5c:	1823883a 	mov	r17,r3
  807f60:	d9000e17 	ldw	r4,56(sp)
  807f64:	a00b883a 	mov	r5,r20
  807f68:	da401515 	stw	r9,84(sp)
  807f6c:	08051540 	call	805154 <__fixdfsi>
  807f70:	1009883a 	mov	r4,r2
  807f74:	d8801415 	stw	r2,80(sp)
  807f78:	08051d40 	call	8051d4 <__floatsidf>
  807f7c:	d9000e17 	ldw	r4,56(sp)
  807f80:	a00b883a 	mov	r5,r20
  807f84:	100d883a 	mov	r6,r2
  807f88:	180f883a 	mov	r7,r3
  807f8c:	08048580 	call	804858 <__subdf3>
  807f90:	da001417 	ldw	r8,80(sp)
  807f94:	da401517 	ldw	r9,84(sp)
  807f98:	900d883a 	mov	r6,r18
  807f9c:	42000c04 	addi	r8,r8,48
  807fa0:	4a000005 	stb	r8,0(r9)
  807fa4:	880f883a 	mov	r7,r17
  807fa8:	1009883a 	mov	r4,r2
  807fac:	180b883a 	mov	r5,r3
  807fb0:	1029883a 	mov	r20,r2
  807fb4:	1827883a 	mov	r19,r3
  807fb8:	4d800044 	addi	r22,r9,1
  807fbc:	08094f40 	call	8094f4 <__ledf2>
  807fc0:	10028a16 	blt	r2,zero,8089ec <_dtoa_r+0x1248>
  807fc4:	a00d883a 	mov	r6,r20
  807fc8:	980f883a 	mov	r7,r19
  807fcc:	0009883a 	mov	r4,zero
  807fd0:	014ffc34 	movhi	r5,16368
  807fd4:	08048580 	call	804858 <__subdf3>
  807fd8:	900d883a 	mov	r6,r18
  807fdc:	880f883a 	mov	r7,r17
  807fe0:	1009883a 	mov	r4,r2
  807fe4:	180b883a 	mov	r5,r3
  807fe8:	08094f40 	call	8094f4 <__ledf2>
  807fec:	1000a716 	blt	r2,zero,80828c <_dtoa_r+0xae8>
  807ff0:	d8c00717 	ldw	r3,28(sp)
  807ff4:	d9000c17 	ldw	r4,48(sp)
  807ff8:	b0c5c83a 	sub	r2,r22,r3
  807ffc:	11004f0e 	bge	r2,r4,80813c <_dtoa_r+0x998>
  808000:	9009883a 	mov	r4,r18
  808004:	880b883a 	mov	r5,r17
  808008:	000d883a 	mov	r6,zero
  80800c:	01d00934 	movhi	r7,16420
  808010:	08041400 	call	804140 <__muldf3>
  808014:	a009883a 	mov	r4,r20
  808018:	000d883a 	mov	r6,zero
  80801c:	01d00934 	movhi	r7,16420
  808020:	980b883a 	mov	r5,r19
  808024:	1025883a 	mov	r18,r2
  808028:	1823883a 	mov	r17,r3
  80802c:	08041400 	call	804140 <__muldf3>
  808030:	d8800e15 	stw	r2,56(sp)
  808034:	1829883a 	mov	r20,r3
  808038:	b013883a 	mov	r9,r22
  80803c:	003fc806 	br	807f60 <__alt_data_end+0xff807f60>
  808040:	11000017 	ldw	r4,0(r2)
  808044:	11400117 	ldw	r5,4(r2)
  808048:	b00d883a 	mov	r6,r22
  80804c:	900f883a 	mov	r7,r18
  808050:	08041400 	call	804140 <__muldf3>
  808054:	d8801115 	stw	r2,68(sp)
  808058:	dcc00717 	ldw	r19,28(sp)
  80805c:	d8800c17 	ldw	r2,48(sp)
  808060:	d8c01215 	stw	r3,72(sp)
  808064:	98ad883a 	add	r22,r19,r2
  808068:	d9000e17 	ldw	r4,56(sp)
  80806c:	a00b883a 	mov	r5,r20
  808070:	9cc00044 	addi	r19,r19,1
  808074:	08051540 	call	805154 <__fixdfsi>
  808078:	1009883a 	mov	r4,r2
  80807c:	d8801515 	stw	r2,84(sp)
  808080:	08051d40 	call	8051d4 <__floatsidf>
  808084:	d9000e17 	ldw	r4,56(sp)
  808088:	100d883a 	mov	r6,r2
  80808c:	180f883a 	mov	r7,r3
  808090:	a00b883a 	mov	r5,r20
  808094:	08048580 	call	804858 <__subdf3>
  808098:	da401517 	ldw	r9,84(sp)
  80809c:	1025883a 	mov	r18,r2
  8080a0:	1823883a 	mov	r17,r3
  8080a4:	4a400c04 	addi	r9,r9,48
  8080a8:	9a7fffc5 	stb	r9,-1(r19)
  8080ac:	000d883a 	mov	r6,zero
  8080b0:	b4c01b1e 	bne	r22,r19,808120 <_dtoa_r+0x97c>
  8080b4:	d9001117 	ldw	r4,68(sp)
  8080b8:	d9401217 	ldw	r5,72(sp)
  8080bc:	01cff834 	movhi	r7,16352
  8080c0:	08037300 	call	803730 <__adddf3>
  8080c4:	100d883a 	mov	r6,r2
  8080c8:	180f883a 	mov	r7,r3
  8080cc:	9009883a 	mov	r4,r18
  8080d0:	880b883a 	mov	r5,r17
  8080d4:	08040640 	call	804064 <__gedf2>
  8080d8:	00806c16 	blt	zero,r2,80828c <_dtoa_r+0xae8>
  8080dc:	d9801117 	ldw	r6,68(sp)
  8080e0:	d9c01217 	ldw	r7,72(sp)
  8080e4:	0009883a 	mov	r4,zero
  8080e8:	014ff834 	movhi	r5,16352
  8080ec:	08048580 	call	804858 <__subdf3>
  8080f0:	100d883a 	mov	r6,r2
  8080f4:	180f883a 	mov	r7,r3
  8080f8:	9009883a 	mov	r4,r18
  8080fc:	880b883a 	mov	r5,r17
  808100:	08094f40 	call	8094f4 <__ledf2>
  808104:	10000d0e 	bge	r2,zero,80813c <_dtoa_r+0x998>
  808108:	00c00c04 	movi	r3,48
  80810c:	b0bfffc4 	addi	r2,r22,-1
  808110:	11000007 	ldb	r4,0(r2)
  808114:	20c2351e 	bne	r4,r3,8089ec <_dtoa_r+0x1248>
  808118:	102d883a 	mov	r22,r2
  80811c:	003ffb06 	br	80810c <__alt_data_end+0xff80810c>
  808120:	01d00934 	movhi	r7,16420
  808124:	1009883a 	mov	r4,r2
  808128:	180b883a 	mov	r5,r3
  80812c:	08041400 	call	804140 <__muldf3>
  808130:	d8800e15 	stw	r2,56(sp)
  808134:	1829883a 	mov	r20,r3
  808138:	003fcb06 	br	808068 <__alt_data_end+0xff808068>
  80813c:	dcc01317 	ldw	r19,76(sp)
  808140:	d8800117 	ldw	r2,4(sp)
  808144:	10007116 	blt	r2,zero,80830c <_dtoa_r+0xb68>
  808148:	00c00384 	movi	r3,14
  80814c:	1f006f16 	blt	r3,fp,80830c <_dtoa_r+0xb68>
  808150:	e00490fa 	slli	r2,fp,3
  808154:	00c02074 	movhi	r3,129
  808158:	18ec6b04 	addi	r3,r3,-20052
  80815c:	1885883a 	add	r2,r3,r2
  808160:	d8c02017 	ldw	r3,128(sp)
  808164:	14400017 	ldw	r17,0(r2)
  808168:	14800117 	ldw	r18,4(r2)
  80816c:	1800110e 	bge	r3,zero,8081b4 <_dtoa_r+0xa10>
  808170:	d9000417 	ldw	r4,16(sp)
  808174:	01000f16 	blt	zero,r4,8081b4 <_dtoa_r+0xa10>
  808178:	2001331e 	bne	r4,zero,808648 <_dtoa_r+0xea4>
  80817c:	8809883a 	mov	r4,r17
  808180:	900b883a 	mov	r5,r18
  808184:	000d883a 	mov	r6,zero
  808188:	01d00534 	movhi	r7,16404
  80818c:	08041400 	call	804140 <__muldf3>
  808190:	d9800917 	ldw	r6,36(sp)
  808194:	980f883a 	mov	r7,r19
  808198:	1009883a 	mov	r4,r2
  80819c:	180b883a 	mov	r5,r3
  8081a0:	08040640 	call	804064 <__gedf2>
  8081a4:	0025883a 	mov	r18,zero
  8081a8:	0023883a 	mov	r17,zero
  8081ac:	1001280e 	bge	r2,zero,808650 <_dtoa_r+0xeac>
  8081b0:	00012e06 	br	80866c <_dtoa_r+0xec8>
  8081b4:	d8c00417 	ldw	r3,16(sp)
  8081b8:	dd400717 	ldw	r21,28(sp)
  8081bc:	ddc00917 	ldw	r23,36(sp)
  8081c0:	18bfffc4 	addi	r2,r3,-1
  8081c4:	a885883a 	add	r2,r21,r2
  8081c8:	d8800415 	stw	r2,16(sp)
  8081cc:	880d883a 	mov	r6,r17
  8081d0:	900f883a 	mov	r7,r18
  8081d4:	b809883a 	mov	r4,r23
  8081d8:	980b883a 	mov	r5,r19
  8081dc:	0808c0c0 	call	808c0c <__divdf3>
  8081e0:	180b883a 	mov	r5,r3
  8081e4:	1009883a 	mov	r4,r2
  8081e8:	08051540 	call	805154 <__fixdfsi>
  8081ec:	1009883a 	mov	r4,r2
  8081f0:	1029883a 	mov	r20,r2
  8081f4:	08051d40 	call	8051d4 <__floatsidf>
  8081f8:	880d883a 	mov	r6,r17
  8081fc:	900f883a 	mov	r7,r18
  808200:	1009883a 	mov	r4,r2
  808204:	180b883a 	mov	r5,r3
  808208:	08041400 	call	804140 <__muldf3>
  80820c:	b809883a 	mov	r4,r23
  808210:	100d883a 	mov	r6,r2
  808214:	180f883a 	mov	r7,r3
  808218:	980b883a 	mov	r5,r19
  80821c:	08048580 	call	804858 <__subdf3>
  808220:	a1000c04 	addi	r4,r20,48
  808224:	a9000005 	stb	r4,0(r21)
  808228:	d9000417 	ldw	r4,16(sp)
  80822c:	ad800044 	addi	r22,r21,1
  808230:	a900271e 	bne	r21,r4,8082d0 <_dtoa_r+0xb2c>
  808234:	100d883a 	mov	r6,r2
  808238:	180f883a 	mov	r7,r3
  80823c:	1009883a 	mov	r4,r2
  808240:	180b883a 	mov	r5,r3
  808244:	08037300 	call	803730 <__adddf3>
  808248:	100d883a 	mov	r6,r2
  80824c:	180f883a 	mov	r7,r3
  808250:	8809883a 	mov	r4,r17
  808254:	900b883a 	mov	r5,r18
  808258:	102b883a 	mov	r21,r2
  80825c:	1827883a 	mov	r19,r3
  808260:	08094f40 	call	8094f4 <__ledf2>
  808264:	10000a16 	blt	r2,zero,808290 <_dtoa_r+0xaec>
  808268:	a80d883a 	mov	r6,r21
  80826c:	980f883a 	mov	r7,r19
  808270:	8809883a 	mov	r4,r17
  808274:	900b883a 	mov	r5,r18
  808278:	0803fdc0 	call	803fdc <__eqdf2>
  80827c:	1001dc1e 	bne	r2,zero,8089f0 <_dtoa_r+0x124c>
  808280:	a500004c 	andi	r20,r20,1
  808284:	a000021e 	bne	r20,zero,808290 <_dtoa_r+0xaec>
  808288:	0001d906 	br	8089f0 <_dtoa_r+0x124c>
  80828c:	a839883a 	mov	fp,r21
  808290:	00c00e44 	movi	r3,57
  808294:	b0bfffc4 	addi	r2,r22,-1
  808298:	11000007 	ldb	r4,0(r2)
  80829c:	20c0081e 	bne	r4,r3,8082c0 <_dtoa_r+0xb1c>
  8082a0:	d9000717 	ldw	r4,28(sp)
  8082a4:	2080041e 	bne	r4,r2,8082b8 <_dtoa_r+0xb14>
  8082a8:	00c00c04 	movi	r3,48
  8082ac:	e7000044 	addi	fp,fp,1
  8082b0:	20c00005 	stb	r3,0(r4)
  8082b4:	00000206 	br	8082c0 <_dtoa_r+0xb1c>
  8082b8:	102d883a 	mov	r22,r2
  8082bc:	003ff506 	br	808294 <__alt_data_end+0xff808294>
  8082c0:	10c00003 	ldbu	r3,0(r2)
  8082c4:	18c00044 	addi	r3,r3,1
  8082c8:	10c00005 	stb	r3,0(r2)
  8082cc:	0001c806 	br	8089f0 <_dtoa_r+0x124c>
  8082d0:	000d883a 	mov	r6,zero
  8082d4:	01d00934 	movhi	r7,16420
  8082d8:	1009883a 	mov	r4,r2
  8082dc:	180b883a 	mov	r5,r3
  8082e0:	08041400 	call	804140 <__muldf3>
  8082e4:	000d883a 	mov	r6,zero
  8082e8:	000f883a 	mov	r7,zero
  8082ec:	1009883a 	mov	r4,r2
  8082f0:	180b883a 	mov	r5,r3
  8082f4:	102f883a 	mov	r23,r2
  8082f8:	1827883a 	mov	r19,r3
  8082fc:	b02b883a 	mov	r21,r22
  808300:	0803fdc0 	call	803fdc <__eqdf2>
  808304:	103fb11e 	bne	r2,zero,8081cc <__alt_data_end+0xff8081cc>
  808308:	0001b906 	br	8089f0 <_dtoa_r+0x124c>
  80830c:	d8c00b17 	ldw	r3,44(sp)
  808310:	18002b26 	beq	r3,zero,8083c0 <_dtoa_r+0xc1c>
  808314:	d9000817 	ldw	r4,32(sp)
  808318:	00c00044 	movi	r3,1
  80831c:	19000a16 	blt	r3,r4,808348 <_dtoa_r+0xba4>
  808320:	d8c01017 	ldw	r3,64(sp)
  808324:	18000226 	beq	r3,zero,808330 <_dtoa_r+0xb8c>
  808328:	10810cc4 	addi	r2,r2,1075
  80832c:	00000306 	br	80833c <_dtoa_r+0xb98>
  808330:	d8c00217 	ldw	r3,8(sp)
  808334:	00800d84 	movi	r2,54
  808338:	10c5c83a 	sub	r2,r2,r3
  80833c:	dc800a17 	ldw	r18,40(sp)
  808340:	dd000617 	ldw	r20,24(sp)
  808344:	00001506 	br	80839c <_dtoa_r+0xbf8>
  808348:	d9000417 	ldw	r4,16(sp)
  80834c:	d8800a17 	ldw	r2,40(sp)
  808350:	24bfffc4 	addi	r18,r4,-1
  808354:	14800216 	blt	r2,r18,808360 <_dtoa_r+0xbbc>
  808358:	14a5c83a 	sub	r18,r2,r18
  80835c:	00000706 	br	80837c <_dtoa_r+0xbd8>
  808360:	d8c00a17 	ldw	r3,40(sp)
  808364:	d9000d17 	ldw	r4,52(sp)
  808368:	dc800a15 	stw	r18,40(sp)
  80836c:	90cdc83a 	sub	r6,r18,r3
  808370:	2189883a 	add	r4,r4,r6
  808374:	d9000d15 	stw	r4,52(sp)
  808378:	0025883a 	mov	r18,zero
  80837c:	d8800417 	ldw	r2,16(sp)
  808380:	1000040e 	bge	r2,zero,808394 <_dtoa_r+0xbf0>
  808384:	d8c00617 	ldw	r3,24(sp)
  808388:	18a9c83a 	sub	r20,r3,r2
  80838c:	0005883a 	mov	r2,zero
  808390:	00000206 	br	80839c <_dtoa_r+0xbf8>
  808394:	dd000617 	ldw	r20,24(sp)
  808398:	d8800417 	ldw	r2,16(sp)
  80839c:	d9000617 	ldw	r4,24(sp)
  8083a0:	01400044 	movi	r5,1
  8083a4:	b8af883a 	add	r23,r23,r2
  8083a8:	2089883a 	add	r4,r4,r2
  8083ac:	d9000615 	stw	r4,24(sp)
  8083b0:	8009883a 	mov	r4,r16
  8083b4:	08067d00 	call	8067d0 <__i2b>
  8083b8:	1023883a 	mov	r17,r2
  8083bc:	00000306 	br	8083cc <_dtoa_r+0xc28>
  8083c0:	dc800a17 	ldw	r18,40(sp)
  8083c4:	dd000617 	ldw	r20,24(sp)
  8083c8:	0023883a 	mov	r17,zero
  8083cc:	a0000926 	beq	r20,zero,8083f4 <_dtoa_r+0xc50>
  8083d0:	05c0080e 	bge	zero,r23,8083f4 <_dtoa_r+0xc50>
  8083d4:	a005883a 	mov	r2,r20
  8083d8:	bd00010e 	bge	r23,r20,8083e0 <_dtoa_r+0xc3c>
  8083dc:	b805883a 	mov	r2,r23
  8083e0:	d8c00617 	ldw	r3,24(sp)
  8083e4:	a0a9c83a 	sub	r20,r20,r2
  8083e8:	b8afc83a 	sub	r23,r23,r2
  8083ec:	1887c83a 	sub	r3,r3,r2
  8083f0:	d8c00615 	stw	r3,24(sp)
  8083f4:	d9000a17 	ldw	r4,40(sp)
  8083f8:	01001a0e 	bge	zero,r4,808464 <_dtoa_r+0xcc0>
  8083fc:	d8800b17 	ldw	r2,44(sp)
  808400:	10001326 	beq	r2,zero,808450 <_dtoa_r+0xcac>
  808404:	90000e26 	beq	r18,zero,808440 <_dtoa_r+0xc9c>
  808408:	880b883a 	mov	r5,r17
  80840c:	900d883a 	mov	r6,r18
  808410:	8009883a 	mov	r4,r16
  808414:	08069e40 	call	8069e4 <__pow5mult>
  808418:	d9800317 	ldw	r6,12(sp)
  80841c:	100b883a 	mov	r5,r2
  808420:	8009883a 	mov	r4,r16
  808424:	1023883a 	mov	r17,r2
  808428:	080680c0 	call	80680c <__multiply>
  80842c:	d9400317 	ldw	r5,12(sp)
  808430:	102b883a 	mov	r21,r2
  808434:	8009883a 	mov	r4,r16
  808438:	080643c0 	call	80643c <_Bfree>
  80843c:	dd400315 	stw	r21,12(sp)
  808440:	d8c00a17 	ldw	r3,40(sp)
  808444:	1c8dc83a 	sub	r6,r3,r18
  808448:	30000626 	beq	r6,zero,808464 <_dtoa_r+0xcc0>
  80844c:	00000106 	br	808454 <_dtoa_r+0xcb0>
  808450:	d9800a17 	ldw	r6,40(sp)
  808454:	d9400317 	ldw	r5,12(sp)
  808458:	8009883a 	mov	r4,r16
  80845c:	08069e40 	call	8069e4 <__pow5mult>
  808460:	d8800315 	stw	r2,12(sp)
  808464:	05400044 	movi	r21,1
  808468:	8009883a 	mov	r4,r16
  80846c:	a80b883a 	mov	r5,r21
  808470:	08067d00 	call	8067d0 <__i2b>
  808474:	d9000d17 	ldw	r4,52(sp)
  808478:	1025883a 	mov	r18,r2
  80847c:	20016c26 	beq	r4,zero,808a30 <_dtoa_r+0x128c>
  808480:	200d883a 	mov	r6,r4
  808484:	100b883a 	mov	r5,r2
  808488:	8009883a 	mov	r4,r16
  80848c:	08069e40 	call	8069e4 <__pow5mult>
  808490:	1025883a 	mov	r18,r2
  808494:	d8800817 	ldw	r2,32(sp)
  808498:	a8801216 	blt	r21,r2,8084e4 <_dtoa_r+0xd40>
  80849c:	d8c00917 	ldw	r3,36(sp)
  8084a0:	18000c1e 	bne	r3,zero,8084d4 <_dtoa_r+0xd30>
  8084a4:	00800434 	movhi	r2,16
  8084a8:	10bfffc4 	addi	r2,r2,-1
  8084ac:	9884703a 	and	r2,r19,r2
  8084b0:	1000081e 	bne	r2,zero,8084d4 <_dtoa_r+0xd30>
  8084b4:	9cdffc2c 	andhi	r19,r19,32752
  8084b8:	98000626 	beq	r19,zero,8084d4 <_dtoa_r+0xd30>
  8084bc:	d9000617 	ldw	r4,24(sp)
  8084c0:	bdc00044 	addi	r23,r23,1
  8084c4:	04c00044 	movi	r19,1
  8084c8:	21000044 	addi	r4,r4,1
  8084cc:	d9000615 	stw	r4,24(sp)
  8084d0:	00000106 	br	8084d8 <_dtoa_r+0xd34>
  8084d4:	0027883a 	mov	r19,zero
  8084d8:	d8800d17 	ldw	r2,52(sp)
  8084dc:	10000c26 	beq	r2,zero,808510 <_dtoa_r+0xd6c>
  8084e0:	00000106 	br	8084e8 <_dtoa_r+0xd44>
  8084e4:	0027883a 	mov	r19,zero
  8084e8:	90800417 	ldw	r2,16(r18)
  8084ec:	05400804 	movi	r21,32
  8084f0:	10800104 	addi	r2,r2,4
  8084f4:	1085883a 	add	r2,r2,r2
  8084f8:	1085883a 	add	r2,r2,r2
  8084fc:	9085883a 	add	r2,r18,r2
  808500:	11000017 	ldw	r4,0(r2)
  808504:	08066b80 	call	8066b8 <__hi0bits>
  808508:	a885c83a 	sub	r2,r21,r2
  80850c:	00000106 	br	808514 <_dtoa_r+0xd70>
  808510:	00800044 	movi	r2,1
  808514:	15eb883a 	add	r21,r2,r23
  808518:	a88007cc 	andi	r2,r21,31
  80851c:	10000c26 	beq	r2,zero,808550 <_dtoa_r+0xdac>
  808520:	00c00804 	movi	r3,32
  808524:	1887c83a 	sub	r3,r3,r2
  808528:	01000104 	movi	r4,4
  80852c:	20c0060e 	bge	r4,r3,808548 <_dtoa_r+0xda4>
  808530:	00c00704 	movi	r3,28
  808534:	1885c83a 	sub	r2,r3,r2
  808538:	d8c00617 	ldw	r3,24(sp)
  80853c:	1887883a 	add	r3,r3,r2
  808540:	d8c00615 	stw	r3,24(sp)
  808544:	00000606 	br	808560 <_dtoa_r+0xdbc>
  808548:	19000726 	beq	r3,r4,808568 <_dtoa_r+0xdc4>
  80854c:	1805883a 	mov	r2,r3
  808550:	d9000617 	ldw	r4,24(sp)
  808554:	10800704 	addi	r2,r2,28
  808558:	2089883a 	add	r4,r4,r2
  80855c:	d9000615 	stw	r4,24(sp)
  808560:	a0a9883a 	add	r20,r20,r2
  808564:	b8af883a 	add	r23,r23,r2
  808568:	d8800617 	ldw	r2,24(sp)
  80856c:	0080050e 	bge	zero,r2,808584 <_dtoa_r+0xde0>
  808570:	d9400317 	ldw	r5,12(sp)
  808574:	100d883a 	mov	r6,r2
  808578:	8009883a 	mov	r4,r16
  80857c:	0806b180 	call	806b18 <__lshift>
  808580:	d8800315 	stw	r2,12(sp)
  808584:	05c0050e 	bge	zero,r23,80859c <_dtoa_r+0xdf8>
  808588:	900b883a 	mov	r5,r18
  80858c:	b80d883a 	mov	r6,r23
  808590:	8009883a 	mov	r4,r16
  808594:	0806b180 	call	806b18 <__lshift>
  808598:	1025883a 	mov	r18,r2
  80859c:	d8c00f17 	ldw	r3,60(sp)
  8085a0:	18001626 	beq	r3,zero,8085fc <_dtoa_r+0xe58>
  8085a4:	d9000317 	ldw	r4,12(sp)
  8085a8:	900b883a 	mov	r5,r18
  8085ac:	0806c600 	call	806c60 <__mcmp>
  8085b0:	1000120e 	bge	r2,zero,8085fc <_dtoa_r+0xe58>
  8085b4:	d9400317 	ldw	r5,12(sp)
  8085b8:	8009883a 	mov	r4,r16
  8085bc:	000f883a 	mov	r7,zero
  8085c0:	01800284 	movi	r6,10
  8085c4:	08064b40 	call	8064b4 <__multadd>
  8085c8:	d9000b17 	ldw	r4,44(sp)
  8085cc:	d8800315 	stw	r2,12(sp)
  8085d0:	e73fffc4 	addi	fp,fp,-1
  8085d4:	20011b26 	beq	r4,zero,808a44 <_dtoa_r+0x12a0>
  8085d8:	880b883a 	mov	r5,r17
  8085dc:	000f883a 	mov	r7,zero
  8085e0:	01800284 	movi	r6,10
  8085e4:	8009883a 	mov	r4,r16
  8085e8:	08064b40 	call	8064b4 <__multadd>
  8085ec:	1023883a 	mov	r17,r2
  8085f0:	d8800517 	ldw	r2,20(sp)
  8085f4:	00802d16 	blt	zero,r2,8086ac <_dtoa_r+0xf08>
  8085f8:	00011806 	br	808a5c <_dtoa_r+0x12b8>
  8085fc:	d8c00417 	ldw	r3,16(sp)
  808600:	00c02216 	blt	zero,r3,80868c <_dtoa_r+0xee8>
  808604:	d9000817 	ldw	r4,32(sp)
  808608:	00800084 	movi	r2,2
  80860c:	11001f0e 	bge	r2,r4,80868c <_dtoa_r+0xee8>
  808610:	d8c00515 	stw	r3,20(sp)
  808614:	d8800517 	ldw	r2,20(sp)
  808618:	10000d1e 	bne	r2,zero,808650 <_dtoa_r+0xeac>
  80861c:	900b883a 	mov	r5,r18
  808620:	8009883a 	mov	r4,r16
  808624:	000f883a 	mov	r7,zero
  808628:	01800144 	movi	r6,5
  80862c:	08064b40 	call	8064b4 <__multadd>
  808630:	d9000317 	ldw	r4,12(sp)
  808634:	100b883a 	mov	r5,r2
  808638:	1025883a 	mov	r18,r2
  80863c:	0806c600 	call	806c60 <__mcmp>
  808640:	00800a16 	blt	zero,r2,80866c <_dtoa_r+0xec8>
  808644:	00000206 	br	808650 <_dtoa_r+0xeac>
  808648:	0025883a 	mov	r18,zero
  80864c:	0023883a 	mov	r17,zero
  808650:	d8c02017 	ldw	r3,128(sp)
  808654:	dd800717 	ldw	r22,28(sp)
  808658:	00f8303a 	nor	fp,zero,r3
  80865c:	00000806 	br	808680 <_dtoa_r+0xedc>
  808660:	a839883a 	mov	fp,r21
  808664:	0025883a 	mov	r18,zero
  808668:	0023883a 	mov	r17,zero
  80866c:	d9000717 	ldw	r4,28(sp)
  808670:	00800c44 	movi	r2,49
  808674:	e7000044 	addi	fp,fp,1
  808678:	25800044 	addi	r22,r4,1
  80867c:	20800005 	stb	r2,0(r4)
  808680:	8827883a 	mov	r19,r17
  808684:	0023883a 	mov	r17,zero
  808688:	0000cb06 	br	8089b8 <_dtoa_r+0x1214>
  80868c:	d8800b17 	ldw	r2,44(sp)
  808690:	1000041e 	bne	r2,zero,8086a4 <_dtoa_r+0xf00>
  808694:	d8c00417 	ldw	r3,16(sp)
  808698:	d8c00515 	stw	r3,20(sp)
  80869c:	dcc00717 	ldw	r19,28(sp)
  8086a0:	00009006 	br	8088e4 <_dtoa_r+0x1140>
  8086a4:	d9000417 	ldw	r4,16(sp)
  8086a8:	d9000515 	stw	r4,20(sp)
  8086ac:	0500050e 	bge	zero,r20,8086c4 <_dtoa_r+0xf20>
  8086b0:	880b883a 	mov	r5,r17
  8086b4:	a00d883a 	mov	r6,r20
  8086b8:	8009883a 	mov	r4,r16
  8086bc:	0806b180 	call	806b18 <__lshift>
  8086c0:	1023883a 	mov	r17,r2
  8086c4:	98001126 	beq	r19,zero,80870c <_dtoa_r+0xf68>
  8086c8:	89400117 	ldw	r5,4(r17)
  8086cc:	8009883a 	mov	r4,r16
  8086d0:	08063580 	call	806358 <_Balloc>
  8086d4:	89800417 	ldw	r6,16(r17)
  8086d8:	89400304 	addi	r5,r17,12
  8086dc:	11000304 	addi	r4,r2,12
  8086e0:	31800084 	addi	r6,r6,2
  8086e4:	318d883a 	add	r6,r6,r6
  8086e8:	318d883a 	add	r6,r6,r6
  8086ec:	1027883a 	mov	r19,r2
  8086f0:	0808ac40 	call	808ac4 <memcpy>
  8086f4:	980b883a 	mov	r5,r19
  8086f8:	01800044 	movi	r6,1
  8086fc:	8009883a 	mov	r4,r16
  808700:	0806b180 	call	806b18 <__lshift>
  808704:	1027883a 	mov	r19,r2
  808708:	00000106 	br	808710 <_dtoa_r+0xf6c>
  80870c:	8827883a 	mov	r19,r17
  808710:	d8800517 	ldw	r2,20(sp)
  808714:	ddc00717 	ldw	r23,28(sp)
  808718:	d8c00917 	ldw	r3,36(sp)
  80871c:	157fffc4 	addi	r21,r2,-1
  808720:	bd6b883a 	add	r21,r23,r21
  808724:	18c0004c 	andi	r3,r3,1
  808728:	dd400615 	stw	r21,24(sp)
  80872c:	d8c00515 	stw	r3,20(sp)
  808730:	d9000317 	ldw	r4,12(sp)
  808734:	900b883a 	mov	r5,r18
  808738:	08075b80 	call	8075b8 <quorem>
  80873c:	d9000317 	ldw	r4,12(sp)
  808740:	880b883a 	mov	r5,r17
  808744:	102d883a 	mov	r22,r2
  808748:	15400c04 	addi	r21,r2,48
  80874c:	0806c600 	call	806c60 <__mcmp>
  808750:	980d883a 	mov	r6,r19
  808754:	900b883a 	mov	r5,r18
  808758:	8009883a 	mov	r4,r16
  80875c:	d8800415 	stw	r2,16(sp)
  808760:	0806cbc0 	call	806cbc <__mdiff>
  808764:	1029883a 	mov	r20,r2
  808768:	10800317 	ldw	r2,12(r2)
  80876c:	1000041e 	bne	r2,zero,808780 <_dtoa_r+0xfdc>
  808770:	d9000317 	ldw	r4,12(sp)
  808774:	a00b883a 	mov	r5,r20
  808778:	0806c600 	call	806c60 <__mcmp>
  80877c:	00000106 	br	808784 <_dtoa_r+0xfe0>
  808780:	00800044 	movi	r2,1
  808784:	a00b883a 	mov	r5,r20
  808788:	8009883a 	mov	r4,r16
  80878c:	d8801415 	stw	r2,80(sp)
  808790:	080643c0 	call	80643c <_Bfree>
  808794:	d8801417 	ldw	r2,80(sp)
  808798:	bd000044 	addi	r20,r23,1
  80879c:	1000091e 	bne	r2,zero,8087c4 <_dtoa_r+0x1020>
  8087a0:	d9000817 	ldw	r4,32(sp)
  8087a4:	2000071e 	bne	r4,zero,8087c4 <_dtoa_r+0x1020>
  8087a8:	d8c00517 	ldw	r3,20(sp)
  8087ac:	1800051e 	bne	r3,zero,8087c4 <_dtoa_r+0x1020>
  8087b0:	00800e44 	movi	r2,57
  8087b4:	a8802026 	beq	r21,r2,808838 <_dtoa_r+0x1094>
  8087b8:	d8c00417 	ldw	r3,16(sp)
  8087bc:	00c01716 	blt	zero,r3,80881c <_dtoa_r+0x1078>
  8087c0:	00001706 	br	808820 <_dtoa_r+0x107c>
  8087c4:	d8c00417 	ldw	r3,16(sp)
  8087c8:	18000516 	blt	r3,zero,8087e0 <_dtoa_r+0x103c>
  8087cc:	1800171e 	bne	r3,zero,80882c <_dtoa_r+0x1088>
  8087d0:	d9000817 	ldw	r4,32(sp)
  8087d4:	2000151e 	bne	r4,zero,80882c <_dtoa_r+0x1088>
  8087d8:	d8c00517 	ldw	r3,20(sp)
  8087dc:	1800131e 	bne	r3,zero,80882c <_dtoa_r+0x1088>
  8087e0:	00800f0e 	bge	zero,r2,808820 <_dtoa_r+0x107c>
  8087e4:	d9400317 	ldw	r5,12(sp)
  8087e8:	8009883a 	mov	r4,r16
  8087ec:	01800044 	movi	r6,1
  8087f0:	0806b180 	call	806b18 <__lshift>
  8087f4:	900b883a 	mov	r5,r18
  8087f8:	1009883a 	mov	r4,r2
  8087fc:	d8800315 	stw	r2,12(sp)
  808800:	0806c600 	call	806c60 <__mcmp>
  808804:	00800316 	blt	zero,r2,808814 <_dtoa_r+0x1070>
  808808:	1000051e 	bne	r2,zero,808820 <_dtoa_r+0x107c>
  80880c:	a880004c 	andi	r2,r21,1
  808810:	10000326 	beq	r2,zero,808820 <_dtoa_r+0x107c>
  808814:	00800e44 	movi	r2,57
  808818:	a8800726 	beq	r21,r2,808838 <_dtoa_r+0x1094>
  80881c:	b5400c44 	addi	r21,r22,49
  808820:	a02d883a 	mov	r22,r20
  808824:	bd400005 	stb	r21,0(r23)
  808828:	00006306 	br	8089b8 <_dtoa_r+0x1214>
  80882c:	00800a0e 	bge	zero,r2,808858 <_dtoa_r+0x10b4>
  808830:	00800e44 	movi	r2,57
  808834:	a880041e 	bne	r21,r2,808848 <_dtoa_r+0x10a4>
  808838:	00800e44 	movi	r2,57
  80883c:	a02d883a 	mov	r22,r20
  808840:	b8800005 	stb	r2,0(r23)
  808844:	00004406 	br	808958 <_dtoa_r+0x11b4>
  808848:	a8c00044 	addi	r3,r21,1
  80884c:	a02d883a 	mov	r22,r20
  808850:	b8c00005 	stb	r3,0(r23)
  808854:	00005806 	br	8089b8 <_dtoa_r+0x1214>
  808858:	d8c00617 	ldw	r3,24(sp)
  80885c:	bd400005 	stb	r21,0(r23)
  808860:	a02d883a 	mov	r22,r20
  808864:	b8c03026 	beq	r23,r3,808928 <_dtoa_r+0x1184>
  808868:	d9400317 	ldw	r5,12(sp)
  80886c:	000f883a 	mov	r7,zero
  808870:	01800284 	movi	r6,10
  808874:	8009883a 	mov	r4,r16
  808878:	08064b40 	call	8064b4 <__multadd>
  80887c:	d8800315 	stw	r2,12(sp)
  808880:	000f883a 	mov	r7,zero
  808884:	01800284 	movi	r6,10
  808888:	880b883a 	mov	r5,r17
  80888c:	8009883a 	mov	r4,r16
  808890:	8cc0041e 	bne	r17,r19,8088a4 <_dtoa_r+0x1100>
  808894:	08064b40 	call	8064b4 <__multadd>
  808898:	1023883a 	mov	r17,r2
  80889c:	1027883a 	mov	r19,r2
  8088a0:	00000806 	br	8088c4 <_dtoa_r+0x1120>
  8088a4:	08064b40 	call	8064b4 <__multadd>
  8088a8:	980b883a 	mov	r5,r19
  8088ac:	000f883a 	mov	r7,zero
  8088b0:	01800284 	movi	r6,10
  8088b4:	8009883a 	mov	r4,r16
  8088b8:	1023883a 	mov	r17,r2
  8088bc:	08064b40 	call	8064b4 <__multadd>
  8088c0:	1027883a 	mov	r19,r2
  8088c4:	a02f883a 	mov	r23,r20
  8088c8:	003f9906 	br	808730 <__alt_data_end+0xff808730>
  8088cc:	d9400317 	ldw	r5,12(sp)
  8088d0:	000f883a 	mov	r7,zero
  8088d4:	01800284 	movi	r6,10
  8088d8:	8009883a 	mov	r4,r16
  8088dc:	08064b40 	call	8064b4 <__multadd>
  8088e0:	d8800315 	stw	r2,12(sp)
  8088e4:	d9000317 	ldw	r4,12(sp)
  8088e8:	900b883a 	mov	r5,r18
  8088ec:	9cc00044 	addi	r19,r19,1
  8088f0:	08075b80 	call	8075b8 <quorem>
  8088f4:	d9000717 	ldw	r4,28(sp)
  8088f8:	15400c04 	addi	r21,r2,48
  8088fc:	d8c00517 	ldw	r3,20(sp)
  808900:	9d7fffc5 	stb	r21,-1(r19)
  808904:	9905c83a 	sub	r2,r19,r4
  808908:	10fff016 	blt	r2,r3,8088cc <__alt_data_end+0xff8088cc>
  80890c:	182d883a 	mov	r22,r3
  808910:	00c00116 	blt	zero,r3,808918 <_dtoa_r+0x1174>
  808914:	05800044 	movi	r22,1
  808918:	d9000717 	ldw	r4,28(sp)
  80891c:	8827883a 	mov	r19,r17
  808920:	0023883a 	mov	r17,zero
  808924:	25ad883a 	add	r22,r4,r22
  808928:	d9400317 	ldw	r5,12(sp)
  80892c:	8009883a 	mov	r4,r16
  808930:	01800044 	movi	r6,1
  808934:	0806b180 	call	806b18 <__lshift>
  808938:	900b883a 	mov	r5,r18
  80893c:	1009883a 	mov	r4,r2
  808940:	d8800315 	stw	r2,12(sp)
  808944:	0806c600 	call	806c60 <__mcmp>
  808948:	00800316 	blt	zero,r2,808958 <_dtoa_r+0x11b4>
  80894c:	1000141e 	bne	r2,zero,8089a0 <_dtoa_r+0x11fc>
  808950:	a8c0004c 	andi	r3,r21,1
  808954:	18001226 	beq	r3,zero,8089a0 <_dtoa_r+0x11fc>
  808958:	01000e44 	movi	r4,57
  80895c:	b0bfffc4 	addi	r2,r22,-1
  808960:	10c00003 	ldbu	r3,0(r2)
  808964:	19403fcc 	andi	r5,r3,255
  808968:	2940201c 	xori	r5,r5,128
  80896c:	297fe004 	addi	r5,r5,-128
  808970:	2900081e 	bne	r5,r4,808994 <_dtoa_r+0x11f0>
  808974:	d8c00717 	ldw	r3,28(sp)
  808978:	1880041e 	bne	r3,r2,80898c <_dtoa_r+0x11e8>
  80897c:	00800c44 	movi	r2,49
  808980:	e7000044 	addi	fp,fp,1
  808984:	18800005 	stb	r2,0(r3)
  808988:	00000b06 	br	8089b8 <_dtoa_r+0x1214>
  80898c:	102d883a 	mov	r22,r2
  808990:	003ff206 	br	80895c <__alt_data_end+0xff80895c>
  808994:	18c00044 	addi	r3,r3,1
  808998:	10c00005 	stb	r3,0(r2)
  80899c:	00000606 	br	8089b8 <_dtoa_r+0x1214>
  8089a0:	00c00c04 	movi	r3,48
  8089a4:	b0bfffc4 	addi	r2,r22,-1
  8089a8:	11000007 	ldb	r4,0(r2)
  8089ac:	20c0021e 	bne	r4,r3,8089b8 <_dtoa_r+0x1214>
  8089b0:	102d883a 	mov	r22,r2
  8089b4:	003ffb06 	br	8089a4 <__alt_data_end+0xff8089a4>
  8089b8:	900b883a 	mov	r5,r18
  8089bc:	8009883a 	mov	r4,r16
  8089c0:	080643c0 	call	80643c <_Bfree>
  8089c4:	98000a26 	beq	r19,zero,8089f0 <_dtoa_r+0x124c>
  8089c8:	88000426 	beq	r17,zero,8089dc <_dtoa_r+0x1238>
  8089cc:	8cc00326 	beq	r17,r19,8089dc <_dtoa_r+0x1238>
  8089d0:	880b883a 	mov	r5,r17
  8089d4:	8009883a 	mov	r4,r16
  8089d8:	080643c0 	call	80643c <_Bfree>
  8089dc:	980b883a 	mov	r5,r19
  8089e0:	8009883a 	mov	r4,r16
  8089e4:	080643c0 	call	80643c <_Bfree>
  8089e8:	00000106 	br	8089f0 <_dtoa_r+0x124c>
  8089ec:	a839883a 	mov	fp,r21
  8089f0:	d9400317 	ldw	r5,12(sp)
  8089f4:	8009883a 	mov	r4,r16
  8089f8:	080643c0 	call	80643c <_Bfree>
  8089fc:	d9002117 	ldw	r4,132(sp)
  808a00:	e0800044 	addi	r2,fp,1
  808a04:	b0000005 	stb	zero,0(r22)
  808a08:	20800015 	stw	r2,0(r4)
  808a0c:	d8802317 	ldw	r2,140(sp)
  808a10:	10000526 	beq	r2,zero,808a28 <_dtoa_r+0x1284>
  808a14:	15800015 	stw	r22,0(r2)
  808a18:	00000306 	br	808a28 <_dtoa_r+0x1284>
  808a1c:	00802074 	movhi	r2,129
  808a20:	10aca104 	addi	r2,r2,-19836
  808a24:	00001106 	br	808a6c <_dtoa_r+0x12c8>
  808a28:	d8800717 	ldw	r2,28(sp)
  808a2c:	00000f06 	br	808a6c <_dtoa_r+0x12c8>
  808a30:	d8c00817 	ldw	r3,32(sp)
  808a34:	a8fe990e 	bge	r21,r3,80849c <__alt_data_end+0xff80849c>
  808a38:	0027883a 	mov	r19,zero
  808a3c:	a805883a 	mov	r2,r21
  808a40:	003eb406 	br	808514 <__alt_data_end+0xff808514>
  808a44:	d9000517 	ldw	r4,20(sp)
  808a48:	013f1416 	blt	zero,r4,80869c <__alt_data_end+0xff80869c>
  808a4c:	d8c00817 	ldw	r3,32(sp)
  808a50:	00800084 	movi	r2,2
  808a54:	10ff110e 	bge	r2,r3,80869c <__alt_data_end+0xff80869c>
  808a58:	003eee06 	br	808614 <__alt_data_end+0xff808614>
  808a5c:	d9000817 	ldw	r4,32(sp)
  808a60:	00800084 	movi	r2,2
  808a64:	113f110e 	bge	r2,r4,8086ac <__alt_data_end+0xff8086ac>
  808a68:	003eea06 	br	808614 <__alt_data_end+0xff808614>
  808a6c:	dfc01f17 	ldw	ra,124(sp)
  808a70:	df001e17 	ldw	fp,120(sp)
  808a74:	ddc01d17 	ldw	r23,116(sp)
  808a78:	dd801c17 	ldw	r22,112(sp)
  808a7c:	dd401b17 	ldw	r21,108(sp)
  808a80:	dd001a17 	ldw	r20,104(sp)
  808a84:	dcc01917 	ldw	r19,100(sp)
  808a88:	dc801817 	ldw	r18,96(sp)
  808a8c:	dc401717 	ldw	r17,92(sp)
  808a90:	dc001617 	ldw	r16,88(sp)
  808a94:	dec02004 	addi	sp,sp,128
  808a98:	f800283a 	ret

00808a9c <malloc>:
  808a9c:	00802074 	movhi	r2,129
  808aa0:	10ad5b04 	addi	r2,r2,-19092
  808aa4:	200b883a 	mov	r5,r4
  808aa8:	11000017 	ldw	r4,0(r2)
  808aac:	08072e81 	jmpi	8072e8 <_malloc_r>

00808ab0 <free>:
  808ab0:	00802074 	movhi	r2,129
  808ab4:	10ad5b04 	addi	r2,r2,-19092
  808ab8:	200b883a 	mov	r5,r4
  808abc:	11000017 	ldw	r4,0(r2)
  808ac0:	0808b0c1 	jmpi	808b0c <_free_r>

00808ac4 <memcpy>:
  808ac4:	2005883a 	mov	r2,r4
  808ac8:	2007883a 	mov	r3,r4
  808acc:	218d883a 	add	r6,r4,r6
  808ad0:	19800526 	beq	r3,r6,808ae8 <memcpy+0x24>
  808ad4:	29000003 	ldbu	r4,0(r5)
  808ad8:	18c00044 	addi	r3,r3,1
  808adc:	29400044 	addi	r5,r5,1
  808ae0:	193fffc5 	stb	r4,-1(r3)
  808ae4:	003ffa06 	br	808ad0 <__alt_data_end+0xff808ad0>
  808ae8:	f800283a 	ret

00808aec <memset>:
  808aec:	2005883a 	mov	r2,r4
  808af0:	2007883a 	mov	r3,r4
  808af4:	218d883a 	add	r6,r4,r6
  808af8:	19800326 	beq	r3,r6,808b08 <memset+0x1c>
  808afc:	19400005 	stb	r5,0(r3)
  808b00:	18c00044 	addi	r3,r3,1
  808b04:	003ffc06 	br	808af8 <__alt_data_end+0xff808af8>
  808b08:	f800283a 	ret

00808b0c <_free_r>:
  808b0c:	28003726 	beq	r5,zero,808bec <_free_r+0xe0>
  808b10:	28ffff17 	ldw	r3,-4(r5)
  808b14:	28bfff04 	addi	r2,r5,-4
  808b18:	1800010e 	bge	r3,zero,808b20 <_free_r+0x14>
  808b1c:	10c5883a 	add	r2,r2,r3
  808b20:	01402074 	movhi	r5,129
  808b24:	296e2004 	addi	r5,r5,-18304
  808b28:	28c00017 	ldw	r3,0(r5)
  808b2c:	280d883a 	mov	r6,r5
  808b30:	1800031e 	bne	r3,zero,808b40 <_free_r+0x34>
  808b34:	10000115 	stw	zero,4(r2)
  808b38:	28800015 	stw	r2,0(r5)
  808b3c:	f800283a 	ret
  808b40:	10c00c2e 	bgeu	r2,r3,808b74 <_free_r+0x68>
  808b44:	11000017 	ldw	r4,0(r2)
  808b48:	110b883a 	add	r5,r2,r4
  808b4c:	1940041e 	bne	r3,r5,808b60 <_free_r+0x54>
  808b50:	19400017 	ldw	r5,0(r3)
  808b54:	18c00117 	ldw	r3,4(r3)
  808b58:	2909883a 	add	r4,r5,r4
  808b5c:	11000015 	stw	r4,0(r2)
  808b60:	10c00115 	stw	r3,4(r2)
  808b64:	30800015 	stw	r2,0(r6)
  808b68:	f800283a 	ret
  808b6c:	11400336 	bltu	r2,r5,808b7c <_free_r+0x70>
  808b70:	2807883a 	mov	r3,r5
  808b74:	19400117 	ldw	r5,4(r3)
  808b78:	283ffc1e 	bne	r5,zero,808b6c <__alt_data_end+0xff808b6c>
  808b7c:	19c00017 	ldw	r7,0(r3)
  808b80:	19cd883a 	add	r6,r3,r7
  808b84:	30800a1e 	bne	r6,r2,808bb0 <_free_r+0xa4>
  808b88:	10800017 	ldw	r2,0(r2)
  808b8c:	3885883a 	add	r2,r7,r2
  808b90:	18800015 	stw	r2,0(r3)
  808b94:	1889883a 	add	r4,r3,r2
  808b98:	2900141e 	bne	r5,r4,808bec <_free_r+0xe0>
  808b9c:	29000017 	ldw	r4,0(r5)
  808ba0:	2085883a 	add	r2,r4,r2
  808ba4:	18800015 	stw	r2,0(r3)
  808ba8:	28800117 	ldw	r2,4(r5)
  808bac:	00000e06 	br	808be8 <_free_r+0xdc>
  808bb0:	1180032e 	bgeu	r2,r6,808bc0 <_free_r+0xb4>
  808bb4:	00800304 	movi	r2,12
  808bb8:	20800015 	stw	r2,0(r4)
  808bbc:	f800283a 	ret
  808bc0:	11000017 	ldw	r4,0(r2)
  808bc4:	110d883a 	add	r6,r2,r4
  808bc8:	2980061e 	bne	r5,r6,808be4 <_free_r+0xd8>
  808bcc:	29800017 	ldw	r6,0(r5)
  808bd0:	3109883a 	add	r4,r6,r4
  808bd4:	11000015 	stw	r4,0(r2)
  808bd8:	29000117 	ldw	r4,4(r5)
  808bdc:	11000115 	stw	r4,4(r2)
  808be0:	00000106 	br	808be8 <_free_r+0xdc>
  808be4:	11400115 	stw	r5,4(r2)
  808be8:	18800115 	stw	r2,4(r3)
  808bec:	f800283a 	ret

00808bf0 <_malloc_usable_size_r>:
  808bf0:	28bfff17 	ldw	r2,-4(r5)
  808bf4:	1000030e 	bge	r2,zero,808c04 <_malloc_usable_size_r+0x14>
  808bf8:	288b883a 	add	r5,r5,r2
  808bfc:	28ffff17 	ldw	r3,-4(r5)
  808c00:	10c5883a 	add	r2,r2,r3
  808c04:	10bfff04 	addi	r2,r2,-4
  808c08:	f800283a 	ret

00808c0c <__divdf3>:
  808c0c:	defff204 	addi	sp,sp,-56
  808c10:	dd400915 	stw	r21,36(sp)
  808c14:	282ad53a 	srli	r21,r5,20
  808c18:	dd000815 	stw	r20,32(sp)
  808c1c:	2828d7fa 	srli	r20,r5,31
  808c20:	dc000415 	stw	r16,16(sp)
  808c24:	04000434 	movhi	r16,16
  808c28:	df000c15 	stw	fp,48(sp)
  808c2c:	843fffc4 	addi	r16,r16,-1
  808c30:	dfc00d15 	stw	ra,52(sp)
  808c34:	ddc00b15 	stw	r23,44(sp)
  808c38:	dd800a15 	stw	r22,40(sp)
  808c3c:	dcc00715 	stw	r19,28(sp)
  808c40:	dc800615 	stw	r18,24(sp)
  808c44:	dc400515 	stw	r17,20(sp)
  808c48:	ad41ffcc 	andi	r21,r21,2047
  808c4c:	2c20703a 	and	r16,r5,r16
  808c50:	a7003fcc 	andi	fp,r20,255
  808c54:	a8006126 	beq	r21,zero,808ddc <__divdf3+0x1d0>
  808c58:	0081ffc4 	movi	r2,2047
  808c5c:	2025883a 	mov	r18,r4
  808c60:	a8803726 	beq	r21,r2,808d40 <__divdf3+0x134>
  808c64:	80800434 	orhi	r2,r16,16
  808c68:	100490fa 	slli	r2,r2,3
  808c6c:	2020d77a 	srli	r16,r4,29
  808c70:	202490fa 	slli	r18,r4,3
  808c74:	ad7f0044 	addi	r21,r21,-1023
  808c78:	80a0b03a 	or	r16,r16,r2
  808c7c:	0027883a 	mov	r19,zero
  808c80:	0013883a 	mov	r9,zero
  808c84:	3804d53a 	srli	r2,r7,20
  808c88:	382cd7fa 	srli	r22,r7,31
  808c8c:	04400434 	movhi	r17,16
  808c90:	8c7fffc4 	addi	r17,r17,-1
  808c94:	1081ffcc 	andi	r2,r2,2047
  808c98:	3011883a 	mov	r8,r6
  808c9c:	3c62703a 	and	r17,r7,r17
  808ca0:	b5c03fcc 	andi	r23,r22,255
  808ca4:	10006c26 	beq	r2,zero,808e58 <__divdf3+0x24c>
  808ca8:	00c1ffc4 	movi	r3,2047
  808cac:	10c06426 	beq	r2,r3,808e40 <__divdf3+0x234>
  808cb0:	88c00434 	orhi	r3,r17,16
  808cb4:	180690fa 	slli	r3,r3,3
  808cb8:	3022d77a 	srli	r17,r6,29
  808cbc:	301090fa 	slli	r8,r6,3
  808cc0:	10bf0044 	addi	r2,r2,-1023
  808cc4:	88e2b03a 	or	r17,r17,r3
  808cc8:	000f883a 	mov	r7,zero
  808ccc:	a58cf03a 	xor	r6,r20,r22
  808cd0:	3cc8b03a 	or	r4,r7,r19
  808cd4:	a8abc83a 	sub	r21,r21,r2
  808cd8:	008003c4 	movi	r2,15
  808cdc:	3007883a 	mov	r3,r6
  808ce0:	34c03fcc 	andi	r19,r6,255
  808ce4:	11009036 	bltu	r2,r4,808f28 <__divdf3+0x31c>
  808ce8:	200890ba 	slli	r4,r4,2
  808cec:	00802074 	movhi	r2,129
  808cf0:	10a34004 	addi	r2,r2,-29440
  808cf4:	2089883a 	add	r4,r4,r2
  808cf8:	20800017 	ldw	r2,0(r4)
  808cfc:	1000683a 	jmp	r2
  808d00:	00808f28 	cmpgeui	r2,zero,572
  808d04:	00808d78 	rdprs	r2,zero,565
  808d08:	00808f18 	cmpnei	r2,zero,572
  808d0c:	00808d6c 	andhi	r2,zero,565
  808d10:	00808f18 	cmpnei	r2,zero,572
  808d14:	00808eec 	andhi	r2,zero,571
  808d18:	00808f18 	cmpnei	r2,zero,572
  808d1c:	00808d6c 	andhi	r2,zero,565
  808d20:	00808d78 	rdprs	r2,zero,565
  808d24:	00808d78 	rdprs	r2,zero,565
  808d28:	00808eec 	andhi	r2,zero,571
  808d2c:	00808d6c 	andhi	r2,zero,565
  808d30:	00808d5c 	xori	r2,zero,565
  808d34:	00808d5c 	xori	r2,zero,565
  808d38:	00808d5c 	xori	r2,zero,565
  808d3c:	0080920c 	andi	r2,zero,584
  808d40:	2404b03a 	or	r2,r4,r16
  808d44:	1000661e 	bne	r2,zero,808ee0 <__divdf3+0x2d4>
  808d48:	04c00204 	movi	r19,8
  808d4c:	0021883a 	mov	r16,zero
  808d50:	0025883a 	mov	r18,zero
  808d54:	02400084 	movi	r9,2
  808d58:	003fca06 	br	808c84 <__alt_data_end+0xff808c84>
  808d5c:	8023883a 	mov	r17,r16
  808d60:	9011883a 	mov	r8,r18
  808d64:	e02f883a 	mov	r23,fp
  808d68:	480f883a 	mov	r7,r9
  808d6c:	00800084 	movi	r2,2
  808d70:	3881311e 	bne	r7,r2,809238 <__divdf3+0x62c>
  808d74:	b827883a 	mov	r19,r23
  808d78:	98c0004c 	andi	r3,r19,1
  808d7c:	0081ffc4 	movi	r2,2047
  808d80:	000b883a 	mov	r5,zero
  808d84:	0025883a 	mov	r18,zero
  808d88:	1004953a 	slli	r2,r2,20
  808d8c:	18c03fcc 	andi	r3,r3,255
  808d90:	04400434 	movhi	r17,16
  808d94:	8c7fffc4 	addi	r17,r17,-1
  808d98:	180697fa 	slli	r3,r3,31
  808d9c:	2c4a703a 	and	r5,r5,r17
  808da0:	288ab03a 	or	r5,r5,r2
  808da4:	28c6b03a 	or	r3,r5,r3
  808da8:	9005883a 	mov	r2,r18
  808dac:	dfc00d17 	ldw	ra,52(sp)
  808db0:	df000c17 	ldw	fp,48(sp)
  808db4:	ddc00b17 	ldw	r23,44(sp)
  808db8:	dd800a17 	ldw	r22,40(sp)
  808dbc:	dd400917 	ldw	r21,36(sp)
  808dc0:	dd000817 	ldw	r20,32(sp)
  808dc4:	dcc00717 	ldw	r19,28(sp)
  808dc8:	dc800617 	ldw	r18,24(sp)
  808dcc:	dc400517 	ldw	r17,20(sp)
  808dd0:	dc000417 	ldw	r16,16(sp)
  808dd4:	dec00e04 	addi	sp,sp,56
  808dd8:	f800283a 	ret
  808ddc:	2404b03a 	or	r2,r4,r16
  808de0:	2027883a 	mov	r19,r4
  808de4:	10003926 	beq	r2,zero,808ecc <__divdf3+0x2c0>
  808de8:	80012e26 	beq	r16,zero,8092a4 <__divdf3+0x698>
  808dec:	8009883a 	mov	r4,r16
  808df0:	d9800315 	stw	r6,12(sp)
  808df4:	d9c00215 	stw	r7,8(sp)
  808df8:	08056100 	call	805610 <__clzsi2>
  808dfc:	d9800317 	ldw	r6,12(sp)
  808e00:	d9c00217 	ldw	r7,8(sp)
  808e04:	113ffd44 	addi	r4,r2,-11
  808e08:	00c00704 	movi	r3,28
  808e0c:	19012116 	blt	r3,r4,809294 <__divdf3+0x688>
  808e10:	00c00744 	movi	r3,29
  808e14:	147ffe04 	addi	r17,r2,-8
  808e18:	1907c83a 	sub	r3,r3,r4
  808e1c:	8460983a 	sll	r16,r16,r17
  808e20:	98c6d83a 	srl	r3,r19,r3
  808e24:	9c64983a 	sll	r18,r19,r17
  808e28:	1c20b03a 	or	r16,r3,r16
  808e2c:	1080fcc4 	addi	r2,r2,1011
  808e30:	00abc83a 	sub	r21,zero,r2
  808e34:	0027883a 	mov	r19,zero
  808e38:	0013883a 	mov	r9,zero
  808e3c:	003f9106 	br	808c84 <__alt_data_end+0xff808c84>
  808e40:	3446b03a 	or	r3,r6,r17
  808e44:	18001f1e 	bne	r3,zero,808ec4 <__divdf3+0x2b8>
  808e48:	0023883a 	mov	r17,zero
  808e4c:	0011883a 	mov	r8,zero
  808e50:	01c00084 	movi	r7,2
  808e54:	003f9d06 	br	808ccc <__alt_data_end+0xff808ccc>
  808e58:	3446b03a 	or	r3,r6,r17
  808e5c:	18001526 	beq	r3,zero,808eb4 <__divdf3+0x2a8>
  808e60:	88011b26 	beq	r17,zero,8092d0 <__divdf3+0x6c4>
  808e64:	8809883a 	mov	r4,r17
  808e68:	d9800315 	stw	r6,12(sp)
  808e6c:	da400115 	stw	r9,4(sp)
  808e70:	08056100 	call	805610 <__clzsi2>
  808e74:	d9800317 	ldw	r6,12(sp)
  808e78:	da400117 	ldw	r9,4(sp)
  808e7c:	113ffd44 	addi	r4,r2,-11
  808e80:	00c00704 	movi	r3,28
  808e84:	19010e16 	blt	r3,r4,8092c0 <__divdf3+0x6b4>
  808e88:	00c00744 	movi	r3,29
  808e8c:	123ffe04 	addi	r8,r2,-8
  808e90:	1907c83a 	sub	r3,r3,r4
  808e94:	8a22983a 	sll	r17,r17,r8
  808e98:	30c6d83a 	srl	r3,r6,r3
  808e9c:	3210983a 	sll	r8,r6,r8
  808ea0:	1c62b03a 	or	r17,r3,r17
  808ea4:	1080fcc4 	addi	r2,r2,1011
  808ea8:	0085c83a 	sub	r2,zero,r2
  808eac:	000f883a 	mov	r7,zero
  808eb0:	003f8606 	br	808ccc <__alt_data_end+0xff808ccc>
  808eb4:	0023883a 	mov	r17,zero
  808eb8:	0011883a 	mov	r8,zero
  808ebc:	01c00044 	movi	r7,1
  808ec0:	003f8206 	br	808ccc <__alt_data_end+0xff808ccc>
  808ec4:	01c000c4 	movi	r7,3
  808ec8:	003f8006 	br	808ccc <__alt_data_end+0xff808ccc>
  808ecc:	04c00104 	movi	r19,4
  808ed0:	0021883a 	mov	r16,zero
  808ed4:	0025883a 	mov	r18,zero
  808ed8:	02400044 	movi	r9,1
  808edc:	003f6906 	br	808c84 <__alt_data_end+0xff808c84>
  808ee0:	04c00304 	movi	r19,12
  808ee4:	024000c4 	movi	r9,3
  808ee8:	003f6606 	br	808c84 <__alt_data_end+0xff808c84>
  808eec:	01400434 	movhi	r5,16
  808ef0:	0007883a 	mov	r3,zero
  808ef4:	297fffc4 	addi	r5,r5,-1
  808ef8:	04bfffc4 	movi	r18,-1
  808efc:	0081ffc4 	movi	r2,2047
  808f00:	003fa106 	br	808d88 <__alt_data_end+0xff808d88>
  808f04:	00c00044 	movi	r3,1
  808f08:	1887c83a 	sub	r3,r3,r2
  808f0c:	01000e04 	movi	r4,56
  808f10:	20c1210e 	bge	r4,r3,809398 <__divdf3+0x78c>
  808f14:	98c0004c 	andi	r3,r19,1
  808f18:	0005883a 	mov	r2,zero
  808f1c:	000b883a 	mov	r5,zero
  808f20:	0025883a 	mov	r18,zero
  808f24:	003f9806 	br	808d88 <__alt_data_end+0xff808d88>
  808f28:	8c00fd36 	bltu	r17,r16,809320 <__divdf3+0x714>
  808f2c:	8440fb26 	beq	r16,r17,80931c <__divdf3+0x710>
  808f30:	8007883a 	mov	r3,r16
  808f34:	ad7fffc4 	addi	r21,r21,-1
  808f38:	0021883a 	mov	r16,zero
  808f3c:	4004d63a 	srli	r2,r8,24
  808f40:	8822923a 	slli	r17,r17,8
  808f44:	1809883a 	mov	r4,r3
  808f48:	402c923a 	slli	r22,r8,8
  808f4c:	88b8b03a 	or	fp,r17,r2
  808f50:	e028d43a 	srli	r20,fp,16
  808f54:	d8c00015 	stw	r3,0(sp)
  808f58:	e5ffffcc 	andi	r23,fp,65535
  808f5c:	a00b883a 	mov	r5,r20
  808f60:	08027f40 	call	8027f4 <__udivsi3>
  808f64:	d8c00017 	ldw	r3,0(sp)
  808f68:	a00b883a 	mov	r5,r20
  808f6c:	d8800315 	stw	r2,12(sp)
  808f70:	1809883a 	mov	r4,r3
  808f74:	08028580 	call	802858 <__umodsi3>
  808f78:	d9800317 	ldw	r6,12(sp)
  808f7c:	1006943a 	slli	r3,r2,16
  808f80:	9004d43a 	srli	r2,r18,16
  808f84:	b9a3383a 	mul	r17,r23,r6
  808f88:	10c4b03a 	or	r2,r2,r3
  808f8c:	1440062e 	bgeu	r2,r17,808fa8 <__divdf3+0x39c>
  808f90:	1705883a 	add	r2,r2,fp
  808f94:	30ffffc4 	addi	r3,r6,-1
  808f98:	1700ee36 	bltu	r2,fp,809354 <__divdf3+0x748>
  808f9c:	1440ed2e 	bgeu	r2,r17,809354 <__divdf3+0x748>
  808fa0:	31bfff84 	addi	r6,r6,-2
  808fa4:	1705883a 	add	r2,r2,fp
  808fa8:	1463c83a 	sub	r17,r2,r17
  808fac:	a00b883a 	mov	r5,r20
  808fb0:	8809883a 	mov	r4,r17
  808fb4:	d9800315 	stw	r6,12(sp)
  808fb8:	08027f40 	call	8027f4 <__udivsi3>
  808fbc:	a00b883a 	mov	r5,r20
  808fc0:	8809883a 	mov	r4,r17
  808fc4:	d8800215 	stw	r2,8(sp)
  808fc8:	08028580 	call	802858 <__umodsi3>
  808fcc:	d9c00217 	ldw	r7,8(sp)
  808fd0:	1004943a 	slli	r2,r2,16
  808fd4:	94bfffcc 	andi	r18,r18,65535
  808fd8:	b9d1383a 	mul	r8,r23,r7
  808fdc:	90a4b03a 	or	r18,r18,r2
  808fe0:	d9800317 	ldw	r6,12(sp)
  808fe4:	9200062e 	bgeu	r18,r8,809000 <__divdf3+0x3f4>
  808fe8:	9725883a 	add	r18,r18,fp
  808fec:	38bfffc4 	addi	r2,r7,-1
  808ff0:	9700d636 	bltu	r18,fp,80934c <__divdf3+0x740>
  808ff4:	9200d52e 	bgeu	r18,r8,80934c <__divdf3+0x740>
  808ff8:	39ffff84 	addi	r7,r7,-2
  808ffc:	9725883a 	add	r18,r18,fp
  809000:	3004943a 	slli	r2,r6,16
  809004:	b012d43a 	srli	r9,r22,16
  809008:	b1bfffcc 	andi	r6,r22,65535
  80900c:	11e2b03a 	or	r17,r2,r7
  809010:	8806d43a 	srli	r3,r17,16
  809014:	893fffcc 	andi	r4,r17,65535
  809018:	218b383a 	mul	r5,r4,r6
  80901c:	30c5383a 	mul	r2,r6,r3
  809020:	2249383a 	mul	r4,r4,r9
  809024:	280ed43a 	srli	r7,r5,16
  809028:	9225c83a 	sub	r18,r18,r8
  80902c:	2089883a 	add	r4,r4,r2
  809030:	3909883a 	add	r4,r7,r4
  809034:	1a47383a 	mul	r3,r3,r9
  809038:	2080022e 	bgeu	r4,r2,809044 <__divdf3+0x438>
  80903c:	00800074 	movhi	r2,1
  809040:	1887883a 	add	r3,r3,r2
  809044:	2004d43a 	srli	r2,r4,16
  809048:	2008943a 	slli	r4,r4,16
  80904c:	297fffcc 	andi	r5,r5,65535
  809050:	10c7883a 	add	r3,r2,r3
  809054:	2149883a 	add	r4,r4,r5
  809058:	90c0a536 	bltu	r18,r3,8092f0 <__divdf3+0x6e4>
  80905c:	90c0bf26 	beq	r18,r3,80935c <__divdf3+0x750>
  809060:	90c7c83a 	sub	r3,r18,r3
  809064:	810fc83a 	sub	r7,r16,r4
  809068:	81e5803a 	cmpltu	r18,r16,r7
  80906c:	1ca5c83a 	sub	r18,r3,r18
  809070:	e480c126 	beq	fp,r18,809378 <__divdf3+0x76c>
  809074:	a00b883a 	mov	r5,r20
  809078:	9009883a 	mov	r4,r18
  80907c:	d9800315 	stw	r6,12(sp)
  809080:	d9c00215 	stw	r7,8(sp)
  809084:	da400115 	stw	r9,4(sp)
  809088:	08027f40 	call	8027f4 <__udivsi3>
  80908c:	a00b883a 	mov	r5,r20
  809090:	9009883a 	mov	r4,r18
  809094:	d8800015 	stw	r2,0(sp)
  809098:	08028580 	call	802858 <__umodsi3>
  80909c:	d9c00217 	ldw	r7,8(sp)
  8090a0:	da000017 	ldw	r8,0(sp)
  8090a4:	1006943a 	slli	r3,r2,16
  8090a8:	3804d43a 	srli	r2,r7,16
  8090ac:	ba21383a 	mul	r16,r23,r8
  8090b0:	d9800317 	ldw	r6,12(sp)
  8090b4:	10c4b03a 	or	r2,r2,r3
  8090b8:	da400117 	ldw	r9,4(sp)
  8090bc:	1400062e 	bgeu	r2,r16,8090d8 <__divdf3+0x4cc>
  8090c0:	1705883a 	add	r2,r2,fp
  8090c4:	40ffffc4 	addi	r3,r8,-1
  8090c8:	1700ad36 	bltu	r2,fp,809380 <__divdf3+0x774>
  8090cc:	1400ac2e 	bgeu	r2,r16,809380 <__divdf3+0x774>
  8090d0:	423fff84 	addi	r8,r8,-2
  8090d4:	1705883a 	add	r2,r2,fp
  8090d8:	1421c83a 	sub	r16,r2,r16
  8090dc:	a00b883a 	mov	r5,r20
  8090e0:	8009883a 	mov	r4,r16
  8090e4:	d9800315 	stw	r6,12(sp)
  8090e8:	d9c00215 	stw	r7,8(sp)
  8090ec:	da000015 	stw	r8,0(sp)
  8090f0:	da400115 	stw	r9,4(sp)
  8090f4:	08027f40 	call	8027f4 <__udivsi3>
  8090f8:	8009883a 	mov	r4,r16
  8090fc:	a00b883a 	mov	r5,r20
  809100:	1025883a 	mov	r18,r2
  809104:	08028580 	call	802858 <__umodsi3>
  809108:	d9c00217 	ldw	r7,8(sp)
  80910c:	1004943a 	slli	r2,r2,16
  809110:	bcaf383a 	mul	r23,r23,r18
  809114:	393fffcc 	andi	r4,r7,65535
  809118:	2088b03a 	or	r4,r4,r2
  80911c:	d9800317 	ldw	r6,12(sp)
  809120:	da000017 	ldw	r8,0(sp)
  809124:	da400117 	ldw	r9,4(sp)
  809128:	25c0062e 	bgeu	r4,r23,809144 <__divdf3+0x538>
  80912c:	2709883a 	add	r4,r4,fp
  809130:	90bfffc4 	addi	r2,r18,-1
  809134:	27009436 	bltu	r4,fp,809388 <__divdf3+0x77c>
  809138:	25c0932e 	bgeu	r4,r23,809388 <__divdf3+0x77c>
  80913c:	94bfff84 	addi	r18,r18,-2
  809140:	2709883a 	add	r4,r4,fp
  809144:	4004943a 	slli	r2,r8,16
  809148:	25efc83a 	sub	r23,r4,r23
  80914c:	1490b03a 	or	r8,r2,r18
  809150:	4008d43a 	srli	r4,r8,16
  809154:	40ffffcc 	andi	r3,r8,65535
  809158:	30c5383a 	mul	r2,r6,r3
  80915c:	1a47383a 	mul	r3,r3,r9
  809160:	310d383a 	mul	r6,r6,r4
  809164:	100ad43a 	srli	r5,r2,16
  809168:	4913383a 	mul	r9,r9,r4
  80916c:	1987883a 	add	r3,r3,r6
  809170:	28c7883a 	add	r3,r5,r3
  809174:	1980022e 	bgeu	r3,r6,809180 <__divdf3+0x574>
  809178:	01000074 	movhi	r4,1
  80917c:	4913883a 	add	r9,r9,r4
  809180:	1808d43a 	srli	r4,r3,16
  809184:	1806943a 	slli	r3,r3,16
  809188:	10bfffcc 	andi	r2,r2,65535
  80918c:	2253883a 	add	r9,r4,r9
  809190:	1887883a 	add	r3,r3,r2
  809194:	ba403836 	bltu	r23,r9,809278 <__divdf3+0x66c>
  809198:	ba403626 	beq	r23,r9,809274 <__divdf3+0x668>
  80919c:	42000054 	ori	r8,r8,1
  8091a0:	a880ffc4 	addi	r2,r21,1023
  8091a4:	00bf570e 	bge	zero,r2,808f04 <__alt_data_end+0xff808f04>
  8091a8:	40c001cc 	andi	r3,r8,7
  8091ac:	18000726 	beq	r3,zero,8091cc <__divdf3+0x5c0>
  8091b0:	40c003cc 	andi	r3,r8,15
  8091b4:	01000104 	movi	r4,4
  8091b8:	19000426 	beq	r3,r4,8091cc <__divdf3+0x5c0>
  8091bc:	4107883a 	add	r3,r8,r4
  8091c0:	1a11803a 	cmpltu	r8,r3,r8
  8091c4:	8a23883a 	add	r17,r17,r8
  8091c8:	1811883a 	mov	r8,r3
  8091cc:	88c0402c 	andhi	r3,r17,256
  8091d0:	18000426 	beq	r3,zero,8091e4 <__divdf3+0x5d8>
  8091d4:	00ffc034 	movhi	r3,65280
  8091d8:	18ffffc4 	addi	r3,r3,-1
  8091dc:	a8810004 	addi	r2,r21,1024
  8091e0:	88e2703a 	and	r17,r17,r3
  8091e4:	00c1ff84 	movi	r3,2046
  8091e8:	18bee316 	blt	r3,r2,808d78 <__alt_data_end+0xff808d78>
  8091ec:	8824977a 	slli	r18,r17,29
  8091f0:	4010d0fa 	srli	r8,r8,3
  8091f4:	8822927a 	slli	r17,r17,9
  8091f8:	1081ffcc 	andi	r2,r2,2047
  8091fc:	9224b03a 	or	r18,r18,r8
  809200:	880ad33a 	srli	r5,r17,12
  809204:	98c0004c 	andi	r3,r19,1
  809208:	003edf06 	br	808d88 <__alt_data_end+0xff808d88>
  80920c:	8080022c 	andhi	r2,r16,8
  809210:	10001226 	beq	r2,zero,80925c <__divdf3+0x650>
  809214:	8880022c 	andhi	r2,r17,8
  809218:	1000101e 	bne	r2,zero,80925c <__divdf3+0x650>
  80921c:	00800434 	movhi	r2,16
  809220:	89400234 	orhi	r5,r17,8
  809224:	10bfffc4 	addi	r2,r2,-1
  809228:	b007883a 	mov	r3,r22
  80922c:	288a703a 	and	r5,r5,r2
  809230:	4025883a 	mov	r18,r8
  809234:	003f3106 	br	808efc <__alt_data_end+0xff808efc>
  809238:	008000c4 	movi	r2,3
  80923c:	3880a626 	beq	r7,r2,8094d8 <__divdf3+0x8cc>
  809240:	00800044 	movi	r2,1
  809244:	3880521e 	bne	r7,r2,809390 <__divdf3+0x784>
  809248:	b807883a 	mov	r3,r23
  80924c:	0005883a 	mov	r2,zero
  809250:	000b883a 	mov	r5,zero
  809254:	0025883a 	mov	r18,zero
  809258:	003ecb06 	br	808d88 <__alt_data_end+0xff808d88>
  80925c:	00800434 	movhi	r2,16
  809260:	81400234 	orhi	r5,r16,8
  809264:	10bfffc4 	addi	r2,r2,-1
  809268:	a007883a 	mov	r3,r20
  80926c:	288a703a 	and	r5,r5,r2
  809270:	003f2206 	br	808efc <__alt_data_end+0xff808efc>
  809274:	183fca26 	beq	r3,zero,8091a0 <__alt_data_end+0xff8091a0>
  809278:	e5ef883a 	add	r23,fp,r23
  80927c:	40bfffc4 	addi	r2,r8,-1
  809280:	bf00392e 	bgeu	r23,fp,809368 <__divdf3+0x75c>
  809284:	1011883a 	mov	r8,r2
  809288:	ba7fc41e 	bne	r23,r9,80919c <__alt_data_end+0xff80919c>
  80928c:	b0ffc31e 	bne	r22,r3,80919c <__alt_data_end+0xff80919c>
  809290:	003fc306 	br	8091a0 <__alt_data_end+0xff8091a0>
  809294:	143ff604 	addi	r16,r2,-40
  809298:	9c20983a 	sll	r16,r19,r16
  80929c:	0025883a 	mov	r18,zero
  8092a0:	003ee206 	br	808e2c <__alt_data_end+0xff808e2c>
  8092a4:	d9800315 	stw	r6,12(sp)
  8092a8:	d9c00215 	stw	r7,8(sp)
  8092ac:	08056100 	call	805610 <__clzsi2>
  8092b0:	10800804 	addi	r2,r2,32
  8092b4:	d9c00217 	ldw	r7,8(sp)
  8092b8:	d9800317 	ldw	r6,12(sp)
  8092bc:	003ed106 	br	808e04 <__alt_data_end+0xff808e04>
  8092c0:	147ff604 	addi	r17,r2,-40
  8092c4:	3462983a 	sll	r17,r6,r17
  8092c8:	0011883a 	mov	r8,zero
  8092cc:	003ef506 	br	808ea4 <__alt_data_end+0xff808ea4>
  8092d0:	3009883a 	mov	r4,r6
  8092d4:	d9800315 	stw	r6,12(sp)
  8092d8:	da400115 	stw	r9,4(sp)
  8092dc:	08056100 	call	805610 <__clzsi2>
  8092e0:	10800804 	addi	r2,r2,32
  8092e4:	da400117 	ldw	r9,4(sp)
  8092e8:	d9800317 	ldw	r6,12(sp)
  8092ec:	003ee306 	br	808e7c <__alt_data_end+0xff808e7c>
  8092f0:	85a1883a 	add	r16,r16,r22
  8092f4:	8585803a 	cmpltu	r2,r16,r22
  8092f8:	1705883a 	add	r2,r2,fp
  8092fc:	14a5883a 	add	r18,r2,r18
  809300:	88bfffc4 	addi	r2,r17,-1
  809304:	e4800c2e 	bgeu	fp,r18,809338 <__divdf3+0x72c>
  809308:	90c03e36 	bltu	r18,r3,809404 <__divdf3+0x7f8>
  80930c:	1c806926 	beq	r3,r18,8094b4 <__divdf3+0x8a8>
  809310:	90c7c83a 	sub	r3,r18,r3
  809314:	1023883a 	mov	r17,r2
  809318:	003f5206 	br	809064 <__alt_data_end+0xff809064>
  80931c:	923f0436 	bltu	r18,r8,808f30 <__alt_data_end+0xff808f30>
  809320:	800897fa 	slli	r4,r16,31
  809324:	9004d07a 	srli	r2,r18,1
  809328:	8006d07a 	srli	r3,r16,1
  80932c:	902097fa 	slli	r16,r18,31
  809330:	20a4b03a 	or	r18,r4,r2
  809334:	003f0106 	br	808f3c <__alt_data_end+0xff808f3c>
  809338:	e4bff51e 	bne	fp,r18,809310 <__alt_data_end+0xff809310>
  80933c:	85bff22e 	bgeu	r16,r22,809308 <__alt_data_end+0xff809308>
  809340:	e0c7c83a 	sub	r3,fp,r3
  809344:	1023883a 	mov	r17,r2
  809348:	003f4606 	br	809064 <__alt_data_end+0xff809064>
  80934c:	100f883a 	mov	r7,r2
  809350:	003f2b06 	br	809000 <__alt_data_end+0xff809000>
  809354:	180d883a 	mov	r6,r3
  809358:	003f1306 	br	808fa8 <__alt_data_end+0xff808fa8>
  80935c:	813fe436 	bltu	r16,r4,8092f0 <__alt_data_end+0xff8092f0>
  809360:	0007883a 	mov	r3,zero
  809364:	003f3f06 	br	809064 <__alt_data_end+0xff809064>
  809368:	ba402c36 	bltu	r23,r9,80941c <__divdf3+0x810>
  80936c:	4dc05426 	beq	r9,r23,8094c0 <__divdf3+0x8b4>
  809370:	1011883a 	mov	r8,r2
  809374:	003f8906 	br	80919c <__alt_data_end+0xff80919c>
  809378:	023fffc4 	movi	r8,-1
  80937c:	003f8806 	br	8091a0 <__alt_data_end+0xff8091a0>
  809380:	1811883a 	mov	r8,r3
  809384:	003f5406 	br	8090d8 <__alt_data_end+0xff8090d8>
  809388:	1025883a 	mov	r18,r2
  80938c:	003f6d06 	br	809144 <__alt_data_end+0xff809144>
  809390:	b827883a 	mov	r19,r23
  809394:	003f8206 	br	8091a0 <__alt_data_end+0xff8091a0>
  809398:	010007c4 	movi	r4,31
  80939c:	20c02616 	blt	r4,r3,809438 <__divdf3+0x82c>
  8093a0:	00800804 	movi	r2,32
  8093a4:	10c5c83a 	sub	r2,r2,r3
  8093a8:	888a983a 	sll	r5,r17,r2
  8093ac:	40c8d83a 	srl	r4,r8,r3
  8093b0:	4084983a 	sll	r2,r8,r2
  8093b4:	88e2d83a 	srl	r17,r17,r3
  8093b8:	2906b03a 	or	r3,r5,r4
  8093bc:	1004c03a 	cmpne	r2,r2,zero
  8093c0:	1886b03a 	or	r3,r3,r2
  8093c4:	188001cc 	andi	r2,r3,7
  8093c8:	10000726 	beq	r2,zero,8093e8 <__divdf3+0x7dc>
  8093cc:	188003cc 	andi	r2,r3,15
  8093d0:	01000104 	movi	r4,4
  8093d4:	11000426 	beq	r2,r4,8093e8 <__divdf3+0x7dc>
  8093d8:	1805883a 	mov	r2,r3
  8093dc:	10c00104 	addi	r3,r2,4
  8093e0:	1885803a 	cmpltu	r2,r3,r2
  8093e4:	88a3883a 	add	r17,r17,r2
  8093e8:	8880202c 	andhi	r2,r17,128
  8093ec:	10002726 	beq	r2,zero,80948c <__divdf3+0x880>
  8093f0:	98c0004c 	andi	r3,r19,1
  8093f4:	00800044 	movi	r2,1
  8093f8:	000b883a 	mov	r5,zero
  8093fc:	0025883a 	mov	r18,zero
  809400:	003e6106 	br	808d88 <__alt_data_end+0xff808d88>
  809404:	85a1883a 	add	r16,r16,r22
  809408:	8585803a 	cmpltu	r2,r16,r22
  80940c:	1705883a 	add	r2,r2,fp
  809410:	14a5883a 	add	r18,r2,r18
  809414:	8c7fff84 	addi	r17,r17,-2
  809418:	003f1106 	br	809060 <__alt_data_end+0xff809060>
  80941c:	b589883a 	add	r4,r22,r22
  809420:	25ad803a 	cmpltu	r22,r4,r22
  809424:	b739883a 	add	fp,r22,fp
  809428:	40bfff84 	addi	r2,r8,-2
  80942c:	bf2f883a 	add	r23,r23,fp
  809430:	202d883a 	mov	r22,r4
  809434:	003f9306 	br	809284 <__alt_data_end+0xff809284>
  809438:	013ff844 	movi	r4,-31
  80943c:	2085c83a 	sub	r2,r4,r2
  809440:	8888d83a 	srl	r4,r17,r2
  809444:	00800804 	movi	r2,32
  809448:	18802126 	beq	r3,r2,8094d0 <__divdf3+0x8c4>
  80944c:	00801004 	movi	r2,64
  809450:	10c5c83a 	sub	r2,r2,r3
  809454:	8884983a 	sll	r2,r17,r2
  809458:	1204b03a 	or	r2,r2,r8
  80945c:	1004c03a 	cmpne	r2,r2,zero
  809460:	2084b03a 	or	r2,r4,r2
  809464:	144001cc 	andi	r17,r2,7
  809468:	88000d1e 	bne	r17,zero,8094a0 <__divdf3+0x894>
  80946c:	000b883a 	mov	r5,zero
  809470:	1024d0fa 	srli	r18,r2,3
  809474:	98c0004c 	andi	r3,r19,1
  809478:	0005883a 	mov	r2,zero
  80947c:	9464b03a 	or	r18,r18,r17
  809480:	003e4106 	br	808d88 <__alt_data_end+0xff808d88>
  809484:	1007883a 	mov	r3,r2
  809488:	0023883a 	mov	r17,zero
  80948c:	880a927a 	slli	r5,r17,9
  809490:	1805883a 	mov	r2,r3
  809494:	8822977a 	slli	r17,r17,29
  809498:	280ad33a 	srli	r5,r5,12
  80949c:	003ff406 	br	809470 <__alt_data_end+0xff809470>
  8094a0:	10c003cc 	andi	r3,r2,15
  8094a4:	01000104 	movi	r4,4
  8094a8:	193ff626 	beq	r3,r4,809484 <__alt_data_end+0xff809484>
  8094ac:	0023883a 	mov	r17,zero
  8094b0:	003fca06 	br	8093dc <__alt_data_end+0xff8093dc>
  8094b4:	813fd336 	bltu	r16,r4,809404 <__alt_data_end+0xff809404>
  8094b8:	1023883a 	mov	r17,r2
  8094bc:	003fa806 	br	809360 <__alt_data_end+0xff809360>
  8094c0:	b0ffd636 	bltu	r22,r3,80941c <__alt_data_end+0xff80941c>
  8094c4:	1011883a 	mov	r8,r2
  8094c8:	b0ff341e 	bne	r22,r3,80919c <__alt_data_end+0xff80919c>
  8094cc:	003f3406 	br	8091a0 <__alt_data_end+0xff8091a0>
  8094d0:	0005883a 	mov	r2,zero
  8094d4:	003fe006 	br	809458 <__alt_data_end+0xff809458>
  8094d8:	00800434 	movhi	r2,16
  8094dc:	89400234 	orhi	r5,r17,8
  8094e0:	10bfffc4 	addi	r2,r2,-1
  8094e4:	b807883a 	mov	r3,r23
  8094e8:	288a703a 	and	r5,r5,r2
  8094ec:	4025883a 	mov	r18,r8
  8094f0:	003e8206 	br	808efc <__alt_data_end+0xff808efc>

008094f4 <__ledf2>:
  8094f4:	2804d53a 	srli	r2,r5,20
  8094f8:	3810d53a 	srli	r8,r7,20
  8094fc:	00c00434 	movhi	r3,16
  809500:	18ffffc4 	addi	r3,r3,-1
  809504:	1081ffcc 	andi	r2,r2,2047
  809508:	0241ffc4 	movi	r9,2047
  80950c:	28d4703a 	and	r10,r5,r3
  809510:	4201ffcc 	andi	r8,r8,2047
  809514:	38c6703a 	and	r3,r7,r3
  809518:	280ad7fa 	srli	r5,r5,31
  80951c:	380ed7fa 	srli	r7,r7,31
  809520:	12401f26 	beq	r2,r9,8095a0 <__ledf2+0xac>
  809524:	0241ffc4 	movi	r9,2047
  809528:	42401426 	beq	r8,r9,80957c <__ledf2+0x88>
  80952c:	1000091e 	bne	r2,zero,809554 <__ledf2+0x60>
  809530:	2296b03a 	or	r11,r4,r10
  809534:	5813003a 	cmpeq	r9,r11,zero
  809538:	29403fcc 	andi	r5,r5,255
  80953c:	40000a1e 	bne	r8,zero,809568 <__ledf2+0x74>
  809540:	30d8b03a 	or	r12,r6,r3
  809544:	6000081e 	bne	r12,zero,809568 <__ledf2+0x74>
  809548:	0005883a 	mov	r2,zero
  80954c:	5800111e 	bne	r11,zero,809594 <__ledf2+0xa0>
  809550:	f800283a 	ret
  809554:	29403fcc 	andi	r5,r5,255
  809558:	40000c1e 	bne	r8,zero,80958c <__ledf2+0x98>
  80955c:	30d2b03a 	or	r9,r6,r3
  809560:	48000c26 	beq	r9,zero,809594 <__ledf2+0xa0>
  809564:	0013883a 	mov	r9,zero
  809568:	39c03fcc 	andi	r7,r7,255
  80956c:	48000826 	beq	r9,zero,809590 <__ledf2+0x9c>
  809570:	38001126 	beq	r7,zero,8095b8 <__ledf2+0xc4>
  809574:	00800044 	movi	r2,1
  809578:	f800283a 	ret
  80957c:	30d2b03a 	or	r9,r6,r3
  809580:	483fea26 	beq	r9,zero,80952c <__alt_data_end+0xff80952c>
  809584:	00800084 	movi	r2,2
  809588:	f800283a 	ret
  80958c:	39c03fcc 	andi	r7,r7,255
  809590:	39400726 	beq	r7,r5,8095b0 <__ledf2+0xbc>
  809594:	2800081e 	bne	r5,zero,8095b8 <__ledf2+0xc4>
  809598:	00800044 	movi	r2,1
  80959c:	f800283a 	ret
  8095a0:	2292b03a 	or	r9,r4,r10
  8095a4:	483fdf26 	beq	r9,zero,809524 <__alt_data_end+0xff809524>
  8095a8:	00800084 	movi	r2,2
  8095ac:	f800283a 	ret
  8095b0:	4080030e 	bge	r8,r2,8095c0 <__ledf2+0xcc>
  8095b4:	383fef26 	beq	r7,zero,809574 <__alt_data_end+0xff809574>
  8095b8:	00bfffc4 	movi	r2,-1
  8095bc:	f800283a 	ret
  8095c0:	123feb16 	blt	r2,r8,809570 <__alt_data_end+0xff809570>
  8095c4:	1abff336 	bltu	r3,r10,809594 <__alt_data_end+0xff809594>
  8095c8:	50c00326 	beq	r10,r3,8095d8 <__ledf2+0xe4>
  8095cc:	50c0042e 	bgeu	r10,r3,8095e0 <__ledf2+0xec>
  8095d0:	283fe81e 	bne	r5,zero,809574 <__alt_data_end+0xff809574>
  8095d4:	003ff806 	br	8095b8 <__alt_data_end+0xff8095b8>
  8095d8:	313fee36 	bltu	r6,r4,809594 <__alt_data_end+0xff809594>
  8095dc:	21bffc36 	bltu	r4,r6,8095d0 <__alt_data_end+0xff8095d0>
  8095e0:	0005883a 	mov	r2,zero
  8095e4:	f800283a 	ret

008095e8 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  8095e8:	defffc04 	addi	sp,sp,-16
  8095ec:	df000315 	stw	fp,12(sp)
  8095f0:	df000304 	addi	fp,sp,12
  8095f4:	e13ffd15 	stw	r4,-12(fp)
  8095f8:	e17ffe15 	stw	r5,-8(fp)
  8095fc:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
  809600:	e0fffe17 	ldw	r3,-8(fp)
  809604:	e0bffd17 	ldw	r2,-12(fp)
  809608:	18800c26 	beq	r3,r2,80963c <alt_load_section+0x54>
  {
    while( to != end )
  80960c:	00000806 	br	809630 <alt_load_section+0x48>
    {
      *to++ = *from++;
  809610:	e0bffe17 	ldw	r2,-8(fp)
  809614:	10c00104 	addi	r3,r2,4
  809618:	e0fffe15 	stw	r3,-8(fp)
  80961c:	e0fffd17 	ldw	r3,-12(fp)
  809620:	19000104 	addi	r4,r3,4
  809624:	e13ffd15 	stw	r4,-12(fp)
  809628:	18c00017 	ldw	r3,0(r3)
  80962c:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
  809630:	e0fffe17 	ldw	r3,-8(fp)
  809634:	e0bfff17 	ldw	r2,-4(fp)
  809638:	18bff51e 	bne	r3,r2,809610 <__alt_data_end+0xff809610>
    {
      *to++ = *from++;
    }
  }
}
  80963c:	0001883a 	nop
  809640:	e037883a 	mov	sp,fp
  809644:	df000017 	ldw	fp,0(sp)
  809648:	dec00104 	addi	sp,sp,4
  80964c:	f800283a 	ret

00809650 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  809650:	defffe04 	addi	sp,sp,-8
  809654:	dfc00115 	stw	ra,4(sp)
  809658:	df000015 	stw	fp,0(sp)
  80965c:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  809660:	01802074 	movhi	r6,129
  809664:	31ad6604 	addi	r6,r6,-19048
  809668:	01402074 	movhi	r5,129
  80966c:	296cad04 	addi	r5,r5,-19788
  809670:	01002074 	movhi	r4,129
  809674:	212d6604 	addi	r4,r4,-19048
  809678:	08095e80 	call	8095e8 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80967c:	01802034 	movhi	r6,128
  809680:	31807004 	addi	r6,r6,448
  809684:	01402034 	movhi	r5,128
  809688:	29400804 	addi	r5,r5,32
  80968c:	01002034 	movhi	r4,128
  809690:	21000804 	addi	r4,r4,32
  809694:	08095e80 	call	8095e8 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  809698:	01802074 	movhi	r6,129
  80969c:	31acad04 	addi	r6,r6,-19788
  8096a0:	01402074 	movhi	r5,129
  8096a4:	296b8c04 	addi	r5,r5,-20944
  8096a8:	01002074 	movhi	r4,129
  8096ac:	212b8c04 	addi	r4,r4,-20944
  8096b0:	08095e80 	call	8095e8 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  8096b4:	0809f100 	call	809f10 <alt_dcache_flush_all>
  alt_icache_flush_all();
  8096b8:	080a0640 	call	80a064 <alt_icache_flush_all>
}
  8096bc:	0001883a 	nop
  8096c0:	e037883a 	mov	sp,fp
  8096c4:	dfc00117 	ldw	ra,4(sp)
  8096c8:	df000017 	ldw	fp,0(sp)
  8096cc:	dec00204 	addi	sp,sp,8
  8096d0:	f800283a 	ret

008096d4 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  8096d4:	defffd04 	addi	sp,sp,-12
  8096d8:	dfc00215 	stw	ra,8(sp)
  8096dc:	df000115 	stw	fp,4(sp)
  8096e0:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  8096e4:	0009883a 	mov	r4,zero
  8096e8:	0809a480 	call	809a48 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  8096ec:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  8096f0:	0809a800 	call	809a80 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  8096f4:	01802074 	movhi	r6,129
  8096f8:	31aca204 	addi	r6,r6,-19832
  8096fc:	01402074 	movhi	r5,129
  809700:	296ca204 	addi	r5,r5,-19832
  809704:	01002074 	movhi	r4,129
  809708:	212ca204 	addi	r4,r4,-19832
  80970c:	080a3fc0 	call	80a3fc <alt_io_redirect>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  809710:	d0a0c817 	ldw	r2,-31968(gp)
  809714:	d0e0c917 	ldw	r3,-31964(gp)
  809718:	d120ca17 	ldw	r4,-31960(gp)
  80971c:	200d883a 	mov	r6,r4
  809720:	180b883a 	mov	r5,r3
  809724:	1009883a 	mov	r4,r2
  809728:	08004a40 	call	8004a4 <main>
  80972c:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  809730:	01000044 	movi	r4,1
  809734:	0809e400 	call	809e40 <close>
  exit (result);
  809738:	e13fff17 	ldw	r4,-4(fp)
  80973c:	080abc40 	call	80abc4 <exit>

00809740 <alt_putstr>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided fputs() routine.
 */
int 
alt_putstr(const char* str)
{
  809740:	defffd04 	addi	sp,sp,-12
  809744:	dfc00215 	stw	ra,8(sp)
  809748:	df000115 	stw	fp,4(sp)
  80974c:	df000104 	addi	fp,sp,4
  809750:	e13fff15 	stw	r4,-4(fp)
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    return ALT_DRIVER_WRITE(ALT_STDOUT_DEV, str, strlen(str), 0);
#else
    return fputs(str, stdout);
  809754:	d0a00117 	ldw	r2,-32764(gp)
  809758:	10800217 	ldw	r2,8(r2)
  80975c:	100b883a 	mov	r5,r2
  809760:	e13fff17 	ldw	r4,-4(fp)
  809764:	080abe40 	call	80abe4 <fputs>
#endif
#endif
}
  809768:	e037883a 	mov	sp,fp
  80976c:	dfc00117 	ldw	ra,4(sp)
  809770:	df000017 	ldw	fp,0(sp)
  809774:	dec00204 	addi	sp,sp,8
  809778:	f800283a 	ret

0080977c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80977c:	defff904 	addi	sp,sp,-28
  809780:	df000615 	stw	fp,24(sp)
  809784:	df000604 	addi	fp,sp,24
  809788:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80978c:	0005303a 	rdctl	r2,status
  809790:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  809794:	e0fffe17 	ldw	r3,-8(fp)
  809798:	00bfff84 	movi	r2,-2
  80979c:	1884703a 	and	r2,r3,r2
  8097a0:	1001703a 	wrctl	status,r2
  
  return context;
  8097a4:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  8097a8:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  8097ac:	d0a00217 	ldw	r2,-32760(gp)
  8097b0:	10c000c4 	addi	r3,r2,3
  8097b4:	00bfff04 	movi	r2,-4
  8097b8:	1884703a 	and	r2,r3,r2
  8097bc:	d0a00215 	stw	r2,-32760(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  8097c0:	d0e00217 	ldw	r3,-32760(gp)
  8097c4:	e0bfff17 	ldw	r2,-4(fp)
  8097c8:	1887883a 	add	r3,r3,r2
  8097cc:	00804034 	movhi	r2,256
  8097d0:	10800004 	addi	r2,r2,0
  8097d4:	10c0062e 	bgeu	r2,r3,8097f0 <sbrk+0x74>
  8097d8:	e0bffb17 	ldw	r2,-20(fp)
  8097dc:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  8097e0:	e0bffa17 	ldw	r2,-24(fp)
  8097e4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  8097e8:	00bfffc4 	movi	r2,-1
  8097ec:	00000b06 	br	80981c <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
  8097f0:	d0a00217 	ldw	r2,-32760(gp)
  8097f4:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
  8097f8:	d0e00217 	ldw	r3,-32760(gp)
  8097fc:	e0bfff17 	ldw	r2,-4(fp)
  809800:	1885883a 	add	r2,r3,r2
  809804:	d0a00215 	stw	r2,-32760(gp)
  809808:	e0bffb17 	ldw	r2,-20(fp)
  80980c:	e0bffc15 	stw	r2,-16(fp)
  809810:	e0bffc17 	ldw	r2,-16(fp)
  809814:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  809818:	e0bffd17 	ldw	r2,-12(fp)
} 
  80981c:	e037883a 	mov	sp,fp
  809820:	df000017 	ldw	fp,0(sp)
  809824:	dec00104 	addi	sp,sp,4
  809828:	f800283a 	ret

0080982c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80982c:	defffe04 	addi	sp,sp,-8
  809830:	dfc00115 	stw	ra,4(sp)
  809834:	df000015 	stw	fp,0(sp)
  809838:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80983c:	d0a00817 	ldw	r2,-32736(gp)
  809840:	10000326 	beq	r2,zero,809850 <alt_get_errno+0x24>
  809844:	d0a00817 	ldw	r2,-32736(gp)
  809848:	103ee83a 	callr	r2
  80984c:	00000106 	br	809854 <alt_get_errno+0x28>
  809850:	d0a0c704 	addi	r2,gp,-31972
}
  809854:	e037883a 	mov	sp,fp
  809858:	dfc00117 	ldw	ra,4(sp)
  80985c:	df000017 	ldw	fp,0(sp)
  809860:	dec00204 	addi	sp,sp,8
  809864:	f800283a 	ret

00809868 <times>:
 *
 * ALT_TIMES is mapped onto the times() system call in alt_syscall.h
 */
 
clock_t ALT_TIMES (struct tms *buf)
{
  809868:	defffc04 	addi	sp,sp,-16
  80986c:	dfc00315 	stw	ra,12(sp)
  809870:	df000215 	stw	fp,8(sp)
  809874:	df000204 	addi	fp,sp,8
  809878:	e13fff15 	stw	r4,-4(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80987c:	d0a0cd17 	ldw	r2,-31948(gp)
  clock_t ticks = alt_nticks(); 
  809880:	e0bffe15 	stw	r2,-8(fp)
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  809884:	d0a0cc17 	ldw	r2,-31952(gp)

  /* If there is no system clock present, generate an error */

  if (!alt_ticks_per_second())
  809888:	1000061e 	bne	r2,zero,8098a4 <times+0x3c>
  {
    ALT_ERRNO = ENOSYS;
  80988c:	080982c0 	call	80982c <alt_get_errno>
  809890:	1007883a 	mov	r3,r2
  809894:	00801604 	movi	r2,88
  809898:	18800015 	stw	r2,0(r3)
    return 0;
  80989c:	0005883a 	mov	r2,zero
  8098a0:	00000a06 	br	8098cc <times+0x64>
  }

  /* Otherwise return the elapsed time */

  buf->tms_utime  = 0;
  8098a4:	e0bfff17 	ldw	r2,-4(fp)
  8098a8:	10000015 	stw	zero,0(r2)
  buf->tms_stime  = ticks;
  8098ac:	e0bfff17 	ldw	r2,-4(fp)
  8098b0:	e0fffe17 	ldw	r3,-8(fp)
  8098b4:	10c00115 	stw	r3,4(r2)
  buf->tms_cutime = 0;
  8098b8:	e0bfff17 	ldw	r2,-4(fp)
  8098bc:	10000215 	stw	zero,8(r2)
  buf->tms_cstime = 0;
  8098c0:	e0bfff17 	ldw	r2,-4(fp)
  8098c4:	10000315 	stw	zero,12(r2)

  return ticks;
  8098c8:	e0bffe17 	ldw	r2,-8(fp)
}
  8098cc:	e037883a 	mov	sp,fp
  8098d0:	dfc00117 	ldw	ra,4(sp)
  8098d4:	df000017 	ldw	fp,0(sp)
  8098d8:	dec00204 	addi	sp,sp,8
  8098dc:	f800283a 	ret

008098e0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  8098e0:	defffe04 	addi	sp,sp,-8
  8098e4:	dfc00115 	stw	ra,4(sp)
  8098e8:	df000015 	stw	fp,0(sp)
  8098ec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8098f0:	d0a00817 	ldw	r2,-32736(gp)
  8098f4:	10000326 	beq	r2,zero,809904 <alt_get_errno+0x24>
  8098f8:	d0a00817 	ldw	r2,-32736(gp)
  8098fc:	103ee83a 	callr	r2
  809900:	00000106 	br	809908 <alt_get_errno+0x28>
  809904:	d0a0c704 	addi	r2,gp,-31972
}
  809908:	e037883a 	mov	sp,fp
  80990c:	dfc00117 	ldw	ra,4(sp)
  809910:	df000017 	ldw	fp,0(sp)
  809914:	dec00204 	addi	sp,sp,8
  809918:	f800283a 	ret

0080991c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80991c:	defff904 	addi	sp,sp,-28
  809920:	dfc00615 	stw	ra,24(sp)
  809924:	df000515 	stw	fp,20(sp)
  809928:	df000504 	addi	fp,sp,20
  80992c:	e13ffd15 	stw	r4,-12(fp)
  809930:	e17ffe15 	stw	r5,-8(fp)
  809934:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  809938:	e0bffd17 	ldw	r2,-12(fp)
  80993c:	10000616 	blt	r2,zero,809958 <write+0x3c>
  809940:	e0bffd17 	ldw	r2,-12(fp)
  809944:	10c00324 	muli	r3,r2,12
  809948:	00802074 	movhi	r2,129
  80994c:	10acfa04 	addi	r2,r2,-19480
  809950:	1885883a 	add	r2,r3,r2
  809954:	00000106 	br	80995c <write+0x40>
  809958:	0005883a 	mov	r2,zero
  80995c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
  809960:	e0bffb17 	ldw	r2,-20(fp)
  809964:	10002126 	beq	r2,zero,8099ec <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  809968:	e0bffb17 	ldw	r2,-20(fp)
  80996c:	10800217 	ldw	r2,8(r2)
  809970:	108000cc 	andi	r2,r2,3
  809974:	10001826 	beq	r2,zero,8099d8 <write+0xbc>
  809978:	e0bffb17 	ldw	r2,-20(fp)
  80997c:	10800017 	ldw	r2,0(r2)
  809980:	10800617 	ldw	r2,24(r2)
  809984:	10001426 	beq	r2,zero,8099d8 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  809988:	e0bffb17 	ldw	r2,-20(fp)
  80998c:	10800017 	ldw	r2,0(r2)
  809990:	10800617 	ldw	r2,24(r2)
  809994:	e0ffff17 	ldw	r3,-4(fp)
  809998:	180d883a 	mov	r6,r3
  80999c:	e17ffe17 	ldw	r5,-8(fp)
  8099a0:	e13ffb17 	ldw	r4,-20(fp)
  8099a4:	103ee83a 	callr	r2
  8099a8:	e0bffc15 	stw	r2,-16(fp)
  8099ac:	e0bffc17 	ldw	r2,-16(fp)
  8099b0:	1000070e 	bge	r2,zero,8099d0 <write+0xb4>
      {
        ALT_ERRNO = -rval;
  8099b4:	08098e00 	call	8098e0 <alt_get_errno>
  8099b8:	1007883a 	mov	r3,r2
  8099bc:	e0bffc17 	ldw	r2,-16(fp)
  8099c0:	0085c83a 	sub	r2,zero,r2
  8099c4:	18800015 	stw	r2,0(r3)
        return -1;
  8099c8:	00bfffc4 	movi	r2,-1
  8099cc:	00000c06 	br	809a00 <write+0xe4>
      }
      return rval;
  8099d0:	e0bffc17 	ldw	r2,-16(fp)
  8099d4:	00000a06 	br	809a00 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
  8099d8:	08098e00 	call	8098e0 <alt_get_errno>
  8099dc:	1007883a 	mov	r3,r2
  8099e0:	00800344 	movi	r2,13
  8099e4:	18800015 	stw	r2,0(r3)
  8099e8:	00000406 	br	8099fc <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  8099ec:	08098e00 	call	8098e0 <alt_get_errno>
  8099f0:	1007883a 	mov	r3,r2
  8099f4:	00801444 	movi	r2,81
  8099f8:	18800015 	stw	r2,0(r3)
  }
  return -1;
  8099fc:	00bfffc4 	movi	r2,-1
}
  809a00:	e037883a 	mov	sp,fp
  809a04:	dfc00117 	ldw	ra,4(sp)
  809a08:	df000017 	ldw	fp,0(sp)
  809a0c:	dec00204 	addi	sp,sp,8
  809a10:	f800283a 	ret

00809a14 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  809a14:	defffd04 	addi	sp,sp,-12
  809a18:	dfc00215 	stw	ra,8(sp)
  809a1c:	df000115 	stw	fp,4(sp)
  809a20:	df000104 	addi	fp,sp,4
  809a24:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  809a28:	d1600504 	addi	r5,gp,-32748
  809a2c:	e13fff17 	ldw	r4,-4(fp)
  809a30:	0809fc00 	call	809fc0 <alt_dev_llist_insert>
}
  809a34:	e037883a 	mov	sp,fp
  809a38:	dfc00117 	ldw	ra,4(sp)
  809a3c:	df000017 	ldw	fp,0(sp)
  809a40:	dec00204 	addi	sp,sp,8
  809a44:	f800283a 	ret

00809a48 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  809a48:	defffd04 	addi	sp,sp,-12
  809a4c:	dfc00215 	stw	ra,8(sp)
  809a50:	df000115 	stw	fp,4(sp)
  809a54:	df000104 	addi	fp,sp,4
  809a58:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( CPU, cpu);
  809a5c:	080a8d40 	call	80a8d4 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  809a60:	00800044 	movi	r2,1
  809a64:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
  809a68:	0001883a 	nop
  809a6c:	e037883a 	mov	sp,fp
  809a70:	dfc00117 	ldw	ra,4(sp)
  809a74:	df000017 	ldw	fp,0(sp)
  809a78:	dec00204 	addi	sp,sp,8
  809a7c:	f800283a 	ret

00809a80 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  809a80:	defffe04 	addi	sp,sp,-8
  809a84:	dfc00115 	stw	ra,4(sp)
  809a88:	df000015 	stw	fp,0(sp)
  809a8c:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( SYS_CLK_TIMER, sys_clk_timer);
  809a90:	01c0fa04 	movi	r7,1000
  809a94:	01800044 	movi	r6,1
  809a98:	000b883a 	mov	r5,zero
  809a9c:	01004034 	movhi	r4,256
  809aa0:	21040004 	addi	r4,r4,4096
  809aa4:	0809d880 	call	809d88 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  809aa8:	01002074 	movhi	r4,129
  809aac:	212ce504 	addi	r4,r4,-19564
  809ab0:	0809a140 	call	809a14 <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
  809ab4:	0001883a 	nop
}
  809ab8:	0001883a 	nop
  809abc:	e037883a 	mov	sp,fp
  809ac0:	dfc00117 	ldw	ra,4(sp)
  809ac4:	df000017 	ldw	fp,0(sp)
  809ac8:	dec00204 	addi	sp,sp,8
  809acc:	f800283a 	ret

00809ad0 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  809ad0:	defffa04 	addi	sp,sp,-24
  809ad4:	dfc00515 	stw	ra,20(sp)
  809ad8:	df000415 	stw	fp,16(sp)
  809adc:	df000404 	addi	fp,sp,16
  809ae0:	e13ffd15 	stw	r4,-12(fp)
  809ae4:	e17ffe15 	stw	r5,-8(fp)
  809ae8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  809aec:	e0bffd17 	ldw	r2,-12(fp)
  809af0:	10800017 	ldw	r2,0(r2)
  809af4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  809af8:	e0bffc17 	ldw	r2,-16(fp)
  809afc:	10c00a04 	addi	r3,r2,40
  809b00:	e0bffd17 	ldw	r2,-12(fp)
  809b04:	10800217 	ldw	r2,8(r2)
  809b08:	100f883a 	mov	r7,r2
  809b0c:	e1bfff17 	ldw	r6,-4(fp)
  809b10:	e17ffe17 	ldw	r5,-8(fp)
  809b14:	1809883a 	mov	r4,r3
  809b18:	0809b900 	call	809b90 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  809b1c:	e037883a 	mov	sp,fp
  809b20:	dfc00117 	ldw	ra,4(sp)
  809b24:	df000017 	ldw	fp,0(sp)
  809b28:	dec00204 	addi	sp,sp,8
  809b2c:	f800283a 	ret

00809b30 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  809b30:	defffa04 	addi	sp,sp,-24
  809b34:	dfc00515 	stw	ra,20(sp)
  809b38:	df000415 	stw	fp,16(sp)
  809b3c:	df000404 	addi	fp,sp,16
  809b40:	e13ffd15 	stw	r4,-12(fp)
  809b44:	e17ffe15 	stw	r5,-8(fp)
  809b48:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  809b4c:	e0bffd17 	ldw	r2,-12(fp)
  809b50:	10800017 	ldw	r2,0(r2)
  809b54:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  809b58:	e0bffc17 	ldw	r2,-16(fp)
  809b5c:	10c00a04 	addi	r3,r2,40
  809b60:	e0bffd17 	ldw	r2,-12(fp)
  809b64:	10800217 	ldw	r2,8(r2)
  809b68:	100f883a 	mov	r7,r2
  809b6c:	e1bfff17 	ldw	r6,-4(fp)
  809b70:	e17ffe17 	ldw	r5,-8(fp)
  809b74:	1809883a 	mov	r4,r3
  809b78:	0809c7c0 	call	809c7c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  809b7c:	e037883a 	mov	sp,fp
  809b80:	dfc00117 	ldw	ra,4(sp)
  809b84:	df000017 	ldw	fp,0(sp)
  809b88:	dec00204 	addi	sp,sp,8
  809b8c:	f800283a 	ret

00809b90 <altera_avalon_jtag_uart_read>:
 */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char* buffer, int space, int flags)
{
  809b90:	defff704 	addi	sp,sp,-36
  809b94:	df000815 	stw	fp,32(sp)
  809b98:	df000804 	addi	fp,sp,32
  809b9c:	e13ffc15 	stw	r4,-16(fp)
  809ba0:	e17ffd15 	stw	r5,-12(fp)
  809ba4:	e1bffe15 	stw	r6,-8(fp)
  809ba8:	e1ffff15 	stw	r7,-4(fp)
  unsigned int base = sp->base;
  809bac:	e0bffc17 	ldw	r2,-16(fp)
  809bb0:	10800017 	ldw	r2,0(r2)
  809bb4:	e0bff915 	stw	r2,-28(fp)

  char * ptr = buffer;
  809bb8:	e0bffd17 	ldw	r2,-12(fp)
  809bbc:	e0bff815 	stw	r2,-32(fp)
  char * end = buffer + space;
  809bc0:	e0bffe17 	ldw	r2,-8(fp)
  809bc4:	e0fffd17 	ldw	r3,-12(fp)
  809bc8:	1885883a 	add	r2,r3,r2
  809bcc:	e0bffa15 	stw	r2,-24(fp)

  while (ptr < end)
  809bd0:	00001206 	br	809c1c <altera_avalon_jtag_uart_read+0x8c>
  {
    unsigned int data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  809bd4:	e0bff917 	ldw	r2,-28(fp)
  809bd8:	10800037 	ldwio	r2,0(r2)
  809bdc:	e0bffb15 	stw	r2,-20(fp)

    if (data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK)
  809be0:	e0bffb17 	ldw	r2,-20(fp)
  809be4:	10a0000c 	andi	r2,r2,32768
  809be8:	10000626 	beq	r2,zero,809c04 <altera_avalon_jtag_uart_read+0x74>
      *ptr++ = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  809bec:	e0bff817 	ldw	r2,-32(fp)
  809bf0:	10c00044 	addi	r3,r2,1
  809bf4:	e0fff815 	stw	r3,-32(fp)
  809bf8:	e0fffb17 	ldw	r3,-20(fp)
  809bfc:	10c00005 	stb	r3,0(r2)
  809c00:	00000606 	br	809c1c <altera_avalon_jtag_uart_read+0x8c>
    else if (ptr != buffer)
  809c04:	e0fff817 	ldw	r3,-32(fp)
  809c08:	e0bffd17 	ldw	r2,-12(fp)
  809c0c:	1880071e 	bne	r3,r2,809c2c <altera_avalon_jtag_uart_read+0x9c>
      break;
    else if(flags & O_NONBLOCK)
  809c10:	e0bfff17 	ldw	r2,-4(fp)
  809c14:	1090000c 	andi	r2,r2,16384
  809c18:	1000061e 	bne	r2,zero,809c34 <altera_avalon_jtag_uart_read+0xa4>
  unsigned int base = sp->base;

  char * ptr = buffer;
  char * end = buffer + space;

  while (ptr < end)
  809c1c:	e0fff817 	ldw	r3,-32(fp)
  809c20:	e0bffa17 	ldw	r2,-24(fp)
  809c24:	18bfeb36 	bltu	r3,r2,809bd4 <__alt_data_end+0xff809bd4>
  809c28:	00000306 	br	809c38 <altera_avalon_jtag_uart_read+0xa8>
    unsigned int data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);

    if (data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK)
      *ptr++ = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    else if (ptr != buffer)
      break;
  809c2c:	0001883a 	nop
  809c30:	00000106 	br	809c38 <altera_avalon_jtag_uart_read+0xa8>
    else if(flags & O_NONBLOCK)
      break;   
  809c34:	0001883a 	nop
    
  }

  if (ptr != buffer)
  809c38:	e0fff817 	ldw	r3,-32(fp)
  809c3c:	e0bffd17 	ldw	r2,-12(fp)
  809c40:	18800426 	beq	r3,r2,809c54 <altera_avalon_jtag_uart_read+0xc4>
    return ptr - buffer;
  809c44:	e0fff817 	ldw	r3,-32(fp)
  809c48:	e0bffd17 	ldw	r2,-12(fp)
  809c4c:	1885c83a 	sub	r2,r3,r2
  809c50:	00000606 	br	809c6c <altera_avalon_jtag_uart_read+0xdc>
  else if (flags & O_NONBLOCK)
  809c54:	e0bfff17 	ldw	r2,-4(fp)
  809c58:	1090000c 	andi	r2,r2,16384
  809c5c:	10000226 	beq	r2,zero,809c68 <altera_avalon_jtag_uart_read+0xd8>
    return -EWOULDBLOCK;
  809c60:	00bffd44 	movi	r2,-11
  809c64:	00000106 	br	809c6c <altera_avalon_jtag_uart_read+0xdc>
  else
    return -EIO;
  809c68:	00bffec4 	movi	r2,-5
}
  809c6c:	e037883a 	mov	sp,fp
  809c70:	df000017 	ldw	fp,0(sp)
  809c74:	dec00104 	addi	sp,sp,4
  809c78:	f800283a 	ret

00809c7c <altera_avalon_jtag_uart_write>:
 * one FIFOs worth of data.  But you said you didn't want to use interrupts :-)
 */

int altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  809c7c:	defff904 	addi	sp,sp,-28
  809c80:	df000615 	stw	fp,24(sp)
  809c84:	df000604 	addi	fp,sp,24
  809c88:	e13ffc15 	stw	r4,-16(fp)
  809c8c:	e17ffd15 	stw	r5,-12(fp)
  809c90:	e1bffe15 	stw	r6,-8(fp)
  809c94:	e1ffff15 	stw	r7,-4(fp)
  unsigned int base = sp->base;
  809c98:	e0bffc17 	ldw	r2,-16(fp)
  809c9c:	10800017 	ldw	r2,0(r2)
  809ca0:	e0bffa15 	stw	r2,-24(fp)

  const char * end = ptr + count;
  809ca4:	e0bffe17 	ldw	r2,-8(fp)
  809ca8:	e0fffd17 	ldw	r3,-12(fp)
  809cac:	1885883a 	add	r2,r3,r2
  809cb0:	e0bffb15 	stw	r2,-20(fp)

  while (ptr < end)
  809cb4:	00000e06 	br	809cf0 <altera_avalon_jtag_uart_write+0x74>
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
  809cb8:	e0bffa17 	ldw	r2,-24(fp)
  809cbc:	10800104 	addi	r2,r2,4
  809cc0:	10800037 	ldwio	r2,0(r2)
  809cc4:	10bfffec 	andhi	r2,r2,65535
  809cc8:	10000926 	beq	r2,zero,809cf0 <altera_avalon_jtag_uart_write+0x74>
      IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, *ptr++);
  809ccc:	e0fffa17 	ldw	r3,-24(fp)
  809cd0:	e0bffd17 	ldw	r2,-12(fp)
  809cd4:	11000044 	addi	r4,r2,1
  809cd8:	e13ffd15 	stw	r4,-12(fp)
  809cdc:	10800003 	ldbu	r2,0(r2)
  809ce0:	10803fcc 	andi	r2,r2,255
  809ce4:	1080201c 	xori	r2,r2,128
  809ce8:	10bfe004 	addi	r2,r2,-128
  809cec:	18800035 	stwio	r2,0(r3)
{
  unsigned int base = sp->base;

  const char * end = ptr + count;

  while (ptr < end)
  809cf0:	e0fffd17 	ldw	r3,-12(fp)
  809cf4:	e0bffb17 	ldw	r2,-20(fp)
  809cf8:	18bfef36 	bltu	r3,r2,809cb8 <__alt_data_end+0xff809cb8>
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
      IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, *ptr++);

  return count;
  809cfc:	e0bffe17 	ldw	r2,-8(fp)
}
  809d00:	e037883a 	mov	sp,fp
  809d04:	df000017 	ldw	fp,0(sp)
  809d08:	dec00104 	addi	sp,sp,4
  809d0c:	f800283a 	ret

00809d10 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  809d10:	defffa04 	addi	sp,sp,-24
  809d14:	dfc00515 	stw	ra,20(sp)
  809d18:	df000415 	stw	fp,16(sp)
  809d1c:	df000404 	addi	fp,sp,16
  809d20:	e13fff15 	stw	r4,-4(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  809d24:	0007883a 	mov	r3,zero
  809d28:	e0bfff17 	ldw	r2,-4(fp)
  809d2c:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  809d30:	e0bfff17 	ldw	r2,-4(fp)
  809d34:	10800104 	addi	r2,r2,4
  809d38:	10800037 	ldwio	r2,0(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  809d3c:	0005303a 	rdctl	r2,status
  809d40:	e0bffd15 	stw	r2,-12(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  809d44:	e0fffd17 	ldw	r3,-12(fp)
  809d48:	00bfff84 	movi	r2,-2
  809d4c:	1884703a 	and	r2,r3,r2
  809d50:	1001703a 	wrctl	status,r2
  
  return context;
  809d54:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  809d58:	e0bffc15 	stw	r2,-16(fp)
  alt_tick ();
  809d5c:	080a7cc0 	call	80a7cc <alt_tick>
  809d60:	e0bffc17 	ldw	r2,-16(fp)
  809d64:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  809d68:	e0bffe17 	ldw	r2,-8(fp)
  809d6c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all(cpu_sr);
}
  809d70:	0001883a 	nop
  809d74:	e037883a 	mov	sp,fp
  809d78:	dfc00117 	ldw	ra,4(sp)
  809d7c:	df000017 	ldw	fp,0(sp)
  809d80:	dec00204 	addi	sp,sp,8
  809d84:	f800283a 	ret

00809d88 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  809d88:	defff804 	addi	sp,sp,-32
  809d8c:	dfc00715 	stw	ra,28(sp)
  809d90:	df000615 	stw	fp,24(sp)
  809d94:	df000604 	addi	fp,sp,24
  809d98:	e13ffc15 	stw	r4,-16(fp)
  809d9c:	e17ffd15 	stw	r5,-12(fp)
  809da0:	e1bffe15 	stw	r6,-8(fp)
  809da4:	e1ffff15 	stw	r7,-4(fp)
  809da8:	e0bfff17 	ldw	r2,-4(fp)
  809dac:	e0bffb15 	stw	r2,-20(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  809db0:	d0a0cc17 	ldw	r2,-31952(gp)
  809db4:	1000021e 	bne	r2,zero,809dc0 <alt_avalon_timer_sc_init+0x38>
  {
    _alt_tick_rate = nticks;
  809db8:	e0bffb17 	ldw	r2,-20(fp)
  809dbc:	d0a0cc15 	stw	r2,-31952(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  809dc0:	e0bffc17 	ldw	r2,-16(fp)
  809dc4:	10800104 	addi	r2,r2,4
  809dc8:	00c001c4 	movi	r3,7
  809dcc:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  809dd0:	d8000015 	stw	zero,0(sp)
  809dd4:	e1fffc17 	ldw	r7,-16(fp)
  809dd8:	01802074 	movhi	r6,129
  809ddc:	31a74404 	addi	r6,r6,-25328
  809de0:	e17ffe17 	ldw	r5,-8(fp)
  809de4:	e13ffd17 	ldw	r4,-12(fp)
  809de8:	080a0980 	call	80a098 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  809dec:	0001883a 	nop
  809df0:	e037883a 	mov	sp,fp
  809df4:	dfc00117 	ldw	ra,4(sp)
  809df8:	df000017 	ldw	fp,0(sp)
  809dfc:	dec00204 	addi	sp,sp,8
  809e00:	f800283a 	ret

00809e04 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  809e04:	defffe04 	addi	sp,sp,-8
  809e08:	dfc00115 	stw	ra,4(sp)
  809e0c:	df000015 	stw	fp,0(sp)
  809e10:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  809e14:	d0a00817 	ldw	r2,-32736(gp)
  809e18:	10000326 	beq	r2,zero,809e28 <alt_get_errno+0x24>
  809e1c:	d0a00817 	ldw	r2,-32736(gp)
  809e20:	103ee83a 	callr	r2
  809e24:	00000106 	br	809e2c <alt_get_errno+0x28>
  809e28:	d0a0c704 	addi	r2,gp,-31972
}
  809e2c:	e037883a 	mov	sp,fp
  809e30:	dfc00117 	ldw	ra,4(sp)
  809e34:	df000017 	ldw	fp,0(sp)
  809e38:	dec00204 	addi	sp,sp,8
  809e3c:	f800283a 	ret

00809e40 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  809e40:	defffb04 	addi	sp,sp,-20
  809e44:	dfc00415 	stw	ra,16(sp)
  809e48:	df000315 	stw	fp,12(sp)
  809e4c:	df000304 	addi	fp,sp,12
  809e50:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  809e54:	e0bfff17 	ldw	r2,-4(fp)
  809e58:	10000616 	blt	r2,zero,809e74 <close+0x34>
  809e5c:	e0bfff17 	ldw	r2,-4(fp)
  809e60:	10c00324 	muli	r3,r2,12
  809e64:	00802074 	movhi	r2,129
  809e68:	10acfa04 	addi	r2,r2,-19480
  809e6c:	1885883a 	add	r2,r3,r2
  809e70:	00000106 	br	809e78 <close+0x38>
  809e74:	0005883a 	mov	r2,zero
  809e78:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
  809e7c:	e0bffd17 	ldw	r2,-12(fp)
  809e80:	10001926 	beq	r2,zero,809ee8 <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  809e84:	e0bffd17 	ldw	r2,-12(fp)
  809e88:	10800017 	ldw	r2,0(r2)
  809e8c:	10800417 	ldw	r2,16(r2)
  809e90:	10000626 	beq	r2,zero,809eac <close+0x6c>
  809e94:	e0bffd17 	ldw	r2,-12(fp)
  809e98:	10800017 	ldw	r2,0(r2)
  809e9c:	10800417 	ldw	r2,16(r2)
  809ea0:	e13ffd17 	ldw	r4,-12(fp)
  809ea4:	103ee83a 	callr	r2
  809ea8:	00000106 	br	809eb0 <close+0x70>
  809eac:	0005883a 	mov	r2,zero
  809eb0:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  809eb4:	e13fff17 	ldw	r4,-4(fp)
  809eb8:	080a6cc0 	call	80a6cc <alt_release_fd>
    if (rval < 0)
  809ebc:	e0bffe17 	ldw	r2,-8(fp)
  809ec0:	1000070e 	bge	r2,zero,809ee0 <close+0xa0>
    {
      ALT_ERRNO = -rval;
  809ec4:	0809e040 	call	809e04 <alt_get_errno>
  809ec8:	1007883a 	mov	r3,r2
  809ecc:	e0bffe17 	ldw	r2,-8(fp)
  809ed0:	0085c83a 	sub	r2,zero,r2
  809ed4:	18800015 	stw	r2,0(r3)
      return -1;
  809ed8:	00bfffc4 	movi	r2,-1
  809edc:	00000706 	br	809efc <close+0xbc>
    }
    return 0;
  809ee0:	0005883a 	mov	r2,zero
  809ee4:	00000506 	br	809efc <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  809ee8:	0809e040 	call	809e04 <alt_get_errno>
  809eec:	1007883a 	mov	r3,r2
  809ef0:	00801444 	movi	r2,81
  809ef4:	18800015 	stw	r2,0(r3)
    return -1;
  809ef8:	00bfffc4 	movi	r2,-1
  }
}
  809efc:	e037883a 	mov	sp,fp
  809f00:	dfc00117 	ldw	ra,4(sp)
  809f04:	df000017 	ldw	fp,0(sp)
  809f08:	dec00204 	addi	sp,sp,8
  809f0c:	f800283a 	ret

00809f10 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  809f10:	defffe04 	addi	sp,sp,-8
  809f14:	df000115 	stw	fp,4(sp)
  809f18:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  809f1c:	e03fff15 	stw	zero,-4(fp)
  809f20:	00000506 	br	809f38 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  809f24:	e0bfff17 	ldw	r2,-4(fp)
  809f28:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  809f2c:	e0bfff17 	ldw	r2,-4(fp)
  809f30:	10800804 	addi	r2,r2,32
  809f34:	e0bfff15 	stw	r2,-4(fp)
  809f38:	e0bfff17 	ldw	r2,-4(fp)
  809f3c:	00ffffd4 	movui	r3,65535
  809f40:	18bff82e 	bgeu	r3,r2,809f24 <__alt_data_end+0xff809f24>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  809f44:	0001883a 	nop
  809f48:	e037883a 	mov	sp,fp
  809f4c:	df000017 	ldw	fp,0(sp)
  809f50:	dec00104 	addi	sp,sp,4
  809f54:	f800283a 	ret

00809f58 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  809f58:	defffc04 	addi	sp,sp,-16
  809f5c:	df000315 	stw	fp,12(sp)
  809f60:	df000304 	addi	fp,sp,12
  809f64:	e13ffd15 	stw	r4,-12(fp)
  809f68:	e17ffe15 	stw	r5,-8(fp)
  809f6c:	e1bfff15 	stw	r6,-4(fp)
  return len;
  809f70:	e0bfff17 	ldw	r2,-4(fp)
}
  809f74:	e037883a 	mov	sp,fp
  809f78:	df000017 	ldw	fp,0(sp)
  809f7c:	dec00104 	addi	sp,sp,4
  809f80:	f800283a 	ret

00809f84 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  809f84:	defffe04 	addi	sp,sp,-8
  809f88:	dfc00115 	stw	ra,4(sp)
  809f8c:	df000015 	stw	fp,0(sp)
  809f90:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  809f94:	d0a00817 	ldw	r2,-32736(gp)
  809f98:	10000326 	beq	r2,zero,809fa8 <alt_get_errno+0x24>
  809f9c:	d0a00817 	ldw	r2,-32736(gp)
  809fa0:	103ee83a 	callr	r2
  809fa4:	00000106 	br	809fac <alt_get_errno+0x28>
  809fa8:	d0a0c704 	addi	r2,gp,-31972
}
  809fac:	e037883a 	mov	sp,fp
  809fb0:	dfc00117 	ldw	ra,4(sp)
  809fb4:	df000017 	ldw	fp,0(sp)
  809fb8:	dec00204 	addi	sp,sp,8
  809fbc:	f800283a 	ret

00809fc0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  809fc0:	defffa04 	addi	sp,sp,-24
  809fc4:	dfc00515 	stw	ra,20(sp)
  809fc8:	df000415 	stw	fp,16(sp)
  809fcc:	df000404 	addi	fp,sp,16
  809fd0:	e13ffe15 	stw	r4,-8(fp)
  809fd4:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  809fd8:	e0bffe17 	ldw	r2,-8(fp)
  809fdc:	10000326 	beq	r2,zero,809fec <alt_dev_llist_insert+0x2c>
  809fe0:	e0bffe17 	ldw	r2,-8(fp)
  809fe4:	10800217 	ldw	r2,8(r2)
  809fe8:	1000061e 	bne	r2,zero,80a004 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  809fec:	0809f840 	call	809f84 <alt_get_errno>
  809ff0:	1007883a 	mov	r3,r2
  809ff4:	00800584 	movi	r2,22
  809ff8:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  809ffc:	00bffa84 	movi	r2,-22
  80a000:	00001306 	br	80a050 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  80a004:	e0bffe17 	ldw	r2,-8(fp)
  80a008:	e0ffff17 	ldw	r3,-4(fp)
  80a00c:	e0fffc15 	stw	r3,-16(fp)
  80a010:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80a014:	e0bffd17 	ldw	r2,-12(fp)
  80a018:	e0fffc17 	ldw	r3,-16(fp)
  80a01c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80a020:	e0bffc17 	ldw	r2,-16(fp)
  80a024:	10c00017 	ldw	r3,0(r2)
  80a028:	e0bffd17 	ldw	r2,-12(fp)
  80a02c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80a030:	e0bffc17 	ldw	r2,-16(fp)
  80a034:	10800017 	ldw	r2,0(r2)
  80a038:	e0fffd17 	ldw	r3,-12(fp)
  80a03c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80a040:	e0bffc17 	ldw	r2,-16(fp)
  80a044:	e0fffd17 	ldw	r3,-12(fp)
  80a048:	10c00015 	stw	r3,0(r2)

  return 0;  
  80a04c:	0005883a 	mov	r2,zero
}
  80a050:	e037883a 	mov	sp,fp
  80a054:	dfc00117 	ldw	ra,4(sp)
  80a058:	df000017 	ldw	fp,0(sp)
  80a05c:	dec00204 	addi	sp,sp,8
  80a060:	f800283a 	ret

0080a064 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  80a064:	defffe04 	addi	sp,sp,-8
  80a068:	dfc00115 	stw	ra,4(sp)
  80a06c:	df000015 	stw	fp,0(sp)
  80a070:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  80a074:	01420004 	movi	r5,2048
  80a078:	0009883a 	mov	r4,zero
  80a07c:	080ab340 	call	80ab34 <alt_icache_flush>
#endif
}
  80a080:	0001883a 	nop
  80a084:	e037883a 	mov	sp,fp
  80a088:	dfc00117 	ldw	ra,4(sp)
  80a08c:	df000017 	ldw	fp,0(sp)
  80a090:	dec00204 	addi	sp,sp,8
  80a094:	f800283a 	ret

0080a098 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80a098:	defff904 	addi	sp,sp,-28
  80a09c:	dfc00615 	stw	ra,24(sp)
  80a0a0:	df000515 	stw	fp,20(sp)
  80a0a4:	df000504 	addi	fp,sp,20
  80a0a8:	e13ffc15 	stw	r4,-16(fp)
  80a0ac:	e17ffd15 	stw	r5,-12(fp)
  80a0b0:	e1bffe15 	stw	r6,-8(fp)
  80a0b4:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  80a0b8:	e0800217 	ldw	r2,8(fp)
  80a0bc:	d8800015 	stw	r2,0(sp)
  80a0c0:	e1ffff17 	ldw	r7,-4(fp)
  80a0c4:	e1bffe17 	ldw	r6,-8(fp)
  80a0c8:	e17ffd17 	ldw	r5,-12(fp)
  80a0cc:	e13ffc17 	ldw	r4,-16(fp)
  80a0d0:	080a2480 	call	80a248 <alt_iic_isr_register>
}  
  80a0d4:	e037883a 	mov	sp,fp
  80a0d8:	dfc00117 	ldw	ra,4(sp)
  80a0dc:	df000017 	ldw	fp,0(sp)
  80a0e0:	dec00204 	addi	sp,sp,8
  80a0e4:	f800283a 	ret

0080a0e8 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  80a0e8:	defff904 	addi	sp,sp,-28
  80a0ec:	df000615 	stw	fp,24(sp)
  80a0f0:	df000604 	addi	fp,sp,24
  80a0f4:	e13ffe15 	stw	r4,-8(fp)
  80a0f8:	e17fff15 	stw	r5,-4(fp)
  80a0fc:	e0bfff17 	ldw	r2,-4(fp)
  80a100:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80a104:	0005303a 	rdctl	r2,status
  80a108:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80a10c:	e0fffb17 	ldw	r3,-20(fp)
  80a110:	00bfff84 	movi	r2,-2
  80a114:	1884703a 	and	r2,r3,r2
  80a118:	1001703a 	wrctl	status,r2
  
  return context;
  80a11c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80a120:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
  80a124:	00c00044 	movi	r3,1
  80a128:	e0bffa17 	ldw	r2,-24(fp)
  80a12c:	1884983a 	sll	r2,r3,r2
  80a130:	1007883a 	mov	r3,r2
  80a134:	d0a0cb17 	ldw	r2,-31956(gp)
  80a138:	1884b03a 	or	r2,r3,r2
  80a13c:	d0a0cb15 	stw	r2,-31956(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80a140:	d0a0cb17 	ldw	r2,-31956(gp)
  80a144:	100170fa 	wrctl	ienable,r2
  80a148:	e0bffc17 	ldw	r2,-16(fp)
  80a14c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80a150:	e0bffd17 	ldw	r2,-12(fp)
  80a154:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80a158:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
  80a15c:	0001883a 	nop
}
  80a160:	e037883a 	mov	sp,fp
  80a164:	df000017 	ldw	fp,0(sp)
  80a168:	dec00104 	addi	sp,sp,4
  80a16c:	f800283a 	ret

0080a170 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  80a170:	defff904 	addi	sp,sp,-28
  80a174:	df000615 	stw	fp,24(sp)
  80a178:	df000604 	addi	fp,sp,24
  80a17c:	e13ffe15 	stw	r4,-8(fp)
  80a180:	e17fff15 	stw	r5,-4(fp)
  80a184:	e0bfff17 	ldw	r2,-4(fp)
  80a188:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80a18c:	0005303a 	rdctl	r2,status
  80a190:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80a194:	e0fffb17 	ldw	r3,-20(fp)
  80a198:	00bfff84 	movi	r2,-2
  80a19c:	1884703a 	and	r2,r3,r2
  80a1a0:	1001703a 	wrctl	status,r2
  
  return context;
  80a1a4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80a1a8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
  80a1ac:	00c00044 	movi	r3,1
  80a1b0:	e0bffa17 	ldw	r2,-24(fp)
  80a1b4:	1884983a 	sll	r2,r3,r2
  80a1b8:	0084303a 	nor	r2,zero,r2
  80a1bc:	1007883a 	mov	r3,r2
  80a1c0:	d0a0cb17 	ldw	r2,-31956(gp)
  80a1c4:	1884703a 	and	r2,r3,r2
  80a1c8:	d0a0cb15 	stw	r2,-31956(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80a1cc:	d0a0cb17 	ldw	r2,-31956(gp)
  80a1d0:	100170fa 	wrctl	ienable,r2
  80a1d4:	e0bffc17 	ldw	r2,-16(fp)
  80a1d8:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80a1dc:	e0bffd17 	ldw	r2,-12(fp)
  80a1e0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
  80a1e4:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
  80a1e8:	0001883a 	nop
}
  80a1ec:	e037883a 	mov	sp,fp
  80a1f0:	df000017 	ldw	fp,0(sp)
  80a1f4:	dec00104 	addi	sp,sp,4
  80a1f8:	f800283a 	ret

0080a1fc <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  80a1fc:	defffc04 	addi	sp,sp,-16
  80a200:	df000315 	stw	fp,12(sp)
  80a204:	df000304 	addi	fp,sp,12
  80a208:	e13ffe15 	stw	r4,-8(fp)
  80a20c:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  80a210:	000530fa 	rdctl	r2,ienable
  80a214:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  80a218:	00c00044 	movi	r3,1
  80a21c:	e0bfff17 	ldw	r2,-4(fp)
  80a220:	1884983a 	sll	r2,r3,r2
  80a224:	1007883a 	mov	r3,r2
  80a228:	e0bffd17 	ldw	r2,-12(fp)
  80a22c:	1884703a 	and	r2,r3,r2
  80a230:	1004c03a 	cmpne	r2,r2,zero
  80a234:	10803fcc 	andi	r2,r2,255
}
  80a238:	e037883a 	mov	sp,fp
  80a23c:	df000017 	ldw	fp,0(sp)
  80a240:	dec00104 	addi	sp,sp,4
  80a244:	f800283a 	ret

0080a248 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80a248:	defff504 	addi	sp,sp,-44
  80a24c:	dfc00a15 	stw	ra,40(sp)
  80a250:	df000915 	stw	fp,36(sp)
  80a254:	df000904 	addi	fp,sp,36
  80a258:	e13ffc15 	stw	r4,-16(fp)
  80a25c:	e17ffd15 	stw	r5,-12(fp)
  80a260:	e1bffe15 	stw	r6,-8(fp)
  80a264:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
  80a268:	00bffa84 	movi	r2,-22
  80a26c:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  80a270:	e0bffd17 	ldw	r2,-12(fp)
  80a274:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  80a278:	e0bff817 	ldw	r2,-32(fp)
  80a27c:	10800808 	cmpgei	r2,r2,32
  80a280:	1000271e 	bne	r2,zero,80a320 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80a284:	0005303a 	rdctl	r2,status
  80a288:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80a28c:	e0fffb17 	ldw	r3,-20(fp)
  80a290:	00bfff84 	movi	r2,-2
  80a294:	1884703a 	and	r2,r3,r2
  80a298:	1001703a 	wrctl	status,r2
  
  return context;
  80a29c:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  80a2a0:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
  80a2a4:	00802074 	movhi	r2,129
  80a2a8:	10ae2804 	addi	r2,r2,-18272
  80a2ac:	e0fff817 	ldw	r3,-32(fp)
  80a2b0:	180690fa 	slli	r3,r3,3
  80a2b4:	10c5883a 	add	r2,r2,r3
  80a2b8:	e0fffe17 	ldw	r3,-8(fp)
  80a2bc:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
  80a2c0:	00802074 	movhi	r2,129
  80a2c4:	10ae2804 	addi	r2,r2,-18272
  80a2c8:	e0fff817 	ldw	r3,-32(fp)
  80a2cc:	180690fa 	slli	r3,r3,3
  80a2d0:	10c5883a 	add	r2,r2,r3
  80a2d4:	10800104 	addi	r2,r2,4
  80a2d8:	e0ffff17 	ldw	r3,-4(fp)
  80a2dc:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  80a2e0:	e0bffe17 	ldw	r2,-8(fp)
  80a2e4:	10000526 	beq	r2,zero,80a2fc <alt_iic_isr_register+0xb4>
  80a2e8:	e0bff817 	ldw	r2,-32(fp)
  80a2ec:	100b883a 	mov	r5,r2
  80a2f0:	e13ffc17 	ldw	r4,-16(fp)
  80a2f4:	080a0e80 	call	80a0e8 <alt_ic_irq_enable>
  80a2f8:	00000406 	br	80a30c <alt_iic_isr_register+0xc4>
  80a2fc:	e0bff817 	ldw	r2,-32(fp)
  80a300:	100b883a 	mov	r5,r2
  80a304:	e13ffc17 	ldw	r4,-16(fp)
  80a308:	080a1700 	call	80a170 <alt_ic_irq_disable>
  80a30c:	e0bff715 	stw	r2,-36(fp)
  80a310:	e0bffa17 	ldw	r2,-24(fp)
  80a314:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80a318:	e0bff917 	ldw	r2,-28(fp)
  80a31c:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
  80a320:	e0bff717 	ldw	r2,-36(fp)
}
  80a324:	e037883a 	mov	sp,fp
  80a328:	dfc00117 	ldw	ra,4(sp)
  80a32c:	df000017 	ldw	fp,0(sp)
  80a330:	dec00204 	addi	sp,sp,8
  80a334:	f800283a 	ret

0080a338 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  80a338:	defff904 	addi	sp,sp,-28
  80a33c:	dfc00615 	stw	ra,24(sp)
  80a340:	df000515 	stw	fp,20(sp)
  80a344:	df000504 	addi	fp,sp,20
  80a348:	e13ffc15 	stw	r4,-16(fp)
  80a34c:	e17ffd15 	stw	r5,-12(fp)
  80a350:	e1bffe15 	stw	r6,-8(fp)
  80a354:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
  80a358:	e1bfff17 	ldw	r6,-4(fp)
  80a35c:	e17ffe17 	ldw	r5,-8(fp)
  80a360:	e13ffd17 	ldw	r4,-12(fp)
  80a364:	080a5780 	call	80a578 <open>
  80a368:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
  80a36c:	e0bffb17 	ldw	r2,-20(fp)
  80a370:	10001c16 	blt	r2,zero,80a3e4 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
  80a374:	00802074 	movhi	r2,129
  80a378:	10acfa04 	addi	r2,r2,-19480
  80a37c:	e0fffb17 	ldw	r3,-20(fp)
  80a380:	18c00324 	muli	r3,r3,12
  80a384:	10c5883a 	add	r2,r2,r3
  80a388:	10c00017 	ldw	r3,0(r2)
  80a38c:	e0bffc17 	ldw	r2,-16(fp)
  80a390:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  80a394:	00802074 	movhi	r2,129
  80a398:	10acfa04 	addi	r2,r2,-19480
  80a39c:	e0fffb17 	ldw	r3,-20(fp)
  80a3a0:	18c00324 	muli	r3,r3,12
  80a3a4:	10c5883a 	add	r2,r2,r3
  80a3a8:	10800104 	addi	r2,r2,4
  80a3ac:	10c00017 	ldw	r3,0(r2)
  80a3b0:	e0bffc17 	ldw	r2,-16(fp)
  80a3b4:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  80a3b8:	00802074 	movhi	r2,129
  80a3bc:	10acfa04 	addi	r2,r2,-19480
  80a3c0:	e0fffb17 	ldw	r3,-20(fp)
  80a3c4:	18c00324 	muli	r3,r3,12
  80a3c8:	10c5883a 	add	r2,r2,r3
  80a3cc:	10800204 	addi	r2,r2,8
  80a3d0:	10c00017 	ldw	r3,0(r2)
  80a3d4:	e0bffc17 	ldw	r2,-16(fp)
  80a3d8:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  80a3dc:	e13ffb17 	ldw	r4,-20(fp)
  80a3e0:	080a6cc0 	call	80a6cc <alt_release_fd>
  }
} 
  80a3e4:	0001883a 	nop
  80a3e8:	e037883a 	mov	sp,fp
  80a3ec:	dfc00117 	ldw	ra,4(sp)
  80a3f0:	df000017 	ldw	fp,0(sp)
  80a3f4:	dec00204 	addi	sp,sp,8
  80a3f8:	f800283a 	ret

0080a3fc <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  80a3fc:	defffb04 	addi	sp,sp,-20
  80a400:	dfc00415 	stw	ra,16(sp)
  80a404:	df000315 	stw	fp,12(sp)
  80a408:	df000304 	addi	fp,sp,12
  80a40c:	e13ffd15 	stw	r4,-12(fp)
  80a410:	e17ffe15 	stw	r5,-8(fp)
  80a414:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  80a418:	01c07fc4 	movi	r7,511
  80a41c:	01800044 	movi	r6,1
  80a420:	e17ffd17 	ldw	r5,-12(fp)
  80a424:	01002074 	movhi	r4,129
  80a428:	212cfd04 	addi	r4,r4,-19468
  80a42c:	080a3380 	call	80a338 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  80a430:	01c07fc4 	movi	r7,511
  80a434:	000d883a 	mov	r6,zero
  80a438:	e17ffe17 	ldw	r5,-8(fp)
  80a43c:	01002074 	movhi	r4,129
  80a440:	212cfa04 	addi	r4,r4,-19480
  80a444:	080a3380 	call	80a338 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  80a448:	01c07fc4 	movi	r7,511
  80a44c:	01800044 	movi	r6,1
  80a450:	e17fff17 	ldw	r5,-4(fp)
  80a454:	01002074 	movhi	r4,129
  80a458:	212d0004 	addi	r4,r4,-19456
  80a45c:	080a3380 	call	80a338 <alt_open_fd>
}  
  80a460:	0001883a 	nop
  80a464:	e037883a 	mov	sp,fp
  80a468:	dfc00117 	ldw	ra,4(sp)
  80a46c:	df000017 	ldw	fp,0(sp)
  80a470:	dec00204 	addi	sp,sp,8
  80a474:	f800283a 	ret

0080a478 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80a478:	defffe04 	addi	sp,sp,-8
  80a47c:	dfc00115 	stw	ra,4(sp)
  80a480:	df000015 	stw	fp,0(sp)
  80a484:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80a488:	d0a00817 	ldw	r2,-32736(gp)
  80a48c:	10000326 	beq	r2,zero,80a49c <alt_get_errno+0x24>
  80a490:	d0a00817 	ldw	r2,-32736(gp)
  80a494:	103ee83a 	callr	r2
  80a498:	00000106 	br	80a4a0 <alt_get_errno+0x28>
  80a49c:	d0a0c704 	addi	r2,gp,-31972
}
  80a4a0:	e037883a 	mov	sp,fp
  80a4a4:	dfc00117 	ldw	ra,4(sp)
  80a4a8:	df000017 	ldw	fp,0(sp)
  80a4ac:	dec00204 	addi	sp,sp,8
  80a4b0:	f800283a 	ret

0080a4b4 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  80a4b4:	defffd04 	addi	sp,sp,-12
  80a4b8:	df000215 	stw	fp,8(sp)
  80a4bc:	df000204 	addi	fp,sp,8
  80a4c0:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  80a4c4:	e0bfff17 	ldw	r2,-4(fp)
  80a4c8:	10800217 	ldw	r2,8(r2)
  80a4cc:	10d00034 	orhi	r3,r2,16384
  80a4d0:	e0bfff17 	ldw	r2,-4(fp)
  80a4d4:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80a4d8:	e03ffe15 	stw	zero,-8(fp)
  80a4dc:	00001d06 	br	80a554 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80a4e0:	00802074 	movhi	r2,129
  80a4e4:	10acfa04 	addi	r2,r2,-19480
  80a4e8:	e0fffe17 	ldw	r3,-8(fp)
  80a4ec:	18c00324 	muli	r3,r3,12
  80a4f0:	10c5883a 	add	r2,r2,r3
  80a4f4:	10c00017 	ldw	r3,0(r2)
  80a4f8:	e0bfff17 	ldw	r2,-4(fp)
  80a4fc:	10800017 	ldw	r2,0(r2)
  80a500:	1880111e 	bne	r3,r2,80a548 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80a504:	00802074 	movhi	r2,129
  80a508:	10acfa04 	addi	r2,r2,-19480
  80a50c:	e0fffe17 	ldw	r3,-8(fp)
  80a510:	18c00324 	muli	r3,r3,12
  80a514:	10c5883a 	add	r2,r2,r3
  80a518:	10800204 	addi	r2,r2,8
  80a51c:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80a520:	1000090e 	bge	r2,zero,80a548 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
  80a524:	e0bffe17 	ldw	r2,-8(fp)
  80a528:	10c00324 	muli	r3,r2,12
  80a52c:	00802074 	movhi	r2,129
  80a530:	10acfa04 	addi	r2,r2,-19480
  80a534:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80a538:	e0bfff17 	ldw	r2,-4(fp)
  80a53c:	18800226 	beq	r3,r2,80a548 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
  80a540:	00bffcc4 	movi	r2,-13
  80a544:	00000806 	br	80a568 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80a548:	e0bffe17 	ldw	r2,-8(fp)
  80a54c:	10800044 	addi	r2,r2,1
  80a550:	e0bffe15 	stw	r2,-8(fp)
  80a554:	d0a00717 	ldw	r2,-32740(gp)
  80a558:	1007883a 	mov	r3,r2
  80a55c:	e0bffe17 	ldw	r2,-8(fp)
  80a560:	18bfdf2e 	bgeu	r3,r2,80a4e0 <__alt_data_end+0xff80a4e0>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  80a564:	0005883a 	mov	r2,zero
}
  80a568:	e037883a 	mov	sp,fp
  80a56c:	df000017 	ldw	fp,0(sp)
  80a570:	dec00104 	addi	sp,sp,4
  80a574:	f800283a 	ret

0080a578 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  80a578:	defff604 	addi	sp,sp,-40
  80a57c:	dfc00915 	stw	ra,36(sp)
  80a580:	df000815 	stw	fp,32(sp)
  80a584:	df000804 	addi	fp,sp,32
  80a588:	e13ffd15 	stw	r4,-12(fp)
  80a58c:	e17ffe15 	stw	r5,-8(fp)
  80a590:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  80a594:	00bfffc4 	movi	r2,-1
  80a598:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
  80a59c:	00bffb44 	movi	r2,-19
  80a5a0:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
  80a5a4:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  80a5a8:	d1600504 	addi	r5,gp,-32748
  80a5ac:	e13ffd17 	ldw	r4,-12(fp)
  80a5b0:	080a8f80 	call	80a8f8 <alt_find_dev>
  80a5b4:	e0bff815 	stw	r2,-32(fp)
  80a5b8:	e0bff817 	ldw	r2,-32(fp)
  80a5bc:	1000051e 	bne	r2,zero,80a5d4 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  80a5c0:	e13ffd17 	ldw	r4,-12(fp)
  80a5c4:	080a9880 	call	80a988 <alt_find_file>
  80a5c8:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
  80a5cc:	00800044 	movi	r2,1
  80a5d0:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  80a5d4:	e0bff817 	ldw	r2,-32(fp)
  80a5d8:	10002926 	beq	r2,zero,80a680 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
  80a5dc:	e13ff817 	ldw	r4,-32(fp)
  80a5e0:	080aa900 	call	80aa90 <alt_get_fd>
  80a5e4:	e0bff915 	stw	r2,-28(fp)
  80a5e8:	e0bff917 	ldw	r2,-28(fp)
  80a5ec:	1000030e 	bge	r2,zero,80a5fc <open+0x84>
    {
      status = index;
  80a5f0:	e0bff917 	ldw	r2,-28(fp)
  80a5f4:	e0bffa15 	stw	r2,-24(fp)
  80a5f8:	00002306 	br	80a688 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
  80a5fc:	e0bff917 	ldw	r2,-28(fp)
  80a600:	10c00324 	muli	r3,r2,12
  80a604:	00802074 	movhi	r2,129
  80a608:	10acfa04 	addi	r2,r2,-19480
  80a60c:	1885883a 	add	r2,r3,r2
  80a610:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  80a614:	e0fffe17 	ldw	r3,-8(fp)
  80a618:	00900034 	movhi	r2,16384
  80a61c:	10bfffc4 	addi	r2,r2,-1
  80a620:	1886703a 	and	r3,r3,r2
  80a624:	e0bffc17 	ldw	r2,-16(fp)
  80a628:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  80a62c:	e0bffb17 	ldw	r2,-20(fp)
  80a630:	1000051e 	bne	r2,zero,80a648 <open+0xd0>
  80a634:	e13ffc17 	ldw	r4,-16(fp)
  80a638:	080a4b40 	call	80a4b4 <alt_file_locked>
  80a63c:	e0bffa15 	stw	r2,-24(fp)
  80a640:	e0bffa17 	ldw	r2,-24(fp)
  80a644:	10001016 	blt	r2,zero,80a688 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  80a648:	e0bff817 	ldw	r2,-32(fp)
  80a64c:	10800317 	ldw	r2,12(r2)
  80a650:	10000826 	beq	r2,zero,80a674 <open+0xfc>
  80a654:	e0bff817 	ldw	r2,-32(fp)
  80a658:	10800317 	ldw	r2,12(r2)
  80a65c:	e1ffff17 	ldw	r7,-4(fp)
  80a660:	e1bffe17 	ldw	r6,-8(fp)
  80a664:	e17ffd17 	ldw	r5,-12(fp)
  80a668:	e13ffc17 	ldw	r4,-16(fp)
  80a66c:	103ee83a 	callr	r2
  80a670:	00000106 	br	80a678 <open+0x100>
  80a674:	0005883a 	mov	r2,zero
  80a678:	e0bffa15 	stw	r2,-24(fp)
  80a67c:	00000206 	br	80a688 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
  80a680:	00bffb44 	movi	r2,-19
  80a684:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  80a688:	e0bffa17 	ldw	r2,-24(fp)
  80a68c:	1000090e 	bge	r2,zero,80a6b4 <open+0x13c>
  {
    alt_release_fd (index);  
  80a690:	e13ff917 	ldw	r4,-28(fp)
  80a694:	080a6cc0 	call	80a6cc <alt_release_fd>
    ALT_ERRNO = -status;
  80a698:	080a4780 	call	80a478 <alt_get_errno>
  80a69c:	1007883a 	mov	r3,r2
  80a6a0:	e0bffa17 	ldw	r2,-24(fp)
  80a6a4:	0085c83a 	sub	r2,zero,r2
  80a6a8:	18800015 	stw	r2,0(r3)
    return -1;
  80a6ac:	00bfffc4 	movi	r2,-1
  80a6b0:	00000106 	br	80a6b8 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
  80a6b4:	e0bff917 	ldw	r2,-28(fp)
}
  80a6b8:	e037883a 	mov	sp,fp
  80a6bc:	dfc00117 	ldw	ra,4(sp)
  80a6c0:	df000017 	ldw	fp,0(sp)
  80a6c4:	dec00204 	addi	sp,sp,8
  80a6c8:	f800283a 	ret

0080a6cc <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80a6cc:	defffe04 	addi	sp,sp,-8
  80a6d0:	df000115 	stw	fp,4(sp)
  80a6d4:	df000104 	addi	fp,sp,4
  80a6d8:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  80a6dc:	e0bfff17 	ldw	r2,-4(fp)
  80a6e0:	108000d0 	cmplti	r2,r2,3
  80a6e4:	10000d1e 	bne	r2,zero,80a71c <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
  80a6e8:	00802074 	movhi	r2,129
  80a6ec:	10acfa04 	addi	r2,r2,-19480
  80a6f0:	e0ffff17 	ldw	r3,-4(fp)
  80a6f4:	18c00324 	muli	r3,r3,12
  80a6f8:	10c5883a 	add	r2,r2,r3
  80a6fc:	10800204 	addi	r2,r2,8
  80a700:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
  80a704:	00802074 	movhi	r2,129
  80a708:	10acfa04 	addi	r2,r2,-19480
  80a70c:	e0ffff17 	ldw	r3,-4(fp)
  80a710:	18c00324 	muli	r3,r3,12
  80a714:	10c5883a 	add	r2,r2,r3
  80a718:	10000015 	stw	zero,0(r2)
  }
}
  80a71c:	0001883a 	nop
  80a720:	e037883a 	mov	sp,fp
  80a724:	df000017 	ldw	fp,0(sp)
  80a728:	dec00104 	addi	sp,sp,4
  80a72c:	f800283a 	ret

0080a730 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  80a730:	defffa04 	addi	sp,sp,-24
  80a734:	df000515 	stw	fp,20(sp)
  80a738:	df000504 	addi	fp,sp,20
  80a73c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
  80a740:	0005303a 	rdctl	r2,status
  80a744:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80a748:	e0fffc17 	ldw	r3,-16(fp)
  80a74c:	00bfff84 	movi	r2,-2
  80a750:	1884703a 	and	r2,r3,r2
  80a754:	1001703a 	wrctl	status,r2
  
  return context;
  80a758:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  80a75c:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
  80a760:	e0bfff17 	ldw	r2,-4(fp)
  80a764:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  80a768:	e0bffd17 	ldw	r2,-12(fp)
  80a76c:	10800017 	ldw	r2,0(r2)
  80a770:	e0fffd17 	ldw	r3,-12(fp)
  80a774:	18c00117 	ldw	r3,4(r3)
  80a778:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  80a77c:	e0bffd17 	ldw	r2,-12(fp)
  80a780:	10800117 	ldw	r2,4(r2)
  80a784:	e0fffd17 	ldw	r3,-12(fp)
  80a788:	18c00017 	ldw	r3,0(r3)
  80a78c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  80a790:	e0bffd17 	ldw	r2,-12(fp)
  80a794:	e0fffd17 	ldw	r3,-12(fp)
  80a798:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  80a79c:	e0bffd17 	ldw	r2,-12(fp)
  80a7a0:	e0fffd17 	ldw	r3,-12(fp)
  80a7a4:	10c00015 	stw	r3,0(r2)
  80a7a8:	e0bffb17 	ldw	r2,-20(fp)
  80a7ac:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
  80a7b0:	e0bffe17 	ldw	r2,-8(fp)
  80a7b4:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
  80a7b8:	0001883a 	nop
  80a7bc:	e037883a 	mov	sp,fp
  80a7c0:	df000017 	ldw	fp,0(sp)
  80a7c4:	dec00104 	addi	sp,sp,4
  80a7c8:	f800283a 	ret

0080a7cc <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  80a7cc:	defffb04 	addi	sp,sp,-20
  80a7d0:	dfc00415 	stw	ra,16(sp)
  80a7d4:	df000315 	stw	fp,12(sp)
  80a7d8:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  80a7dc:	d0a00a17 	ldw	r2,-32728(gp)
  80a7e0:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  80a7e4:	d0a0cd17 	ldw	r2,-31948(gp)
  80a7e8:	10800044 	addi	r2,r2,1
  80a7ec:	d0a0cd15 	stw	r2,-31948(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80a7f0:	00002e06 	br	80a8ac <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  80a7f4:	e0bffd17 	ldw	r2,-12(fp)
  80a7f8:	10800017 	ldw	r2,0(r2)
  80a7fc:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  80a800:	e0bffd17 	ldw	r2,-12(fp)
  80a804:	10800403 	ldbu	r2,16(r2)
  80a808:	10803fcc 	andi	r2,r2,255
  80a80c:	10000426 	beq	r2,zero,80a820 <alt_tick+0x54>
  80a810:	d0a0cd17 	ldw	r2,-31948(gp)
  80a814:	1000021e 	bne	r2,zero,80a820 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  80a818:	e0bffd17 	ldw	r2,-12(fp)
  80a81c:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  80a820:	e0bffd17 	ldw	r2,-12(fp)
  80a824:	10800217 	ldw	r2,8(r2)
  80a828:	d0e0cd17 	ldw	r3,-31948(gp)
  80a82c:	18801d36 	bltu	r3,r2,80a8a4 <alt_tick+0xd8>
  80a830:	e0bffd17 	ldw	r2,-12(fp)
  80a834:	10800403 	ldbu	r2,16(r2)
  80a838:	10803fcc 	andi	r2,r2,255
  80a83c:	1000191e 	bne	r2,zero,80a8a4 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  80a840:	e0bffd17 	ldw	r2,-12(fp)
  80a844:	10800317 	ldw	r2,12(r2)
  80a848:	e0fffd17 	ldw	r3,-12(fp)
  80a84c:	18c00517 	ldw	r3,20(r3)
  80a850:	1809883a 	mov	r4,r3
  80a854:	103ee83a 	callr	r2
  80a858:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  80a85c:	e0bfff17 	ldw	r2,-4(fp)
  80a860:	1000031e 	bne	r2,zero,80a870 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  80a864:	e13ffd17 	ldw	r4,-12(fp)
  80a868:	080a7300 	call	80a730 <alt_alarm_stop>
  80a86c:	00000d06 	br	80a8a4 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  80a870:	e0bffd17 	ldw	r2,-12(fp)
  80a874:	10c00217 	ldw	r3,8(r2)
  80a878:	e0bfff17 	ldw	r2,-4(fp)
  80a87c:	1887883a 	add	r3,r3,r2
  80a880:	e0bffd17 	ldw	r2,-12(fp)
  80a884:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  80a888:	e0bffd17 	ldw	r2,-12(fp)
  80a88c:	10c00217 	ldw	r3,8(r2)
  80a890:	d0a0cd17 	ldw	r2,-31948(gp)
  80a894:	1880032e 	bgeu	r3,r2,80a8a4 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  80a898:	e0bffd17 	ldw	r2,-12(fp)
  80a89c:	00c00044 	movi	r3,1
  80a8a0:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  80a8a4:	e0bffe17 	ldw	r2,-8(fp)
  80a8a8:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80a8ac:	e0fffd17 	ldw	r3,-12(fp)
  80a8b0:	d0a00a04 	addi	r2,gp,-32728
  80a8b4:	18bfcf1e 	bne	r3,r2,80a7f4 <__alt_data_end+0xff80a7f4>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  80a8b8:	0001883a 	nop
}
  80a8bc:	0001883a 	nop
  80a8c0:	e037883a 	mov	sp,fp
  80a8c4:	dfc00117 	ldw	ra,4(sp)
  80a8c8:	df000017 	ldw	fp,0(sp)
  80a8cc:	dec00204 	addi	sp,sp,8
  80a8d0:	f800283a 	ret

0080a8d4 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
  80a8d4:	deffff04 	addi	sp,sp,-4
  80a8d8:	df000015 	stw	fp,0(sp)
  80a8dc:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  80a8e0:	000170fa 	wrctl	ienable,zero
}
  80a8e4:	0001883a 	nop
  80a8e8:	e037883a 	mov	sp,fp
  80a8ec:	df000017 	ldw	fp,0(sp)
  80a8f0:	dec00104 	addi	sp,sp,4
  80a8f4:	f800283a 	ret

0080a8f8 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  80a8f8:	defffa04 	addi	sp,sp,-24
  80a8fc:	dfc00515 	stw	ra,20(sp)
  80a900:	df000415 	stw	fp,16(sp)
  80a904:	df000404 	addi	fp,sp,16
  80a908:	e13ffe15 	stw	r4,-8(fp)
  80a90c:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
  80a910:	e0bfff17 	ldw	r2,-4(fp)
  80a914:	10800017 	ldw	r2,0(r2)
  80a918:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  80a91c:	e13ffe17 	ldw	r4,-8(fp)
  80a920:	08058d80 	call	8058d8 <strlen>
  80a924:	10800044 	addi	r2,r2,1
  80a928:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80a92c:	00000d06 	br	80a964 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  80a930:	e0bffc17 	ldw	r2,-16(fp)
  80a934:	10800217 	ldw	r2,8(r2)
  80a938:	e0fffd17 	ldw	r3,-12(fp)
  80a93c:	180d883a 	mov	r6,r3
  80a940:	e17ffe17 	ldw	r5,-8(fp)
  80a944:	1009883a 	mov	r4,r2
  80a948:	080ac3c0 	call	80ac3c <memcmp>
  80a94c:	1000021e 	bne	r2,zero,80a958 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  80a950:	e0bffc17 	ldw	r2,-16(fp)
  80a954:	00000706 	br	80a974 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  80a958:	e0bffc17 	ldw	r2,-16(fp)
  80a95c:	10800017 	ldw	r2,0(r2)
  80a960:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80a964:	e0fffc17 	ldw	r3,-16(fp)
  80a968:	e0bfff17 	ldw	r2,-4(fp)
  80a96c:	18bff01e 	bne	r3,r2,80a930 <__alt_data_end+0xff80a930>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
  80a970:	0005883a 	mov	r2,zero
}
  80a974:	e037883a 	mov	sp,fp
  80a978:	dfc00117 	ldw	ra,4(sp)
  80a97c:	df000017 	ldw	fp,0(sp)
  80a980:	dec00204 	addi	sp,sp,8
  80a984:	f800283a 	ret

0080a988 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  80a988:	defffb04 	addi	sp,sp,-20
  80a98c:	dfc00415 	stw	ra,16(sp)
  80a990:	df000315 	stw	fp,12(sp)
  80a994:	df000304 	addi	fp,sp,12
  80a998:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  80a99c:	d0a00317 	ldw	r2,-32756(gp)
  80a9a0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  80a9a4:	00003106 	br	80aa6c <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  80a9a8:	e0bffd17 	ldw	r2,-12(fp)
  80a9ac:	10800217 	ldw	r2,8(r2)
  80a9b0:	1009883a 	mov	r4,r2
  80a9b4:	08058d80 	call	8058d8 <strlen>
  80a9b8:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  80a9bc:	e0bffd17 	ldw	r2,-12(fp)
  80a9c0:	10c00217 	ldw	r3,8(r2)
  80a9c4:	e0bffe17 	ldw	r2,-8(fp)
  80a9c8:	10bfffc4 	addi	r2,r2,-1
  80a9cc:	1885883a 	add	r2,r3,r2
  80a9d0:	10800003 	ldbu	r2,0(r2)
  80a9d4:	10803fcc 	andi	r2,r2,255
  80a9d8:	1080201c 	xori	r2,r2,128
  80a9dc:	10bfe004 	addi	r2,r2,-128
  80a9e0:	10800bd8 	cmpnei	r2,r2,47
  80a9e4:	1000031e 	bne	r2,zero,80a9f4 <alt_find_file+0x6c>
    {
      len -= 1;
  80a9e8:	e0bffe17 	ldw	r2,-8(fp)
  80a9ec:	10bfffc4 	addi	r2,r2,-1
  80a9f0:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  80a9f4:	e0bffe17 	ldw	r2,-8(fp)
  80a9f8:	e0ffff17 	ldw	r3,-4(fp)
  80a9fc:	1885883a 	add	r2,r3,r2
  80aa00:	10800003 	ldbu	r2,0(r2)
  80aa04:	10803fcc 	andi	r2,r2,255
  80aa08:	1080201c 	xori	r2,r2,128
  80aa0c:	10bfe004 	addi	r2,r2,-128
  80aa10:	10800be0 	cmpeqi	r2,r2,47
  80aa14:	1000081e 	bne	r2,zero,80aa38 <alt_find_file+0xb0>
  80aa18:	e0bffe17 	ldw	r2,-8(fp)
  80aa1c:	e0ffff17 	ldw	r3,-4(fp)
  80aa20:	1885883a 	add	r2,r3,r2
  80aa24:	10800003 	ldbu	r2,0(r2)
  80aa28:	10803fcc 	andi	r2,r2,255
  80aa2c:	1080201c 	xori	r2,r2,128
  80aa30:	10bfe004 	addi	r2,r2,-128
  80aa34:	10000a1e 	bne	r2,zero,80aa60 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  80aa38:	e0bffd17 	ldw	r2,-12(fp)
  80aa3c:	10800217 	ldw	r2,8(r2)
  80aa40:	e0fffe17 	ldw	r3,-8(fp)
  80aa44:	180d883a 	mov	r6,r3
  80aa48:	e17fff17 	ldw	r5,-4(fp)
  80aa4c:	1009883a 	mov	r4,r2
  80aa50:	080ac3c0 	call	80ac3c <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  80aa54:	1000021e 	bne	r2,zero,80aa60 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
  80aa58:	e0bffd17 	ldw	r2,-12(fp)
  80aa5c:	00000706 	br	80aa7c <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  80aa60:	e0bffd17 	ldw	r2,-12(fp)
  80aa64:	10800017 	ldw	r2,0(r2)
  80aa68:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  80aa6c:	e0fffd17 	ldw	r3,-12(fp)
  80aa70:	d0a00304 	addi	r2,gp,-32756
  80aa74:	18bfcc1e 	bne	r3,r2,80a9a8 <__alt_data_end+0xff80a9a8>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
  80aa78:	0005883a 	mov	r2,zero
}
  80aa7c:	e037883a 	mov	sp,fp
  80aa80:	dfc00117 	ldw	ra,4(sp)
  80aa84:	df000017 	ldw	fp,0(sp)
  80aa88:	dec00204 	addi	sp,sp,8
  80aa8c:	f800283a 	ret

0080aa90 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  80aa90:	defffc04 	addi	sp,sp,-16
  80aa94:	df000315 	stw	fp,12(sp)
  80aa98:	df000304 	addi	fp,sp,12
  80aa9c:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
  80aaa0:	00bffa04 	movi	r2,-24
  80aaa4:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  80aaa8:	e03ffd15 	stw	zero,-12(fp)
  80aaac:	00001906 	br	80ab14 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
  80aab0:	00802074 	movhi	r2,129
  80aab4:	10acfa04 	addi	r2,r2,-19480
  80aab8:	e0fffd17 	ldw	r3,-12(fp)
  80aabc:	18c00324 	muli	r3,r3,12
  80aac0:	10c5883a 	add	r2,r2,r3
  80aac4:	10800017 	ldw	r2,0(r2)
  80aac8:	10000f1e 	bne	r2,zero,80ab08 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
  80aacc:	00802074 	movhi	r2,129
  80aad0:	10acfa04 	addi	r2,r2,-19480
  80aad4:	e0fffd17 	ldw	r3,-12(fp)
  80aad8:	18c00324 	muli	r3,r3,12
  80aadc:	10c5883a 	add	r2,r2,r3
  80aae0:	e0ffff17 	ldw	r3,-4(fp)
  80aae4:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
  80aae8:	d0e00717 	ldw	r3,-32740(gp)
  80aaec:	e0bffd17 	ldw	r2,-12(fp)
  80aaf0:	1880020e 	bge	r3,r2,80aafc <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
  80aaf4:	e0bffd17 	ldw	r2,-12(fp)
  80aaf8:	d0a00715 	stw	r2,-32740(gp)
      }
      rc = i;
  80aafc:	e0bffd17 	ldw	r2,-12(fp)
  80ab00:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  80ab04:	00000606 	br	80ab20 <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  80ab08:	e0bffd17 	ldw	r2,-12(fp)
  80ab0c:	10800044 	addi	r2,r2,1
  80ab10:	e0bffd15 	stw	r2,-12(fp)
  80ab14:	e0bffd17 	ldw	r2,-12(fp)
  80ab18:	10800810 	cmplti	r2,r2,32
  80ab1c:	103fe41e 	bne	r2,zero,80aab0 <__alt_data_end+0xff80aab0>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  80ab20:	e0bffe17 	ldw	r2,-8(fp)
}
  80ab24:	e037883a 	mov	sp,fp
  80ab28:	df000017 	ldw	fp,0(sp)
  80ab2c:	dec00104 	addi	sp,sp,4
  80ab30:	f800283a 	ret

0080ab34 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  80ab34:	defffb04 	addi	sp,sp,-20
  80ab38:	df000415 	stw	fp,16(sp)
  80ab3c:	df000404 	addi	fp,sp,16
  80ab40:	e13ffe15 	stw	r4,-8(fp)
  80ab44:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  80ab48:	e0bfff17 	ldw	r2,-4(fp)
  80ab4c:	10820070 	cmpltui	r2,r2,2049
  80ab50:	1000021e 	bne	r2,zero,80ab5c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  80ab54:	00820004 	movi	r2,2048
  80ab58:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
  80ab5c:	e0fffe17 	ldw	r3,-8(fp)
  80ab60:	e0bfff17 	ldw	r2,-4(fp)
  80ab64:	1885883a 	add	r2,r3,r2
  80ab68:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80ab6c:	e0bffe17 	ldw	r2,-8(fp)
  80ab70:	e0bffc15 	stw	r2,-16(fp)
  80ab74:	00000506 	br	80ab8c <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  80ab78:	e0bffc17 	ldw	r2,-16(fp)
  80ab7c:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80ab80:	e0bffc17 	ldw	r2,-16(fp)
  80ab84:	10800804 	addi	r2,r2,32
  80ab88:	e0bffc15 	stw	r2,-16(fp)
  80ab8c:	e0fffc17 	ldw	r3,-16(fp)
  80ab90:	e0bffd17 	ldw	r2,-12(fp)
  80ab94:	18bff836 	bltu	r3,r2,80ab78 <__alt_data_end+0xff80ab78>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  80ab98:	e0bffe17 	ldw	r2,-8(fp)
  80ab9c:	108007cc 	andi	r2,r2,31
  80aba0:	10000226 	beq	r2,zero,80abac <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  80aba4:	e0bffc17 	ldw	r2,-16(fp)
  80aba8:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  80abac:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  80abb0:	0001883a 	nop
  80abb4:	e037883a 	mov	sp,fp
  80abb8:	df000017 	ldw	fp,0(sp)
  80abbc:	dec00104 	addi	sp,sp,4
  80abc0:	f800283a 	ret

0080abc4 <exit>:
  80abc4:	defffe04 	addi	sp,sp,-8
  80abc8:	000b883a 	mov	r5,zero
  80abcc:	dc000015 	stw	r16,0(sp)
  80abd0:	dfc00115 	stw	ra,4(sp)
  80abd4:	2021883a 	mov	r16,r4
  80abd8:	080ac6c0 	call	80ac6c <__call_exitprocs>
  80abdc:	8009883a 	mov	r4,r16
  80abe0:	080adfc0 	call	80adfc <_exit>

0080abe4 <fputs>:
  80abe4:	defffd04 	addi	sp,sp,-12
  80abe8:	dfc00215 	stw	ra,8(sp)
  80abec:	dc000115 	stw	r16,4(sp)
  80abf0:	d9400015 	stw	r5,0(sp)
  80abf4:	2021883a 	mov	r16,r4
  80abf8:	08058d80 	call	8058d8 <strlen>
  80abfc:	100f883a 	mov	r7,r2
  80ac00:	00802074 	movhi	r2,129
  80ac04:	d9400017 	ldw	r5,0(sp)
  80ac08:	10ad5b04 	addi	r2,r2,-19092
  80ac0c:	11000017 	ldw	r4,0(r2)
  80ac10:	00c02034 	movhi	r3,128
  80ac14:	18d8a804 	addi	r3,r3,25248
  80ac18:	28c00115 	stw	r3,4(r5)
  80ac1c:	800d883a 	mov	r6,r16
  80ac20:	08062a00 	call	8062a0 <__sfvwrite_small_dev>
  80ac24:	10bfffe0 	cmpeqi	r2,r2,-1
  80ac28:	0085c83a 	sub	r2,zero,r2
  80ac2c:	dfc00217 	ldw	ra,8(sp)
  80ac30:	dc000117 	ldw	r16,4(sp)
  80ac34:	dec00304 	addi	sp,sp,12
  80ac38:	f800283a 	ret

0080ac3c <memcmp>:
  80ac3c:	218d883a 	add	r6,r4,r6
  80ac40:	21800826 	beq	r4,r6,80ac64 <memcmp+0x28>
  80ac44:	20800003 	ldbu	r2,0(r4)
  80ac48:	28c00003 	ldbu	r3,0(r5)
  80ac4c:	10c00226 	beq	r2,r3,80ac58 <memcmp+0x1c>
  80ac50:	10c5c83a 	sub	r2,r2,r3
  80ac54:	f800283a 	ret
  80ac58:	21000044 	addi	r4,r4,1
  80ac5c:	29400044 	addi	r5,r5,1
  80ac60:	003ff706 	br	80ac40 <__alt_data_end+0xff80ac40>
  80ac64:	0005883a 	mov	r2,zero
  80ac68:	f800283a 	ret

0080ac6c <__call_exitprocs>:
  80ac6c:	defff504 	addi	sp,sp,-44
  80ac70:	dd000515 	stw	r20,20(sp)
  80ac74:	05002074 	movhi	r20,129
  80ac78:	dc800315 	stw	r18,12(sp)
  80ac7c:	dfc00a15 	stw	ra,40(sp)
  80ac80:	df000915 	stw	fp,36(sp)
  80ac84:	ddc00815 	stw	r23,32(sp)
  80ac88:	dd800715 	stw	r22,28(sp)
  80ac8c:	dd400615 	stw	r21,24(sp)
  80ac90:	dcc00415 	stw	r19,16(sp)
  80ac94:	dc400215 	stw	r17,8(sp)
  80ac98:	dc000115 	stw	r16,4(sp)
  80ac9c:	d9000015 	stw	r4,0(sp)
  80aca0:	2825883a 	mov	r18,r5
  80aca4:	a52d5a04 	addi	r20,r20,-19096
  80aca8:	a4400017 	ldw	r17,0(r20)
  80acac:	8cc00c17 	ldw	r19,48(r17)
  80acb0:	8c400c04 	addi	r17,r17,48
  80acb4:	98004526 	beq	r19,zero,80adcc <__call_exitprocs+0x160>
  80acb8:	9c000117 	ldw	r16,4(r19)
  80acbc:	00900034 	movhi	r2,16384
  80acc0:	10bfffc4 	addi	r2,r2,-1
  80acc4:	9d402217 	ldw	r21,136(r19)
  80acc8:	85bfffc4 	addi	r22,r16,-1
  80accc:	80a1883a 	add	r16,r16,r2
  80acd0:	8421883a 	add	r16,r16,r16
  80acd4:	8421883a 	add	r16,r16,r16
  80acd8:	ac2f883a 	add	r23,r21,r16
  80acdc:	84000204 	addi	r16,r16,8
  80ace0:	9c21883a 	add	r16,r19,r16
  80ace4:	b0002716 	blt	r22,zero,80ad84 <__call_exitprocs+0x118>
  80ace8:	90000726 	beq	r18,zero,80ad08 <__call_exitprocs+0x9c>
  80acec:	a800041e 	bne	r21,zero,80ad00 <__call_exitprocs+0x94>
  80acf0:	b5bfffc4 	addi	r22,r22,-1
  80acf4:	bdffff04 	addi	r23,r23,-4
  80acf8:	843fff04 	addi	r16,r16,-4
  80acfc:	003ff906 	br	80ace4 <__alt_data_end+0xff80ace4>
  80ad00:	b9002017 	ldw	r4,128(r23)
  80ad04:	913ffa1e 	bne	r18,r4,80acf0 <__alt_data_end+0xff80acf0>
  80ad08:	99000117 	ldw	r4,4(r19)
  80ad0c:	82000017 	ldw	r8,0(r16)
  80ad10:	213fffc4 	addi	r4,r4,-1
  80ad14:	b100021e 	bne	r22,r4,80ad20 <__call_exitprocs+0xb4>
  80ad18:	9d800115 	stw	r22,4(r19)
  80ad1c:	00000106 	br	80ad24 <__call_exitprocs+0xb8>
  80ad20:	80000015 	stw	zero,0(r16)
  80ad24:	403ff226 	beq	r8,zero,80acf0 <__alt_data_end+0xff80acf0>
  80ad28:	9f000117 	ldw	fp,4(r19)
  80ad2c:	a8000526 	beq	r21,zero,80ad44 <__call_exitprocs+0xd8>
  80ad30:	00800044 	movi	r2,1
  80ad34:	1592983a 	sll	r9,r2,r22
  80ad38:	a9404017 	ldw	r5,256(r21)
  80ad3c:	494a703a 	and	r5,r9,r5
  80ad40:	2800021e 	bne	r5,zero,80ad4c <__call_exitprocs+0xe0>
  80ad44:	403ee83a 	callr	r8
  80ad48:	00000906 	br	80ad70 <__call_exitprocs+0x104>
  80ad4c:	a9004117 	ldw	r4,260(r21)
  80ad50:	4908703a 	and	r4,r9,r4
  80ad54:	2000041e 	bne	r4,zero,80ad68 <__call_exitprocs+0xfc>
  80ad58:	b9400017 	ldw	r5,0(r23)
  80ad5c:	d9000017 	ldw	r4,0(sp)
  80ad60:	403ee83a 	callr	r8
  80ad64:	00000206 	br	80ad70 <__call_exitprocs+0x104>
  80ad68:	b9000017 	ldw	r4,0(r23)
  80ad6c:	403ee83a 	callr	r8
  80ad70:	99000117 	ldw	r4,4(r19)
  80ad74:	e13fcc1e 	bne	fp,r4,80aca8 <__alt_data_end+0xff80aca8>
  80ad78:	89000017 	ldw	r4,0(r17)
  80ad7c:	993fdc26 	beq	r19,r4,80acf0 <__alt_data_end+0xff80acf0>
  80ad80:	003fc906 	br	80aca8 <__alt_data_end+0xff80aca8>
  80ad84:	00802074 	movhi	r2,129
  80ad88:	10a2ac04 	addi	r2,r2,-30032
  80ad8c:	10000f26 	beq	r2,zero,80adcc <__call_exitprocs+0x160>
  80ad90:	99400117 	ldw	r5,4(r19)
  80ad94:	99000017 	ldw	r4,0(r19)
  80ad98:	2800091e 	bne	r5,zero,80adc0 <__call_exitprocs+0x154>
  80ad9c:	20000826 	beq	r4,zero,80adc0 <__call_exitprocs+0x154>
  80ada0:	89000015 	stw	r4,0(r17)
  80ada4:	a8000226 	beq	r21,zero,80adb0 <__call_exitprocs+0x144>
  80ada8:	a809883a 	mov	r4,r21
  80adac:	0808ab00 	call	808ab0 <free>
  80adb0:	9809883a 	mov	r4,r19
  80adb4:	0808ab00 	call	808ab0 <free>
  80adb8:	8cc00017 	ldw	r19,0(r17)
  80adbc:	003fbd06 	br	80acb4 <__alt_data_end+0xff80acb4>
  80adc0:	9823883a 	mov	r17,r19
  80adc4:	2027883a 	mov	r19,r4
  80adc8:	003fba06 	br	80acb4 <__alt_data_end+0xff80acb4>
  80adcc:	dfc00a17 	ldw	ra,40(sp)
  80add0:	df000917 	ldw	fp,36(sp)
  80add4:	ddc00817 	ldw	r23,32(sp)
  80add8:	dd800717 	ldw	r22,28(sp)
  80addc:	dd400617 	ldw	r21,24(sp)
  80ade0:	dd000517 	ldw	r20,20(sp)
  80ade4:	dcc00417 	ldw	r19,16(sp)
  80ade8:	dc800317 	ldw	r18,12(sp)
  80adec:	dc400217 	ldw	r17,8(sp)
  80adf0:	dc000117 	ldw	r16,4(sp)
  80adf4:	dec00b04 	addi	sp,sp,44
  80adf8:	f800283a 	ret

0080adfc <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  80adfc:	defffd04 	addi	sp,sp,-12
  80ae00:	df000215 	stw	fp,8(sp)
  80ae04:	df000204 	addi	fp,sp,8
  80ae08:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  80ae0c:	0001883a 	nop
  80ae10:	e0bfff17 	ldw	r2,-4(fp)
  80ae14:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  80ae18:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  80ae1c:	10000226 	beq	r2,zero,80ae28 <_exit+0x2c>
    ALT_SIM_FAIL();
  80ae20:	002af070 	cmpltui	zero,zero,43969
  80ae24:	00000106 	br	80ae2c <_exit+0x30>
  } else {
    ALT_SIM_PASS();
  80ae28:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  80ae2c:	003fff06 	br	80ae2c <__alt_data_end+0xff80ae2c>
